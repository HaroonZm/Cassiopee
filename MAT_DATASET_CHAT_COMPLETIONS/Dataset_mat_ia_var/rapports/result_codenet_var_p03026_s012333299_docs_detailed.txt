================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

# Lecture du nombre de sommets du graphe
N = int(input())

# Initialisation de la liste d'adjacence : chaque sommet a une liste de voisins
to = [[] for _ in range(N)]

# Lecture des arêtes du graphe non orienté et remplissage de la liste d'adjacence
for _ in range(N - 1):
    # Les sommets sont saisis en base 1, on les convertit en base 0
    a, b = map(lambda x: int(x) - 1, input().split())
    to[a].append(b)
    to[b].append(a)

# Lecture de la liste des valeurs à assigner aux sommets
c = list(map(int, input().split()))
# Trie de la liste pour faciliter l'affectation des plus grandes valeurs en priorité
c.sort()

def main():
    """
    Propage les valeurs dans l'arbre en attribuant la plus grande valeur au sommet 0 
    puis, parcourant l'arbre avec une recherche en largeur (BFS), assigne les plus 
    grandes valeurs restantes aux autres sommets. Calcule et affiche la somme des 
    valeurs assignées à tous les sommets sauf le premier, puis affiche la liste complète
    des valeurs assignées à chaque sommet.
    """
    # ans[i] stocke la valeur assignée au sommet i
    ans = [0] * N
    # Attribution de la plus grande valeur au premier sommet
    ans[0] = c.pop()
    # S contiendra la somme des valeurs attribuées, sauf la première
    S = 0

    # Tableau des sommets déjà visités pour le parcours BFS
    seen = [0] * N
    seen[0] = 1  # On marque le sommet 0 comme visité
    # File pour le parcours BFS, initialisée avec le sommet 0
    que = deque([0])

    # Parcours BFS de l'arbre
    while que:
        v = que.popleft()  # On retire un sommet de la file
        for nv in to[v]:   # Parcours des voisins du sommet courant
            if not seen[nv]:  # Si le voisin n'a pas été visité
                seen[nv] = 1  # On le marque comme visité
                # On lui attribue la plus grande valeur restante
                ans[nv] = c.pop()
                # On ajoute cette valeur à la somme S
                S += ans[nv]
                # On ajoute ce voisin à la file pour continuer le parcours
                que.append(nv)

    # Affichage de la somme des valeurs attribuées (hors sommet 0)
    print(S)
    # Affichage de la répartition finale des valeurs sur les sommets
    print(*ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019758609123528004
    2. '\n' → logprob: -7.501976013183594
    3. '\' → logprob: -8.126976013183594
    4. '[' → logprob: -8.376976013183594
    5. '\(' → logprob: -8.626976013183594
    6. 'a' → logprob: -9.001976013183594
    7. 'newline' → logprob: -9.251976013183594
    8. '(
' → logprob: -9.376976013183594
    9. 'import' → logprob: -9.501976013183594
    10. ',' → logprob: -9.626976013183594

Token 6: ' Lecture' (ID: 106534)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2402547597885132
    2. 'b' → logprob: -1.9902547597885132
    3. ' d' → logprob: -2.1152548789978027
    4. 'deque' → logprob: -2.1152548789978027
    5. ' ' → logprob: -2.9902548789978027
    6. ' my' → logprob: -3.1152548789978027
    7. ' use' → logprob: -4.365254878997803
    8. 'q' → logprob: -4.365254878997803
    9. ' a' → logprob: -4.615254878997803
    10. ' `' → logprob: -4.615254878997803

Token 7: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9541395902633667
    2. '_notes' → logprob: -1.5791395902633667
    3. 'Notes' → logprob: -2.2041397094726562
    4. ' ' → logprob: -2.5791397094726562
    5. ' =' → logprob: -2.8291397094726562
    6. ':' → logprob: -2.8291397094726562
    7. ' Notes' → logprob: -4.079139709472656
    8. '=' → logprob: -4.329139709472656
    9. 's' → logprob: -4.704139709472656
    10. 'Note' → logprob: -4.704139709472656

Token 8: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019766943529248238
    2. 'f' → logprob: -4.394766807556152
    3. ' fichier' → logprob: -6.019766807556152
    4. ' f' → logprob: -6.144766807556152
    5. 's' → logprob: -7.519766807556152
    6. 'texte' → logprob: -7.894766807556152
    7. '_' → logprob: -8.019766807556152
    8. ' input' → logprob: -8.019766807556152
    9. ' message' → logprob: -8.394766807556152
    10. ' code' → logprob: -8.769766807556152

Token 9: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2406788021326065
    2. ' ' → logprob: -1.8656787872314453
    3. ' d' → logprob: -3.7406787872314453
    4. 'd' → logprob: -3.9906787872314453
    5. 's' → logprob: -4.740678787231445
    6. '_de' → logprob: -5.865678787231445
    7. '_d' → logprob: -6.365678787231445
    8. ' de' → logprob: -6.990678787231445
    9. 'de' → logprob: -7.740678787231445
    10. '_s' → logprob: -8.240678787231445

Token 10: ' somm' (ID: 44830)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7524461150169373
    2. ' lignes' → logprob: -1.627446174621582
    3. ' ' → logprob: -2.377446174621582
    4. 'd' → logprob: -3.627446174621582
    5. ' mots' → logprob: -4.002446174621582
    6. 's' → logprob: -4.002446174621582
    7. 'élé' → logprob: -4.127446174621582
    8. 'clients' → logprob: -4.627446174621582
    9. 'm' → logprob: -4.752446174621582
    10. 'é' → logprob: -5.002446174621582

Token 11: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0632282942533493
    2. 'et' → logprob: -3.3132283687591553
    3. 'e' → logprob: -3.9382283687591553
    4. 'es' → logprob: -6.563228130340576
    5. 'è' → logprob: -7.063228130340576
    6. 'é' → logprob: -7.063228130340576
    7. 'êts' → logprob: -7.563228130340576
    8. 'ет' → logprob: -8.688228607177734
    9. 'є' → logprob: -8.688228607177734
    10. 'ê' → logprob: -8.813228607177734

Token 12: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6362054944038391
    2. 's' → logprob: -0.7612054944038391
    3. '\n' → logprob: -6.136205673217773
    4. 'num' → logprob: -8.386205673217773
    5. 'vertices' → logprob: -8.511205673217773
    6. 'nombre' → logprob: -8.761205673217773
    7. ',' → logprob: -9.011205673217773
    8. '```' → logprob: -9.136205673217773
    9. 'newline' → logprob: -9.636205673217773
    10. 'v' → logprob: -9.761205673217773

Token 13: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.2666146457195282
    2. ' graph' → logprob: -1.6416146755218506
    3. 'graph' → logprob: -3.6416146755218506
    4. ' ' → logprob: -4.3916144371032715
    5. 'gr' → logprob: -7.3916144371032715
    6. ' graphique' → logprob: -7.3916144371032715
    7. '	graph' → logprob: -8.39161491394043
    8. ' ' → logprob: -8.89161491394043
    9. '_graph' → logprob: -10.01661491394043
    10. 's' → logprob: -10.51661491394043

Token 14: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0028701385017484426
    2. 'he' → logprob: -6.252870082855225
    3. 'ph' → logprob: -8.252870559692383
    4. 'raph' → logprob: -8.252870559692383
    5. '#' → logprob: -9.002870559692383
    6. 'aphe' → logprob: -10.127870559692383
    7. 'phe' → logprob: -10.377870559692383
    8. '<h' → logprob: -10.502870559692383
    9. 'p' → logprob: -10.752870559692383
    10. 'hé' → logprob: -10.752870559692383

Token 15: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00596529571339488
    2. '\n' → logprob: -5.505965232849121
    3. 's' → logprob: -6.880965232849121
    4. '```' → logprob: -8.380965232849121
    5. 'v' → logprob: -8.880965232849121
    6. 'vertices' → logprob: -9.255965232849121
    7. 'nombre' → logprob: -9.255965232849121
    8. 'num' → logprob: -9.380965232849121
    9. ' n' → logprob: -9.880965232849121
    10. 'nb' → logprob: -10.005965232849121

Token 16: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004297155828680843
    2. ' n' → logprob: -8.1254301071167
    3. 'v' → logprob: -9.2504301071167
    4. 'num' → logprob: -11.2504301071167
    5. 's' → logprob: -11.6254301071167
    6. 'nombre' → logprob: -12.2504301071167
    7. 'nb' → logprob: -12.8754301071167
    8. '\n' → logprob: -12.8754301071167
    9. '```' → logprob: -13.3754301071167
    10. 'N' → logprob: -13.5004301071167

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008683355525135994
    2. '=' → logprob: -4.758683204650879
    3. ' ' → logprob: -10.008683204650879
    4. '_' → logprob: -11.133683204650879
    5. ',' → logprob: -12.883683204650879
    6. '=int' → logprob: -14.008683204650879
    7. ' ' → logprob: -14.133683204650879
    8. 'space' → logprob: -14.133683204650879
    9. ' ,' → logprob: -14.258683204650879
    10. 's' → logprob: -14.258683204650879

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004536696244031191
    2. 'int' → logprob: -5.5045366287231445
    3. ' ' → logprob: -7.7545366287231445
    4. ' input' → logprob: -11.004536628723145
    5. '=int' → logprob: -12.254536628723145
    6. '10' → logprob: -12.629536628723145
    7. '5' → logprob: -14.004536628723145
    8. '0' → logprob: -14.004536628723145
    9. ' ' → logprob: -14.254536628723145
    10. 'input' → logprob: -14.629536628723145

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07901030033826828
    2. '(' → logprob: -2.579010248184204
    3. 'input' → logprob: -9.079010009765625
    4. ' (' → logprob: -12.579010009765625
    5. '()' → logprob: -14.329010009765625
    6. '(
' → logprob: -14.579010009765625
    7. ' input' → logprob: -14.579010009765625
    8. '('' → logprob: -14.579010009765625
    9. '=input' → logprob: -14.829010009765625
    10. '(raw' → logprob: -16.079010009765625

Token 20: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2788428068161011
    2. '(' → logprob: -1.903842806816101
    3. '())' → logprob: -2.4038429260253906
    4. ')' → logprob: -5.653842926025391
    5. '('' → logprob: -8.90384292602539
    6. '(
' → logprob: -9.52884292602539
    7. '(()' → logprob: -10.15384292602539
    8. '(

' → logprob: -10.52884292602539
    9. '(`' → logprob: -10.65384292602539
    10. '("("' → logprob: -10.77884292602539

Token 21: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11017438024282455
    2. 'graph' → logprob: -3.2351744174957275
    3. '```' → logprob: -3.9851744174957275
    4. 'G' → logprob: -4.235174179077148
    5. 'edges' → logprob: -5.110174179077148
    6. '
' → logprob: -5.360174179077148
    7. 's' → logprob: -5.485174179077148
    8. 'g' → logprob: -5.860174179077148
    9. 'for' → logprob: -6.235174179077148
    10. 'E' → logprob: -6.360174179077148

Token 22: ' Initial' (ID: 9209)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.338255524635315
    2. '#' → logprob: -1.588255524635315
    3. 'adj' → logprob: -1.963255524635315
    4. ' adjacency' → logprob: -1.963255524635315
    5. ' edges' → logprob: -2.3382554054260254
    6. ' graph' → logprob: -3.0882554054260254
    7. 'neighbors' → logprob: -3.7132554054260254
    8. 'edges' → logprob: -3.7132554054260254
    9. 'gr' → logprob: -3.8382554054260254
    10. ' neighbors' → logprob: -4.713255405426025

Token 23: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.031828999519348145
    2. 'ization' → logprob: -4.031828880310059
    3. 'iser' → logprob: -5.031828880310059
    4. 'is' → logprob: -6.406828880310059
    5. 'isations' → logprob: -7.031828880310059
    6. 'e' → logprob: -7.406828880310059
    7. 'izing' → logprob: -7.406828880310059
    8. 's' → logprob: -7.906828880310059
    9. '_' → logprob: -7.906828880310059
    10. 'isez' → logprob: -8.156828880310059

Token 24: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006465247832238674
    2. 'graph' → logprob: -6.506465435028076
    3. ' de' → logprob: -6.881465435028076
    4. ' d' → logprob: -7.131465435028076
    5. ' of' → logprob: -7.131465435028076
    6. ' graph' → logprob: -7.256465435028076
    7. 's' → logprob: -8.256464958190918
    8. ' des' → logprob: -9.131464958190918
    9. ' )' → logprob: -9.256464958190918
    10. ')' → logprob: -9.381464958190918

Token 25: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027345139533281326
    2. ' la' → logprob: -3.6523451805114746
    3. ' l' → logprob: -7.652345180511475
    4. '  ' → logprob: -9.152344703674316
    5. 'la' → logprob: -9.527344703674316
    6. ' graph' → logprob: -9.902344703674316
    7. ' ' → logprob: -9.902344703674316
    8. ' deque' → logprob: -10.152344703674316
    9. 'l' → logprob: -10.402344703674316
    10. 'deque' → logprob: -10.527344703674316

Token 26: ' liste' (ID: 31719)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.7533884644508362
    2. ' liste' → logprob: -1.5033884048461914
    3. ' graph' → logprob: -2.3783884048461914
    4. ' ' → logprob: -2.7533884048461914
    5. ' queue' → logprob: -3.6283884048461914
    6. 'file' → logprob: -3.6283884048461914
    7. ' adjacency' → logprob: -3.6283884048461914
    8. 'deque' → logprob: -4.128388404846191
    9. 'graph' → logprob: -4.253388404846191
    10. 'liste' → logprob: -4.753388404846191

Token 27: ' d' (ID: 272)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -1.4551138877868652
    2. 'adj' → logprob: -1.8301138877868652
    3. ' des' → logprob: -2.2051138877868652
    4. '_ad' → logprob: -2.7051138877868652
    5. '_des' → logprob: -2.7051138877868652
    6. 'des' → logprob: -2.9551138877868652
    7. '_graph' → logprob: -3.0801138877868652
    8. ' d' → logprob: -3.2051138877868652
    9. ' adjacency' → logprob: -3.2051138877868652
    10. 'd' → logprob: -3.2051138877868652

Token 28: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.5278235077857971
    2. ' adjacency' → logprob: -1.7778234481811523
    3. 'e' → logprob: -1.9028234481811523
    4. 'es' → logprob: -3.4028234481811523
    5. '_adj' → logprob: -4.027823448181152
    6. '_ad' → logprob: -4.152823448181152
    7. 'adj' → logprob: -4.777823448181152
    8. ''' → logprob: -5.402823448181152
    9. '’ad' → logprob: -5.527823448181152
    10. ''s' → logprob: -6.527823448181152

Token 29: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.02326492965221405
    2. 'j' → logprob: -3.7732648849487305
    3. 'Jac' → logprob: -11.77326488494873
    4. '_j' → logprob: -12.64826488494873
    5. '[j' → logprob: -12.64826488494873
    6. 'ja' → logprob: -13.14826488494873
    7. 'jec' → logprob: -13.77326488494873
    8. ' jac' → logprob: -14.64826488494873
    9. 'J' → logprob: -15.14826488494873
    10. 'jaz' → logprob: -15.14826488494873

Token 30: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.030883532017469406
    2. 'acency' → logprob: -4.280883312225342
    3. 'ence' → logprob: -4.405883312225342
    4. 'ences' → logprob: -6.155883312225342
    5. 'escence' → logprob: -7.030883312225342
    6. 'cence' → logprob: -7.405883312225342
    7. 'a' → logprob: -8.0308837890625
    8. '```' → logprob: -9.6558837890625
    9. '#' → logprob: -10.0308837890625
    10. 'ance' → logprob: -10.0308837890625

Token 31: ' :' (ID: 712)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4041154980659485
    2. 'adj' → logprob: -1.6541154384613037
    3. ' graph' → logprob: -2.6541154384613037
    4. ' adjacency' → logprob: -3.1541154384613037
    5. 'g' → logprob: -4.529115676879883
    6. ' adj' → logprob: -5.404115676879883
    7. 's' → logprob: -6.154115676879883
    8. 'a' → logprob: -6.279115676879883
    9. ' ' → logprob: -6.654115676879883
    10. '[' → logprob: -6.654115676879883

Token 32: ' chaque' (ID: 21194)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8524966239929199
    2. ' graph' → logprob: -1.10249662399292
    3. ' adjacency' → logprob: -2.10249662399292
    4. 'adj' → logprob: -2.47749662399292
    5. ' adj' → logprob: -3.47749662399292
    6. '[' → logprob: -6.60249662399292
    7. ' [[]' → logprob: -6.97749662399292
    8. ' ' → logprob: -7.72749662399292
    9. ' []' → logprob: -7.97749662399292
    10. 'Adj' → logprob: -8.102497100830078

Token 33: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.3609350621700287
    2. '_' → logprob: -2.1109349727630615
    3. 's' → logprob: -2.6109349727630615
    4. '[]' → logprob: -3.4859349727630615
    5. '[' → logprob: -3.7359349727630615
    6. ' ' → logprob: -4.235935211181641
    7. ' liste' → logprob: -4.485935211181641
    8. ' node' → logprob: -4.860935211181641
    9. ' []' → logprob: -5.735935211181641
    10. ' adjacency' → logprob: -6.485935211181641

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2014412134885788
    2. 'a' → logprob: -2.7014412879943848
    3. ' est' → logprob: -3.4514412879943848
    4. ' possède' → logprob: -4.076441287994385
    5. ' contient' → logprob: -4.201441287994385
    6. 's' → logprob: -4.451441287994385
    7. ':' → logprob: -4.701441287994385
    8. ' ' → logprob: -5.576441287994385
    9. ' représente' → logprob: -5.701441287994385
    10. ' :' → logprob: -5.826441287994385

Token 35: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5086395144462585
    2. ' []' → logprob: -1.3836395740509033
    3. ' ' → logprob: -2.1336395740509033
    4. ' une' → logprob: -5.008639335632324
    5. '_' → logprob: -5.258639335632324
    6. '	' → logprob: -6.133639335632324
    7. '=[]' → logprob: -6.133639335632324
    8. 'a' → logprob: -6.133639335632324
    9. ' un' → logprob: -6.258639335632324
    10. '[' → logprob: -6.633639335632324

Token 36: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.882455050945282
    2. 'deque' → logprob: -1.2574551105499268
    3. 'liste' → logprob: -2.0074551105499268
    4. ' []' → logprob: -2.2574551105499268
    5. ' liste' → logprob: -3.0074551105499268
    6. 'list' → logprob: -4.757454872131348
    7. ' deque' → logprob: -6.007454872131348
    8. 'de' → logprob: -6.507454872131348
    9. ' list' → logprob: -7.882454872131348
    10. '=[]' → logprob: -9.132454872131348

Token 37: ' de' (ID: 334)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37776485085487366
    2. ' d' → logprob: -2.502764940261841
    3. 'd' → logprob: -2.627764940261841
    4. '<|end|>' → logprob: -2.752764940261841
    5. 'vide' → logprob: -3.627764940261841
    6. ' de' → logprob: -4.377764701843262
    7. ' ' → logprob: -4.627764701843262
    8. ' []' → logprob: -4.752764701843262
    9. '=[]' → logprob: -5.002764701843262
    10. 'de' → logprob: -5.377764701843262

Token 38: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.18204575777053833
    2. 'adj' → logprob: -2.0570456981658936
    3. 'vo' → logprob: -4.432045936584473
    4. 'succ' → logprob: -5.307045936584473
    5. ' ses' → logprob: -5.557045936584473
    6. 's' → logprob: -5.682045936584473
    7. 'ses' → logprob: -5.932045936584473
    8. ' adjacency' → logprob: -6.057045936584473
    9. ' somm' → logprob: -6.182045936584473
    10. 'd' → logprob: -6.807045936584473

Token 39: '
' (ID: 198)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8320817351341248
    2. 's' → logprob: -1.5820817947387695
    3. 'graph' → logprob: -2.0820817947387695
    4. ' adjacency' → logprob: -2.4570817947387695
    5. '[]' → logprob: -2.7070817947387695
    6. '[' → logprob: -3.7070817947387695
    7. 'neighbors' → logprob: -3.7070817947387695
    8. ' adj' → logprob: -4.8320817947387695
    9. '_adj' → logprob: -5.4570817947387695
    10. ' graph' → logprob: -5.5820817947387695

Token 40: 'to' (ID: 935)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.753772497177124
    2. 'graph' → logprob: -1.503772497177124
    3. 'adj' → logprob: -2.003772497177124
    4. ' graph' → logprob: -2.128772497177124
    5. ' adj' → logprob: -4.003772735595703
    6. 'neighbors' → logprob: -4.128772735595703
    7. ' neighbors' → logprob: -4.378772735595703
    8. 'g' → logprob: -6.628772735595703
    9. ' adjacent' → logprob: -6.753772735595703
    10. ' voisins' → logprob: -7.128772735595703

Token 41: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5367705821990967
    2. 'u' → logprob: -2.1617705821990967
    3. 'rs' → logprob: -2.1617705821990967
    4. '_adj' → logprob: -2.2867705821990967
    5. 'r' → logprob: -2.5367705821990967
    6. 'rch' → logprob: -2.6617705821990967
    7. 'uts' → logprob: -2.9117705821990967
    8. 's' → logprob: -2.9117705821990967
    9. 'ut' → logprob: -3.0367705821990967
    10. 'ur' → logprob: -4.161770820617676

Token 42: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.2163001149892807
    2. '[' → logprob: -1.716300129890442
    3. ' [' → logprob: -4.216300010681152
    4. ' []' → logprob: -11.466300010681152
    5. '[]' → logprob: -11.591300010681152
    6. ' ' → logprob: -13.341300010681152
    7. '[n' → logprob: -14.591300010681152
    8. ' defaultdict' → logprob: -14.716300010681152
    9. '[new' → logprob: -15.591300010681152
    10. '[int' → logprob: -15.841300010681152

Token 43: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4706210196018219
    2. '(N' → logprob: -1.0956209897994995
    3. ')' → logprob: -3.470621109008789
    4. 'for' → logprob: -5.095621109008789
    5. '()' → logprob: -5.845621109008789
    6. ' for' → logprob: -7.845621109008789
    7. ']' → logprob: -8.345621109008789
    8. ' (' → logprob: -9.220621109008789
    9. '(n' → logprob: -9.345621109008789
    10. ',' → logprob: -10.095621109008789

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15730492770671844
    2. 'range' → logprob: -2.0323050022125244
    3. ' range' → logprob: -4.532304763793945
    4. '(range' → logprob: -6.157304763793945
    5. '_range' → logprob: -7.032304763793945
    6. '_s' → logprob: -8.157304763793945
    7. ' _' → logprob: -8.407304763793945
    8. 'i' → logprob: -9.032304763793945
    9. '_i' → logprob: -10.032304763793945
    10. '(' → logprob: -10.157304763793945

Token 45: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04664073884487152
    2. 'range' → logprob: -3.671640634536743
    3. ' in' → logprob: -3.921640634536743
    4. 'i' → logprob: -8.546640396118164
    5. '_' → logprob: -10.046640396118164
    6. ' range' → logprob: -10.796640396118164
    7. 'n' → logprob: -10.921640396118164
    8. 'ange' → logprob: -11.671640396118164
    9. 'x' → logprob: -12.046640396118164
    10. ' ' → logprob: -12.171640396118164

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007105246186256409
    2. ' range' → logprob: -7.250710487365723
    3. '(range' → logprob: -15.000710487365723
    4. 'rang' → logprob: -15.875710487365723
    5. '	range' → logprob: -17.12571144104004
    6. ')' → logprob: -17.37571144104004
    7. ' ' → logprob: -17.50071144104004
    8. '   ' → logprob: -17.75071144104004
    9. 'ran' → logprob: -18.12571144104004
    10. 'r' → logprob: -18.12571144104004

Token 47: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00015908108616713434
    2. '(' → logprob: -8.75015926361084
    3. '(n' → logprob: -15.37515926361084
    4. '(
' → logprob: -16.625158309936523
    5. ' (' → logprob: -16.625158309936523
    6. 'N' → logprob: -16.750158309936523
    7. ')' → logprob: -17.625158309936523
    8. '((' → logprob: -17.750158309936523
    9. ')(' → logprob: -18.625158309936523
    10. '(M' → logprob: -18.875158309936523

Token 48: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.6060808522743173e-05
    2. ')' → logprob: -10.750025749206543
    3. ')])' → logprob: -13.375025749206543
    4. '])' → logprob: -14.125025749206543
    5. ' )' → logprob: -14.375025749206543
    6. ']' → logprob: -14.500025749206543
    7. ')],' → logprob: -14.500025749206543
    8. '))' → logprob: -15.375025749206543
    9. '])]' → logprob: -15.375025749206543
    10. ')]
' → logprob: -15.875025749206543

Token 49: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28269538283348083
    2. '#' → logprob: -1.4076954126358032
    3. ' for' → logprob: -7.157695293426514
    4. 'n' → logprob: -7.782695293426514
    5. '<|end|>' → logprob: -8.407695770263672
    6. '\' → logprob: -10.657695770263672
    7. '```' → logprob: -10.657695770263672
    8. '
' → logprob: -11.407695770263672
    9. '<|end|>' → logprob: -11.407695770263672
    10. 's' → logprob: -12.282695770263672

Token 50: ' Lecture' (ID: 106534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0511900894343853
    2. ' for' → logprob: -3.176190137863159
    3. 'Lecture' → logprob: -4.92618989944458
    4. '#' → logprob: -8.176190376281738
    5. ' Lecture' → logprob: -8.176190376281738
    6. 'Code' → logprob: -9.301190376281738
    7. ' lecture' → logprob: -9.801190376281738
    8. 'For' → logprob: -10.426190376281738
    9. 'Bou' → logprob: -10.426190376281738
    10. 'lecture' → logprob: -11.426190376281738

Token 51: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.22874459624290466
    2. 'des' → logprob: -1.603744626045227
    3. '<|end|>' → logprob: -7.1037445068359375
    4. ' de' → logprob: -7.2287445068359375
    5. '_des' → logprob: -7.6037445068359375
    6. '()' → logprob: -7.6037445068359375
    7. 'de' → logprob: -8.103744506835938
    8. 's' → logprob: -8.728744506835938
    9. '(des' → logprob: -10.103744506835938
    10. '(' → logprob: -10.103744506835938

Token 52: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.36352550983428955
    2. '_' → logprob: -2.363525390625
    3. 'ar' → logprob: -2.988525390625
    4. ' are' → logprob: -3.238525390625
    5. '_are' → logprob: -3.238525390625
    6. ' edges' → logprob: -3.988525390625
    7. '_edges' → logprob: -4.238525390625
    8. ' N' → logprob: -4.488525390625
    9. 'are' → logprob: -4.613525390625
    10. '_ar' → logprob: -5.238525390625

Token 53: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.07596360892057419
    2. 'etes' → logprob: -2.9509634971618652
    3. 'tes' → logprob: -4.075963497161865
    4. '�' → logprob: -6.825963497161865
    5. '^' → logprob: -7.450963497161865
    6. 'ètes' → logprob: -7.575963497161865
    7. 'ê' → logprob: -8.075963973999023
    8. '\' → logprob: -8.200963973999023
    9. 'c' → logprob: -8.700963973999023
    10. 're' → logprob: -8.950963973999023

Token 54: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004759172443300486
    2. ' for' → logprob: -5.379759311676025
    3. '
' → logprob: -9.879758834838867
    4. 'n' → logprob: -10.379758834838867
    5. '\n' → logprob: -10.504758834838867
    6. '<|end|>' → logprob: -11.004758834838867
    7. '```' → logprob: -13.004758834838867
    8. 'N' → logprob: -13.004758834838867
    9. 's' → logprob: -13.379758834838867
    10. '\' → logprob: -13.504758834838867

Token 55: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.20447804033756256
    2. ' grap' → logprob: -2.0794780254364014
    3. 'graph' → logprob: -2.8294780254364014
    4. ' graph' → logprob: -7.0794782638549805
    5. '	graph' → logprob: -11.07947826385498
    6. '_gr' → logprob: -11.82947826385498
    7. 'gra' → logprob: -12.45447826385498
    8. '_graph' → logprob: -12.70447826385498
    9. '```' → logprob: -13.07947826385498
    10. 'raph' → logprob: -13.07947826385498

Token 56: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.06795763969421387
    2. 'he' → logprob: -2.817957639694214
    3. 'phe' → logprob: -5.317957878112793
    4. 'aph' → logprob: -8.192957878112793
    5. 'e' → logprob: -8.317957878112793
    6. 'ap' → logprob: -8.942957878112793
    7. 'ph' → logprob: -9.442957878112793
    8. '```' → logprob: -9.442957878112793
    9. 'ophe' → logprob: -9.942957878112793
    10. 'h' → logprob: -9.942957878112793

Token 57: ' non' (ID: 2893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005788242910057306
    2. ' for' → logprob: -5.255788326263428
    3. 'n' → logprob: -8.50578784942627
    4. '
' → logprob: -8.50578784942627
    5. '\n' → logprob: -9.50578784942627
    6. 'N' → logprob: -10.63078784942627
    7. '<|end|>' → logprob: -10.75578784942627
    8. '```' → logprob: -10.88078784942627
    9. '\' → logprob: -12.50578784942627
    10. ' 
' → logprob: -14.00578784942627

Token 58: ' orient' (ID: 13198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3257339894771576
    2. 'orient' → logprob: -1.32573401927948
    3. '_or' → logprob: -4.9507341384887695
    4. ' orient' → logprob: -5.8257341384887695
    5. ' oriented' → logprob: -7.0757341384887695
    6. '-or' → logprob: -7.7007341384887695
    7. '0' → logprob: -8.20073413848877
    8. '-' → logprob: -8.32573413848877
    9. '_' → logprob: -9.07573413848877
    10. 'orien' → logprob: -9.32573413848877

Token 59: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.027068225666880608
    2. 'és' → logprob: -4.402068138122559
    3. 'ées' → logprob: -5.277068138122559
    4. 'e' → logprob: -5.402068138122559
    5. 'es' → logprob: -5.402068138122559
    6. 'ée' → logprob: -8.402068138122559
    7. '```' → logprob: -10.402068138122559
    8. '#' → logprob: -11.277068138122559
    9. 'a' → logprob: -11.777068138122559
    10. 'ed' → logprob: -12.277068138122559

Token 60: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.475616991519928
    2. ' for' → logprob: -1.7256169319152832
    3. '<|end|>' → logprob: -2.225616931915283
    4. '
' → logprob: -3.100616931915283
    5. '\n' → logprob: -3.600616931915283
    6. '<|end|>' → logprob: -5.100616931915283
    7. 'n' → logprob: -5.475616931915283
    8. '\' → logprob: -5.600616931915283
    9. ' 
' → logprob: -5.850616931915283
    10. 'newline' → logprob: -7.100616931915283

Token 61: ' rempl' (ID: 66326)
  Prédit: ' ajout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajout' → logprob: -1.1812853813171387
    2. ' construction' → logprob: -1.5562853813171387
    3. 'aj' → logprob: -1.6812853813171387
    4. ' rempl' → logprob: -1.6812853813171387
    5. 'rem' → logprob: -3.5562853813171387
    6. ' leur' → logprob: -4.056285381317139
    7. ' their' → logprob: -4.681285381317139
    8. ' les' → logprob: -4.931285381317139
    9. ' mise' → logprob: -4.931285381317139
    10. ' la' → logprob: -5.306285381317139

Token 62: 'issage' (ID: 63863)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.002201167168095708
    2. 'issage' → logprob: -6.502201080322266
    3. 'er' → logprob: -8.377201080322266
    4. 'iss' → logprob: -9.002201080322266
    5. 'isser' → logprob: -9.627201080322266
    6. 'is' → logprob: -10.002201080322266
    7. 'r' → logprob: -10.127201080322266
    8. 'issement' → logprob: -10.377201080322266
    9. 'p' → logprob: -10.502201080322266
    10. 'pl' → logprob: -11.127201080322266

Token 63: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.048803672194480896
    2. ' for' → logprob: -3.6738035678863525
    3. ' to' → logprob: -5.173803806304932
    4. 'des' → logprob: -5.548803806304932
    5. ' of' → logprob: -5.673803806304932
    6. ' de' → logprob: -5.923803806304932
    7. 'for' → logprob: -6.048803806304932
    8. 's' → logprob: -6.548803806304932
    9. 'to' → logprob: -6.548803806304932
    10. '<|end|>' → logprob: -7.423803806304932

Token 64: ' la' (ID: 557)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18656575679779053
    2. ' la' → logprob: -2.06156587600708
    3. 'to' → logprob: -3.18656587600708
    4. ' ' → logprob: -7.06156587600708
    5. ' the' → logprob: -8.186565399169922
    6. 'la' → logprob: -9.186565399169922
    7. ' each' → logprob: -9.311565399169922
    8. 's' → logprob: -9.686565399169922
    9. '[to' → logprob: -9.686565399169922
    10. ' adjacency' → logprob: -9.936565399169922

Token 65: ' liste' (ID: 31719)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7917262315750122
    2. ' liste' → logprob: -1.4167262315750122
    3. 'to' → logprob: -1.5417262315750122
    4. ' adjacency' → logprob: -3.2917261123657227
    5. ' listes' → logprob: -4.291726112365723
    6. 'liste' → logprob: -4.291726112365723
    7. ' ' → logprob: -4.916726112365723
    8. ' lists' → logprob: -5.041726112365723
    9. ' list' → logprob: -5.041726112365723
    10. 'adj' → logprob: -6.666726112365723

Token 66: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33459505438804626
    2. ' d' → logprob: -1.9595950841903687
    3. '<|end|>' → logprob: -2.459594964981079
    4. 'adj' → logprob: -4.334595203399658
    5. 'des' → logprob: -4.959595203399658
    6. '_adj' → logprob: -5.084595203399658
    7. 'de' → logprob: -5.209595203399658
    8. 'to' → logprob: -5.334595203399658
    9. '_' → logprob: -5.709595203399658
    10. ' des' → logprob: -5.834595203399658

Token 67: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.04574974998831749
    2. ''ad' → logprob: -3.1707496643066406
    3. 'ad' → logprob: -6.670749664306641
    4. '_adj' → logprob: -7.545749664306641
    5. 'jac' → logprob: -7.670749664306641
    6. 'a' → logprob: -8.04574966430664
    7. ''' → logprob: -10.42074966430664
    8. 'j' → logprob: -10.42074966430664
    9. 'e' → logprob: -10.67074966430664
    10. '’ad' → logprob: -11.04574966430664

Token 68: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.3491179645061493
    2. 'j' → logprob: -1.2241179943084717
    3. 'ja' → logprob: -7.724117755889893
    4. 'jc' → logprob: -9.09911823272705
    5. 'jec' → logprob: -10.84911823272705
    6. 'acency' → logprob: -10.84911823272705
    7. 'js' → logprob: -11.09911823272705
    8. 'ac' → logprob: -11.34911823272705
    9. 'aj' → logprob: -11.59911823272705
    10. '```' → logprob: -11.97411823272705

Token 69: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.4229831099510193
    2. 'es' → logprob: -1.922983169555664
    3. 'ance' → logprob: -2.297983169555664
    4. 'escence' → logprob: -2.922983169555664
    5. 't' → logprob: -4.547983169555664
    6. 'acency' → logprob: -4.672983169555664
    7. 'tes' → logprob: -5.422983169555664
    8. 'ation' → logprob: -5.547983169555664
    9. 'cence' → logprob: -5.922983169555664
    10. 'ences' → logprob: -6.047983169555664

Token 70: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0261695459485054
    2. ' for' → logprob: -3.776169538497925
    3. '
' → logprob: -6.776169776916504
    4. '<|end|>' → logprob: -6.901169776916504
    5. '\n' → logprob: -8.401169776916504
    6. 'n' → logprob: -8.401169776916504
    7. '```' → logprob: -8.401169776916504
    8. '<|end|>' → logprob: -10.901169776916504
    9. 'N' → logprob: -11.151169776916504
    10. ' 
' → logprob: -11.151169776916504

Token 71: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017636561824474484
    2. ' for' → logprob: -9.125176429748535
    3. '
' → logprob: -9.750176429748535
    4. 'n' → logprob: -12.375176429748535
    5. '```' → logprob: -12.750176429748535
    6. '\n' → logprob: -14.250176429748535
    7. '_for' → logprob: -14.750176429748535
    8. 'N' → logprob: -15.625176429748535
    9. '\' → logprob: -15.625176429748535
    10. '

' → logprob: -15.875176429748535

Token 72: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00592334708198905
    2. '_' → logprob: -5.880923271179199
    3. ' i' → logprob: -5.880923271179199
    4. ' ' → logprob: -8.1309232711792
    5. ' range' → logprob: -11.2559232711792
    6. ' ' → logprob: -12.6309232711792
    7. ' ‌' → logprob: -12.7559232711792
    8. '_i' → logprob: -13.0059232711792
    9. '  ' → logprob: -13.2559232711792
    10. ' ▁' → logprob: -13.5059232711792

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012541078962385654
    2. 'in' → logprob: -4.3875412940979
    3. ' ' → logprob: -10.762540817260742
    4. 'range' → logprob: -12.512540817260742
    5. '_' → logprob: -12.637540817260742
    6. 'import' → logprob: -14.262540817260742
    7. 's' → logprob: -15.262540817260742
    8. 'n' → logprob: -15.387540817260742
    9. '  ' → logprob: -15.512540817260742
    10. '1' → logprob: -15.512540817260742

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021670162677765
    2. 'range' → logprob: -2.3502166271209717
    3. ' ' → logprob: -11.97521686553955
    4. '(range' → logprob: -13.72521686553955
    5. '	range' → logprob: -13.85021686553955
    6. '```' → logprob: -15.10021686553955
    7. 'rang' → logprob: -15.22521686553955
    8. '_range' → logprob: -15.72521686553955
    9. ' xrange' → logprob: -15.72521686553955
    10. '0' → logprob: -15.97521686553955

Token 75: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2074199616909027
    2. '(' → logprob: -1.957419991493225
    3. ' (' → logprob: -3.0824198722839355
    4. ' ' → logprob: -8.707420349121094
    5. ' N' → logprob: -9.707420349121094
    6. '(
' → logprob: -12.082420349121094
    7. '()' → logprob: -12.457420349121094
    8. '(int' → logprob: -12.457420349121094
    9. '(n' → logprob: -13.082420349121094
    10. 'N' → logprob: -13.207420349121094

Token 76: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31330230832099915
    2. ' -' → logprob: -1.3133022785186768
    3. ')' → logprob: -10.938302040100098
    4. '):' → logprob: -11.563302040100098
    5. ' ' → logprob: -11.813302040100098
    6. ' )' → logprob: -12.563302040100098
    7. ' ):' → logprob: -13.938302040100098
    8. '*' → logprob: -14.688302040100098
    9. '1' → logprob: -15.438302040100098
    10. ' *' → logprob: -15.563302040100098

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.413042068481445
    4. '2' → logprob: -17.163042068481445
    5. ')' → logprob: -17.288042068481445
    6. '  ' → logprob: -17.538042068481445
    7. ' )' → logprob: -19.163042068481445
    8. '```' → logprob: -19.288042068481445
    9. '   ' → logprob: -19.413042068481445
    10. '１' → logprob: -19.725542068481445

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '2' → logprob: -15.625911712646484
    4. ')' → logprob: -16.375911712646484
    5. '  ' → logprob: -17.000911712646484
    6. '   ' → logprob: -18.250911712646484
    7. '```' → logprob: -18.500911712646484
    8. '<|end|>' → logprob: -19.750911712646484
    9. ' ' → logprob: -20.063411712646484
    10. '１' → logprob: -20.750911712646484

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019097159383818507
    2. ' ):' → logprob: -6.6269097328186035
    3. ')' → logprob: -7.6269097328186035
    4. '):
' → logprob: -9.501909255981445
    5. ':' → logprob: -11.126909255981445
    6. ' )' → logprob: -12.501909255981445
    7. ',' → logprob: -13.751909255981445
    8. '):
' → logprob: -14.001909255981445
    9. ']:' → logprob: -14.751909255981445
    10. ' :' → logprob: -14.876909255981445

Token 80: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.102303147315979
    2. 'u' → logprob: -3.4773030281066895
    3. '   ' → logprob: -4.1023030281066895
    4. ' s' → logprob: -4.6023030281066895
    5. ' a' → logprob: -4.6023030281066895
    6. ' 
' → logprob: -5.3523030281066895
    7. ' line' → logprob: -5.4773030281066895
    8. ' edge' → logprob: -5.8523030281066895
    9. ' v' → logprob: -5.9773030281066895
    10. ' edges' → logprob: -5.9773030281066895

Token 81: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12796054780483246
    2. ' u' → logprob: -2.127960443496704
    3. 'a' → logprob: -7.002960681915283
    4. ' a' → logprob: -9.877960205078125
    5. 's' → logprob: -10.752960205078125
    6. 'x' → logprob: -10.877960205078125
    7. 'v' → logprob: -11.752960205078125
    8. ' line' → logprob: -11.752960205078125
    9. '   ' → logprob: -12.002960205078125
    10. '	u' → logprob: -13.377960205078125

Token 82: ' Les' (ID: 7029)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5813316702842712
    2. ' u' → logprob: -0.8313316702842712
    3. 'a' → logprob: -5.956331729888916
    4. ' line' → logprob: -6.706331729888916
    5. ' a' → logprob: -6.831331729888916
    6. 'x' → logprob: -8.706331253051758
    7. 's' → logprob: -10.081331253051758
    8. ' x' → logprob: -10.081331253051758
    9. ' ' → logprob: -10.331331253051758
    10. '   ' → logprob: -10.456331253051758

Token 83: ' somm' (ID: 44830)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1657155454158783
    2. ' u' → logprob: -1.9157155752182007
    3. 'a' → logprob: -5.29071569442749
    4. ' a' → logprob: -8.415715217590332
    5. ' voisins' → logprob: -10.040715217590332
    6. 's' → logprob: -10.165715217590332
    7. 'x' → logprob: -10.290715217590332
    8. 'v' → logprob: -10.415715217590332
    9. ' v' → logprob: -11.915715217590332
    10. ' nodes' → logprob: -12.165715217590332

Token 84: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00033391619217582047
    2. 'et' → logprob: -8.375333786010742
    3. 'ts' → logprob: -10.500333786010742
    4. 'êts' → logprob: -10.500333786010742
    5. 's' → logprob: -11.125333786010742
    6. 'e' → logprob: -11.500333786010742
    7. 'its' → logprob: -12.250333786010742
    8. 'etso' → logprob: -13.125333786010742
    9. 'pts' → logprob: -13.625333786010742
    10. 'es' → logprob: -13.812833786010742

Token 85: ' sont' (ID: 5242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13682006299495697
    2. 'u' → logprob: -2.886820077896118
    3. ' ,' → logprob: -3.386820077896118
    4. 'a' → logprob: -4.261819839477539
    5. ' =' → logprob: -4.761819839477539
    6. ',u' → logprob: -4.761819839477539
    7. 's' → logprob: -6.011819839477539
    8. '1' → logprob: -6.011819839477539
    9. ' u' → logprob: -6.511819839477539
    10. 'A' → logprob: -8.511819839477539

Token 86: ' sa' (ID: 880)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.8007885217666626
    2. 'num' → logprob: -1.3007885217666626
    3. ' ' → logprob: -2.425788402557373
    4. ' index' → logprob: -2.800788402557373
    5. '0' → logprob: -3.050788402557373
    6. 's' → logprob: -3.675788402557373
    7. 'index' → logprob: -4.050788402557373
    8. '1' → logprob: -4.675788402557373
    9. ' indices' → logprob: -5.050788402557373
    10. ' donn' → logprob: -5.425788402557373

Token 87: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.6845675706863403
    2. 'is' → logprob: -0.9345675706863403
    3. 'ïs' → logprob: -2.934567451477051
    4. 'tis' → logprob: -5.059567451477051
    5. 'isi' → logprob: -5.184567451477051
    6. 'lis' → logprob: -5.184567451477051
    7. 'ns' → logprob: -5.309567451477051
    8. 'isés' → logprob: -5.684567451477051
    9. 'nis' → logprob: -6.059567451477051
    10. '1' → logprob: -6.309567451477051

Token 88: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3845307230949402
    2. ' ,' → logprob: -1.509530782699585
    3. 's' → logprob: -3.634530782699585
    4. ' =' → logprob: -3.884530782699585
    5. 'a' → logprob: -4.634530544281006
    6. ' )' → logprob: -4.634530544281006
    7. ' ' → logprob: -4.884530544281006
    8. ' u' → logprob: -5.134530544281006
    9. 'u' → logprob: -5.259530544281006
    10. ')' → logprob: -6.009530544281006

Token 89: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11752871423959732
    2. '1' → logprob: -2.9925286769866943
    3. '0' → logprob: -3.3675286769866943
    4. ' base' → logprob: -5.117528915405273
    5. ' zero' → logprob: -5.742528915405273
    6. ' input' → logprob: -5.867528915405273
    7. 's' → logprob: -5.992528915405273
    8. ' espaces' → logprob: -6.367528915405273
    9. ' indices' → logprob: -6.867528915405273
    10. '_' → logprob: -6.867528915405273

Token 90: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17088784277439117
    2. '1' → logprob: -1.92088782787323
    3. '0' → logprob: -4.7958879470825195
    4. '2' → logprob: -7.1708879470825195
    5. '10' → logprob: -7.2958879470825195
    6. 'e' → logprob: -8.29588794708252
    7. 'd' → logprob: -9.29588794708252
    8. 'space' → logprob: -9.42088794708252
    9. ' )' → logprob: -9.67088794708252
    10. 's' → logprob: -9.92088794708252

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001445353147573769
    2. '0' → logprob: -7.126445293426514
    3. ' ' → logprob: -7.376445293426514
    4. '10' → logprob: -11.626445770263672
    5. '<|end|>' → logprob: -13.251445770263672
    6. '```' → logprob: -14.001445770263672
    7. '2' → logprob: -14.126445770263672
    8. 'd' → logprob: -14.126445770263672
    9. '-' → logprob: -15.001445770263672
    10. 'e' → logprob: -15.501445770263672

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7464396357536316
    2. ' ,' → logprob: -1.2464396953582764
    3. ' ' → logprob: -1.8714396953582764
    4. 's' → logprob: -3.8714396953582764
    5. '<|end|>' → logprob: -3.9964396953582764
    6. '   ' → logprob: -4.371439456939697
    7. ' )' → logprob: -4.996439456939697
    8. ')' → logprob: -5.121439456939697
    9. '    ' → logprob: -5.746439456939697
    10. ' 
' → logprob: -5.871439456939697

Token 93: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1613661050796509
    2. 's' → logprob: -1.6613661050796509
    3. ' ,' → logprob: -1.9113661050796509
    4. ' but' → logprob: -2.4113659858703613
    5. ',' → logprob: -2.9113659858703613
    6. ' so' → logprob: -3.0363659858703613
    7. ' on' → logprob: -3.5363659858703613
    8. ' and' → logprob: -4.411365985870361
    9. ' donc' → logprob: -4.661365985870361
    10. 'a' → logprob: -4.786365985870361

Token 94: ' les' (ID: 1341)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0816068947315216
    2. ' sou' → logprob: -3.081606864929199
    3. ' les' → logprob: -4.956606864929199
    4. 'sou' → logprob: -4.956606864929199
    5. 'r' → logprob: -5.831606864929199
    6. 'les' → logprob: -6.206606864929199
    7. 'd' → logprob: -6.456606864929199
    8. ' convert' → logprob: -7.206606864929199
    9. 'convert' → logprob: -7.206606864929199
    10. ' -' → logprob: -7.331606864929199

Token 95: ' convert' (ID: 8452)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.135251522064209
    2. 'sou' → logprob: -1.885251522064209
    3. '-' → logprob: -2.135251522064209
    4. 'l' → logprob: -2.260251522064209
    5. 's' → logprob: -3.010251522064209
    6. ' ' → logprob: -3.135251522064209
    7. ' sou' → logprob: -3.510251522064209
    8. 'convert' → logprob: -3.760251522064209
    9. 'r' → logprob: -3.760251522064209
    10. 'lit' → logprob: -4.010251522064209

Token 96: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.103034108877182
    2. 'i' → logprob: -2.353034019470215
    3. 'is' → logprob: -6.478034019470215
    4. '```' → logprob: -7.728034019470215
    5. '   ' → logprob: -8.728034019470215
    6. '#' → logprob: -9.103034019470215
    7. ' it' → logprob: -9.353034019470215
    8. 'et' → logprob: -9.603034019470215
    9. '-' → logprob: -9.978034019470215
    10. '

' → logprob: -10.353034019470215

Token 97: ' en' (ID: 469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06417769938707352
    2. ' en' → logprob: -3.9391777515411377
    3. ' -' → logprob: -4.314177513122559
    4. ' ' → logprob: -4.564177513122559
    5. ' to' → logprob: -4.689177513122559
    6. ')' → logprob: -6.439177513122559
    7. 'to' → logprob: -6.689177513122559
    8. '   ' → logprob: -7.439177513122559
    9. ' -=' → logprob: -7.439177513122559
    10. '=' → logprob: -7.564177513122559

Token 98: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5507152080535889
    2. '0' → logprob: -1.4257152080535889
    3. 'base' → logprob: -1.9257152080535889
    4. ' ' → logprob: -3.300715208053589
    5. ' zéro' → logprob: -8.925715446472168
    6. ' zero' → logprob: -9.425715446472168
    7. '```' → logprob: -9.550715446472168
    8. '_base' → logprob: -9.800715446472168
    9. ' indices' → logprob: -10.300715446472168
    10. 'indices' → logprob: -10.300715446472168

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14269302785396576
    2. ' ' → logprob: -2.017693042755127
    3. ' zéro' → logprob: -11.517692565917969
    4. ' zero' → logprob: -11.892692565917969
    5. '1' → logprob: -15.142692565917969
    6. '```' → logprob: -15.767692565917969
    7. 'zero' → logprob: -16.01769256591797
    8. '-' → logprob: -16.39269256591797
    9. ' space' → logprob: -16.76769256591797
    10. '۰' → logprob: -17.01769256591797

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.875001907348633
    4. ' zéro' → logprob: -20.125001907348633
    5. '۰' → logprob: -20.375001907348633
    6. '-' → logprob: -21.125001907348633
    7. 'zero' → logprob: -21.500001907348633
    8. '０' → logprob: -21.750001907348633
    9. 'python' → logprob: -22.000001907348633
    10. '1' → logprob: -22.000001907348633

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7082493901252747
    2. 's' → logprob: -1.0832493305206299
    3. ' s' → logprob: -3.58324933052063
    4. ' 
' → logprob: -3.70824933052063
    5. '    
' → logprob: -3.83324933052063
    6. ' ,' → logprob: -4.083249568939209
    7. 'v' → logprob: -4.333249568939209
    8. ' ' → logprob: -4.458249568939209
    9. ',' → logprob: -4.583249568939209
    10. 'a' → logprob: -4.833249568939209

Token 102: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.151874378323555
    2. ' u' → logprob: -2.026874303817749
    3. '   ' → logprob: -4.776874542236328
    4. 'a' → logprob: -8.026874542236328
    5. '    
' → logprob: -9.276874542236328
    6. 's' → logprob: -9.401874542236328
    7. 'v' → logprob: -9.776874542236328
    8. '	u' → logprob: -10.276874542236328
    9. ' a' → logprob: -10.401874542236328
    10. ' 
' → logprob: -10.651874542236328

Token 103: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05244402214884758
    2. 'a' (adapté à ' a') → logprob: -3.0524439811706543
    3. ' u' → logprob: -5.677443981170654
    4. 'x' → logprob: -8.427444458007812
    5. ' a' → logprob: -9.052444458007812
    6. '   ' → logprob: -10.052444458007812
    7. 'v' → logprob: -10.302444458007812
    8. 's' → logprob: -12.552444458007812
    9. ' ' → logprob: -13.177444458007812
    10. 'b' → logprob: -13.302444458007812

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08950750529766083
    2. ' ,' → logprob: -2.464507579803467
    3. ',b' → logprob: -7.964507579803467
    4. ' ' → logprob: -9.339507102966309
    5. ',a' → logprob: -9.714507102966309
    6. '-' → logprob: -10.339507102966309
    7. ' =' → logprob: -11.589507102966309
    8. 'a' → logprob: -11.714507102966309
    9. '_,' → logprob: -12.089507102966309
    10. ' -' → logprob: -12.839507102966309

Token 105: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47416049242019653
    2. 'b' → logprob: -0.9741604924201965
    3. ' ' → logprob: -9.724160194396973
    4. '<|end|>' → logprob: -10.724160194396973
    5. '  ' → logprob: -14.724160194396973
    6. 'space' → logprob: -15.099160194396973
    7. ' ' → logprob: -15.474160194396973
    8. '<|end|>' → logprob: -15.974160194396973
    9. '_' → logprob: -16.09916114807129
    10. 's' → logprob: -16.47416114807129

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326884031295776
    2. '=' → logprob: -1.3132688999176025
    3. '=input' → logprob: -12.063268661499023
    4. '=int' → logprob: -14.563268661499023
    5. ')' → logprob: -14.938268661499023
    6. ',' → logprob: -15.438268661499023
    7. ' ' → logprob: -15.438268661499023
    8. '   ' → logprob: -17.188268661499023
    9. '=line' → logprob: -17.313268661499023
    10. '=

' → logprob: -17.688268661499023

Token 107: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03804183006286621
    2. 'map' → logprob: -3.288041830062866
    3. '	map' → logprob: -15.413042068481445
    4. ' ' → logprob: -16.413042068481445
    5. '(map' → logprob: -16.538042068481445
    6. ' list' → logprob: -17.538042068481445
    7. '.map' → logprob: -17.788042068481445
    8. '[' → logprob: -18.413042068481445
    9. 'list' → logprob: -19.038042068481445
    10. ' input' → logprob: -19.038042068481445

Token 108: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012661826331168413
    2. '(input' → logprob: -7.251266002655029
    3. '(' → logprob: -8.001266479492188
    4. 'int' → logprob: -8.626266479492188
    5. '<int' → logprob: -10.501266479492188
    6. '(str' → logprob: -12.251266479492188
    7. '[int' → logprob: -12.376266479492188
    8. '(lambda' → logprob: -13.501266479492188
    9. '=int' → logprob: -14.001266479492188
    10. '(list' → logprob: -14.626266479492188

Token 109: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11018229275941849
    2. 'x' → logprob: -2.985182285308838
    3. ' int' → logprob: -3.360182285308838
    4. ' x' → logprob: -3.985182285308838
    5. ':int' → logprob: -8.860182762145996
    6. ':' → logprob: -9.110182762145996
    7. 'input' → logprob: -9.735182762145996
    8. 'lambda' → logprob: -9.860182762145996
    9. 'i' → logprob: -10.485182762145996
    10. ' input' → logprob: -10.860182762145996

Token 110: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2006070911884308
    2. ':int' → logprob: -1.8256070613861084
    3. ' :' → logprob: -4.3256072998046875
    4. 'int' → logprob: -4.9506072998046875
    5. ' int' → logprob: -9.200607299804688
    6. '=int' → logprob: -9.200607299804688
    7. '(int' → logprob: -10.450607299804688
    8. '[int' → logprob: -10.450607299804688
    9. ':x' → logprob: -10.575607299804688
    10. 'x' → logprob: -11.200607299804688

Token 111: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023265164345502853
    2. ' int' → logprob: -3.7732651233673096
    3. 'x' → logprob: -11.52326488494873
    4. ' x' → logprob: -12.27326488494873
    5. '(int' → logprob: -13.14826488494873
    6. '=int' → logprob: -14.27326488494873
    7. ' ' → logprob: -14.27326488494873
    8. '[int' → logprob: -14.64826488494873
    9. '<int' → logprob: -14.77326488494873
    10. ':int' → logprob: -15.14826488494873

Token 112: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -11.375025749206543
    3. ' (' → logprob: -11.625025749206543
    4. '(input' → logprob: -12.500025749206543
    5. 'x' → logprob: -13.625025749206543
    6. ',' → logprob: -17.000024795532227
    7. ')' → logprob: -17.125024795532227
    8. ' x' → logprob: -17.750024795532227
    9. 'input' → logprob: -17.875024795532227
    10. '(
' → logprob: -17.875024795532227

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02288854867219925
    2. ')-' → logprob: -3.897888660430908
    3. '()' → logprob: -6.647888660430908
    4. ' )' → logprob: -8.02288818359375
    5. 'x' → logprob: -8.89788818359375
    6. '-' → logprob: -9.14788818359375
    7. 'a' → logprob: -9.27288818359375
    8. '()-' → logprob: -9.27288818359375
    9. '())' → logprob: -9.39788818359375
    10. '(x' → logprob: -9.39788818359375

Token 114: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.89928138256073
    2. '()-' → logprob: -1.77428138256073
    3. ' -' → logprob: -1.89928138256073
    4. '-' → logprob: -1.89928138256073
    5. '(input' → logprob: -2.2742815017700195
    6. 'input' → logprob: -4.2742815017700195
    7. ')' → logprob: -6.1492815017700195
    8. ' ()' → logprob: -6.3992815017700195
    9. '(x' → logprob: -6.6492815017700195
    10. ' input' → logprob: -7.3992815017700195

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.50020408630371
    4. '<|end|>' → logprob: -19.00020408630371
    5. ')' → logprob: -19.12520408630371
    6. '```' → logprob: -19.37520408630371
    7. ',' → logprob: -19.87520408630371
    8. '  ' → logprob: -20.12520408630371
    9. '0' → logprob: -20.50020408630371
    10. 'to' → logprob: -20.87520408630371

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.12500762939453
    4. '   ' → logprob: -19.25000762939453
    5. '１' → logprob: -20.37500762939453
    6. '`' → logprob: -20.87500762939453
    7. '<|end|>' → logprob: -21.18750762939453
    8. ')' → logprob: -21.25000762939453
    9. '۱' → logprob: -21.43750762939453
    10. 'to' → logprob: -21.75000762939453

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014499468728899956
    2. ',input' → logprob: -4.264499664306641
    3. 'input' → logprob: -8.26449966430664
    4. ')' → logprob: -10.01449966430664
    5. ' ,' → logprob: -10.76449966430664
    6. '(input' → logprob: -13.01449966430664
    7. ',map' → logprob: -13.01449966430664
    8. '),' → logprob: -13.76449966430664
    9. '   ' → logprob: -13.76449966430664
    10. ',to' → logprob: -14.13949966430664

Token 118: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -18.376928329467773
    4. '   ' → logprob: -18.751928329467773
    5. ' ' → logprob: -19.376928329467773
    6. '=input' → logprob: -19.376928329467773
    7. ',input' → logprob: -20.501928329467773
    8. '	input' → logprob: -20.876928329467773
    9. ')' → logprob: -21.001928329467773
    10. '<input' → logprob: -21.251928329467773

Token 119: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001307142956648022
    2. '()' → logprob: -9.375130653381348
    3. '())' → logprob: -10.000130653381348
    4. ' ().' → logprob: -15.625130653381348
    5. ')' → logprob: -16.000131607055664
    6. '(' → logprob: -16.625131607055664
    7. '()))' → logprob: -18.500131607055664
    8. '()
' → logprob: -18.625131607055664
    9. '.split' → logprob: -18.875131607055664
    10. 'split' → logprob: -19.000131607055664

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001266613689949736
    2. 'strip' → logprob: -9.000126838684082
    3. ' split' → logprob: -12.875126838684082
    4. 'rstrip' → logprob: -15.250126838684082
    5. '().' → logprob: -16.125125885009766
    6. ')' → logprob: -16.125125885009766
    7. '(split' → logprob: -16.125125885009766
    8. 'spl' → logprob: -17.000125885009766
    9. '()' → logprob: -18.250125885009766
    10. ' ' → logprob: -18.375125885009766

Token 121: '())
' (ID: 4574)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7312700152397156
    2. '())' → logprob: -1.4812700748443604
    3. '()))' → logprob: -1.7312700748443604
    4. ')' → logprob: -2.2312700748443604
    5. '()' → logprob: -4.981269836425781
    6. '()))
' → logprob: -11.356269836425781
    7. '(' → logprob: -11.731269836425781
    8. ')))' → logprob: -12.606269836425781
    9. ' ))' → logprob: -12.856269836425781
    10. '())
' → logprob: -13.106269836425781

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03898552432656288
    2. 'to' → logprob: -3.66398549079895
    3. ' to' → logprob: -4.413985729217529
    4. '    
' → logprob: -9.038985252380371
    5. '	to' → logprob: -9.288985252380371
    6. '
' → logprob: -9.288985252380371
    7. '<|end|>' → logprob: -9.663985252380371
    8. ')' → logprob: -9.913985252380371
    9. '  ' → logprob: -10.663985252380371
    10. ' ' → logprob: -11.038985252380371

Token 123: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.005436877254396677
    2. ' to' → logprob: -5.630436897277832
    3. '   ' → logprob: -7.005436897277832
    4. '
' → logprob: -7.005436897277832
    5. '    
' → logprob: -11.255436897277832
    6. '```' → logprob: -12.880436897277832
    7. ' 
' → logprob: -13.255436897277832
    8. '	to' → logprob: -14.380436897277832
    9. ' ' → logprob: -14.380436897277832
    10. '  
' → logprob: -14.505436897277832

Token 124: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.41866585687967e-06
    2. 'a' → logprob: -12.375008583068848
    3. '[b' → logprob: -12.625008583068848
    4. '[' → logprob: -14.125008583068848
    5. ' [' → logprob: -17.00000762939453
    6. '[to' → logprob: -17.12500762939453
    7. '[A' → logprob: -19.25000762939453
    8. '```' → logprob: -19.62500762939453
    9. '[u' → logprob: -19.87500762939453
    10. ' a' → logprob: -19.87500762939453

Token 125: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.006760721560567617
    2. '.append' → logprob: -5.006760597229004
    3. '.' → logprob: -10.631760597229004
    4. ').' → logprob: -11.131760597229004
    5. ' ].' → logprob: -12.631760597229004
    6. ']' → logprob: -13.256760597229004
    7. ' .' → logprob: -14.506760597229004
    8. ''].' → logprob: -15.506760597229004
    9. '}.' → logprob: -15.756760597229004
    10. '[' → logprob: -15.756760597229004

Token 126: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.5
    4. '_append' → logprob: -21.375
    5. '	append' → logprob: -21.5
    6. 'appen' → logprob: -21.5
    7. 'app' → logprob: -22.375
    8. 'Append' → logprob: -22.75
    9. ' ' → logprob: -24.75
    10. 'add' → logprob: -24.875

Token 127: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.500000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' (' → logprob: -20.25
    5. ')b' → logprob: -20.625
    6. '	b' → logprob: -21.125
    7. '((' → logprob: -21.375
    8. ' b' → logprob: -21.5
    9. '(B' → logprob: -21.875
    10. '(
' → logprob: -22.125

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002506111632101238
    2. ')
' → logprob: -8.375250816345215
    3. ' )' → logprob: -10.875250816345215
    4. ')
' → logprob: -14.875250816345215
    5. '   ' → logprob: -15.375250816345215
    6. ')b' → logprob: -15.500250816345215
    7. '),' → logprob: -16.8752498626709
    8. ' )
' → logprob: -17.1252498626709
    9. ')

' → logprob: -17.8752498626709
    10. ')a' → logprob: -18.2502498626709

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03846486285328865
    2. 'to' → logprob: -3.2884647846221924
    3. ' to' → logprob: -7.7884650230407715
    4. '	to' → logprob: -12.163464546203613
    5. '    
' → logprob: -12.913464546203613
    6. '[to' → logprob: -15.038464546203613
    7. '   ' → logprob: -15.788464546203613
    8. '
' → logprob: -15.913464546203613
    9. ' ' → logprob: -16.03846549987793
    10. '       ' → logprob: -16.16346549987793

Token 130: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.017690476030111313
    2. ' to' → logprob: -4.517690658569336
    3. '   ' → logprob: -5.017690658569336
    4. ' ' → logprob: -14.642690658569336
    5. '	to' → logprob: -15.517690658569336
    6. '  ' → logprob: -15.767690658569336
    7. '[to' → logprob: -17.767690658569336
    8. '.to' → logprob: -18.392690658569336
    9. '    ' → logprob: -18.767690658569336
    10. '    
' → logprob: -18.892690658569336

Token 131: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.45848218582978e-06
    2. 'b' → logprob: -13.75000286102295
    3. '[' → logprob: -14.00000286102295
    4. '[a' → logprob: -14.75000286102295
    5. '```' → logprob: -17.000001907348633
    6. ' [' → logprob: -18.000001907348633
    7. '[to' → logprob: -18.250001907348633
    8. '[s' → logprob: -18.500001907348633
    9. '[
' → logprob: -19.625001907348633
    10. '[B' → logprob: -19.875001907348633

Token 132: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.009115086868405342
    2. ').' → logprob: -4.759115219116211
    3. ']' → logprob: -7.884115219116211
    4. ')' → logprob: -9.384115219116211
    5. '.' → logprob: -10.759115219116211
    6. '.append' → logprob: -11.634115219116211
    7. '])' → logprob: -12.259115219116211
    8. '[' → logprob: -13.759115219116211
    9. ']).' → logprob: -13.884115219116211
    10. ' ].' → logprob: -14.509115219116211

Token 133: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.125
    3. ' append' → logprob: -16.5
    4. '.append' → logprob: -17.625
    5. '	append' → logprob: -18.375
    6. 'app' → logprob: -20.25
    7. '_append' → logprob: -20.875
    8. 'add' → logprob: -21.0
    9. 'Append' → logprob: -21.875
    10. 'prepend' → logprob: -22.0

Token 134: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.375000953674316
    3. '(' → logprob: -14.750000953674316
    4. '(
' → logprob: -18.500001907348633
    5. '(A' → logprob: -20.000001907348633
    6. '(s' → logprob: -20.875001907348633
    7. ' (' → logprob: -21.375001907348633
    8. '((' → logprob: -21.500001907348633
    9. '(ai' → logprob: -21.750001907348633
    10. '()' → logprob: -22.875001907348633

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.951771421066951e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.250029563903809
    4. ')

' → logprob: -17.000028610229492
    5. '))' → logprob: -17.250028610229492
    6. ')
' → logprob: -18.375028610229492
    7. '),' → logprob: -18.875028610229492
    8. '}' → logprob: -19.000028610229492
    9. '`)' → logprob: -19.000028610229492
    10. '
' → logprob: -19.125028610229492

Token 136: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8602991700172424
    2. '#' → logprob: -0.9852991700172424
    3. 'visited' → logprob: -2.3602991104125977
    4. 'distance' → logprob: -2.4852991104125977
    5. 'start' → logprob: -5.610299110412598
    6. '
' → logprob: -5.610299110412598
    7. 'queue' → logprob: -5.735299110412598
    8. 'color' → logprob: -5.735299110412598
    9. 'depth' → logprob: -5.735299110412598
    10. 'q' → logprob: -6.110299110412598

Token 137: ' Lecture' (ID: 106534)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8626423478126526
    2. 'visited' → logprob: -1.2376422882080078
    3. '#' → logprob: -1.6126422882080078
    4. 'distance' → logprob: -3.112642288208008
    5. 'q' → logprob: -3.862642288208008
    6. 'queue' → logprob: -4.987642288208008
    7. 'start' → logprob: -5.862642288208008
    8. 'depth' → logprob: -5.987642288208008
    9. 'color' → logprob: -6.237642288208008
    10. 'def' → logprob: -6.362642288208008

Token 138: ' de' (ID: 334)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.8206871151924133
    2. '()' → logprob: -1.0706870555877686
    3. 'des' → logprob: -2.4456870555877686
    4. 'de' → logprob: -2.9456870555877686
    5. '(' → logprob: -3.6956870555877686
    6. 's' → logprob: -4.445687294006348
    7. '#' → logprob: -4.445687294006348
    8. 'd' → logprob: -5.195687294006348
    9. ' du' → logprob: -5.445687294006348
    10. 'Q' → logprob: -5.570687294006348

Token 139: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19513803720474243
    2. ' l' → logprob: -2.9451379776000977
    3. ' K' → logprob: -3.4451379776000977
    4. 'la' → logprob: -3.9451379776000977
    5. ' Q' → logprob: -4.320137977600098
    6. 'Q' → logprob: -4.695137977600098
    7. ' q' → logprob: -4.820137977600098
    8. 'K' → logprob: -5.195137977600098
    9. ' M' → logprob: -5.195137977600098
    10. 'l' → logprob: -5.320137977600098

Token 140: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.36346906423568726
    2. 'file' → logprob: -2.113469123840332
    3. ' liste' → logprob: -3.113469123840332
    4. 'distance' → logprob: -3.363469123840332
    5. 'val' → logprob: -3.738469123840332
    6. 'sequence' → logprob: -3.988469123840332
    7. 'queue' → logprob: -4.863469123840332
    8. 'list' → logprob: -5.113469123840332
    9. 'suite' → logprob: -5.238469123840332
    10. 's' → logprob: -5.738469123840332

Token 141: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8101675510406494
    2. 's' → logprob: -2.3101675510406494
    3. '_des' → logprob: -2.3101675510406494
    4. 'de' → logprob: -2.3101675510406494
    5. ' des' → logprob: -3.0601675510406494
    6. '_queries' → logprob: -3.0601675510406494
    7. 'd' → logprob: -3.3101675510406494
    8. '_s' → logprob: -3.4351675510406494
    9. 'queries' → logprob: -4.18516731262207
    10. '_de' → logprob: -4.18516731262207

Token 142: ' valeurs' (ID: 73668)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.224692702293396
    2. ' somm' → logprob: -1.349692702293396
    3. 'queries' → logprob: -2.5996928215026855
    4. ' distances' → logprob: -3.0996928215026855
    5. ' couleurs' → logprob: -3.3496928215026855
    6. ' noe' → logprob: -3.7246928215026855
    7. ' queries' → logprob: -3.8496928215026855
    8. ' poids' → logprob: -4.0996928215026855
    9. 'val' → logprob: -4.3496928215026855
    10. 'cl' → logprob: -4.5996928215026855

Token 143: ' à' (ID: 1221)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.1541566848754883
    2. 'val' → logprob: -1.2791566848754883
    3. 'values' → logprob: -1.2791566848754883
    4. 'V' → logprob: -3.6541566848754883
    5. 'a' → logprob: -4.029156684875488
    6. 'v' → logprob: -4.404156684875488
    7. 'A' → logprob: -4.654156684875488
    8. ' values' → logprob: -4.779156684875488
    9. 'des' → logprob: -5.279156684875488
    10. 'X' → logprob: -5.279156684875488

Token 144: ' assign' (ID: 14975)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.6562777161598206
    2. 'assign' → logprob: -1.2812776565551758
    3. 'assoc' → logprob: -2.656277656555176
    4. 'tr' → logprob: -3.531277656555176
    5. 'som' → logprob: -3.656277656555176
    6. 'attrib' → logprob: -4.281277656555176
    7. 'l' → logprob: -4.406277656555176
    8. 'chercher' → logprob: -5.031277656555176
    9. 'v' → logprob: -5.156277656555176
    10. 'aj' → logprob: -5.406277656555176

Token 145: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.3856492842023727e-06
    2. 'ées' → logprob: -14.125000953674316
    3. '#' → logprob: -15.375000953674316
    4. 'é' → logprob: -16.250001907348633
    5. 'es' → logprob: -16.375001907348633
    6. 'eer' → logprob: -16.375001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'ér' → logprob: -17.625001907348633
    9. 'éer' → logprob: -17.625001907348633
    10. 'ees' → logprob: -18.625001907348633

Token 146: ' aux' (ID: 5850)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.8451854586601257
    2. 'vals' → logprob: -1.0951855182647705
    3. 'val' → logprob: -1.9701855182647705
    4. 'A' → logprob: -3.2201855182647705
    5. 'V' → logprob: -3.9701855182647705
    6. 'X' → logprob: -4.720185279846191
    7. 'a' → logprob: -4.720185279846191
    8. 'P' → logprob: -5.720185279846191
    9. 'S' → logprob: -5.970185279846191
    10. 'C' → logprob: -5.970185279846191

Token 147: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027901874855160713
    2. 'som' → logprob: -4.277901649475098
    3. ' somm' → logprob: -5.027901649475098
    4. 'n' → logprob: -5.777901649475098
    5. '#' → logprob: -6.402901649475098
    6. 'no' → logprob: -6.777901649475098
    7. ' noe' → logprob: -7.777901649475098
    8. '```' → logprob: -7.777901649475098
    9. 'summ' → logprob: -9.777901649475098
    10. ' ' → logprob: -9.902901649475098

Token 148: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -1.664371848164592e-05
    2. 'êts' → logprob: -11.375016212463379
    3. 'et' → logprob: -12.875016212463379
    4. 'etso' → logprob: -14.000016212463379
    5. '#' → logprob: -14.500016212463379
    6. 'ents' → logprob: -15.500016212463379
    7. 'es' → logprob: -15.625016212463379
    8. 'ts' → logprob: -15.875016212463379
    9. 'ects' → logprob: -16.250017166137695
    10. 'e' → logprob: -16.250017166137695

Token 149: '
' (ID: 198)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.1496707797050476
    2. 'vals' → logprob: -2.1496708393096924
    3. 'val' → logprob: -4.399670600891113
    4. 'A' → logprob: -5.399670600891113
    5. 'a' → logprob: -6.649670600891113
    6. ' values' → logprob: -6.774670600891113
    7. 'V' → logprob: -6.899670600891113
    8. 'C' → logprob: -8.149670600891113
    9. 'X' → logprob: -8.149670600891113
    10. 'value' → logprob: -8.274670600891113

Token 150: 'c' (ID: 66)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.43332257866859436
    2. 'vals' → logprob: -1.308322548866272
    3. 'val' → logprob: -2.8083226680755615
    4. ' values' → logprob: -4.933322429656982
    5. 'A' → logprob: -5.308322429656982
    6. 'V' → logprob: -6.183322429656982
    7. 'a' → logprob: -6.183322429656982
    8. ' vals' → logprob: -6.808322429656982
    9. 'v' → logprob: -7.183322429656982
    10. 'value' → logprob: -7.933322429656982

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04909096285700798
    2. '=' → logprob: -3.04909086227417
    3. 's' → logprob: -8.549091339111328
    4. '_values' → logprob: -9.799091339111328
    5. 'al' → logprob: -9.799091339111328
    6. '_' → logprob: -10.174091339111328
    7. 'values' → logprob: -10.424091339111328
    8. 'val' → logprob: -10.799091339111328
    9. 'vals' → logprob: -11.049091339111328
    10. '_vals' → logprob: -11.299091339111328

Token 152: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20142124593257904
    2. ' list' → logprob: -1.7014212608337402
    3. '[list' → logprob: -12.076420783996582
    4. '[' → logprob: -13.826420783996582
    5. ' [' → logprob: -14.451420783996582
    6. '=list' → logprob: -15.076420783996582
    7. '[]' → logprob: -15.826420783996582
    8. '	list' → logprob: -16.2014217376709
    9. 'List' → logprob: -17.0764217376709
    10. '(list' → logprob: -17.2014217376709

Token 153: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004827157128602266
    2. '(' → logprob: -5.50482702255249
    3. '(int' → logprob: -7.25482702255249
    4. '(input' → logprob: -10.504827499389648
    5. 'map' → logprob: -12.004827499389648
    6. '(list' → logprob: -13.004827499389648
    7. '()' → logprob: -13.629827499389648
    8. '(eval' → logprob: -13.629827499389648
    9. '(range' → logprob: -14.129827499389648
    10. '(tuple' → logprob: -14.379827499389648

Token 154: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043567578541114926
    2. 'int' → logprob: -8.000435829162598
    3. '(' → logprob: -9.250435829162598
    4. '(lambda' → logprob: -13.250435829162598
    5. ' int' → logprob: -14.375435829162598
    6. ' (' → logprob: -14.875435829162598
    7. ',int' → logprob: -15.000435829162598
    8. '=int' → logprob: -15.000435829162598
    9. '<int' → logprob: -15.375435829162598
    10. '   ' → logprob: -16.00043487548828

Token 155: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01583211123943329
    2. ',input' → logprob: -4.26583194732666
    3. '(' → logprob: -7.01583194732666
    4. ',' → logprob: -7.39083194732666
    5. 'input' → logprob: -9.14083194732666
    6. ' (' → logprob: -10.51583194732666
    7. ' ,' → logprob: -11.89083194732666
    8. ' input' → logprob: -12.64083194732666
    9. ')' → logprob: -13.39083194732666
    10. '(
' → logprob: -13.51583194732666

Token 156: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00030161935137584805
    2. ' input' → logprob: -8.250301361083984
    3. '(input' → logprob: -10.125301361083984
    4. ',input' → logprob: -15.625301361083984
    5. ' ' → logprob: -17.125301361083984
    6. '=input' → logprob: -17.250301361083984
    7. '   ' → logprob: -17.750301361083984
    8. '_input' → logprob: -17.750301361083984
    9. '	input' → logprob: -17.875301361083984
    10. '[input' → logprob: -18.750301361083984

Token 157: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -14.625009536743164
    4. ')' → logprob: -17.500009536743164
    5. '(' → logprob: -17.750009536743164
    6. '.' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.500009536743164
    8. '()
' → logprob: -18.875009536743164
    9. ' .' → logprob: -19.250009536743164
    10. ' ' → logprob: -20.125009536743164

Token 158: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.676981345459353e-06
    2. 'strip' → logprob: -12.250005722045898
    3. ' split' → logprob: -14.125005722045898
    4. '(split' → logprob: -16.6250057220459
    5. 'spl' → logprob: -19.2500057220459
    6. 'rstrip' → logprob: -19.2500057220459
    7. ')' → logprob: -20.1250057220459
    8. 's' → logprob: -20.5000057220459
    9. '.split' → logprob: -20.6250057220459
    10. ' ' → logprob: -21.1250057220459

Token 159: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.33071327209472656
    2. '()))' → logprob: -1.3307132720947266
    3. '()' → logprob: -4.330713272094727
    4. ')' → logprob: -5.955713272094727
    5. '())' → logprob: -6.830713272094727
    6. '(' → logprob: -7.705713272094727
    7. '()));' → logprob: -12.205713272094727
    8. '()))
' → logprob: -12.455713272094727
    9. ' ))' → logprob: -12.705713272094727
    10. ')))' → logprob: -12.830713272094727

Token 160: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.144384741783142
    2. '
' → logprob: -1.519384741783142
    3. 'dist' → logprob: -1.519384741783142
    4. 'visited' → logprob: -2.1443848609924316
    5. 'distance' → logprob: -3.3943848609924316
    6. 'queue' → logprob: -4.019384860992432
    7. 'q' → logprob: -4.519384860992432
    8. 'color' → logprob: -4.894384860992432
    9. 'deque' → logprob: -5.144384860992432
    10. 'vis' → logprob: -5.269384860992432

Token 161: ' Trie' (ID: 131955)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9921838045120239
    2. 'q' → logprob: -1.992183804512024
    3. 'visited' → logprob: -2.4921836853027344
    4. '#' → logprob: -2.6171836853027344
    5. 'depth' → logprob: -3.1171836853027344
    6. 'ans' → logprob: -3.3671836853027344
    7. 'used' → logprob: -3.4921836853027344
    8. 'dp' → logprob: -3.7421836853027344
    9. 'd' → logprob: -3.7421836853027344
    10. 'res' → logprob: -3.8671836853027344

Token 162: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02434496022760868
    2. '(c' → logprob: -3.8993449211120605
    3. 's' → logprob: -7.0243449211120605
    4. '()' → logprob: -7.2743449211120605
    5. 'd' → logprob: -7.5243449211120605
    6. ' c' → logprob: -7.6493449211120605
    7. '_c' → logprob: -8.024345397949219
    8. 'sorted' → logprob: -8.274345397949219
    9. '(' → logprob: -9.024345397949219
    10. '(sorted' → logprob: -9.149345397949219

Token 163: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12342117726802826
    2. '(c' → logprob: -2.2484211921691895
    3. ' c' → logprob: -5.7484211921691895
    4. '(range' → logprob: -5.8734211921691895
    5. 'range' → logprob: -6.1234211921691895
    6. '(' → logprob: -7.2484211921691895
    7. '(sorted' → logprob: -7.2484211921691895
    8. 'sorted' → logprob: -8.373420715332031
    9. 'enumer' → logprob: -8.748420715332031
    10. 'indices' → logprob: -9.123420715332031

Token 164: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0021039829589426517
    2. ' c' → logprob: -6.627103805541992
    3. 'enumer' → logprob: -8.002103805541992
    4. 'indices' → logprob: -9.002103805541992
    5. 'range' → logprob: -9.377103805541992
    6. 'val' → logprob: -9.752103805541992
    7. 'sorted' → logprob: -9.877103805541992
    8. 'values' → logprob: -10.752103805541992
    9. 'list' → logprob: -10.877103805541992
    10. 'C' → logprob: -11.127103805541992

Token 165: ' pour' (ID: 1930)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012994037242606282
    2. '(c' → logprob: -7.2512993812561035
    3. '()' → logprob: -8.251299858093262
    4. ' c' → logprob: -8.751299858093262
    5. '_c' → logprob: -10.126299858093262
    6. '(' → logprob: -10.251299858093262
    7. '()
' → logprob: -10.876299858093262
    8. 's' → logprob: -11.376299858093262
    9. '(
' → logprob: -11.376299858093262
    10. 'sorted' → logprob: -11.751299858093262

Token 166: ' faciliter' (ID: 106284)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9274187684059143
    2. 'c' → logprob: -1.1774187088012695
    3. ' garantir' → logprob: -2.4274187088012695
    4. ' obtenir' → logprob: -2.6774187088012695
    5. ' s' → logprob: -3.3024187088012695
    6. 'assign' → logprob: -4.3024187088012695
    7. ' pouvoir' → logprob: -4.4274187088012695
    8. 's' → logprob: -4.6774187088012695
    9. ' assign' → logprob: -4.8024187088012695
    10. 'r' → logprob: -5.0524187088012695

Token 167: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4300088584423065
    2. 'la' → logprob: -1.805008888244629
    3. ' la' → logprob: -2.680008888244629
    4. 'c' → logprob: -3.055008888244629
    5. ' l' → logprob: -3.430008888244629
    6. 'le' → logprob: -4.180008888244629
    7. ' c' → logprob: -5.180008888244629
    8. 'une' → logprob: -5.680008888244629
    9. 'les' → logprob: -6.430008888244629
    10. 'assign' → logprob: -6.680008888244629

Token 168: ''aff' (ID: 53397)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7369741201400757
    2. 'a' → logprob: -1.8619741201400757
    3. 'e' → logprob: -1.9869741201400757
    4. ''accès' → logprob: -1.9869741201400757
    5. 'assign' → logprob: -2.3619742393493652
    6. '#' → logprob: -2.8619742393493652
    7. ''aff' → logprob: -3.1119742393493652
    8. 'aff' → logprob: -3.4869742393493652
    9. ''' → logprob: -3.7369742393493652
    10. 'tri' → logprob: -4.236974239349365

Token 169: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.148232102394104
    2. 'in' → logprob: -2.3982319831848145
    3. 'ichage' → logprob: -3.2732319831848145
    4. 'inement' → logprob: -4.8982319831848145
    5. '#' → logprob: -7.3982319831848145
    6. 'ic' → logprob: -7.8982319831848145
    7. 'ection' → logprob: -9.023232460021973
    8. 'icher' → logprob: -9.898232460021973
    9. 'ich' → logprob: -10.148232460021973
    10. 'iner' → logprob: -10.148232460021973

Token 170: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -2.0100624169572257e-05
    2. 'ion' → logprob: -11.500020027160645
    3. 'nation' → logprob: -13.125020027160645
    4. 'ations' → logprob: -13.500020027160645
    5. 'cation' → logprob: -14.000020027160645
    6. 'ect' → logprob: -14.125020027160645
    7. ' at' → logprob: -14.250020027160645
    8. 'mentation' → logprob: -14.375020027160645
    9. 'a' → logprob: -14.500020027160645
    10. 'ection' → logprob: -14.625020027160645

Token 171: ' des' (ID: 731)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.9186317482963204e-05
    2. 'sorted' → logprob: -11.000049591064453
    3. 's' → logprob: -11.625049591064453
    4. ' c' → logprob: -11.750049591064453
    5. '#' → logprob: -12.500049591064453
    6. '```' → logprob: -13.375049591064453
    7. ',' → logprob: -13.750049591064453
    8. '
' → logprob: -13.875049591064453
    9. '.' → logprob: -14.000049591064453
    10. '=' → logprob: -14.125049591064453

Token 172: ' plus' (ID: 2932)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3312889635562897
    2. 'cou' → logprob: -2.456289052963257
    3. 'c' → logprob: -2.581289052963257
    4. ' valeurs' → logprob: -3.331289052963257
    5. ' couleurs' → logprob: -3.456289052963257
    6. 's' → logprob: -3.456289052963257
    7. ' c' → logprob: -5.331288814544678
    8. ' somm' → logprob: -5.331288814544678
    9. 'values' → logprob: -5.831288814544678
    10. 'colors' → logprob: -6.081288814544678

Token 173: ' grandes' (ID: 16325)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.008269867859780788
    2. ' petites' → logprob: -5.008269786834717
    3. ' petits' → logprob: -7.258269786834717
    4. 'gr' → logprob: -7.633269786834717
    5. ' pet' → logprob: -9.383270263671875
    6. ' grandes' → logprob: -9.508270263671875
    7. 'b' → logprob: -10.508270263671875
    8. '```' → logprob: -10.633270263671875
    9. 'c' → logprob: -10.758270263671875
    10. 'import' → logprob: -11.508270263671875

Token 174: ' valeurs' (ID: 73668)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.874793291091919
    2. ' valeurs' → logprob: -1.249793291091919
    3. ' c' → logprob: -1.999793291091919
    4. 'val' → logprob: -2.374793291091919
    5. 'values' → logprob: -3.249793291091919
    6. '(c' → logprob: -5.37479305267334
    7. ' values' → logprob: -5.62479305267334
    8. '_c' → logprob: -5.99979305267334
    9. '_values' → logprob: -6.12479305267334
    10. '_val' → logprob: -6.24979305267334

Token 175: ' en' (ID: 469)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.951771421066951e-05
    2. 'sorted' → logprob: -11.375029563903809
    3. ' c' → logprob: -12.125029563903809
    4. ',' → logprob: -12.875029563903809
    5. ')c' → logprob: -13.000029563903809
    6. 's' → logprob: -13.375029563903809
    7. '_c' → logprob: -13.625029563903809
    8. ')' → logprob: -14.125029563903809
    9. '```' → logprob: -14.375029563903809
    10. '#' → logprob: -14.750029563903809

Token 176: ' priorité' (ID: 150252)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -2.0899131298065186
    2. ' ordre' → logprob: -2.0899131298065186
    3. ' descendants' → logprob: -2.4649131298065186
    4. ' descending' → logprob: -2.4649131298065186
    5. ' profondeur' → logprob: -2.7149131298065186
    6. 'c' → logprob: -2.8399131298065186
    7. ' descendant' → logprob: -2.8399131298065186
    8. ' sens' → logprob: -2.9649131298065186
    9. 'desc' → logprob: -3.0899131298065186
    10. ' reverse' → logprob: -3.2149131298065186

Token 177: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.927930654550437e-05
    2. ' c' → logprob: -11.500029563903809
    3. 'sorted' → logprob: -11.750029563903809
    4. 's' → logprob: -12.250029563903809
    5. '#' → logprob: -13.000029563903809
    6. '```' → logprob: -14.500029563903809
    7. 'с' → logprob: -14.625029563903809
    8. '_c' → logprob: -14.625029563903809
    9. ')c' → logprob: -14.625029563903809
    10. ',' → logprob: -14.625029563903809

Token 178: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0280383548888494e-06
    2. ' c' → logprob: -14.625000953674316
    3. 'sorted' → logprob: -15.500000953674316
    4. '#' → logprob: -16.250001907348633
    5. '
' → logprob: -16.625001907348633
    6. 'с' → logprob: -17.125001907348633
    7. '	c' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. 's' → logprob: -18.875001907348633
    10. '   ' → logprob: -18.875001907348633

Token 179: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.008630403317511082
    2. '.' → logprob: -4.758630275726318
    3. '=' → logprob: -11.508630752563477
    4. 'sort' → logprob: -13.008630752563477
    5. ' =' → logprob: -13.258630752563477
    6. '.sorted' → logprob: -14.633630752563477
    7. ' .' → logprob: -15.008630752563477
    8. ').' → logprob: -15.133630752563477
    9. '.reverse' → logprob: -15.383630752563477
    10. '.=' → logprob: -16.008630752563477

Token 180: '()

' (ID: 5874)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.3165682256221771
    2. '()' → logprob: -1.3165682554244995
    3. '(' → logprob: -5.816568374633789
    4. 'reverse' → logprob: -8.066568374633789
    5. '(re' → logprob: -12.441568374633789
    6. '()
' → logprob: -13.441568374633789
    7. '.reverse' → logprob: -13.566568374633789
    8. 'rev' → logprob: -14.441568374633789
    9. '_reverse' → logprob: -14.691568374633789
    10. '(),' → logprob: -15.066568374633789

Token 181: 'def' (ID: 1314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.4162909984588623
    2. 'queue' → logprob: -2.1662909984588623
    3. 'res' → logprob: -2.2912909984588623
    4. 'q' → logprob: -2.2912909984588623
    5. 'used' → logprob: -2.4162909984588623
    6. 'dist' → logprob: -2.7912909984588623
    7. 'order' → logprob: -3.0412909984588623
    8. '#' → logprob: -3.2912909984588623
    9. 'assigned' → logprob: -3.9162909984588623
    10. 'vis' → logprob: -4.041291236877441

Token 182: ' main' (ID: 2758)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.03872121497988701
    2. ' dfs' → logprob: -3.5387213230133057
    3. ' assign' → logprob: -4.788721084594727
    4. 'b' → logprob: -8.788721084594727
    5. ' solve' → logprob: -8.788721084594727
    6. 'dfs' → logprob: -9.163721084594727
    7. ' BFS' → logprob: -10.038721084594727
    8. ' main' → logprob: -10.038721084594727
    9. ' ' → logprob: -11.288721084594727
    10. 'assign' → logprob: -11.413721084594727

Token 183: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003044802288059145
    2. ' ():' → logprob: -8.625304222106934
    3. '()' → logprob: -9.375304222106934
    4. '():
' → logprob: -10.500304222106934
    5. '(' → logprob: -11.375304222106934
    6. ' ()' → logprob: -15.000304222106934
    7. '(:' → logprob: -15.125304222106934
    8. '_' → logprob: -15.500304222106934
    9. '(":' → logprob: -16.00030517578125
    10. '():
' → logprob: -16.25030517578125

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011204972863197327
    2. 'visited' → logprob: -5.261205196380615
    3. ' visited' → logprob: -5.386205196380615
    4. 'queue' → logprob: -7.761205196380615
    5. '    
' → logprob: -8.011204719543457
    6. ' ' → logprob: -8.886204719543457
    7. ' queue' → logprob: -9.011204719543457
    8. 'q' → logprob: -9.386204719543457
    9. 'deque' → logprob: -10.011204719543457
    10. 'dist' → logprob: -10.261204719543457

Token 185: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0396757125854492
    2. 'dist' → logprob: -1.2896757125854492
    3. 'visited' → logprob: -1.7896757125854492
    4. ' visited' → logprob: -2.539675712585449
    5. 'queue' → logprob: -3.539675712585449
    6. 'q' → logprob: -3.539675712585449
    7. ' dist' → logprob: -3.914675712585449
    8. ' ' → logprob: -4.039675712585449
    9. ' q' → logprob: -5.539675712585449
    10. 'used' → logprob: -5.664675712585449

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6918067932128906
    2. 'visited' → logprob: -1.0668067932128906
    3. 'queue' → logprob: -3.0668067932128906
    4. 'q' → logprob: -3.5668067932128906
    5. '#' → logprob: -4.066806793212891
    6. ' ' → logprob: -4.316806793212891
    7. ' visited' → logprob: -4.316806793212891
    8. 'from' → logprob: -4.441806793212891
    9. 'global' → logprob: -4.941806793212891
    10. 'd' → logprob: -5.566806793212891

Token 187: ' Pro' (ID: 1258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4721384644508362
    2. '#' → logprob: -1.7221384048461914
    3. ' #' → logprob: -2.2221384048461914
    4. ' bfs' → logprob: -3.4721384048461914
    5. ' BFS' → logprob: -4.597138404846191
    6. ' La' → logprob: -5.222138404846191
    7. ' queue' → logprob: -5.347138404846191
    8. 'B' → logprob: -5.347138404846191
    9. '    ' → logprob: -5.472138404846191
    10. ' """' → logprob: -5.597138404846191

Token 188: 'page' (ID: 5342)
  Prédit: 'cess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.8938533663749695
    2. 'gram' → logprob: -0.8938533663749695
    3. 'c' → logprob: -1.8938534259796143
    4. 'm' → logprob: -3.8938534259796143
    5. 'cé' → logprob: -5.518853187561035
    6. '
' → logprob: -6.893853187561035
    7. 'logue' → logprob: -7.268853187561035
    8. '"""
' → logprob: -7.768853187561035
    9. 'ceed' → logprob: -7.893853187561035
    10. 'cesse' → logprob: -7.893853187561035

Token 189: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6938132643699646
    2. ' la' → logprob: -1.4438133239746094
    3. 'r' → logprob: -1.6938133239746094
    4. ' le' → logprob: -3.4438133239746094
    5. 'tion' → logprob: -4.318813323974609
    6. ' the' → logprob: -4.943813323974609
    7. '()' → logprob: -5.318813323974609
    8. '   ' → logprob: -5.818813323974609
    9. 's' → logprob: -5.943813323974609
    10. 'l' → logprob: -5.943813323974609

Token 190: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0860258936882019
    2. ' valeurs' → logprob: -2.5860259532928467
    3. 'plus' → logprob: -5.586025714874268
    4. ' val' → logprob: -7.211025714874268
    5. ' plus' → logprob: -7.586025714874268
    6. 'values' → logprob: -7.711025714874268
    7. 'labels' → logprob: -8.211026191711426
    8. 'vals' → logprob: -8.461026191711426
    9. 'scores' → logprob: -8.711026191711426
    10. 'cou' → logprob: -8.836026191711426

Token 191: ' dans' (ID: 2671)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.152828335762024
    2. ' ' → logprob: -1.652828335762024
    3. '   ' → logprob: -1.652828335762024
    4. ' des' → logprob: -2.1528282165527344
    5. ' assign' → logprob: -3.1528282165527344
    6. 'assign' → logprob: -3.7778282165527344
    7. ' du' → logprob: -3.9028282165527344
    8. ' dans' → logprob: -4.027828216552734
    9. ' sur' → logprob: -4.277828216552734
    10. ' à' → logprob: -4.402828216552734

Token 192: ' l' (ID: 305)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.14157387614250183
    2. 'le' → logprob: -2.516573905944824
    3. ' la' → logprob: -3.516573905944824
    4. ' un' → logprob: -5.016573905944824
    5. ' l' → logprob: -5.141573905944824
    6. ' une' → logprob: -6.266573905944824
    7. 'l' → logprob: -6.266573905944824
    8. 'la' → logprob: -6.391573905944824
    9. ' les' → logprob: -7.016573905944824
    10. 'un' → logprob: -7.766573905944824

Token 193: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.13913129270076752
    2. 'e' → logprob: -2.3891313076019287
    3. 'a' → logprob: -4.63913106918335
    4. ''ordre' → logprob: -5.01413106918335
    5. ' arbre' → logprob: -5.13913106918335
    6. 'ar' → logprob: -5.51413106918335
    7. ''' → logprob: -5.76413106918335
    8. 'es' → logprob: -5.76413106918335
    9. ''ensemble' → logprob: -5.76413106918335
    10. ''espace' → logprob: -7.13913106918335

Token 194: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0014771291753277183
    2. 'b' → logprob: -7.251477241516113
    3. 'e' → logprob: -8.126477241516113
    4. 'bo' → logprob: -8.251477241516113
    5. 'bres' → logprob: -9.626477241516113
    6. 'g' → logprob: -10.626477241516113
    7. 'bor' → logprob: -10.626477241516113
    8. 'r' → logprob: -10.876477241516113
    9. 'c' → logprob: -11.251477241516113
    10. 'be' → logprob: -11.376477241516113

Token 195: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4488754868507385
    2. ' en' → logprob: -1.0738754272460938
    3. ',' → logprob: -4.323875427246094
    4. ' de' → logprob: -6.948875427246094
    5. 'en' → logprob: -7.198875427246094
    6. ' ' → logprob: -7.323875427246094
    7. '.' → logprob: -7.323875427246094
    8. ' depuis' → logprob: -7.823875427246094
    9. ' du' → logprob: -8.198875427246094
    10. ':' → logprob: -8.198875427246094

Token 196: ' attrib' (ID: 72186)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.1106221005320549
    2. 'part' → logprob: -3.8606221675872803
    3. ' utilisant' → logprob: -4.360621929168701
    4. 'pro' → logprob: -4.485621929168701
    5. ' largeur' → logprob: -4.485621929168701
    6. 'util' → logprob: -4.860621929168701
    7. ' large' → logprob: -4.985621929168701
    8. 'B' → logprob: -5.610621929168701
    9. ' profondeur' → logprob: -5.735621929168701
    10. 'larg' → logprob: -5.735621929168701

Token 197: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.0007360121817328036
    2. 'u' → logprob: -7.375736236572266
    3. 'uent' → logprob: -10.250736236572266
    4. 'ue' → logprob: -10.250736236572266
    5. 'uer' → logprob: -10.500736236572266
    6. 'ant' → logprob: -12.000736236572266
    7. 'ué' → logprob: -13.375736236572266
    8. '#' → logprob: -14.125736236572266
    9. 'uable' → logprob: -14.375736236572266
    10. 'ues' → logprob: -14.625736236572266

Token 198: ' la' (ID: 557)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.051950454711914
    2. ' les' → logprob: -1.176950454711914
    3. ' des' → logprob: -2.176950454711914
    4. 'les' → logprob: -2.426950454711914
    5. 'des' → logprob: -2.551950454711914
    6. ' une' → logprob: -3.676950454711914
    7. 'aux' → logprob: -4.426950454711914
    8. ' la' → logprob: -4.426950454711914
    9. 'une' → logprob: -6.176950454711914
    10. ')' → logprob: -6.551950454711914

Token 199: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.13679490983486176
    2. 'plus' → logprob: -2.3867948055267334
    3. ' valeurs' → logprob: -4.0117950439453125
    4. 'val' → logprob: -4.1367950439453125
    5. ' meilleures' → logprob: -7.6367950439453125
    6. ' valeur' → logprob: -8.136795043945312
    7. ' val' → logprob: -8.511795043945312
    8. 'max' → logprob: -8.636795043945312
    9. ' largest' → logprob: -9.261795043945312
    10. ' maximum' → logprob: -9.261795043945312

Token 200: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5204172134399414
    2. ' grande' → logprob: -1.3954172134399414
    3. 'grand' → logprob: -2.5204172134399414
    4. ' grand' → logprob: -2.6454172134399414
    5. ' haute' → logprob: -5.645417213439941
    6. ' grandes' → logprob: -6.395417213439941
    7. ' grands' → logprob: -8.395417213439941
    8. 'import' → logprob: -8.520417213439941
    9. ' large' → logprob: -9.270417213439941
    10. ' forte' → logprob: -9.395417213439941

Token 201: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.431505411863327
    2. ' valeur' → logprob: -1.0565054416656494
    3. ' val' → logprob: -6.55650520324707
    4. 'value' → logprob: -6.93150520324707
    5. ' value' → logprob: -8.68150520324707
    6. 'possible' → logprob: -10.30650520324707
    7. 's' → logprob: -10.43150520324707
    8. ' ' → logprob: -10.43150520324707
    9. ' possible' → logprob: -10.68150520324707
    10. '   ' → logprob: -10.80650520324707

Token 202: ' au' (ID: 2791)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.2089451104402542
    2. ' aux' → logprob: -2.4589450359344482
    3. 'possible' → logprob: -3.3339450359344482
    4. ' à' → logprob: -3.5839450359344482
    5. ' au' → logprob: -4.333945274353027
    6. '   ' → logprob: -4.458945274353027
    7. ' disponible' → logprob: -4.958945274353027
    8. 'à' → logprob: -6.583945274353027
    9. 'aux' → logprob: -6.583945274353027
    10. 'au' → logprob: -6.583945274353027

Token 203: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.4681662917137146
    2. 'som' → logprob: -1.7181663513183594
    3. 'root' → logprob: -2.2181663513183594
    4. '0' → logprob: -3.2181663513183594
    5. ' root' → logprob: -4.468166351318359
    6. ' noe' → logprob: -5.093166351318359
    7. 'rac' → logprob: -5.218166351318359
    8. 'la' → logprob: -5.218166351318359
    9. ' la' → logprob: -5.593166351318359
    10. 's' → logprob: -5.843166351318359

Token 204: ' ' (ID: 220)
  Prédit: ' rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rac' → logprob: -0.4795204699039459
    2. 'rac' → logprob: -0.9795204401016235
    3. ' de' → logprob: -6.229520320892334
    4. 'de' → logprob: -6.354520320892334
    5. '#' → logprob: -7.729520320892334
    6. 'root' → logprob: -7.729520320892334
    7. '   ' → logprob: -8.104520797729492
    8. '0' → logprob: -8.729520797729492
    9. ' ' → logprob: -9.479520797729492
    10. ' root' → logprob: -9.729520797729492

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024842791259288788
    2. ' ' → logprob: -4.649842739105225
    3. 'rac' → logprob: -4.649842739105225
    4. ' rac' → logprob: -5.274842739105225
    5. '1' → logprob: -9.524843215942383
    6. 'de' → logprob: -9.649843215942383
    7. '#' → logprob: -10.024843215942383
    8. 'root' → logprob: -10.149843215942383
    9. ' de' → logprob: -11.149843215942383
    10. ' #' → logprob: -11.274843215942383

Token 206: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018905775621533394
    2. ',' → logprob: -4.1439056396484375
    3. ')' → logprob: -6.0189056396484375
    4. '.' → logprob: -8.768905639648438
    5. ' et' → logprob: -10.018905639648438
    6. '):' → logprob: -10.018905639648438
    7. ' )' → logprob: -10.393905639648438
    8. '    ' → logprob: -10.518905639648438
    9. ' ,' → logprob: -10.768905639648438
    10. '
' → logprob: -11.143905639648438

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030180497094988823
    2. ',' → logprob: -3.6551804542541504
    3. '.' → logprob: -6.40518045425415
    4. ' et' → logprob: -6.90518045425415
    5. ')' → logprob: -7.90518045425415
    6. '#' → logprob: -8.280180931091309
    7. 'et' → logprob: -8.530180931091309
    8. ' puis' → logprob: -8.905180931091309
    9. '    ' → logprob: -9.530180931091309
    10. ' en' → logprob: -10.155180931091309

Token 208: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11180669814348221
    2. ',' → logprob: -2.611806631088257
    3. ' et' → logprob: -4.361806869506836
    4. '.' → logprob: -4.486806869506836
    5. '#' → logprob: -5.861806869506836
    6. 'et' → logprob: -6.111806869506836
    7. ' en' → logprob: -6.611806869506836
    8. ' puis' → logprob: -7.236806869506836
    9. ')' → logprob: -7.861806869506836
    10. '"""' → logprob: -8.736806869506836

Token 209: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1886944770812988
    2. 'en' → logprob: -1.4386944770812988
    3. ' en' → logprob: -1.4386944770812988
    4. 'expl' → logprob: -2.563694477081299
    5. 'prop' → logprob: -4.313694477081299
    6. 'attrib' → logprob: -4.313694477081299
    7. 'aux' → logprob: -4.563694477081299
    8. ' pro' → logprob: -4.688694477081299
    9. ' attrib' → logprob: -4.688694477081299
    10. 'pro' → logprob: -5.063694477081299

Token 210: ' parcour' (ID: 130642)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5023261308670044
    2. ' en' → logprob: -2.002326011657715
    3. ' parcour' → logprob: -2.377326011657715
    4. '#' → logprob: -3.752326011657715
    5. '    ' → logprob: -4.002326011657715
    6. ' #' → logprob: -4.252326011657715
    7. ' propag' → logprob: -4.252326011657715
    8. ' la' → logprob: -4.377326011657715
    9. ' parc' → logprob: -4.627326011657715
    10. ' les' → logprob: -4.752326011657715

Token 211: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0006463141762651503
    2. 'issant' → logprob: -8.750646591186523
    3. 'u' → logprob: -9.250646591186523
    4. '   ' → logprob: -9.250646591186523
    5. 'a' → logprob: -10.250646591186523
    6. '```' → logprob: -10.250646591186523
    7. 'vant' → logprob: -10.375646591186523
    8. 't' → logprob: -10.375646591186523
    9. 'ent' → logprob: -10.500646591186523
    10. 'ivant' → logprob: -10.750646591186523

Token 212: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9947933554649353
    2. ' la' → logprob: -1.49479341506958
    3. ' le' → logprob: -1.61979341506958
    4. ' les' → logprob: -1.99479341506958
    5. 'l' → logprob: -3.36979341506958
    6. 'le' → logprob: -3.99479341506958
    7. 'les' → logprob: -5.49479341506958
    8. ' en' → logprob: -6.11979341506958
    9. ' tous' → logprob: -6.11979341506958
    10. ' ses' → logprob: -6.24479341506958

Token 213: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.06286520510911942
    2. ''ensemble' → logprob: -3.8128652572631836
    3. 'a' → logprob: -4.187865257263184
    4. 'e' → logprob: -4.312865257263184
    5. ''' → logprob: -5.687865257263184
    6. 'ar' → logprob: -5.687865257263184
    7. 'es' → logprob: -6.937865257263184
    8. ' arbre' → logprob: -7.312865257263184
    9. '’ar' → logprob: -7.437865257263184
    10. ''intégr' → logprob: -7.937865257263184

Token 214: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -8.864272967912257e-05
    2. 'bo' → logprob: -9.875088691711426
    3. 'b' → logprob: -11.000088691711426
    4. 'bres' → logprob: -12.375088691711426
    5. '
' → logprob: -12.875088691711426
    6. 'e' → logprob: -13.000088691711426
    7. 'ble' → logprob: -13.375088691711426
    8. '^' → logprob: -13.500088691711426
    9. 'che' → logprob: -14.000088691711426
    10. 'bor' → logprob: -14.125088691711426

Token 215: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08071787655353546
    2. 'en' → logprob: -2.9557178020477295
    3. ',' → logprob: -3.9557178020477295
    4. ' par' → logprob: -6.455718040466309
    5. ' breadth' → logprob: -6.705718040466309
    6. ' de' → logprob: -7.080718040466309
    7. ' niveau' → logprob: -8.080718040466309
    8. 'de' → logprob: -8.705718040466309
    9. ' au' → logprob: -8.705718040466309
    10. ' à' → logprob: -8.705718040466309

Token 216: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6091394424438477
    2. 'une' → logprob: -1.4841394424438477
    3. 'b' → logprob: -2.3591394424438477
    4. 'B' → logprob: -3.1091394424438477
    5. ' un' → logprob: -3.8591394424438477
    6. ' BFS' → logprob: -3.9841394424438477
    7. 'un' → logprob: -4.234139442443848
    8. 'la' → logprob: -4.484139442443848
    9. ' breadth' → logprob: -4.734139442443848
    10. ' bfs' → logprob: -5.359139442443848

Token 217: ' recherche' (ID: 24975)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.03907701000571251
    2. 'deque' → logprob: -4.289076805114746
    3. 'queue' → logprob: -4.414076805114746
    4. ' file' → logprob: -4.414076805114746
    5. 'pile' → logprob: -8.414076805114746
    6. 'File' → logprob: -10.664076805114746
    7. '#' → logprob: -10.914076805114746
    8. ' deque' → logprob: -11.039076805114746
    9. 'b' → logprob: -11.289076805114746
    10. ' queue' → logprob: -11.289076805114746

Token 218: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6361029148101807
    2. 'en' → logprob: -0.7611029148101807
    3. 'par' → logprob: -7.011102676391602
    4. '   ' → logprob: -7.886102676391602
    5. ' breadth' → logprob: -7.886102676391602
    6. 'b' → logprob: -8.011102676391602
    7. 'de' → logprob: -8.136102676391602
    8. ' par' → logprob: -8.386102676391602
    9. 'pro' → logprob: -8.761102676391602
    10. 'bread' → logprob: -8.886102676391602

Token 219: ' largeur' (ID: 180807)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.013254936784505844
    2. 'pro' → logprob: -4.3882551193237305
    3. ' largeur' → logprob: -7.7632551193237305
    4. 'prof' → logprob: -9.01325511932373
    5. 'bread' → logprob: -9.26325511932373
    6. '_large' → logprob: -10.76325511932373
    7. ' profondeur' → logprob: -10.88825511932373
    8. ' large' → logprob: -10.88825511932373
    9. 'larg' → logprob: -11.13825511932373
    10. 'Large' → logprob: -11.88825511932373

Token 220: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.36933350563049316
    2. ',' → logprob: -1.7443335056304932
    3. 'b' → logprob: -2.494333505630493
    4. ')' → logprob: -3.494333505630493
    5. 'bread' → logprob: -4.994333267211914
    6. '(B' → logprob: -5.244333267211914
    7. ' breadth' → logprob: -6.119333267211914
    8. '(b' → logprob: -6.494333267211914
    9. '),' → logprob: -6.744333267211914
    10. 'de' → logprob: -7.744333267211914

Token 221: 'B' (ID: 33)
  Prédit: ' breadth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' breadth' → logprob: -0.5772495269775391
    2. 'B' → logprob: -1.577249526977539
    3. 'bread' → logprob: -2.577249526977539
    4. ' BFS' → logprob: -2.952249526977539
    5. ')' → logprob: -3.077249526977539
    6. 'b' → logprob: -3.702249526977539
    7. 'Bread' → logprob: -4.577249526977539
    8. ' largeur' → logprob: -4.702249526977539
    9. ' bfs' → logprob: -4.952249526977539
    10. '),' → logprob: -6.577249526977539

Token 222: 'FS' (ID: 14179)
  Prédit: 'FS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -0.020804626867175102
    2. 'F' → logprob: -3.8958046436309814
    3. ')' → logprob: -9.145804405212402
    4. 'fs' → logprob: -9.895804405212402
    5. '
' → logprob: -10.645804405212402
    6. '   ' → logprob: -11.395804405212402
    7. 'R' → logprob: -11.395804405212402
    8. 'read' → logprob: -12.020804405212402
    9. ' F' → logprob: -12.020804405212402
    10. '```' → logprob: -12.020804405212402

Token 223: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.20589187741279602
    2. ')' → logprob: -1.7058918476104736
    3. '):' → logprob: -6.455892086029053
    4. ',' → logprob: -6.580892086029053
    5. ').' → logprob: -6.955892086029053
    6. '):
' → logprob: -8.205891609191895
    7. ' ),' → logprob: -9.330891609191895
    8. ' pour' → logprob: -9.705891609191895
    9. '):

' → logprob: -9.830891609191895
    10. 'pour' → logprob: -10.455891609191895

Token 224: ' ass' (ID: 1680)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025551876053214073
    2. ' ass' → logprob: -4.650551795959473
    3. '#' → logprob: -5.275551795959473
    4. ' attrib' → logprob: -5.650551795959473
    5. ' on' → logprob: -6.025551795959473
    6. '    ' → logprob: -6.775551795959473
    7. 'attrib' → logprob: -7.150551795959473
    8. 'assign' → logprob: -7.775551795959473
    9. ' chaque' → logprob: -8.025551795959473
    10. 'ass' → logprob: -8.150551795959473

Token 225: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.07488953322172165
    2. 'ign' → logprob: -2.6998894214630127
    3. 'igner' → logprob: -6.949889659881592
    4. 'oc' → logprob: -7.199889659881592
    5. 'ignent' → logprob: -7.324889659881592
    6. 'ignet' → logprob: -7.574889659881592
    7. 'ig' → logprob: -7.949889659881592
    8. '#' → logprob: -8.449889183044434
    9. 'ignez' → logprob: -8.574889183044434
    10. '
' → logprob: -8.574889183044434

Token 226: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21996311843395233
    2. ' aux' → logprob: -1.7199630737304688
    3. ' la' → logprob: -5.094963073730469
    4. ' des' → logprob: -5.594963073730469
    5. '   ' → logprob: -5.719963073730469
    6. ' progressivement' → logprob: -6.594963073730469
    7. 'aux' → logprob: -7.594963073730469
    8. 's' → logprob: -7.594963073730469
    9. ' the' → logprob: -7.719963073730469
    10. ' au' → logprob: -7.719963073730469

Token 227: ' plus' (ID: 2932)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.4223840534687042
    2. 'val' → logprob: -1.1723840236663818
    3. ' plus' → logprob: -3.922384023666382
    4. 'plus' → logprob: -4.672384262084961
    5. ' prochaines' → logprob: -6.547384262084961
    6. ' val' → logprob: -6.797384262084961
    7. ' meilleures' → logprob: -7.422384262084961
    8. ' autres' → logprob: -7.547384262084961
    9. ' suivantes' → logprob: -8.172384262084961
    10. ' restantes' → logprob: -8.172384262084961

Token 228: ' 
' (ID: 793)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.18812885880470276
    2. ' grandes' → logprob: -1.8131288290023804
    3. 'grand' → logprob: -5.31312894821167
    4. ' grande' → logprob: -6.81312894821167
    5. ' grand' → logprob: -7.06312894821167
    6. ' grands' → logprob: -7.18812894821167
    7. '_gr' → logprob: -7.93812894821167
    8. ' grans' → logprob: -9.188128471374512
    9. '```' → logprob: -9.938128471374512
    10. 'import' → logprob: -10.188128471374512

Token 229: '   ' (ID: 271)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.25533461570739746
    2. ' grandes' → logprob: -1.5053346157073975
    3. 'grand' → logprob: -6.630334854125977
    4. ' fortes' → logprob: -7.755334854125977
    5. ' grand' → logprob: -7.755334854125977
    6. ' grands' → logprob: -8.255334854125977
    7. '   ' → logprob: -8.630334854125977
    8. ' grans' → logprob: -9.005334854125977
    9. 'import' → logprob: -9.130334854125977
    10. ' profond' → logprob: -9.505334854125977

Token 230: ' grandes' (ID: 16325)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.06415053457021713
    2. ' grandes' → logprob: -2.81415057182312
    3. 'grand' → logprob: -6.314150333404541
    4. ' grand' → logprob: -8.9391508102417
    5. ' grands' → logprob: -9.1891508102417
    6. 'b' → logprob: -11.0641508102417
    7. ' grans' → logprob: -11.0641508102417
    8. 'import' → logprob: -11.1891508102417
    9. 'val' → logprob: -11.3141508102417
    10. 'larg' → logprob: -11.3141508102417

Token 231: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.0708138570189476
    2. 'val' → logprob: -2.6958138942718506
    3. ' val' → logprob: -7.5708136558532715
    4. ' values' → logprob: -8.94581413269043
    5. 'values' → logprob: -9.69581413269043
    6. '_val' → logprob: -10.19581413269043
    7. ' des' → logprob: -10.19581413269043
    8. ' valeur' → logprob: -10.32081413269043
    9. 'valu' → logprob: -11.32081413269043
    10. ' ' → logprob: -11.94581413269043

Token 232: ' restantes' (ID: 159241)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.17571495473384857
    2. 'aux' → logprob: -2.8007149696350098
    3. ' disponibles' → logprob: -3.3007149696350098
    4. ' restantes' → logprob: -3.5507149696350098
    5. ' ' → logprob: -4.30071496963501
    6. ' available' → logprob: -6.05071496963501
    7. ' rest' → logprob: -6.30071496963501
    8. ' disponible' → logprob: -6.30071496963501
    9. '   ' → logprob: -6.30071496963501
    10. ' à' → logprob: -6.42571496963501

Token 233: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.141733318567276
    2. 'aux' → logprob: -2.516733407974243
    3. ')' → logprob: -3.641733407974243
    4. ' ' → logprob: -4.891733169555664
    5. ' )' → logprob: -5.016733169555664
    6. ' à' → logprob: -5.516733169555664
    7. 'au' → logprob: -5.766733169555664
    8. 'à' → logprob: -6.391733169555664
    9. ' au' → logprob: -6.891733169555664
    10. ',' → logprob: -8.391733169555664

Token 234: ' autres' (ID: 18701)
  Prédit: ' somm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.9900352954864502
    2. ' voisins' → logprob: -1.2400352954864502
    3. 's' → logprob: -2.24003529548645
    4. 'vo' → logprob: -2.36503529548645
    5. 'som' → logprob: -3.36503529548645
    6. ' ses' → logprob: -3.49003529548645
    7. ' leurs' → logprob: -4.115035057067871
    8. ' noe' → logprob: -4.740035057067871
    9. 'leurs' → logprob: -4.865035057067871
    10. ' descendants' → logprob: -5.115035057067871

Token 235: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.20404236018657684
    2. 's' → logprob: -2.329042434692383
    3. ' noe' → logprob: -2.579042434692383
    4. ' n' → logprob: -5.579042434692383
    5. 'n' → logprob: -6.204042434692383
    6. '_s' → logprob: -6.829042434692383
    7. ' sommet' → logprob: -6.954042434692383
    8. ' nodes' → logprob: -7.079042434692383
    9. 'som' → logprob: -7.454042434692383
    10. '   ' → logprob: -7.704042434692383

Token 236: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0002705145161598921
    2. 'et' → logprob: -8.25027084350586
    3. 'êts' → logprob: -12.37527084350586
    4. 'etso' → logprob: -13.25027084350586
    5. 'ents' → logprob: -14.12527084350586
    6. '#' → logprob: -14.37527084350586
    7. 'ет' → logprob: -14.37527084350586
    8. 'e' → logprob: -15.25027084350586
    9. 'es' → logprob: -15.50027084350586
    10. '```' → logprob: -16.37527084350586

Token 237: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05356248840689659
    2. ')' → logprob: -3.5535624027252197
    3. ',' → logprob: -4.553562641143799
    4. '.' → logprob: -5.053562641143799
    5. '):' → logprob: -5.678562641143799
    6. ' )' → logprob: -6.803562641143799
    7. '):
' → logprob: -7.303562641143799
    8. '
' → logprob: -7.803562641143799
    9. ').' → logprob: -8.05356216430664
    10. ')
' → logprob: -9.17856216430664

Token 238: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024908799678087234
    2. ')' → logprob: -6.252490997314453
    3. '
' → logprob: -8.252490997314453
    4. '    
' → logprob: -8.877490997314453
    5. '"""' → logprob: -9.377490997314453
    6. '    ' → logprob: -10.877490997314453
    7. ' """' → logprob: -11.252490997314453
    8. '#' → logprob: -11.627490997314453
    9. '```' → logprob: -12.002490997314453
    10. ' )' → logprob: -12.252490997314453

Token 239: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.1601967066526413
    2. 'cul' → logprob: -2.1601967811584473
    3. 'le' → logprob: -4.785196781158447
    4. 'e' → logprob: -4.910196781158447
    5. 'que' → logprob: -5.160196781158447
    6. 'asse' → logprob: -6.035196781158447
    7. 'l' → logprob: -6.785196781158447
    8. 'er' → logprob: -6.910196781158447
    9. 'c' → logprob: -7.035196781158447
    10. 'cules' → logprob: -7.535196781158447

Token 240: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1465998888015747
    2. ' le' → logprob: -2.771599769592285
    3. ' et' → logprob: -3.646599769592285
    4. '   ' → logprob: -4.146599769592285
    5. ' l' → logprob: -4.521599769592285
    6. 's' → logprob: -4.646599769592285
    7. 'le' → logprob: -5.396599769592285
    8. '_' → logprob: -7.021599769592285
    9. 'la' → logprob: -7.021599769592285
    10. 'l' → logprob: -7.146599769592285

Token 241: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1652909219264984
    2. 'return' → logprob: -3.1652908325195312
    3. ' print' → logprob: -3.6652908325195312
    4. 'aff' → logprob: -3.6652908325195312
    5. 'ret' → logprob: -4.290290832519531
    6. ' imprime' → logprob: -4.415290832519531
    7. '   ' → logprob: -4.540290832519531
    8. ' retourne' → logprob: -4.915290832519531
    9. ' affiche' → logprob: -5.540290832519531
    10. ' return' → logprob: -5.790290832519531

Token 242: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005968492478132248
    2. ' le' → logprob: -5.8809685707092285
    3. 'la' → logprob: -6.0059685707092285
    4. 's' → logprob: -8.88096809387207
    5. ' l' → logprob: -9.00596809387207
    6. '   ' → logprob: -9.13096809387207
    7. '(' → logprob: -9.38096809387207
    8. 'le' → logprob: -9.50596809387207
    9. ' the' → logprob: -9.50596809387207
    10. 'l' → logprob: -10.63096809387207

Token 243: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06673453003168106
    2. ' somme' → logprob: -3.441734552383423
    3. 'som' → logprob: -5.066734313964844
    4. 'sum' → logprob: -5.191734313964844
    5. 'maximum' → logprob: -5.566734313964844
    6. 'score' → logprob: -5.566734313964844
    7. 'minimum' → logprob: -6.191734313964844
    8. ' maximum' → logprob: -6.316734313964844
    9. 'max' → logprob: -6.316734313964844
    10. ' score' → logprob: -6.816734313964844

Token 244: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1165068969130516
    2. '(' → logprob: -2.741506814956665
    3. ' (' → logprob: -3.991506814956665
    4. '   ' → logprob: -5.116507053375244
    5. ' totale' → logprob: -5.366507053375244
    6. ' maximale' → logprob: -5.616507053375244
    7. ' ' → logprob: -5.866507053375244
    8. 'des' → logprob: -6.116507053375244
    9. ' total' → logprob: -6.491507053375244
    10. ' de' → logprob: -6.866507053375244

Token 245: ' 
' (ID: 793)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6818650364875793
    2. ' c' → logprob: -0.8068650364875793
    3. 'val' → logprob: -3.8068649768829346
    4. ' valeurs' → logprob: -4.431865215301514
    5. 'values' → logprob: -5.181865215301514
    6. ' poids' → logprob: -7.181865215301514
    7. 'to' → logprob: -7.181865215301514
    8. ' voisins' → logprob: -7.306865215301514
    9. 'min' → logprob: -7.431865215301514
    10. ' val' → logprob: -7.431865215301514

Token 246: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28382444381713867
    2. 'val' → logprob: -1.5338244438171387
    3. ' c' → logprob: -4.658824443817139
    4. 'min' → logprob: -4.658824443817139
    5. 'dif' → logprob: -6.283824443817139
    6. 'vo' → logprob: -6.533824443817139
    7. 'diff' → logprob: -6.533824443817139
    8. 'minimum' → logprob: -6.658824443817139
    9. ' val' → logprob: -7.283824443817139
    10. '(c' → logprob: -7.408824443817139

Token 247: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6724965572357178
    2. 'c' → logprob: -0.7974965572357178
    3. 'min' → logprob: -4.422496795654297
    4. ' c' → logprob: -5.047496795654297
    5. ' poids' → logprob: -5.672496795654297
    6. ' valeurs' → logprob: -5.672496795654297
    7. 'minimum' → logprob: -5.797496795654297
    8. 'values' → logprob: -5.922496795654297
    9. 'weights' → logprob: -6.672496795654297
    10. 'are' → logprob: -6.922496795654297

Token 248: ' assign' (ID: 14975)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1090257167816162
    2. 'assign' → logprob: -1.1090257167816162
    3. ' assign' → logprob: -1.4840257167816162
    4. ' attrib' → logprob: -3.359025716781616
    5. 'des' → logprob: -3.609025716781616
    6. ' ' → logprob: -4.359025955200195
    7. 'attrib' → logprob: -4.734025955200195
    8. '   ' → logprob: -4.984025955200195
    9. '(assign' → logprob: -5.484025955200195
    10. 'max' → logprob: -6.234025955200195

Token 249: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00045843268162570894
    2. 'ée' → logprob: -8.500458717346191
    3. 'é' → logprob: -8.625458717346191
    4. 'és' → logprob: -9.875458717346191
    5. '   ' → logprob: -11.750458717346191
    6. 'nées' → logprob: -11.875458717346191
    7. ' é' → logprob: -13.000458717346191
    8. 'ees' → logprob: -13.375458717346191
    9. '=' → logprob: -13.500458717346191
    10. '#' → logprob: -13.875458717346191

Token 250: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.887461245059967
    2. ' )' → logprob: -1.1374611854553223
    3. ' aux' → logprob: -2.0124611854553223
    4. ' des' → logprob: -3.0124611854553223
    5. ',' → logprob: -4.012461185455322
    6. ' ' → logprob: -4.262461185455322
    7. 'des' → logprob: -4.762461185455322
    8. ' ,' → logprob: -4.887461185455322
    9. '   ' → logprob: -5.137461185455322
    10. ' )
' → logprob: -5.387461185455322

Token 251: ' tous' (ID: 10688)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.2667170763015747
    2. 'l' → logprob: -1.5167170763015747
    3. 'c' → logprob: -1.6417170763015747
    4. 'all' → logprob: -1.8917170763015747
    5. 'edges' → logprob: -3.141716957092285
    6. ' all' → logprob: -3.391716957092285
    7. '[to' → logprob: -4.141716957092285
    8. ' to' → logprob: -4.391716957092285
    9. 'adj' → logprob: -4.891716957092285
    10. ' edges' → logprob: -5.016716957092285

Token 252: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6336977481842041
    2. 'les' → logprob: -0.7586977481842041
    3. 's' → logprob: -7.508697509765625
    4. '_' → logprob: -9.258697509765625
    5. ')' → logprob: -9.633697509765625
    6. '_s' → logprob: -10.133697509765625
    7. 'l' → logprob: -10.133697509765625
    8. 'le' → logprob: -10.258697509765625
    9. '   ' → logprob: -10.383697509765625
    10. '#' → logprob: -10.383697509765625

Token 253: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.07931416481733322
    2. 's' → logprob: -2.7043142318725586
    3. 'som' → logprob: -5.329314231872559
    4. ' noe' → logprob: -5.954314231872559
    5. ' sommet' → logprob: -6.579314231872559
    6. '_s' → logprob: -9.079314231872559
    7. '#' → logprob: -9.204314231872559
    8. 'summ' → logprob: -10.079314231872559
    9. 'no' → logprob: -10.329314231872559
    10. ' som' → logprob: -10.454314231872559

Token 254: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -6.420598219847307e-05
    2. 'et' → logprob: -10.0000638961792
    3. 'êts' → logprob: -11.5000638961792
    4. '#' → logprob: -12.8750638961792
    5. 'ents' → logprob: -13.1250638961792
    6. 'es' → logprob: -13.8750638961792
    7. 'ет' → logprob: -14.3750638961792
    8. 'ts' → logprob: -14.5000638961792
    9. 'ats' → logprob: -14.5000638961792
    10. 'és' → logprob: -15.3750638961792

Token 255: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1172870323061943
    2. ')' → logprob: -2.6172869205474854
    3. ')
' → logprob: -3.3672869205474854
    4. '
' → logprob: -5.9922871589660645
    5. '):
' → logprob: -8.617286682128906
    6. ' )' → logprob: -8.992286682128906
    7. '    
' → logprob: -9.492286682128906
    8. '):' → logprob: -9.492286682128906
    9. ' )
' → logprob: -9.617286682128906
    10. ',' → logprob: -10.367286682128906

Token 256: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3314923942089081
    2. 'le' → logprob: -1.8314924240112305
    3. ' ' → logprob: -3.0814924240112305
    4. '0' → logprob: -3.4564924240112305
    5. ' celui' → logprob: -3.8314924240112305
    6. ' celle' → logprob: -4.5814924240112305
    7. '[' → logprob: -6.0814924240112305
    8. ' la' → logprob: -6.2064924240112305
    9. 'celle' → logprob: -6.4564924240112305
    10. ' ' → logprob: -6.5814924240112305

Token 257: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.7884683609008789
    2. '0' → logprob: -1.163468360900879
    3. 'prem' → logprob: -1.538468360900879
    4. ' sommet' → logprob: -4.663468360900879
    5. '[' → logprob: -6.038468360900879
    6. ' ' → logprob: -6.413468360900879
    7. ' plus' → logprob: -6.538468360900879
    8. 'plus' → logprob: -6.663468360900879
    9. 'som' → logprob: -7.538468360900879
    10. 'dern' → logprob: -8.163468360900879

Token 258: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0247320756316185
    2. ')' → logprob: -4.3997321128845215
    3. '
' → logprob: -4.5247321128845215
    4. '    
' → logprob: -7.0247321128845215
    5. ')
' → logprob: -8.649731636047363
    6. ' )' → logprob: -9.649731636047363
    7. '"""' → logprob: -10.399731636047363
    8. '```' → logprob: -10.649731636047363
    9. ',' → logprob: -10.774731636047363
    10. ' 
' → logprob: -10.899731636047363

Token 259: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01796191930770874
    2. '    ' → logprob: -4.5179619789123535
    3. ' et' → logprob: -6.2679619789123535
    4. ')' → logprob: -6.8929619789123535
    5. '    
' → logprob: -7.2679619789123535
    6. '#' → logprob: -7.7679619789123535
    7. 'et' → logprob: -8.017961502075195
    8. ' )' → logprob: -8.017961502075195
    9. ' en' → logprob: -8.392961502075195
    10. ' ' → logprob: -8.392961502075195

Token 260: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594980001449585
    2. ' affiche' → logprob: -2.509498119354248
    3. 'aff' → logprob: -3.259498119354248
    4. ' la' → logprob: -3.759498119354248
    5. ' appelle' → logprob: -4.259498119354248
    6. ' return' → logprob: -4.259498119354248
    7. 'return' → logprob: -4.884498119354248
    8. 'print' → logprob: -5.009498119354248
    9. 'effect' → logprob: -5.134498119354248
    10. ' retourne' → logprob: -5.134498119354248

Token 261: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.041038990020752
    2. 'c' → logprob: -1.166038990020752
    3. '(' → logprob: -2.166038990020752
    4. '(c' → logprob: -2.291038990020752
    5. 'la' → logprob: -3.791038990020752
    6. '('' → logprob: -3.791038990020752
    7. ' c' → logprob: -3.791038990020752
    8. '()' → logprob: -4.291038990020752
    9. ' le' → logprob: -4.916038990020752
    10. '(max' → logprob: -5.541038990020752

Token 262: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4298922121524811
    2. ' c' → logprob: -1.5548921823501587
    3. 'val' → logprob: -3.0548923015594482
    4. '0' → logprob: -3.9298923015594482
    5. '"' → logprob: -4.679892063140869
    6. ''' → logprob: -5.054892063140869
    7. ' '' → logprob: -5.054892063140869
    8. ' valeur' → logprob: -5.304892063140869
    9. 'maximum' → logprob: -5.554892063140869
    10. ' ' → logprob: -5.554892063140869

Token 263: ' complète' (ID: 75660)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2826540470123291
    2. '   ' → logprob: -1.532654047012329
    3. ' de' → logprob: -4.78265380859375
    4. ' of' → logprob: -5.15765380859375
    5. ' c' → logprob: -5.65765380859375
    6. ')' → logprob: -5.90765380859375
    7. '    ' → logprob: -6.53265380859375
    8. ' complète' → logprob: -6.78265380859375
    9. ' )' → logprob: -7.28265380859375
    10. '  ' → logprob: -7.28265380859375

Token 264: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13943246006965637
    2. ')' → logprob: -2.764432430267334
    3. ' des' → logprob: -3.139432430267334
    4. '
' → logprob: -4.889432430267334
    5. ')
' → logprob: -5.014432430267334
    6. ' )' → logprob: -5.514432430267334
    7. '    
' → logprob: -6.639432430267334
    8. ' de' → logprob: -7.014432430267334
    9. '```' → logprob: -7.514432430267334
    10. 'def' → logprob: -8.139432907104492

Token 265: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.565612256526947
    2. ')' → logprob: -1.5656123161315918
    3. '   ' → logprob: -1.5656123161315918
    4. 'des' → logprob: -5.690612316131592
    5. ' )' → logprob: -6.190612316131592
    6. '.' → logprob: -6.315612316131592
    7. ')
' → logprob: -6.565612316131592
    8. ' ' → logprob: -6.690612316131592
    9. '
' → logprob: -7.065612316131592
    10. '    
' → logprob: -7.690612316131592

Token 266: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2482529580593109
    2. ')' → logprob: -1.6232529878616333
    3. 'des' (adapté à ' des') → logprob: -4.498252868652344
    4. ')
' → logprob: -5.623252868652344
    5. ' de' → logprob: -6.748252868652344
    6. '   ' → logprob: -6.873252868652344
    7. '.' → logprob: -6.998252868652344
    8. ' )' → logprob: -7.248252868652344
    9. 'assigned' → logprob: -7.998252868652344
    10. ' ' → logprob: -8.248252868652344

Token 267: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.627973735332489
    2. 'c' → logprob: -1.7529737949371338
    3. ' c' → logprob: -1.8779737949371338
    4. ' valeurs' → logprob: -2.127973794937134
    5. ' val' → logprob: -4.627973556518555
    6. 'assign' → logprob: -5.627973556518555
    7. ' assigned' → logprob: -6.127973556518555
    8. ' assignments' → logprob: -6.252973556518555
    9. 'values' → logprob: -7.502973556518555
    10. ' values' → logprob: -7.502973556518555

Token 268: ' assign' (ID: 14975)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00997812207788229
    2. '
' → logprob: -5.134978294372559
    3. ')' → logprob: -6.259978294372559
    4. '"""' → logprob: -7.259978294372559
    5. '    
' → logprob: -7.509978294372559
    6. '):' → logprob: -8.634978294372559
    7. '"""
' → logprob: -9.009978294372559
    8. ')
' → logprob: -9.134978294372559
    9. 'def' → logprob: -9.384978294372559
    10. '  
' → logprob: -9.384978294372559

Token 269: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.001191775663755834
    2. 'é' → logprob: -8.001192092895508
    3. 'nées' → logprob: -8.001192092895508
    4. 'ees' → logprob: -8.626192092895508
    5. 'es' → logprob: -9.251192092895508
    6. 'és' → logprob: -9.501192092895508
    7. 'ée' → logprob: -10.001192092895508
    8. 'ed' → logprob: -10.251192092895508
    9. '#' → logprob: -10.626192092895508
    10. '[' → logprob: -10.876192092895508

Token 270: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1449754238128662
    2. '
' → logprob: -2.269975423812866
    3. ')' → logprob: -4.144975662231445
    4. '    
' → logprob: -4.394975662231445
    5. '):
' → logprob: -7.394975662231445
    6. '  
' → logprob: -7.519975662231445
    7. ')
' → logprob: -7.769975662231445
    8. ' 
' → logprob: -8.019975662231445
    9. '   
' → logprob: -8.019975662231445
    10. '"""' → logprob: -8.144975662231445

Token 271: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.9409763813018799
    2. 'l' → logprob: -1.5659763813018799
    3. 't' → logprob: -2.19097638130188
    4. 'ch' → logprob: -2.31597638130188
    5. ' chaque' → logprob: -2.94097638130188
    6. 'la' → logprob: -3.44097638130188
    7. 'tout' → logprob: -3.81597638130188
    8. 'each' → logprob: -4.190976142883301
    9. 's' → logprob: -4.190976142883301
    10. 'ordre' → logprob: -4.565976142883301

Token 272: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.21468427777290344
    2. 'som' → logprob: -1.964684247970581
    3. 's' → logprob: -3.339684247970581
    4. ' somm' → logprob: -4.46468448638916
    5. ' som' → logprob: -5.83968448638916
    6. '_s' → logprob: -6.58968448638916
    7. ' ' → logprob: -7.83968448638916
    8. 'summ' → logprob: -8.08968448638916
    9. ' ' → logprob: -8.71468448638916
    10. '	s' → logprob: -8.96468448638916

Token 273: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03571983054280281
    2. '
' → logprob: -3.910719871520996
    3. ')' → logprob: -4.910719871520996
    4. '    
' → logprob: -5.035719871520996
    5. '  
' → logprob: -8.160719871520996
    6. '):' → logprob: -8.535719871520996
    7. '   
' → logprob: -9.035719871520996
    8. ':' → logprob: -9.035719871520996
    9. '"""' → logprob: -9.410719871520996
    10. ')
' → logprob: -9.785719871520996

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10568377375602722
    2. ')' → logprob: -2.4806838035583496
    3. '"""' → logprob: -4.35568380355835
    4. '
' → logprob: -5.98068380355835
    5. '    
' → logprob: -8.355683326721191
    6. '"' → logprob: -8.480683326721191
    7. '```' → logprob: -8.480683326721191
    8. ' """' → logprob: -8.855683326721191
    9. '""' → logprob: -9.480683326721191
    10. '")' → logprob: -9.605683326721191

Token 275: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04222513362765312
    2. '"""' → logprob: -3.7922251224517822
    3. ')' → logprob: -4.042225360870361
    4. '
' → logprob: -7.917225360870361
    5. ' """' → logprob: -8.292224884033203
    6. '"""
' (adapté à ' """
') → logprob: -8.542224884033203
    7. '"' → logprob: -9.417224884033203
    8. '    
' → logprob: -9.542224884033203
    9. '```' → logprob: -9.542224884033203
    10. '""' → logprob: -9.667224884033203

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007070713327266276
    2. 'assigned' → logprob: -7.875707149505615
    3. '    
' → logprob: -8.625706672668457
    4. 'visited' → logprob: -9.375706672668457
    5. 'val' → logprob: -11.125706672668457
    6. '
' → logprob: -11.625706672668457
    7. 'global' → logprob: -11.875706672668457
    8. 'assign' → logprob: -12.125706672668457
    9. 'values' → logprob: -12.125706672668457
    10. ' assigned' → logprob: -12.125706672668457

Token 277: ' #' (ID: 1069)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6617519855499268
    2. 'val' → logprob: -1.6617519855499268
    3. 'visited' → logprob: -2.1617519855499268
    4. '   ' → logprob: -2.6617519855499268
    5. 'used' → logprob: -3.7867519855499268
    6. 'assign' → logprob: -3.9117519855499268
    7. 'values' → logprob: -4.036751747131348
    8. 'vals' → logprob: -4.536751747131348
    9. 'value' → logprob: -4.786751747131348
    10. 'ans' → logprob: -5.536751747131348

Token 278: ' ans' (ID: 3345)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.2036986351013184
    2. 'val' → logprob: -1.3286986351013184
    3. 'visited' → logprob: -1.5786986351013184
    4. 'used' → logprob: -3.2036986351013184
    5. 'assign' → logprob: -3.5786986351013184
    6. 'value' → logprob: -3.8286986351013184
    7. 'q' → logprob: -3.9536986351013184
    8. 'queue' → logprob: -3.9536986351013184
    9. 'dist' → logprob: -4.078698635101318
    10. 'from' → logprob: -4.703698635101318

Token 279: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031013892963528633
    2. '_val' → logprob: -4.4060139656066895
    3. '_values' → logprob: -4.5310139656066895
    4. '_sum' → logprob: -5.7810139656066895
    5. '=' → logprob: -6.7810139656066895
    6. 's' → logprob: -7.0310139656066895
    7. '_vals' → logprob: -7.0310139656066895
    8. '_value' → logprob: -7.9060139656066895
    9. '_ass' → logprob: -8.156013488769531
    10. '_' → logprob: -8.156013488769531

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010167333530262113
    2. ' ]' → logprob: -7.001016616821289
    3. ']=' → logprob: -9.501016616821289
    4. '[' → logprob: -12.501016616821289
    5. '[]' → logprob: -13.001016616821289
    6. ']int' → logprob: -13.001016616821289
    7. ']
' → logprob: -13.126016616821289
    8. '   ' → logprob: -13.126016616821289
    9. '[i' → logprob: -13.251016616821289
    10. '][' → logprob: -13.376016616821289

Token 281: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759478807449341
    2. ' =' → logprob: -0.8259478807449341
    3. '=[' → logprob: -12.075947761535645
    4. ' =[' → logprob: -13.700947761535645
    5. '[' → logprob: -14.075947761535645
    6. '=[]' → logprob: -15.450947761535645
    7. ',' → logprob: -15.825947761535645
    8. ' ' → logprob: -15.825947761535645
    9. ']' → logprob: -16.32594871520996
    10. '＝' → logprob: -16.82594871520996

Token 282: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10811986774206161
    2. 'er' → logprob: -2.8581199645996094
    3. ' =' → logprob: -4.233119964599609
    4. '=' → logprob: -4.233119964599609
    5. 'é' → logprob: -4.358119964599609
    6. '   ' → logprob: -6.233119964599609
    7. 'ée' → logprob: -7.358119964599609
    8. '[e' → logprob: -8.60811996459961
    9. '[]' → logprob: -8.73311996459961
    10. '[' → logprob: -9.48311996459961

Token 283: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7410424947738647
    2. 'None' → logprob: -1.7410424947738647
    3. '0' → logprob: -1.9910424947738647
    4. ' None' → logprob: -2.2410426139831543
    5. 'la' → logprob: -3.3660426139831543
    6. 'l' → logprob: -3.8660426139831543
    7. ' ' → logprob: -3.9910426139831543
    8. ' l' → logprob: -4.241042613983154
    9. 'the' → logprob: -5.241042613983154
    10. 'les' → logprob: -5.991042613983154

Token 284: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.042666956782341
    2. '0' → logprob: -4.042666912078857
    3. ' val' → logprob: -5.292666912078857
    4. 'assigned' → logprob: -5.417666912078857
    5. 'value' → logprob: -5.542666912078857
    6. 'None' → logprob: -5.792666912078857
    7. ' valeur' → logprob: -5.917666912078857
    8. ' None' → logprob: -6.417666912078857
    9. ' value' → logprob: -6.542666912078857
    10. 'c' → logprob: -7.917666912078857

Token 285: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.07452647387981415
    2. ' assign' → logprob: -3.32452654838562
    3. 's' → logprob: -4.574526309967041
    4. '_assign' → logprob: -5.074526309967041
    5. '   ' → logprob: -5.199526309967041
    6. '_ass' → logprob: -5.574526309967041
    7. ' assigned' → logprob: -5.949526309967041
    8. 'assigned' → logprob: -6.199526309967041
    9. '_' → logprob: -7.199526309967041
    10. '.assign' → logprob: -7.199526309967041

Token 286: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00027802068507298827
    2. 'é' → logprob: -8.75027847290039
    3. '   ' → logprob: -9.25027847290039
    4. 'ee' → logprob: -11.50027847290039
    5. '[' → logprob: -12.12527847290039
    6. 'e' → logprob: -12.87527847290039
    7. 'ed' → logprob: -13.75027847290039
    8. 'è' → logprob: -14.00027847290039
    9. '[i' → logprob: -14.12527847290039
    10. '=' → logprob: -14.12527847290039

Token 287: ' au' (ID: 2791)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.44589096307754517
    2. '   ' → logprob: -1.8208909034729004
    3. ' ' → logprob: -2.8208909034729004
    4. ' à' → logprob: -3.0708909034729004
    5. 's' → logprob: -3.3208909034729004
    6. '[' → logprob: -3.9458909034729004
    7. ' =' → logprob: -4.5708909034729
    8. 'à' → logprob: -5.1958909034729
    9. ' aux' → logprob: -5.5708909034729
    10. ',' → logprob: -5.8208909034729

Token 288: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04291434958577156
    2. 'som' → logprob: -3.292914390563965
    3. ' sommet' → logprob: -5.917914390563965
    4. ' i' → logprob: -6.292914390563965
    5. 's' → logprob: -8.542914390563965
    6. '[i' → logprob: -9.792914390563965
    7. '0' → logprob: -11.167914390563965
    8. ' som' → logprob: -11.292914390563965
    9. 'summ' → logprob: -11.542914390563965
    10. ' ' → logprob: -12.167914390563965

Token 289: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5758666396141052
    2. '[' → logprob: -1.45086669921875
    3. 's' → logprob: -1.95086669921875
    4. '0' → logprob: -3.95086669921875
    5. ' =' → logprob: -3.95086669921875
    6. ' i' → logprob: -5.07586669921875
    7. ' ' → logprob: -5.20086669921875
    8. '   ' → logprob: -5.57586669921875
    9. '[]' → logprob: -5.95086669921875
    10. 'es' → logprob: -7.07586669921875

Token 290: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011087908409535885
    2. '=' → logprob: -4.511087894439697
    3. '   ' → logprob: -10.886088371276855
    4. ',' → logprob: -11.636088371276855
    5. ':' → logprob: -12.761088371276855
    6. ' ' → logprob: -12.886088371276855
    7. '[' → logprob: -13.261088371276855
    8. '=[' → logprob: -13.886088371276855
    9. ' =
' → logprob: -14.011088371276855
    10. '[]' → logprob: -14.011088371276855

Token 291: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05755545198917389
    2. '=' → logprob: -2.9325554370880127
    3. ' ans' → logprob: -6.932555675506592
    4. '   ' → logprob: -6.932555675506592
    5. 'ans' → logprob: -7.807555675506592
    6. ',' → logprob: -9.432555198669434
    7. '[' → logprob: -9.682555198669434
    8. ' ' → logprob: -9.932555198669434
    9. '[]' → logprob: -10.432555198669434
    10. '	ans' → logprob: -10.807555198669434

Token 292: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00018387178715784103
    2. ' ans' → logprob: -8.625184059143066
    3. '[' → logprob: -12.750184059143066
    4. '	ans' → logprob: -13.875184059143066
    5. '   ' → logprob: -15.500184059143066
    6. '[]' → logprob: -16.25018310546875
    7. '(ans' → logprob: -17.12518310546875
    8. 'answer' → logprob: -17.37518310546875
    9. 'anst' → logprob: -18.12518310546875
    10. '_ans' → logprob: -18.50018310546875

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47422733902931213
    2. ' =' → logprob: -0.9742273092269897
    3. '[' → logprob: -8.974226951599121
    4. '=[' → logprob: -11.099226951599121
    5. ' =[' → logprob: -12.224226951599121
    6. ' ' → logprob: -13.849226951599121
    7. ']' → logprob: -14.099226951599121
    8. '=[]' → logprob: -14.974226951599121
    9. '   ' → logprob: -15.224226951599121
    10. '[:]' → logprob: -15.474226951599121

Token 294: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018461287021636963
    2. ' [' → logprob: -4.018461227416992
    3. '[c' → logprob: -8.143461227416992
    4. '[-' → logprob: -11.018461227416992
    5. 'c' → logprob: -13.893461227416992
    6. ' c' → logprob: -14.018461227416992
    7. '[]' → logprob: -14.143461227416992
    8. '   ' → logprob: -14.518461227416992
    9. '[len' → logprob: -15.393461227416992
    10. ' ' → logprob: -15.518461227416992

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004997743526473641
    2. '-' → logprob: -8.250499725341797
    3. 'None' → logprob: -8.375499725341797
    4. 'c' → logprob: -11.875499725341797
    5. ' ' → logprob: -15.000499725341797
    6. '   ' → logprob: -15.250499725341797
    7. ']' → logprob: -15.625499725341797
    8. ' -' → logprob: -16.250499725341797
    9. ' None' → logprob: -16.500499725341797
    10. '-c' → logprob: -17.375499725341797

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004002534318715334
    2. ']*' → logprob: -5.754002571105957
    3. ' for' → logprob: -7.254002571105957
    4. ' ]' → logprob: -9.504002571105957
    5. 'for' → logprob: -10.129002571105957
    6. ']*(' → logprob: -13.629002571105957
    7. ',' → logprob: -14.754002571105957
    8. ')' → logprob: -14.754002571105957
    9. '   ' → logprob: -16.00400161743164
    10. ']+' → logprob: -16.12900161743164

Token 297: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006453285459429026
    2. '<|end|>' → logprob: -5.756453514099121
    3. '  
' → logprob: -6.631453514099121
    4. '    
' → logprob: -7.506453514099121
    5. ' 
' → logprob: -7.631453514099121
    6. '
' → logprob: -8.381453514099121
    7. '   ' → logprob: -8.631453514099121
    8. '   
' → logprob: -8.881453514099121
    9. ' for' → logprob: -9.631453514099121
    10. '<|end|>' → logprob: -9.756453514099121

Token 298: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -17.5
    3. '(N' → logprob: -20.5
    4. '	N' → logprob: -21.25
    5. '   ' → logprob: -22.625
    6. '[N' → logprob: -23.125
    7. 'n' → logprob: -23.125
    8. 'Ｎ' → logprob: -23.375
    9. '<N' → logprob: -23.625
    10. 'len' → logprob: -24.375

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08409735560417175
    2. '    
' → logprob: -3.834097385406494
    3. 'ans' → logprob: -3.959097385406494
    4. '
' → logprob: -3.959097385406494
    5. ' ans' → logprob: -4.584097385406494
    6. '  
' → logprob: -5.834097385406494
    7. '[' → logprob: -6.459097385406494
    8. '	ans' → logprob: -6.709097385406494
    9. '   
' → logprob: -6.834097385406494
    10. '<|end|>' → logprob: -7.084097385406494

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10885881632566452
    2. ' ans' → logprob: -2.858858823776245
    3. 'ans' → logprob: -3.233858823776245
    4. '	ans' → logprob: -5.608858585357666
    5. '[' → logprob: -6.608858585357666
    6. '    
' → logprob: -7.733858585357666
    7. '(ans' → logprob: -8.108859062194824
    8. '<|end|>' → logprob: -9.108859062194824
    9. '
' → logprob: -9.233859062194824
    10. '  ' → logprob: -9.483859062194824

Token 301: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008996733813546598
    2. '   ' → logprob: -7.875899791717529
    3. ' ans' → logprob: -8.375899314880371
    4. 'queue' → logprob: -8.625899314880371
    5. 'from' → logprob: -9.500899314880371
    6. 'val' → logprob: -11.625899314880371
    7. 'q' → logprob: -11.750899314880371
    8. '	ans' → logprob: -12.125899314880371
    9. 'deque' → logprob: -13.250899314880371
    10. 'import' → logprob: -13.250899314880371

Token 302: ' Attribution' (ID: 105021)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024724474642425776
    2. 'from' → logprob: -7.002472400665283
    3. 'queue' → logprob: -7.127472400665283
    4. 'visited' → logprob: -8.002472877502441
    5. 'q' → logprob: -8.627472877502441
    6. 'deque' → logprob: -9.127472877502441
    7. 'val' → logprob: -10.377472877502441
    8. 'que' → logprob: -10.877472877502441
    9. 'import' → logprob: -10.877472877502441
    10. 'dq' → logprob: -11.252472877502441

Token 303: ' de' (ID: 334)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5781031847000122
    2. 'ans' → logprob: -1.0781031847000122
    3. '   ' → logprob: -2.4531030654907227
    4. ' de' → logprob: -4.953103065490723
    5. '[' → logprob: -5.828103065490723
    6. 'de' → logprob: -6.953103065490723
    7. '(ans' → logprob: -7.328103065490723
    8. 's' → logprob: -8.328103065490723
    9. '	ans' → logprob: -8.328103065490723
    10. ' of' → logprob: -8.578103065490723

Token 304: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6507052183151245
    2. 'ans' → logprob: -0.7757052183151245
    3. ' ans' → logprob: -4.400705337524414
    4. ' c' → logprob: -5.275705337524414
    5. 'the' → logprob: -8.400705337524414
    6. '0' → logprob: -8.900705337524414
    7. '(ans' → logprob: -10.025705337524414
    8. ' the' → logprob: -10.275705337524414
    9. '	ans' → logprob: -10.650705337524414
    10. '   ' → logprob: -10.775705337524414

Token 305: ' plus' (ID: 2932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03331483528017998
    2. 'ans' → logprob: -3.6583149433135986
    3. 'N' → logprob: -6.2833147048950195
    4. ' c' → logprob: -6.4083147048950195
    5. 'largest' → logprob: -6.6583147048950195
    6. 'max' → logprob: -7.0333147048950195
    7. ' ans' → logprob: -7.5333147048950195
    8. 'highest' → logprob: -8.40831470489502
    9. '0' → logprob: -8.65831470489502
    10. ' largest' → logprob: -9.28331470489502

Token 306: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.15484683215618134
    2. 'gr' → logprob: -2.4048469066619873
    3. 'grand' → logprob: -3.7798469066619873
    4. 'large' → logprob: -4.654846668243408
    5. 'import' → logprob: -5.279846668243408
    6. ' grandes' → logprob: -5.654846668243408
    7. ' grand' → logprob: -5.654846668243408
    8. ' large' → logprob: -5.904846668243408
    9. 'c' → logprob: -6.529846668243408
    10. ' élevée' → logprob: -7.404846668243408

Token 307: ' valeur' (ID: 41664)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5857042670249939
    2. ' c' → logprob: -1.0857043266296387
    3. ' valeur' → logprob: -2.7107043266296387
    4. 'val' → logprob: -3.3357043266296387
    5. ' value' → logprob: -6.710704326629639
    6. ' val' → logprob: -6.960704326629639
    7. 'value' → logprob: -7.335704326629639
    8. ' ' → logprob: -8.08570384979248
    9. '   ' → logprob: -8.83570384979248
    10. '(c' → logprob: -9.46070384979248

Token 308: ' au' (ID: 2791)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11100848764181137
    2. ' à' → logprob: -3.236008405685425
    3. '   ' → logprob: -3.611008405685425
    4. 'ans' → logprob: -4.111008644104004
    5. '(ans' → logprob: -4.486008644104004
    6. 'c' → logprob: -5.736008644104004
    7. ' to' → logprob: -5.861008644104004
    8. ' c' → logprob: -6.736008644104004
    9. ' =' → logprob: -7.111008644104004
    10. ' ' → logprob: -7.236008644104004

Token 309: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07359718531370163
    2. 'ans' → logprob: -2.6985971927642822
    3. ' ' → logprob: -6.198596954345703
    4. ' ans' → logprob: -6.448596954345703
    5. '   ' → logprob: -11.573596954345703
    6. 'root' → logprob: -12.198596954345703
    7. '(ans' → logprob: -12.323596954345703
    8. ' sommet' → logprob: -12.323596954345703
    9. '	ans' → logprob: -13.073596954345703
    10. 'som' → logprob: -13.261096954345703

Token 310: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.5478333830833435
    2. 'c' → logprob: -2.1728334426879883
    3. ' node' → logprob: -2.5478334426879883
    4. ' ' → logprob: -2.5478334426879883
    5. 'node' → logprob: -3.6728334426879883
    6. 's' → logprob: -3.7978334426879883
    7. '_' → logprob: -4.297833442687988
    8. 'vertex' → logprob: -4.422833442687988
    9. ' c' → logprob: -4.672833442687988
    10. '0' → logprob: -5.047833442687988

Token 311: '
' (ID: 198)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6013848185539246
    2. 'ans' → logprob: -1.2263848781585693
    3. '   ' → logprob: -2.3513848781585693
    4. '
' → logprob: -2.9763848781585693
    5. '(ans' → logprob: -4.85138463973999
    6. '[' → logprob: -6.85138463973999
    7. '    
' → logprob: -7.10138463973999
    8. '	ans' → logprob: -7.10138463973999
    9. ' 
' → logprob: -7.60138463973999
    10. ',' → logprob: -7.97638463973999

Token 312: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013616249896585941
    2. ' ans' → logprob: -4.38861608505249
    3. '   ' → logprob: -6.88861608505249
    4. '(ans' → logprob: -10.013616561889648
    5. '	ans' → logprob: -10.513616561889648
    6. 'c' → logprob: -12.138616561889648
    7. '[' → logprob: -12.888616561889648
    8. ')' → logprob: -13.763616561889648
    9. '_ans' → logprob: -13.888616561889648
    10. ']' → logprob: -14.388616561889648

Token 313: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.4140441635390744e-05
    2. ' ans' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.875014305114746
    4. '	ans' → logprob: -16.12501335144043
    5. '(ans' → logprob: -17.50001335144043
    6. '
' → logprob: -18.75001335144043
    7. '    
' → logprob: -19.12501335144043
    8. '_ans' → logprob: -19.25001335144043
    9. 'anst' → logprob: -19.75001335144043
    10. 'Ans' → logprob: -20.37501335144043

Token 314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.91732100979425e-05
    2. '[N' → logprob: -10.375039100646973
    3. '[-' → logprob: -12.125039100646973
    4. ' [' → logprob: -13.125039100646973
    5. '```' → logprob: -16.00004005432129
    6. '[len' → logprob: -16.62504005432129
    7. '=' → logprob: -16.87504005432129
    8. '0' → logprob: -16.87504005432129
    9. ' =' → logprob: -17.50004005432129
    10. '][' → logprob: -17.75004005432129

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. ']' → logprob: -19.875
    4. '[' → logprob: -20.5
    5. '   ' → logprob: -21.75
    6. '۰' → logprob: -22.0
    7. ')' → logprob: -23.125
    8. '０' → logprob: -23.875
    9. '00' → logprob: -24.0
    10. '(' → logprob: -24.0

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.372294698550832e-06
    2. ']=' → logprob: -11.625009536743164
    3. ' ]' → logprob: -15.250009536743164
    4. '=' → logprob: -16.375009536743164
    5. ')' → logprob: -19.000009536743164
    6. ']
' → logprob: -19.875009536743164
    7. '   ' → logprob: -20.000009536743164
    8. ' =' → logprob: -20.000009536743164
    9. ']

' → logprob: -20.750009536743164
    10. '],' → logprob: -20.875009536743164

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889540493488312
    2. ' =' → logprob: -2.578895330429077
    3. '=c' → logprob: -12.078895568847656
    4. ',' → logprob: -17.578895568847656
    5. ']' → logprob: -18.203895568847656
    6. ']=' → logprob: -18.703895568847656
    7. '.=' → logprob: -18.703895568847656
    8. 'c' → logprob: -19.078895568847656
    9. '＝' → logprob: -19.578895568847656
    10. '=cut' → logprob: -19.578895568847656

Token 318: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.2729995988775045e-06
    2. ' c' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. '	c' → logprob: -22.3750057220459
    5. ' ' → logprob: -23.8750057220459
    6. '  ' → logprob: -24.3750057220459
    7. ' ' → logprob: -25.0000057220459
    8. '%c' → logprob: -25.0000057220459
    9. ')c' → logprob: -25.2500057220459
    10. '
' → logprob: -25.6250057220459

Token 319: '.pop' (ID: 15746)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00195979792624712
    2. '.pop' → logprob: -6.251959800720215
    3. '-' → logprob: -10.626959800720215
    4. 'pop' → logprob: -12.751959800720215
    5. '[N' → logprob: -13.251959800720215
    6. '   ' → logprob: -13.751959800720215
    7. '-pop' → logprob: -14.376959800720215
    8. '[' → logprob: -14.501959800720215
    9. '[::-' → logprob: -17.1269588470459
    10. '[len' → logprob: -17.7519588470459

Token 320: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.1186566047836095e-05
    2. '()-' → logprob: -10.875031471252441
    3. '(-' → logprob: -11.625031471252441
    4. '()]' → logprob: -13.375031471252441
    5. '(' → logprob: -13.875031471252441
    6. '()
' → logprob: -14.875031471252441
    7. '())' → logprob: -16.000030517578125
    8. '()}' → logprob: -16.625030517578125
    9. '()%' → logprob: -17.250030517578125
    10. '()</' → logprob: -17.500030517578125

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.187037393450737
    2. '
' → logprob: -1.9370373487472534
    3. '    
' → logprob: -3.812037467956543
    4. '  
' → logprob: -6.437037467956543
    5. 'queue' → logprob: -6.687037467956543
    6. ' queue' → logprob: -7.937037467956543
    7. '   
' → logprob: -8.187037467956543
    8. '
' → logprob: -8.312037467956543
    9. '```' → logprob: -9.062037467956543
    10. ' 
' → logprob: -9.312037467956543

Token 322: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06696388870477676
    2. '   ' → logprob: -3.1919639110565186
    3. ' queue' → logprob: -4.1919636726379395
    4. 'q' → logprob: -4.8169636726379395
    5. 'dq' → logprob: -8.816964149475098
    6. '    
' → logprob: -8.941964149475098
    7. 'que' → logprob: -9.566964149475098
    8. 'deque' → logprob: -10.191964149475098
    9. ' q' → logprob: -10.816964149475098
    10. '	queue' → logprob: -11.566964149475098

Token 323: ' S' (ID: 336)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03050222247838974
    2. 'q' → logprob: -3.5305023193359375
    3. 'que' → logprob: -7.6555023193359375
    4. 'visited' → logprob: -9.155502319335938
    5. 'dq' → logprob: -9.530502319335938
    6. 'file' → logprob: -10.030502319335938
    7. ' queue' → logprob: -10.905502319335938
    8. 'deque' → logprob: -11.155502319335938
    9. 'Q' → logprob: -11.530502319335938
    10. '   ' → logprob: -12.530502319335938

Token 324: ' cont' (ID: 836)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.021839721128344536
    2. 't' → logprob: -4.521839618682861
    3. ' queue' → logprob: -5.396839618682861
    4. 'e' → logprob: -5.396839618682861
    5. '   ' → logprob: -8.39684009552002
    6. 'q' → logprob: -8.39684009552002
    7. '	queue' → logprob: -8.64684009552002
    8. 'visited' → logprob: -8.77184009552002
    9. 'to' → logprob: -8.89684009552002
    10. '=' → logprob: -9.14684009552002

Token 325: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03321867063641548
    2. ' =' → logprob: -3.5332186222076416
    3. 't' → logprob: -6.408218860626221
    4. 'et' → logprob: -7.033218860626221
    5. 'ack' → logprob: -7.158218860626221
    6. '=set' → logprob: -9.908218383789062
    7. '   ' → logprob: -10.783218383789062
    8. '=[]' → logprob: -11.033218383789062
    9. 'e' → logprob: -11.533218383789062
    10. '=[' → logprob: -11.783218383789062

Token 326: 'endra' (ID: 32364)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28736430406570435
    2. 'et' → logprob: -2.4123642444610596
    3. '=' → logprob: -2.5373642444610596
    4. 't' → logprob: -3.1623642444610596
    5. 'ack' → logprob: -3.4123642444610596
    6. '   ' → logprob: -5.912364482879639
    7. 'deque' → logprob: -7.162364482879639
    8. '=[]' → logprob: -7.787364482879639
    9. ' ' → logprob: -8.53736400604248
    10. 'u' → logprob: -8.66236400604248

Token 327: ' la' (ID: 557)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.2524414658546448
    2. ' deque' → logprob: -1.50244140625
    3. ' ' → logprob: -8.25244140625
    4. 'de' → logprob: -9.50244140625
    5. '=' → logprob: -10.00244140625
    6. '   ' → logprob: -10.25244140625
    7. ' =' → logprob: -10.75244140625
    8. '(de' → logprob: -10.87744140625
    9. 'Deque' → logprob: -11.50244140625
    10. 'que' → logprob: -12.00244140625

Token 328: ' somme' (ID: 64484)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.004080062732100487
    2. ' deque' → logprob: -5.504080295562744
    3. 'de' → logprob: -13.379079818725586
    4. 'Deque' → logprob: -16.129079818725586
    5. 'queue' → logprob: -18.754079818725586
    6. '	de' → logprob: -19.004079818725586
    7. 'e' → logprob: -19.629079818725586
    8. '(de' → logprob: -19.754079818725586
    9. ' ' → logprob: -20.129079818725586
    10. '   ' → logprob: -20.254079818725586

Token 329: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11846063286066055
    2. '   ' → logprob: -2.8684606552124023
    3. '_' → logprob: -3.6184606552124023
    4. '=' → logprob: -4.368460655212402
    5. 's' → logprob: -5.743460655212402
    6. '_s' → logprob: -6.368460655212402
    7. ' of' → logprob: -6.368460655212402
    8. 'of' → logprob: -6.493460655212402
    9. '_of' → logprob: -7.118460655212402
    10. ' ' → logprob: -7.118460655212402

Token 330: ' valeurs' (ID: 73668)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005559470504522324
    2. 'val' → logprob: -5.50555944442749
    3. 'c' → logprob: -7.75555944442749
    4. 'values' → logprob: -7.88055944442749
    5. ' ans' → logprob: -8.005559921264648
    6. 'vals' → logprob: -8.505559921264648
    7. '(ans' → logprob: -9.130559921264648
    8. 'assigned' → logprob: -11.005559921264648
    9. ' values' → logprob: -12.755559921264648
    10. 'v' → logprob: -13.630559921264648

Token 331: ' attrib' (ID: 72186)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1063778400421143
    2. 'assign' → logprob: -1.3563778400421143
    3. '   ' → logprob: -1.9813778400421143
    4. 'des' → logprob: -2.4813778400421143
    5. 'assigned' → logprob: -2.6063778400421143
    6. '(assign' → logprob: -3.4813778400421143
    7. ' assigned' → logprob: -4.356377601623535
    8. ' ' → logprob: -4.606377601623535
    9. ' assign' → logprob: -4.606377601623535
    10. 's' → logprob: -5.106377601623535

Token 332: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4126013219356537
    2. 'ign' → logprob: -1.162601351737976
    3. 'i' → logprob: -3.9126012325286865
    4. '   ' → logprob: -6.287601470947266
    5. 'ues' → logprob: -7.162601470947266
    6. 'ib' → logprob: -7.537601470947266
    7. 'igu' → logprob: -7.662601470947266
    8. 'ig' → logprob: -7.662601470947266
    9. 'ue' → logprob: -8.912601470947266
    10. 'gu' → logprob: -9.537601470947266

Token 333: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008075127378106117
    2. 'es' → logprob: -4.88307523727417
    3. 'é' → logprob: -8.508074760437012
    4. 'és' → logprob: -9.008074760437012
    5. 'ée' → logprob: -9.633074760437012
    6. 'ees' → logprob: -9.758074760437012
    7. '   ' → logprob: -11.883074760437012
    8. 'e' → logprob: -12.508074760437012
    9. '```' → logprob: -12.758074760437012
    10. '=' → logprob: -13.258074760437012

Token 334: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' sauf' (ID: 87919)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6462677717208862
    2. 's' → logprob: -1.2712677717208862
    3. 'sum' → logprob: -2.771267890930176
    4. ' S' → logprob: -3.396267890930176
    5. '<|end|>' → logprob: -3.396267890930176
    6. '0' → logprob: -4.146267890930176
    7. ' s' → logprob: -5.146267890930176
    8. 'except' → logprob: -5.146267890930176
    9. '1' → logprob: -5.146267890930176
    10. '   ' → logprob: -5.521267890930176

Token 336: ' la' (ID: 557)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.4780197739601135
    2. ' au' → logprob: -2.2280197143554688
    3. ' aux' → logprob: -2.3530197143554688
    4. '0' → logprob: -2.8530197143554688
    5. 'aux' → logprob: -2.9780197143554688
    6. 'ans' → logprob: -3.2280197143554688
    7. ' ' → logprob: -4.853019714355469
    8. '[' → logprob: -5.978019714355469
    9. 'pour' → logprob: -6.103019714355469
    10. ' celle' → logprob: -6.228019714355469

Token 337: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.0010924735106527805
    2. ' première' → logprob: -7.251092433929443
    3. 'val' → logprob: -8.751092910766602
    4. '0' → logprob: -9.126092910766602
    5. 's' → logprob: -10.251092910766602
    6. 'first' → logprob: -10.751092910766602
    7. '1' → logprob: -11.126092910766602
    8. '[' → logprob: -11.251092910766602
    9. '#' → logprob: -11.751092910766602
    10. ' ' → logprob: -12.501092910766602

Token 338: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10805737972259521
    2. '=' → logprob: -3.6080574989318848
    3. '   ' → logprob: -3.6080574989318848
    4. '_sum' → logprob: -4.358057498931885
    5. '_s' → logprob: -4.858057498931885
    6. '_' → logprob: -4.858057498931885
    7. 's' → logprob: -5.483057498931885
    8. ' ' → logprob: -5.608057498931885
    9. 'sum' → logprob: -5.983057498931885
    10. '
' → logprob: -6.233057498931885

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018936526030302048
    2. ' S' → logprob: -6.501893520355225
    3. 'S' → logprob: -8.126893997192383
    4. 's' → logprob: -10.501893997192383
    5. '    
' → logprob: -10.626893997192383
    6. '  ' → logprob: -11.001893997192383
    7. '    ' → logprob: -11.251893997192383
    8. '
' → logprob: -12.626893997192383
    9. ' ' → logprob: -12.876893997192383
    10. ' =' → logprob: -13.126893997192383

Token 340: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6658023595809937
    2. 'S' (adapté à ' S') → logprob: -1.1658023595809937
    3. ' sum' → logprob: -2.665802478790283
    4. 'sum' → logprob: -3.040802478790283
    5. 's' → logprob: -3.290802478790283
    6. '   ' → logprob: -4.290802478790283
    7. ' s' → logprob: -5.290802478790283
    8. ' ' → logprob: -7.790802478790283
    9. ' total' → logprob: -8.290802001953125
    10. 'total' → logprob: -8.540802001953125

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. '＝' → logprob: -16.974077224731445
    4. ',' → logprob: -17.599077224731445
    5. ' ' → logprob: -18.349077224731445
    6. ' =
' → logprob: -18.474077224731445
    7. ' +=' → logprob: -18.849077224731445
    8. '=

' → logprob: -18.849077224731445
    9. '=}' → logprob: -19.099077224731445
    10. '.=' → logprob: -19.099077224731445

Token 342: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007509016431868076
    2. ' ' → logprob: -7.37575101852417
    3. 'sum' → logprob: -9.750750541687012
    4. 'c' → logprob: -10.250750541687012
    5. 'ans' → logprob: -10.875750541687012
    6. ' ans' → logprob: -12.125750541687012
    7. ' sum' → logprob: -12.625750541687012
    8. ' c' → logprob: -13.125750541687012
    9. '   ' → logprob: -14.750750541687012
    10. ' ' → logprob: -15.625750541687012

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002726601669564843
    2. 'ans' → logprob: -8.375272750854492
    3. 'sum' → logprob: -10.375272750854492
    4. ' ' → logprob: -11.875272750854492
    5. 'c' → logprob: -13.375272750854492
    6. ' ans' → logprob: -14.125272750854492
    7. '   ' → logprob: -14.875272750854492
    8. '(ans' → logprob: -15.375272750854492
    9. 'int' → logprob: -15.500272750854492
    10. 'Ans' → logprob: -16.375272750854492

Token 344: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03850386291742325
    2. '
' → logprob: -3.538503885269165
    3. '    
' → logprob: -4.788503646850586
    4. '  
' → logprob: -8.913503646850586
    5. 'queue' → logprob: -9.413503646850586
    6. '
' → logprob: -10.163503646850586
    7. '   
' → logprob: -10.413503646850586
    8. '	queue' → logprob: -10.538503646850586
    9. '	
' → logprob: -11.413503646850586
    10. ',' → logprob: -11.413503646850586

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009022712707519531
    2. 'queue' → logprob: -4.8840227127075195
    3. '    
' → logprob: -7.1340227127075195
    4. ' queue' → logprob: -7.8840227127075195
    5. '
' → logprob: -8.63402271270752
    6. 'q' → logprob: -10.50902271270752
    7. '  
' → logprob: -11.63402271270752
    8. '	queue' → logprob: -11.75902271270752
    9. '  ' → logprob: -12.50902271270752
    10. '```' → logprob: -12.75902271270752

Token 346: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.13226114213466644
    2. 'q' → logprob: -2.132261037826538
    3. 'Q' → logprob: -6.132261276245117
    4. '   ' → logprob: -6.257261276245117
    5. 'que' → logprob: -6.882261276245117
    6. '    
' → logprob: -9.757261276245117
    7. 'dq' → logprob: -9.882261276245117
    8. '#' (adapté à ' #') → logprob: -10.382261276245117
    9. ' queue' → logprob: -10.507261276245117
    10. 'file' → logprob: -11.257261276245117

Token 347: ' Tableau' (ID: 180833)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7060939073562622
    2. 'queue' → logprob: -0.7060939073562622
    3. 'Q' → logprob: -5.206093788146973
    4. 'que' → logprob: -5.331093788146973
    5. '   ' → logprob: -6.581093788146973
    6. 'dq' → logprob: -7.831093788146973
    7. 'visited' → logprob: -8.206093788146973
    8. ' queue' → logprob: -8.331093788146973
    9. 'file' → logprob: -9.456093788146973
    10. '#' → logprob: -10.581093788146973

Token 348: ' des' (ID: 731)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6352571845054626
    2. '   ' → logprob: -1.5102572441101074
    3. 'vis' → logprob: -1.5102572441101074
    4. 'de' → logprob: -4.260257244110107
    5. 'visit' → logprob: -5.260257244110107
    6. 'des' → logprob: -6.510257244110107
    7. ' visited' → logprob: -6.635257244110107
    8. 'deque' → logprob: -6.760257244110107
    9. 'vist' → logprob: -7.010257244110107
    10. '_vis' → logprob: -7.135257244110107

Token 349: ' somm' (ID: 44830)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.18821054697036743
    2. 'visited' → logprob: -1.8132104873657227
    3. 'dist' → logprob: -5.188210487365723
    4. ' visited' → logprob: -6.563210487365723
    5. 'visit' → logprob: -7.813210487365723
    6. 'vist' → logprob: -8.313210487365723
    7. 'de' → logprob: -8.938210487365723
    8. ' distances' → logprob: -9.563210487365723
    9. 'deque' → logprob: -9.563210487365723
    10. 'depth' → logprob: -9.688210487365723

Token 350: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.3578215539455414
    2. 'visited' → logprob: -2.482821464538574
    3. 'et' → logprob: -3.107821464538574
    4. 'ents' → logprob: -3.857821464538574
    5. 'vis' → logprob: -4.232821464538574
    6. 'eurs' → logprob: -4.482821464538574
    7. 'onts' → logprob: -4.732821464538574
    8. 'a' → logprob: -4.732821464538574
    9. 'ètres' → logprob: -4.857821464538574
    10. 'um' → logprob: -4.857821464538574

Token 351: ' déjà' (ID: 21229)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.45095768570899963
    2. '   ' → logprob: -1.0759576559066772
    3. 'vis' → logprob: -3.950957775115967
    4. ' visited' → logprob: -6.450957775115967
    5. 'visit' → logprob: -7.325957775115967
    6. 'vist' → logprob: -8.575957298278809
    7. ' ' → logprob: -9.575957298278809
    8. 'seen' → logprob: -10.200957298278809
    9. '  ' → logprob: -10.450957298278809
    10. 'deque' → logprob: -10.575957298278809

Token 352: ' visit' (ID: 4030)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.04599827900528908
    2. 'vus' → logprob: -3.2959983348846436
    3. 'visit' → logprob: -5.7959980964660645
    4. 'visited' → logprob: -6.0459980964660645
    5. 'vist' → logprob: -6.5459980964660645
    6. '_vis' → logprob: -7.2959980964660645
    7. 'v' → logprob: -8.170998573303223
    8. 'util' → logprob: -10.670998573303223
    9. '_visit' → logprob: -10.670998573303223
    10. 'visi' → logprob: -11.045998573303223

Token 353: 'és' (ID: 1756)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7830693125724792
    2. ' =' → logprob: -1.533069372177124
    3. 'visited' → logprob: -1.908069372177124
    4. '=' → logprob: -2.658069372177124
    5. '   ' → logprob: -3.033069372177124
    6. '=[' → logprob: -4.533069133758545
    7. ' visited' → logprob: -4.658069133758545
    8. '[]' → logprob: -4.783069133758545
    9. 'és' → logprob: -4.908069133758545
    10. '[i' → logprob: -5.658069133758545

Token 354: ' pour' (ID: 1930)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.05362451821565628
    2. '   ' → logprob: -3.5536246299743652
    3. ' visited' → logprob: -3.8036246299743652
    4. ' =' → logprob: -6.803624629974365
    5. ',' → logprob: -9.678624153137207
    6. 'vis' → logprob: -10.178624153137207
    7. 'seen' → logprob: -10.678624153137207
    8. 'vist' → logprob: -10.928624153137207
    9. 'v' → logprob: -11.553624153137207
    10. ' seen' → logprob: -11.803624153137207

Token 355: ' le' (ID: 505)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.7345307469367981
    2. ' éviter' → logprob: -0.9845307469367981
    3. 'ev' → logprob: -1.9845306873321533
    4. '[' → logprob: -5.234530925750732
    5. '’éviter' → logprob: -6.734530925750732
    6. 'b' → logprob: -7.609530925750732
    7. ' evitar' → logprob: -7.609530925750732
    8. ' ev' → logprob: -7.984530925750732
    9. ' év' → logprob: -8.359530448913574
    10. 'é' → logprob: -8.609530448913574

Token 356: ' parcours' (ID: 62625)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2605080306529999
    2. 'True' → logprob: -2.8855080604553223
    3. 'False' → logprob: -3.2605080604553223
    4. 'vis' → logprob: -3.2605080604553223
    5. 'deque' → logprob: -3.8855080604553223
    6. '[' → logprob: -4.510508060455322
    7. 'b' → logprob: -4.510508060455322
    8. 'prevent' → logprob: -5.010508060455322
    9. ' BFS' → logprob: -5.260508060455322
    10. ' visite' → logprob: -5.760508060455322

Token 357: ' BFS' (ID: 190016)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5654323101043701
    2. 'visited' → logprob: -0.9404323101043701
    3. ' visited' → logprob: -3.94043231010437
    4. '   ' → logprob: -5.190432548522949
    5. '
' → logprob: -5.565432548522949
    6. '[' → logprob: -5.690432548522949
    7. 'vis' → logprob: -6.690432548522949
    8. ',' → logprob: -6.690432548522949
    9. 'b' → logprob: -6.940432548522949
    10. '=' → logprob: -7.065432548522949

Token 358: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.40718773007392883
    2. '   ' → logprob: -1.1571877002716064
    3. ' visited' → logprob: -4.5321879386901855
    4. '
' → logprob: -4.7821879386901855
    5. '    
' → logprob: -7.4071879386901855
    6. 'vis' → logprob: -8.532187461853027
    7. '
' → logprob: -9.657187461853027
    8. 'seen' → logprob: -10.657187461853027
    9. 'visit' → logprob: -11.657187461853027
    10. 'v' → logprob: -11.657187461853027

Token 359: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.268964946269989
    2. '   ' → logprob: -1.5189650058746338
    3. ' visited' → logprob: -4.143964767456055
    4. 'vis' → logprob: -7.018964767456055
    5. 'seen' → logprob: -10.268964767456055
    6. 'visit' → logprob: -10.893964767456055
    7. 'vist' → logprob: -11.018964767456055
    8. 'v' → logprob: -11.393964767456055
    9. '    
' → logprob: -11.393964767456055
    10. ' seen' → logprob: -11.393964767456055

Token 360: ' seen' (ID: 6177)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.012409579008817673
    2. ' visited' → logprob: -5.137409687042236
    3. 'vis' → logprob: -5.512409687042236
    4. 'seen' (adapté à ' seen') → logprob: -6.262409687042236
    5. 'used' → logprob: -8.262409210205078
    6. ' seen' → logprob: -8.762409210205078
    7. 'visit' → logprob: -10.012409210205078
    8. 'vist' → logprob: -10.762409210205078
    9. '   ' → logprob: -11.637409210205078
    10. 'done' → logprob: -11.762409210205078

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759570598602295
    2. ' =' → logprob: -0.8259570598602295
    3. '[' → logprob: -11.575957298278809
    4. '=[' → logprob: -11.825957298278809
    5. ' =[' → logprob: -14.325957298278809
    6. ' ' → logprob: -15.700957298278809
    7. ']' → logprob: -16.825956344604492
    8. '   ' → logprob: -16.950956344604492
    9. '＝' → logprob: -16.950956344604492
    10. ')' → logprob: -17.325956344604492

Token 362: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006729974993504584
    2. ' [' → logprob: -8.000673294067383
    3. '[N' → logprob: -8.000673294067383
    4. '{' → logprob: -13.250673294067383
    5. '   ' → logprob: -15.250673294067383
    6. '[n' → logprob: -15.625673294067383
    7. ' ' → logprob: -16.750673294067383
    8. 'set' → logprob: -16.750673294067383
    9. '[node' → logprob: -18.750673294067383
    10. '[len' → logprob: -19.000673294067383

Token 363: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00013643606507685035
    2. ' False' → logprob: -9.000136375427246
    3. 'True' → logprob: -11.250136375427246
    4. '   ' → logprob: -18.375137329101562
    5. '(False' → logprob: -18.875137329101562
    6. '0' → logprob: -19.125137329101562
    7. ' True' → logprob: -19.250137329101562
    8. 'F' → logprob: -19.625137329101562
    9. '=False' → logprob: -20.750137329101562
    10. '.False' → logprob: -22.375137329101562

Token 364: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008860878297127783
    2. ']*' → logprob: -7.125885963439941
    3. ' ]' → logprob: -9.500885963439941
    4. ' for' → logprob: -12.125885963439941
    5. 'for' → logprob: -14.750885963439941
    6. ']+' → logprob: -14.875885963439941
    7. '   ' → logprob: -15.000885963439941
    8. ']*(' → logprob: -15.375885963439941
    9. '*' → logprob: -16.125886917114258
    10. ')' → logprob: -16.750886917114258

Token 365: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0971580520272255
    2. ' *' → logprob: -3.5971579551696777
    3. ']*' → logprob: -3.5971579551696777
    4. '*' → logprob: -4.472157955169678
    5. ' for' → logprob: -4.597157955169678
    6. '   ' → logprob: -5.222157955169678
    7. ' ]' → logprob: -5.347157955169678
    8. '<|end|>' → logprob: -6.222157955169678
    9. ']+' → logprob: -6.972157955169678
    10. ')' → logprob: -7.222157955169678

Token 366: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.848420551046729e-05
    2. ' N' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.750059127807617
    4. '(N' → logprob: -17.000059127807617
    5. ' ' → logprob: -18.875059127807617
    6. '(' → logprob: -19.625059127807617
    7. '	N' → logprob: -20.125059127807617
    8. ' (' → logprob: -20.500059127807617
    9. '  ' → logprob: -20.875059127807617
    10. '
' → logprob: -21.000059127807617

Token 367: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08555269986391068
    2. '
' → logprob: -3.08555269241333
    3. '<|end|>' → logprob: -4.33555269241333
    4. 'seen' → logprob: -4.83555269241333
    5. '    
' → logprob: -5.33555269241333
    6. 'deque' → logprob: -5.71055269241333
    7. ' seen' → logprob: -6.21055269241333
    8. 'queue' → logprob: -6.71055269241333
    9. '  
' → logprob: -6.71055269241333
    10. ',' → logprob: -7.33555269241333

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21531453728675842
    2. 'seen' → logprob: -1.840314507484436
    3. ' seen' → logprob: -3.4653146266937256
    4. '    
' → logprob: -6.5903143882751465
    5. ' 
' → logprob: -7.4653143882751465
    6. '
' → logprob: -8.090314865112305
    7. '<|end|>' → logprob: -8.215314865112305
    8. '  ' → logprob: -8.340314865112305
    9. ' ' → logprob: -8.340314865112305
    10. '  
' → logprob: -8.465314865112305

Token 369: ' seen' (ID: 6177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4004674553871155
    2. 'seen' (adapté à ' seen') → logprob: -1.1504673957824707
    3. ' seen' → logprob: -4.400467395782471
    4. 'queue' → logprob: -7.275467395782471
    5. 'deque' → logprob: -8.275467872619629
    6. '    
' → logprob: -9.775467872619629
    7. ' ' → logprob: -10.025467872619629
    8. ' queue' → logprob: -10.400467872619629
    9. '```' → logprob: -10.650467872619629
    10. '  ' → logprob: -10.900467872619629

Token 370: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '=' → logprob: -13.250004768371582
    3. ' [' → logprob: -13.375004768371582
    4. '0' → logprob: -13.875004768371582
    5. '][' → logprob: -16.3750057220459
    6. ' =' → logprob: -16.7500057220459
    7. 's' → logprob: -16.7500057220459
    8. ']' → logprob: -16.7500057220459
    9. '[start' → logprob: -17.1250057220459
    10. '[
' → logprob: -17.5000057220459

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024882311117835343
    2. ']' → logprob: -9.125248908996582
    3. ' ' → logprob: -9.625248908996582
    4. '1' → logprob: -10.000248908996582
    5. '[' → logprob: -11.000248908996582
    6. 'N' → logprob: -12.000248908996582
    7. '   ' → logprob: -13.125248908996582
    8. '][' → logprob: -13.250248908996582
    9. ')' → logprob: -14.500248908996582
    10. ']=' → logprob: -15.250248908996582

Token 372: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.057743949990254e-05
    2. ']=' → logprob: -10.875020980834961
    3. '=' → logprob: -13.875020980834961
    4. ' ]' → logprob: -14.250020980834961
    5. ' =' → logprob: -17.37502098083496
    6. ')' → logprob: -18.50002098083496
    7. ']
' → logprob: -20.50002098083496
    8. ']+=' → logprob: -20.75002098083496
    9. '']' → logprob: -20.87502098083496
    10. '[' → logprob: -21.00002098083496

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=True' → logprob: -15.889163970947266
    4. ',' → logprob: -17.514163970947266
    5. ']' → logprob: -18.889163970947266
    6. '+=' → logprob: -19.514163970947266
    7. ')' → logprob: -19.639163970947266
    8. '[' → logprob: -19.764163970947266
    9. ' ' → logprob: -19.764163970947266
    10. '＝' → logprob: -19.889163970947266

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011780819622799754
    2. 'True' → logprob: -6.75117826461792
    3. ' True' → logprob: -12.376177787780762
    4. ' ' → logprob: -12.501177787780762
    5. '   ' → logprob: -18.751178741455078
    6. '(True' → logprob: -20.001178741455078
    7. '  ' → logprob: -20.251178741455078
    8. '
' → logprob: -21.001178741455078
    9. '=True' → logprob: -21.876178741455078
    10. 'true' → logprob: -22.876178741455078

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009118211455643177
    2. 'True' → logprob: -7.000911712646484
    3. ' True' → logprob: -15.375911712646484
    4. ' ' → logprob: -15.875911712646484
    5. '   ' → logprob: -19.625911712646484
    6. '(True' → logprob: -19.625911712646484
    7. '
' → logprob: -21.375911712646484
    8. '=True' → logprob: -21.875911712646484
    9. '  ' → logprob: -22.125911712646484
    10. 'true' → logprob: -22.875911712646484

Token 376: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00956211518496275
    2. '    
' → logprob: -5.134562015533447
    3. '
' → logprob: -5.884562015533447
    4. 'queue' → logprob: -7.384562015533447
    5. 'deque' → logprob: -9.509562492370605
    6. '	queue' → logprob: -9.634562492370605
    7. '  
' → logprob: -10.759562492370605
    8. ' queue' → logprob: -11.009562492370605
    9. 'dq' → logprob: -11.509562492370605
    10. '   
' → logprob: -11.884562492370605

Token 377: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014067007228732109
    2. '
' → logprob: -5.38906717300415
    3. 'queue' → logprob: -5.38906717300415
    4. '    
' → logprob: -5.51406717300415
    5. ' queue' → logprob: -7.63906717300415
    6. 'deque' → logprob: -9.139066696166992
    7. '	queue' → logprob: -9.389066696166992
    8. '  
' → logprob: -10.389066696166992
    9. '```' → logprob: -10.389066696166992
    10. 'q' → logprob: -10.514066696166992

Token 378: ' On' (ID: 2160)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.012702584266662598
    2. 'q' → logprob: -4.512702465057373
    3. ' queue' → logprob: -6.762702465057373
    4. '   ' → logprob: -7.887702465057373
    5. 'que' → logprob: -9.762702941894531
    6. 'deque' → logprob: -11.012702941894531
    7. 'dq' → logprob: -11.262702941894531
    8. '```' → logprob: -11.512702941894531
    9. '#' → logprob: -11.637702941894531
    10. 'Q' → logprob: -11.762702941894531

Token 379: ' marque' (ID: 38644)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1793837994337082
    2. ' continue' → logprob: -3.1793837547302246
    3. 'enqueue' → logprob: -3.1793837547302246
    4. 'contin' → logprob: -3.6793837547302246
    5. 'queue' → logprob: -3.9293837547302246
    6. 'append' → logprob: -4.429383754730225
    7. '.append' → logprob: -5.054383754730225
    8. 'from' → logprob: -5.679383754730225
    9. 'put' → logprob: -6.429383754730225
    10. 's' → logprob: -6.679383754730225

Token 380: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8351892473874614e-05
    2. ' ' → logprob: -10.125048637390137
    3. '(' → logprob: -11.750048637390137
    4. '   ' → logprob: -15.375048637390137
    5. '[' → logprob: -15.750048637390137
    6. '
' → logprob: -17.50004768371582
    7. '```' → logprob: -17.75004768371582
    8. '    ' → logprob: -18.00004768371582
    9. 'queue' → logprob: -18.00004768371582
    10. 'deque' → logprob: -18.00004768371582

Token 381: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.875011444091797
    3. 'prem' → logprob: -13.500011444091797
    4. '[' → logprob: -14.250011444091797
    5. 'first' → logprob: -14.250011444091797
    6. 'queue' → logprob: -14.750011444091797
    7. 'root' → logprob: -14.750011444091797
    8. 'start' → logprob: -15.125011444091797
    9. 'deque' → logprob: -15.500011444091797
    10. 'node' → logprob: -16.000011444091797

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13069546222686768
    2. ' ' → logprob: -2.130695343017578
    3. 'de' → logprob: -6.005695343017578
    4. ' de' → logprob: -6.880695343017578
    5. 'initial' → logprob: -9.380695343017578
    6. '[' → logprob: -9.630695343017578
    7. ' initial' → logprob: -10.005695343017578
    8. 'd' → logprob: -10.130695343017578
    9. '1' → logprob: -12.005695343017578
    10. ' ' → logprob: -12.005695343017578

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '[' → logprob: -14.625004768371582
    4. '```' → logprob: -19.375003814697266
    5. 'de' → logprob: -20.625003814697266
    6. ' ' → logprob: -20.875003814697266
    7. 'visited' → logprob: -21.125003814697266
    8. '۰' → logprob: -21.375003814697266
    9. '`' → logprob: -21.375003814697266
    10. '1' → logprob: -21.375003814697266

Token 384: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06140439212322235
    2. 'deque' → logprob: -3.4364044666290283
    3. 'queue' → logprob: -4.686404228210449
    4. '
' → logprob: -4.686404228210449
    5. '    
' → logprob: -5.686404228210449
    6. 'de' → logprob: -6.186404228210449
    7. ' queue' → logprob: -7.186404228210449
    8. 'q' → logprob: -7.811404228210449
    9. ' deque' → logprob: -7.811404228210449
    10. ' as' → logprob: -7.936404228210449

Token 385: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.23234331607818604
    2. 'vu' → logprob: -1.607343316078186
    3. 'visit' → logprob: -5.6073431968688965
    4. 'visited' → logprob: -6.8573431968688965
    5. 'dé' → logprob: -6.8573431968688965
    6. 'vist' → logprob: -7.8573431968688965
    7. 'vue' → logprob: -8.482343673706055
    8. ' vis' → logprob: -9.107343673706055
    9. ' vu' → logprob: -9.357343673706055
    10. 'vus' → logprob: -9.482343673706055

Token 386: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.11409161984920502
    2. 'ited' → logprob: -2.239091634750366
    3. 'it' → logprob: -6.989091396331787
    4. 'ite' → logprob: -8.239091873168945
    5. 'ity' → logprob: -11.239091873168945
    6. 'itable' → logprob: -11.239091873168945
    7. '   ' → logprob: -11.364091873168945
    8. '
' → logprob: -12.239091873168945
    9. '```' → logprob: -12.364091873168945
    10. 'visited' → logprob: -12.614091873168945

Token 387: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011612056754529476
    2. '    
' → logprob: -5.5116119384765625
    3. 'queue' → logprob: -5.6366119384765625
    4. '
' → logprob: -5.7616119384765625
    5. ' queue' → logprob: -8.761611938476562
    6. '	queue' → logprob: -8.886611938476562
    7. 'q' → logprob: -8.886611938476562
    8. 'deque' → logprob: -8.886611938476562
    9. '  
' → logprob: -9.761611938476562
    10. 'dq' → logprob: -10.386611938476562

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016833867877721786
    2. 'queue' → logprob: -4.141833782196045
    3. 'q' → logprob: -7.766833782196045
    4. ' queue' → logprob: -8.141834259033203
    5. '    
' → logprob: -10.141834259033203
    6. '	queue' → logprob: -11.641834259033203
    7. '```' → logprob: -11.641834259033203
    8. 'Q' → logprob: -12.016834259033203
    9. '
' → logprob: -12.266834259033203
    10. 'que' → logprob: -12.391834259033203

Token 389: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3296615481376648
    2. 'q' → logprob: -1.3296616077423096
    3. 'Q' → logprob: -4.7046613693237305
    4. '   ' → logprob: -5.2046613693237305
    5. ' queue' → logprob: -6.5796613693237305
    6. 'que' → logprob: -8.45466136932373
    7. ' q' → logprob: -10.20466136932373
    8. 'file' → logprob: -10.45466136932373
    9. 'dq' → logprob: -10.57966136932373
    10. ' Q' → logprob: -12.07966136932373

Token 390: ' File' (ID: 5262)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.16711682081222534
    2. 'q' → logprob: -1.9171168804168701
    3. 'Q' → logprob: -5.542116641998291
    4. ' queue' → logprob: -6.167116641998291
    5. 'que' → logprob: -7.167116641998291
    6. 'dq' → logprob: -10.41711711883545
    7. ' q' → logprob: -10.91711711883545
    8. 'file' → logprob: -11.04211711883545
    9. 'deque' → logprob: -12.29211711883545
    10. ' Q' → logprob: -12.79211711883545

Token 391: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049435269087553024
    2. '=' → logprob: -3.0494353771209717
    3. 'queue' → logprob: -8.04943561553955
    4. 'q' → logprob: -9.04943561553955
    5. 'de' → logprob: -9.17443561553955
    6. 'deque' → logprob: -9.54943561553955
    7. '(queue' → logprob: -10.04943561553955
    8. '_queue' → logprob: -10.29943561553955
    9. '   ' → logprob: -10.42443561553955
    10. ' queue' → logprob: -10.54943561553955

Token 392: ' le' (ID: 505)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.03364996239542961
    2. 'queue' → logprob: -3.7836499214172363
    3. ' deque' → logprob: -4.783649921417236
    4. 'que' → logprob: -7.033649921417236
    5. ' queue' → logprob: -7.283649921417236
    6. 'q' → logprob: -7.908649921417236
    7. 'dq' → logprob: -10.533650398254395
    8. ' q' → logprob: -12.658650398254395
    9. ' bfs' → logprob: -12.658650398254395
    10. 'de' → logprob: -12.783650398254395

Token 393: ' parcours' (ID: 62625)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3225099444389343
    2. 'deque' → logprob: -1.322510004043579
    3. 'q' → logprob: -5.322509765625
    4. ' queue' → logprob: -6.072509765625
    5. 'que' → logprob: -6.322509765625
    6. 'dq' → logprob: -8.947509765625
    7. ' deque' → logprob: -9.947509765625
    8. 'Q' → logprob: -10.697509765625
    9. '```' → logprob: -11.947509765625
    10. ' q' → logprob: -12.322509765625

Token 394: ' BFS' (ID: 190016)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7537893056869507
    2. 'queue' → logprob: -1.0037893056869507
    3. 'deque' → logprob: -2.1287894248962402
    4. 'que' → logprob: -3.3787894248962402
    5. ' queue' → logprob: -5.37878942489624
    6. 'de' → logprob: -6.37878942489624
    7. ' q' → logprob: -6.75378942489624
    8. 'd' → logprob: -7.00378942489624
    9. 'Q' → logprob: -7.25378942489624
    10. 'dq' → logprob: -8.503788948059082

Token 395: ',' (ID: 11)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5397275686264038
    2. ' queue' → logprob: -1.2897275686264038
    3. 'q' → logprob: -2.2897276878356934
    4. ' q' → logprob: -4.164727687835693
    5. '   ' → logprob: -4.289727687835693
    6. 'Q' → logprob: -5.039727687835693
    7. 'que' → logprob: -6.414727687835693
    8. 'deque' → logprob: -6.914727687835693
    9. ' Q' → logprob: -7.539727687835693
    10. ' ' → logprob: -8.289727210998535

Token 396: ' initial' (ID: 4871)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4452482759952545
    2. 'q' → logprob: -1.1952482461929321
    3. ' queue' → logprob: -3.1952483654022217
    4. 'que' → logprob: -4.945248126983643
    5. 'Q' → logprob: -5.695248126983643
    6. 'deque' → logprob: -6.070248126983643
    7. ' q' → logprob: -6.070248126983643
    8. 'file' → logprob: -8.1952486038208
    9. 'dq' → logprob: -8.9452486038208
    10. ' que' → logprob: -9.6952486038208

Token 397: 'isée' (ID: 59331)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.021828407421708107
    2. 'isée' → logprob: -5.2718281745910645
    3. '=' → logprob: -5.5218281745910645
    4. 'deque' → logprob: -5.5218281745910645
    5. 'isé' → logprob: -5.6468281745910645
    6. 'ize' → logprob: -5.7718281745910645
    7. '_queue' → logprob: -7.8968281745910645
    8. 'ised' → logprob: -8.021828651428223
    9. 'e' → logprob: -8.521828651428223
    10. 'iser' → logprob: -8.771828651428223

Token 398: ' avec' (ID: 3937)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.33759942650794983
    2. '=' → logprob: -2.337599515914917
    3. '(de' → logprob: -2.462599515914917
    4. 'with' → logprob: -2.837599515914917
    5. ' with' → logprob: -3.587599515914917
    6. ' =' → logprob: -4.962599277496338
    7. ' deque' → logprob: -5.337599277496338
    8. 'de' → logprob: -5.587599277496338
    9. ' avec' → logprob: -7.337599277496338
    10. '   ' → logprob: -7.712599277496338

Token 399: ' le' (ID: 505)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.004630076698958874
    2. ' deque' → logprob: -5.504630088806152
    3. '0' → logprob: -7.504630088806152
    4. 'de' → logprob: -14.504630088806152
    5. 'Deque' → logprob: -15.254630088806152
    6. ' ' → logprob: -15.754630088806152
    7. '   ' → logprob: -16.629629135131836
    8. '```' → logprob: -18.629629135131836
    9. '
' → logprob: -19.254629135131836
    10. 'dq' → logprob: -20.004629135131836

Token 400: ' sommet' (ID: 130502)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.10039159655570984
    2. '0' → logprob: -2.3503916263580322
    3. ' deque' → logprob: -8.600391387939453
    4. 'Deque' → logprob: -14.725391387939453
    5. ' ' → logprob: -15.225391387939453
    6. 'de' → logprob: -16.225391387939453
    7. '```' → logprob: -16.475391387939453
    8. '   ' → logprob: -16.600391387939453
    9. 'queue' → logprob: -16.975391387939453
    10. 'root' → logprob: -18.225391387939453

Token 401: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005095454398542643
    2. '(' → logprob: -8.125509262084961
    3. ' ' → logprob: -8.500509262084961
    4. 'deque' → logprob: -11.875509262084961
    5. '[' → logprob: -13.375509262084961
    6. ' deque' → logprob: -14.000509262084961
    7. '   ' → logprob: -15.125509262084961
    8. '```' → logprob: -15.250509262084961
    9. '(
' → logprob: -15.500509262084961
    10. 'Deque' → logprob: -16.62550926208496

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.750006675720215
    3. '(' → logprob: -13.250006675720215
    4. 'deque' → logprob: -13.750006675720215
    5. '[' → logprob: -14.375006675720215
    6. '```' → logprob: -16.7500057220459
    7. ' deque' → logprob: -17.0000057220459
    8. '
' → logprob: -18.1250057220459
    9. 'Deque' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.6250057220459

Token 403: '
' (ID: 198)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4932088255882263
    2. 'q' → logprob: -0.9932088255882263
    3. ' queue' → logprob: -4.993208885192871
    4. 'Q' → logprob: -5.118208885192871
    5. 'que' → logprob: -5.618208885192871
    6. '   ' → logprob: -6.368208885192871
    7. 'file' → logprob: -8.618208885192871
    8. 'deque' → logprob: -8.618208885192871
    9. ' q' → logprob: -8.868208885192871
    10. '
' → logprob: -9.368208885192871

Token 404: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6071900129318237
    2. '   ' → logprob: -1.4821900129318237
    3. ' queue' → logprob: -1.9821900129318237
    4. 'q' → logprob: -2.4821901321411133
    5. 'Q' → logprob: -5.607190132141113
    6. ' q' → logprob: -6.232190132141113
    7. 'que' → logprob: -7.482190132141113
    8. ' Q' → logprob: -9.607190132141113
    9. 'dq' → logprob: -9.732190132141113
    10. ' ' → logprob: -9.982190132141113

Token 405: ' que' (ID: 661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.40387043356895447
    2. 'q' → logprob: -1.1538704633712769
    3. 'que' (adapté à ' que') → logprob: -4.653870582580566
    4. 'Q' → logprob: -5.278870582580566
    5. 'deque' → logprob: -6.403870582580566
    6. 'dq' → logprob: -7.903870582580566
    7. ' queue' → logprob: -8.653870582580566
    8. 'file' → logprob: -11.778870582580566
    9. 'qu' → logprob: -11.778870582580566
    10. ' q' → logprob: -12.028870582580566

Token 406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5379081964492798
    2. ' =' → logprob: -1.0379081964492798
    3. 'ue' → logprob: -2.7879080772399902
    4. 'u' → logprob: -8.412908554077148
    5. 'e' → logprob: -9.912908554077148
    6. 'uer' → logprob: -12.037908554077148
    7. ' ue' → logprob: -13.537908554077148
    8. '=e' → logprob: -13.662908554077148
    9. '```' → logprob: -13.912908554077148
    10. 'deque' → logprob: -14.162908554077148

Token 407: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0005530327325686812
    2. ' deque' → logprob: -7.500553131103516
    3. 'Deque' → logprob: -17.625553131103516
    4. '   ' → logprob: -21.500553131103516
    5. 'de' → logprob: -21.625553131103516
    6. ' ' → logprob: -22.125553131103516
    7. '```' → logprob: -22.375553131103516
    8. '	de' → logprob: -23.375553131103516
    9. 'dq' → logprob: -23.375553131103516
    10. '  ' → logprob: -24.375553131103516

Token 408: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.625011444091797
    3. '()' → logprob: -13.125011444091797
    4. '(' → logprob: -15.125011444091797
    5. '([(' → logprob: -16.875011444091797
    6. '()
' → logprob: -17.500011444091797
    7. ' ([' → logprob: -19.125011444091797
    8. '([
' → logprob: -19.500011444091797
    9. '((' → logprob: -19.625011444091797
    10. '({' → logprob: -20.000011444091797

Token 409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.875
    4. '
' → logprob: -19.75
    5. '۰' → logprob: -20.625
    6. ')' → logprob: -21.125
    7. '```' → logprob: -21.1875
    8. '00' → logprob: -21.25
    9. '０' → logprob: -21.6875
    10. '  ' → logprob: -21.8125

Token 410: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.0325924449716695e-05
    2. '])
' → logprob: -12.12501049041748
    3. ' ])' → logprob: -13.25001049041748
    4. ')' → logprob: -13.62501049041748
    5. ')])' → logprob: -13.62501049041748
    6. '])]' → logprob: -15.75001049041748
    7. '])

' → logprob: -15.87501049041748
    8. ']))' → logprob: -16.000009536743164
    9. '))' → logprob: -16.375009536743164
    10. ')]' → logprob: -16.375009536743164

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4451883137226105
    2. 'while' → logprob: -1.320188283920288
    3. ' while' → logprob: -2.445188283920288
    4. '```' → logprob: -6.195188522338867
    5. '	while' → logprob: -6.570188522338867
    6. '    
' → logprob: -6.570188522338867
    7. '    ' → logprob: -8.945188522338867
    8. ')' → logprob: -8.945188522338867
    9. '<|end|>' → logprob: -9.320188522338867
    10. ' ' → logprob: -9.570188522338867

Token 412: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04353277012705803
    2. ' while' → logprob: -3.5435328483581543
    3. '   ' → logprob: -4.293532848358154
    4. '	while' → logprob: -10.668532371520996
    5. '    
' → logprob: -12.293532371520996
    6. '
' → logprob: -13.668532371520996
    7. '```' → logprob: -13.918532371520996
    8. ' 
' → logprob: -14.793532371520996
    9. '    ' → logprob: -15.168532371520996
    10. ' ' → logprob: -15.668532371520996

Token 413: ' Parc' (ID: 68618)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00022034443099983037
    2. ' while' → logprob: -8.50022029876709
    3. '   ' → logprob: -11.00022029876709
    4. '	while' → logprob: -16.250221252441406
    5. 'While' → logprob: -18.125221252441406
    6. '```' → logprob: -19.125221252441406
    7. ' ' → logprob: -19.875221252441406
    8. 'for' → logprob: -20.000221252441406
    9. '  ' → logprob: -20.000221252441406
    10. 'wh' → logprob: -20.500221252441406

Token 414: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.12980730831623077
    2. 'our' → logprob: -2.129807233810425
    3. 'ourt' → logprob: -5.879807472229004
    4. 'ur' → logprob: -10.379807472229004
    5. 'urs' → logprob: -10.379807472229004
    6. 'urr' → logprob: -12.504807472229004
    7. 'or' → logprob: -13.004807472229004
    8. 'ourse' → logprob: -13.129807472229004
    9. '       ' → logprob: -13.504807472229004
    10. 'u' → logprob: -13.629807472229004

Token 415: ' BFS' (ID: 190016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016639387235045433
    2. 'while' → logprob: -4.516639232635498
    3. ' while' → logprob: -6.141639232635498
    4. ' en' → logprob: -6.266639232635498
    5. '    ' → logprob: -6.891639232635498
    6. '  ' → logprob: -9.641639709472656
    7. 'en' → logprob: -9.766639709472656
    8. ' de' → logprob: -9.766639709472656
    9. '       ' → logprob: -10.016639709472656
    10. 'de' → logprob: -10.266639709472656

Token 416: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060673631727695465
    2. 'while' → logprob: -3.560673713684082
    3. ' while' → logprob: -4.310673713684082
    4. ':' → logprob: -4.435673713684082
    5. '
' → logprob: -6.435673713684082
    6. '    
' → logprob: -7.060673713684082
    7. '<|end|>' → logprob: -7.060673713684082
    8. '	while' → logprob: -7.310673713684082
    9. ')' → logprob: -8.310673713684082
    10. ',' → logprob: -8.685673713684082

Token 417: ' l' (ID: 305)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.02468241937458515
    2. ' que' → logprob: -3.8996825218200684
    3. ' la' → logprob: -6.149682521820068
    4. 'la' → logprob: -6.399682521820068
    5. '   ' → logprob: -9.27468204498291
    6. 'queue' → logprob: -9.77468204498291
    7. ' ' → logprob: -10.02468204498291
    8. 'deque' → logprob: -10.39968204498291
    9. 'range' → logprob: -11.14968204498291
    10. ' queue' → logprob: -11.39968204498291

Token 418: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.8443756103515625
    2. ' grap' → logprob: -0.8443756103515625
    3. 'gr' → logprob: -2.8443756103515625
    4. ''ar' → logprob: -3.3443756103515625
    5. 'graph' → logprob: -4.4693756103515625
    6. 'to' → logprob: -4.5943756103515625
    7. ' arbre' → logprob: -4.8443756103515625
    8. 'que' → logprob: -4.9693756103515625
    9. 'e' → logprob: -5.8443756103515625
    10. 'queue' → logprob: -6.5943756103515625

Token 419: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0005692371050827205
    2. 'e' → logprob: -7.8755693435668945
    3. 'bor' → logprob: -9.375569343566895
    4. 'bo' → logprob: -9.500569343566895
    5. 'bres' → logprob: -11.125569343566895
    6. 'b' → logprob: -11.750569343566895
    7. 'que' → logprob: -13.500569343566895
    8. 'ête' → logprob: -14.000569343566895
    9. '
' → logprob: -14.500569343566895
    10. 'g' → logprob: -14.750569343566895

Token 420: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031380169093608856
    2. 'while' → logprob: -4.1563801765441895
    3. ' while' → logprob: -4.6563801765441895
    4. '
' → logprob: -5.4063801765441895
    5. '    
' → logprob: -7.6563801765441895
    6. '	while' → logprob: -8.156379699707031
    7. ':' → logprob: -8.281379699707031
    8. '  
' → logprob: -9.906379699707031
    9. ':
' → logprob: -9.906379699707031
    10. '```' → logprob: -10.281379699707031

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025782637298107147
    2. 'while' → logprob: -3.900782585144043
    3. ' while' → logprob: -5.275782585144043
    4. '	while' → logprob: -9.650782585144043
    5. '    
' → logprob: -10.400782585144043
    6. '
' → logprob: -11.775782585144043
    7. ':' → logprob: -12.900782585144043
    8. '```' → logprob: -13.150782585144043
    9. ')' → logprob: -13.775782585144043
    10. ',' → logprob: -13.900782585144043

Token 422: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01295950636267662
    2. ' while' → logprob: -4.5129594802856445
    3. '   ' → logprob: -6.2629594802856445
    4. '	while' → logprob: -12.387959480285645
    5. '
' → logprob: -16.26296043395996
    6. '```' → logprob: -16.76296043395996
    7. 'While' → logprob: -17.13796043395996
    8. '    
' → logprob: -17.88796043395996
    9. '  ' → logprob: -18.63796043395996
    10. ' ' → logprob: -18.88796043395996

Token 423: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10024344176054001
    2. ' que' → logprob: -2.350243330001831
    3. 'len' → logprob: -10.47524356842041
    4. ' len' → logprob: -11.97524356842041
    5. 'Que' → logprob: -14.60024356842041
    6. '   ' → logprob: -14.97524356842041
    7. 'queue' → logprob: -14.97524356842041
    8. ' ' → logprob: -15.72524356842041
    9. ' ' → logprob: -15.97524356842041
    10. 'True' → logprob: -15.97524356842041

Token 424: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009697027853690088
    2. ':
' → logprob: -7.750969886779785
    3. '.p' → logprob: -8.375969886779785
    4. '):' → logprob: -8.375969886779785
    5. '.' → logprob: -10.500969886779785
    6. '>:' → logprob: -11.250969886779785
    7. '.:' → logprob: -11.375969886779785
    8. '.append' → logprob: -12.000969886779785
    9. '.pop' → logprob: -12.500969886779785
    10. '):
' → logprob: -12.750969886779785

Token 425: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27338457107543945
    2. ' v' → logprob: -2.5233845710754395
    3. '       ' → logprob: -2.6483845710754395
    4. ' u' → logprob: -3.2733845710754395
    5. 'u' → logprob: -3.6483845710754395
    6. 'v' → logprob: -3.8983845710754395
    7. ' node' → logprob: -6.1483845710754395
    8. '	v' → logprob: -7.7733845710754395
    9. '	u' → logprob: -8.023384094238281
    10. ' current' → logprob: -8.023384094238281

Token 426: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7019730806350708
    2. 'v' (adapté à ' v') → logprob: -0.7019730806350708
    3. ' u' → logprob: -5.201972961425781
    4. ' v' → logprob: -5.826972961425781
    5. '   ' → logprob: -8.201972961425781
    6. 'x' → logprob: -10.326972961425781
    7. 's' → logprob: -11.576972961425781
    8. 'cur' → logprob: -11.701972961425781
    9. 'node' → logprob: -12.076972961425781
    10. ' node' → logprob: -13.826972961425781

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326404213905334
    2. '=' → logprob: -1.313264012336731
    3. '   ' → logprob: -13.438263893127441
    4. ')' → logprob: -15.813263893127441
    5. ' ' → logprob: -16.438264846801758
    6. '    ' → logprob: -16.563264846801758
    7. '	' → logprob: -16.563264846801758
    8. '.' → logprob: -16.813264846801758
    9. '=
' → logprob: -17.188264846801758
    10. ',' → logprob: -17.188264846801758

Token 428: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.005930693820118904
    2. ' que' → logprob: -5.1309309005737305
    3. 'qu' → logprob: -14.13093090057373
    4. ' ' → logprob: -14.88093090057373
    5. '   ' → logprob: -15.13093090057373
    6. 'deque' → logprob: -15.38093090057373
    7. 'ques' → logprob: -16.380929946899414
    8. ' ' → logprob: -16.505929946899414
    9. 'quee' → logprob: -16.630929946899414
    10. 'queue' → logprob: -16.755929946899414

Token 429: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.77627644513268e-06
    2. '.' → logprob: -12.250008583068848
    3. '.pop' → logprob: -12.500008583068848
    4. 'p' → logprob: -15.750008583068848
    5. '   ' → logprob: -16.125009536743164
    6. ' .' → logprob: -18.750009536743164
    7. '```' → logprob: -21.000009536743164
    8. '.dequeue' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.375009536743164
    10. 'opleft' → logprob: -21.500009536743164

Token 430: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.008626987226307392
    2. 'op' → logprob: -4.758626937866211
    3. 'ople' → logprob: -11.383626937866211
    4. 'opl' → logprob: -14.258626937866211
    5. 'opf' → logprob: -15.133626937866211
    6. 'opt' → logprob: -16.25862693786621
    7. 'opy' → logprob: -17.00862693786621
    8. 'o' → logprob: -17.25862693786621
    9. 'opup' → logprob: -17.38362693786621
    10. 'ope' → logprob: -17.50862693786621

Token 431: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7733728289604187
    2. ')' → logprob: -0.8983728289604187
    3. '       ' → logprob: -3.0233728885650635
    4. '()
' → logprob: -3.1483728885650635
    5. ')
' → logprob: -4.148372650146484
    6. 'for' → logprob: -4.773372650146484
    7. '   ' → logprob: -4.898372650146484
    8. '
' → logprob: -6.023372650146484
    9. ' for' → logprob: -6.148372650146484
    10. '```' → logprob: -7.398372650146484

Token 432: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7442234754562378
    2. ' for' → logprob: -0.9942234754562378
    3. 'for' → logprob: -2.1192235946655273
    4. '       ' → logprob: -3.3692235946655273
    5. '	for' → logprob: -8.744223594665527
    6. '    
' → logprob: -9.744223594665527
    7. '
' → logprob: -10.119223594665527
    8. '        
' → logprob: -10.369223594665527
    9. '```' → logprob: -10.869223594665527
    10. ' ' → logprob: -11.869223594665527

Token 433: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21380963921546936
    2. ' for' → logprob: -1.963809609413147
    3. '   ' → logprob: -2.9638097286224365
    4. '
' → logprob: -8.088809967041016
    5. '	for' → logprob: -8.713809967041016
    6. '    
' → logprob: -10.338809967041016
    7. '       ' → logprob: -10.838809967041016
    8. '```' → logprob: -11.213809967041016
    9. ' 
' → logprob: -12.588809967041016
    10. ' ' → logprob: -12.588809967041016

Token 434: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.054500666621607e-06
    2. ' for' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '	for' → logprob: -19.250003814697266
    5. '
' → logprob: -20.000003814697266
    6. '#' → logprob: -21.375003814697266
    7. '```' → logprob: -21.375003814697266
    8. '       ' → logprob: -21.750003814697266
    9. '    
' → logprob: -22.375003814697266
    10. 'For' → logprob: -22.625003814697266

Token 435: ' retire' (ID: 48410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07034684717655182
    2. ' for' → logprob: -2.6953468322753906
    3. '<|end|>' → logprob: -8.19534683227539
    4. 'v' → logprob: -10.44534683227539
    5. ':' → logprob: -10.82034683227539
    6. 'continue' → logprob: -11.57034683227539
    7. '<|end|>' → logprob: -11.57034683227539
    8. ' continue' → logprob: -11.69534683227539
    9. '   ' → logprob: -11.94534683227539
    10. ' pour' → logprob: -12.07034683227539

Token 436: ' un' (ID: 537)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03170393407344818
    2. ' v' → logprob: -4.281703948974609
    3. '<|end|>' → logprob: -5.156703948974609
    4. ' un' → logprob: -5.406703948974609
    5. 'un' → logprob: -5.656703948974609
    6. '(v' → logprob: -6.656703948974609
    7. ')v' → logprob: -7.281703948974609
    8. 'le' → logprob: -7.281703948974609
    9. ')' → logprob: -7.906703948974609
    10. 'u' → logprob: -8.53170394897461

Token 437: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.009731417521834373
    2. ' somm' → logprob: -6.134731292724609
    3. ' voisin' → logprob: -6.259731292724609
    4. 'som' → logprob: -6.634731292724609
    5. ' som' → logprob: -6.759731292724609
    6. 'e' → logprob: -7.134731292724609
    7. 'v' → logprob: -7.884731292724609
    8. ' noe' → logprob: -8.00973129272461
    9. ' vertex' → logprob: -8.13473129272461
    10. ')' → logprob: -8.50973129272461

Token 438: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6889393925666809
    2. ' for' → logprob: -1.3139393329620361
    3. '<|end|>' → logprob: -2.563939332962036
    4. 'for' → logprob: -3.063939332962036
    5. '       ' → logprob: -3.313939332962036
    6. '    
' → logprob: -3.563939332962036
    7. ' 
' → logprob: -5.313939571380615
    8. '
' → logprob: -5.438939571380615
    9. '  
' → logprob: -5.563939571380615
    10. ' ' → logprob: -5.688939571380615

Token 439: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.007985373958945274
    2. ' la' → logprob: -5.132985591888428
    3. 'que' → logprob: -6.757985591888428
    4. 'l' → logprob: -7.382985591888428
    5. 'queue' → logprob: -8.75798511505127
    6. ' ' → logprob: -10.25798511505127
    7. 'the' → logprob: -10.75798511505127
    8. 'deque' → logprob: -11.25798511505127
    9. '```' → logprob: -11.75798511505127
    10. ' queue' → logprob: -12.13298511505127

Token 440: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.6578691005706787
    2. ' file' → logprob: -1.4078691005706787
    3. 'queue' → logprob: -1.9078691005706787
    4. 'que' → logprob: -2.7828691005706787
    5. ' queue' → logprob: -4.657869338989258
    6. 'deque' → logprob: -4.782869338989258
    7. 'la' → logprob: -5.657869338989258
    8. 'front' → logprob: -6.032869338989258
    9. ' la' → logprob: -7.657869338989258
    10. '```' → logprob: -7.782869338989258

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8059252500534058
    2. '       ' → logprob: -1.4309252500534058
    3. ' for' → logprob: -1.5559252500534058
    4. 'for' → logprob: -2.6809253692626953
    5. '
' → logprob: -4.305925369262695
    6. '    
' → logprob: -4.930925369262695
    7. '        
' → logprob: -5.180925369262695
    8. '  
' → logprob: -5.680925369262695
    9. '<|end|>' → logprob: -6.305925369262695
    10. ' 
' → logprob: -6.805925369262695

Token 442: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49920299649238586
    2. ' for' → logprob: -1.1242029666900635
    3. 'for' → logprob: -2.7492029666900635
    4. '       ' → logprob: -5.749203205108643
    5. '    
' → logprob: -7.999203205108643
    6. '	for' → logprob: -8.249202728271484
    7. '
' → logprob: -8.874202728271484
    8. '  
' → logprob: -10.124202728271484
    9. '        
' → logprob: -10.124202728271484
    10. '  ' → logprob: -10.874202728271484

Token 443: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.7968066206085496e-05
    2. ' for' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.000027656555176
    4. '	for' → logprob: -17.875028610229492
    5. '
' → logprob: -19.625028610229492
    6. '```' → logprob: -20.375028610229492
    7. '    
' → logprob: -21.125028610229492
    8. '#' → logprob: -21.750028610229492
    9. '       ' → logprob: -22.250028610229492
    10. ' ' → logprob: -23.250028610229492

Token 444: ' nv' (ID: 68641)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2026730328798294
    2. 'w' → logprob: -2.5776729583740234
    3. 'nv' → logprob: -2.7026729583740234
    4. 'nx' → logprob: -3.8276729583740234
    5. 'x' → logprob: -4.327672958374023
    6. 'e' → logprob: -5.952672958374023
    7. 'n' → logprob: -6.202672958374023
    8. 'to' → logprob: -7.702672958374023
    9. ' nxt' → logprob: -9.577672958374023
    10. 'ne' → logprob: -9.702672958374023

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47409334778785706
    2. 'in' → logprob: -0.9740933179855347
    3. '	in' → logprob: -11.224093437194824
    4. ' ' → logprob: -14.099093437194824
    5. '   ' → logprob: -14.349093437194824
    6. ')' → logprob: -15.099093437194824
    7. 'n' → logprob: -15.224093437194824
    8. '  ' → logprob: -15.599093437194824
    9. 's' → logprob: -15.599093437194824
    10. ',' → logprob: -15.849093437194824

Token 446: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.014163863845169544
    2. ' to' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.139163970947266
    4. '	to' → logprob: -16.014163970947266
    5. '[to' → logprob: -17.514163970947266
    6. '(to' → logprob: -18.639163970947266
    7. ' ' → logprob: -18.764163970947266
    8. '_to' → logprob: -20.889163970947266
    9. '  ' → logprob: -21.014163970947266
    10. ',to' → logprob: -21.514163970947266

Token 447: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.0
    3. '[' → logprob: -17.0
    4. ' [' → logprob: -18.875
    5. '(v' → logprob: -21.0
    6. '<v' → logprob: -21.625
    7. '[u' → logprob: -21.875
    8. '[V' → logprob: -22.0
    9. '	v' → logprob: -22.25
    10. '[
' → logprob: -22.25

Token 448: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0006463141762651503
    2. ']:
' → logprob: -7.500646114349365
    3. ']' → logprob: -9.500646591186523
    4. '):' → logprob: -11.625646591186523
    5. ']):' → logprob: -12.375646591186523
    6. ']:
' → logprob: -12.500646591186523
    7. ']:

' → logprob: -14.500646591186523
    8. ':' → logprob: -14.500646591186523
    9. '       ' → logprob: -15.250646591186523
    10. ' ]' → logprob: -16.250646591186523

Token 449: '  ' (ID: 256)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010359636507928371
    2. '<|end|>' → logprob: -4.760359764099121
    3. '            
' → logprob: -7.260359764099121
    4. ' if' → logprob: -7.885359764099121
    5. '       ' → logprob: -8.885359764099121
    6. '<|end|>' → logprob: -9.385359764099121
    7. '	       ' → logprob: -9.510359764099121
    8. '        
' → logprob: -9.885359764099121
    9. '               ' → logprob: -9.885359764099121
    10. '
' → logprob: -10.135359764099121

Token 450: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017383471131324768
    2. '<|end|>' → logprob: -4.892383575439453
    3. ' if' → logprob: -5.392383575439453
    4. 'if' → logprob: -6.267383575439453
    5. '       ' → logprob: -6.892383575439453
    6. ':' → logprob: -7.642383575439453
    7. '	       ' → logprob: -7.892383575439453
    8. '               ' → logprob: -8.142383575439453
    9. '            
' → logprob: -8.267383575439453
    10. '<|end|>' → logprob: -8.767383575439453

Token 451: ' Parc' (ID: 68618)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.801628828048706
    2. 'if' → logprob: -1.051628828048706
    3. '           ' → logprob: -1.801628828048706
    4. '       ' → logprob: -3.426628828048706
    5. '   ' → logprob: -6.051629066467285
    6. '<|end|>' → logprob: -6.926629066467285
    7. '	       ' → logprob: -7.301629066467285
    8. '	if' → logprob: -8.426629066467285
    9. '	   ' → logprob: -10.051629066467285
    10. '<|end|>' → logprob: -10.551629066467285

Token 452: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.008308766409754753
    2. 'ourt' → logprob: -5.5083088874816895
    3. 'ours' → logprob: -5.7583088874816895
    4. 'ur' → logprob: -7.7583088874816895
    5. 'ou' → logprob: -8.633308410644531
    6. 'v' → logprob: -10.008308410644531
    7. '```' → logprob: -10.508308410644531
    8. '#' → logprob: -10.508308410644531
    9. 'ouvr' → logprob: -10.633308410644531
    10. '       ' → logprob: -10.758308410644531

Token 453: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18910697102546692
    2. '           ' → logprob: -3.0641069412231445
    3. ' des' → logprob: -3.3141069412231445
    4. '   ' → logprob: -3.9391069412231445
    5. ' if' → logprob: -3.9391069412231445
    6. '(n' → logprob: -4.0641069412231445
    7. 'if' → logprob: -4.3141069412231445
    8. ' of' → logprob: -5.1891069412231445
    9. ':' → logprob: -5.3141069412231445
    10. '(v' → logprob: -5.9391069412231445

Token 454: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.40669772028923035
    2. 'neighbors' → logprob: -1.1566977500915527
    3. 'vo' → logprob: -4.781697750091553
    4. ' neighbors' → logprob: -4.781697750091553
    5. ' voisin' → logprob: -6.406697750091553
    6. 'neighbor' → logprob: -7.281697750091553
    7. ' vois' → logprob: -8.781697273254395
    8. 'adj' → logprob: -8.906697273254395
    9. ' neighbours' → logprob: -10.031697273254395
    10. 'nodes' → logprob: -10.156697273254395

Token 455: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003814925905317068
    2. ':' → logprob: -5.753814697265625
    3. '<|end|>' → logprob: -8.503814697265625
    4. ' if' → logprob: -8.753814697265625
    5. '	       ' → logprob: -9.503814697265625
    6. ':
' → logprob: -9.628814697265625
    7. '       ' → logprob: -10.503814697265625
    8. '          ' → logprob: -10.628814697265625
    9. '<|end|>' → logprob: -10.878814697265625
    10. 'if' → logprob: -11.378814697265625

Token 456: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004787057172507048
    2. 'nv' → logprob: -5.379786968231201
    3. ' v' → logprob: -8.87978744506836
    4. ' nv' → logprob: -10.87978744506836
    5. 'vq' → logprob: -12.62978744506836
    6. ')' → logprob: -13.37978744506836
    7. '_nv' → logprob: -14.00478744506836
    8. ')v' → logprob: -14.12978744506836
    9. '```' → logprob: -15.12978744506836
    10. '   ' → logprob: -15.25478744506836

Token 457: ' courant' (ID: 74694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019630184397101402
    2. ' if' → logprob: -5.269629955291748
    3. '       ' → logprob: -5.519629955291748
    4. ':' → logprob: -5.644629955291748
    5. 'if' → logprob: -6.269629955291748
    6. '	       ' → logprob: -6.269629955291748
    7. '            
' → logprob: -6.894629955291748
    8. '<|end|>' → logprob: -7.394629955291748
    9. ':
' → logprob: -8.394630432128906
    10. '   ' → logprob: -8.519630432128906

Token 458: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012442785082384944
    2. ' if' → logprob: -7.876244068145752
    3. '<|end|>' → logprob: -7.876244068145752
    4. ':' → logprob: -8.87624454498291
    5. '	       ' → logprob: -9.37624454498291
    6. '       ' → logprob: -10.12624454498291
    7. '            
' → logprob: -10.12624454498291
    8. '<|end|>' → logprob: -10.50124454498291
    9. '          ' → logprob: -10.62624454498291
    10. ',' → logprob: -10.62624454498291

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14873254299163818
    2. '       ' → logprob: -2.6487326622009277
    3. ' if' → logprob: -3.0237326622009277
    4. 'if' → logprob: -4.148732662200928
    5. '	       ' → logprob: -6.148732662200928
    6. '<|end|>' → logprob: -7.648732662200928
    7. '   ' → logprob: -9.02373218536377
    8. '	   ' → logprob: -10.14873218536377
    9. '          ' → logprob: -10.14873218536377
    10. '        ' → logprob: -10.39873218536377

Token 460: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7033659219741821
    2. 'if' (adapté à ' if') → logprob: -0.9533659219741821
    3. '               ' → logprob: -2.2033658027648926
    4. '           ' → logprob: -4.703365802764893
    5. '       ' → logprob: -10.45336627960205
    6. '	if' → logprob: -10.45336627960205
    7. '   ' → logprob: -10.57836627960205
    8. '	       ' → logprob: -10.70336627960205
    9. '	           ' → logprob: -11.20336627960205
    10. '            ' → logprob: -11.70336627960205

Token 461: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47961336374282837
    2. 'not' → logprob: -1.1046133041381836
    3. 'seen' → logprob: -3.3546133041381836
    4. ' seen' → logprob: -4.229613304138184
    5. '!' → logprob: -9.604613304138184
    6. '   ' → logprob: -10.354613304138184
    7. 'se' → logprob: -10.979613304138184
    8. '	not' → logprob: -11.229613304138184
    9. ' ' → logprob: -11.479613304138184
    10. '(not' → logprob: -11.979613304138184

Token 462: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.029751643538475037
    2. ' seen' → logprob: -3.5297515392303467
    3. '   ' → logprob: -15.529751777648926
    4. 'se' → logprob: -15.529751777648926
    5. ' ' → logprob: -15.654751777648926
    6. 'see' → logprob: -15.654751777648926
    7. 'visited' → logprob: -15.904751777648926
    8. 'shown' → logprob: -15.904751777648926
    9. '_seen' → logprob: -16.65475082397461
    10. 's' → logprob: -16.90475082397461

Token 463: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.50000286102295
    3. 'nv' → logprob: -14.37500286102295
    4. ')' → logprob: -15.37500286102295
    5. ' [' → logprob: -15.75000286102295
    6. '```' → logprob: -15.75000286102295
    7. '   ' → logprob: -16.500003814697266
    8. ')[' → logprob: -16.750003814697266
    9. '[
' → logprob: -16.875003814697266
    10. '

' → logprob: -16.875003814697266

Token 464: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.097437315271236e-05
    2. '[v' → logprob: -10.12505054473877
    3. '[n' → logprob: -11.62505054473877
    4. '[' → logprob: -14.37505054473877
    5. ']' → logprob: -14.62505054473877
    6. 'av' → logprob: -15.62505054473877
    7. '][' → logprob: -15.75005054473877
    8. 'в' → logprob: -16.000051498413086
    9. ')' → logprob: -16.125051498413086
    10. '   ' → logprob: -16.250051498413086

Token 465: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04394593834877014
    2. ']:
' → logprob: -3.1689460277557373
    3. ']' → logprob: -7.793945789337158
    4. '[v' → logprob: -8.168946266174316
    5. ':' → logprob: -8.793946266174316
    6. ']:
' → logprob: -10.043946266174316
    7. ']:

' → logprob: -10.418946266174316
    8. '[' → logprob: -11.793946266174316
    9. ':
' → logprob: -12.418946266174316
    10. '"]:' → logprob: -12.418946266174316

Token 466: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004956577904522419
    2. '<|end|>' → logprob: -5.7549567222595215
    3. '                
' → logprob: -7.3799567222595215
    4. ' 
' → logprob: -8.129956245422363
    5. ' seen' → logprob: -8.504956245422363
    6. '           ' → logprob: -8.629956245422363
    7. '
' → logprob: -9.379956245422363
    8. '    
' → logprob: -9.754956245422363
    9. '            
' → logprob: -9.754956245422363
    10. '<|end|>' → logprob: -9.754956245422363

Token 467: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002180477138608694
    2. ' seen' → logprob: -6.502180576324463
    3. '<|end|>' → logprob: -8.252180099487305
    4. 'seen' → logprob: -8.877180099487305
    5. '           ' → logprob: -9.377180099487305
    6. '                
' → logprob: -10.002180099487305
    7. '       ' → logprob: -10.127180099487305
    8. '```' → logprob: -10.627180099487305
    9. '   ' → logprob: -10.877180099487305
    10. '_seen' → logprob: -12.002180099487305

Token 468: ' Si' (ID: 7832)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6017441749572754
    2. ' seen' → logprob: -1.2267441749572754
    3. 'seen' → logprob: -1.9767441749572754
    4. '           ' → logprob: -3.9767441749572754
    5. '   ' → logprob: -7.851744174957275
    6. '       ' → logprob: -8.226743698120117
    7. '<|end|>' → logprob: -8.476743698120117
    8. '
' → logprob: -8.726743698120117
    9. '_seen' → logprob: -8.851743698120117
    10. '                
' → logprob: -9.351743698120117

Token 469: ' le' (ID: 505)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.053318049758672714
    2. 'not' → logprob: -3.6783180236816406
    3. ' seen' → logprob: -4.303318023681641
    4. '<|end|>' → logprob: -4.553318023681641
    5. 'seen' → logprob: -6.178318023681641
    6. ' ' → logprob: -7.928318023681641
    7. ' nv' → logprob: -10.30331802368164
    8. '<|end|>' → logprob: -10.42831802368164
    9. 'se' → logprob: -11.30331802368164
    10. '(not' → logprob: -11.42831802368164

Token 470: ' voisin' (ID: 145411)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.8697546720504761
    2. ' not' → logprob: -1.369754672050476
    3. 'not' → logprob: -1.619754672050476
    4. ' nv' → logprob: -2.2447547912597656
    5. '<|end|>' → logprob: -4.744754791259766
    6. 'seen' → logprob: -5.619754791259766
    7. '_nv' → logprob: -5.994754791259766
    8. 'v' → logprob: -6.619754791259766
    9. 'n' → logprob: -7.119754791259766
    10. ' seen' → logprob: -7.119754791259766

Token 471: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4075998067855835
    2. ':
' → logprob: -1.6575998067855835
    3. ' not' → logprob: -2.657599925994873
    4. 'not' → logprob: -3.407599925994873
    5. '<|end|>' → logprob: -4.157599925994873
    6. '):
' → logprob: -5.032599925994873
    7. '):' → logprob: -5.407599925994873
    8. ' is' → logprob: -5.782599925994873
    9. '==' → logprob: -5.782599925994873
    10. ' ==' → logprob: -6.407599925994873

Token 472: ''a' (ID: 10443)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.1899024248123169
    2. 'v' → logprob: -2.8149023056030273
    3. '[' → logprob: -3.6899023056030273
    4. 'n' → logprob: -3.9399023056030273
    5. '[v' → logprob: -4.189902305603027
    6. 'nv' → logprob: -4.689902305603027
    7. 'o' → logprob: -4.939902305603027
    8. ''est' → logprob: -5.064902305603027
    9. 'e' → logprob: -5.314902305603027
    10. 'not' → logprob: -5.564902305603027

Token 473: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0034016903955489397
    2. ' pas' → logprob: -6.503401756286621
    3. 't' → logprob: -7.128401756286621
    4. '_pas' → logprob: -7.878401756286621
    5. 'ot' → logprob: -8.753401756286621
    6. 'not' → logprob: -9.003401756286621
    7. 'été' → logprob: -9.378401756286621
    8. '```' → logprob: -9.503401756286621
    9. '0' → logprob: -9.753401756286621
    10. 'a' → logprob: -10.003401756286621

Token 474: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.7373631596565247
    2. 'été' → logprob: -0.8623631596565247
    3. 'been' → logprob: -2.86236310005188
    4. 'seen' → logprob: -4.362363338470459
    5. ' been' → logprob: -4.612363338470459
    6. ' encore' → logprob: -5.237363338470459
    7. 'vu' → logprob: -5.362363338470459
    8. 'être' → logprob: -5.612363338470459
    9. 'enc' → logprob: -6.612363338470459
    10. ' vu' → logprob: -7.237363338470459

Token 475: ' vis' (ID: 1909)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.514754056930542
    2. 'vis' → logprob: -1.514754056930542
    3. 'seen' → logprob: -2.764754056930542
    4. ' vu' → logprob: -3.139754056930542
    5. 'visited' → logprob: -3.389754056930542
    6. 'vist' → logprob: -3.514754056930542
    7. 'vue' → logprob: -5.264754295349121
    8. 'visit' → logprob: -5.389754295349121
    9. 'voir' → logprob: -7.389754295349121
    10. 'v' → logprob: -7.764754295349121

Token 476: 'ité' (ID: 3761)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.25646013021469116
    2. 'ité' → logprob: -1.506460189819336
    3. 'it' → logprob: -5.506460189819336
    4. 'ite' → logprob: -7.756460189819336
    5. '[' → logprob: -11.631460189819336
    6. 'ités' → logprob: -12.506460189819336
    7. 'isted' → logprob: -12.631460189819336
    8. '[it' → logprob: -12.631460189819336
    9. 'iter' → logprob: -13.006460189819336
    10. 'itado' → logprob: -13.131460189819336

Token 477: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03579366207122803
    2. ':' → logprob: -3.9107937812805176
    3. ',' → logprob: -4.785793781280518
    4. ':
' → logprob: -5.160793781280518
    5. '                
' → logprob: -8.41079330444336
    6. '           ' → logprob: -8.53579330444336
    7. '<|end|>' → logprob: -8.78579330444336
    8. '):
' → logprob: -8.78579330444336
    9. ')' → logprob: -9.53579330444336
    10. '):' → logprob: -9.66079330444336

Token 478: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011346201645210385
    2. '<|end|>' → logprob: -7.876134395599365
    3. '           ' → logprob: -8.376134872436523
    4. ' seen' → logprob: -8.501134872436523
    5. '                
' → logprob: -9.001134872436523
    6. '   ' → logprob: -10.501134872436523
    7. '```' → logprob: -10.751134872436523
    8. ')' → logprob: -10.876134872436523
    9. ',' → logprob: -11.126134872436523
    10. '       ' → logprob: -11.251134872436523

Token 479: ' seen' (ID: 6177)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.241962268948555
    2. ' seen' → logprob: -2.241962194442749
    3. 'seen' (adapté à ' seen') → logprob: -2.366962194442749
    4. '                   ' → logprob: -4.866962432861328
    5. ' ans' → logprob: -5.741962432861328
    6. 'ans' → logprob: -5.991962432861328
    7. '           ' → logprob: -8.241962432861328
    8. ' que' → logprob: -8.616962432861328
    9. '                
' → logprob: -8.616962432861328
    10. 'que' → logprob: -8.741962432861328

Token 480: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. ' [' → logprob: -15.25000286102295
    4. '```' → logprob: -16.500001907348633
    5. ')[' → logprob: -16.875001907348633
    6. '[N' → logprob: -17.125001907348633
    7. ')' → logprob: -17.375001907348633
    8. '[v' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '

' → logprob: -17.750001907348633

Token 481: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007167966570705175
    2. 'nv' → logprob: -5.882167816162109
    3. '[v' → logprob: -6.007167816162109
    4. '[n' → logprob: -6.757167816162109
    5. ' nv' → logprob: -7.507167816162109
    6. '][' → logprob: -10.00716781616211
    7. '_nv' → logprob: -10.13216781616211
    8. '[' → logprob: -10.88216781616211
    9. '               ' → logprob: -11.38216781616211
    10. '                   ' → logprob: -11.63216781616211

Token 482: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.008675907738506794
    2. ']' → logprob: -4.758676052093506
    3. ']=' → logprob: -10.383675575256348
    4. '[v' → logprob: -11.758675575256348
    5. '=' → logprob: -12.258675575256348
    6. '   ' → logprob: -12.508675575256348
    7. 'nv' → logprob: -12.883675575256348
    8. '[' → logprob: -13.008675575256348
    9. '][' → logprob: -13.133675575256348
    10. '
' → logprob: -13.383675575256348

Token 483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196914613246918
    2. ' =' → logprob: -2.811969041824341
    3. ']' → logprob: -14.311968803405762
    4. '[' → logprob: -14.561968803405762
    5. ']=' → logprob: -15.186968803405762
    6. '=True' → logprob: -17.061969757080078
    7. ')' → logprob: -17.186969757080078
    8. '           ' → logprob: -17.561969757080078
    9. ',' → logprob: -17.686969757080078
    10. '   ' → logprob: -17.686969757080078

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'True' → logprob: -14.50000286102295
    4. ' True' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '  ' → logprob: -21.125003814697266
    7. 'true' → logprob: -22.125003814697266
    8. '           ' → logprob: -22.875003814697266
    9. '
' → logprob: -23.250003814697266
    10. '    ' → logprob: -23.500003814697266

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'True' → logprob: -15.5
    3. ' ' → logprob: -17.25
    4. ' True' → logprob: -21.25
    5. '   ' → logprob: -21.25
    6. 'true' → logprob: -22.75
    7. '  ' → logprob: -23.75
    8. '=' → logprob: -25.0
    9. '=True' → logprob: -25.375
    10. '۱' → logprob: -25.5

Token 486: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04727858677506447
    2. '                
' → logprob: -4.04727840423584
    3. '
' → logprob: -4.17227840423584
    4. '<|end|>' → logprob: -4.42227840423584
    5. '                ' → logprob: -8.17227840423584
    6. '  
' → logprob: -8.54727840423584
    7. ' 
' → logprob: -8.67227840423584
    8. '<|end|>' → logprob: -9.29727840423584
    9. '
' → logprob: -9.54727840423584
    10. '               
' → logprob: -9.54727840423584

Token 487: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001970981014892459
    2. '                
' → logprob: -6.7519707679748535
    3. '
' → logprob: -7.6269707679748535
    4. ' que' → logprob: -9.251971244812012
    5. '              ' → logprob: -10.376971244812012
    6. '                ' → logprob: -10.626971244812012
    7. 'que' → logprob: -10.751971244812012
    8. ',' → logprob: -10.751971244812012
    9. '           ' → logprob: -10.876971244812012
    10. ')' → logprob: -11.001971244812012

Token 488: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45742589235305786
    2. 'ans' → logprob: -1.832425832748413
    3. 'que' → logprob: -2.082425832748413
    4. ' ans' → logprob: -3.207425832748413
    5. ' que' → logprob: -3.207425832748413
    6. '           ' → logprob: -7.332426071166992
    7. '                
' → logprob: -8.457426071166992
    8. '#' → logprob: -9.332426071166992
    9. '              ' → logprob: -9.332426071166992
    10. '
' → logprob: -9.582426071166992

Token 489: ' le' (ID: 505)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.430356740951538
    2. 'que' → logprob: -1.805356740951538
    3. ' marque' → logprob: -1.930356740951538
    4. 'continue' → logprob: -1.930356740951538
    5. 'enqueue' → logprob: -2.055356740951538
    6. 'mar' → logprob: -2.680356740951538
    7. 'mark' → logprob: -3.180356740951538
    8. 'le' → logprob: -3.305356740951538
    9. 'append' → logprob: -4.430356979370117
    10. 'aj' → logprob: -4.805356979370117

Token 490: ' marque' (ID: 38644)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.1788160353899002
    2. 'aj' → logprob: -3.178816080093384
    3. 'enqueue' → logprob: -3.303816080093384
    4. 'append' → logprob: -3.678816080093384
    5. 'met' → logprob: -3.803816080093384
    6. 'mark' → logprob: -4.053815841674805
    7. 'queue' → logprob: -4.678815841674805
    8. ' marque' → logprob: -4.803815841674805
    9. 'continue' → logprob: -7.303815841674805
    10. 'vis' → logprob: -7.303815841674805

Token 491: ' comme' (ID: 7971)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004154499154537916
    2. '                ' → logprob: -6.379154682159424
    3. '                
' → logprob: -7.004154682159424
    4. '<|end|>' → logprob: -7.254154682159424
    5. '              ' → logprob: -8.379154205322266
    6. '                   ' → logprob: -8.754154205322266
    7. ',' → logprob: -9.254154205322266
    8. ' as' → logprob: -9.254154205322266
    9. '           ' → logprob: -10.379154205322266
    10. '=' → logprob: -10.379154205322266

Token 492: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.05942028760910034
    2. 'vu' → logprob: -3.184420347213745
    3. 'visited' → logprob: -5.434420108795166
    4. 'True' → logprob: -5.434420108795166
    5. ' True' → logprob: -5.684420108795166
    6. 'visit' → logprob: -5.809420108795166
    7. 'vist' → logprob: -7.559420108795166
    8. ' vis' → logprob: -8.559420585632324
    9. ' vu' → logprob: -8.934420585632324
    10. 'visible' → logprob: -9.434420585632324

Token 493: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.000505730917211622
    2. 'ited' → logprob: -7.6255059242248535
    3. 'té' → logprob: -12.000505447387695
    4. 'it' → logprob: -12.125505447387695
    5. 'ités' → logprob: -12.750505447387695
    6. 'itable' → logprob: -14.250505447387695
    7. '#' → logprob: -14.625505447387695
    8. '   ' → logprob: -14.875505447387695
    9. 'ite' → logprob: -15.000505447387695
    10. 'ity' → logprob: -16.125505447387695

Token 494: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023328518494963646
    2. '                
' → logprob: -3.8983285427093506
    3. '<|end|>' → logprob: -6.7733283042907715
    4. ' que' → logprob: -8.02332878112793
    5. '
' → logprob: -8.52332878112793
    6. '                ' → logprob: -8.64832878112793
    7. ' 
' → logprob: -8.89832878112793
    8. '```' → logprob: -9.02332878112793
    9. ')' → logprob: -9.27332878112793
    10. ',' → logprob: -9.52332878112793

Token 495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016352694481611252
    2. '                
' → logprob: -4.391352653503418
    3. '```' → logprob: -6.891352653503418
    4. ' ans' → logprob: -7.141352653503418
    5. ' 
' → logprob: -7.516352653503418
    6. '
' → logprob: -7.516352653503418
    7. ' que' → logprob: -8.516352653503418
    8. '                ' → logprob: -9.391352653503418
    9. '               
' → logprob: -9.766352653503418
    10. '  
' → logprob: -9.766352653503418

Token 496: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04934302344918251
    2. ' ans' → logprob: -3.0493431091308594
    3. 'val' → logprob: -8.17434310913086
    4. '               ' → logprob: -8.17434310913086
    5. 'value' → logprob: -9.92434310913086
    6. '	ans' → logprob: -9.92434310913086
    7. '                   ' → logprob: -10.54934310913086
    8. 'if' → logprob: -10.92434310913086
    9. ' value' → logprob: -11.42434310913086
    10. ' val' → logprob: -11.42434310913086

Token 497: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.028715014457702637
    2. 'val' → logprob: -3.653715133666992
    3. 'value' → logprob: -6.153715133666992
    4. ' ans' → logprob: -8.903715133666992
    5. '               ' → logprob: -9.403715133666992
    6. 'assign' → logprob: -11.403715133666992
    7. '                   ' → logprob: -11.403715133666992
    8. 'assigned' → logprob: -12.028715133666992
    9. 'valor' → logprob: -12.028715133666992
    10. ' val' → logprob: -12.528715133666992

Token 498: ' lui' (ID: 10623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5897160768508911
    2. ' ans' → logprob: -1.0897160768508911
    3. '               ' → logprob: -2.7147159576416016
    4. '	ans' → logprob: -4.464715957641602
    5. '                   ' → logprob: -4.839715957641602
    6. '   ' → logprob: -4.964715957641602
    7. '.enqueue' → logprob: -6.089715957641602
    8. 'que' → logprob: -6.339715957641602
    9. '.append' → logprob: -6.589715957641602
    10. '_ans' → logprob: -6.589715957641602

Token 499: ' attrib' (ID: 72186)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.14024490118026733
    2. 'aff' → logprob: -3.140244960784912
    3. '               ' → logprob: -3.515244960784912
    4. '.assign' → logprob: -3.890244960784912
    5. 'attrib' → logprob: -4.765244960784912
    6. ' affect' → logprob: -5.140244960784912
    7. '                   ' → logprob: -5.515244960784912
    8. ' assign' → logprob: -5.640244960784912
    9. 'ass' → logprob: -5.765244960784912
    10. 'at' → logprob: -6.015244960784912

Token 500: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0001182052365038544
    2. 'e' → logprob: -9.750118255615234
    3. 'uer' → logprob: -10.500118255615234
    4. 'u' → logprob: -10.500118255615234
    5. 'uera' → logprob: -13.625118255615234
    6. '               ' → logprob: -14.125118255615234
    7. 'ues' → logprob: -14.250118255615234
    8. '   ' → logprob: -14.375118255615234
    9. 'ute' → logprob: -15.250118255615234
    10. '       ' → logprob: -15.500118255615234

Token 501: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0039208377711474895
    2. ' ans' → logprob: -5.628921031951904
    3. 'c' → logprob: -8.503920555114746
    4. '               ' → logprob: -9.878920555114746
    5. '                   ' → logprob: -10.378920555114746
    6. '(ans' → logprob: -11.378920555114746
    7. '   ' → logprob: -11.878920555114746
    8. ' c' → logprob: -12.253920555114746
    9. '	ans' → logprob: -12.253920555114746
    10. '           ' → logprob: -12.878920555114746

Token 502: ' plus' (ID: 2932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0029782988131046295
    2. ' c' → logprob: -6.252978324890137
    3. 'ans' → logprob: -7.002978324890137
    4. ' ans' → logprob: -9.127978324890137
    5. 'value' → logprob: -11.877978324890137
    6. ' value' → logprob: -12.002978324890137
    7. '               ' → logprob: -12.127978324890137
    8. 'pop' → logprob: -12.752978324890137
    9. '                   ' → logprob: -12.877978324890137
    10. '   ' → logprob: -12.877978324890137

Token 503: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.017863566055893898
    2. 'large' → logprob: -5.142863750457764
    3. 'grand' → logprob: -5.392863750457764
    4. ' large' → logprob: -5.892863750457764
    5. '   ' → logprob: -6.392863750457764
    6. ' grandes' → logprob: -6.892863750457764
    7. '_large' → logprob: -7.642863750457764
    8. ' grand' → logprob: -7.767863750457764
    9. ' grote' → logprob: -8.517863273620605
    10. ' große' → logprob: -8.892863273620605

Token 504: ' valeur' (ID: 41664)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7258647680282593
    2. ' c' → logprob: -1.3508647680282593
    3. ' valeur' → logprob: -1.6008647680282593
    4. ' val' → logprob: -3.475864887237549
    5. 'value' → logprob: -4.475864887237549
    6. 'val' → logprob: -4.975864887237549
    7. ' ' → logprob: -5.850864887237549
    8. 'c' → logprob: -6.350864887237549
    9. ' vale' → logprob: -7.100864887237549
    10. ' ' → logprob: -8.72586441040039

Token 505: ' restante' (ID: 130202)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0683365911245346
    2. '=' → logprob: -2.9433364868164062
    3. '               ' → logprob: -5.068336486816406
    4. '                   ' → logprob: -5.068336486816406
    5. '   ' → logprob: -7.818336486816406
    6. ' ans' → logprob: -9.068336486816406
    7. '           ' → logprob: -10.068336486816406
    8. 'ans' → logprob: -10.318336486816406
    9. ',' → logprob: -10.693336486816406
    10. ':' → logprob: -11.068336486816406

Token 506: '
' (ID: 198)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5841337442398071
    2. '               ' → logprob: -1.5841337442398071
    3. ' =' → logprob: -2.2091336250305176
    4. '                   ' → logprob: -2.4591336250305176
    5. '(ans' → logprob: -3.9591336250305176
    6. '=' → logprob: -4.584133625030518
    7. 'ans' → logprob: -4.959133625030518
    8. '   ' → logprob: -6.709133625030518
    9. ',' → logprob: -7.209133625030518
    10. ':' → logprob: -7.334133625030518

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002632430987432599
    2. ' ans' → logprob: -9.375263214111328
    3. '                   ' → logprob: -10.375263214111328
    4. '<|end|>' → logprob: -10.375263214111328
    5. '           ' → logprob: -10.750263214111328
    6. '       ' → logprob: -10.750263214111328
    7. '              ' → logprob: -11.125263214111328
    8. '   ' → logprob: -11.250263214111328
    9. ',' → logprob: -11.875263214111328
    10. 'ans' → logprob: -12.125263214111328

Token 508: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.015958938747644424
    2. ' ans' → logprob: -4.515958786010742
    3. 'val' → logprob: -5.640958786010742
    4. '               ' → logprob: -7.265958786010742
    5. 'value' → logprob: -7.890958786010742
    6. '                   ' → logprob: -9.015958786010742
    7. ' val' → logprob: -9.640958786010742
    8. '	ans' → logprob: -10.515958786010742
    9. ' value' → logprob: -11.140958786010742
    10. 'v' → logprob: -11.140958786010742

Token 509: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.685467764735222e-05
    2. '[' → logprob: -9.500086784362793
    3. '[v' → logprob: -12.000086784362793
    4. '```' → logprob: -14.000086784362793
    5. ' [' → logprob: -14.125086784362793
    6. '   ' → logprob: -14.250086784362793
    7. '\[' → logprob: -14.250086784362793
    8. '[N' → logprob: -14.750086784362793
    9. '[np' → logprob: -15.125086784362793
    10. '[i' → logprob: -15.250086784362793

Token 510: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022384009789675474
    2. '[n' → logprob: -6.8772382736206055
    3. '[' → logprob: -7.2522382736206055
    4. '[v' → logprob: -7.6272382736206055
    5. '   ' → logprob: -12.752238273620605
    6. ']' → logprob: -13.752238273620605
    7. 'nv' → logprob: -14.377238273620605
    8. ' [' → logprob: -14.377238273620605
    9. '```' → logprob: -14.877238273620605
    10. '[
' → logprob: -15.127238273620605

Token 511: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.059680067002773285
    2. '=' → logprob: -3.0596799850463867
    3. ']=' → logprob: -4.684679985046387
    4. ' =' → logprob: -6.559679985046387
    5. ')' → logprob: -7.934679985046387
    6. ')=' → logprob: -11.434679985046387
    7. ' ]' → logprob: -11.934679985046387
    8. '])' → logprob: -13.809679985046387
    9. '=c' → logprob: -14.059679985046387
    10. ',' → logprob: -14.309679985046387

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. '.=' → logprob: -13.910225868225098
    4. '+=' → logprob: -14.910225868225098
    5. '=c' → logprob: -15.535225868225098
    6. '   ' → logprob: -16.535226821899414
    7. ',' → logprob: -16.785226821899414
    8. ' +=' → logprob: -17.035226821899414
    9. '＝' → logprob: -17.160226821899414
    10. ' ' → logprob: -17.285226821899414

Token 513: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759411454200745
    2. ' c' → logprob: -0.8259411454200745
    3. ' ' → logprob: -14.57594108581543
    4. '   ' → logprob: -14.95094108581543
    5. '	c' → logprob: -14.95094108581543
    6. '(c' → logprob: -15.32594108581543
    7. ' ' → logprob: -15.57594108581543
    8. ')c' → logprob: -16.82594108581543
    9. '_c' → logprob: -16.95094108581543
    10. '  ' → logprob: -17.07594108581543

Token 514: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.625001907348633
    3. 'pop' → logprob: -14.000001907348633
    4. ' .' → logprob: -15.875001907348633
    5. '.p' → logprob: -17.750001907348633
    6. '.Pop' → logprob: -20.000001907348633
    7. ' pop' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '_pop' → logprob: -20.375001907348633
    10. '	pop' → logprob: -20.500001907348633

Token 515: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052377874962985516
    2. '()
' → logprob: -5.255237579345703
    3. '()

' → logprob: -13.255237579345703
    4. '()
' → logprob: -14.255237579345703
    5. '())' → logprob: -14.380237579345703
    6. '(' → logprob: -14.630237579345703
    7. '()]' → logprob: -15.505237579345703
    8. '()\' → logprob: -15.880237579345703
    9. '()`' → logprob: -16.255237579345703
    10. '()>' → logprob: -16.755237579345703

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026300468016415834
    2. '                
' → logprob: -8.875263214111328
    3. '              ' → logprob: -10.875263214111328
    4. 'S' → logprob: -11.250263214111328
    5. ' que' → logprob: -11.250263214111328
    6. '       ' → logprob: -11.250263214111328
    7. '           ' → logprob: -11.375263214111328
    8. '
' → logprob: -11.375263214111328
    9. '```' → logprob: -11.375263214111328
    10. 'que' → logprob: -11.750263214111328

Token 517: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4071060121059418
    2. 'S' → logprob: -1.1571060419082642
    3. ' S' → logprob: -4.032105922698975
    4. '       ' → logprob: -6.532105922698975
    5. '   ' → logprob: -7.532105922698975
    6. '           ' → logprob: -8.907106399536133
    7. '              ' → logprob: -9.532106399536133
    8. ' ' → logprob: -9.907106399536133
    9. '  ' → logprob: -11.532106399536133
    10. '      ' → logprob: -12.157106399536133

Token 518: ' On' (ID: 2160)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.014684110297821e-06
    2. ' S' → logprob: -11.875008583068848
    3. '               ' → logprob: -13.625008583068848
    4. '   ' → logprob: -14.625008583068848
    5. '                   ' → logprob: -16.250009536743164
    6. '           ' → logprob: -16.250009536743164
    7. '  ' → logprob: -16.750009536743164
    8. ' ' → logprob: -17.000009536743164
    9. '	S' → logprob: -18.125009536743164
    10. 'if' → logprob: -18.750009536743164

Token 519: ' ajoute' (ID: 91611)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036702712532132864
    2. 's' → logprob: -6.8786702156066895
    3. '+=' → logprob: -7.0036702156066895
    4. ' S' → logprob: -7.8786702156066895
    5. '+' → logprob: -8.003670692443848
    6. ' +=' → logprob: -9.128670692443848
    7. ')' → logprob: -9.128670692443848
    8. 'continue' → logprob: -9.253670692443848
    9. '<|end|>' → logprob: -9.378670692443848
    10. '=' → logprob: -9.503670692443848

Token 520: ' cette' (ID: 7696)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005244668107479811
    2. 'ans' → logprob: -5.255244731903076
    3. ' ans' → logprob: -11.755244255065918
    4. '	ans' → logprob: -13.255244255065918
    5. '(' → logprob: -14.255244255065918
    6. '(an' → logprob: -15.130244255065918
    7. '(S' → logprob: -15.630244255065918
    8. '(s' → logprob: -15.880244255065918
    9. '(answer' → logprob: -17.755245208740234
    10. '(
' → logprob: -17.880245208740234

Token 521: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8389202356338501
    2. ' ans' → logprob: -0.9639202356338501
    3. 'val' → logprob: -2.2139201164245605
    4. 'value' → logprob: -3.2139201164245605
    5. ' value' → logprob: -4.4639201164245605
    6. '[val' → logprob: -4.4639201164245605
    7. '(ans' → logprob: -4.9639201164245605
    8. ' valeur' → logprob: -6.2139201164245605
    9. ' val' → logprob: -6.2139201164245605
    10. '[v' → logprob: -7.8389201164245605

Token 522: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3136533796787262
    2. 'to' → logprob: -1.6886533498764038
    3. ' à' → logprob: -2.6886534690856934
    4. ' +=' → logprob: -5.063653469085693
    5. '               ' → logprob: -5.813653469085693
    6. '<|end|>' → logprob: -5.813653469085693
    7. ' au' → logprob: -6.938653469085693
    8. '                   ' → logprob: -7.438653469085693
    9. '   ' → logprob: -7.563653469085693
    10. ' aux' → logprob: -7.938653469085693

Token 523: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001234428636962548
    2. ' S' → logprob: -9.000123023986816
    3. 'the' → logprob: -17.125123977661133
    4. '	S' → logprob: -18.000123977661133
    5. '>S' → logprob: -18.250123977661133
    6. 's' → logprob: -18.375123977661133
    7. '=S' → logprob: -18.375123977661133
    8. '<|end|>' → logprob: -19.000123977661133
    9. '
' → logprob: -19.375123977661133
    10. '_S' → logprob: -19.375123977661133

Token 524: ' somme' (ID: 64484)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0007101670489646494
    2. ' S' → logprob: -7.2507100105285645
    3. '>S' → logprob: -16.375709533691406
    4. '+' → logprob: -16.750709533691406
    5. '_S' → logprob: -17.625709533691406
    6. '=S' → logprob: -18.000709533691406
    7. '
' → logprob: -18.250709533691406
    8. '```' → logprob: -18.375709533691406
    9. '	S' → logprob: -18.625709533691406
    10. 's' → logprob: -18.625709533691406

Token 525: ' S' (ID: 336)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013421152718365192
    2. ' S' → logprob: -5.513421058654785
    3. '<|end|>' → logprob: -6.013421058654785
    4. '+' → logprob: -6.388421058654785
    5. ' +' → logprob: -6.763421058654785
    6. '
' → logprob: -7.138421058654785
    7. 'S' → logprob: -7.138421058654785
    8. ' +=' → logprob: -7.513421058654785
    9. '                   ' → logprob: -7.888421058654785
    10. '              ' → logprob: -8.388421058654785

Token 526: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30260130763053894
    2. '+' → logprob: -2.5526013374328613
    3. ' +' → logprob: -2.8026013374328613
    4. '
' → logprob: -3.0526013374328613
    5. '<|end|>' → logprob: -3.0526013374328613
    6. '                   ' → logprob: -4.552601337432861
    7. '   ' → logprob: -5.677601337432861
    8. '           ' → logprob: -6.052601337432861
    9. ' 
' → logprob: -6.552601337432861
    10. ' +=' → logprob: -6.802601337432861

Token 527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007604343118146062
    2. '<|end|>' → logprob: -7.750760555267334
    3. '              ' → logprob: -9.625760078430176
    4. ' S' → logprob: -10.250760078430176
    5. '                
' → logprob: -10.375760078430176
    6. '
' → logprob: -10.500760078430176
    7. '                   ' → logprob: -10.625760078430176
    8. ' +' → logprob: -10.875760078430176
    9. '                ' → logprob: -11.000760078430176
    10. ' ' → logprob: -11.250760078430176

Token 528: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.03400964289903641
    2. ' S' → logprob: -3.4090096950531006
    3. '               ' → logprob: -8.03400993347168
    4. '   ' → logprob: -11.65900993347168
    5. ' ' → logprob: -11.78400993347168
    6. '
' → logprob: -12.03400993347168
    7. '                   ' → logprob: -12.28400993347168
    8. '```' → logprob: -12.40900993347168
    9. 's' → logprob: -13.15900993347168
    10. '  ' → logprob: -13.28400993347168

Token 529: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04872305691242218
    2. ' +=' → logprob: -3.048722982406616
    3. '+' → logprob: -8.923723220825195
    4. '=' → logprob: -14.048723220825195
    5. ']+=' → logprob: -14.173723220825195
    6. '+=(' → logprob: -14.798723220825195
    7. '   ' → logprob: -15.048723220825195
    8. '+='' → logprob: -16.048723220825195
    9. '+="' → logprob: -16.298723220825195
    10. ' +' → logprob: -16.798723220825195

Token 530: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024829115718603134
    2. ' ans' → logprob: -6.002482891082764
    3. '(ans' → logprob: -12.127483367919922
    4. '	ans' → logprob: -13.252483367919922
    5. '   ' → logprob: -16.877483367919922
    6. 'ann' → logprob: -18.252483367919922
    7. 'anst' → logprob: -18.627483367919922
    8. ' ' → logprob: -19.252483367919922
    9. '_ans' → logprob: -19.502483367919922
    10. 'answer' → logprob: -19.752483367919922

Token 531: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0001126026691053994
    2. '[v' → logprob: -9.500112533569336
    3. ' [' → logprob: -11.250112533569336
    4. '[' → logprob: -11.500112533569336
    5. 'nv' → logprob: -12.375112533569336
    6. '```' → logprob: -12.500112533569336
    7. '   ' → logprob: -14.312612533569336
    8. '[
' → logprob: -14.687612533569336
    9. '\[' → logprob: -14.687612533569336
    10. ')' → logprob: -14.812612533569336

Token 532: 'v' (ID: 85)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.003209799760952592
    2. 'v' → logprob: -6.628209590911865
    3. '[v' → logprob: -6.628209590911865
    4. 'nv' → logprob: -7.628209590911865
    5. 'n' → logprob: -11.128210067749023
    6. '[' → logprob: -11.503210067749023
    7. ' nv' → logprob: -11.503210067749023
    8. ' [' → logprob: -11.503210067749023
    9. '(n' → logprob: -11.753210067749023
    10. ']' → logprob: -12.628210067749023

Token 533: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03388334810733795
    2. ']' → logprob: -3.4088833332061768
    3. ')
' → logprob: -9.283883094787598
    4. ')]' → logprob: -10.283883094787598
    5. '])' → logprob: -10.408883094787598
    6. '<|end|>' → logprob: -10.408883094787598
    7. ' )' → logprob: -10.533883094787598
    8. ' ]' → logprob: -11.533883094787598
    9. '   ' → logprob: -12.783883094787598
    10. '}' → logprob: -13.033883094787598

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009858887642621994
    2. '```' → logprob: -7.250986099243164
    3. '                
' → logprob: -9.375986099243164
    4. ' que' → logprob: -9.875986099243164
    5. '``' → logprob: -9.875986099243164
    6. 'que' → logprob: -9.875986099243164
    7. '              ' → logprob: -11.750986099243164
    8. '       ' → logprob: -12.000986099243164
    9. '
' → logprob: -12.125986099243164
    10. '			' → logprob: -12.250986099243164

Token 535: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04863482713699341
    2. 'que' → logprob: -3.0486347675323486
    3. '              ' → logprob: -11.17363452911377
    4. ' que' → logprob: -11.17363452911377
    5. 'queue' → logprob: -11.42363452911377
    6. '           ' → logprob: -12.42363452911377
    7. '       ' → logprob: -13.42363452911377
    8. 'deque' → logprob: -14.04863452911377
    9. 'queued' → logprob: -14.54863452911377
    10. '   ' → logprob: -15.04863452911377

Token 536: ' On' (ID: 2160)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: 0.0
    2. ' que' → logprob: -17.125
    3. '   ' → logprob: -17.5
    4. '       ' → logprob: -19.375
    5. 'queue' → logprob: -19.75
    6. 'qu' → logprob: -20.0
    7. '               ' → logprob: -20.125
    8. '#' → logprob: -21.0
    9. '```' → logprob: -21.0
    10. '           ' → logprob: -21.125

Token 537: ' ajoute' (ID: 91611)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0002453662164043635
    2. 'queue' → logprob: -9.125245094299316
    3. '.append' → logprob: -9.125245094299316
    4. '.enqueue' → logprob: -11.750245094299316
    5. 'q' → logprob: -12.375245094299316
    6. 'ques' → logprob: -13.000245094299316
    7. ' que' → logprob: -13.125245094299316
    8. '.' → logprob: -13.500245094299316
    9. 'qu' → logprob: -13.625245094299316
    10. 'quel' → logprob: -13.875245094299316

Token 538: ' ce' (ID: 2357)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.629921436891891e-05
    2. 'nv' → logprob: -11.25002670288086
    3. ' nv' → logprob: -11.62502670288086
    4. 'n' → logprob: -12.87502670288086
    5. '(' → logprob: -13.75002670288086
    6. '_nv' → logprob: -15.12502670288086
    7. '	n' → logprob: -15.62502670288086
    8. '(nx' → logprob: -16.25002670288086
    9. ' (' → logprob: -17.50002670288086
    10. 'queue' → logprob: -17.87502670288086

Token 539: ' voisin' (ID: 145411)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.03871558979153633
    2. 'v' → logprob: -4.288715362548828
    3. ' nv' → logprob: -4.288715362548828
    4. 'n' → logprob: -4.913715362548828
    5. '[n' → logprob: -6.413715362548828
    6. '_nv' → logprob: -7.913715362548828
    7. '[v' → logprob: -8.038715362548828
    8. 'vq' → logprob: -8.663715362548828
    9. 'w' → logprob: -8.913715362548828
    10. 'que' → logprob: -9.163715362548828

Token 540: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09037116914987564
    2. 'to' → logprob: -2.5903711318969727
    3. ')' → logprob: -4.965371131896973
    4. '<|end|>' → logprob: -5.715371131896973
    5. '               ' → logprob: -8.090371131896973
    6. ' à' → logprob: -8.590371131896973
    7. '(n' → logprob: -9.090371131896973
    8. '```' → logprob: -9.465371131896973
    9. ',' → logprob: -9.715371131896973
    10. '                   ' → logprob: -9.965371131896973

Token 541: ' la' (ID: 557)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.25529158115386963
    2. ' que' → logprob: -1.5052915811538696
    3. ' la' → logprob: -5.75529146194458
    4. 'la' → logprob: -9.130291938781738
    5. '```' → logprob: -11.005291938781738
    6. ' the' → logprob: -11.130291938781738
    7. ' ' → logprob: -11.630291938781738
    8. 'queue' → logprob: -12.005291938781738
    9. 'the' → logprob: -12.130291938781738
    10. ' queue' → logprob: -12.130291938781738

Token 542: ' file' (ID: 1974)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.000639169302303344
    2. 'queue' → logprob: -7.500638961791992
    3. 'deque' → logprob: -9.500638961791992
    4. ' que' → logprob: -12.125638961791992
    5. '```' → logprob: -13.500638961791992
    6. 'quel' → logprob: -13.500638961791992
    7. 'queued' → logprob: -14.250638961791992
    8. 'quee' → logprob: -14.375638961791992
    9. 'ques' → logprob: -14.375638961791992
    10. 'qué' → logprob: -15.250638961791992

Token 543: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07034684717655182
    2. 'que' → logprob: -3.4453468322753906
    3. '.append' → logprob: -4.070346832275391
    4. ' que' → logprob: -4.570346832275391
    5. '                   ' → logprob: -5.445346832275391
    6. ')' → logprob: -6.945346832275391
    7. '   ' → logprob: -7.070346832275391
    8. '           ' → logprob: -7.320346832275391
    9. '       ' → logprob: -7.445346832275391
    10. '              ' → logprob: -8.82034683227539

Token 544: ' continuer' (ID: 75597)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.03385292366147041
    2. ' que' → logprob: -4.033853054046631
    3. ' exploration' → logprob: -4.658853054046631
    4. 'la' → logprob: -5.783853054046631
    5. ' la' → logprob: -7.033853054046631
    6. 'le' → logprob: -8.033852577209473
    7. ' processing' → logprob: -8.283852577209473
    8. ' traitement' → logprob: -8.533852577209473
    9. ' ' → logprob: -8.783852577209473
    10. 'processing' → logprob: -9.033852577209473

Token 545: ' le' (ID: 505)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.034694869071245193
    2. 'que' → logprob: -3.4096949100494385
    3. '               ' → logprob: -6.909694671630859
    4. '   ' → logprob: -10.78469467163086
    5. '                   ' → logprob: -11.65969467163086
    6. '```' → logprob: -12.15969467163086
    7. '           ' → logprob: -13.03469467163086
    8. 'queue' → logprob: -13.40969467163086
    9. 'deque' → logprob: -13.40969467163086
    10. ' queue' → logprob: -13.40969467163086

Token 546: ' parcours' (ID: 62625)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.2321692407131195
    2. 'b' → logprob: -2.2321691513061523
    3. 'que' → logprob: -3.3571691513061523
    4. 'B' → logprob: -3.3571691513061523
    5. ' BFS' → logprob: -4.107169151306152
    6. ' parcours' → logprob: -4.982169151306152
    7. ' bfs' → logprob: -5.982169151306152
    8. 'bread' → logprob: -5.982169151306152
    9. ' breadth' → logprob: -8.232169151306152
    10. '```' → logprob: -8.357169151306152

Token 547: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07854104787111282
    2. 'que' → logprob: -3.2035410404205322
    3. ' que' → logprob: -3.4535410404205322
    4. '                
' → logprob: -6.578541278839111
    5. '```' → logprob: -7.328541278839111
    6. '(' → logprob: -7.953541278839111
    7. '                   ' → logprob: -8.203540802001953
    8. '
' → logprob: -8.453540802001953
    9. '              ' → logprob: -9.328540802001953
    10. '           ' → logprob: -9.828540802001953

Token 548: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2652352452278137
    2. ' que' → logprob: -1.890235185623169
    3. 'que' → logprob: -2.515235185623169
    4. '```' → logprob: -7.515235424041748
    5. '                   ' → logprob: -8.26523494720459
    6. '              ' → logprob: -9.51523494720459
    7. '           ' → logprob: -9.76523494720459
    8. '                
' → logprob: -9.76523494720459
    9. '   ' → logprob: -10.26523494720459
    10. '``' → logprob: -11.01523494720459

Token 549: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -2.165027217415627e-05
    2. ' que' → logprob: -10.750021934509277
    3. 'queue' → logprob: -16.75002098083496
    4. '               ' → logprob: -16.75002098083496
    5. 'deque' → logprob: -17.12502098083496
    6. '   ' → logprob: -17.75002098083496
    7. '```' → logprob: -18.37502098083496
    8. '       ' → logprob: -19.25002098083496
    9. 'qu' → logprob: -19.37502098083496
    10. '           ' → logprob: -19.87502098083496

Token 550: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.250001907348633
    3. '.extend' → logprob: -14.375001907348633
    4. '.enqueue' → logprob: -16.250001907348633
    5. '.add' → logprob: -17.125001907348633
    6. ').' → logprob: -17.250001907348633
    7. 'append' → logprob: -17.375001907348633
    8. '.app' → logprob: -18.000001907348633
    9. '.put' → logprob: -18.250001907348633
    10. '.Append' → logprob: -18.750001907348633

Token 551: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. '(nx' → logprob: -16.125001907348633
    4. '(
' → logprob: -17.375001907348633
    5. '(nd' → logprob: -17.500001907348633
    6. '((' → logprob: -18.250001907348633
    7. '(nb' → logprob: -18.375001907348633
    8. ' (' → logprob: -18.500001907348633
    9. '(nn' → logprob: -19.000001907348633
    10. '(nt' → logprob: -19.250001907348633

Token 552: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00016837897419463843
    2. 'nv' → logprob: -8.750168800354004
    3. ' nv' → logprob: -11.625168800354004
    4. '_nv' → logprob: -15.125168800354004
    5. 'av' → logprob: -15.375168800354004
    6. 'w' → logprob: -16.000167846679688
    7. ')' → logprob: -16.500167846679688
    8. 'sv' → logprob: -17.000167846679688
    9. '   ' → logprob: -17.000167846679688
    10. 'n' → logprob: -17.000167846679688

Token 553: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ']' → logprob: -16.750001907348633
    5. ' )' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '）' → logprob: -17.375001907348633
    8. '])' → logprob: -17.625001907348633
    9. ')v' → logprob: -18.000001907348633
    10. ')]' → logprob: -18.250001907348633

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030119342263787985
    2. 'print' → logprob: -6.128011703491211
    3. '```' → logprob: -7.253011703491211
    4. '
' → logprob: -9.503011703491211
    5. '    
' → logprob: -10.378011703491211
    6. ' print' → logprob: -11.628011703491211
    7. '<|end|>' → logprob: -13.753011703491211
    8. '``' → logprob: -13.753011703491211
    9. '	print' → logprob: -14.128011703491211
    10. 'return' → logprob: -15.753011703491211

Token 555: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0492706298828125
    2. 'print' → logprob: -3.0492706298828125
    3. '```' → logprob: -7.5492706298828125
    4. '
' → logprob: -9.049270629882812
    5. ' print' → logprob: -10.299270629882812
    6. '	print' → logprob: -12.924270629882812
    7. '    
' → logprob: -13.049270629882812
    8. '``' → logprob: -14.424270629882812
    9. '       ' → logprob: -16.799270629882812
    10. '#print' → logprob: -17.549270629882812

Token 556: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.607391408877447e-05
    2. '   ' → logprob: -10.250036239624023
    3. ' print' → logprob: -14.250036239624023
    4. '```' → logprob: -16.250036239624023
    5. '	print' → logprob: -20.250036239624023
    6. '
' → logprob: -20.250036239624023
    7. '#print' → logprob: -21.875036239624023
    8. '#' → logprob: -22.250036239624023
    9. '``' → logprob: -22.375036239624023
    10. '    
' → logprob: -23.750036239624023

Token 557: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0415857695043087
    2. 'iche' → logprob: -3.791585683822632
    3. 'ich' → logprob: -4.291585922241211
    4. '#' → logprob: -6.666585922241211
    5. 'ichage' → logprob: -6.666585922241211
    6. 'print' → logprob: -6.791585922241211
    7. '   ' → logprob: -7.541585922241211
    8. 'ic' → logprob: -9.166585922241211
    9. 'cher' → logprob: -9.541585922241211
    10. 'f' → logprob: -10.666585922241211

Token 558: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004151649307459593
    2. 'print' → logprob: -5.504151821136475
    3. ' print' → logprob: -10.004151344299316
    4. '```' → logprob: -10.504151344299316
    5. '
' → logprob: -15.254151344299316
    6. '	print' → logprob: -15.504151344299316
    7. '``' → logprob: -16.129152297973633
    8. '       ' → logprob: -17.004152297973633
    9. '(' → logprob: -17.379152297973633
    10. '    
' → logprob: -17.504152297973633

Token 559: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6932502388954163
    2. '(S' → logprob: -0.6932502388954163
    3. 'print' → logprob: -9.81825065612793
    4. '   ' → logprob: -10.31825065612793
    5. '(' → logprob: -11.31825065612793
    6. ' S' → logprob: -13.19325065612793
    7. 's' → logprob: -14.94325065612793
    8. ' ' → logprob: -14.94325065612793
    9. '(s' → logprob: -15.94325065612793
    10. '	S' → logprob: -16.06825065612793

Token 560: ' somme' (ID: 64484)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0033592702820897102
    2. 'print' → logprob: -5.753359317779541
    3. '(S' → logprob: -8.628358840942383
    4. 's' → logprob: -14.003358840942383
    5. ' S' → logprob: -14.128358840942383
    6. '   ' → logprob: -14.378358840942383
    7. '(' → logprob: -15.628358840942383
    8. ' print' → logprob: -16.503358840942383
    9. ' ' → logprob: -17.128358840942383
    10. 'r' → logprob: -17.128358840942383

Token 561: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0486091673374176
    2. 'print' → logprob: -3.0486092567443848
    3. ' print' → logprob: -11.298608779907227
    4. '```' → logprob: -11.798608779907227
    5. '
' → logprob: -13.548608779907227
    6. '	print' → logprob: -15.298608779907227
    7. '       ' → logprob: -16.298608779907227
    8. '    
' → logprob: -16.548608779907227
    9. '``' → logprob: -16.923608779907227
    10. '`' → logprob: -17.423608779907227

Token 562: ' valeurs' (ID: 73668)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.203653946518898
    2. 'val' → logprob: -1.7036539316177368
    3. '(S' → logprob: -7.453653812408447
    4. 'ans' → logprob: -7.828653812408447
    5. ' S' → logprob: -7.828653812408447
    6. 'values' → logprob: -8.078654289245605
    7. 'vals' → logprob: -8.203654289245605
    8. ' valeurs' → logprob: -9.328654289245605
    9. 'valu' → logprob: -10.328654289245605
    10. '(ans' → logprob: -10.453654289245605

Token 563: ' attrib' (ID: 72186)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006717386189848185
    2. 'print' → logprob: -5.006717205047607
    3. ' print' → logprob: -13.256717681884766
    4. '```' → logprob: -15.631717681884766
    5. '	print' → logprob: -16.506717681884766
    6. '       ' → logprob: -16.881717681884766
    7. '(print' → logprob: -18.256717681884766
    8. '(' → logprob: -18.631717681884766
    9. '  ' → logprob: -20.006717681884766
    10. '
' → logprob: -20.131717681884766

Token 564: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002695608709473163
    2. 'uée' → logprob: -8.500269889831543
    3. '   ' → logprob: -10.750269889831543
    4. 'ées' → logprob: -11.250269889831543
    5. 'ue' → logprob: -11.500269889831543
    6. 'ues' → logprob: -11.625269889831543
    7. 'ué' → logprob: -12.250269889831543
    8. '[u' → logprob: -12.750269889831543
    9. ' u' → logprob: -13.500269889831543
    10. '```' → logprob: -14.125269889831543

Token 565: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0034655947238206863
    2. 'es' → logprob: -5.75346565246582
    3. 'és' → logprob: -8.37846565246582
    4. 'é' → logprob: -10.50346565246582
    5. 'ees' → logprob: -10.75346565246582
    6. 'ée' → logprob: -11.87846565246582
    7. '   ' → logprob: -14.25346565246582
    8. '```' → logprob: -14.25346565246582
    9. 'e' → logprob: -15.00346565246582
    10. '#' → logprob: -15.25346565246582

Token 566: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6422137022018433
    2. '   ' → logprob: -1.0172137022018433
    3. '(' → logprob: -2.642213821411133
    4. '(print' → logprob: -3.392213821411133
    5. '()' → logprob: -5.517213821411133
    6. '(S' → logprob: -6.642213821411133
    7. '()
' → logprob: -6.892213821411133
    8. ' print' → logprob: -7.267213821411133
    9. '```' → logprob: -8.517213821411133
    10. '(
' → logprob: -9.767213821411133

Token 567: 'hors' (ID: 70144)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14320358633995056
    2. '(S' → logprob: -2.6432034969329834
    3. ')' → logprob: -2.8932034969329834
    4. ')
' → logprob: -5.0182037353515625
    5. ' S' → logprob: -9.643203735351562
    6. '(' → logprob: -9.768203735351562
    7. '   ' → logprob: -9.893203735351562
    8. '{' → logprob: -11.018203735351562
    9. ',S' → logprob: -11.143203735351562
    10. ',' → logprob: -11.143203735351562

Token 568: ' sommet' (ID: 130502)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6785660982131958
    2. '0' → logprob: -1.6785660982131958
    3. 'ans' → logprob: -1.8035660982131958
    4. 'prem' → logprob: -2.3035659790039062
    5. ' le' → logprob: -4.303565979003906
    6. 'som' → logprob: -4.428565979003906
    7. ' ' → logprob: -5.428565979003906
    8. ' ans' → logprob: -5.678565979003906
    9. 's' → logprob: -6.178565979003906
    10. ' sommet' → logprob: -6.303565979003906

Token 569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004761783871799707
    2. ' ' → logprob: -5.379761695861816
    3. ')' → logprob: -9.754761695861816
    4. '[' → logprob: -9.879761695861816
    5. '1' → logprob: -10.629761695861816
    6. '(' → logprob: -13.004761695861816
    7. '```' → logprob: -13.254761695861816
    8. '   ' → logprob: -13.754761695861816
    9. '`' → logprob: -14.504761695861816
    10. ',' → logprob: -14.754761695861816

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.375049591064453
    3. ' ' → logprob: -11.125049591064453
    4. ')' → logprob: -12.625049591064453
    5. '```' → logprob: -16.000049591064453
    6. '(' → logprob: -16.500049591064453
    7. ',' → logprob: -16.625049591064453
    8. '=' → logprob: -16.750049591064453
    9. '   ' → logprob: -17.000049591064453
    10. '#' → logprob: -17.375049591064453

Token 571: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004484000615775585
    2. ')' → logprob: -5.504484176635742
    3. '   ' → logprob: -8.129484176635742
    4. 'print' → logprob: -9.754484176635742
    5. ')
' → logprob: -9.879484176635742
    6. ' )
' → logprob: -14.129484176635742
    7. '()
' → logprob: -15.629484176635742
    8. '())
' → logprob: -15.754484176635742
    9. ' print' → logprob: -15.754484176635742
    10. ',' → logprob: -15.879484176635742

Token 572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20147815346717834
    2. 'print' → logprob: -1.701478123664856
    3. '```' → logprob: -9.701478004455566
    4. ' print' → logprob: -12.576478004455566
    5. '	print' → logprob: -15.826478004455566
    6. '``' → logprob: -16.451478958129883
    7. '       ' → logprob: -17.201478958129883
    8. '`' → logprob: -17.826478958129883
    9. '
' → logprob: -18.701478958129883
    10. '#print' → logprob: -18.951478958129883

Token 573: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009211080614477396
    2. '   ' → logprob: -7.000921249389648
    3. ' print' → logprob: -12.250921249389648
    4. '```' → logprob: -12.250921249389648
    5. '	print' → logprob: -18.00092124938965
    6. '``' → logprob: -19.62592124938965
    7. '
' → logprob: -20.37592124938965
    8. '`' → logprob: -21.25092124938965
    9. '#print' → logprob: -21.62592124938965
    10. 'println' → logprob: -22.25092124938965

Token 574: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.008647071197628975
    2. '(' → logprob: -4.7586469650268555
    3. '('' → logprob: -10.883646965026855
    4. '("' → logprob: -11.633646965026855
    5. '(s' → logprob: -13.383646965026855
    6. '()' → logprob: -13.758646965026855
    7. '(f' → logprob: -13.883646965026855
    8. '(F' → logprob: -14.633646965026855
    9. '(
' → logprob: -15.008646965026855
    10. ' (' → logprob: -15.008646965026855

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06199177727103233
    2. ')
' → logprob: -2.8119916915893555
    3. ')
' → logprob: -11.311991691589355
    4. ',' → logprob: -11.561991691589355
    5. ' )' → logprob: -14.186991691589355
    6. ')

' → logprob: -14.686991691589355
    7. '),' → logprob: -15.061991691589355
    8. '   ' → logprob: -15.186991691589355
    9. ' )
' → logprob: -15.811991691589355
    10. ')`' → logprob: -15.811991691589355

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006791155785322189
    2. 'print' → logprob: -5.006791114807129
    3. '```' → logprob: -9.506791114807129
    4. ' print' → logprob: -14.131791114807129
    5. '    
' → logprob: -15.131791114807129
    6. '``' → logprob: -15.631791114807129
    7. '	print' → logprob: -16.131792068481445
    8. '       ' → logprob: -16.256792068481445
    9. '
' → logprob: -17.006792068481445
    10. '(print' → logprob: -17.756792068481445

Token 577: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014169743284583092
    2. '   ' → logprob: -4.264169692993164
    3. ' print' → logprob: -12.014169692993164
    4. '	print' → logprob: -16.264169692993164
    5. '```' → logprob: -17.264169692993164
    6. '(print' → logprob: -18.389169692993164
    7. '#print' → logprob: -18.889169692993164
    8. '    
' → logprob: -20.139169692993164
    9. '       ' → logprob: -20.639169692993164
    10. 'for' → logprob: -21.139169692993164

Token 578: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.869639476761222e-05
    2. ' print' → logprob: -10.750039100646973
    3. '   ' → logprob: -11.000039100646973
    4. '#' → logprob: -14.750039100646973
    5. 'for' → logprob: -17.000038146972656
    6. '#print' → logprob: -17.500038146972656
    7. 'return' → logprob: -17.875038146972656
    8. '	print' → logprob: -20.875038146972656
    9. '  ' → logprob: -21.500038146972656
    10. ' ' → logprob: -21.750038146972656

Token 579: 'ichage' (ID: 118475)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2350445985794067
    2. 'ull' → logprob: -1.3600445985794067
    3. 'print' → logprob: -1.3600445985794067
    4. 'ic' → logprob: -3.610044479370117
    5. 'och' → logprob: -3.985044479370117
    6. 'ans' → logprob: -4.235044479370117
    7. 'ist' → logprob: -4.485044479370117
    8. 's' → logprob: -4.485044479370117
    9. 'or' → logprob: -4.610044479370117
    10. '#' → logprob: -4.735044479370117

Token 580: ' de' (ID: 334)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.04928617551922798
    2. '('' → logprob: -3.924286127090454
    3. '(' → logprob: -4.174286365509033
    4. '("' → logprob: -5.049286365509033
    5. '(ans' → logprob: -5.049286365509033
    6. '(*)' → logprob: -10.174285888671875
    7. '(*(' → logprob: -10.299285888671875
    8. '()' → logprob: -11.174285888671875
    9. '(tuple' → logprob: -11.549285888671875
    10. '("("' → logprob: -11.799285888671875

Token 581: ' la' (ID: 557)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.03140200302004814
    2. '('' → logprob: -3.781402111053467
    3. '("' → logprob: -5.031402111053467
    4. ''' → logprob: -7.281402111053467
    5. '"' → logprob: -7.531402111053467
    6. '*' → logprob: -8.156401634216309
    7. '(' → logprob: -9.656401634216309
    8. 'ans' → logprob: -11.406401634216309
    9. '(ans' → logprob: -12.031401634216309
    10. ' (*' → logprob: -14.656401634216309

Token 582: ' ré' (ID: 3146)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9928895235061646
    2. ''' → logprob: -0.9928895235061646
    3. '*' → logprob: -1.3678895235061646
    4. '(*' → logprob: -5.992889404296875
    5. 'ans' → logprob: -6.367889404296875
    6. ''s' → logprob: -10.367889404296875
    7. ' *' → logprob: -10.992889404296875
    8. '*a' → logprob: -11.117889404296875
    9. '('' → logprob: -11.742889404296875
    10. ''a' → logprob: -11.992889404296875

Token 583: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.00832555815577507
    2. 'ponse' → logprob: -5.383325576782227
    3. 's' → logprob: -6.133325576782227
    4. 'part' → logprob: -7.008325576782227
    5. 'sum' → logprob: -7.883325576782227
    6. 'solution' → logprob: -8.883325576782227
    7. 'p' → logprob: -10.258325576782227
    8. 'cup' → logprob: -11.133325576782227
    9. 'union' → logprob: -12.008325576782227
    10. 'pertoire' → logprob: -12.383325576782227

Token 584: ' finale' (ID: 37759)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.032880399376153946
    2. '('' → logprob: -4.0328803062438965
    3. '("' → logprob: -4.9078803062438965
    4. '(ans' → logprob: -5.1578803062438965
    5. '(' → logprob: -6.5328803062438965
    6. '(*)' → logprob: -10.782880783081055
    7. '(*(' → logprob: -13.157880783081055
    8. 'ans' → logprob: -13.782880783081055
    9. '()' → logprob: -14.407880783081055
    10. ' (*' → logprob: -15.532880783081055

Token 585: ' des' (ID: 731)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0038036382757127285
    2. '('' → logprob: -5.753803730010986
    3. '("' → logprob: -8.128803253173828
    4. '(' → logprob: -8.128803253173828
    5. '()' → logprob: -11.128803253173828
    6. '(ans' → logprob: -11.253803253173828
    7. '(*)' → logprob: -12.503803253173828
    8. 'print' → logprob: -13.003803253173828
    9. '(*(' → logprob: -14.003803253173828
    10. '(print' → logprob: -14.878803253173828

Token 586: ' valeurs' (ID: 73668)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018077453132718801
    2. ' ans' → logprob: -6.751807689666748
    3. 'val' → logprob: -7.376807689666748
    4. 'values' → logprob: -12.126808166503906
    5. 'vals' → logprob: -12.501808166503906
    6. '(ans' → logprob: -13.501808166503906
    7. ' valeurs' → logprob: -14.001808166503906
    8. 'answers' → logprob: -15.376808166503906
    9. ' val' → logprob: -16.251808166503906
    10. '	ans' → logprob: -16.501808166503906

Token 587: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06227026879787445
    2. '   ' → logprob: -2.812270164489746
    3. ' print' → logprob: -8.312270164489746
    4. ',' → logprob: -10.312270164489746
    5. 'for' → logprob: -11.937270164489746
    6. '
' → logprob: -12.062270164489746
    7. '(print' → logprob: -12.437270164489746
    8. '('' → logprob: -12.812270164489746
    9. '(*' → logprob: -13.312270164489746
    10. '*' → logprob: -14.562270164489746

Token 588: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01486679632216692
    2. ' ans' → logprob: -4.264866828918457
    3. '(ans' → logprob: -7.264866828918457
    4. 'la' → logprob: -14.139866828918457
    5. 'range' → logprob: -14.264866828918457
    6. '	ans' → logprob: -14.389866828918457
    7. '   ' → logprob: -14.514866828918457
    8. '_ans' → logprob: -14.639866828918457
    9. ' ' → logprob: -15.764866828918457
    10. ' la' → logprob: -16.76486587524414

Token 589: ' somm' (ID: 44830)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011732018319889903
    2. ' ans' → logprob: -6.75117301940918
    3. '(ans' → logprob: -13.12617301940918
    4. 's' → logprob: -15.50117301940918
    5. '	ans' → logprob: -15.75117301940918
    6. 'answer' → logprob: -16.37617301940918
    7. '_ans' → logprob: -16.50117301940918
    8. 'esp' → logprob: -16.75117301940918
    9. 'range' → logprob: -16.75117301940918
    10. 'print' → logprob: -17.00117301940918

Token 590: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -7.791440293658525e-05
    2. 'et' → logprob: -10.000078201293945
    3. 'es' → logprob: -10.875078201293945
    4. 'ats' → logprob: -12.250078201293945
    5. 'êts' → logprob: -13.000078201293945
    6. 'e' → logprob: -13.125078201293945
    7. 'ents' → logprob: -13.375078201293945
    8. 'è' → logprob: -14.625078201293945
    9. 'ètes' → logprob: -15.250078201293945
    10. 'mets' → logprob: -15.250078201293945

Token 591: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07900754362344742
    2. '   ' → logprob: -2.579007625579834
    3. ' print' → logprob: -9.079007148742676
    4. '```' → logprob: -13.954007148742676
    5. '(print' → logprob: -14.079007148742676
    6. '	print' → logprob: -14.204007148742676
    7. '
' → logprob: -14.954007148742676
    8. '()
' → logprob: -15.204007148742676
    9. '()' → logprob: -15.579007148742676
    10. '    
' → logprob: -15.704007148742676

Token 592: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0069177220575511456
    2. '   ' → logprob: -5.006917953491211
    3. ' print' → logprob: -8.506917953491211
    4. '	print' → logprob: -16.25691795349121
    5. '```' → logprob: -16.50691795349121
    6. '(print' → logprob: -18.00691795349121
    7. 'for' → logprob: -18.13191795349121
    8. '#print' → logprob: -18.50691795349121
    9. '
' → logprob: -18.88191795349121
    10. '`' → logprob: -19.75691795349121

Token 593: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. 'for' → logprob: -22.875
    5. '```' → logprob: -24.625
    6. ''' → logprob: -24.875
    7. '	print' → logprob: -25.0
    8. '#print' → logprob: -25.625
    9. ' ' → logprob: -25.875
    10. 'printf' → logprob: -25.875

Token 594: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0029923205729573965
    2. '('' → logprob: -6.002992153167725
    3. '(ans' → logprob: -8.252992630004883
    4. '("' → logprob: -8.377992630004883
    5. '(' → logprob: -10.627992630004883
    6. '(*)' → logprob: -13.502992630004883
    7. '(*(' → logprob: -14.752992630004883
    8. ' (*' → logprob: -16.127992630004883
    9. '(tuple' → logprob: -17.002992630004883
    10. '((*' → logprob: -17.377992630004883

Token 595: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. '(ans' → logprob: -16.125
    3. ' ans' → logprob: -16.25
    4. '	ans' → logprob: -21.25
    5. '   ' → logprob: -22.25
    6. 'ANS' → logprob: -23.125
    7. 'ann' → logprob: -23.25
    8. 'a' → logprob: -23.625
    9. 'answer' → logprob: -23.875
    10. '[' → logprob: -24.0

Token 596: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -17.75
    5. ')`' → logprob: -18.5
    6. ')}' → logprob: -19.125
    7. '),' → logprob: -19.25
    8. '   ' → logprob: -19.625
    9. ')#' → logprob: -19.625
    10. '}' → logprob: -20.375

Token 597: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25199615955352783
    2. 'if' → logprob: -1.5019961595535278
    3. '(main' → logprob: -10.501996040344238
    4. '#' → logprob: -11.126996040344238
    5. '```' → logprob: -11.251996040344238
    6. ' main' → logprob: -12.126996040344238
    7. ' if' → logprob: -12.876996040344238
    8. 'print' → logprob: -13.876996040344238
    9. '<|end|>' → logprob: -14.251996040344238
    10. 'return' → logprob: -14.501996040344238

Token 598: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014184780418872833
    2. '__' → logprob: -4.264184951782227
    3. '_' → logprob: -11.264184951782227
    4. ' ' → logprob: -12.264184951782227
    5. '_name' → logprob: -13.264184951782227
    6. '___' → logprob: -14.514184951782227
    7. ' _' → logprob: -14.889184951782227
    8. ' ' → logprob: -15.014184951782227
    9. 'name' → logprob: -15.389184951782227
    10. ' ___' → logprob: -15.639184951782227

Token 599: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.050114769488573074
    2. ' ==' → logprob: -3.550114870071411
    3. ' __' → logprob: -4.925114631652832
    4. '==' → logprob: -5.300114631652832
    5. '.__' → logprob: -6.425114631652832
    6. 'name' → logprob: -6.425114631652832
    7. '__.' → logprob: -6.675114631652832
    8. '__.__' → logprob: -6.675114631652832
    9. '[' → logprob: -7.925114631652832
    10. '.name' → logprob: -8.175114631652832

Token 600: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5776860184123507e-06
    2. '==' → logprob: -13.37500286102295
    3. '__.__' → logprob: -14.62500286102295
    4. ' ==' → logprob: -15.37500286102295
    5. '___' → logprob: -16.375001907348633
    6. '__.' → logprob: -17.000001907348633
    7. '____' → logprob: -17.125001907348633
    8. '__('' → logprob: -17.750001907348633
    9. '=="' → logprob: -18.250001907348633
    10. ' __' → logprob: -18.250001907348633

Token 601: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.025650765746831894
    2. '==' → logprob: -3.7756507396698
    3. ' ==' → logprob: -6.400650978088379
    4. '=="' → logprob: -7.275650978088379
    5. '=='' → logprob: -11.150650978088379
    6. '__.__' → logprob: -11.400650978088379
    7. '___' → logprob: -12.275650978088379
    8. '__("' → logprob: -12.400650978088379
    9. '__('' → logprob: -12.650650978088379
    10. '__["' → logprob: -12.775650978088379

Token 602: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024859998375177383
    2. ''' → logprob: -6.002486228942871
    3. '__' → logprob: -11.752486228942871
    4. ' "__' → logprob: -13.002486228942871
    5. '"name' → logprob: -16.002485275268555
    6. '"user' → logprob: -17.252485275268555
    7. ' '__' → logprob: -18.127485275268555
    8. '("__' → logprob: -18.252485275268555
    9. '"class' → logprob: -18.377485275268555
    10. '   ' → logprob: -18.752485275268555

Token 603: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0031918513122946024
    2. '__' → logprob: -5.753191947937012
    3. '"' → logprob: -11.628191947937012
    4. 'name' → logprob: -12.378191947937012
    5. '_main' → logprob: -14.253191947937012
    6. ' main' → logprob: -16.253190994262695
    7. 'built' → logprob: -16.503190994262695
    8. ''' → logprob: -16.878190994262695
    9. '___' → logprob: -17.253190994262695
    10. ' "__' → logprob: -17.378190994262695

Token 604: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06217651069164276
    2. '__' → logprob: -2.812176465988159
    3. '__':
' → logprob: -8.562176704406738
    4. '__.' → logprob: -11.437176704406738
    5. '__["' → logprob: -12.312176704406738
    6. '__.__' → logprob: -13.437176704406738
    7. '__("' → logprob: -15.062176704406738
    8. '__",' → logprob: -15.437176704406738
    9. '__:' → logprob: -15.812176704406738
    10. '__[' → logprob: -16.437175750732422

Token 605: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0010446012020111084
    2. ' main' → logprob: -6.876044750213623
    3. '	main' → logprob: -11.876044273376465
    4. '_main' → logprob: -12.876044273376465
    5. '   ' → logprob: -13.501044273376465
    6. '__' → logprob: -14.126044273376465
    7. '(main' → logprob: -16.25104522705078
    8. 'Main' → logprob: -17.00104522705078
    9. '.main' → logprob: -17.37604522705078
    10. ' ' → logprob: -18.37604522705078

Token 606: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -23.125
    5. '_main' → logprob: -23.375
    6. '(main' → logprob: -24.75
    7. '.main' → logprob: -24.875
    8. 'Main' → logprob: -26.0
    9. 'import' → logprob: -28.375
    10. '/main' → logprob: -29.625

Token 607: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 605
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 209
Tokens correctement prédits (top 10): 405
Précision stricte (1ère position): 32.56%
Précision adaptée (1ère position): 34.55%
Précision (top 10): 66.94%
================================================================================
