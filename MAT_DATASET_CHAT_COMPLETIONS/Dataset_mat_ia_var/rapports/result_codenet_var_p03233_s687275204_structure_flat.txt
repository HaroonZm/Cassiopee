================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ab = [list(map(int, input().split())) for _ in range(n)]
aball = []
for i in range(n):
    aball.append((ab[i][0], i + 1, 'a'))
for i in range(n):
    aball.append((ab[i][1], i + 1, 'b'))
aball.sort()
ans1 = 0
for i in range(n):
    ans1 += aball[i][0]
hen = aball[n][0]
hen2 = aball[n + 1][0]
d = set()
t = None
hantei = True
for i in range(n):
    val, c, mab = aball[i]
    if t is not None and t != mab:
        hantei = False
    if c in d:
        print(ans1)
        exit()
    d.add(c)
    t = mab
if hantei:
    print(ans1)
    exit()
ans2 = []
for i in range(n):
    val, c, aorb = aball[i]
    if aball[n][1] != c:
        ans2.append(ans1 - val + hen)
    else:
        ans2.append(ans1 - val + hen2)
print(min(ans2))
exit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043019242002628744
    2. ''' → logprob: -8.6254301071167
    3. '('' → logprob: -9.3754301071167
    4. '(n' → logprob: -9.8754301071167
    5. '```' → logprob: -10.3754301071167
    6. '`' → logprob: -10.7504301071167
    7. '(
' → logprob: -11.0004301071167
    8. '("("' → logprob: -11.1254301071167
    9. ')' → logprob: -11.7504301071167
    10. '()' → logprob: -12.2504301071167

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'ab' (ID: 378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15125510096549988
    2. ' =' → logprob: -3.5262551307678223
    3. '=' → logprob: -3.6512551307678223
    4. '+' → logprob: -3.6512551307678223
    5. ')' → logprob: -3.9012551307678223
    6. 's' → logprob: -4.026255130767822
    7. 'c' → logprob: -5.401255130767822
    8. '[]' → logprob: -6.151255130767822
    9. '[i' → logprob: -6.151255130767822
    10. 'a' → logprob: -6.276255130767822

Token 7: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8860732913017273
    2. 'input' → logprob: -1.011073350906372
    3. ' list' → logprob: -2.011073350906372
    4. 'list' → logprob: -3.261073350906372
    5. ' []' → logprob: -3.886073350906372
    6. '[]' → logprob: -4.136073112487793
    7. '[input' → logprob: -5.011073112487793
    8. ' [' → logprob: -5.261073112487793
    9. ' ab' → logprob: -6.761073112487793
    10. '[' → logprob: -6.761073112487793

Token 8: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3595723509788513
    2. 'int' → logprob: -1.359572410583496
    3. 'tuple' → logprob: -3.359572410583496
    4. 'input' → logprob: -5.234572410583496
    5. 'map' → logprob: -6.484572410583496
    6. ' list' → logprob: -6.984572410583496
    7. '0' → logprob: -7.359572410583496
    8. '[int' → logprob: -7.484572410583496
    9. '(int' → logprob: -7.609572410583496
    10. '[]' → logprob: -8.234572410583496

Token 9: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0050958301872015
    2. '(' → logprob: -5.880095958709717
    3. '(input' → logprob: -6.130095958709717
    4. '(int' → logprob: -9.505095481872559
    5. '(range' → logprob: -11.130095481872559
    6. '(eval' → logprob: -11.505095481872559
    7. '()' → logprob: -11.880095481872559
    8. ' map' → logprob: -13.380095481872559
    9. 'map' → logprob: -13.630095481872559
    10. '()]' → logprob: -15.005095481872559

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001252134912647307
    2. 'int' → logprob: -7.126252174377441
    3. '(str' → logprob: -8.501252174377441
    4. '(' → logprob: -9.001252174377441
    5. '<int' → logprob: -10.376252174377441
    6. '(input' → logprob: -10.626252174377441
    7. '=int' → logprob: -11.001252174377441
    8. 'str' → logprob: -11.126252174377441
    9. '```' → logprob: -11.376252174377441
    10. ',int' → logprob: -11.751252174377441

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005465809255838394
    2. ',input' → logprob: -5.505465984344482
    3. '(' → logprob: -7.255465984344482
    4. ')' → logprob: -8.380465507507324
    5. ',' → logprob: -8.755465507507324
    6. 'input' → logprob: -8.755465507507324
    7. '=input' → logprob: -9.255465507507324
    8. ' input' → logprob: -11.755465507507324
    9. '))' → logprob: -11.755465507507324
    10. '<|end|>' → logprob: -12.630465507507324

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0486309714615345
    2. ' input' → logprob: -3.048630952835083
    3. '(input' → logprob: -10.673630714416504
    4. ')' → logprob: -11.048630714416504
    5. ',input' → logprob: -12.798630714416504
    6. '=input' → logprob: -14.423630714416504
    7. ' ' → logprob: -15.048630714416504
    8. '))' → logprob: -15.423630714416504
    9. '	input' → logprob: -15.548630714416504
    10. '<input' → logprob: -15.548630714416504

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010185176506638527
    2. '()))' → logprob: -7.376018524169922
    3. '())' → logprob: -8.376018524169922
    4. '()' → logprob: -8.876018524169922
    5. ')' → logprob: -11.376018524169922
    6. '))' → logprob: -12.251018524169922
    7. '()));' → logprob: -13.001018524169922
    8. '())))' → logprob: -13.626018524169922
    9. '(' → logprob: -14.501018524169922
    10. ' ().' → logprob: -14.876018524169922

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011248346709180623
    2. 'strip' → logprob: -9.250112533569336
    3. 'rstrip' → logprob: -11.250112533569336
    4. ' split' → logprob: -13.250112533569336
    5. '(split' → logprob: -13.625112533569336
    6. ')' → logprob: -15.500112533569336
    7. 'spl' → logprob: -16.500112533569336
    8. 'read' → logprob: -17.875112533569336
    9. '.split' → logprob: -17.875112533569336
    10. ' ' → logprob: -18.125112533569336

Token 15: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007064154837280512
    2. '())' → logprob: -5.632064342498779
    3. '('' → logprob: -5.882064342498779
    4. '()' → logprob: -8.007063865661621
    5. '))' → logprob: -8.507063865661621
    6. '(' → logprob: -9.757063865661621
    7. '())))' → logprob: -10.757063865661621
    8. '()))
' → logprob: -11.007063865661621
    9. '("' → logprob: -11.257063865661621
    10. '()));' → logprob: -12.007063865661621

Token 16: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.45171675086021423
    2. '())' → logprob: -1.9517167806625366
    3. ')' → logprob: -2.701716661453247
    4. '()' → logprob: -2.826716661453247
    5. ')]' → logprob: -3.076716661453247
    6. ']' → logprob: -3.701716661453247
    7. '(n' → logprob: -4.326716899871826
    8. '(' → logprob: -4.951716899871826
    9. 'for' → logprob: -6.076716899871826
    10. '])' → logprob: -7.576716899871826

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11064312607049942
    2. '_' → logprob: -2.985643148422241
    3. '(' → logprob: -3.610643148422241
    4. ' ' → logprob: -4.485642910003662
    5. '(range' → logprob: -4.735642910003662
    6. ' _' → logprob: -5.735642910003662
    7. 'range' → logprob: -5.985642910003662
    8. ' i' → logprob: -7.110642910003662
    9. '_range' → logprob: -8.73564338684082
    10. '	range' → logprob: -8.86064338684082

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02534547820687294
    2. 'in' → logprob: -3.77534556388855
    3. 'range' → logprob: -6.275345325469971
    4. ' range' → logprob: -9.025345802307129
    5. 'n' → logprob: -10.025345802307129
    6. ' ' → logprob: -10.775345802307129
    7. ' i' → logprob: -11.400345802307129
    8. 'import' → logprob: -12.525345802307129
    9. 'i' → logprob: -12.900345802307129
    10. ' n' → logprob: -13.275345802307129

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. '	range' → logprob: -17.40475082397461
    4. ' ' → logprob: -17.77975082397461
    5. '(range' → logprob: -18.27975082397461
    6. '_range' → logprob: -19.15475082397461
    7. '.range' → logprob: -20.27975082397461
    8. 'r' → logprob: -20.40475082397461
    9. 'rang' → logprob: -20.65475082397461
    10. 'n' → logprob: -21.02975082397461

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004079828038811684
    2. '(' → logprob: -5.504079818725586
    3. ' (' → logprob: -14.879079818725586
    4. 'n' → logprob: -15.004079818725586
    5. '(len' → logprob: -15.504079818725586
    6. '(N' → logprob: -15.629079818725586
    7. '(range' → logprob: -15.629079818725586
    8. '(
' → logprob: -16.754079818725586
    9. ' n' → logprob: -17.504079818725586
    10. ')' → logprob: -17.504079818725586

Token 21: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011236425780225545
    2. ')' → logprob: -9.250112533569336
    3. ')])' → logprob: -11.875112533569336
    4. ']' → logprob: -13.000112533569336
    5. '])]' → logprob: -13.000112533569336
    6. '')]' → logprob: -13.500112533569336
    7. '))' → logprob: -13.625112533569336
    8. ')]
' → logprob: -14.250112533569336
    9. '")]' → logprob: -15.125112533569336
    10. '])' → logprob: -15.125112533569336

Token 22: 'ab' (ID: 378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.236898422241211
    2. 'a' → logprob: -1.611898422241211
    3. 'c' → logprob: -1.736898422241211
    4. 'for' → logprob: -2.361898422241211
    5. 'result' → logprob: -3.361898422241211
    6. 'm' → logprob: -3.361898422241211
    7. 'r' → logprob: -3.736898422241211
    8. 'max' → logprob: -3.861898422241211
    9. 'dp' → logprob: -3.861898422241211
    10. 'ans' → logprob: -4.236898422241211

Token 23: 'all' (ID: 586)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6536071300506592
    2. '<|end|>' → logprob: -0.7786071300506592
    3. '<|end|>' → logprob: -5.028607368469238
    4. '```' → logprob: -5.028607368469238
    5. '.' → logprob: -6.278607368469238
    6. '\[' → logprob: -7.028607368469238
    7. '#' → logprob: -7.153607368469238
    8. '\n' → logprob: -7.403607368469238
    9. ')' → logprob: -7.653607368469238
    10. '[
' → logprob: -7.653607368469238

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.309164434671402
    2. '=' → logprob: -2.309164524078369
    3. '.' → logprob: -2.559164524078369
    4. ' =' → logprob: -3.684164524078369
    5. ')' → logprob: -4.434164524078369
    6. '_' → logprob: -4.684164524078369
    7. 's' → logprob: -4.809164524078369
    8. '[:]' → logprob: -5.059164524078369
    9. '.append' → logprob: -5.184164524078369
    10. '[a' → logprob: -5.184164524078369

Token 25: ' []
' (ID: 8911)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -1.067602276802063
    2. '[' → logprob: -1.317602276802063
    3. 'ab' → logprob: -1.442602276802063
    4. ' [' → logprob: -2.4426021575927734
    5. '[]' → logprob: -3.6926021575927734
    6. 'sum' → logprob: -4.067602157592773
    7. ' []' → logprob: -4.317602157592773
    8. ' sum' → logprob: -5.317602157592773
    9. '[a' → logprob: -5.817602157592773
    10. '[i' → logprob: -8.067602157592773

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000835716025903821
    2. ' for' → logprob: -7.12583589553833
    3. 'f' → logprob: -11.250835418701172
    4. 'ab' → logprob: -11.750835418701172
    5. 'fo' → logprob: -12.750835418701172
    6. '+' → logprob: -13.000835418701172
    7. 'a' → logprob: -13.250835418701172
    8. '[' → logprob: -14.500835418701172
    9. ' ' → logprob: -14.500835418701172
    10. '```' → logprob: -15.125835418701172

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02197221852838993
    2. ' ' → logprob: -4.271972179412842
    3. ' _' → logprob: -5.521972179412842
    4. ' a' → logprob: -5.771972179412842
    5. 'i' → logprob: -8.02197265625
    6. '_' → logprob: -8.27197265625
    7. ' x' → logprob: -10.77197265625
    8. 'a' → logprob: -10.89697265625
    9. '  ' → logprob: -11.14697265625
    10. '_i' → logprob: -11.52197265625

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009128682315349579
    2. ' ' → logprob: -5.384128570556641
    3. 'in' → logprob: -5.634128570556641
    4. 'n' → logprob: -7.259128570556641
    5. ' n' → logprob: -8.63412857055664
    6. '  ' → logprob: -11.25912857055664
    7. '	in' → logprob: -11.88412857055664
    8. ',' → logprob: -12.00912857055664
    9. 'range' → logprob: -12.88412857055664
    10. ' i' → logprob: -13.25912857055664

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132758140563965
    2. 'range' → logprob: -1.3132758140563965
    3. ' ab' → logprob: -12.188276290893555
    4. 'ab' → logprob: -12.313276290893555
    5. '	range' → logprob: -13.188276290893555
    6. ' ' → logprob: -13.688276290893555
    7. '_range' → logprob: -14.438276290893555
    8. ' xrange' → logprob: -14.688276290893555
    9. '(range' → logprob: -15.063276290893555
    10. ')' → logprob: -17.063276290893555

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12748382985591888
    2. '(' → logprob: -2.12748384475708
    3. ' (' → logprob: -7.87748384475708
    4. ' n' → logprob: -8.752483367919922
    5. 'n' → logprob: -11.377483367919922
    6. ' ' → logprob: -13.002483367919922
    7. '(len' → logprob: -13.002483367919922
    8. '(
' → logprob: -13.752483367919922
    9. ')' → logprob: -15.252483367919922
    10. '()' → logprob: -15.502483367919922

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006105714710429311
    2. ')' → logprob: -7.7506103515625
    3. ' ):' → logprob: -9.2506103515625
    4. '+' → logprob: -9.7506103515625
    5. '):
' → logprob: -11.2506103515625
    6. ':' → logprob: -11.7506103515625
    7. '-' → logprob: -13.5006103515625
    8. ']:' → logprob: -14.3756103515625
    9. ' ' → logprob: -14.7506103515625
    10. ',' → logprob: -15.2506103515625

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7664749622344971
    2. ' ab' → logprob: -1.266474962234497
    3. 'ab' → logprob: -1.641474962234497
    4. ' ' → logprob: -3.766474962234497
    5. '    ' → logprob: -4.016474723815918
    6. '```' → logprob: -5.516474723815918
    7. '_ab' → logprob: -6.516474723815918
    8. '[' → logprob: -6.641474723815918
    9. ' `' → logprob: -6.766474723815918
    10. '(ab' → logprob: -6.891474723815918

Token 33: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.4472711682319641
    2. 'ab' (adapté à ' ab') → logprob: -1.0722711086273193
    3. '   ' → logprob: -4.072271347045898
    4. 'a' → logprob: -7.447271347045898
    5. ' ' → logprob: -8.697271347045898
    6. ' a' → logprob: -9.322271347045898
    7. ' for' → logprob: -9.634771347045898
    8. 'for' → logprob: -9.884771347045898
    9. 'b' → logprob: -10.447271347045898
    10. 'if' → logprob: -10.509771347045898

Token 34: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3330380320549011
    2. '[i' → logprob: -1.333038091659546
    3. '[' → logprob: -4.208037853240967
    4. '.append' → logprob: -5.708037853240967
    5. '.all' → logprob: -7.708037853240967
    6. '.' → logprob: -8.208038330078125
    7. '[a' → logprob: -9.083038330078125
    8. 'All' → logprob: -9.833038330078125
    9. '_all' → logprob: -10.083038330078125
    10. 'append' → logprob: -10.208038330078125

Token 35: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.17572273313999176
    2. '.append' → logprob: -2.42572283744812
    3. '.' → logprob: -2.67572283744812
    4. ' +=' → logprob: -5.925722599029541
    5. '+=' → logprob: -7.800722599029541
    6. '+' → logprob: -8.0507230758667
    7. ' .' → logprob: -8.4257230758667
    8. 'extend' → logprob: -9.6757230758667
    9. '.ext' → logprob: -10.0507230758667
    10. 'append' → logprob: -10.1757230758667

Token 36: '((' (ID: 2054)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.0010318574495613575
    2. '((' → logprob: -7.251031875610352
    3. '(' → logprob: -8.126031875610352
    4. '(tuple' → logprob: -11.751031875610352
    5. '([' → logprob: -12.251031875610352
    6. 'ab' → logprob: -12.376031875610352
    7. '(abs' → logprob: -12.751031875610352
    8. '(list' → logprob: -13.251031875610352
    9. '(a' → logprob: -13.626031875610352
    10. ' (' → logprob: -14.501031875610352

Token 37: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.01685977168381214
    2. ' ab' → logprob: -4.141860008239746
    3. 'i' → logprob: -7.891860008239746
    4. 'a' → logprob: -8.641860008239746
    5. '   ' → logprob: -9.266860008239746
    6. '(ab' → logprob: -9.516860008239746
    7. ')' → logprob: -10.766860008239746
    8. ''ab' → logprob: -11.266860008239746
    9. ' i' → logprob: -11.579360008239746
    10. ' ' → logprob: -11.891860008239746

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6166903151315637e-05
    2. '[' → logprob: -11.250016212463379
    3. ')[' → logprob: -13.375016212463379
    4. ' [' → logprob: -14.250016212463379
    5. ')' → logprob: -14.375016212463379
    6. '[a' → logprob: -16.500015258789062
    7. '[n' → logprob: -16.750015258789062
    8. '][' → logprob: -17.125015258789062
    9. '[I' → logprob: -17.125015258789062
    10. 'i' → logprob: -17.375015258789062

Token 39: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10524620115756989
    2. '][' → logprob: -2.3552463054656982
    3. ')[' → logprob: -5.480246067047119
    4. ']))' → logprob: -7.730246067047119
    5. ']' → logprob: -9.105246543884277
    6. '0' → logprob: -9.480246543884277
    7. ')' → logprob: -9.605246543884277
    8. ' [' → logprob: -10.105246543884277
    9. '))' → logprob: -10.355246543884277
    10. ')))' → logprob: -10.605246543884277

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008454833878204226
    2. ' ' → logprob: -7.125845432281494
    3. '1' → logprob: -10.250845909118652
    4. '   ' → logprob: -13.500845909118652
    5. '])' → logprob: -13.563345909118652
    6. ')' → logprob: -13.813345909118652
    7. ']' → logprob: -14.313345909118652
    8. '-' → logprob: -15.250845909118652
    9. '  ' → logprob: -15.875845909118652
    10. '    ' → logprob: -16.188344955444336

Token 41: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23946039378643036
    2. '],' → logprob: -1.6144603490829468
    3. '),' → logprob: -5.114460468292236
    4. ']' → logprob: -5.739460468292236
    5. ' ,' → logprob: -6.489460468292236
    6. ']+' → logprob: -6.614460468292236
    7. '],[' → logprob: -7.239460468292236
    8. '+' → logprob: -7.364460468292236
    9. ' ' → logprob: -9.239459991455078
    10. ' ],' → logprob: -9.739459991455078

Token 42: ' i' (ID: 575)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.4287985861301422
    2. 'ab' → logprob: -1.0537985563278198
    3. '0' → logprob: -10.92879867553711
    4. '(ab' → logprob: -11.05379867553711
    5. ' ' → logprob: -11.55379867553711
    6. ''ab' → logprob: -12.05379867553711
    7. ' ' → logprob: -12.30379867553711
    8. '  ' → logprob: -12.42879867553711
    9. '   ' → logprob: -12.55379867553711
    10. '1' → logprob: -12.67879867553711

Token 43: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13119050860404968
    2. ',' → logprob: -2.631190538406372
    3. ')' → logprob: -3.006190538406372
    4. '),' → logprob: -7.756190299987793
    5. ' ))' → logprob: -7.881190299987793
    6. ')))' → logprob: -8.256190299987793
    7. ' ,' → logprob: -9.381190299987793
    8. ' )' → logprob: -9.381190299987793
    9. '))
' → logprob: -9.381190299987793
    10. '+' → logprob: -10.256190299987793

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015123621560633183
    2. ' ' → logprob: -6.50151252746582
    3. '2' → logprob: -11.87651252746582
    4. ',' → logprob: -14.31401252746582
    5. ')' → logprob: -14.37651252746582
    6. '+' → logprob: -14.87651252746582
    7. '0' → logprob: -15.56401252746582
    8. '   ' → logprob: -15.75151252746582
    9. '`' → logprob: -16.12651252746582
    10. ' )' → logprob: -16.12651252746582

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. ')' → logprob: -15.875109672546387
    4. '2' → logprob: -16.00010871887207
    5. '１' → logprob: -17.00010871887207
    6. '+' → logprob: -17.18760871887207
    7. '-' → logprob: -17.62510871887207
    8. '0' → logprob: -17.81260871887207
    9. ',' → logprob: -17.93760871887207
    10. '  ' → logprob: -18.06260871887207

Token 46: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.27386388182640076
    2. ',' → logprob: -1.5238639116287231
    3. ')' → logprob: -3.8988637924194336
    4. ')))' → logprob: -7.523863792419434
    5. ' ))' → logprob: -8.023863792419434
    6. ' ,' → logprob: -8.773863792419434
    7. '),' → logprob: -8.898863792419434
    8. '))
' → logprob: -9.523863792419434
    9. ',b' → logprob: -10.273863792419434
    10. ',
' → logprob: -10.523863792419434

Token 47: ' '' (ID: 461)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.3499939739704132
    2. ' ab' → logprob: -1.2249939441680908
    3. '0' → logprob: -7.84999418258667
    4. ''ab' → logprob: -8.099993705749512
    5. '1' → logprob: -8.599993705749512
    6. ')' → logprob: -8.849993705749512
    7. '))' → logprob: -9.099993705749512
    8. '   ' → logprob: -9.224993705749512
    9. ' ' → logprob: -10.099993705749512
    10. '(ab' → logprob: -10.224993705749512

Token 48: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2491234689950943
    2. 'A' → logprob: -1.624123454093933
    3. ''a' → logprob: -4.374123573303223
    4. ''A' → logprob: -4.749123573303223
    5. 'b' → logprob: -7.499123573303223
    6. ''' → logprob: -7.499123573303223
    7. 'B' → logprob: -7.999123573303223
    8. '')' → logprob: -8.874123573303223
    9. ' A' → logprob: -8.999123573303223
    10. ' a' → logprob: -9.999123573303223

Token 49: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.003711242461577058
    2. '))' → logprob: -6.378711223602295
    3. ''))
' → logprob: -6.753711223602295
    4. '')' → logprob: -8.253711700439453
    5. ')' → logprob: -8.628711700439453
    6. ''' → logprob: -9.628711700439453
    7. '',' → logprob: -9.628711700439453
    8. 'a' → logprob: -9.753711700439453
    9. '')))' → logprob: -9.753711700439453
    10. ''))
' → logprob: -9.878711700439453

Token 50: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3945225775241852
    2. ')
' → logprob: -1.8945225477218628
    3. 'ab' → logprob: -2.1445226669311523
    4. 'for' → logprob: -4.144522666931152
    5. '
' → logprob: -4.394522666931152
    6. ' 
' → logprob: -4.894522666931152
    7. '  
' → logprob: -5.019522666931152
    8. ' ' → logprob: -5.644522666931152
    9. '<|end|>' → logprob: -5.894522666931152
    10. ' )' → logprob: -6.394522666931152

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02608453296124935
    2. 'i' → logprob: -3.9010844230651855
    3. ' j' → logprob: -5.2760844230651855
    4. 'j' → logprob: -8.401084899902344
    5. ' ' → logprob: -9.651084899902344
    6. '_' → logprob: -9.901084899902344
    7. ' _' → logprob: -10.776084899902344
    8. '_i' → logprob: -11.151084899902344
    9. '(i' → logprob: -12.151084899902344
    10. '   ' → logprob: -12.213584899902344

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03811366483569145
    2. 'in' → logprob: -3.288113594055176
    3. ' ' → logprob: -10.288113594055176
    4. 'n' → logprob: -10.913113594055176
    5. 'range' → logprob: -11.163113594055176
    6. ' range' → logprob: -13.663113594055176
    7. '  ' → logprob: -13.788113594055176
    8. ' n' → logprob: -14.288113594055176
    9. 'In' → logprob: -14.538113594055176
    10. ',' → logprob: -14.788113594055176

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740782678127289
    2. ' range' → logprob: -0.9740782976150513
    3. '(range' → logprob: -14.224078178405762
    4. 'n' → logprob: -15.224078178405762
    5. '	range' → logprob: -15.974078178405762
    6. ' ' → logprob: -16.599079132080078
    7. 'r' → logprob: -17.099079132080078
    8. 'rang' → logprob: -17.349079132080078
    9. '_range' → logprob: -17.474079132080078
    10. '  ' → logprob: -18.349079132080078

Token 54: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021259987261146307
    2. '(' → logprob: -8.500212669372559
    3. ' (' → logprob: -12.750212669372559
    4. '(len' → logprob: -13.000212669372559
    5. ' n' → logprob: -13.500212669372559
    6. '(range' → logprob: -13.500212669372559
    7. 'n' → logprob: -14.250212669372559
    8. ' range' → logprob: -14.750212669372559
    9. 'range' → logprob: -16.750211715698242
    10. '(s' → logprob: -16.750211715698242

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05526542663574219
    2. '):
' → logprob: -2.930265426635742
    3. ':' → logprob: -8.305265426635742
    4. ')' → logprob: -10.180265426635742
    5. 'n' → logprob: -10.305265426635742
    6. '   ' → logprob: -11.305265426635742
    7. ' ):' → logprob: -11.680265426635742
    8. '):
' → logprob: -11.805265426635742
    9. ',' → logprob: -11.805265426635742
    10. ' ' → logprob: -12.180265426635742

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011971325147897005
    2. 'ab' → logprob: -7.376197338104248
    3. ' ab' → logprob: -7.501197338104248
    4. '_ab' → logprob: -12.87619686126709
    5. ' ' → logprob: -13.00119686126709
    6. '    
' → logprob: -13.50119686126709
    7. '  ' → logprob: -13.75119686126709
    8. '    ' → logprob: -13.75119686126709
    9. '(ab' → logprob: -13.75119686126709
    10. '   ' → logprob: -13.75119686126709

Token 57: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.000410415610531345
    2. ' ab' → logprob: -7.875410556793213
    3. '   ' → logprob: -10.625410079956055
    4. '_ab' → logprob: -13.875410079956055
    5. 'abl' → logprob: -14.125410079956055
    6. ' ' → logprob: -14.250410079956055
    7. 'abb' → logprob: -14.375410079956055
    8. 'abel' → logprob: -14.750410079956055
    9. '#ab' → logprob: -14.875410079956055
    10. '(ab' → logprob: -15.375410079956055

Token 58: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.466968650580384e-05
    2. '[i' → logprob: -10.125054359436035
    3. '   ' → logprob: -13.375054359436035
    4. '[' → logprob: -13.375054359436035
    5. '```' → logprob: -13.750054359436035
    6. '.all' → logprob: -13.812554359436035
    7. '.append' → logprob: -13.937554359436035
    8. ' all' → logprob: -14.187554359436035
    9. '_all' → logprob: -14.437554359436035
    10. 'i' → logprob: -14.562554359436035

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011081460979767144
    2. '.' → logprob: -9.875110626220703
    3. 'append' → logprob: -10.750110626220703
    4. 'all' → logprob: -11.000110626220703
    5. ' .' → logprob: -11.375110626220703
    6. ').' → logprob: -12.125110626220703
    7. '.extend' → logprob: -13.750110626220703
    8. '].' → logprob: -14.000110626220703
    9. '>.' → logprob: -14.500110626220703
    10. '.app' → logprob: -15.125110626220703

Token 60: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -10.875020980834961
    3. ' ((' → logprob: -13.625020980834961
    4. ' ' → logprob: -14.375020980834961
    5. '```' → logprob: -15.875020980834961
    6. '(ab' → logprob: -16.25002098083496
    7. '(('' → logprob: -16.25002098083496
    8. '(((' → logprob: -16.75002098083496
    9. '`' → logprob: -16.87502098083496
    10. '   ' → logprob: -17.12502098083496

Token 61: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00195384887047112
    2. ' ab' → logprob: -6.626954078674316
    3. '(ab' → logprob: -7.376954078674316
    4. 'аб' → logprob: -14.876954078674316
    5. '#ab' → logprob: -15.001954078674316
    6. '   ' → logprob: -15.376954078674316
    7. '_ab' → logprob: -15.376954078674316
    8. 'abb' → logprob: -15.501954078674316
    9. 'abw' → logprob: -15.876954078674316
    10. ''ab' → logprob: -16.251953125

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.500004768371582
    3. '```' → logprob: -15.125004768371582
    4. '[j' → logprob: -15.375004768371582
    5. ')[' → logprob: -16.0000057220459
    6. ' [' → logprob: -16.0000057220459
    7. 'i' → logprob: -16.1250057220459
    8. 's' → logprob: -16.7500057220459
    9. '[][' → logprob: -16.7500057220459
    10. '[n' → logprob: -17.2500057220459

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005343567114323378
    2. '[' → logprob: -5.505343437194824
    3. ')[' → logprob: -6.755343437194824
    4. '1' → logprob: -10.130343437194824
    5. ']' → logprob: -10.505343437194824
    6. ')' → logprob: -11.630343437194824
    7. ' ][' → logprob: -12.130343437194824
    8. '"][' → logprob: -12.880343437194824
    9. ')][' → logprob: -13.005343437194824
    10. '[i' → logprob: -13.005343437194824

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.250000953674316
    3. '
' → logprob: -17.375
    4. '' → logprob: -18.0
    5. '][' → logprob: -18.5
    6. '۱' → logprob: -18.5625
    7. '[' → logprob: -18.75
    8. ' ' → logprob: -18.75
    9. '-' → logprob: -18.75
    10. '   ' → logprob: -18.8125

Token 65: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007379194721579552
    2. ' ,' → logprob: -7.375738143920898
    3. '),' → logprob: -10.125738143920898
    4. '[i' → logprob: -10.125738143920898
    5. ',i' → logprob: -10.750738143920898
    6. ')' → logprob: -12.500738143920898
    7. '],' → logprob: -13.125738143920898
    8. ' ' → logprob: -13.375738143920898
    9. '   ' → logprob: -13.875738143920898
    10. '',' → logprob: -14.625738143920898

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048608485609292984
    2. 'i' → logprob: -3.0486085414886475
    3. ' ' → logprob: -11.673608779907227
    4. ')' → logprob: -13.048608779907227
    5. ' 
' → logprob: -13.048608779907227
    6. ' ' → logprob: -13.173608779907227
    7. '	i' → logprob: -14.048608779907227
    8. 'n' → logprob: -14.173608779907227
    9. ' n' → logprob: -14.173608779907227
    10. ',' → logprob: -14.298608779907227

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06993821263313293
    2. '+' → logprob: -2.6949381828308105
    3. ')' → logprob: -15.069938659667969
    4. ' ' → logprob: -15.194938659667969
    5. ',' → logprob: -15.319938659667969
    6. ' ,' → logprob: -15.319938659667969
    7. '1' → logprob: -15.319938659667969
    8. ' plus' → logprob: -15.444938659667969
    9. ' +
' → logprob: -15.694938659667969
    10. '<|end|>' → logprob: -16.94493865966797

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049470864236355
    2. ' ' → logprob: -4.511049270629883
    3. ')' → logprob: -13.886049270629883
    4. '2' → logprob: -15.761049270629883
    5. '  ' → logprob: -16.573549270629883
    6. '`' → logprob: -16.573549270629883
    7. '0' → logprob: -16.886049270629883
    8. ' )' → logprob: -16.948549270629883
    9. ',' → logprob: -17.073549270629883
    10. '<|end|>' → logprob: -17.073549270629883

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020866614067927003
    2. ' ' → logprob: -8.500208854675293
    3. '2' → logprob: -12.625208854675293
    4. ')' → logprob: -14.437708854675293
    5. '```' → logprob: -14.625208854675293
    6. '`' → logprob: -16.437707901000977
    7. '   ' → logprob: -16.562707901000977
    8. '0' → logprob: -16.687707901000977
    9. '-' → logprob: -16.750207901000977
    10. ',' → logprob: -16.812707901000977

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013572083844337612
    2. ' ,' → logprob: -9.00013542175293
    3. '',' → logprob: -11.75013542175293
    4. ')' → logprob: -13.00013542175293
    5. '),' → logprob: -14.50013542175293
    6. '   ' → logprob: -14.62513542175293
    7. ' ' → logprob: -14.75013542175293
    8. '‌,' → logprob: -15.12513542175293
    9. ',
' → logprob: -16.00013542175293
    10. ''' → logprob: -16.75013542175293

Token 71: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028362537268549204
    2. ' '' → logprob: -6.002836227416992
    3. ''b' → logprob: -8.127836227416992
    4. ')' → logprob: -10.377836227416992
    5. '"' → logprob: -11.252836227416992
    6. 'b' → logprob: -12.002836227416992
    7. ''a' → logprob: -12.377836227416992
    8. '`' → logprob: -12.877836227416992
    9. ''s' → logprob: -13.127836227416992
    10. ' b' → logprob: -13.627836227416992

Token 72: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.465036105713807e-06
    2. ''b' → logprob: -11.875007629394531
    3. ' b' → logprob: -14.625007629394531
    4. ')b' → logprob: -17.25000762939453
    5. ''' → logprob: -18.12500762939453
    6. '')' → logprob: -18.25000762939453
    7. ')' → logprob: -19.50000762939453
    8. 'a' → logprob: -20.00000762939453
    9. '	b' → logprob: -21.12500762939453
    10. 's' → logprob: -21.75000762939453

Token 73: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2553049921989441
    2. ')' → logprob: -1.5053050518035889
    3. ''))' → logprob: -5.75530481338501
    4. '')' → logprob: -8.630305290222168
    5. '))
' → logprob: -10.880305290222168
    6. ')
' → logprob: -13.255305290222168
    7. ')))' → logprob: -13.255305290222168
    8. ' ))' → logprob: -13.880305290222168
    9. '"))' → logprob: -14.505305290222168
    10. ' )' → logprob: -14.630305290222168

Token 74: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -8.876193169271573e-05
    2. 'sorted' → logprob: -9.625088691711426
    3. '```' → logprob: -12.125088691711426
    4. 's' → logprob: -12.625088691711426
    5. ')' → logprob: -13.125088691711426
    6. '#ab' → logprob: -13.125088691711426
    7. 'abl' → logprob: -13.375088691711426
    8. 'sort' → logprob: -13.750088691711426
    9. 'all' → logprob: -14.125088691711426
    10. 'abb' → logprob: -14.125088691711426

Token 75: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.009607098996639252
    2. '.sort' → logprob: -5.884607315063477
    3. ')' → logprob: -6.259607315063477
    4. '.' → logprob: -6.634607315063477
    5. '[' → logprob: -7.009607315063477
    6. '.all' → logprob: -7.384607315063477
    7. '_all' → logprob: -7.634607315063477
    8. '<|end|>' → logprob: -7.634607315063477
    9. 'All' → logprob: -8.759607315063477
    10. ']' → logprob: -9.134607315063477

Token 76: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06250321865081787
    2. '.' → logprob: -2.8125033378601074
    3. 'sort' → logprob: -8.81250286102295
    4. '.sorted' → logprob: -9.56250286102295
    5. '<|end|>' → logprob: -9.68750286102295
    6. '.
' → logprob: -9.81250286102295
    7. ')' → logprob: -10.18750286102295
    8. '[' → logprob: -10.31250286102295
    9. '_sorted' → logprob: -10.68750286102295
    10. '
' → logprob: -11.06250286102295

Token 77: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029913512989878654
    2. '(' → logprob: -3.5299134254455566
    3. '()
' → logprob: -8.904913902282715
    4. '(reverse' → logprob: -12.279913902282715
    5. ')' → logprob: -12.404913902282715
    6. '(
' → logprob: -12.529913902282715
    7. '()

' → logprob: -13.029913902282715
    8. '(key' → logprob: -13.404913902282715
    9. '```' → logprob: -13.404913902282715
    10. '();' → logprob: -13.904913902282715

Token 78: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1379183977842331
    2. 'print' → logprob: -2.637918472290039
    3. 'i' → logprob: -4.137918472290039
    4. 'pr' → logprob: -4.637918472290039
    5. 'ans' → logprob: -5.262918472290039
    6. 'p' → logprob: -5.637918472290039
    7. 'if' → logprob: -5.887918472290039
    8. 'result' → logprob: -6.137918472290039
    9. 'a' → logprob: -6.262918472290039
    10. 'n' → logprob: -6.512918472290039

Token 79: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18527531623840332
    2. '=' → logprob: -1.8102753162384033
    3. ' ' → logprob: -6.060275077819824
    4. '(' → logprob: -6.685275077819824
    5. '_' → logprob: -7.060275077819824
    6. '[' → logprob: -7.310275077819824
    7. '=[]' → logprob: -9.310275077819824
    8. '[:]' → logprob: -9.935275077819824
    9. ')' → logprob: -10.060275077819824
    10. '[]' → logprob: -10.310275077819824

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2636035978794098
    2. ' =' → logprob: -1.5136035680770874
    3. '[' → logprob: -5.388603687286377
    4. '(' → logprob: -5.763603687286377
    5. '_' → logprob: -6.138603687286377
    6. ',' → logprob: -7.138603687286377
    7. 's' → logprob: -8.638603210449219
    8. ' ' → logprob: -8.763603210449219
    9. ')' → logprob: -9.263603210449219
    10. '1' → logprob: -9.763603210449219

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3434527814388275
    2. 'ab' → logprob: -1.84345281124115
    3. '[]' → logprob: -2.2184526920318604
    4. '-' → logprob: -5.4684529304504395
    5. 'float' → logprob: -5.4684529304504395
    6. '1' → logprob: -5.5934529304504395
    7. '[' → logprob: -6.0934529304504395
    8. '10' → logprob: -6.5934529304504395
    9. '"' → logprob: -6.8434529304504395
    10. ' []' → logprob: -6.9684529304504395

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7564625144004822
    2. 'ab' → logprob: -0.8814625144004822
    3. '[]' → logprob: -2.381462574005127
    4. 'float' → logprob: -5.131462574005127
    5. '1' → logprob: -5.631462574005127
    6. '[' → logprob: -5.881462574005127
    7. ''ab' → logprob: -6.256462574005127
    8. '-' → logprob: -6.256462574005127
    9. '"' → logprob: -7.006462574005127
    10. 'n' → logprob: -7.131462574005127

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0808967798948288
    2. 'for' → logprob: -2.8308968544006348
    3. '<|end|>' → logprob: -4.830896854400635
    4. '\n' → logprob: -5.330896854400635
    5. '' → logprob: -6.580896854400635
    6. '  
' → logprob: -7.080896854400635
    7. ' for' → logprob: -7.080896854400635
    8. '
' → logprob: -7.830896854400635
    9. ',' → logprob: -8.080896377563477
    10. 'n' → logprob: -8.205896377563477

Token 84: 'for' (ID: 1938)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9362244009971619
    2. 'count' → logprob: -1.4362244606018066
    3. 'for' → logprob: -1.9362244606018066
    4. 'max' → logprob: -3.0612244606018066
    5. 'cnt' → logprob: -3.0612244606018066
    6. 'stack' → logprob: -3.9362244606018066
    7. 'current' → logprob: -4.311224460601807
    8. ' for' → logprob: -4.811224460601807
    9. 'used' → logprob: -5.061224460601807
    10. 'i' → logprob: -5.436224460601807

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012740483507514
    2. ' ' → logprob: -5.512740612030029
    3. ' _' → logprob: -5.512740612030029
    4. 'i' → logprob: -7.012740612030029
    5. ' t' → logprob: -7.012740612030029
    6. ' x' → logprob: -7.137740612030029
    7. ' a' → logprob: -7.387740612030029
    8. '_' → logprob: -7.512740612030029
    9. ' ab' → logprob: -8.262740135192871
    10. ' v' → logprob: -9.137740135192871

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028463738039135933
    2. ' ' → logprob: -4.153463840484619
    3. 'in' → logprob: -4.528463840484619
    4. ' range' → logprob: -7.528463840484619
    5. '<|end|>' → logprob: -8.028463363647461
    6. 'range' → logprob: -8.153463363647461
    7. ' i' → logprob: -8.653463363647461
    8. ')' → logprob: -9.778463363647461
    9. ' n' → logprob: -10.278463363647461
    10. '  ' → logprob: -10.778463363647461

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.027957748621702194
    2. 'range' → logprob: -3.7779576778411865
    3. ' ab' → logprob: -5.402957916259766
    4. ' ' → logprob: -8.902957916259766
    5. ' ra' → logprob: -10.777957916259766
    6. 'ab' → logprob: -11.277957916259766
    7. ' ran' → logprob: -11.527957916259766
    8. '	range' → logprob: -12.652957916259766
    9. ' xrange' → logprob: -12.777957916259766
    10. '  ' → logprob: -13.152957916259766

Token 88: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09225806593894958
    2. '(' → logprob: -2.4672579765319824
    3. ' (' → logprob: -6.092257976531982
    4. '(len' → logprob: -7.092257976531982
    5. ' n' → logprob: -9.09225845336914
    6. '(
' → logprob: -9.59225845336914
    7. '(s' → logprob: -11.34225845336914
    8. 'n' → logprob: -12.09225845336914
    9. '(a' → logprob: -12.84225845336914
    10. '(ab' → logprob: -12.84225845336914

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0672437995672226
    2. '-' → logprob: -3.192243814468384
    3. '):
' → logprob: -4.817243576049805
    4. ')' → logprob: -5.567243576049805
    5. ' -' → logprob: -5.567243576049805
    6. '+' → logprob: -5.692243576049805
    7. '*' → logprob: -5.817243576049805
    8. ' ):' → logprob: -6.942243576049805
    9. ' *' → logprob: -8.692243576049805
    10. '2' → logprob: -8.817243576049805

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4313443899154663
    2. ' if' → logprob: -1.5563443899154663
    3. 'if' → logprob: -2.806344509124756
    4. ' ans' → logprob: -3.556344509124756
    5. 'ans' → logprob: -3.806344509124756
    6. '1' → logprob: -5.431344509124756
    7. '(ans' → logprob: -5.556344509124756
    8. ' i' → logprob: -6.056344509124756
    9. ')' → logprob: -6.181344509124756
    10. '0' → logprob: -6.306344509124756

Token 91: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.9722471833229065
    2. 'if' → logprob: -1.4722471237182617
    3. ' ans' → logprob: -1.7222471237182617
    4. ' if' → logprob: -1.7222471237182617
    5. '   ' → logprob: -4.597247123718262
    6. 'ab' → logprob: -5.222247123718262
    7. ' ab' → logprob: -5.347247123718262
    8. 'i' → logprob: -5.847247123718262
    9. '(ans' → logprob: -6.097247123718262
    10. 'a' → logprob: -6.597247123718262

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005001319805160165
    2. ' +=' → logprob: -8.500499725341797
    3. ' ' → logprob: -9.625499725341797
    4. '+' → logprob: -9.625499725341797
    5. '<|end|>' → logprob: -10.000499725341797
    6. 'all' → logprob: -10.875499725341797
    7. '+=' → logprob: -11.125499725341797
    8. ' =' → logprob: -11.250499725341797
    9. ')' → logprob: -11.250499725341797
    10. '```' → logprob: -11.875499725341797

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08395564556121826
    2. '+=' → logprob: -2.583955764770508
    3. '+' → logprob: -5.583955764770508
    4. ' =' → logprob: -7.458955764770508
    5. '=' → logprob: -7.833955764770508
    6. ' ' → logprob: -8.958955764770508
    7. ' +' → logprob: -9.458955764770508
    8. ' -=' → logprob: -9.833955764770508
    9. ',' → logprob: -11.208955764770508
    10. ']+=' → logprob: -11.583955764770508

Token 94: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0431399792432785
    2. ' ab' → logprob: -3.168139934539795
    3. 'a' → logprob: -10.168140411376953
    4. 'abs' → logprob: -10.543140411376953
    5. '(ab' → logprob: -11.043140411376953
    6. ' ' → logprob: -12.668140411376953
    7. ' аб' → logprob: -12.793140411376953
    8. '_ab' → logprob: -12.793140411376953
    9. 'аб' → logprob: -12.855640411376953
    10. '   ' → logprob: -12.855640411376953

Token 95: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0004950098809786141
    2. '[i' → logprob: -8.250494956970215
    3. '[' → logprob: -9.125494956970215
    4. 'll' → logprob: -10.250494956970215
    5. 'a' → logprob: -10.375494956970215
    6. '```' → logprob: -11.250494956970215
    7. 'al' → logprob: -12.062994956970215
    8. '1' → logprob: -12.562994956970215
    9. '[
' → logprob: -13.062994956970215
    10. '[-' → logprob: -13.375494956970215

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01604093797504902
    2. '[' → logprob: -4.141040802001953
    3. '[
' → logprob: -12.891040802001953
    4. ' [' → logprob: -14.516040802001953
    5. '\[' → logprob: -14.766040802001953
    6. '[s' → logprob: -15.016040802001953
    7. '[I' → logprob: -15.141040802001953
    8. '[j' → logprob: -15.266040802001953
    9. '[][' → logprob: -15.266040802001953
    10. '[:' → logprob: -15.266040802001953

Token 97: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04017319157719612
    2. '[' → logprob: -3.290173292160034
    3. '0' → logprob: -7.290173053741455
    4. ']' → logprob: -7.665173053741455
    5. ' ][' → logprob: -7.790173053741455
    6. ')[' → logprob: -7.915173053741455
    7. ' ' → logprob: -9.665173530578613
    8. '"][' → logprob: -11.040173530578613
    9. ''s' → logprob: -11.227673530578613
    10. ' [' → logprob: -11.227673530578613

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3557529857498594e-05
    2. '2' → logprob: -11.75002384185791
    3. '1' → logprob: -11.93752384185791
    4. ' ' → logprob: -12.12502384185791
    5. '3' → logprob: -14.37502384185791
    6. '
' → logprob: -14.81252384185791
    7. 'value' → logprob: -15.18752384185791
    8. '00' → logprob: -15.25002384185791
    9. '000' → logprob: -15.56252384185791
    10. '   ' → logprob: -15.68752384185791

Token 99: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7775595188140869
    2. '[' → logprob: -0.7775595188140869
    3. ']' → logprob: -3.277559518814087
    4. '*' → logprob: -3.777559518814087
    5. ' ' → logprob: -4.277559280395508
    6. ' *' → logprob: -6.152559280395508
    7. '][' → logprob: -6.402559280395508
    8. ' )' → logprob: -6.902559280395508
    9. ' ]' → logprob: -8.152559280395508
    10. '```' → logprob: -8.902559280395508

Token 100: 'hen' (ID: 5447)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06453236937522888
    2. 'ans' → logprob: -2.9395322799682617
    3. '
' → logprob: -5.814532279968262
    4. '\n' → logprob: -6.564532279968262
    5. ' print' → logprob: -7.064532279968262
    6. 'for' → logprob: -7.189532279968262
    7. '+' → logprob: -7.314532279968262
    8. ' 
' → logprob: -7.564532279968262
    9. '+
' → logprob: -7.814532279968262
    10. '  
' → logprob: -7.939532279968262

Token 101: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5128245949745178
    2. 'd' → logprob: -1.762824535369873
    3. 't' → logprob: -2.512824535369873
    4. '```' → logprob: -3.762824535369873
    5. 'da' → logprob: -4.137824535369873
    6. 'g' → logprob: -4.512824535369873
    7. '1' → logprob: -4.637824535369873
    8. ' =' → logprob: -4.762824535369873
    9. '=' → logprob: -4.887824535369873
    10. '[]' → logprob: -5.137824535369873

Token 102: ' ab' (ID: 692)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9608516693115234
    2. ' n' → logprob: -1.2108516693115234
    3. '0' → logprob: -2.2108516693115234
    4. ' ab' → logprob: -2.9608516693115234
    5. ' ' → logprob: -3.2108516693115234
    6. 'ab' → logprob: -3.8358516693115234
    7. 'len' → logprob: -4.585851669311523
    8. 'sum' → logprob: -4.585851669311523
    9. '[n' → logprob: -4.710851669311523
    10. 'ans' → logprob: -5.085851669311523

Token 103: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4656412899494171
    2. '[' → logprob: -1.0906412601470947
    3. '[n' → logprob: -4.215641498565674
    4. 'll' → logprob: -4.965641498565674
    5. '[:' → logprob: -5.090641498565674
    6. 'al' → logprob: -5.590641498565674
    7. '[::-' → logprob: -6.840641498565674
    8. '[-' → logprob: -7.340641498565674
    9. '[len' → logprob: -7.590641498565674
    10. 'n' → logprob: -7.715641498565674

Token 104: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.161904439330101
    2. '[:' → logprob: -2.0369043350219727
    3. '[' → logprob: -4.036904335021973
    4. '[:]' → logprob: -7.661904335021973
    5. '[len' → logprob: -8.036904335021973
    6. 'n' → logprob: -8.786904335021973
    7. '[:-' → logprob: -9.161904335021973
    8. '[
' → logprob: -10.036904335021973
    9. '[]' → logprob: -10.036904335021973
    10. '[i' → logprob: -10.411904335021973

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05152551457285881
    2. '-' → logprob: -3.301525592803955
    3. '[' → logprob: -4.801525592803955
    4. ']' → logprob: -5.426525592803955
    5. ' -' → logprob: -8.176525115966797
    6. '0' → logprob: -9.301525115966797
    7. ']][' → logprob: -9.801525115966797
    8. '+' → logprob: -9.801525115966797
    9. '"][' → logprob: -10.489025115966797
    10. ' ][' → logprob: -10.739025115966797

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0420110747218132
    2. '1' → logprob: -3.292011022567749
    3. '2' → logprob: -5.542011260986328
    4. ':' → logprob: -10.854511260986328
    5. ' ' → logprob: -12.729511260986328
    6. '```' → logprob: -13.167011260986328
    7. '::-' → logprob: -13.292011260986328
    8. ':]' → logprob: -13.729511260986328
    9. ']' → logprob: -13.854511260986328
    10. '-' → logprob: -13.979511260986328

Token 107: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22974054515361786
    2. ' -' → logprob: -1.6047405004501343
    3. '+' → logprob: -6.604740619659424
    4. '<|end|>' → logprob: -6.604740619659424
    5. ')' → logprob: -7.354740619659424
    6. '-h' → logprob: -8.604740142822266
    7. '-n' → logprob: -8.729740142822266
    8. ' hen' → logprob: -8.854740142822266
    9. ' ' → logprob: -9.479740142822266
    10. '-min' → logprob: -9.979740142822266

Token 108: 'hen' (ID: 5447)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8866567611694336
    2. 'for' → logprob: -1.8866567611694336
    3. '+' → logprob: -2.1366567611694336
    4. ' if' → logprob: -2.2616567611694336
    5. '-' → logprob: -2.6366567611694336
    6. 'ans' → logprob: -3.2616567611694336
    7. ' for' → logprob: -3.8866567611694336
    8. ' hen' → logprob: -4.136656761169434
    9. ')' → logprob: -4.261656761169434
    10. ' ' → logprob: -4.761656761169434

Token 109: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36130714416503906
    2. '=' → logprob: -1.361307144165039
    3. ' ' → logprob: -3.236307144165039
    4. '+' → logprob: -5.986307144165039
    5. ' +=' → logprob: -6.486307144165039
    6. ' +' → logprob: -7.611307144165039
    7. '[' → logprob: -7.611307144165039
    8. ')' → logprob: -7.736307144165039
    9. '-' → logprob: -7.861307144165039
    10. '<|end|>' → logprob: -8.111307144165039

Token 111: ' ab' (ID: 692)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9866359829902649
    2. ' ab' → logprob: -0.9866359829902649
    3. 'ab' → logprob: -1.6116359233856201
    4. ' hen' → logprob: -3.73663592338562
    5. ' ' → logprob: -3.86163592338562
    6. 'hen' → logprob: -5.986636161804199
    7. 'float' → logprob: -5.986636161804199
    8. 'ans' → logprob: -6.736636161804199
    9. 'abs' → logprob: -7.111636161804199
    10. '100' → logprob: -7.236636161804199

Token 112: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00021951000962872058
    2. '[' → logprob: -8.500219345092773
    3. 'al' → logprob: -12.375219345092773
    4. 'll' → logprob: -12.625219345092773
    5. '```' → logprob: -13.750219345092773
    6. '[]' → logprob: -13.875219345092773
    7. '[n' → logprob: -14.000219345092773
    8. ' all' → logprob: -14.125219345092773
    9. 'алл' → logprob: -14.125219345092773
    10. '1' → logprob: -14.250219345092773

Token 113: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0049939402379095554
    2. '[' → logprob: -5.504993915557861
    3. '[:]' → logprob: -8.25499439239502
    4. '[len' → logprob: -8.50499439239502
    5. '[]' → logprob: -8.62999439239502
    6. '[:' → logprob: -9.25499439239502
    7. '[-' → logprob: -10.62999439239502
    8. '[N' → logprob: -10.75499439239502
    9. 'n' → logprob: -10.87999439239502
    10. '[s' → logprob: -11.25499439239502

Token 114: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.43168920278549194
    2. '-' → logprob: -1.1816892623901367
    3. '+' → logprob: -3.4316892623901367
    4. ' -' → logprob: -4.931689262390137
    5. '[' → logprob: -5.806689262390137
    6. ' +' → logprob: -7.431689262390137
    7. ']' → logprob: -8.056689262390137
    8. ' ][' → logprob: -9.431689262390137
    9. '```' → logprob: -9.806689262390137
    10. '1' → logprob: -10.556689262390137

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045700959162786603
    2. 'n' → logprob: -7.875456809997559
    3. ' ' → logprob: -9.750456809997559
    4. '0' → logprob: -11.375456809997559
    5. '2' → logprob: -12.750456809997559
    6. ' n' → logprob: -13.250456809997559
    7. '   ' → logprob: -14.812956809997559
    8. ']' → logprob: -15.125456809997559
    9. '```' → logprob: -15.312956809997559
    10. '3' → logprob: -15.562956809997559

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003187339985743165
    2. '0' → logprob: -5.75318717956543
    3. ' ' → logprob: -12.87818717956543
    4. 'n' → logprob: -13.12818717956543
    5. '2' → logprob: -13.62818717956543
    6. '][' → logprob: -13.62818717956543
    7. '[' → logprob: -13.75318717956543
    8. '```' → logprob: -15.06568717956543
    9. ']' → logprob: -15.69068717956543
    10. '(' → logprob: -15.87818717956543

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011036602081730962
    2. '[' → logprob: -7.00110387802124
    3. ')[' → logprob: -9.001103401184082
    4. ']' → logprob: -10.251103401184082
    5. ' ][' → logprob: -11.626103401184082
    6. ')][' → logprob: -12.001103401184082
    7. '"][' → logprob: -12.251103401184082
    8. ''][' → logprob: -12.876103401184082
    9. '])' → logprob: -13.001103401184082
    10. ')' → logprob: -13.001103401184082

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012451570364646614
    2. '][' → logprob: -9.12512493133545
    3. ' ' → logprob: -11.62512493133545
    4. '[' → logprob: -12.37512493133545
    5. '1' → logprob: -14.12512493133545
    6. ']' → logprob: -14.37512493133545
    7. '`' → logprob: -15.12512493133545
    8. ')' → logprob: -15.81262493133545
    9. '```' → logprob: -15.81262493133545
    10. '   ' → logprob: -15.93762493133545

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.170270353322849e-05
    2. ')
' → logprob: -10.625061988830566
    3. ']' → logprob: -11.000061988830566
    4. ' )' → logprob: -12.125061988830566
    5. '<|end|>' → logprob: -12.125061988830566
    6. '```' → logprob: -12.750061988830566
    7. '')' → logprob: -13.875061988830566
    8. ')

' → logprob: -14.125061988830566
    9. '[' → logprob: -14.625061988830566
    10. '))' → logprob: -14.750061988830566

Token 120: 'd' (ID: 67)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6676318645477295
    2. ' ' → logprob: -0.7926318645477295
    3. '=' → logprob: -4.042632102966309
    4. 'e' → logprob: -5.542632102966309
    5. 'if' → logprob: -5.667632102966309
    6. '<|end|>' → logprob: -6.042632102966309
    7. 'f' → logprob: -6.667632102966309
    8. 'iff' → logprob: -7.042632102966309
    9. '  ' → logprob: -7.292632102966309
    10. 'i' → logprob: -7.292632102966309

Token 122: ' set' (ID: 920)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.09072745591402054
    2. '{}' → logprob: -3.3407275676727295
    3. ' ' → logprob: -3.7157275676727295
    4. ' hen' → logprob: -4.59072732925415
    5. ' []' → logprob: -4.96572732925415
    6. ' abs' → logprob: -6.34072732925415
    7. ' ab' → logprob: -6.46572732925415
    8. '0' → logprob: -6.71572732925415
    9. ' {' → logprob: -6.71572732925415
    10. ' {}
' → logprob: -7.46572732925415

Token 123: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.833878508885391e-05
    2. '(' → logprob: -10.750038146972656
    3. '()
' → logprob: -11.875038146972656
    4. '([]' → logprob: -12.375038146972656
    5. '(ab' → logprob: -13.250038146972656
    6. '()]' → logprob: -13.500038146972656
    7. '()\' → logprob: -14.500038146972656
    8. '())' → logprob: -15.000038146972656
    9. '()

' → logprob: -15.000038146972656
    10. '([' → logprob: -15.000038146972656

Token 124: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35896316170692444
    2. 'd' → logprob: -1.608963131904602
    3. ' for' → logprob: -2.6089632511138916
    4. 'ans' → logprob: -4.9839630126953125
    5. ')' → logprob: -5.4839630126953125
    6. ' ' → logprob: -5.6089630126953125
    7. 'if' → logprob: -5.6089630126953125
    8. 'i' → logprob: -6.3589630126953125
    9. 'count' → logprob: -6.7339630126953125
    10. ' d' → logprob: -6.8589630126953125

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35521572828292847
    2. '=' → logprob: -1.6052157878875732
    3. ' ' → logprob: -2.8552157878875732
    4. 'okens' → logprob: -5.105215549468994
    5. 'o' → logprob: -5.730215549468994
    6. '.' → logprob: -5.730215549468994
    7. 'd' → logprob: -5.730215549468994
    8. 'for' → logprob: -6.230215549468994
    9. 'otal' → logprob: -6.230215549468994
    10. ')' → logprob: -6.355215549468994

Token 126: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03989681974053383
    2. ' ' → logprob: -3.9148967266082764
    3. ' hen' → logprob: -4.1648969650268555
    4. 'hen' → logprob: -6.6648969650268555
    5. '[]' → logprob: -7.6648969650268555
    6. '1' → logprob: -7.6648969650268555
    7. '2' → logprob: -7.6648969650268555
    8. 'n' → logprob: -8.789896965026855
    9. 'Hen' → logprob: -8.789896965026855
    10. '{}' → logprob: -8.914896965026855

Token 127: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5356152653694153
    2. ' for' → logprob: -1.5356152057647705
    3. '<|end|>' → logprob: -1.9106152057647705
    4. '
' → logprob: -3.1606152057647705
    5. ' ' → logprob: -5.41061544418335
    6. ' 
' → logprob: -6.53561544418335
    7. ')' → logprob: -7.16061544418335
    8. '<|end|>' → logprob: -7.53561544418335
    9. ',' → logprob: -8.035614967346191
    10. 'd' → logprob: -8.410614967346191

Token 128: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03194434940814972
    2. ' for' → logprob: -3.5319442749023438
    3. ' ' → logprob: -7.781944274902344
    4. ')' → logprob: -8.281944274902344
    5. 'ans' → logprob: -8.281944274902344
    6. 'i' → logprob: -8.531944274902344
    7. '=' → logprob: -9.031944274902344
    8. 'if' → logprob: -9.031944274902344
    9. 'd' → logprob: -9.531944274902344
    10. ' hen' → logprob: -9.531944274902344

Token 129: 'ante' (ID: 2116)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6981783509254456
    2. 'en' → logprob: -1.4481782913208008
    3. ' =' → logprob: -1.8231782913208008
    4. ' ' → logprob: -3.573178291320801
    5. 'for' → logprob: -4.073178291320801
    6. 'i' → logprob: -4.323178291320801
    7. '<|end|>' → logprob: -4.323178291320801
    8. 'e' → logprob: -4.823178291320801
    9. 'd' → logprob: -5.573178291320801
    10. '  ' → logprob: -5.698178291320801

Token 130: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010306309908628464
    2. 'is' → logprob: -4.760306358337402
    3. 'isu' → logprob: -7.135306358337402
    4. 's' → logprob: -9.135306358337402
    5. ' =' → logprob: -9.510306358337402
    6. 'su' → logprob: -9.635306358337402
    7. 'im' → logprob: -9.760306358337402
    8. 'd' → logprob: -9.760306358337402
    9. 'ish' → logprob: -10.010306358337402
    10. 'n' → logprob: -10.260306358337402

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04445427283644676
    2. '=' → logprob: -3.294454336166382
    3. ' ' → logprob: -5.669454097747803
    4. '(' → logprob: -6.544454097747803
    5. '_' → logprob: -6.794454097747803
    6. ')' → logprob: -8.919454574584961
    7. '()' → logprob: -10.169454574584961
    8. ',' → logprob: -10.544454574584961
    9. ' (' → logprob: -10.794454574584961
    10. '[' → logprob: -10.794454574584961

Token 132: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16733677685260773
    2. ' False' → logprob: -2.7923367023468018
    3. 'True' → logprob: -3.4173367023468018
    4. '0' → logprob: -4.167336940765381
    5. ' True' → logprob: -4.542336940765381
    6. 'None' → logprob: -4.792336940765381
    7. ' hen' → logprob: -4.792336940765381
    8. ''' → logprob: -5.417336940765381
    9. '[]' → logprob: -5.917336940765381
    10. '''' → logprob: -6.167336940765381

Token 133: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7202786207199097
    2. '
' → logprob: -1.2202786207199097
    3. ' for' → logprob: -1.7202786207199097
    4. '<|end|>' → logprob: -3.345278739929199
    5. ' 
' → logprob: -6.220278739929199
    6. ' ' → logprob: -7.595278739929199
    7. '\n' → logprob: -7.845278739929199
    8. ':' → logprob: -8.3452787399292
    9. 'n' → logprob: -8.5952787399292
    10. '<|end|>' → logprob: -8.9702787399292

Token 134: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26060593128204346
    2. ' for' → logprob: -1.5106059312820435
    3. '<|end|>' → logprob: -5.760605812072754
    4. '
' → logprob: -6.260605812072754
    5. ' ' → logprob: -6.385605812072754
    6. ':' → logprob: -7.135605812072754
    7. ')' → logprob: -8.010605812072754
    8. ' 
' → logprob: -8.885605812072754
    9. 'i' → logprob: -9.385605812072754
    10. 'if' → logprob: -9.510605812072754

Token 135: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16983190178871155
    2. ' ab' → logprob: -2.0448319911956787
    3. 'i' → logprob: -4.5448317527771
    4. '(i' → logprob: -5.7948317527771
    5. '(' → logprob: -6.2948317527771
    6. ' (' → logprob: -6.5448317527771
    7. ' _' → logprob: -6.5448317527771
    8. ' item' → logprob: -6.7948317527771
    9. '_' → logprob: -6.9198317527771
    10. ' x' → logprob: -7.0448317527771

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03180070221424103
    2. 'in' → logprob: -3.6568007469177246
    3. ' ' → logprob: -5.406800746917725
    4. 'range' → logprob: -7.656800746917725
    5. ' range' → logprob: -7.781800746917725
    6. '  ' → logprob: -9.906800270080566
    7. ' n' → logprob: -10.906800270080566
    8. 'n' → logprob: -11.281800270080566
    9. ' i' → logprob: -11.906800270080566
    10. ' ' → logprob: -12.656800270080566

Token 137: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.021845441311597824
    2. 'range' → logprob: -3.8968453407287598
    3. ' ab' → logprob: -6.77184534072876
    4. ' ' → logprob: -9.771845817565918
    5. 'ab' → logprob: -10.396845817565918
    6. ' ran' → logprob: -10.646845817565918
    7. ' hen' → logprob: -11.771845817565918
    8. ' ra' → logprob: -11.896845817565918
    9. '  ' → logprob: -12.209345817565918
    10. '(range' → logprob: -12.521845817565918

Token 138: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7732228636741638
    2. '(range' → logprob: -1.3982229232788086
    3. '(' → logprob: -1.8982229232788086
    4. ' range' → logprob: -2.5232229232788086
    5. ' (' → logprob: -2.8982229232788086
    6. 'range' → logprob: -5.898222923278809
    7. '(ab' → logprob: -6.773222923278809
    8. ' n' → logprob: -7.273222923278809
    9. '(len' → logprob: -7.523222923278809
    10. '(r' → logprob: -7.898222923278809

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19200102984905243
    2. '):
' → logprob: -2.0670011043548584
    3. '+' → logprob: -3.3170011043548584
    4. ' ):' → logprob: -5.442000865936279
    5. ' +' → logprob: -6.442000865936279
    6. ',' → logprob: -6.567000865936279
    7. '-' → logprob: -6.692000865936279
    8. '+n' → logprob: -7.692000865936279
    9. ' ):
' → logprob: -7.692000865936279
    10. ')' → logprob: -7.817000865936279

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3015296161174774
    2. ' if' → logprob: -1.6765296459197998
    3. ' d' → logprob: -2.9265296459198
    4. ' ' → logprob: -4.301529407501221
    5. 'd' → logprob: -6.801529407501221
    6. 'if' → logprob: -7.051529407501221
    7. ' t' → logprob: -7.426529407501221
    8. ' s' → logprob: -7.676529407501221
    9. ' hen' → logprob: -7.676529407501221
    10. '    
' → logprob: -7.801529407501221

Token 141: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24206408858299255
    2. 'if' → logprob: -1.867064118385315
    3. '   ' → logprob: -4.492063999176025
    4. ' val' → logprob: -4.492063999176025
    5. ' d' → logprob: -4.992063999176025
    6. 'd' → logprob: -5.242063999176025
    7. ' a' → logprob: -5.242063999176025
    8. ' v' → logprob: -5.492063999176025
    9. 'a' → logprob: -5.617063999176025
    10. ' t' → logprob: -5.617063999176025

Token 142: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08655263483524323
    2. '=' → logprob: -2.711552619934082
    3. ',' → logprob: -4.211552619934082
    4. ' ' → logprob: -6.836552619934082
    5. ' ,' → logprob: -7.961552619934082
    6. ')' → logprob: -9.586552619934082
    7. 's' → logprob: -10.461552619934082
    8. ' =
' → logprob: -10.836552619934082
    9. '   ' → logprob: -11.211552619934082
    10. '_' → logprob: -11.211552619934082

Token 143: ' c' (ID: 274)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.14074978232383728
    2. ' idx' → logprob: -2.14074969291687
    3. 'index' → logprob: -5.140749931335449
    4. 'id' → logprob: -5.640749931335449
    5. 'num' → logprob: -6.265749931335449
    6. 'ind' → logprob: -7.140749931335449
    7. '_,' → logprob: -7.265749931335449
    8. ' index' → logprob: -8.14074993133545
    9. 'pos' → logprob: -9.39074993133545
    10. 'player' → logprob: -9.64074993133545

Token 144: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5096025466918945
    2. ' =' → logprob: -1.7596025466918945
    3. ',' → logprob: -2.0096025466918945
    4. 'ount' → logprob: -2.5096025466918945
    5. 'ont' → logprob: -2.5096025466918945
    6. 'id' → logprob: -2.6346025466918945
    7. 'olor' → logprob: -2.6346025466918945
    8. '_id' → logprob: -3.5096025466918945
    9. 'index' → logprob: -3.6346025466918945
    10. 'ol' → logprob: -3.6346025466918945

Token 145: ' mab' (ID: 30147)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.6696972846984863
    2. 'k' → logprob: -1.7946972846984863
    3. 't' → logprob: -2.0446972846984863
    4. 'p' → logprob: -2.6696972846984863
    5. 's' → logprob: -2.7946972846984863
    6. 'x' → logprob: -3.0446972846984863
    7. 'typ' → logprob: -3.0446972846984863
    8. 'kind' → logprob: -3.0446972846984863
    9. 'tp' → logprob: -3.0446972846984863
    10. 'l' → logprob: -3.2946972846984863

Token 146: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24736617505550385
    2. 'a' → logprob: -2.872366189956665
    3. 'ar' → logprob: -3.122366189956665
    4. 'u' → logprob: -3.497366189956665
    5. 'ari' → logprob: -3.622366189956665
    6. 'er' → logprob: -4.997365951538086
    7. 'eru' → logprob: -4.997365951538086
    8. 'all' → logprob: -5.122365951538086
    9. 'aru' → logprob: -5.372365951538086
    10. 'o' → logprob: -5.372365951538086

Token 147: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.01610592193901539
    2. 'ab' → logprob: -4.141106128692627
    3. ' ' → logprob: -10.391105651855469
    4. '(ab' → logprob: -11.641105651855469
    5. 'abel' → logprob: -11.766105651855469
    6. '_ab' → logprob: -12.766105651855469
    7. '  ' → logprob: -13.203605651855469
    8. 'abl' → logprob: -13.203605651855469
    9. '   ' → logprob: -13.266105651855469
    10. '#ab' → logprob: -13.578605651855469

Token 148: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -4.0126840758603066e-05
    2. 'a' → logprob: -11.375040054321289
    3. 'oll' → logprob: -11.625040054321289
    4. ']' → logprob: -12.000040054321289
    5. '_all' → logprob: -13.250040054321289
    6. '[i' → logprob: -13.750040054321289
    7. 'All' → logprob: -13.875040054321289
    8. '```' → logprob: -14.000040054321289
    9. '][' → logprob: -14.125040054321289
    10. '[' → logprob: -14.125040054321289

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038158686365932226
    2. '[' → logprob: -5.878815650939941
    3. '[n' → logprob: -7.253815650939941
    4. ' [' → logprob: -9.128815650939941
    5. ']' → logprob: -10.128815650939941
    6. ' i' → logprob: -10.503815650939941
    7. ')' → logprob: -10.628815650939941
    8. 'i' → logprob: -10.878815650939941
    9. '[
' → logprob: -11.253815650939941
    10. '   ' → logprob: -11.378815650939941

Token 150: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0839623212814331
    2. ')
' → logprob: -2.8339624404907227
    3. ']' → logprob: -4.208962440490723
    4. '])' → logprob: -5.958962440490723
    5. '):' → logprob: -7.208962440490723
    6. ']
' → logprob: -7.458962440490723
    7. '[' → logprob: -7.583962440490723
    8. '):
' → logprob: -7.708962440490723
    9. '   ' → logprob: -7.833962440490723
    10. ' )' → logprob: -7.958962440490723

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023262133821845055
    2. ' ' → logprob: -5.398262023925781
    3. '
' → logprob: -5.523262023925781
    4. '  ' → logprob: -5.773262023925781
    5. ' if' → logprob: -5.773262023925781
    6. '<|end|>' → logprob: -6.648262023925781
    7. '  
' → logprob: -6.773262023925781
    8. '    
' → logprob: -6.898262023925781
    9. '   
' → logprob: -7.148262023925781
    10. ' 
' → logprob: -7.273262023925781

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5986078381538391
    2. ' if' → logprob: -0.8486078381538391
    3. 'd' → logprob: -4.473608016967773
    4. '   ' → logprob: -4.723608016967773
    5. ' d' → logprob: -6.473608016967773
    6. ' ' → logprob: -8.598608016967773
    7. '```' → logprob: -9.223608016967773
    8. '
' → logprob: -9.348608016967773
    9. ' 
' → logprob: -9.598608016967773
    10. 't' → logprob: -10.473608016967773

Token 153: ' t' (ID: 260)
  Prédit: ' mab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mab' → logprob: -0.015898514539003372
    2. ' c' → logprob: -4.890898704528809
    3. 'c' → logprob: -5.015898704528809
    4. 'm' → logprob: -6.890898704528809
    5. '(m' → logprob: -9.140898704528809
    6. ' ' → logprob: -9.140898704528809
    7. ' (' → logprob: -9.765898704528809
    8. '(c' → logprob: -9.765898704528809
    9. ' m' → logprob: -10.015898704528809
    10. '(' → logprob: -10.015898704528809

Token 154: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.044878795742988586
    2. '==' → logprob: -4.169878959655762
    3. 'is' → logprob: -4.419878959655762
    4. ' ==' → logprob: -4.419878959655762
    5. ' !=' → logprob: -6.294878959655762
    6. '!=' → logprob: -6.294878959655762
    7. ' ' → logprob: -7.794878959655762
    8. '=' → logprob: -10.169878959655762
    9. ' None' → logprob: -10.169878959655762
    10. ')' → logprob: -10.169878959655762

Token 155: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.22568194568157196
    2. ' None' → logprob: -1.6006819009780884
    3. ' not' → logprob: -8.725682258605957
    4. 'not' → logprob: -9.725682258605957
    5. ' ' → logprob: -11.475682258605957
    6. '(None' → logprob: -11.725682258605957
    7. 'N' → logprob: -11.850682258605957
    8. ' hen' → logprob: -12.350682258605957
    9. 'Hen' → logprob: -12.725682258605957
    10. '=None' → logprob: -13.100682258605957

Token 156: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0033892178907990456
    2. ' None' → logprob: -5.753389358520508
    3. 'c' → logprob: -9.378389358520508
    4. 'hen' → logprob: -10.378389358520508
    5. '(None' → logprob: -10.753389358520508
    6. 'N' → logprob: -10.878389358520508
    7. 'Hen' → logprob: -11.003389358520508
    8. 'm' → logprob: -11.753389358520508
    9. ' hen' → logprob: -12.253389358520508
    10. '=None' → logprob: -12.753389358520508

Token 157: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010528452694416046
    2. 'and' → logprob: -4.635528564453125
    3. ' ' → logprob: -7.635528564453125
    4. ':' → logprob: -9.010528564453125
    5. '   ' → logprob: -9.760528564453125
    6. '    ' → logprob: -10.385528564453125
    7. ':
' → logprob: -10.760528564453125
    8. '==' → logprob: -11.260528564453125
    9. ' ==' → logprob: -11.760528564453125
    10. ' a' → logprob: -11.885528564453125

Token 158: ' t' (ID: 260)
  Prédit: ' mab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mab' → logprob: -0.11932303756475449
    2. 'c' → logprob: -3.2443230152130127
    3. 'm' → logprob: -3.4943230152130127
    4. ' c' → logprob: -4.244323253631592
    5. ' val' → logprob: -4.869323253631592
    6. 't' → logprob: -4.994323253631592
    7. ' t' → logprob: -5.119323253631592
    8. 'val' → logprob: -5.369323253631592
    9. ' m' → logprob: -7.119323253631592
    10. 'ab' → logprob: -7.369323253631592

Token 159: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2059288024902344
    2. ' !=' → logprob: -1.2059288024902344
    3. '==' → logprob: -1.5809288024902344
    4. '!=' → logprob: -1.7059288024902344
    5. '[' → logprob: -4.455928802490234
    6. ' ' → logprob: -6.830928802490234
    7. '=' → logprob: -7.955928802490234
    8. ' <' → logprob: -8.830928802490234
    9. '<' → logprob: -9.080928802490234
    10. ' >' → logprob: -9.330928802490234

Token 160: ' mab' (ID: 30147)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.053729478269815445
    2. 'm' → logprob: -3.05372953414917
    3. ' c' → logprob: -5.80372953414917
    4. 'ab' → logprob: -7.55372953414917
    5. ' mab' → logprob: -7.67872953414917
    6. '(c' → logprob: -8.053729057312012
    7. 'b' → logprob: -9.053729057312012
    8. '(m' → logprob: -9.116229057312012
    9. ' m' → logprob: -9.241229057312012
    10. '(' → logprob: -9.553729057312012

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5608102679252625
    2. ' and' → logprob: -1.0608103275299072
    3. 'and' → logprob: -2.6858103275299072
    4. ':
' → logprob: -4.310810089111328
    5. ' :' → logprob: -7.685810089111328
    6. ')' → logprob: -7.810810089111328
    7. ' ' → logprob: -8.435810089111328
    8. '   ' → logprob: -9.185810089111328
    9. '):' → logprob: -9.310810089111328
    10. '<|end|>' → logprob: -10.435810089111328

Token 162: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8326948881149292
    2. '       ' → logprob: -1.3326948881149292
    3. ':' → logprob: -1.7076948881149292
    4. ' and' → logprob: -2.4576950073242188
    5. '   ' → logprob: -3.5826950073242188
    6. 'and' → logprob: -6.332695007324219
    7. '):
' → logprob: -6.457695007324219
    8. ' :
' → logprob: -7.082695007324219
    9. '):' → logprob: -7.707695007324219
    10. ' ' → logprob: -7.957695007324219

Token 163: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.550468385219574
    2. 'h' (adapté à ' h') → logprob: -1.4254684448242188
    3. ' d' → logprob: -2.3004684448242188
    4. '       ' → logprob: -3.6754684448242188
    5. '           ' → logprob: -4.175468444824219
    6. 'd' → logprob: -4.175468444824219
    7. '   ' → logprob: -4.675468444824219
    8. ' t' → logprob: -4.800468444824219
    9. ' break' → logprob: -5.925468444824219
    10. 't' → logprob: -6.550468444824219

Token 164: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0001600347168277949
    2. 'a' → logprob: -9.875160217285156
    3. 'nte' → logprob: -10.125160217285156
    4. 'an' → logprob: -10.500160217285156
    5. ' ante' → logprob: -12.000160217285156
    6. ' ' → logprob: -12.375160217285156
    7. 'antee' → logprob: -12.625160217285156
    8. '=' → logprob: -13.000160217285156
    9. 'anter' → logprob: -13.000160217285156
    10. '
' → logprob: -13.125160217285156

Token 165: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.375538163818419e-05
    2. 'い' → logprob: -9.625083923339844
    3. 'и' → logprob: -12.500083923339844
    4. '   ' → logprob: -13.000083923339844
    5. ' i' → logprob: -13.375083923339844
    6. '=' → logprob: -13.500083923339844
    7. '
' → logprob: -13.625083923339844
    8. '```' → logprob: -14.000083923339844
    9. '       ' → logprob: -14.125083923339844
    10. ' =' → logprob: -14.250083923339844

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22697928547859192
    2. '=' → logprob: -1.6019792556762695
    3. '=False' → logprob: -6.4769792556762695
    4. '=True' → logprob: -10.85197925567627
    5. 'False' → logprob: -12.60197925567627
    6. ' ' → logprob: -13.97697925567627
    7. ' False' → logprob: -14.22697925567627
    8. ')' → logprob: -14.35197925567627
    9. '<|end|>' → logprob: -14.35197925567627
    10. '＝' → logprob: -14.60197925567627

Token 167: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0014038024237379432
    2. ' False' → logprob: -7.00140380859375
    3. 'True' → logprob: -7.62640380859375
    4. 'F' → logprob: -14.12640380859375
    5. ' True' → logprob: -14.12640380859375
    6. '   ' → logprob: -14.25140380859375
    7. '0' → logprob: -14.62640380859375
    8. '(False' → logprob: -14.75140380859375
    9. '=False' → logprob: -15.00140380859375
    10. ' ' → logprob: -15.12640380859375

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9617775082588196
    2. '<|end|>' → logprob: -0.9617775082588196
    3. '   ' → logprob: -1.5867774486541748
    4. '
' → logprob: -4.586777687072754
    5. ' ' → logprob: -4.711777687072754
    6. ')' → logprob: -5.461777687072754
    7. '    ' → logprob: -6.461777687072754
    8. '  ' → logprob: -6.461777687072754
    9. '           ' → logprob: -7.461777687072754
    10. ',' → logprob: -7.586777687072754

Token 169: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18070238828659058
    2. '   ' → logprob: -1.8057024478912354
    3. '    ' → logprob: -8.305702209472656
    4. '<|end|>' → logprob: -8.555702209472656
    5. ' ' → logprob: -8.680702209472656
    6. '  ' → logprob: -9.555702209472656
    7. '      ' → logprob: -9.805702209472656
    8. '        ' → logprob: -10.180702209472656
    9. '     ' → logprob: -10.180702209472656
    10. ' break' → logprob: -10.305702209472656

Token 170: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10799895226955414
    2. 't' → logprob: -2.357998847961426
    3. ' t' → logprob: -4.982998847961426
    4. ' if' → logprob: -7.857998847961426
    5. 'if' (adapté à ' if') → logprob: -8.482998847961426
    6. ' ' → logprob: -9.357998847961426
    7. '    
' → logprob: -9.857998847961426
    8. '       ' → logprob: -9.982998847961426
    9. 'd' → logprob: -10.107998847961426
    10. '  ' → logprob: -10.732998847961426

Token 171: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9160941243171692
    2. 'm' → logprob: -1.4160940647125244
    3. ' c' → logprob: -1.6660940647125244
    4. ' mab' → logprob: -1.9160940647125244
    5. ' t' → logprob: -5.0410943031311035
    6. 't' → logprob: -5.0410943031311035
    7. ' m' → logprob: -5.1660943031311035
    8. ' ' → logprob: -7.7910943031311035
    9. '   ' → logprob: -8.041093826293945
    10. 'val' → logprob: -8.228593826293945

Token 172: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6353960633277893
    2. ' in' → logprob: -0.7603960633277893
    3. 'in' → logprob: -6.7603960037231445
    4. 'not' → logprob: -7.3853960037231445
    5. ' ==' → logprob: -7.3853960037231445
    6. ' ' → logprob: -8.135396003723145
    7. ' !=' → logprob: -9.760396003723145
    8. '==' → logprob: -10.510396003723145
    9. '<|end|>' → logprob: -12.510396003723145
    10. ')' → logprob: -12.885396003723145

Token 173: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048587486147880554
    2. ' d' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.423587799072266
    4. ')d' → logprob: -17.548587799072266
    5. '<|end|>' → logprob: -18.173587799072266
    6. 'D' → logprob: -18.923587799072266
    7. '   ' → logprob: -19.048587799072266
    8. '  ' → logprob: -19.423587799072266
    9. '
' → logprob: -19.548587799072266
    10. ')' → logprob: -19.673587799072266

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18009334802627563
    2. ':
' → logprob: -1.8050932884216309
    3. '):
' → logprob: -8.930093765258789
    4. '):' → logprob: -9.930093765258789
    5. '():
' → logprob: -10.555093765258789
    6. ')' → logprob: -10.930093765258789
    7. ' and' → logprob: -10.930093765258789
    8. '   ' → logprob: -11.055093765258789
    9. ' or' → logprob: -11.180093765258789
    10. '=' → logprob: -11.305093765258789

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.186189204454422
    2. ' d' → logprob: -1.9361891746520996
    3. 'd' → logprob: -3.8111891746520996
    4. '   ' → logprob: -6.3111891746521
    5. ' continue' → logprob: -7.1861891746521
    6. '```' → logprob: -7.8111891746521
    7. 'continue' → logprob: -7.9361891746521
    8. ')d' → logprob: -10.561189651489258
    9. ' ' → logprob: -11.061189651489258
    10. '<|end|>' → logprob: -11.061189651489258

Token 176: ' print' (ID: 2123)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1955762356519699
    2. ' break' → logprob: -2.0705761909484863
    3. 'h' → logprob: -3.5705761909484863
    4. ' d' → logprob: -4.570576190948486
    5. ' continue' → logprob: -4.820576190948486
    6. 'break' → logprob: -6.320576190948486
    7. ' hen' → logprob: -7.195576190948486
    8. ' t' → logprob: -7.320576190948486
    9. 'continue' → logprob: -7.695576190948486
    10. ' ans' → logprob: -7.945576190948486

Token 177: '(ans' (ID: 70054)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0194971561431885
    2. '(' → logprob: -1.1444971561431885
    3. '(-' → logprob: -1.7694971561431885
    4. '(i' → logprob: -2.6444971561431885
    5. '('' → logprob: -2.7694971561431885
    6. '(val' → logprob: -4.894496917724609
    7. '(ans' → logprob: -5.519496917724609
    8. '(ab' → logprob: -6.394496917724609
    9. '(c' → logprob: -6.644496917724609
    10. '(t' → logprob: -7.269496917724609

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017868020804598927
    2. '-' → logprob: -6.376786708831787
    3. ')' → logprob: -10.001787185668945
    4. ' -' → logprob: -11.251787185668945
    5. ' ' → logprob: -11.876787185668945
    6. '2' → logprob: -12.001787185668945
    7. '"' → logprob: -12.376787185668945
    8. ''' → logprob: -13.876787185668945
    9. '
' → logprob: -13.876787185668945
    10. '```' → logprob: -14.126787185668945

Token 179: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12720516324043274
    2. ')' → logprob: -2.1272051334381104
    3. ')
' → logprob: -8.502204895019531
    4. ' )
' → logprob: -9.877204895019531
    5. ' )' → logprob: -12.002204895019531
    6. ')

' → logprob: -12.377204895019531
    7. ')`
' → logprob: -13.002204895019531
    8. '
' → logprob: -13.127204895019531
    9. '())
' → logprob: -13.627204895019531
    10. '-' → logprob: -13.752204895019531

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026601969730108976
    2. '   ' → logprob: -7.002660274505615
    3. ')' → logprob: -7.127660274505615
    4. '
' → logprob: -7.627660274505615
    5. '           ' → logprob: -9.002659797668457
    6. '<|end|>' → logprob: -9.377659797668457
    7. '        
' → logprob: -9.502659797668457
    8. ' 
' → logprob: -10.127659797668457
    9. '    
' → logprob: -10.627659797668457
    10. ' ' → logprob: -10.877659797668457

Token 181: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062250327318906784
    2. 'exit' (adapté à ' exit') → logprob: -3.6872503757476807
    3. 'break' → logprob: -4.562250137329102
    4. ' exit' → logprob: -4.812250137329102
    5. ' break' → logprob: -4.812250137329102
    6. '        
' → logprob: -6.062250137329102
    7. ' 
' → logprob: -6.312250137329102
    8. '
' → logprob: -6.312250137329102
    9. '    
' → logprob: -7.062250137329102
    10. '	break' → logprob: -7.562250137329102

Token 182: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006066487403586507
    2. '(' → logprob: -7.500606536865234
    3. '()
' → logprob: -9.875606536865234
    4. '())' → logprob: -14.250606536865234
    5. '()\' → logprob: -14.625606536865234
    6. '()`' → logprob: -15.000606536865234
    7. ' ()' → logprob: -15.250606536865234
    8. '()
' → logprob: -16.000606536865234
    9. '()(' → logprob: -16.250606536865234
    10. '()<' → logprob: -16.375606536865234

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6383195519447327
    2. 'd' → logprob: -0.8883195519447327
    3. ' d' → logprob: -3.138319492340088
    4. '    
' → logprob: -4.513319492340088
    5. ' 
' → logprob: -6.138319492340088
    6. '   
' → logprob: -6.888319492340088
    7. '	d' → logprob: -7.138319492340088
    8. '  
' → logprob: -7.138319492340088
    9. ' ' → logprob: -7.513319492340088
    10. '  ' → logprob: -8.263319969177246

Token 184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011814815923571587
    2. ' d' → logprob: -4.761814594268799
    3. '   ' → logprob: -5.761814594268799
    4. '```' → logprob: -11.011815071105957
    5. ' ' → logprob: -11.386815071105957
    6. '    
' → logprob: -12.511815071105957
    7. ' 
' → logprob: -12.636815071105957
    8. '
' → logprob: -13.011815071105957
    9. '``' → logprob: -13.011815071105957
    10. '  ' → logprob: -13.136815071105957

Token 185: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.014168680645525455
    2. '.' → logprob: -4.264168739318848
    3. '.insert' → logprob: -13.889168739318848
    4. '.setdefault' → logprob: -13.889168739318848
    5. ' .' → logprob: -14.014168739318848
    6. '.append' → logprob: -14.514168739318848
    7. '.Add' → logprob: -14.889168739318848
    8. ').' → logprob: -15.014168739318848
    9. '‌.' → logprob: -15.264168739318848
    10. 'add' → logprob: -15.264168739318848

Token 186: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -16.001171112060547
    4. '((' → logprob: -16.251171112060547
    5. '()' → logprob: -17.251171112060547
    6. '(C' → logprob: -17.376171112060547
    7. '(i' → logprob: -17.751171112060547
    8. '(s' → logprob: -18.626171112060547
    9. '(

' → logprob: -19.001171112060547
    10. ' (' → logprob: -19.126171112060547

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005548207554966211
    2. ')
' → logprob: -7.500555038452148
    3. ' )' → logprob: -13.750555038452148
    4. ')

' → logprob: -15.125555038452148
    5. ')return' → logprob: -16.00055503845215
    6. '))' → logprob: -16.37555503845215
    7. ')
' → logprob: -16.75055503845215
    8. ')#' → logprob: -17.37555503845215
    9. '   ' → logprob: -17.50055503845215
    10. '),' → logprob: -17.62555503845215

Token 188: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10280440002679825
    2. ' t' → logprob: -3.22780442237854
    3. '   ' → logprob: -3.22780442237854
    4. '	t' → logprob: -4.227804183959961
    5. ' ' → logprob: -5.977804183959961
    6. ' 
' → logprob: -8.352804183959961
    7. '_t' → logprob: -8.977804183959961
    8. '    ' → logprob: -8.977804183959961
    9. '<|end|>' → logprob: -9.227804183959961
    10. '
' → logprob: -9.602804183959961

Token 189: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.008107767440378666
    2. 'val' → logprob: -5.508107662200928
    3. 'ans' → logprob: -5.633107662200928
    4. 'if' → logprob: -8.508108139038086
    5. ' t' → logprob: -9.508108139038086
    6. 'hen' → logprob: -9.508108139038086
    7. '   ' → logprob: -9.883108139038086
    8. '    
' → logprob: -12.383108139038086
    9. ' ' → logprob: -12.383108139038086
    10. '    ' → logprob: -13.008108139038086

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519315779209137
    2. ' =' → logprob: -1.5019315481185913
    3. '＝' → logprob: -13.501931190490723
    4. '=}' → logprob: -15.376931190490723
    5. ',' → logprob: -15.626931190490723
    6. '=

' → logprob: -16.37693214416504
    7. '=
' → logprob: -16.50193214416504
    8. '=end' → logprob: -16.75193214416504
    9. '==' → logprob: -16.87693214416504
    10. '=i' → logprob: -16.87693214416504

Token 191: ' mab' (ID: 30147)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00018113377154804766
    2. ' mab' → logprob: -8.625181198120117
    3. 'ab' → logprob: -15.000181198120117
    4. ' ' → logprob: -15.250181198120117
    5. 'mb' → logprob: -15.250181198120117
    6. '	m' → logprob: -15.625181198120117
    7. 'mam' → logprob: -15.875181198120117
    8. '<m' → logprob: -16.375181198120117
    9. ' m' → logprob: -16.625181198120117
    10. 'b' → logprob: -16.750181198120117

Token 192: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3648340404033661
    2. '<|end|>' → logprob: -2.2398340702056885
    3. ' ' → logprob: -2.8648340702056885
    4. 'for' → logprob: -3.3648340702056885
    5. 'print' → logprob: -3.8648340702056885
    6. 'ans' → logprob: -3.9898340702056885
    7. ' for' → logprob: -4.489833831787109
    8. 'n' → logprob: -4.739833831787109
    9. ' )' → logprob: -4.864833831787109
    10. 'if' → logprob: -5.239833831787109

Token 193: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9868229031562805
    2. 'ans' → logprob: -1.1118228435516357
    3. ')' → logprob: -1.4868228435516357
    4. 'for' → logprob: -4.486823081970215
    5. ' hen' → logprob: -5.111823081970215
    6. '<|end|>' → logprob: -5.111823081970215
    7. ' ans' → logprob: -5.236823081970215
    8. '+' → logprob: -5.361823081970215
    9. ' ' → logprob: -5.361823081970215
    10. 'if' → logprob: -5.361823081970215

Token 194: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.11720063537359238
    2. ' not' → logprob: -2.3672006130218506
    3. ' ' → logprob: -5.36720085144043
    4. ' hen' → logprob: -5.49220085144043
    5. ' len' → logprob: -5.86720085144043
    6. ' t' → logprob: -6.11720085144043
    7. ' n' → logprob: -6.49220085144043
    8. 'h' → logprob: -7.36720085144043
    9. ' d' → logprob: -7.74220085144043
    10. 'not' → logprob: -8.36720085144043

Token 195: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.002182976808398962
    2. 'tei' → logprob: -6.877182960510254
    3. 'anti' → logprob: -7.377182960510254
    4. 'nte' → logprob: -8.252182960510254
    5. '   ' → logprob: -10.127182960510254
    6. 'te' → logprob: -10.252182960510254
    7. 'ente' → logprob: -10.377182960510254
    8. '1' → logprob: -11.002182960510254
    9. '```' → logprob: -11.002182960510254
    10. '
' → logprob: -11.252182960510254

Token 196: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.688212614681106e-05
    2. 'い' → logprob: -11.250017166137695
    3. 'и' → logprob: -13.250017166137695
    4. 'it' → logprob: -15.125017166137695
    5. 'і' → logprob: -15.375017166137695
    6. ''i' → logprob: -15.500017166137695
    7. 'I' → logprob: -15.750017166137695
    8. 'ي' → logprob: -15.875017166137695
    9. '[i' → logprob: -16.250017166137695
    10. '   ' → logprob: -16.250017166137695

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008380056358873844
    2. ' ==' → logprob: -5.383379936218262
    3. '==' → logprob: -5.883379936218262
    4. ' =' → logprob: -7.633379936218262
    5. '=' → logprob: -8.383379936218262
    6. ' :' → logprob: -8.758379936218262
    7. ':
' → logprob: -9.508379936218262
    8. ' and' → logprob: -11.508379936218262
    9. '=True' → logprob: -12.133379936218262
    10. 'and' → logprob: -13.258379936218262

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06501851975917816
    2. ' print' → logprob: -3.31501841545105
    3. 'print' → logprob: -3.69001841545105
    4. ' ans' → logprob: -6.940018653869629
    5. '```' → logprob: -8.065018653869629
    6. 'ans' → logprob: -8.315018653869629
    7. ' for' → logprob: -10.315018653869629
    8. '	print' → logprob: -11.190018653869629
    9. '(ans' → logprob: -11.565018653869629
    10. '	ans' → logprob: -11.565018653869629

Token 199: ' print' (ID: 2123)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.39217567443847656
    2. 'print' (adapté à ' print') → logprob: -1.6421756744384766
    3. 'hen' → logprob: -2.6421756744384766
    4. 'if' → logprob: -3.5171756744384766
    5. ' hen' → logprob: -5.017175674438477
    6. 'for' → logprob: -5.392175674438477
    7. 'val' → logprob: -5.642175674438477
    8. ' ans' → logprob: -6.392175674438477
    9. 'ab' → logprob: -6.517175674438477
    10. '   ' → logprob: -6.642175674438477

Token 200: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.046044837683439255
    2. '(ab' → logprob: -3.1710448265075684
    3. '(' → logprob: -6.046044826507568
    4. '(h' → logprob: -8.546045303344727
    5. '()' → logprob: -8.671045303344727
    6. '(abs' → logprob: -8.796045303344727
    7. 'ans' → logprob: -9.421045303344727
    8. '(max' → logprob: -11.421045303344727
    9. '(an' → logprob: -11.546045303344727
    10. '(answer' → logprob: -11.671045303344727

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. 'all' → logprob: -11.125015258789062
    3. '[' → logprob: -15.500015258789062
    4. ')' → logprob: -15.500015258789062
    5. '2' → logprob: -15.625015258789062
    6. '```' → logprob: -16.500015258789062
    7. 'ab' → logprob: -17.187515258789062
    8. 'ball' → logprob: -17.562515258789062
    9. '...' → logprob: -17.625015258789062
    10. ' ' → logprob: -17.687515258789062

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037445008754730225
    2. '-' → logprob: -3.912445068359375
    3. '+' → logprob: -4.787445068359375
    4. ' -' → logprob: -5.162445068359375
    5. ' +' → logprob: -6.537445068359375
    6. ')
' → logprob: -7.412445068359375
    7. '//' → logprob: -8.287445068359375
    8. ' )' → logprob: -8.662445068359375
    9. ' //' → logprob: -10.037445068359375
    10. '+)' → logprob: -10.537445068359375

Token 203: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16788248717784882
    2. ' else' → logprob: -2.1678824424743652
    3. ')' → logprob: -3.9178824424743652
    4. 'elif' → logprob: -4.792882442474365
    5. ' hen' → logprob: -5.167882442474365
    6. '<|end|>' → logprob: -6.792882442474365
    7. '
' → logprob: -6.917882442474365
    8. ' ' → logprob: -7.042882442474365
    9. '0' → logprob: -7.542882442474365
    10. 'n' → logprob: -7.917882442474365

Token 204: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12456976622343063
    2. '   ' → logprob: -2.3745696544647217
    3. 'elif' → logprob: -4.124569892883301
    4. 'exit' (adapté à ' exit') → logprob: -4.999569892883301
    5. ' else' → logprob: -7.249569892883301
    6. ' exit' → logprob: -8.8745698928833
    7. ')' → logprob: -9.4995698928833
    8. '	exit' → logprob: -9.9995698928833
    9. 'continue' → logprob: -10.6245698928833
    10. ' ' → logprob: -10.8745698928833

Token 205: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5822400857578032e-05
    2. '()
' → logprob: -11.250025749206543
    3. '(' → logprob: -11.500025749206543
    4. '()`' → logprob: -14.375025749206543
    5. '()

' → logprob: -14.500025749206543
    6. '()\' → logprob: -14.625025749206543
    7. ' ()' → logprob: -15.625025749206543
    8. '()]' → logprob: -15.625025749206543
    9. '()?' → logprob: -15.875025749206543
    10. '();' → logprob: -15.875025749206543

Token 206: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.420518159866333
    2. ')' → logprob: -1.670518159866333
    3. ' hen' → logprob: -2.545518159866333
    4. 'a' → logprob: -2.670518159866333
    5. 'n' → logprob: -2.670518159866333
    6. 'ans' → logprob: -3.045518159866333
    7. '[' → logprob: -3.295518159866333
    8. ' 
' → logprob: -3.795518159866333
    9. '(' → logprob: -3.795518159866333
    10. ' for' → logprob: -3.920518159866333

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0055741677060723305
    2. '1' → logprob: -5.6305742263793945
    3. ' =' → logprob: -6.3805742263793945
    4. '=' → logprob: -8.755574226379395
    5. '0' → logprob: -9.630574226379395
    6. '3' → logprob: -11.005574226379395
    7. 'all' → logprob: -11.255574226379395
    8. ' ' → logprob: -11.505574226379395
    9. ',' → logprob: -12.255574226379395
    10. '```' → logprob: -13.755574226379395

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076343161053955555
    2. '=' → logprob: -4.882634162902832
    3. ' +=' → logprob: -11.132634162902832
    4. ' ' → logprob: -11.382634162902832
    5. ' =
' → logprob: -15.007634162902832
    6. '1' → logprob: -15.132634162902832
    7. ' =[' → logprob: -15.132634162902832
    8. '＝' → logprob: -15.257634162902832
    9. ' ' → logprob: -15.757634162902832
    10. ',' → logprob: -15.757634162902832

Token 209: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.570478618144989
    2. 'ans' → logprob: -1.6954786777496338
    3. 'ab' → logprob: -2.695478677749634
    4. ' ab' → logprob: -2.945478677749634
    5. 'hen' → logprob: -2.945478677749634
    6. ' hen' → logprob: -3.195478677749634
    7. ' ' → logprob: -4.070478439331055
    8. ' ans' → logprob: -4.195478439331055
    9. 'sum' → logprob: -6.070478439331055
    10. 'abs' → logprob: -7.195478439331055

Token 210: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6716690063476562
    2. '[' → logprob: -2.0466690063476562
    3. '[]' → logprob: -2.1716690063476562
    4. ' for' → logprob: -2.2966690063476562
    5. ' ' → logprob: -3.2966690063476562
    6. '(' → logprob: -3.2966690063476562
    7. ' =' → logprob: -4.171669006347656
    8. ')' → logprob: -4.421669006347656
    9. ' (' → logprob: -5.046669006347656
    10. '=' → logprob: -5.046669006347656

Token 211: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1545419692993164
    2. ' i' → logprob: -2.0295419692993164
    3. 'val' → logprob: -5.529541969299316
    4. 'x' → logprob: -6.654541969299316
    5. ' val' → logprob: -6.779541969299316
    6. '_' → logprob: -6.904541969299316
    7. '(i' → logprob: -7.279541969299316
    8. '(' → logprob: -7.654541969299316
    9. 'a' → logprob: -8.029541969299316
    10. 'n' → logprob: -8.154541969299316

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04891526326537132
    2. 'in' → logprob: -3.048915147781372
    3. ' ' → logprob: -8.298914909362793
    4. ' i' → logprob: -10.923914909362793
    5. 'n' → logprob: -11.298914909362793
    6. '   ' → logprob: -11.548914909362793
    7. ' n' → logprob: -11.798914909362793
    8. 'range' → logprob: -11.923914909362793
    9. '  ' → logprob: -12.423914909362793
    10. 'i' → logprob: -12.548914909362793

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14330998063087463
    2. ' range' → logprob: -2.018310070037842
    3. 'ab' → logprob: -8.018309593200684
    4. ' ab' → logprob: -8.643309593200684
    5. 'ran' → logprob: -10.268309593200684
    6. 'rang' → logprob: -11.143309593200684
    7. '(range' → logprob: -11.268309593200684
    8. ' ' → logprob: -11.643309593200684
    9. ' in' → logprob: -12.018309593200684
    10. 'ra' → logprob: -12.018309593200684

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002826038980856538
    2. '(' → logprob: -7.00282621383667
    3. 'n' → logprob: -7.12782621383667
    4. 'range' → logprob: -7.50282621383667
    5. '(range' → logprob: -7.62782621383667
    6. ' range' → logprob: -10.002825736999512
    7. '(len' → logprob: -11.752825736999512
    8. ' (' → logprob: -11.877825736999512
    9. ' n' → logprob: -11.877825736999512
    10. '(s' → logprob: -13.627825736999512

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46697521209716797
    2. '):
' → logprob: -1.466975212097168
    3. ')' → logprob: -2.341975212097168
    4. '+' → logprob: -3.591975212097168
    5. ',' → logprob: -4.841975212097168
    6. 'in' → logprob: -5.091975212097168
    7. ' in' → logprob: -6.841975212097168
    8. 'n' → logprob: -7.216975212097168
    9. '(n' → logprob: -7.341975212097168
    10. '   ' → logprob: -7.466975212097168

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025604868307709694
    2. 'val' → logprob: -4.900604724884033
    3. ' val' → logprob: -5.150604724884033
    4. 'for' → logprob: -5.775604724884033
    5. ' for' → logprob: -5.900604724884033
    6. ' ans' → logprob: -6.150604724884033
    7. 'ans' → logprob: -6.150604724884033
    8. 'ab' → logprob: -8.025605201721191
    9. ' ab' → logprob: -8.025605201721191
    10. ' if' → logprob: -8.650605201721191

Token 217: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.20766066014766693
    2. 'if' → logprob: -2.332660675048828
    3. 'for' → logprob: -3.582660675048828
    4. 'ans' → logprob: -3.832660675048828
    5. ' val' → logprob: -4.332660675048828
    6. '   ' → logprob: -4.582660675048828
    7. ' if' → logprob: -5.332660675048828
    8. 'ab' → logprob: -5.457660675048828
    9. 'a' → logprob: -5.832660675048828
    10. 'v' → logprob: -5.957660675048828

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02212473191320896
    2. ' ,' → logprob: -4.522124767303467
    3. '=' → logprob: -6.022124767303467
    4. ' =' → logprob: -6.147124767303467
    5. '   ' → logprob: -6.272124767303467
    6. ' in' → logprob: -6.522124767303467
    7. 'in' → logprob: -6.897124767303467
    8. ',n' → logprob: -7.897124767303467
    9. 'all' → logprob: -8.022124290466309
    10. ')' → logprob: -8.022124290466309

Token 219: ' c' (ID: 274)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.418412983417511
    2. 'ab' → logprob: -1.1684129238128662
    3. ' i' → logprob: -4.168413162231445
    4. 'i' → logprob: -4.418413162231445
    5. '<|end|>' → logprob: -5.918413162231445
    6. 'n' → logprob: -8.168413162231445
    7. ' n' → logprob: -8.668413162231445
    8. ' =' → logprob: -8.793413162231445
    9. ' ' → logprob: -10.043413162231445
    10. 's' → logprob: -10.543413162231445

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002322010463103652
    2. ' ,' → logprob: -6.627322196960449
    3. '=' → logprob: -7.752322196960449
    4. '   ' → logprob: -8.37732219696045
    5. ' =' → logprob: -8.62732219696045
    6. ',i' → logprob: -10.00232219696045
    7. '_,' → logprob: -11.00232219696045
    8. ',user' → logprob: -11.62732219696045
    9. ',j' → logprob: -11.75232219696045
    10. ',n' → logprob: -11.87732219696045

Token 221: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19099895656108856
    2. ' mab' → logprob: -2.3159990310668945
    3. 'ab' → logprob: -2.9409990310668945
    4. ' ab' → logprob: -3.8159990310668945
    5. ' m' → logprob: -9.565999031066895
    6. ' ' → logprob: -9.940999031066895
    7. 'b' → logprob: -9.940999031066895
    8. 'mb' → logprob: -10.440999031066895
    9. 'abc' → logprob: -10.690999031066895
    10. '[m' → logprob: -11.440999031066895

Token 222: 'orb' (ID: 47791)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0758921205997467
    2. 'll' → logprob: -2.825892210006714
    3. '[i' → logprob: -5.700891971588135
    4. 'all' → logprob: -5.825891971588135
    5. 'bb' → logprob: -6.075891971588135
    6. 'ball' → logprob: -6.325891971588135
    7. 'i' → logprob: -7.950891971588135
    8. 'bull' → logprob: -8.075892448425293
    9. '```' → logprob: -8.200892448425293
    10. '[b' → logprob: -8.450892448425293

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21356233954429626
    2. ' =' → logprob: -1.8385623693466187
    3. 'll' → logprob: -4.088562488555908
    4. 'all' → logprob: -4.588562488555908
    5. '[i' → logprob: -7.088562488555908
    6. '[' → logprob: -7.088562488555908
    7. 'l' → logprob: -7.213562488555908
    8. ')' → logprob: -7.338562488555908
    9. 'i' → logprob: -7.463562488555908
    10. ']' → logprob: -7.463562488555908

Token 224: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.22581520676612854
    2. 'ab' → logprob: -1.6008151769638062
    3. ' =' → logprob: -8.725814819335938
    4. '(ab' → logprob: -9.725814819335938
    5. '_ab' → logprob: -10.225814819335938
    6. '=' → logprob: -10.350814819335938
    7. 'ans' → logprob: -10.725814819335938
    8. '   ' → logprob: -10.975814819335938
    9. 'abl' → logprob: -11.600814819335938
    10. 'abel' → logprob: -11.788314819335938

Token 225: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0004699954588431865
    2. '[i' → logprob: -7.750470161437988
    3. 'i' → logprob: -11.750470161437988
    4. '[' → logprob: -11.750470161437988
    5. 'll' → logprob: -12.500470161437988
    6. '_all' → logprob: -13.125470161437988
    7. ']' → logprob: -13.250470161437988
    8. '[]' → logprob: -13.375470161437988
    9. 'All' → logprob: -13.500470161437988
    10. 'oll' → logprob: -13.750470161437988

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03795725107192993
    2. '=' → logprob: -3.912957191467285
    3. ' =' → logprob: -4.662957191467285
    4. 'i' → logprob: -5.537957191467285
    5. '   ' → logprob: -6.662957191467285
    6. '[' → logprob: -7.662957191467285
    7. '=i' → logprob: -7.912957191467285
    8. ')' → logprob: -8.162957191467285
    9. '.append' → logprob: -8.662957191467285
    10. ']' → logprob: -8.787957191467285

Token 227: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5402879118919373
    2. ')
' → logprob: -0.9152879118919373
    3. ']' → logprob: -4.665287971496582
    4. ']
' → logprob: -5.290287971496582
    5. '])' → logprob: -7.290287971496582
    6. '   ' → logprob: -7.540287971496582
    7. '])
' → logprob: -8.040287971496582
    8. ')=' → logprob: -8.040287971496582
    9. ')
' → logprob: -8.165287971496582
    10. '),' → logprob: -9.915287971496582

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06769119948148727
    2. '<|end|>' → logprob: -3.4426910877227783
    3. ' if' → logprob: -4.692691326141357
    4. ',' → logprob: -5.067691326141357
    5. ' ' → logprob: -5.192691326141357
    6. '    
' → logprob: -6.192691326141357
    7. ')' → logprob: -6.442691326141357
    8. '=' → logprob: -6.692691326141357
    9. '       ' → logprob: -6.817691326141357
    10. ' =' → logprob: -6.942691326141357

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2739962041378021
    2. '   ' → logprob: -2.023996114730835
    3. 'if' (adapté à ' if') → logprob: -2.273996114730835
    4. ' ans' → logprob: -6.273996353149414
    5. 'ans' → logprob: -6.398996353149414
    6. '	ans' → logprob: -8.773996353149414
    7. '	if' → logprob: -8.898996353149414
    8. ')' → logprob: -8.898996353149414
    9. '       ' → logprob: -9.398996353149414
    10. '    
' → logprob: -9.523996353149414

Token 230: ' ab' (ID: 692)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6126517057418823
    2. ' a' → logprob: -0.8626517057418823
    3. ' c' → logprob: -4.112651824951172
    4. 'c' → logprob: -4.112651824951172
    5. '(a' → logprob: -6.862651824951172
    6. ' val' → logprob: -7.487651824951172
    7. ' (' → logprob: -7.862651824951172
    8. 'val' → logprob: -7.862651824951172
    9. ' ' → logprob: -8.362651824951172
    10. '   ' → logprob: -9.550151824951172

Token 231: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.152432382106781
    2. '[i' → logprob: -2.027432441711426
    3. '[' → logprob: -5.902432441711426
    4. 'i' → logprob: -6.027432441711426
    5. 'll' → logprob: -6.152432441711426
    6. 'orb' → logprob: -7.527432441711426
    7. 'ell' → logprob: -8.402432441711426
    8. '[[' → logprob: -8.527432441711426
    9. '(i' → logprob: -9.027432441711426
    10. 'a' → logprob: -9.277432441711426

Token 232: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10102830082178116
    2. '[n' → logprob: -2.4760282039642334
    3. 'i' → logprob: -5.1010284423828125
    4. 'len' → logprob: -6.8510284423828125
    5. 'val' → logprob: -6.9760284423828125
    6. 'n' → logprob: -7.1010284423828125
    7. '   ' → logprob: -7.3510284423828125
    8. '[' → logprob: -7.3510284423828125
    9. '[len' → logprob: -8.476028442382812
    10. '==' → logprob: -8.476028442382812

Token 233: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33615654706954956
    2. '][' → logprob: -1.3361566066741943
    3. '[' → logprob: -4.586156368255615
    4. 'i' → logprob: -5.211156368255615
    5. 'val' → logprob: -5.961156368255615
    6. '(i' → logprob: -7.211156368255615
    7. ' i' → logprob: -7.836156368255615
    8. ']' → logprob: -7.961156368255615
    9. '[n' → logprob: -7.961156368255615
    10. ' ][' → logprob: -7.961156368255615

Token 234: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2394966185092926
    2. '0' → logprob: -1.6144965887069702
    3. '1' → logprob: -4.48949670791626
    4. ':' → logprob: -7.73949670791626
    5. 'val' → logprob: -7.86449670791626
    6. '[' → logprob: -8.114496231079102
    7. 'a' → logprob: -8.114496231079102
    8. '][' → logprob: -8.239496231079102
    9. 'i' → logprob: -8.364496231079102
    10. '
' → logprob: -8.739496231079102

Token 235: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9657103419303894
    2. ' ==' → logprob: -1.0907104015350342
    3. '==' → logprob: -1.9657104015350342
    4. '!=' → logprob: -2.215710401535034
    5. ']' → logprob: -3.965710401535034
    6. ']==' → logprob: -4.840710163116455
    7. ']!=' → logprob: -5.590710163116455
    8. ' not' → logprob: -6.090710163116455
    9. ')' → logprob: -8.090710639953613
    10. ' ' → logprob: -8.715710639953613

Token 236: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2364507913589478
    2. ' ==' → logprob: -1.3614507913589478
    3. ' !=' → logprob: -1.4864507913589478
    4. '!=' → logprob: -1.4864507913589478
    5. ' not' → logprob: -7.986450672149658
    6. ']==' → logprob: -8.986451148986816
    7. '[' → logprob: -9.611451148986816
    8. '=' → logprob: -9.736451148986816
    9. ']' → logprob: -9.736451148986816
    10. ']!=' → logprob: -9.736451148986816

Token 237: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08929548412561417
    2. ' c' → logprob: -2.4642953872680664
    3. 'ab' → logprob: -8.589295387268066
    4. 'a' → logprob: -9.714295387268066
    5. ' ab' → logprob: -9.714295387268066
    6. '	c' → logprob: -11.214295387268066
    7. ' ' → logprob: -11.464295387268066
    8. ' a' → logprob: -12.026795387268066
    9. 'val' → logprob: -12.089295387268066
    10. ' ' → logprob: -12.776795387268066

Token 238: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1196175366640091
    2. 'and' → logprob: -2.244617462158203
    3. ':
' → logprob: -5.369617462158203
    4. ':' → logprob: -6.619617462158203
    5. '   ' → logprob: -7.494617462158203
    6. ' ' → logprob: -9.494617462158203
    7. ')' → logprob: -10.869617462158203
    8. ' :
' → logprob: -10.869617462158203
    9. '):
' → logprob: -11.119617462158203
    10. ' or' → logprob: -11.119617462158203

Token 239: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1100568175315857
    2. 'and' → logprob: -2.3600568771362305
    3. ':
' → logprob: -5.2350568771362305
    4. ':' → logprob: -6.3600568771362305
    5. '   ' → logprob: -6.4850568771362305
    6. ' or' → logprob: -7.2350568771362305
    7. '       ' → logprob: -7.9850568771362305
    8. '):
' → logprob: -10.61005687713623
    9. '<|end|>' → logprob: -10.73505687713623
    10. ' ' → logprob: -10.98505687713623

Token 240: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09295656532049179
    2. ' ans' → logprob: -2.46795654296875
    3. '   ' → logprob: -6.21795654296875
    4. 'val' → logprob: -6.96795654296875
    5. 'if' → logprob: -8.09295654296875
    6. '	ans' → logprob: -8.34295654296875
    7. ' val' → logprob: -8.96795654296875
    8. ' if' → logprob: -9.09295654296875
    9. '(ans' → logprob: -9.34295654296875
    10. 'break' → logprob: -10.71795654296875

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013615436619147658
    2. '.append' → logprob: -6.75136137008667
    3. '1' → logprob: -9.001361846923828
    4. 'append' → logprob: -10.626361846923828
    5. '
' → logprob: -11.376361846923828
    6. ')' → logprob: -12.376361846923828
    7. '```' → logprob: -12.376361846923828
    8. 's' → logprob: -12.501361846923828
    9. '.' → logprob: -12.626361846923828
    10. ' ' → logprob: -13.251361846923828

Token 242: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02044016309082508
    2. '.' → logprob: -4.270440101623535
    3. ' .' → logprob: -6.020440101623535
    4. ' +=' → logprob: -6.395440101623535
    5. '+=' → logprob: -6.520440101623535
    6. '=' → logprob: -8.520440101623535
    7. '.extend' → logprob: -8.520440101623535
    8. ' =' → logprob: -9.395440101623535
    9. '+' → logprob: -9.645440101623535
    10. 'append' → logprob: -10.270440101623535

Token 243: '(ans' (ID: 70054)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.47050940990448
    2. '(ab' → logprob: -1.47050940990448
    3. '(val' → logprob: -1.97050940990448
    4. '(' → logprob: -5.5955095291137695
    5. 'val' → logprob: -6.7205095291137695
    6. '(abs' → logprob: -7.8455095291137695
    7. '(ans' → logprob: -8.22050952911377
    8. '(
' → logprob: -8.59550952911377
    9. 'ab' → logprob: -8.72050952911377
    10. ' (' → logprob: -10.22050952911377

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3023957908153534
    2. 'all' → logprob: -1.4273958206176758
    3. '[i' → logprob: -4.052395820617676
    4. '2' → logprob: -6.927395820617676
    5. 'ball' → logprob: -7.427395820617676
    6. 'ab' → logprob: -7.427395820617676
    7. '[' → logprob: -7.927395820617676
    8. 'al' → logprob: -8.177395820617676
    9. 'val' → logprob: -8.177395820617676
    10. '(i' → logprob: -9.677395820617676

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006435406859964132
    2. '-' → logprob: -5.631435394287109
    3. '-val' → logprob: -5.881435394287109
    4. ')' → logprob: -11.50643539428711
    5. ' val' → logprob: -11.50643539428711
    6. ' -
' → logprob: -11.75643539428711
    7. ' ' → logprob: -11.88143539428711
    8. ' ' → logprob: -12.88143539428711
    9. ' +' → logprob: -13.75643539428711
    10. '+' → logprob: -14.50643539428711

Token 246: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1573542356491089
    2. 'ab' → logprob: -2.0323543548583984
    3. ' val' → logprob: -4.907354354858398
    4. ' ab' → logprob: -5.032354354858398
    5. 'hen' → logprob: -7.657354354858398
    6. ' hen' → logprob: -10.032354354858398
    7. 'abel' → logprob: -10.719854354858398
    8. '(ab' → logprob: -11.032354354858398
    9. ' ' → logprob: -11.719854354858398
    10. '   ' → logprob: -11.969854354858398

Token 247: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34973612427711487
    2. '+' → logprob: -1.2247360944747925
    3. ')' → logprob: -6.724736213684082
    4. ' ' → logprob: -11.099736213684082
    5. ' +
' → logprob: -11.349736213684082
    6. ' -' → logprob: -11.349736213684082
    7. '<|end|>' → logprob: -11.599736213684082
    8. '-' → logprob: -11.724736213684082
    9. '   ' → logprob: -12.349736213684082
    10. ' )' → logprob: -12.349736213684082

Token 248: ' hen' (ID: 23186)
  Prédit: 'hen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hen' → logprob: -0.002667450113222003
    2. 'ab' → logprob: -6.252667427062988
    3. ' hen' → logprob: -7.252667427062988
    4. ' ab' → logprob: -12.002667427062988
    5. 'h' → logprob: -12.127667427062988
    6. '
' → logprob: -13.127667427062988
    7. '  ' → logprob: -13.127667427062988
    8. '```' → logprob: -13.502667427062988
    9. '   ' → logprob: -13.627667427062988
    10. ' ' → logprob: -13.877667427062988

Token 249: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016749451169744134
    2. ')' → logprob: -7.376675128936768
    3. '[n' → logprob: -7.626675128936768
    4. '0' → logprob: -8.00167465209961
    5. ']' → logprob: -9.87667465209961
    6. 'all' → logprob: -10.50167465209961
    7. 'n' → logprob: -11.12667465209961
    8. '[i' → logprob: -11.25167465209961
    9. ' [' → logprob: -11.25167465209961
    10. '
' → logprob: -11.25167465209961

Token 250: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20066103339195251
    2. '<|end|>' → logprob: -2.3256609439849854
    3. '\n' → logprob: -3.8256609439849854
    4. ' 
' → logprob: -4.2006611824035645
    5. '  
' → logprob: -4.9506611824035645
    6. 'for' → logprob: -4.9506611824035645
    7. ' for' → logprob: -4.9506611824035645
    8. ')' → logprob: -5.0756611824035645
    9. '
' → logprob: -5.2006611824035645
    10. '   ' → logprob: -6.3256611824035645

Token 252: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04476185142993927
    2. ':' → logprob: -3.294761896133423
    3. ':
' → logprob: -5.794761657714844
    4. '[' → logprob: -6.294761657714844
    5. '   ' → logprob: -7.544761657714844
    6. '    ' → logprob: -8.294761657714844
    7. ' :' → logprob: -8.669761657714844
    8. '(' → logprob: -9.169761657714844
    9. '      ' → logprob: -9.294761657714844
    10. ' :
' → logprob: -9.419761657714844

Token 253: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6310276389122009
    2. '       ' → logprob: -1.0060276985168457
    3. '   ' → logprob: -2.5060276985168457
    4. ' val' → logprob: -5.631027698516846
    5. '           ' → logprob: -5.881027698516846
    6. 'ans' → logprob: -5.881027698516846
    7. '	ans' → logprob: -5.881027698516846
    8. '    ' → logprob: -6.256027698516846
    9. ' ' → logprob: -6.881027698516846
    10. '     ' → logprob: -7.256027698516846

Token 254: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.420598219847307e-05
    2. ' ans' → logprob: -9.7500638961792
    3. 'if' → logprob: -13.5000638961792
    4. 'print' → logprob: -13.7500638961792
    5. '   ' → logprob: -14.2500638961792
    6. '	ans' → logprob: -14.2500638961792
    7. '(ans' → logprob: -14.5000638961792
    8. 'val' → logprob: -15.0000638961792
    9. 'pass' → logprob: -15.6250638961792
    10. '           ' → logprob: -15.6250638961792

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. '.append' → logprob: -12.500006675720215
    3. '1' → logprob: -13.625006675720215
    4. 'append' → logprob: -13.875006675720215
    5. '```' → logprob: -14.750006675720215
    6. 'all' → logprob: -16.5000057220459
    7. '
' → logprob: -17.8750057220459
    8. 'app' → logprob: -18.6250057220459
    9. '₂' → logprob: -18.8750057220459
    10. '``' → logprob: -19.0000057220459

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005263049155473709
    2. '.' → logprob: -5.255262851715088
    3. 'append' → logprob: -11.630263328552246
    4. '.app' → logprob: -11.630263328552246
    5. ' .' → logprob: -12.130263328552246
    6. '.extend' → logprob: -12.130263328552246
    7. '.ap' → logprob: -14.630263328552246
    8. '.Append' → logprob: -16.25526237487793
    9. '_append' → logprob: -17.13026237487793
    10. ' append' → logprob: -17.25526237487793

Token 257: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000919796759262681
    2. 'ans' → logprob: -7.000919818878174
    3. ' ans' → logprob: -12.125919342041016
    4. '(' → logprob: -12.875919342041016
    5. ' (' → logprob: -16.000919342041016
    6. '(an' → logprob: -16.500919342041016
    7. '	ans' → logprob: -16.625919342041016
    8. '(abs' → logprob: -17.625919342041016
    9. '(ab' → logprob: -17.750919342041016
    10. '_ans' → logprob: -18.250919342041016

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20129549503326416
    2. 'ab' → logprob: -1.8262954950332642
    3. 'val' → logprob: -4.951295375823975
    4. 'all' → logprob: -5.826295375823975
    5. 'n' → logprob: -5.951295375823975
    6. '[n' → logprob: -6.076295375823975
    7. 'ans' → logprob: -6.701295375823975
    8. '(n' → logprob: -6.826295375823975
    9. 'hen' → logprob: -6.951295375823975
    10. '2' → logprob: -7.451295375823975

Token 259: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0007218453683890402
    2. '-' → logprob: -8.00072193145752
    3. ' +' → logprob: -8.50072193145752
    4. ')' → logprob: -9.25072193145752
    5. '<|end|>' → logprob: -10.37572193145752
    6. ' ' → logprob: -11.12572193145752
    7. '[' → logprob: -11.37572193145752
    8. '+' → logprob: -11.50072193145752
    9. ' ' → logprob: -11.62572193145752
    10. ',' → logprob: -13.25072193145752

Token 260: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11033165454864502
    2. 'hen' → logprob: -2.3603315353393555
    3. 'ab' → logprob: -5.1103315353393555
    4. ' val' → logprob: -5.6103315353393555
    5. ' hen' → logprob: -8.360331535339355
    6. ' ab' → logprob: -10.110331535339355
    7. 'ben' → logprob: -11.422831535339355
    8. '(val' → logprob: -11.797831535339355
    9. 'ven' → logprob: -12.360331535339355
    10. 'hon' → logprob: -12.360331535339355

Token 261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11283955723047256
    2. '+' → logprob: -2.237839460372925
    3. ' ' → logprob: -11.862839698791504
    4. ' -' → logprob: -12.737839698791504
    5. ')' → logprob: -13.112839698791504
    6. ' +
' → logprob: -13.737839698791504
    7. '+
' → logprob: -14.112839698791504
    8. '-' → logprob: -14.112839698791504
    9. ' ' → logprob: -14.487839698791504
    10. '[' → logprob: -14.487839698791504

Token 262: ' hen' (ID: 23186)
  Prédit: 'hen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hen' → logprob: -0.00020807012333534658
    2. ' hen' → logprob: -8.500207901000977
    3. '
' → logprob: -13.375207901000977
    4. ' ' → logprob: -14.750207901000977
    5. 'hin' → logprob: -15.000207901000977
    6. 'han' → logprob: -15.000207901000977
    7. 'h' → logprob: -15.000207901000977
    8. '   ' → logprob: -15.250207901000977
    9. '```' → logprob: -15.500207901000977
    10. 'ab' → logprob: -15.750207901000977

Token 263: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.673547563375905e-05
    2. '+' → logprob: -10.250086784362793
    3. '[n' → logprob: -11.375086784362793
    4. ')' → logprob: -11.875086784362793
    5. '[' → logprob: -12.250086784362793
    6. 'n' → logprob: -12.250086784362793
    7. '```' → logprob: -12.500086784362793
    8. ']' → logprob: -12.625086784362793
    9. 'all' → logprob: -12.625086784362793
    10. '1' → logprob: -13.500086784362793

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010306637705070898
    2. ')
' → logprob: -9.250102996826172
    3. ' )' → logprob: -12.750102996826172
    4. '   ' → logprob: -13.250102996826172
    5. '')' → logprob: -14.000102996826172
    6. '）' → logprob: -15.500102996826172
    7. '))' → logprob: -15.875102996826172
    8. '}' → logprob: -15.875102996826172
    9. ')return' → logprob: -16.000102996826172
    10. ')n' → logprob: -16.000102996826172

Token 265: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2306261658668518
    2. ')' → logprob: -1.730626106262207
    3. '_' → logprob: -4.605626106262207
    4. 'i' → logprob: -5.480626106262207
    5. 'p' → logprob: -5.730626106262207
    6. 'm' → logprob: -6.105626106262207
    7. 'ans' → logprob: -6.480626106262207
    8. ']' → logprob: -6.855626106262207
    9. '#' → logprob: -6.855626106262207
    10. ',' → logprob: -6.980626106262207

Token 266: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8116948008537292
    2. '(min' → logprob: -1.061694860458374
    3. '(max' → logprob: -1.561694860458374
    4. '(ans' → logprob: -8.686695098876953
    5. '('' → logprob: -10.061695098876953
    6. '(
' → logprob: -11.186695098876953
    7. 'max' → logprob: -12.186695098876953
    8. 'min' → logprob: -12.311695098876953
    9. '()' → logprob: -12.311695098876953
    10. '("("' → logprob: -13.436695098876953

Token 267: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. 'ans' → logprob: -15.12500286102295
    4. '(
' → logprob: -16.500003814697266
    5. '(abs' → logprob: -18.250003814697266
    6. '(answer' → logprob: -19.000003814697266
    7. '(`' → logprob: -19.625003814697266
    8. '(ab' → logprob: -19.625003814697266
    9. '(

' → logprob: -20.000003814697266
    10. '	ans' → logprob: -20.125003814697266

Token 268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '(ans' → logprob: -19.0
    3. ')' → logprob: -19.125
    4. '２' → logprob: -20.5
    5. '```' → logprob: -20.625
    6. '(' → logprob: -20.875
    7. '۲' → logprob: -21.25
    8. 's' → logprob: -21.5625
    9. '₂' → logprob: -21.8125
    10. '
' → logprob: -21.9375

Token 269: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014166918583214283
    2. '))' → logprob: -4.264166831970215
    3. '])' → logprob: -13.264166831970215
    4. ' )' → logprob: -14.889166831970215
    5. '())' → logprob: -14.889166831970215
    6. '）' → logprob: -15.639166831970215
    7. '})' → logprob: -15.639166831970215
    8. ')
' → logprob: -15.639166831970215
    9. ')))' → logprob: -16.26416778564453
    10. '()' → logprob: -16.38916778564453

Token 270: 'exit' (ID: 30264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014258119277656078
    2. '(' → logprob: -4.264257907867432
    3. '()
' → logprob: -9.88925838470459
    4. '()\' → logprob: -10.26425838470459
    5. '(
' → logprob: -13.01425838470459
    6. '()]' → logprob: -13.51425838470459
    7. '()`' → logprob: -13.76425838470459
    8. '())' → logprob: -13.88925838470459
    9. '();' → logprob: -14.13925838470459
    10. '()

' → logprob: -14.51425838470459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 269
Tokens correctement prédits (1ère position, stricte): 126
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 46.84%
Précision adaptée (1ère position): 49.81%
Précision (top 10): 84.39%
================================================================================
