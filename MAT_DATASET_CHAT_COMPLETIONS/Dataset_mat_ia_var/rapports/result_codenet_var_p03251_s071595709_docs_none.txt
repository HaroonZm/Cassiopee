================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,m,x,y = map(int,input().split())
xi = list(map(int,input().split()))
yi = list(map(int,input().split()))
xi.append(x)
yi.append(y)
xi.sort()
xi.reverse()
yi.sort()
if xi[0]<yi[0]:
    print("No War")
else:
    print("War")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',m' (ID: 26648)
  → Token d'amorce (pas de prédiction)

Token 2: ',x' (ID: 29748)
  → Token d'amorce (pas de prédiction)

Token 3: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16260863840579987
    2. ' =' → logprob: -2.2876086235046387
    3. ',' → logprob: -3.0376086235046387
    4. ' ' → logprob: -9.037609100341797
    5. '[' → logprob: -9.162609100341797
    6. '```' → logprob: -9.787609100341797
    7. ')' → logprob: -9.912609100341797
    8. ';' → logprob: -10.037609100341797
    9. ''' → logprob: -10.287609100341797
    10. '.' → logprob: -10.287609100341797

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10791216790676117
    2. ' =' → logprob: -2.607912063598633
    3. ',' → logprob: -3.607912063598633
    4. ';' → logprob: -7.482912063598633
    5. ' ' → logprob: -7.732912063598633
    6. '```' → logprob: -8.732912063598633
    7. ')' → logprob: -9.857912063598633
    8. '[' → logprob: -9.982912063598633
    9. '_' → logprob: -9.982912063598633
    10. '.' → logprob: -10.482912063598633

Token 5: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6658550500869751
    2. '0' → logprob: -1.165855050086975
    3. 'map' → logprob: -2.5408549308776855
    4. ' map' → logprob: -2.5408549308776855
    5. 'input' → logprob: -4.5408549308776855
    6. ' input' → logprob: -5.5408549308776855
    7. '1' → logprob: -6.9158549308776855
    8. ' n' → logprob: -7.4158549308776855
    9. '10' → logprob: -8.415855407714844
    10. 'n' → logprob: -9.415855407714844

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023834774270653725
    2. '(lambda' → logprob: -4.148834705352783
    3. '(int' → logprob: -5.648834705352783
    4. '```' → logprob: -6.148834705352783
    5. '<|end|>' → logprob: -7.273834705352783
    6. '(str' → logprob: -8.023835182189941
    7. ')' → logprob: -9.148835182189941
    8. '(user' → logprob: -9.273835182189941
    9. '(input' → logprob: -9.398835182189941
    10. '(_' → logprob: -10.023835182189941

Token 7: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007145240902900696
    2. ')' → logprob: -5.132145404815674
    3. '(' → logprob: -7.257145404815674
    4. 'input' → logprob: -8.132144927978516
    5. ',input' → logprob: -9.882144927978516
    6. '(int' → logprob: -10.132144927978516
    7. '=input' → logprob: -11.132144927978516
    8. '(raw' → logprob: -11.132144927978516
    9. '[input' → logprob: -11.132144927978516
    10. '(str' → logprob: -11.257144927978516

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28396275639533997
    2. '()' → logprob: -2.9089627265930176
    3. '())' → logprob: -3.0339627265930176
    4. '('' → logprob: -3.1589627265930176
    5. ')' → logprob: -3.5339627265930176
    6. '(""))' → logprob: -4.033962726593018
    7. '(">' → logprob: -4.408962726593018
    8. '(()' → logprob: -4.783962726593018
    9. '("("' → logprob: -4.908962726593018
    10. '("")' → logprob: -5.158962726593018

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.73446003627032e-05
    2. 'strip' → logprob: -9.250097274780273
    3. 'rstrip' → logprob: -14.125097274780273
    4. ' split' → logprob: -15.375097274780273
    5. '(split' → logprob: -15.625097274780273
    6. 'spl' → logprob: -16.625097274780273
    7. ')' → logprob: -18.000097274780273
    8. 'read' → logprob: -18.500097274780273
    9. 'startswith' → logprob: -19.000097274780273
    10. 'replace' → logprob: -19.500097274780273

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20405510067939758
    2. '())' → logprob: -1.7040550708770752
    3. '()' → logprob: -6.829055309295654
    4. '))' → logprob: -6.954055309295654
    5. '`)' → logprob: -8.204054832458496
    6. '(' → logprob: -9.204054832458496
    7. '()))' → logprob: -9.954054832458496
    8. '```' → logprob: -10.454054832458496
    9. ' ())' → logprob: -10.579054832458496
    10. ')`' → logprob: -11.204054832458496

Token 11: 'xi' (ID: 22180)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7627429962158203
    2. '
' → logprob: -1.2627429962158203
    3. '#' → logprob: -3.1377429962158203
    4. 'if' → logprob: -3.1377429962158203
    5. '\' → logprob: -3.2627429962158203
    6. '```' → logprob: -3.7627429962158203
    7. '+' → logprob: -4.13774299621582
    8. ',' → logprob: -4.26274299621582
    9. ' ' → logprob: -4.38774299621582
    10. '*' → logprob: -5.01274299621582

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18727554380893707
    2. 'n' → logprob: -2.3122756481170654
    3. '[n' → logprob: -3.0622756481170654
    4. '[x' → logprob: -5.062275409698486
    5. '+' → logprob: -5.437275409698486
    6. 's' → logprob: -5.937275409698486
    7. 'x' → logprob: -6.062275409698486
    8. '[]' → logprob: -6.312275409698486
    9. '[i' → logprob: -6.687275409698486
    10. 'f' → logprob: -6.812275409698486

Token 13: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.46381476521492004
    2. ' list' → logprob: -2.0888147354125977
    3. '[int' → logprob: -2.2138147354125977
    4. '[]' → logprob: -3.0888147354125977
    5. 'int' → logprob: -3.2138147354125977
    6. ' []' → logprob: -3.8388147354125977
    7. ' [' → logprob: -4.838814735412598
    8. '[' → logprob: -4.838814735412598
    9. 'map' → logprob: -5.213814735412598
    10. ' int' → logprob: -5.838814735412598

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013595925702247769
    2. '(range' → logprob: -10.000136375427246
    3. '(x' → logprob: -10.250136375427246
    4. '(

' → logprob: -11.500136375427246
    5. '(
' → logprob: -11.750136375427246
    6. '("("' → logprob: -11.875136375427246
    7. '(int' → logprob: -12.375136375427246
    8. '()' → logprob: -12.375136375427246
    9. '```' → logprob: -13.125136375427246
    10. '((' → logprob: -13.250136375427246

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043400691356509924
    2. '(' → logprob: -8.750433921813965
    3. '<int' → logprob: -8.750433921813965
    4. 'int' → logprob: -10.250433921813965
    5. '=int' → logprob: -10.375433921813965
    6. '[int' → logprob: -10.625433921813965
    7. '(input' → logprob: -10.875433921813965
    8. ',int' → logprob: -13.125433921813965
    9. ']int' → logprob: -13.750433921813965
    10. '(str' → logprob: -13.875433921813965

Token 16: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07278651744127274
    2. ',input' → logprob: -2.697786569595337
    3. ',' → logprob: -6.072786331176758
    4. '(' → logprob: -8.072786331176758
    5. '),' → logprob: -9.697786331176758
    6. '=input' → logprob: -9.947786331176758
    7. '<input' → logprob: -10.572786331176758
    8. '(int' → logprob: -10.697786331176758
    9. ')' → logprob: -10.822786331176758
    10. 'input' → logprob: -11.822786331176758

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.158350151963532e-05
    2. '()' → logprob: -9.750061988830566
    3. ' ().' → logprob: -13.000061988830566
    4. '.' → logprob: -15.000061988830566
    5. ')' → logprob: -16.00006103515625
    6. '(' → logprob: -16.00006103515625
    7. '().'' → logprob: -16.25006103515625
    8. '().__' → logprob: -16.25006103515625
    9. '()-' → logprob: -17.00006103515625
    10. '();' → logprob: -17.12506103515625

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. 'strip' → logprob: -15.750000953674316
    4. '(split' → logprob: -16.625
    5. 'spl' → logprob: -17.125
    6. 'rstrip' → logprob: -18.875
    7. 'plit' → logprob: -20.0
    8. '_split' → logprob: -21.375
    9. '.split' → logprob: -22.0
    10. ')' → logprob: -22.125

Token 19: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.21948443353176117
    2. '())' → logprob: -1.7194844484329224
    3. '()' → logprob: -4.219484329223633
    4. ')' → logprob: -7.094484329223633
    5. '))' → logprob: -7.094484329223633
    6. '(' → logprob: -7.094484329223633
    7. '())))' → logprob: -8.219484329223633
    8. '()));' → logprob: -8.469484329223633
    9. '().' → logprob: -10.094484329223633
    10. '()),' → logprob: -10.219484329223633

Token 20: 'yi' (ID: 10246)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7069377899169922
    2. 'count' → logprob: -1.0819377899169922
    3. 's' → logprob: -3.581937789916992
    4. 'dp' → logprob: -3.706937789916992
    5. 'z' → logprob: -3.831937789916992
    6. 'result' → logprob: -3.831937789916992
    7. 'ans' → logprob: -4.706937789916992
    8. 'd' → logprob: -5.081937789916992
    9. 'c' → logprob: -5.081937789916992
    10. 'a' → logprob: -5.206937789916992

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4256629943847656
    2. ' =' → logprob: -1.3006629943847656
    3. '.' → logprob: -2.8006629943847656
    4. '[' → logprob: -4.550662994384766
    5. ')' → logprob: -6.050662994384766
    6. '[:]' → logprob: -8.925662994384766
    7. '=[]' → logprob: -9.550662994384766
    8. '_' → logprob: -9.675662994384766
    9. '.=' → logprob: -9.800662994384766
    10. ']' → logprob: -9.800662994384766

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.03806536644697189
    2. 'list' → logprob: -3.2880654335021973
    3. '(list' → logprob: -10.663064956665039
    4. '=list' → logprob: -15.163064956665039
    5. ' map' → logprob: -16.03806495666504
    6. '_list' → logprob: -17.16306495666504
    7. ':list' → logprob: -17.41306495666504
    8. 'List' → logprob: -17.66306495666504
    9. 'map' → logprob: -17.91306495666504
    10. '	list' → logprob: -18.03806495666504

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028124824166297913
    2. '((' → logprob: -7.127812385559082
    3. '(int' → logprob: -7.627812385559082
    4. '(list' → logprob: -7.877812385559082
    5. '(map' → logprob: -8.252812385559082
    6. '(.' → logprob: -8.877812385559082
    7. '(lambda' → logprob: -9.127812385559082
    8. '("("' → logprob: -9.377812385559082
    9. '(range' → logprob: -9.502812385559082
    10. '(()' → logprob: -9.877812385559082

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.376848902320489e-05
    2. '<int' → logprob: -10.125093460083008
    3. '(' → logprob: -10.750093460083008
    4. ' (' → logprob: -11.500093460083008
    5. '=int' → logprob: -11.500093460083008
    6. '(input' → logprob: -12.500093460083008
    7. 'int' → logprob: -13.125093460083008
    8. '[int' → logprob: -13.250093460083008
    9. '```' → logprob: -13.250093460083008
    10. '(list' → logprob: -14.125093460083008

Token 25: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4940456748008728
    2. ',int' → logprob: -1.7440457344055176
    3. '(input' → logprob: -1.8690457344055176
    4. ',input' → logprob: -3.2440457344055176
    5. '=int' → logprob: -4.994045734405518
    6. ',' → logprob: -5.119045734405518
    7. '<int' → logprob: -5.369045734405518
    8. '=input' → logprob: -6.619045734405518
    9. '```' → logprob: -7.494045734405518
    10. ' (' → logprob: -7.744045734405518

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.750016212463379
    3. '()' → logprob: -11.875016212463379
    4. ' ().' → logprob: -14.000016212463379
    5. '(' → logprob: -14.500016212463379
    6. ').' → logprob: -16.250017166137695
    7. '(.' → logprob: -16.625017166137695
    8. ')' → logprob: -16.750017166137695
    9. '().__' → logprob: -17.375017166137695
    10. ' .' → logprob: -18.125017166137695

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. 'strip' → logprob: -14.750000953674316
    3. ' split' → logprob: -15.625000953674316
    4. ')' → logprob: -15.750000953674316
    5. 'spl' → logprob: -16.125001907348633
    6. '(split' → logprob: -17.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. 'rstrip' → logprob: -17.875001907348633
    9. 'sp' → logprob: -18.375001907348633
    10. 's' → logprob: -18.375001907348633

Token 28: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20662377774715424
    2. '())' → logprob: -1.8316237926483154
    3. '))' → logprob: -4.331623554229736
    4. ')' → logprob: -4.956623554229736
    5. '()' → logprob: -5.081623554229736
    6. '()))
' → logprob: -10.581624031066895
    7. '(' → logprob: -10.706624031066895
    8. '()));' → logprob: -10.956624031066895
    9. '()),' → logprob: -11.331624031066895
    10. '())))' → logprob: -11.706624031066895

Token 29: 'xi' (ID: 22180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15433859825134277
    2. 'z' → logprob: -2.5293385982513428
    3. 'if' → logprob: -4.279338836669922
    4. 'a' → logprob: -5.029338836669922
    5. 'result' → logprob: -5.154338836669922
    6. 'd' → logprob: -5.154338836669922
    7. 'count' → logprob: -5.154338836669922
    8. 'i' → logprob: -5.529338836669922
    9. 'p' → logprob: -5.779338836669922
    10. 's' → logprob: -5.904338836669922

Token 30: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049780916422605515
    2. '.' → logprob: -3.17478084564209
    3. '<|end|>' → logprob: -5.67478084564209
    4. '\[' → logprob: -7.04978084564209
    5. '[x' → logprob: -7.79978084564209
    6. '```' → logprob: -8.04978084564209
    7. '[:]' → logprob: -8.17478084564209
    8. '[i' → logprob: -8.42478084564209
    9. '+' → logprob: -8.67478084564209
    10. '[n' → logprob: -9.04978084564209

Token 31: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011441057547926903
    2. '(x' → logprob: -4.636441230773926
    3. '((' → logprob: -6.761441230773926
    4. '(y' → logprob: -8.261441230773926
    5. '(n' → logprob: -9.261441230773926
    6. '(-' → logprob: -9.261441230773926
    7. '(.' → logprob: -11.261441230773926
    8. '(None' → logprob: -11.636441230773926
    9. '("("' → logprob: -11.761441230773926
    10. '()' → logprob: -12.136441230773926

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03942236676812172
    2. '+' → logprob: -4.539422512054443
    3. '-' → logprob: -4.789422512054443
    4. '+m' → logprob: -5.164422512054443
    5. 'm' → logprob: -5.414422512054443
    6. '))' → logprob: -5.539422512054443
    7. ')m' → logprob: -6.164422512054443
    8. '1' → logprob: -7.414422512054443
    9. 'y' → logprob: -7.414422512054443
    10. '+y' → logprob: -8.289422035217285

Token 33: 'yi' (ID: 10246)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.24547909200191498
    2. '.' → logprob: -2.120479106903076
    3. ')' → logprob: -3.120479106903076
    4. '\' → logprob: -4.870479106903076
    5. '.
' → logprob: -5.370479106903076
    6. 'yi' → logprob: -5.495479106903076
    7. '*' → logprob: -5.620479106903076
    8. 'if' → logprob: -5.745479106903076
    9. ')
' → logprob: -5.870479106903076
    10. '_' → logprob: -5.870479106903076

Token 34: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05493328720331192
    2. '.' → logprob: -2.9299333095550537
    3. '.extend' → logprob: -10.304933547973633
    4. ').' → logprob: -12.179933547973633
    5. ' .' → logprob: -12.554933547973633
    6. '.setdefault' → logprob: -12.804933547973633
    7. 'append' → logprob: -13.429933547973633
    8. '.Append' → logprob: -14.179933547973633
    9. '.app' → logprob: -14.304933547973633
    10. '.add' → logprob: -14.304933547973633

Token 35: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.005237668287009001
    2. '(' → logprob: -5.255237579345703
    3. '(x' → logprob: -13.005237579345703
    4. 'y' → logprob: -14.505237579345703
    5. '((' → logprob: -14.630237579345703
    6. '(Y' → logprob: -15.255237579345703
    7. '(m' → logprob: -16.005237579345703
    8. '(n' → logprob: -16.380237579345703
    9. '(
' → logprob: -16.380237579345703
    10. ' (' → logprob: -17.255237579345703

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '))' → logprob: -14.00000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.75000286102295
    5. '`)' → logprob: -15.50000286102295
    6. ')`' → logprob: -15.87500286102295
    7. '),' → logprob: -16.875001907348633
    8. '')' → logprob: -17.125001907348633
    9. ')#' → logprob: -17.125001907348633
    10. '()' → logprob: -17.250001907348633

Token 37: 'xi' (ID: 22180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3624822795391083
    2. 'if' → logprob: -2.2374823093414307
    3. 'd' → logprob: -3.2374823093414307
    4. 'i' → logprob: -3.2374823093414307
    5. 'n' → logprob: -3.4874823093414307
    6. 'z' → logprob: -3.9874823093414307
    7. '
' → logprob: -4.362482070922852
    8. 'x' → logprob: -4.862482070922852
    9. 'print' → logprob: -5.112482070922852
    10. ' for' → logprob: -5.112482070922852

Token 38: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26851803064346313
    2. '[' → logprob: -1.8935179710388184
    3. '<|end|>' → logprob: -2.6435179710388184
    4. '```' → logprob: -5.518517971038818
    5. ')' → logprob: -6.143517971038818
    6. '
' → logprob: -6.518517971038818
    7. '+' → logprob: -7.143517971038818
    8. '<|end|>' → logprob: -7.268517971038818
    9. '#' → logprob: -7.643517971038818
    10. '\n' → logprob: -7.643517971038818

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03808784484863281
    2. '(' → logprob: -3.288087844848633
    3. '()`' → logprob: -11.163087844848633
    4. '();' → logprob: -12.038087844848633
    5. '(x' → logprob: -12.163087844848633
    6. '()
' → logprob: -12.538087844848633
    7. '())' → logprob: -13.538087844848633
    8. '()>' → logprob: -13.663087844848633
    9. '(()' → logprob: -13.788087844848633
    10. ' ()' → logprob: -14.038087844848633

Token 40: 'xi' (ID: 22180)
  Prédit: 'yi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yi' → logprob: -0.018437525257468224
    2. 'y' → logprob: -4.643437385559082
    3. 'x' → logprob: -5.893437385559082
    4. 'if' → logprob: -6.268437385559082
    5. 'print' → logprob: -6.643437385559082
    6. 'pos' → logprob: -7.643437385559082
    7. 'idx' → logprob: -7.893437385559082
    8. 'm' → logprob: -8.393437385559082
    9. 'n' → logprob: -8.518437385559082
    10. 'yl' → logprob: -8.518437385559082

Token 41: '.reverse' (ID: 65426)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2001996785402298
    2. '[-' → logprob: -2.200199604034424
    3. '<|end|>' → logprob: -3.075199604034424
    4. '.' → logprob: -4.075199604034424
    5. '[n' → logprob: -6.450199604034424
    6. '[
' → logprob: -6.825199604034424
    7. '[len' → logprob: -7.075199604034424
    8. '[x' → logprob: -7.200199604034424
    9. '<|end|>' → logprob: -7.575199604034424
    10. '```' → logprob: -7.700199604034424

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022678142704535276
    2. '(' → logprob: -8.625226974487305
    3. '`()' → logprob: -11.000226974487305
    4. '()`' → logprob: -11.500226974487305
    5. '()
' → logprob: -12.000226974487305
    6. ']()' → logprob: -12.750226974487305
    7. '())' → logprob: -13.000226974487305
    8. '()

' → logprob: -13.000226974487305
    9. '|()
' → logprob: -13.875226974487305
    10. ')' → logprob: -14.125226974487305

Token 43: 'yi' (ID: 10246)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8769860863685608
    2. 'y' → logprob: -2.001986026763916
    3. 'm' → logprob: -2.251986026763916
    4. 'yi' → logprob: -2.376986026763916
    5. 'x' → logprob: -2.626986026763916
    6. '<|end|>' → logprob: -2.751986026763916
    7. 'for' → logprob: -3.001986026763916
    8. 'i' → logprob: -4.251986026763916
    9. '#' → logprob: -4.376986026763916
    10. ')' → logprob: -4.876986026763916

Token 44: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.018590828403830528
    2. '.' → logprob: -4.018590927124023
    3. '.reverse' → logprob: -8.018590927124023
    4. 'sort' → logprob: -9.268590927124023
    5. '.append' → logprob: -11.143590927124023
    6. ' .' → logprob: -13.768590927124023
    7. ' sort' → logprob: -15.393590927124023
    8. '[::-' → logprob: -15.393590927124023
    9. '.setdefault' → logprob: -15.518590927124023
    10. '<|end|>' → logprob: -16.143590927124023

Token 45: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.538490950129926e-05
    2. '(' → logprob: -10.625055313110352
    3. '())' → logprob: -11.750055313110352
    4. '()`' → logprob: -12.000055313110352
    5. '()(' → logprob: -12.500055313110352
    6. '()
' → logprob: -12.750055313110352
    7. '()<' → logprob: -13.250055313110352
    8. '()>' → logprob: -13.500055313110352
    9. '()

' → logprob: -13.625055313110352
    10. '()\' → logprob: -14.000055313110352

Token 46: 'if' (ID: 366)
  Prédit: 'yi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yi' → logprob: -0.0014019061345607042
    2. 'y' → logprob: -6.751401901245117
    3. 'print' → logprob: -9.626401901245117
    4. 'reverse' → logprob: -9.751401901245117
    5. 'yl' → logprob: -10.001401901245117
    6. '```' → logprob: -11.626401901245117
    7. 'yii' → logprob: -12.251401901245117
    8. 'ye' → logprob: -12.376401901245117
    9. 'if' → logprob: -12.376401901245117
    10. 'yj' → logprob: -12.501401901245117

Token 47: ' xi' (ID: 26869)
  Prédit: ' xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xi' → logprob: -0.10595401376485825
    2. ' x' → logprob: -3.3559539318084717
    3. 'xi' → logprob: -3.6059539318084717
    4. ' yi' → logprob: -4.355954170227051
    5. ' (' → logprob: -4.980954170227051
    6. 'x' → logprob: -5.230954170227051
    7. ' len' → logprob: -5.355954170227051
    8. '(x' → logprob: -6.105954170227051
    9. ' y' → logprob: -6.105954170227051
    10. ' n' → logprob: -6.230954170227051

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1276104599237442
    2. '[-' → logprob: -2.127610445022583
    3. '==' → logprob: -8.252610206604004
    4. '[len' → logprob: -9.377610206604004
    5. ' and' → logprob: -9.627610206604004
    6. '>' → logprob: -9.752610206604004
    7. ' ==' → logprob: -10.127610206604004
    8. '.' → logprob: -10.627610206604004
    9. ' ' → logprob: -11.002610206604004
    10. '!=' → logprob: -11.252610206604004

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01683797314763069
    2. ' ' → logprob: -4.391838073730469
    3. '-' → logprob: -6.141838073730469
    4. '1' → logprob: -6.266838073730469
    5. ' -' → logprob: -9.141838073730469
    6. 'm' → logprob: -9.516838073730469
    7. '[' → logprob: -10.954338073730469
    8. ' m' → logprob: -11.266838073730469
    9. 'n' → logprob: -11.579338073730469
    10. 'x' → logprob: -12.016838073730469

Token 50: ']<' (ID: 80424)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8769672513008118
    2. '>' → logprob: -1.376967191696167
    3. '==' → logprob: -2.251967191696167
    4. ' -' → logprob: -2.376967191696167
    5. ' ==' → logprob: -2.626967191696167
    6. '-' → logprob: -3.251967191696167
    7. '<' → logprob: -5.501967430114746
    8. ' <' → logprob: -5.626967430114746
    9. ' >=' → logprob: -5.751967430114746
    10. '>=' → logprob: -5.876967430114746

Token 51: 'yi' (ID: 10246)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6493902206420898
    2. 'x' → logprob: -1.2743902206420898
    3. 'm' → logprob: -2.52439022064209
    4. ' y' → logprob: -3.27439022064209
    5. ' x' → logprob: -4.14939022064209
    6. 'yi' → logprob: -4.39939022064209
    7. 'n' → logprob: -4.64939022064209
    8. '0' → logprob: -4.64939022064209
    9. 'xi' → logprob: -4.77439022064209
    10. '=' → logprob: -5.14939022064209

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. ' [' → logprob: -12.75001049041748
    3. '```' → logprob: -13.75001049041748
    4. '[
' → logprob: -14.00001049041748
    5. ':' → logprob: -14.12501049041748
    6. '0' → logprob: -14.25001049041748
    7. '[i' → logprob: -14.25001049041748
    8. '[-' → logprob: -14.37501049041748
    9. '\[' → logprob: -14.37501049041748
    10. ''[' → logprob: -14.37501049041748

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001475220051361248
    2. ' ' → logprob: -8.875147819519043
    3. '1' → logprob: -12.000147819519043
    4. '[' → logprob: -14.625147819519043
    5. '-' → logprob: -15.500147819519043
    6. '   ' → logprob: -15.500147819519043
    7. 'x' → logprob: -15.875147819519043
    8. '  ' → logprob: -16.312646865844727
    9. ']' → logprob: -16.625146865844727
    10. 'm' → logprob: -17.312646865844727

Token 54: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0072728293016552925
    2. ')' → logprob: -5.257272720336914
    3. ':' → logprob: -6.382272720336914
    4. ' ):' → logprob: -8.632272720336914
    5. '):
' → logprob: -9.007272720336914
    6. ' or' → logprob: -11.632272720336914
    7. '+' → logprob: -11.882272720336914
    8. ' and' → logprob: -12.382272720336914
    9. ' )' → logprob: -12.757272720336914
    10. '):

' → logprob: -13.007272720336914

Token 55: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04169084504246712
    2. ' print' → logprob: -3.2916908264160156
    3. '   ' → logprob: -5.791690826416016
    4. '\n' → logprob: -7.791690826416016
    5. '	print' → logprob: -9.916690826416016
    6. 'pr' → logprob: -10.291690826416016
    7. '
' → logprob: -11.291690826416016
    8. ' ' → logprob: -11.416690826416016
    9. 'prin' → logprob: -11.416690826416016
    10. '```' → logprob: -11.916690826416016

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0014221377205103636
    2. ' print' → logprob: -6.751421928405762
    3. '   ' → logprob: -8.501421928405762
    4. 'pr' → logprob: -10.626421928405762
    5. 'x' → logprob: -12.251421928405762
    6. 'prin' → logprob: -12.376421928405762
    7. 'prit' → logprob: -12.751421928405762
    8. 'pass' → logprob: -12.876421928405762
    9. ' ' → logprob: -13.126421928405762
    10. 'pri' → logprob: -13.376421928405762

Token 57: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5143525004386902
    2. '("' → logprob: -1.389352560043335
    3. '(x' → logprob: -2.014352560043335
    4. '('' → logprob: -4.389352321624756
    5. '(-' → logprob: -6.264352321624756
    6. '("("' → logprob: -6.264352321624756
    7. '(y' → logprob: -6.639352321624756
    8. '("<' → logprob: -7.514352321624756
    9. '(":' → logprob: -7.639352321624756
    10. '((' → logprob: -8.639352798461914

Token 58: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.06757098436355591
    2. 'NO' → logprob: -3.942570924758911
    3. '-' → logprob: -4.56757116317749
    4. 'Yes' → logprob: -5.06757116317749
    5. 'War' → logprob: -5.06757116317749
    6. 'YES' → logprob: -5.44257116317749
    7. 'Y' → logprob: -5.94257116317749
    8. 'N' → logprob: -6.56757116317749
    9. '"' → logprob: -6.69257116317749
    10. ':' → logprob: -6.94257116317749

Token 59: ' War' (ID: 8545)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5326291918754578
    2. ')' → logprob: -0.9076291918754578
    3. ' ")' → logprob: -4.907629013061523
    4. ' )' → logprob: -7.532629013061523
    5. '"' → logprob: -7.907629013061523
    6. 'else' → logprob: -8.157629013061523
    7. '\n' → logprob: -8.282629013061523
    8. ')")' → logprob: -8.407629013061523
    9. ' else' → logprob: -9.282629013061523
    10. 'n' → logprob: -9.657629013061523

Token 60: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004621187690645456
    2. '")
' → logprob: -5.6296210289001465
    3. '")
' → logprob: -7.6296210289001465
    4. '!")' → logprob: -7.7546210289001465
    5. '"' → logprob: -10.629621505737305
    6. ')' → logprob: -11.129621505737305
    7. '!' → logprob: -11.254621505737305
    8. '")

' → logprob: -11.254621505737305
    9. ')")' → logprob: -11.879621505737305
    10. 'n' → logprob: -12.379621505737305

Token 61: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011088619939982891
    2. ' else' → logprob: -4.761088848114014
    3. 'elif' → logprob: -6.136088848114014
    4. ')' → logprob: -8.886088371276855
    5. '<|end|>' → logprob: -9.136088371276855
    6. 'e' → logprob: -11.386088371276855
    7. 'el' → logprob: -11.761088371276855
    8. ' elif' → logprob: -11.761088371276855
    9. '```' → logprob: -11.886088371276855
    10. '#else' → logprob: -12.511088371276855

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000634639582131058
    2. ':
' → logprob: -7.375634670257568
    3. '   ' → logprob: -12.00063419342041
    4. ' :' → logprob: -14.12563419342041
    5. ':
' → logprob: -14.75063419342041
    6. ':

' → logprob: -15.75063419342041
    7. 'print' → logprob: -15.87563419342041
    8. '  ' → logprob: -16.625635147094727
    9. '{' → logprob: -16.750635147094727
    10. '```' → logprob: -17.000635147094727

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023677261546254158
    2. 'print' → logprob: -3.773677349090576
    3. ' print' → logprob: -7.898677349090576
    4. '```' → logprob: -10.898676872253418
    5. '	print' → logprob: -11.023676872253418
    6. '       ' → logprob: -11.023676872253418
    7. '   ' → logprob: -12.898676872253418
    8. '    
' → logprob: -13.523676872253418
    9. ' ' → logprob: -13.648676872253418
    10. '    ' → logprob: -14.273676872253418

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011861803941428661
    2. ' print' → logprob: -6.876186370849609
    3. '   ' → logprob: -9.25118637084961
    4. 'if' → logprob: -10.25118637084961
    5. 'for' → logprob: -11.50118637084961
    6. '	print' → logprob: -13.37618637084961
    7. 'pr' → logprob: -13.50118637084961
    8. ' ' → logprob: -13.62618637084961
    9. 'prin' → logprob: -13.75118637084961
    10. '  ' → logprob: -13.87618637084961

Token 65: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.19036254286766052
    2. '(' → logprob: -1.815362572669983
    3. '("("' → logprob: -4.565362453460693
    4. '("(' → logprob: -9.565362930297852
    5. '"' → logprob: -10.690362930297852
    6. '("")' → logprob: -11.065362930297852
    7. '('' → logprob: -11.065362930297852
    8. '(""' → logprob: -11.315362930297852
    9. '()' → logprob: -12.315362930297852
    10. '("""' → logprob: -13.065362930297852

Token 66: 'War' (ID: 34786)
  Prédit: 'War'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'War' → logprob: -0.008954309858381748
    2. 'Yes' → logprob: -4.8839545249938965
    3. '"' → logprob: -6.8839545249938965
    4. 'No' → logprob: -9.258954048156738
    5. 'Wa' → logprob: -9.758954048156738
    6. ' War' → logprob: -10.008954048156738
    7. 'Warp' → logprob: -10.133954048156738
    8. 'war' → logprob: -11.258954048156738
    9. 'Wars' → logprob: -11.383954048156738
    10. '"W' → logprob: -11.758954048156738

Token 67: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0017220689915120602
    2. ')' → logprob: -7.0017218589782715
    3. ')")' → logprob: -7.1267218589782715
    4. '()' → logprob: -13.00172233581543
    5. '!")' → logprob: -13.00172233581543
    6. '")
' → logprob: -13.37672233581543
    7. '}")' → logprob: -14.87672233581543
    8. '')' → logprob: -15.75172233581543
    9. ' ")' → logprob: -16.50172233581543
    10. '"' → logprob: -16.87672233581543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 33.85%
Précision adaptée (1ère position): 36.92%
Précision (top 10): 72.31%
================================================================================
