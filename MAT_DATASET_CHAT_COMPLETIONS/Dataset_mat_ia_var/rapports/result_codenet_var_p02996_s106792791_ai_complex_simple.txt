================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

from itertools import accumulate as acc, combinations as combs, permutations as perms, groupby as gby
from math import factorial as fact
from collections import deque, Counter
from heapq import *
from copy import deepcopy as deepcp, copy as cp
from operator import itemgetter as ig
from functools import reduce as red
from fractions import gcd as fracgcd # intentionally using deprecated

def factorize(n):
    return [(x, sum(1 for _ in iter(lambda n=n, x=x: (n := n // x) if n % x == 0 else None, None)))
            for x in filter(lambda k: not any(map(lambda d: k % d == 0, range(2, int(k**0.5)+1))), range(2, n+1))
            if (n0:=[n], any((n0:= [nx//x if (nx:=n0[0]) % x==0 else nx for _ in range(sum(n0[0] % x == 0 for _ in iter(int, 1)))])[0] != n0[0] for _ in range(1)))]
def combinations_count(n, r):
    return red(lambda a,b:a*b, range(max(n-r+1,1),n+1), 1) // red(lambda a,b:a*b, range(1,r+1),1) if 0<=r<=n else 0
def combination_with_repetition_count(n, r):
    return combinations_count(n+r-1, r)

def gcds(nums):
    return red(fracgcd, nums)
def lcm(x, y): return x * y // fracgcd(x, y)
def lcms(nums): return red(lcm, nums, 1)

INF, MOD = 10**18, 10**9 + 7
modpow = lambda a, n, p=MOD: pow(a, n, p)
def modinv(a, p=MOD): return pow(a, p-2, p)
def modinv_list(n, p=MOD):
    return [0,1]*((n+2)//2)[:n+1] if n<=1 else [0,1]+[(inv:=p % i) * (p - p//i) % p if (inv:=[0,1][p % i>1])==0 else (l:=modinv_list(n-1,p)) and l[i] for i in range(2,n+1)]
def modfactorial_list(n, p=MOD): return [x and (x*modfactorial_list(x-1,p)[-1]%p) or 1 for x in range(n+1)]
def modcomb(n, k, fac_list = [], p = MOD):
    from math import factorial
    if n<0 or k<0 or n<k: return 0
    if n==0 or k==0: return 1
    a, b, c = (factorial(n)%p, factorial(k)%p, factorial(n-k)%p) if len(fac_list)<=n else (fac_list[n], fac_list[k], fac_list[n-k])
    return a * pow(b, p-2, p) * pow(c, p-2, p) % p
modadd = lambda a, b, p=MOD: ((a%p)+(b%p))%p
modsub = lambda a, b, p=MOD: ((a%p)-(b%p))%p
modmul = lambda a, b, p=MOD: (a%p*b%p)%p
moddiv = lambda a, b, p=MOD: modmul(a, pow(b, p-2, p), p)

r = lambda: sys.stdin.readline().strip()
R = lambda: list(map(int, r().split()))
R_t = lambda: tuple(map(int, r().split()))
Rmap = lambda: map(int, r().split())

N, AB = int(r()), [R_t() for _ in range(int(sys.modules['__main__'].__dict__.get('N',0) or N))]
ABC = sorted(list(map(lambda ab: (ab[0],ab[1],ab[1]-ab[0]), AB)), key=ig(1))
from functools import reduce
f=lambda:reduce(lambda acc,abc:(acc[0]+abc[0],acc[1] and acc[0]+abc[0]<=abc[1]),ABC,(0,True))[1]
print(['No','Yes'][f()])

# Un-comment next lines for main()
#def main():
#    ...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.963691804325208e-05
    2. ' .' → logprob: -11.875029563903809
    3. '[' → logprob: -12.000029563903809
    4. '.import' → logprob: -13.250029563903809
    5. '."""' → logprob: -13.625029563903809
    6. '.`' → logprob: -13.750029563903809
    7. '.​' → logprob: -14.000029563903809
    8. '.user' → logprob: -14.125029563903809
    9. '.readline' → logprob: -14.250029563903809
    10. '.]' → logprob: -14.250029563903809

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4140441635390744e-05
    2. '(
' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.375014305114746
    5. '("("' → logprob: -15.250014305114746
    6. '((' → logprob: -15.375014305114746
    7. '('' → logprob: -15.500014305114746
    8. '(
' → logprob: -15.750014305114746
    9. '```' → logprob: -16.12501335144043
    10. '(.' → logprob: -16.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5762450695037842
    2. '100' → logprob: -0.8262450695037842
    3. '300' → logprob: -8.951245307922363
    4. '500' → logprob: -9.076245307922363
    5. '999' → logprob: -10.701245307922363
    6. '1' → logprob: -11.576245307922363
    7. ' ' → logprob: -11.701245307922363
    8. '150' → logprob: -12.326245307922363
    9. '200' → logprob: -12.326245307922363
    10. '250' → logprob: -12.701245307922363

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -12.500007629394531
    3. '))' → logprob: -12.500007629394531
    4. ')
' → logprob: -14.875007629394531
    5. ')))' → logprob: -17.25000762939453
    6. ' ' → logprob: -17.37500762939453
    7. ')`' → logprob: -17.62500762939453
    8. '')' → logprob: -17.87500762939453
    9. '```' → logprob: -17.87500762939453
    10. '）' → logprob: -18.37500762939453

Token 13: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.18554745614528656
    2. ' math' → logprob: -2.310547351837158
    3. ' functools' → logprob: -3.685547351837158
    4. ' typing' → logprob: -3.810547351837158
    5. 'collections' → logprob: -4.185547351837158
    6. ' threading' → logprob: -5.935547351837158
    7. ' ' → logprob: -6.310547351837158
    8. ' random' → logprob: -7.560547351837158
    9. ' os' → logprob: -7.810547351837158
    10. ' time' → logprob: -7.810547351837158

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01272506918758154
    2. 'import' → logprob: -4.387724876403809
    3. '.' → logprob: -9.012724876403809
    4. ' .' → logprob: -10.512724876403809
    5. '	import' → logprob: -10.512724876403809
    6. ' ' → logprob: -11.137724876403809
    7. '.import' → logprob: -11.637724876403809
    8. ' itertools' → logprob: -11.887724876403809
    9. '.groupby' → logprob: -13.512724876403809
    10. '<|end|>' → logprob: -13.762724876403809

Token 16: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.0998731851577759
    2. ' product' → logprob: -1.3498731851577759
    3. ' combinations' → logprob: -1.5998731851577759
    4. ' chain' → logprob: -2.5998730659484863
    5. ' cycle' → logprob: -2.5998730659484863
    6. 'com' → logprob: -3.9748730659484863
    7. ' accumulate' → logprob: -4.724873065948486
    8. ' count' → logprob: -4.724873065948486
    9. 'product' → logprob: -5.349873065948486
    10. ' group' → logprob: -5.349873065948486

Token 17: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3847506046295166
    2. '\n' → logprob: -2.2597506046295166
    3. '
' → logprob: -2.5097506046295166
    4. 'def' → logprob: -2.8847506046295166
    5. '\' → logprob: -3.3847506046295166
    6. ',' → logprob: -5.0097503662109375
    7. 'for' → logprob: -5.5097503662109375
    8. '<|end|>' → logprob: -5.6347503662109375
    9. ')' → logprob: -5.7597503662109375
    10. 'from' → logprob: -5.8847503662109375

Token 18: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.003771458752453327
    2. ' acc' → logprob: -6.5037713050842285
    3. 'ac' → logprob: -6.6287713050842285
    4. 'a' → logprob: -7.3787713050842285
    5. '	acc' → logprob: -8.628771781921387
    6. ''acc' → logprob: -10.003771781921387
    7. 'acct' → logprob: -10.878771781921387
    8. '(acc' → logprob: -11.378771781921387
    9. '_acc' → logprob: -11.503771781921387
    10. 'acci' → logprob: -11.753771781921387

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7857358455657959
    2. ')' → logprob: -1.410735845565796
    3. ',' → logprob: -1.785735845565796
    4. 'um' → logprob: -3.160735845565796
    5. 'umulate' → logprob: -4.035736083984375
    6. '\' → logprob: -4.160736083984375
    7. '
' → logprob: -4.660736083984375
    8. '<|end|>' → logprob: -4.910736083984375
    9. 'u' → logprob: -5.285736083984375
    10. '()' → logprob: -5.535736083984375

Token 20: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2659671306610107
    2. ' chain' → logprob: -1.5159671306610107
    3. 'chain' → logprob: -1.5159671306610107
    4. 'product' → logprob: -1.7659671306610107
    5. ' product' → logprob: -3.7659671306610107
    6. ' permutations' → logprob: -3.8909671306610107
    7. 'cycle' → logprob: -4.26596736907959
    8. 'per' → logprob: -4.39096736907959
    9. 'compress' → logprob: -4.76596736907959
    10. 'group' → logprob: -5.01596736907959

Token 21: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7958360910415649
    2. '<|end|>' → logprob: -1.170836091041565
    3. ',' → logprob: -2.4208359718322754
    4. '(
' → logprob: -3.0458359718322754
    5. ' (' → logprob: -3.2958359718322754
    6. ' as' → logprob: -3.9208359718322754
    7. '<|end|>' → logprob: -4.295835971832275
    8. 'from' → logprob: -4.670835971832275
    9. 'import' → logprob: -4.795835971832275
    10. 'as' → logprob: -6.045835971832275

Token 22: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.03969955071806908
    2. 'com' → logprob: -4.289699554443359
    3. ' combos' → logprob: -4.414699554443359
    4. 'comb' → logprob: -5.539699554443359
    5. ' combo' → logprob: -5.789699554443359
    6. ' com' → logprob: -6.039699554443359
    7. ' ' → logprob: -6.414699554443359
    8. ' cmb' → logprob: -6.914699554443359
    9. ' itertools' → logprob: -7.789699554443359
    10. 'combo' → logprob: -8.53969955444336

Token 23: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2689841091632843
    2. ',' → logprob: -2.268984079360962
    3. '(
' → logprob: -2.893984079360962
    4. '<|end|>' → logprob: -3.268984079360962
    5. '\' → logprob: -4.018984317779541
    6. ')' → logprob: -5.518984317779541
    7. 'from' → logprob: -6.018984317779541
    8. '\n' → logprob: -6.018984317779541
    9. '
' → logprob: -6.143984317779541
    10. '<|end|>' → logprob: -6.893984317779541

Token 24: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5729005932807922
    2. ',' → logprob: -1.6979005336761475
    3. '(
' → logprob: -1.9479005336761475
    4. 'for' → logprob: -3.5729005336761475
    5. 'import' → logprob: -4.072900772094727
    6. ')' → logprob: -4.322900772094727
    7. 'from' → logprob: -4.697900772094727
    8. '<|end|>' → logprob: -4.822900772094727
    9. 'def' → logprob: -4.947900772094727
    10. '\' → logprob: -5.072900772094727

Token 25: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.2827908992767334
    2. 'product' → logprob: -2.4077908992767334
    3. 'per' → logprob: -2.6577908992767334
    4. ' product' → logprob: -2.9077908992767334
    5. ' chain' → logprob: -4.0327911376953125
    6. 'chain' → logprob: -5.0327911376953125
    7. 'com' → logprob: -6.5327911376953125
    8. ' ' → logprob: -6.5327911376953125
    9. '```' → logprob: -7.0327911376953125
    10. 'counter' → logprob: -7.4077911376953125

Token 26: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.012072437442839146
    2. 'as' → logprob: -4.637072563171387
    3. '<|end|>' → logprob: -6.137072563171387
    4. '<|end|>' → logprob: -9.762072563171387
    5. '(as' → logprob: -10.262072563171387
    6. '(com' → logprob: -10.887072563171387
    7. '	as' → logprob: -11.137072563171387
    8. ' (' → logprob: -11.512072563171387
    9. 'from' → logprob: -12.012072563171387
    10. '(' → logprob: -12.637072563171387

Token 27: ' perms' (ID: 189933)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.4900400638580322
    2. ' perms' → logprob: -1.1150400638580322
    3. ' perm' → logprob: -3.3650400638580322
    4. 'per' → logprob: -3.7400400638580322
    5. ' per' → logprob: -8.115039825439453
    6. ' comb' → logprob: -8.365039825439453
    7. '_perm' → logprob: -8.865039825439453
    8. ' permutations' → logprob: -8.865039825439453
    9. '	per' → logprob: -9.240039825439453
    10. ' ' → logprob: -9.240039825439453

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46121254563331604
    2. '(' → logprob: -2.211212635040283
    3. '<|end|>' → logprob: -2.336212635040283
    4. '(
' → logprob: -2.836212635040283
    5. ')' → logprob: -3.211212635040283
    6. '
' → logprob: -3.711212635040283
    7. 'import' → logprob: -4.461212635040283
    8. ',
' → logprob: -5.211212635040283
    9. 'from' → logprob: -5.336212635040283
    10. '\n' → logprob: -5.461212635040283

Token 29: ' group' (ID: 3566)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.07179801166057587
    2. ' product' → logprob: -2.821798086166382
    3. 'chain' → logprob: -5.446797847747803
    4. 'com' → logprob: -6.071797847747803
    5. ' chain' → logprob: -7.196797847747803
    6. 'cycle' → logprob: -7.571797847747803
    7. '```' → logprob: -7.696797847747803
    8. 'group' → logprob: -7.821797847747803
    9. 'per' → logprob: -8.821798324584961
    10. 'count' → logprob: -9.071798324584961

Token 30: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00030078491545282304
    2. 'y' → logprob: -8.125300407409668
    3. 'py' → logprob: -12.750300407409668
    4. 'b' → logprob: -14.125300407409668
    5. 'ing' → logprob: -14.875300407409668
    6. 'byg' → logprob: -15.125300407409668
    7. 's' → logprob: -15.625300407409668
    8. 'by's' → logprob: -15.875300407409668
    9. 'from' → logprob: -16.250301361083984
    10. 'ertools' → logprob: -16.875301361083984

Token 31: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.26199808716773987
    2. 'as' → logprob: -1.6369980573654175
    3. ',' → logprob: -4.136998176574707
    4. '<|end|>' → logprob: -4.636998176574707
    5. 'from' → logprob: -5.636998176574707
    6. '(' → logprob: -5.761998176574707
    7. 'import' → logprob: -6.136998176574707
    8. ' (' → logprob: -7.761998176574707
    9. ')' → logprob: -8.261998176574707
    10. '(as' → logprob: -8.636998176574707

Token 32: ' g' (ID: 329)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.6148045659065247
    2. 'group' → logprob: -1.3648045063018799
    3. ' grp' → logprob: -2.11480450630188
    4. 'grp' → logprob: -3.36480450630188
    5. '"group' → logprob: -4.364804744720459
    6. 'g' → logprob: -4.364804744720459
    7. '.groupby' → logprob: -4.614804744720459
    8. ' g' → logprob: -4.864804744720459
    9. ' grou' → logprob: -5.989804744720459
    10. ' ' → logprob: -6.989804744720459

Token 33: 'by' (ID: 2345)
  Prédit: 'roup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roup' → logprob: -0.07986703515052795
    2. 'rou' → logprob: -2.704867124557495
    3. 'r' → logprob: -5.079866886138916
    4. 'roups' → logprob: -6.204866886138916
    5. 'rp' → logprob: -6.829866886138916
    6. 'rop' → logprob: -8.329867362976074
    7. 'b' → logprob: -9.204867362976074
    8. 'ru' → logprob: -9.454867362976074
    9. ' roup' → logprob: -10.079867362976074
    10. '```' → logprob: -10.704867362976074

Token 34: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4292220175266266
    2. '<|end|>' → logprob: -1.5542219877243042
    3. 'from' → logprob: -2.9292221069335938
    4. ')' → logprob: -3.3042221069335938
    5. 'import' → logprob: -3.9292221069335938
    6. '<|end|>' → logprob: -5.554222106933594
    7. 'def' → logprob: -5.804222106933594
    8. ',
' → logprob: -5.929222106933594
    9. '```' → logprob: -5.929222106933594
    10. '\n' → logprob: -6.179222106933594

Token 35: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08356403559446335
    2. ' collections' → logprob: -3.208564043045044
    3. 'math' → logprob: -3.708564043045044
    4. ' functools' → logprob: -4.583563804626465
    5. 'collections' → logprob: -5.708563804626465
    6. ' operator' → logprob: -6.708563804626465
    7. ' itertools' → logprob: -8.458563804626465
    8. ' ' → logprob: -9.333563804626465
    9. 'operator' → logprob: -9.458563804626465
    10. ' heap' → logprob: -10.583563804626465

Token 37: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2572467625141144
    2. 'import' → logprob: -1.507246732711792
    3. '<|end|>' → logprob: -5.382246971130371
    4. '<|end|>' → logprob: -8.132246971130371
    5. '	import' → logprob: -8.382246971130371
    6. '_import' → logprob: -9.632246971130371
    7. ' ' → logprob: -9.882246971130371
    8. '```' → logprob: -11.507246971130371
    9. ' importar' → logprob: -11.757246971130371
    10. ' sqrt' → logprob: -11.757246971130371

Token 38: ' factorial' (ID: 111204)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.5074530839920044
    2. ' factorial' → logprob: -1.5074530839920044
    3. ' inf' → logprob: -2.007452964782715
    4. 'ceil' → logprob: -2.382452964782715
    5. 'inf' → logprob: -2.507452964782715
    6. ' ceil' → logprob: -2.632452964782715
    7. ' gcd' → logprob: -2.632452964782715
    8. ' sqrt' → logprob: -2.757452964782715
    9. 'factor' → logprob: -3.632452964782715
    10. 'log' → logprob: -5.257452964782715

Token 39: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2398909479379654
    2. '(' → logprob: -1.8648909330368042
    3. '
' → logprob: -3.9898910522460938
    4. '(
' → logprob: -4.614891052246094
    5. ',
' → logprob: -4.989891052246094
    6. '<|end|>' → logprob: -5.614891052246094
    7. ' ' → logprob: -5.739891052246094
    8. 'import' → logprob: -5.864891052246094
    9. '

' → logprob: -6.114891052246094
    10. 'def' → logprob: -6.364891052246094

Token 40: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.13901448249816895
    2. 'fac' → logprob: -2.264014482498169
    3. 'f' → logprob: -4.26401424407959
    4. ' fact' → logprob: -5.26401424407959
    5. 'factor' → logprob: -5.26401424407959
    6. ' fac' → logprob: -7.63901424407959
    7. ' factorial' → logprob: -8.01401424407959
    8. 'fabs' → logprob: -8.63901424407959
    9. ' f' → logprob: -8.88901424407959
    10. ' ' → logprob: -9.76401424407959

Token 41: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7921229004859924
    2. '
' → logprob: -1.1671228408813477
    3. 'def' → logprob: -2.5421228408813477
    4. 'from' → logprob: -2.9171228408813477
    5. ',
' → logprob: -3.2921228408813477
    6. 'import' → logprob: -3.7921228408813477
    7. '

' → logprob: -4.042122840881348
    8. ')' → logprob: -4.917122840881348
    9. '
' → logprob: -6.167122840881348
    10. '\n' → logprob: -6.167122840881348

Token 42: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.27148470282554626
    2. 'import' → logprob: -2.646484613418579
    3. ',' → logprob: -2.771484613418579
    4. 'def' → logprob: -2.896484613418579
    5. '

' → logprob: -3.521484613418579
    6. '
' → logprob: -4.396484851837158
    7. ' from' → logprob: -6.521484851837158
    8. '
' → logprob: -6.896484851837158
    9. '\n' → logprob: -7.396484851837158
    10. ',
' → logprob: -7.396484851837158

Token 43: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7027626037597656
    2. ' collections' → logprob: -1.0777626037597656
    3. ' fractions' → logprob: -3.0777626037597656
    4. 'operator' → logprob: -3.2027626037597656
    5. 'collections' → logprob: -3.3277626037597656
    6. ' functools' → logprob: -3.5777626037597656
    7. 'fra' → logprob: -5.577762603759766
    8. 'math' → logprob: -5.702762603759766
    9. ' math' → logprob: -5.702762603759766
    10. ' heap' → logprob: -7.077762603759766

Token 44: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11756210774183273
    2. ' import' → logprob: -2.6175620555877686
    3. '<|end|>' → logprob: -3.3675620555877686
    4. '.' → logprob: -6.617562294006348
    5. '```' → logprob: -7.867562294006348
    6. 'from' → logprob: -7.992562294006348
    7. '6' → logprob: -8.492562294006348
    8. 'abc' → logprob: -8.742562294006348
    9. '<|end|>' → logprob: -8.992562294006348
    10. ' defaultdict' → logprob: -9.367562294006348

Token 45: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.1385999470949173
    2. ' deque' → logprob: -2.1385998725891113
    3. 'deque' → logprob: -4.513599872589111
    4. ' Counter' → logprob: -7.638599872589111
    5. 'default' → logprob: -8.88860034942627
    6. 'Counter' → logprob: -11.51360034942627
    7. 'de' → logprob: -11.88860034942627
    8. ' de' → logprob: -13.26360034942627
    9. '.de' → logprob: -13.51360034942627
    10. ' default' → logprob: -13.63860034942627

Token 46: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6154277324676514
    2. 'def' → logprob: -1.1154277324676514
    3. '
' → logprob: -2.8654277324676514
    4. 'import' → logprob: -3.9904277324676514
    5. '<|end|>' → logprob: -4.1154279708862305
    6. ',' → logprob: -4.6154279708862305
    7. 'from' → logprob: -4.8654279708862305
    8. '\n' → logprob: -5.1154279708862305
    9. ' 

' → logprob: -5.6154279708862305
    10. '#' → logprob: -6.2404279708862305

Token 47: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.48897552490234375
    2. 'default' → logprob: -1.3639755249023438
    3. 'Counter' → logprob: -2.2389755249023438
    4. ' Counter' → logprob: -3.8639755249023438
    5. 'named' → logprob: -5.988975524902344
    6. ' named' → logprob: -7.613975524902344
    7. 'Ordered' → logprob: -7.738975524902344
    8. 'deque' → logprob: -10.738975524902344
    9. ' Ordered' → logprob: -10.988975524902344
    10. ' default' → logprob: -10.988975524902344

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.798742413520813
    2. '
' → logprob: -1.298742413520813
    3. 'import' → logprob: -1.923742413520813
    4. '

' → logprob: -2.7987422943115234
    5. '#' → logprob: -3.6737422943115234
    6. '\n' → logprob: -4.798742294311523
    7. '```' → logprob: -4.798742294311523
    8. ',' → logprob: -5.048742294311523
    9. '<|end|>' → logprob: -5.298742294311523
    10. 'from' → logprob: -5.423742294311523

Token 50: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.20346605777740479
    2. 'heap' → logprob: -2.3284659385681152
    3. ' bis' → logprob: -3.7034659385681152
    4. ' functools' → logprob: -3.8284659385681152
    5. 'bis' → logprob: -4.328465938568115
    6. ' operator' → logprob: -5.078465938568115
    7. ' math' → logprob: -5.203465938568115
    8. ' typing' → logprob: -5.203465938568115
    9. ' itertools' → logprob: -5.578465938568115
    10. 'math' → logprob: -6.078465938568115

Token 51: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'queue' → logprob: -14.375000953674316
    3. ' queue' → logprob: -18.25
    4. 'import' → logprob: -18.5
    5. '<|end|>' → logprob: -18.5
    6. 'Queue' → logprob: -19.125
    7. 'que' → logprob: -19.25
    8. 'n' → logprob: -19.375
    9. '_queue' → logprob: -19.5
    10. 's' → logprob: -19.625

Token 52: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02794279158115387
    2. 'import' → logprob: -3.6529428958892822
    3. '<|end|>' → logprob: -6.902942657470703
    4. ' ' → logprob: -7.402942657470703
    5. ' ' → logprob: -11.777942657470703
    6. '_import' → logprob: -12.902942657470703
    7. '	import' → logprob: -13.027942657470703
    8. ' ```' → logprob: -13.152942657470703
    9. '<|end|>' → logprob: -13.277942657470703
    10. 'space' → logprob: -13.402942657470703

Token 53: ' *
' (ID: 2099)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.3420727252960205
    2. 'he' → logprob: -1.3420727252960205
    3. 'heap' → logprob: -3.5920727252960205
    4. ' heap' → logprob: -7.217072486877441
    5. ' ' → logprob: -10.092072486877441
    6. 'nl' → logprob: -10.842072486877441
    7. '.he' → logprob: -11.092072486877441
    8. 'merge' → logprob: -11.467072486877441
    9. ' n' → logprob: -11.592072486877441
    10. 'n' → logprob: -11.842072486877441

Token 54: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' copy' (ID: 5150)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7558457851409912
    2. 'bis' → logprob: -1.1308457851409912
    3. ' bis' → logprob: -1.8808457851409912
    4. 'operator' → logprob: -3.880845785140991
    5. ' typing' → logprob: -5.25584602355957
    6. ' functools' → logprob: -5.25584602355957
    7. ' itertools' → logprob: -5.25584602355957
    8. ' math' → logprob: -5.38084602355957
    9. ' random' → logprob: -5.50584602355957
    10. ' copy' → logprob: -6.00584602355957

Token 56: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.576045036315918
    2. 'import' → logprob: -0.826045036315918
    3. '	import' → logprob: -9.701045036315918
    4. ' ' → logprob: -10.576045036315918
    5. '_import' → logprob: -12.326045036315918
    6. ' importar' → logprob: -12.326045036315918
    7. '<|end|>' → logprob: -12.576045036315918
    8. ' imports' → logprob: -13.576045036315918
    9. '.deepcopy' → logprob: -13.951045036315918
    10. ' ' → logprob: -14.076045036315918

Token 57: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0012638057814911008
    2. 'deep' → logprob: -7.626263618469238
    3. '.deepcopy' → logprob: -7.751263618469238
    4. ' copy' → logprob: -8.501263618469238
    5. 'copy' → logprob: -8.876263618469238
    6. ' deep' → logprob: -13.251263618469238
    7. ' dee' → logprob: -14.376263618469238
    8. 'dee' → logprob: -16.126264572143555
    9. 'deque' → logprob: -17.001264572143555
    10. '.copy' → logprob: -17.876264572143555

Token 58: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.524208128452301
    2. '

' → logprob: -1.6492080688476562
    3. 'def' → logprob: -1.7742080688476562
    4. '#' → logprob: -4.524208068847656
    5. 'import' → logprob: -4.649208068847656
    6. '\n' → logprob: -4.774208068847656
    7. '\' → logprob: -5.524208068847656
    8. '<|end|>' → logprob: -5.774208068847656
    9. '' → logprob: -5.899208068847656
    10. 'n' → logprob: -6.274208068847656

Token 59: ' deep' (ID: 8103)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dc' → logprob: -1.0399736166000366
    2. 'dp' → logprob: -1.2899736166000366
    3. 'copy' → logprob: -1.2899736166000366
    4. 'deep' → logprob: -2.664973735809326
    5. 'cpy' → logprob: -4.914973735809326
    6. ' dc' → logprob: -5.164973735809326
    7. 'cp' → logprob: -5.289973735809326
    8. 'd' → logprob: -5.664973735809326
    9. ' dp' → logprob: -5.914973735809326
    10. 'dep' → logprob: -7.039973735809326

Token 60: 'cp' (ID: 10450)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -6.289473822107539e-05
    2. ' ' → logprob: -10.125062942504883
    3. ' copy' → logprob: -11.250062942504883
    4. 'cop' → logprob: -12.125062942504883
    5. 'cpy' → logprob: -13.875062942504883
    6. 'c' → logprob: -14.250062942504883
    7. 'Copy' → logprob: -14.625062942504883
    8. '_copy' → logprob: -14.750062942504883
    9. '.copy' → logprob: -14.875062942504883
    10. '_' → logprob: -15.125062942504883

Token 61: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20929521322250366
    2. '

' → logprob: -1.8342952728271484
    3. 'def' → logprob: -4.334295272827148
    4. '\n' → logprob: -5.459295272827148
    5. '
' → logprob: -5.709295272827148
    6. 'n' → logprob: -6.459295272827148
    7. '' → logprob: -6.584295272827148
    8. '#' → logprob: -6.709295272827148
    9. '


' → logprob: -6.834295272827148
    10. '\' → logprob: -7.334295272827148

Token 62: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.000843576155602932
    2. ' copy' → logprob: -7.125843524932861
    3. 'chain' → logprob: -11.75084400177002
    4. 'merge' → logprob: -12.12584400177002
    5. 'clone' → logprob: -12.37584400177002
    6. 'reduce' → logprob: -13.12584400177002
    7. 'cop' → logprob: -13.25084400177002
    8. 'bis' → logprob: -13.50084400177002
    9. 'default' → logprob: -13.62584400177002
    10. '_copy' → logprob: -13.62584400177002

Token 63: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.754898726940155
    2. '<|end|>' → logprob: -1.1298987865447998
    3. 'as' → logprob: -1.8798987865447998
    4. ' ' → logprob: -3.8798987865448
    5. '<|end|>' → logprob: -4.879898548126221
    6. '(' → logprob: -5.129898548126221
    7. '.deepcopy' → logprob: -5.379898548126221
    8. 'from' → logprob: -5.504898548126221
    9. '
' → logprob: -6.254898548126221
    10. ' (' → logprob: -6.379898548126221

Token 64: ' cp' (ID: 27776)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.5725272297859192
    2. 'cp' → logprob: -1.6975271701812744
    3. 'deep' → logprob: -2.0725271701812744
    4. ' copy' → logprob: -2.9475271701812744
    5. 'cpy' → logprob: -3.1975271701812744
    6. ' cp' → logprob: -3.9475271701812744
    7. ' deep' → logprob: -4.5725274085998535
    8. ' deepcopy' → logprob: -6.0725274085998535
    9. 'cop' → logprob: -7.4475274085998535
    10. ' shallow' → logprob: -8.447526931762695

Token 65: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20502318441867828
    2. '
' → logprob: -2.0800232887268066
    3. 'def' → logprob: -3.7050232887268066
    4. 'import' → logprob: -4.330023288726807
    5. '


' → logprob: -4.705023288726807
    6. 'from' → logprob: -4.830023288726807
    7. '
' → logprob: -6.455023288726807
    8. '

' → logprob: -7.455023288726807
    9. '\n' → logprob: -7.830023288726807
    10. ',' → logprob: -7.830023288726807

Token 66: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39163312315940857
    2. '

' → logprob: -1.391633152961731
    3. 'import' → logprob: -3.6416330337524414
    4. 'def' → logprob: -4.141633033752441
    5. '<|end|>' → logprob: -4.641633033752441
    6. 'from' → logprob: -5.016633033752441
    7. '#' → logprob: -5.641633033752441
    8. '\n' → logprob: -5.766633033752441
    9. ' 

' → logprob: -6.391633033752441
    10. '\' → logprob: -6.766633033752441

Token 67: ' operator' (ID: 11019)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.7826838493347168
    2. 'bis' → logprob: -1.7826838493347168
    3. 'operator' → logprob: -1.9076838493347168
    4. 'math' → logprob: -2.157683849334717
    5. ' functools' → logprob: -2.407683849334717
    6. 'typing' → logprob: -2.907683849334717
    7. 'fra' → logprob: -3.282683849334717
    8. ' typing' → logprob: -3.407683849334717
    9. ' bis' → logprob: -3.657683849334717
    10. ' fractions' → logprob: -3.657683849334717

Token 68: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47463634610176086
    2. ' as' → logprob: -1.7246363162994385
    3. '<|end|>' → logprob: -2.0996363162994385
    4. 'import' → logprob: -2.5996363162994385
    5. '<|end|>' → logprob: -6.474636554718018
    6. ' ' → logprob: -6.724636554718018
    7. 'as' → logprob: -10.22463607788086
    8. '	import' → logprob: -10.47463607788086
    9. '_import' → logprob: -12.84963607788086
    10. ',' → logprob: -12.91213607788086

Token 69: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5850543975830078
    2. 'item' → logprob: -0.8350543975830078
    3. ' ' → logprob: -6.210054397583008
    4. ' attr' → logprob: -6.710054397583008
    5. 'mul' → logprob: -6.835054397583008
    6. 'attr' → logprob: -6.835054397583008
    7. ' method' → logprob: -6.960054397583008
    8. '.item' → logprob: -7.335054397583008
    9. ' mul' → logprob: -7.460054397583008
    10. 'method' → logprob: -7.960054397583008

Token 70: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00010247035970678553
    2. 'get' → logprob: -9.250102043151855
    3. 'getitem' → logprob: -12.250102043151855
    4. 'gett' → logprob: -13.875102043151855
    5. 'attr' → logprob: -15.375102043151855
    6. 'Getter' → logprob: -16.125102996826172
    7. '
' → logprob: -16.250102996826172
    8. 'gets' → logprob: -16.875102996826172
    9. 'g' → logprob: -17.625102996826172
    10. 'item' → logprob: -17.625102996826172

Token 71: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3431217670440674
    2. '<|end|>' → logprob: -1.3431217670440674
    3. 'import' → logprob: -4.968121528625488
    4. ' as' → logprob: -5.093121528625488
    5. '<|end|>' → logprob: -5.093121528625488
    6. ' ' → logprob: -5.593121528625488
    7. '\n' → logprob: -6.843121528625488
    8. '
' → logprob: -6.968121528625488
    9. ',
' → logprob: -7.343121528625488
    10. '(' → logprob: -7.593121528625488

Token 72: ' ig' (ID: 7328)
  Prédit: ' ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ig' → logprob: -0.8031530380249023
    2. ' ' → logprob: -1.1781530380249023
    3. 'ig' → logprob: -2.1781530380249023
    4. 'item' → logprob: -3.3031530380249023
    5. ' igr' → logprob: -4.178153038024902
    6. 'it' → logprob: -4.303153038024902
    7. 'getitem' → logprob: -4.553153038024902
    8. '1' → logprob: -4.803153038024902
    9. ' attr' → logprob: -4.928153038024902
    10. 'iget' → logprob: -5.053153038024902

Token 73: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7709030508995056
    2. 'm' → logprob: -1.3959031105041504
    3. ')' → logprob: -1.5209031105041504
    4. 'n' → logprob: -3.2709031105041504
    5. ']' → logprob: -4.39590311050415
    6. 'x' → logprob: -5.02090311050415
    7. ',' → logprob: -5.27090311050415
    8. '_' → logprob: -6.64590311050415
    9. '.' → logprob: -7.14590311050415
    10. 'g' → logprob: -7.27090311050415

Token 74: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38251882791519165
    2. '

' → logprob: -1.8825187683105469
    3. '<|end|>' → logprob: -2.882518768310547
    4. 'import' → logprob: -3.007518768310547
    5. 'def' → logprob: -4.007518768310547
    6. ',' → logprob: -4.007518768310547
    7. '#' → logprob: -5.507518768310547
    8. '' → logprob: -6.132518768310547
    9. '\n' → logprob: -6.257518768310547
    10. '


' → logprob: -6.257518768310547

Token 75: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.020971577614545822
    2. ' os' → logprob: -5.395971775054932
    3. 'fun' → logprob: -5.520971775054932
    4. 'bis' → logprob: -6.395971775054932
    5. ' operator' → logprob: -6.395971775054932
    6. ' bis' → logprob: -6.645971775054932
    7. 'os' → logprob: -6.770971775054932
    8. 'operator' → logprob: -6.770971775054932
    9. ' math' → logprob: -6.895971775054932
    10. ' itertools' → logprob: -7.145971775054932

Token 76: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0594499409198761
    2. 'import' → logprob: -2.9344499111175537
    3. '<|end|>' → logprob: -5.434450149536133
    4. '<|end|>' → logprob: -9.684450149536133
    5. '	import' → logprob: -10.059450149536133
    6. '_import' → logprob: -10.184450149536133
    7. ' ' → logprob: -10.809450149536133
    8. ' ' → logprob: -11.684450149536133
    9. ' as' → logprob: -11.934450149536133
    10. '_' → logprob: -12.559450149536133

Token 77: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17295555770397186
    2. ' reduce' → logprob: -2.4229555130004883
    3. 'l' → logprob: -2.9229555130004883
    4. 'reduce' → logprob: -4.422955513000488
    5. ' wraps' → logprob: -6.172955513000488
    6. ' partial' → logprob: -7.047955513000488
    7. ' cache' → logprob: -7.422955513000488
    8. ' cmp' → logprob: -8.797955513000488
    9. 'wrap' → logprob: -8.922955513000488
    10. ' ' → logprob: -9.172955513000488

Token 78: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.2884981632232666
    2. ',' → logprob: -1.9134981632232666
    3. '<|end|>' → logprob: -3.1634981632232666
    4. 'import' → logprob: -3.6634981632232666
    5. ' ' → logprob: -4.0384979248046875
    6. ' import' → logprob: -5.0384979248046875
    7. '(' → logprob: -5.7884979248046875
    8. ' (' → logprob: -6.0384979248046875
    9. ' def' → logprob: -7.0384979248046875
    10. 's' → logprob: -7.0384979248046875

Token 79: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5523973703384399
    2. ' red' → logprob: -1.30239737033844
    3. 'rd' → logprob: -2.8023972511291504
    4. 'r' → logprob: -3.1773972511291504
    5. ' r' → logprob: -4.17739725112915
    6. ' ' → logprob: -4.55239725112915
    7. 'reduce' → logprob: -4.92739725112915
    8. 'rf' → logprob: -5.67739725112915
    9. 'f' → logprob: -5.67739725112915
    10. ' reduce' → logprob: -6.30239725112915

Token 80: '
' (ID: 198)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.7173888087272644
    2. ')' → logprob: -1.9673888683319092
    3. 'uce' → logprob: -2.092388868331909
    4. ',' → logprob: -2.342388868331909
    5. 'ex' → logprob: -2.717388868331909
    6. 'ef' → logprob: -3.717388868331909
    7. 'ec' → logprob: -4.21738862991333
    8. 'from' → logprob: -5.09238862991333
    9. 'uctor' → logprob: -5.09238862991333
    10. ' ' → logprob: -5.09238862991333

Token 81: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1939351558685303
    2. 'import' → logprob: -1.6939351558685303
    3. ',' → logprob: -1.8189351558685303
    4. '

' → logprob: -2.3189351558685303
    5. '<|end|>' → logprob: -2.3189351558685303
    6. 'def' → logprob: -2.5689351558685303
    7. '#' → logprob: -3.8189351558685303
    8. ',
' → logprob: -4.318935394287109
    9. 'from' → logprob: -5.193935394287109
    10. '' → logprob: -5.443935394287109

Token 82: ' fractions' (ID: 110523)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3689901828765869
    2. ' operator' → logprob: -1.618990182876587
    3. ' random' → logprob: -2.743990182876587
    4. ' typing' → logprob: -3.743990182876587
    5. ' itertools' → logprob: -4.868989944458008
    6. ' bis' → logprob: -5.368989944458008
    7. ' ' → logprob: -5.993989944458008
    8. ' sys' → logprob: -6.243989944458008
    9. 'operator' → logprob: -6.618989944458008
    10. 'math' → logprob: -6.743989944458008

Token 83: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05582239106297493
    2. 'import' → logprob: -3.0558223724365234
    3. '<|end|>' → logprob: -5.055822372436523
    4. '<|end|>' → logprob: -7.555822372436523
    5. '_import' → logprob: -9.555822372436523
    6. ' ' → logprob: -9.680822372436523
    7. '	import' → logprob: -9.680822372436523
    8. 'from' → logprob: -10.430822372436523
    9. ' from' → logprob: -10.805822372436523
    10. '```' → logprob: -10.930822372436523

Token 84: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.01823621802031994
    2. 'Fraction' → logprob: -4.01823616027832
    3. ' gcd' → logprob: -9.76823616027832
    4. ' fractions' → logprob: -11.26823616027832
    5. ' ' → logprob: -12.64323616027832
    6. ' ' → logprob: -12.89323616027832
    7. '_fraction' → logprob: -13.01823616027832
    8. '	F' → logprob: -13.14323616027832
    9. ' F' → logprob: -13.14323616027832
    10. ' Fra' → logprob: -13.89323616027832

Token 85: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' frac' (ID: 72308)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7133007645606995
    2. 'math' → logprob: -0.8383007645606995
    3. 'g' → logprob: -2.5883007049560547
    4. ' gcd' → logprob: -6.963300704956055
    5. 'fra' → logprob: -7.338300704956055
    6. ' ' → logprob: -8.213300704956055
    7. '```' → logprob: -9.088300704956055
    8. '__' → logprob: -10.088300704956055
    9. '`' → logprob: -10.463300704956055
    10. 'fraction' → logprob: -10.713300704956055

Token 87: 'g' (ID: 70)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.3267112672328949
    2. 's' → logprob: -1.5767112970352173
    3. 'g' → logprob: -3.0767111778259277
    4. '_fraction' → logprob: -4.826711177825928
    5. 'import' → logprob: -5.701711177825928
    6. '_reduce' → logprob: -6.201711177825928
    7. 'from' → logprob: -6.326711177825928
    8. '_' → logprob: -7.201711177825928
    9. 't' → logprob: -7.201711177825928
    10. ' gcd' → logprob: -7.326711177825928

Token 88: 'cd' (ID: 8301)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' intentionally' (ID: 76052)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' using' (ID: 2360)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1221333742141724
    2. '<|end|>' → logprob: -1.1221333742141724
    3. '#' → logprob: -1.6221333742141724
    4. 'from' → logprob: -2.997133255004883
    5. 'import' → logprob: -3.372133255004883
    6. ')' → logprob: -3.872133255004883
    7. '.' → logprob: -4.622133255004883
    8. '<|end|>' → logprob: -4.997133255004883
    9. ',
' → logprob: -5.622133255004883
    10. ' ' → logprob: -5.747133255004883

Token 92: ' deprecated' (ID: 66913)
  Prédit: 'deprecated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deprecated' → logprob: -0.41438958048820496
    2. 'from' → logprob: -2.1643896102905273
    3. 'fra' → logprob: -2.2893896102905273
    4. 'import' → logprob: -2.6643896102905273
    5. ' deprecated' → logprob: -3.9143896102905273
    6. 'the' → logprob: -4.789389610290527
    7. 'math' → logprob: -4.789389610290527
    8. 'Deprecated' → logprob: -5.039389610290527
    9. 'g' → logprob: -5.789389610290527
    10. ' from' → logprob: -6.914389610290527

Token 93: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0930689573287964
    2. '<|end|>' → logprob: -1.2180689573287964
    3. ')' → logprob: -2.093069076538086
    4. 'import' → logprob: -2.468069076538086
    5. ',
' → logprob: -3.343069076538086
    6. '#' → logprob: -3.468069076538086
    7. '
' → logprob: -3.968069076538086
    8. 'def' → logprob: -4.218069076538086
    9. 'from' → logprob: -4.718069076538086
    10. '<|end|>' → logprob: -4.843069076538086

Token 95: ' factor' (ID: 12332)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6776444911956787
    2. ' dfs' → logprob: -1.4276444911956787
    3. ' factorial' → logprob: -2.0526444911956787
    4. ' _' → logprob: -2.8026444911956787
    5. '_' → logprob: -3.9276444911956787
    6. ' main' → logprob: -3.9276444911956787
    7. ' fibonacci' → logprob: -5.177644729614258
    8. ' factor' → logprob: -5.427644729614258
    9. ' solve' → logprob: -5.927644729614258
    10. ' my' → logprob: -6.552644729614258

Token 96: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.13285678625106812
    2. 'ialize' → logprob: -2.757856845855713
    3. '_' → logprob: -3.757856845855713
    4. '```' → logprob: -4.382856845855713
    5. '_factor' → logprob: -5.257856845855713
    6. 'def' → logprob: -5.507856845855713
    7. '(n' → logprob: -5.882856845855713
    8. 'iz' → logprob: -6.507856845855713
    9. 'ial' → logprob: -6.507856845855713
    10. 'factor' → logprob: -6.507856845855713

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02526167593896389
    2. '(' → logprob: -3.900261640548706
    3. '(num' → logprob: -6.275261878967285
    4. '(x' → logprob: -6.900261878967285
    5. '(number' → logprob: -7.150261878967285
    6. ' (' → logprob: -7.275261878967285
    7. '(s' → logprob: -8.150261878967285
    8. '(N' → logprob: -10.775261878967285
    9. '(a' → logprob: -11.025261878967285
    10. '(value' → logprob: -13.025261878967285

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006409500492736697
    2. ')' → logprob: -7.750640869140625
    3. ':' → logprob: -9.375640869140625
    4. '):
' → logprob: -9.750640869140625
    5. ',' → logprob: -10.125640869140625
    6. ' ):' → logprob: -10.625640869140625
    7. '=' → logprob: -14.125640869140625
    8. '):
' → logprob: -14.750640869140625
    9. ')：' → logprob: -15.750640869140625
    10. ' :' → logprob: -16.000640869140625

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055695404298603535
    2. '    
' → logprob: -6.3805694580078125
    3. '<|end|>' → logprob: -6.7555694580078125
    4. ':' → logprob: -7.2555694580078125
    5. '<|end|>' → logprob: -8.005569458007812
    6. '    ' → logprob: -8.630569458007812
    7. 'factor' → logprob: -8.880569458007812
    8. 'tokens' → logprob: -9.005569458007812
    9. ',' → logprob: -9.005569458007812
    10. ' ' → logprob: -9.380569458007812

Token 100: ' return' (ID: 622)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9685825705528259
    2. 'i' → logprob: -1.0935826301574707
    3. 'd' → logprob: -1.9685826301574707
    4. 'f' → logprob: -2.4685826301574707
    5. ' factors' → logprob: -3.0935826301574707
    6. ' d' → logprob: -4.718582630157471
    7. '   ' → logprob: -5.593582630157471
    8. ' res' → logprob: -7.093582630157471
    9. ' ' → logprob: -7.718582630157471
    10. 'div' → logprob: -7.968582630157471

Token 101: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7456610798835754
    2. ' []' → logprob: -1.4956610202789307
    3. '[' → logprob: -1.8706610202789307
    4. ' [' → logprob: -1.9956610202789307
    5. '[n' → logprob: -4.74566125869751
    6. '[(' → logprob: -7.62066125869751
    7. ' [(' → logprob: -7.87066125869751
    8. '[i' → logprob: -8.620660781860352
    9. '[f' → logprob: -8.620660781860352
    10. '[:]' → logprob: -8.870660781860352

Token 102: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10540112853050232
    2. 'p' → logprob: -2.480401039123535
    3. 'd' → logprob: -4.980401039123535
    4. 'x' → logprob: -4.980401039123535
    5. 'k' → logprob: -7.355401039123535
    6. 'a' → logprob: -7.730401039123535
    7. 'f' → logprob: -7.730401039123535
    8. 'e' → logprob: -8.480401039123535
    9. ' i' → logprob: -8.605401039123535
    10. '(i' → logprob: -8.730401039123535

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01634741760790348
    2. ',)' → logprob: -5.391347408294678
    3. ' ,' → logprob: -5.641347408294678
    4. ',i' → logprob: -6.141347408294678
    5. '+' → logprob: -6.391347408294678
    6. ')' → logprob: -7.016347408294678
    7. ',f' → logprob: -7.391347408294678
    8. ',y' → logprob: -7.516347408294678
    9. ',x' → logprob: -7.766347408294678
    10. ' for' → logprob: -8.391347885131836

Token 104: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43338754773139954
    2. ' n' → logprob: -1.3083875179290771
    3. 'sum' → logprob: -3.808387517929077
    4. ' sum' → logprob: -4.558387756347656
    5. '1' → logprob: -4.558387756347656
    6. 'x' → logprob: -4.683387756347656
    7. 'y' → logprob: -5.308387756347656
    8. '0' → logprob: -5.433387756347656
    9. ' y' → logprob: -6.058387756347656
    10. ' ' → logprob: -6.058387756347656

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13846243917942047
    2. '((' → logprob: -2.138462543487549
    3. '([' → logprob: -5.138462543487549
    4. '(n' → logprob: -5.763462543487549
    5. '([(' → logprob: -7.388462543487549
    6. '(x' → logprob: -7.763462543487549
    7. '(((' → logprob: -7.888462543487549
    8. '(y' → logprob: -8.01346206665039
    9. '(map' → logprob: -8.76346206665039
    10. '(i' → logprob: -8.88846206665039

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08054807782173157
    2. '(' → logprob: -3.205548048019409
    3. '[' → logprob: -3.830548048019409
    4. 'y' → logprob: -5.330548286437988
    5. 'i' → logprob: -5.830548286437988
    6. 'd' → logprob: -6.955548286437988
    7. '[y' → logprob: -7.330548286437988
    8. '(i' → logprob: -7.580548286437988
    9. 'x' → logprob: -7.580548286437988
    10. 'n' → logprob: -7.580548286437988

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16031470894813538
    2. 'for' → logprob: -1.910314679145813
    3. '
' → logprob: -10.660314559936523
    4. ' ' → logprob: -10.660314559936523
    5. ' if' → logprob: -11.285314559936523
    6. 'if' → logprob: -11.285314559936523
    7. '```' → logprob: -12.285314559936523
    8. '+' → logprob: -12.535314559936523
    9. '	for' → logprob: -13.660314559936523
    10. '1' → logprob: -13.910314559936523

Token 108: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016778295685071498
    2. ' _' → logprob: -9.875167846679688
    3. 'y' → logprob: -10.000167846679688
    4. '_y' → logprob: -10.000167846679688
    5. '_
' → logprob: -12.375167846679688
    6. '_c' → logprob: -12.500167846679688
    7. '_x' → logprob: -12.875167846679688
    8. '_=' → logprob: -13.125167846679688
    9. '_i' → logprob: -13.250167846679688
    10. 'e' → logprob: -13.500167846679688

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002766489982605
    2. 'in' → logprob: -2.3502767086029053
    3. ' ' → logprob: -10.475276947021484
    4. 'g' → logprob: -11.975276947021484
    5. '
' → logprob: -12.100276947021484
    6. ',' → logprob: -12.225276947021484
    7. ')' → logprob: -12.225276947021484
    8. 's' → logprob: -13.100276947021484
    9. 'is' → logprob: -13.162776947021484
    10. '_' → logprob: -13.287776947021484

Token 110: ' iter' (ID: 10621)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04915441945195198
    2. ' g' → logprob: -3.92415452003479
    3. 'group' → logprob: -4.424154281616211
    4. 'range' → logprob: -5.049154281616211
    5. 'fact' → logprob: -6.299154281616211
    6. 'grp' → logprob: -6.299154281616211
    7. 'f' → logprob: -6.674154281616211
    8. 'y' → logprob: -6.924154281616211
    9. 'v' → logprob: -6.924154281616211
    10. 'comb' → logprob: -7.799154281616211

Token 111: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.10001879185438156
    2. '(part' → logprob: -2.4750187397003174
    3. '(int' → logprob: -5.2250189781188965
    4. '(f' → logprob: -5.8500189781188965
    5. '(' → logprob: -6.1000189781188965
    6. '(g' → logprob: -9.475018501281738
    7. 'partial' → logprob: -9.475018501281738
    8. 'lambda' → logprob: -9.475018501281738
    9. '(
' → logprob: -10.225018501281738
    10. ')' → logprob: -10.350018501281738

Token 112: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007646968122571707
    2. ' :' → logprob: -5.3826470375061035
    3. ':int' → logprob: -6.8826470375061035
    4. '():' → logprob: -7.1326470375061035
    5. ':n' → logprob: -7.8826470375061035
    6. ':x' → logprob: -8.132646560668945
    7. 'n' → logprob: -9.382646560668945
    8. ':f' → logprob: -9.382646560668945
    9. '=' → logprob: -9.757646560668945
    10. '()' → logprob: -10.132646560668945

Token 113: '=n' (ID: 47985)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10473907738924026
    2. ':x' → logprob: -3.104739189147949
    3. '=x' → logprob: -3.604739189147949
    4. '=' → logprob: -4.354739189147949
    5. ',' → logprob: -5.479739189147949
    6. '%x' → logprob: -5.854739189147949
    7. 'x' → logprob: -6.229739189147949
    8. '%' → logprob: -6.604739189147949
    9. '//' → logprob: -7.479739189147949
    10. ' %' → logprob: -7.479739189147949

Token 114: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027903731912374496
    2. ':x' → logprob: -4.0279035568237305
    3. ',' → logprob: -5.7779035568237305
    4. '%x' → logprob: -6.1529035568237305
    5. ' %' → logprob: -6.6529035568237305
    6. '%' → logprob: -7.1529035568237305
    7. '//' → logprob: -7.1529035568237305
    8. ',x' → logprob: -7.7779035568237305
    9. ' :' → logprob: -8.15290355682373
    10. 'x' → logprob: -8.27790355682373

Token 115: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09973777085542679
    2. ' x' → logprob: -2.5997378826141357
    3. 'lambda' → logprob: -4.724737644195557
    4. ' lambda' → logprob: -5.849737644195557
    5. 'n' → logprob: -6.224737644195557
    6. 'factor' → logprob: -6.724737644195557
    7. 'y' → logprob: -6.974737644195557
    8. ':' → logprob: -7.099737644195557
    9. 'i' → logprob: -7.349737644195557
    10. ' n' → logprob: -7.474737644195557

Token 116: '=x' (ID: 56980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3046426773071289
    2. ':x' → logprob: -1.554642677307129
    3. '=' → logprob: -3.804642677307129
    4. ' :' → logprob: -4.429642677307129
    5. '=x' → logprob: -4.554642677307129
    6. ':n' → logprob: -5.929642677307129
    7. 'x' → logprob: -7.054642677307129
    8. '=n' → logprob: -7.054642677307129
    9. ' x' → logprob: -8.054642677307129
    10. 'n' → logprob: -8.429642677307129

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1884494125843048
    2. ':x' → logprob: -1.9384493827819824
    3. ':n' → logprob: -4.063449382781982
    4. ' :' → logprob: -5.313449382781982
    5. ':y' → logprob: -7.188449382781982
    6. ',' → logprob: -7.438449382781982
    7. ':g' → logprob: -7.688449382781982
    8. 'x' → logprob: -7.938449382781982
    9. '[' → logprob: -8.06344985961914
    10. ':(' → logprob: -8.06344985961914

Token 118: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.836661159992218
    2. 'n' → logprob: -0.961661159992218
    3. 'x' → logprob: -2.3366611003875732
    4. ' x' → logprob: -3.3366611003875732
    5. ' next' → logprob: -3.9616611003875732
    6. 'next' → logprob: -4.961661338806152
    7. 'frac' → logprob: -5.211661338806152
    8. 'g' → logprob: -5.711661338806152
    9. ' (' → logprob: -5.836661338806152
    10. 'int' → logprob: -6.086661338806152

Token 119: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021226271986961365
    2. ' n' → logprob: -3.896226167678833
    3. '(n' → logprob: -8.771225929260254
    4. 'x' → logprob: -9.146225929260254
    5. '   ' → logprob: -9.646225929260254
    6. 'not' → logprob: -9.771225929260254
    7. ' ' → logprob: -9.896225929260254
    8. 'pow' → logprob: -10.271225929260254
    9. ' not' → logprob: -10.396225929260254
    10. '    ' → logprob: -10.646225929260254

Token 120: ' :=' (ID: 3405)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.37584903836250305
    2. '%x' → logprob: -1.5008490085601807
    3. '%' → logprob: -3.2508490085601807
    4. '//' → logprob: -3.3758490085601807
    5. ' //' → logprob: -4.12584924697876
    6. '%n' → logprob: -7.62584924697876
    7. '%e' → logprob: -8.625848770141602
    8. '%d' → logprob: -8.750848770141602
    9. '%s' → logprob: -9.000848770141602
    10. '%i' → logprob: -9.750848770141602

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10051407665014267
    2. ' n' → logprob: -2.3505141735076904
    3. 'x' → logprob: -9.35051441192627
    4. ' ' → logprob: -9.72551441192627
    5. 'div' → logprob: -10.10051441192627
    6. '(n' → logprob: -10.35051441192627
    7. ' (' → logprob: -10.72551441192627
    8. ' x' → logprob: -11.60051441192627
    9. '  ' → logprob: -12.22551441192627
    10. '//' → logprob: -12.28801441192627

Token 122: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7244101762771606
    2. ' //' → logprob: -0.8494101762771606
    3. '%x' → logprob: -2.974410057067871
    4. ' %' → logprob: -3.474410057067871
    5. '%' → logprob: -5.224410057067871
    6. '%d' → logprob: -9.599410057067871
    7. ' ' → logprob: -10.474410057067871
    8. '#' → logprob: -10.474410057067871
    9. '%n' → logprob: -10.974410057067871
    10. ' x' → logprob: -10.974410057067871

Token 123: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.313264936208725
    2. ' x' → logprob: -1.3132649660110474
    3. '	x' → logprob: -14.063264846801758
    4. ' ' → logprob: -14.438264846801758
    5. ')x' → logprob: -14.563264846801758
    6. '(x' → logprob: -15.188264846801758
    7. ')' → logprob: -15.188264846801758
    8. '
' → logprob: -15.938264846801758
    9. ' 
' → logprob: -16.188264846801758
    10. '<|end|>' → logprob: -16.188264846801758

Token 124: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45759060978889465
    2. 'if' → logprob: -1.2075905799865723
    3. 'while' → logprob: -3.4575905799865723
    4. ')' → logprob: -4.082590579986572
    5. ' while' → logprob: -4.207590579986572
    6. '),' → logprob: -6.582590579986572
    7. '()' → logprob: -6.582590579986572
    8. ',' → logprob: -6.707590579986572
    9. ' ' → logprob: -7.332590579986572
    10. '%' → logprob: -9.45759105682373

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32884255051612854
    2. 'if' → logprob: -1.3288425207138062
    3. ',' → logprob: -4.953842639923096
    4. 'while' → logprob: -5.328842639923096
    5. ' while' → logprob: -5.828842639923096
    6. '),' → logprob: -8.203842163085938
    7. ')' → logprob: -9.078842163085938
    8. ' ,' → logprob: -9.328842163085938
    9. ';' → logprob: -9.828842163085938
    10. ' ' → logprob: -10.078842163085938

Token 126: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32106512784957886
    2. ' n' → logprob: -1.4460651874542236
    3. '(n' → logprob: -3.3210651874542236
    4. ' (' → logprob: -5.9460649490356445
    5. '(' → logprob: -8.821064949035645
    6. '(x' → logprob: -9.446064949035645
    7. 'x' → logprob: -9.446064949035645
    8. ' ' → logprob: -10.696064949035645
    9. ' x' → logprob: -11.071064949035645
    10. '   ' → logprob: -12.133564949035645

Token 127: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2529895007610321
    2. '%x' → logprob: -1.5029895305633545
    3. '%' → logprob: -7.252989292144775
    4. '%e' → logprob: -8.127989768981934
    5. '%n' → logprob: -10.252989768981934
    6. '%d' → logprob: -11.502989768981934
    7. '%i' → logprob: -12.377989768981934
    8. ' ' → logprob: -12.752989768981934
    9. '%c' → logprob: -14.127989768981934
    10. '%E' → logprob: -14.252989768981934

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.201447531580925
    2. ' x' → logprob: -1.7014474868774414
    3. ' ' → logprob: -10.951447486877441
    4. '<|end|>' → logprob: -11.701447486877441
    5. '	x' → logprob: -12.826447486877441
    6. '(x' → logprob: -13.951447486877441
    7. '{x' → logprob: -14.201447486877441
    8. ')x' → logprob: -14.576447486877441
    9. '>x' → logprob: -14.576447486877441
    10. '%x' → logprob: -14.826447486877441

Token 129: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6331212520599365
    2. ' ==' → logprob: -0.7581212520599365
    3. ' else' → logprob: -8.133121490478516
    4. '0' → logprob: -9.008121490478516
    5. 'else' → logprob: -9.758121490478516
    6. ' ' → logprob: -11.133121490478516
    7. ')==' → logprob: -11.258121490478516
    8. ')' → logprob: -11.883121490478516
    9. '```' → logprob: -12.633121490478516
    10. '==
' → logprob: -12.883121490478516

Token 130: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011542883701622486
    2. ' x' → logprob: -4.511542797088623
    3. '0' → logprob: -7.636542797088623
    4. ' ' → logprob: -11.386543273925781
    5. '(x' → logprob: -14.636543273925781
    6. '{x' → logprob: -15.886543273925781
    7. '	x' → logprob: -16.13654327392578
    8. '=' → logprob: -16.38654327392578
    9. '==' → logprob: -16.63654327392578
    10. ''x' → logprob: -16.63654327392578

Token 131: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005732863210141659
    2. ' x' → logprob: -7.50057315826416
    3. '0' → logprob: -10.87557315826416
    4. ' ' → logprob: -13.87557315826416
    5. '{x' → logprob: -15.75057315826416
    6. '(x' → logprob: -16.250574111938477
    7. '2' → logprob: -16.625574111938477
    8. '	x' → logprob: -17.000574111938477
    9. '
' → logprob: -17.375574111938477
    10. '```' → logprob: -17.750574111938477

Token 132: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1196436733007431
    2. ')' → logprob: -3.2446436882019043
    3. 'else' → logprob: -3.2446436882019043
    4. '),' → logprob: -3.9946436882019043
    5. ',' → logprob: -4.244643688201904
    6. '))' → logprob: -7.369643688201904
    7. ')),' → logprob: -7.619643688201904
    8. '           ' → logprob: -8.869643211364746
    9. '   ' → logprob: -9.244643211364746
    10. ' ' → logprob: -9.369643211364746

Token 133: ' None' (ID: 4662)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12291570007801056
    2. ' False' → logprob: -2.247915744781494
    3. ' ' → logprob: -5.247915744781494
    4. 'None' → logprob: -6.622915744781494
    5. '(False' → logprob: -6.622915744781494
    6. '0' → logprob: -6.747915744781494
    7. '  ' → logprob: -8.122915267944336
    8. ' None' → logprob: -8.372915267944336
    9. 'break' → logprob: -9.122915267944336
    10. '   ' → logprob: -9.247915267944336

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13291262090206146
    2. '))' → logprob: -2.2579126358032227
    3. '),' → logprob: -4.007912635803223
    4. ')))' → logprob: -6.757912635803223
    5. '(),' → logprob: -8.632912635803223
    6. ')),' → logprob: -9.007912635803223
    7. ')' → logprob: -9.382912635803223
    8. ' ,' → logprob: -10.007912635803223
    9. '()))' → logprob: -10.382912635803223
    10. ' ' → logprob: -11.007912635803223

Token 135: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6685062050819397
    2. '0' → logprob: -0.7935062050819397
    3. 'x' → logprob: -3.418506145477295
    4. '1' → logprob: -6.668506145477295
    5. ' ' → logprob: -7.793506145477295
    6. ' None' → logprob: -8.418506622314453
    7. 'False' → logprob: -8.418506622314453
    8. '-' → logprob: -8.918506622314453
    9. '(x' → logprob: -9.168506622314453
    10. 'True' → logprob: -10.918506622314453

Token 136: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1805737316608429
    2. '))' → logprob: -1.8055737018585205
    3. ' ' → logprob: -8.305573463439941
    4. '))))' → logprob: -8.555573463439941
    5. ')))
' → logprob: -8.680573463439941
    6. ')' → logprob: -10.305573463439941
    7. '))]
' → logprob: -10.430573463439941
    8. ')),' → logprob: -10.680573463439941
    9. '),' → logprob: -10.680573463439941
    10. ' ))' → logprob: -10.680573463439941

Token 137: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05709967017173767
    2. 'for' → logprob: -2.9320995807647705
    3. ')' → logprob: -6.55709981918335
    4. '   ' → logprob: -7.55709981918335
    5. '	for' → logprob: -9.432099342346191
    6. '[' → logprob: -9.432099342346191
    7. '    ' → logprob: -10.432099342346191
    8. ' ' → logprob: -10.807099342346191
    9. '       ' → logprob: -10.932099342346191
    10. ' )' → logprob: -12.182099342346191

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269616037607193
    2. 'for' (adapté à ' for') → logprob: -2.1269617080688477
    3. '   ' → logprob: -11.251961708068848
    4. ' ' → logprob: -12.126961708068848
    5. '           ' → logprob: -12.126961708068848
    6. '	for' → logprob: -12.626961708068848
    7. '    ' → logprob: -13.376961708068848
    8. '
' → logprob: -14.251961708068848
    9. '               ' → logprob: -14.376961708068848
    10. '       ' → logprob: -14.376961708068848

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014177266508340836
    2. ' x' → logprob: -4.264177322387695
    3. 'i' → logprob: -11.389177322387695
    4. ' i' → logprob: -14.014177322387695
    5. '(x' → logprob: -14.389177322387695
    6. 'p' → logprob: -14.889177322387695
    7. 'range' → logprob: -16.014177322387695
    8. '(' → logprob: -16.264177322387695
    9. '	x' → logprob: -16.389177322387695
    10. ' ' → logprob: -16.889177322387695

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02638889104127884
    2. 'in' → logprob: -3.6513888835906982
    3. ')' → logprob: -10.401389122009277
    4. 'import' → logprob: -11.276389122009277
    5. 'range' → logprob: -11.276389122009277
    6. ' ' → logprob: -11.776389122009277
    7. ',' → logprob: -12.901389122009277
    8. '_in' → logprob: -12.963889122009277
    9. '<|end|>' → logprob: -12.963889122009277
    10. 'In' → logprob: -13.401389122009277

Token 141: ' filter' (ID: 6690)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01605818420648575
    2. ' range' → logprob: -4.141057968139648
    3. 'filter' → logprob: -11.141057968139648
    4. '(range' → logprob: -12.141057968139648
    5. 'ig' → logprob: -14.016057968139648
    6. 'com' → logprob: -14.016057968139648
    7. '[' → logprob: -14.141057968139648
    8. 'acc' → logprob: -14.891057968139648
    9. '	range' → logprob: -15.266057968139648
    10. 'count' → logprob: -15.391057968139648

Token 142: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.00021891399228479713
    2. '(' → logprob: -8.500219345092773
    3. '(None' → logprob: -11.625219345092773
    4. 'lambda' → logprob: -12.375219345092773
    5. ' (' → logprob: -14.000219345092773
    6. '(part' → logprob: -15.000219345092773
    7. '(
' → logprob: -15.250219345092773
    8. '((' → logprob: -15.625219345092773
    9. '(int' → logprob: -15.750219345092773
    10. '(range' → logprob: -15.875219345092773

Token 143: ' k' (ID: 372)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2494957149028778
    2. 'lambda' → logprob: -1.8744957447052002
    3. 'n' → logprob: -3.6244957447052
    4. '(n' → logprob: -4.124495506286621
    5. ' lambda' → logprob: -5.124495506286621
    6. 'x' → logprob: -5.374495506286621
    7. ' (' → logprob: -5.624495506286621
    8. ' n' → logprob: -5.749495506286621
    9. ':' → logprob: -6.374495506286621
    10. '(x' → logprob: -6.749495506286621

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005822379142045975
    2. '=lambda' → logprob: -5.63082218170166
    3. ' :' → logprob: -7.00582218170166
    4. ':k' → logprob: -7.25582218170166
    5. 'lambda' → logprob: -8.38082218170166
    6. 'k' → logprob: -9.25582218170166
    7. '(lambda' → logprob: -9.25582218170166
    8. ':n' → logprob: -9.50582218170166
    9. ',' → logprob: -10.38082218170166
    10. ':x' → logprob: -11.13082218170166

Token 145: ' not' (ID: 625)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011286430060863495
    2. ' k' → logprob: -4.51128625869751
    3. 'x' → logprob: -8.511286735534668
    4. 'lambda' → logprob: -11.261286735534668
    5. ' x' → logprob: -11.386286735534668
    6. '(k' → logprob: -12.511286735534668
    7. 'fact' → logprob: -12.636286735534668
    8. '2' → logprob: -12.886286735534668
    9. ' lambda' → logprob: -14.261286735534668
    10. ' ' → logprob: -14.386286735534668

Token 146: ' any' (ID: 1062)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13924725353717804
    2. 'n' → logprob: -2.389247179031372
    3. '(k' → logprob: -4.639247417449951
    4. 'any' → logprob: -4.889247417449951
    5. 'x' → logprob: -5.264247417449951
    6. '(n' → logprob: -5.264247417449951
    7. ' k' → logprob: -5.514247417449951
    8. 'all' → logprob: -6.889247417449951
    9. ' any' → logprob: -7.139247417449951
    10. ' n' → logprob: -7.139247417449951

Token 147: '(map' (ID: 16946)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3961106836795807
    2. '(n' → logprob: -1.2711106538772583
    3. '(x' → logprob: -3.521110773086548
    4. '(y' → logprob: -5.271110534667969
    5. '(' → logprob: -5.521110534667969
    6. '(lambda' → logprob: -5.646110534667969
    7. '((' → logprob: -5.896110534667969
    8. '(i' → logprob: -7.396110534667969
    9. '([' → logprob: -7.771110534667969
    10. '(j' → logprob: -8.771110534667969

Token 148: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2020120620727539
    2. '(k' → logprob: -1.702012062072754
    3. '(x' → logprob: -8.327012062072754
    4. '(' → logprob: -8.327012062072754
    5. 'lambda' → logprob: -9.577012062072754
    6. '((' → logprob: -11.077012062072754
    7. '(n' → logprob: -11.702012062072754
    8. 'k' → logprob: -11.827012062072754
    9. '   ' → logprob: -12.077012062072754
    10. '(
' → logprob: -12.827012062072754

Token 149: ' d' (ID: 272)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7298410534858704
    2. 'k' → logprob: -0.9798410534858704
    3. '(lambda' → logprob: -2.3548409938812256
    4. 'lambda' → logprob: -3.4798409938812256
    5. 'x' → logprob: -5.729841232299805
    6. 'y' → logprob: -5.729841232299805
    7. '(x' → logprob: -6.354841232299805
    8. '(' → logprob: -6.604841232299805
    9. '(y' → logprob: -6.854841232299805
    10. 'n' → logprob: -7.104841232299805

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48691704869270325
    2. 'd' → logprob: -2.236917018890381
    3. '=lambda' → logprob: -2.611917018890381
    4. '(k' → logprob: -2.986917018890381
    5. 'lambda' → logprob: -3.111917018890381
    6. 'k' → logprob: -3.611917018890381
    7. ',d' → logprob: -3.986917018890381
    8. ',k' → logprob: -4.111917018890381
    9. '(lambda' → logprob: -4.611917018890381
    10. ':k' → logprob: -4.861917018890381

Token 151: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.015894530341029167
    2. ' k' → logprob: -5.140894412994385
    3. 'x' → logprob: -5.265894412994385
    4. '(k' → logprob: -5.515894412994385
    5. 'd' → logprob: -7.890894412994385
    6. ' x' → logprob: -9.140894889831543
    7. '(x' → logprob: -9.390894889831543
    8. '   ' → logprob: -10.265894889831543
    9. ' ' → logprob: -10.515894889831543
    10. ' (' → logprob: -10.640894889831543

Token 152: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22650158405303955
    2. '%d' → logprob: -1.8515015840530396
    3. '%' → logprob: -3.10150146484375
    4. '%x' → logprob: -7.35150146484375
    5. 'd' → logprob: -11.22650146484375
    6. ' ' → logprob: -11.85150146484375
    7. '**' → logprob: -11.85150146484375
    8. '   ' → logprob: -12.60150146484375
    9. '```' → logprob: -13.10150146484375
    10. '%e' → logprob: -13.10150146484375

Token 153: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.8828707804204896e-05
    2. ' d' → logprob: -10.125048637390137
    3. 'k' → logprob: -12.500048637390137
    4. '(d' → logprob: -12.875048637390137
    5. 'x' → logprob: -13.875048637390137
    6. '   ' → logprob: -14.375048637390137
    7. '	d' → logprob: -15.750048637390137
    8. ' ' → logprob: -16.000049591064453
    9. '(k' → logprob: -16.500049591064453
    10. '(' → logprob: -16.625049591064453

Token 154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20238174498081207
    2. 'x' → logprob: -3.2023818492889404
    3. ' k' → logprob: -3.2023818492889404
    4. ' ==' → logprob: -3.3273818492889404
    5. 'k' → logprob: -3.4523818492889404
    6. ' x' → logprob: -4.327381610870361
    7. ' ' → logprob: -4.952381610870361
    8. '2' → logprob: -6.077381610870361
    9. ',k' → logprob: -6.077381610870361
    10. ',x' → logprob: -6.327381610870361

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009111200459301472
    2. ' ' → logprob: -4.759111404418945
    3. 'k' → logprob: -7.759111404418945
    4. '2' → logprob: -10.759111404418945
    5. 'x' → logprob: -10.884111404418945
    6. '1' → logprob: -11.009111404418945
    7. ' k' → logprob: -11.884111404418945
    8. '   ' → logprob: -13.634111404418945
    9. ' x' → logprob: -14.134111404418945
    10. '  ' → logprob: -14.571611404418945

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008633419638499618
    2. ' ' → logprob: -7.250863552093506
    3. 'k' → logprob: -9.125863075256348
    4. 'x' → logprob: -10.125863075256348
    5. '2' → logprob: -13.375863075256348
    6. 'd' → logprob: -13.750863075256348
    7. '1' → logprob: -14.375863075256348
    8. ' k' → logprob: -15.000863075256348
    9. ' x' → logprob: -15.250863075256348
    10. '(x' → logprob: -15.875863075256348

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009383331052958965
    2. 'range' → logprob: -4.759383201599121
    3. ' ,' → logprob: -7.884383201599121
    4. '(range' → logprob: -8.259383201599121
    5. ' range' → logprob: -10.009383201599121
    6. ',x' → logprob: -10.884383201599121
    7. ',k' → logprob: -11.134383201599121
    8. 'import' → logprob: -11.259383201599121
    9. 'if' → logprob: -11.634383201599121
    10. ',[' → logprob: -12.009383201599121

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010948538547381759
    2. ' range' → logprob: -6.876094818115234
    3. '[' → logprob: -10.751094818115234
    4. 'is' → logprob: -11.001094818115234
    5. '(range' → logprob: -11.001094818115234
    6. 'ig' → logprob: -13.001094818115234
    7. 'filter' → logprob: -13.626094818115234
    8. '	range' → logprob: -13.626094818115234
    9. 'list' → logprob: -14.126094818115234
    10. 'chain' → logprob: -14.626094818115234

Token 159: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001487140398239717
    2. '2' → logprob: -8.87514877319336
    3. ' (' → logprob: -12.25014877319336
    4. ' ' → logprob: -13.62514877319336
    5. 'import' → logprob: -14.00014877319336
    6. 'from' → logprob: -14.00014877319336
    7. ')' → logprob: -15.25014877319336
    8. ',' → logprob: -15.75014877319336
    9. '```' → logprob: -16.12514877319336
    10. '   ' → logprob: -16.12514877319336

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024596223374828696
    2. ' ' → logprob: -8.500246047973633
    3. '   ' → logprob: -11.500246047973633
    4. '(' → logprob: -11.625246047973633
    5. '```' → logprob: -12.375246047973633
    6. ')' → logprob: -13.062746047973633
    7. '       ' → logprob: -13.375246047973633
    8. '           ' → logprob: -13.687746047973633
    9. '
' → logprob: -13.812746047973633
    10. '    ' → logprob: -13.937746047973633

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004114850424230099
    2. ',x' → logprob: -5.754114627838135
    3. '2' → logprob: -7.879114627838135
    4. ',k' → logprob: -8.379115104675293
    5. ' ,' → logprob: -8.754115104675293
    6. '1' → logprob: -9.504115104675293
    7. '(' → logprob: -10.379115104675293
    8. 'x' → logprob: -10.879115104675293
    9. '3' → logprob: -11.629115104675293
    10. 'k' → logprob: -11.879115104675293

Token 162: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005320565775036812
    2. 'x' → logprob: -5.3803205490112305
    3. ' int' → logprob: -7.3803205490112305
    4. 'k' → logprob: -9.88032054901123
    5. '(int' → logprob: -11.00532054901123
    6. ' x' → logprob: -12.38032054901123
    7. '(x' → logprob: -12.75532054901123
    8. 'min' → logprob: -14.25532054901123
    9. '   ' → logprob: -15.13032054901123
    10. '	int' → logprob: -16.130321502685547

Token 163: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0490972138941288
    2. '(x' → logprob: -3.0490972995758057
    3. 'k' → logprob: -8.299097061157227
    4. '((' → logprob: -8.424097061157227
    5. '(int' → logprob: -11.674097061157227
    6. '(s' → logprob: -11.799097061157227
    7. '(' → logprob: -11.799097061157227
    8. '(pow' → logprob: -11.924097061157227
    9. '(n' → logprob: -12.174097061157227
    10. 'x' → logprob: -12.299097061157227

Token 164: '**' (ID: 410)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3212880790233612
    2. '(x' → logprob: -1.3212881088256836
    3. '(' → logprob: -5.071288108825684
    4. '**' → logprob: -6.946288108825684
    5. '((' → logprob: -7.696288108825684
    6. 'k' → logprob: -9.196288108825684
    7. '(n' → logprob: -9.571288108825684
    8. 'x' → logprob: -9.821288108825684
    9. '(
' → logprob: -10.946288108825684
    10. ' (' → logprob: -11.446288108825684

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013738969573751092
    2. '.' → logprob: -9.375137329101562
    3. '(' → logprob: -9.875137329101562
    4. ' ' → logprob: -14.125137329101562
    5. '{' → logprob: -16.625137329101562
    6. '```' → logprob: -16.750137329101562
    7. '2' → logprob: -17.250137329101562
    8. '   ' → logprob: -17.250137329101562
    9. '(.' → logprob: -17.500137329101562
    10. ')' → logprob: -18.250137329101562

Token 166: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03432726487517357
    2. '5' → logprob: -3.409327268600464
    3. '0' → logprob: -7.409327030181885
    4. '```' → logprob: -9.909327507019043
    5. ')' → logprob: -12.409327507019043
    6. '(' → logprob: -12.409327507019043
    7. ',' → logprob: -12.784327507019043
    8. ' ' → logprob: -13.034327507019043
    9. '[' → logprob: -13.846827507019043
    10. '   ' → logprob: -14.096827507019043

Token 167: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -12.250015258789062
    3. '4' → logprob: -13.187515258789062
    4. '05' → logprob: -13.687515258789062
    5. '```' → logprob: -13.937515258789062
    6. '   ' → logprob: -14.062515258789062
    7. '25' → logprob: -14.125015258789062
    8. '0' → logprob: -14.687515258789062
    9. '6' → logprob: -14.812515258789062
    10. '3' → logprob: -15.125015258789062

Token 168: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.4522148072719574
    2. '2' → logprob: -1.8272148370742798
    3. '0' → logprob: -2.0772147178649902
    4. '+' → logprob: -2.7022147178649902
    5. ')' → logprob: -4.82721471786499
    6. '1' → logprob: -7.20221471786499
    7. '(' → logprob: -7.70221471786499
    8. '()+' → logprob: -7.95221471786499
    9. '3' → logprob: -8.202215194702148
    10. ' +' → logprob: -8.202215194702148

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. '2' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.375011444091797
    4. '(' → logprob: -15.000011444091797
    5. '+' → logprob: -16.500011444091797
    6. '3' → logprob: -16.625011444091797
    7. '```' → logprob: -17.375011444091797
    8. 'int' → logprob: -17.500011444091797
    9. '{' → logprob: -18.375011444091797
    10. '``' → logprob: -18.750011444091797

Token 170: '))),' (ID: 85891)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.8657017946243286
    2. '))),' → logprob: -0.8657017946243286
    3. '))' → logprob: -2.240701675415039
    4. ')))' → logprob: -3.240701675415039
    5. ')))),' → logprob: -5.115701675415039
    6. '))))' → logprob: -5.865701675415039
    7. ')' → logprob: -5.990701675415039
    8. ' ' → logprob: -7.490701675415039
    9. ' ))' → logprob: -8.490701675415039
    10. '))),
' → logprob: -8.490701675415039

Token 171: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003179975086823106
    2. ' range' → logprob: -5.753180027008057
    3. '(range' → logprob: -13.503179550170898
    4. '[' → logprob: -14.753179550170898
    5. 'filter' → logprob: -15.253179550170898
    6. '	range' → logprob: -16.0031795501709
    7. 'x' → logprob: -17.0031795501709
    8. '   ' → logprob: -17.2531795501709
    9. '2' → logprob: -17.3781795501709
    10. '[x' → logprob: -17.8781795501709

Token 172: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003022153687197715
    2. '2' → logprob: -8.1253023147583
    3. ' (' → logprob: -13.7503023147583
    4. 'from' → logprob: -13.8753023147583
    5. ' ' → logprob: -14.2503023147583
    6. '<|end|>' → logprob: -14.2503023147583
    7. ')' → logprob: -14.5003023147583
    8. '(
' → logprob: -14.5003023147583
    9. 'def' → logprob: -14.5003023147583
    10. 'import' → logprob: -15.0003023147583

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '(' → logprob: -16.25
    4. '3' → logprob: -16.375
    5. '1' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. ')' → logprob: -17.3125
    8. '
' → logprob: -17.4375
    9. '

' → logprob: -17.9375
    10. '   ' → logprob: -18.0625

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012694350443780422
    2. ',n' → logprob: -4.387694358825684
    3. 'n' → logprob: -9.887694358825684
    4. ' ,' → logprob: -10.137694358825684
    5. ',int' → logprob: -10.262694358825684
    6. ',x' → logprob: -10.512694358825684
    7. ',k' → logprob: -11.262694358825684
    8. '(n' → logprob: -13.137694358825684
    9. 'import' → logprob: -13.387694358825684
    10. ',p' → logprob: -13.637694358825684

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016550516709685326
    2. 'int' → logprob: -4.141550540924072
    3. ' n' → logprob: -7.641550540924072
    4. ' int' → logprob: -10.391550064086914
    5. '   ' → logprob: -13.141550064086914
    6. '(n' → logprob: -13.641550064086914
    7. '	n' → logprob: -14.641550064086914
    8. '(int' → logprob: -15.016550064086914
    9. '  ' → logprob: -15.141550064086914
    10. ' ' → logprob: -15.141550064086914

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023191531654447317
    2. ' +' → logprob: -6.1273193359375
    3. '))' → logprob: -9.7523193359375
    4. '//' → logprob: -10.0023193359375
    5. ')))' → logprob: -11.1273193359375
    6. '-' → logprob: -12.7523193359375
    7. '**' → logprob: -13.0023193359375
    8. ')+' → logprob: -13.1273193359375
    9. '1' → logprob: -13.6273193359375
    10. '))+' → logprob: -13.6273193359375

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.125008583068848
    3. '2' → logprob: -13.625008583068848
    4. '(' → logprob: -14.687508583068848
    5. '0' → logprob: -15.000008583068848
    6. '```' → logprob: -15.250008583068848
    7. '-' → logprob: -15.875008583068848
    8. '``' → logprob: -17.18750762939453
    9. '3' → logprob: -17.25000762939453
    10. '   ' → logprob: -17.50000762939453

Token 178: '))
' (ID: 2210)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06919974833726883
    2. '))' → logprob: -2.819199800491333
    3. ')' → logprob: -5.069199562072754
    4. ')])' → logprob: -7.319199562072754
    5. ' )' → logprob: -9.569199562072754
    6. '):' → logprob: -10.069199562072754
    7. ' if' → logprob: -10.194199562072754
    8. ')))' → logprob: -10.444199562072754
    9. '])]' → logprob: -10.569199562072754
    10. ' ))' → logprob: -10.819199562072754

Token 179: '           ' (ID: 352)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40736520290374756
    2. ' if' → logprob: -1.1573652029037476
    3. ')]' → logprob: -4.157365322113037
    4. 'if' → logprob: -6.657365322113037
    5. ' ]' → logprob: -6.782365322113037
    6. ')' → logprob: -6.907365322113037
    7. '   ' → logprob: -7.907365322113037
    8. '<|end|>' → logprob: -7.907365322113037
    9. '])' → logprob: -9.157364845275879
    10. '  ' → logprob: -10.032364845275879

Token 180: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004226320423185825
    2. ' if' → logprob: -5.754226207733154
    3. 'if' (adapté à ' if') → logprob: -8.004226684570312
    4. ')]' → logprob: -8.004226684570312
    5. ' ]' → logprob: -8.629226684570312
    6. ':]' → logprob: -9.504226684570312
    7. '])' → logprob: -9.754226684570312
    8. ')' → logprob: -11.254226684570312
    9. '()]' → logprob: -11.504226684570312
    10. ':' → logprob: -11.504226684570312

Token 181: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16039837896823883
    2. ' n' → logprob: -1.9103983640670776
    3. '   ' → logprob: -9.410398483276367
    4. ' ' → logprob: -10.535398483276367
    5. '           ' → logprob: -11.035398483276367
    6. '(n' → logprob: -11.910398483276367
    7. '       ' → logprob: -12.035398483276367
    8. '    ' → logprob: -12.160398483276367
    9. '	n' → logprob: -12.160398483276367
    10. ' not' → logprob: -12.285398483276367

Token 182: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002594799967482686
    2. ' n' → logprob: -6.002594947814941
    3. '   ' → logprob: -9.752594947814941
    4. 'x' → logprob: -10.627594947814941
    5. '           ' → logprob: -11.627594947814941
    6. ' ' → logprob: -12.252594947814941
    7. '       ' → logprob: -12.377594947814941
    8. '    ' → logprob: -12.752594947814941
    9. '  ' → logprob: -13.002594947814941
    10. '(n' → logprob: -13.127594947814941

Token 183: '0' (ID: 15)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4299071729183197
    2. ' %' → logprob: -1.054907202720642
    3. '%x' → logprob: -6.804907321929932
    4. ')' → logprob: -10.804906845092773
    5. '%e' → logprob: -10.804906845092773
    6. ' ' → logprob: -11.429906845092773
    7. '%i' → logprob: -11.429906845092773
    8. ' ' → logprob: -12.054906845092773
    9. '%d' → logprob: -12.054906845092773
    10. '%s' → logprob: -12.304906845092773

Token 184: ':' (ID: 25)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5232449173927307
    2. ' %' → logprob: -0.8982449173927307
    3. '%x' → logprob: -9.523244857788086
    4. ' ' → logprob: -11.523244857788086
    5. '%e' → logprob: -11.773244857788086
    6. ' ' → logprob: -11.898244857788086
    7. '%i' → logprob: -11.898244857788086
    8. '%n' → logprob: -12.023244857788086
    9. ' %
' → logprob: -13.148244857788086
    10. '```' → logprob: -13.273244857788086

Token 185: '=[' (ID: 13370)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12044631689786911
    2. 'n' → logprob: -2.49544620513916
    3. ' %' → logprob: -3.87044620513916
    4. '%' → logprob: -4.74544620513916
    5. '=' → logprob: -7.49544620513916
    6. '=n' → logprob: -8.62044620513916
    7. ' ' → logprob: -8.99544620513916
    8. ' ' → logprob: -8.99544620513916
    9. ')' → logprob: -9.12044620513916
    10. '%n' → logprob: -9.87044620513916

Token 186: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10742972791194916
    2. 'x' → logprob: -2.9824297428131104
    3. ' n' → logprob: -3.3574297428131104
    4. 'k' → logprob: -5.732429504394531
    5. '(n' → logprob: -5.982429504394531
    6. ' x' → logprob: -6.232429504394531
    7. 'i' → logprob: -6.732429504394531
    8. ' (' → logprob: -6.982429504394531
    9. 'p' → logprob: -7.482429504394531
    10. '   ' → logprob: -7.482429504394531

Token 187: '],' (ID: 2155)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08478306978940964
    2. '%' → logprob: -2.5847830772399902
    3. '%x' → logprob: -5.70978307723999
    4. 'x' → logprob: -7.33478307723999
    5. ' //' → logprob: -7.58478307723999
    6. '%n' → logprob: -7.83478307723999
    7. '//' → logprob: -8.709782600402832
    8. 'n' → logprob: -9.084782600402832
    9. ' x' → logprob: -9.209782600402832
    10. '%d' → logprob: -9.709782600402832

Token 188: ' any' (ID: 1062)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5948082804679871
    2. 'n' → logprob: -0.9698082804679871
    3. 'x' → logprob: -3.469808340072632
    4. ' x' → logprob: -3.594808340072632
    5. ' (' → logprob: -5.719808101654053
    6. '(n' → logprob: -5.844808101654053
    7. ' all' → logprob: -7.469808101654053
    8. '[n' → logprob: -7.719808101654053
    9. ' [' → logprob: -7.969808101654053
    10. '   ' → logprob: -8.219808578491211

Token 189: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7548834681510925
    2. '(lambda' → logprob: -0.8798834681510925
    3. '(x' → logprob: -3.5048835277557373
    4. '((' → logprob: -3.6298835277557373
    5. '(' → logprob: -4.129883289337158
    6. ' (' → logprob: -4.379883289337158
    7. '(map' → logprob: -5.004883289337158
    8. '(k' → logprob: -5.504883289337158
    9. '([' → logprob: -5.504883289337158
    10. '(_' → logprob: -6.129883289337158

Token 190: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49866750836372375
    2. ' n' → logprob: -1.8736674785614014
    3. 'x' → logprob: -1.9986674785614014
    4. ' x' → logprob: -3.7486674785614014
    5. '(n' → logprob: -4.6236677169799805
    6. 'k' → logprob: -4.8736677169799805
    7. 'y' → logprob: -5.1236677169799805
    8. ' y' → logprob: -5.3736677169799805
    9. 'f' → logprob: -5.7486677169799805
    10. 'p' → logprob: -5.7486677169799805

Token 191: '0' (ID: 15)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11387399584054947
    2. '%' → logprob: -2.4888739585876465
    3. '0' → logprob: -3.9888739585876465
    4. ' :=' → logprob: -6.3638739585876465
    5. '%n' → logprob: -6.9888739585876465
    6. '[' → logprob: -7.1138739585876465
    7. ':=' → logprob: -7.4888739585876465
    8. '%x' → logprob: -7.7388739585876465
    9. ')' → logprob: -8.238874435424805
    10. ' //' → logprob: -8.613874435424805

Token 192: ':=' (ID: 33860)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11639347672462463
    2. ':=' → logprob: -2.991393566131592
    3. ' :=' → logprob: -3.491393566131592
    4. '[-' → logprob: -4.616393566131592
    5. '0' → logprob: -4.991393566131592
    6. '=' → logprob: -5.741393566131592
    7. ')' → logprob: -6.366393566131592
    8. ':' → logprob: -6.491393566131592
    9. '.pop' → logprob: -6.741393566131592
    10. 'n' → logprob: -7.241393566131592

Token 193: ' [' (ID: 723)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.8281342387199402
    2. 'n' → logprob: -1.453134298324585
    3. '[x' → logprob: -2.578134298324585
    4. '(n' → logprob: -2.828134298324585
    5. 'x' → logprob: -2.953134298324585
    6. '[(' → logprob: -3.203134298324585
    7. '[' → logprob: -3.328134298324585
    8. '(x' → logprob: -4.328134059906006
    9. '[_' → logprob: -4.828134059906006
    10. '[i' → logprob: -4.953134059906006

Token 194: 'nx' (ID: 45103)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0242986511439085
    2. ' n' → logprob: -4.399298667907715
    3. 'x' → logprob: -5.024298667907715
    4. '(n' → logprob: -6.649298667907715
    5. 'k' → logprob: -7.274298667907715
    6. '   ' → logprob: -7.899298667907715
    7. 'fact' → logprob: -8.024298667907715
    8. '(' → logprob: -8.274298667907715
    9. '[n' → logprob: -8.899298667907715
    10. 'frac' → logprob: -8.961798667907715

Token 195: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4789046347141266
    2. '//' → logprob: -0.9789046049118042
    3. ' for' → logprob: -5.478904724121094
    4. ']' → logprob: -8.603904724121094
    5. 'for' → logprob: -9.228904724121094
    6. ' :=' → logprob: -9.728904724121094
    7. '//=' → logprob: -9.853904724121094
    8. ' ' → logprob: -10.103904724121094
    9. '```' → logprob: -10.353904724121094
    10. ':=' → logprob: -10.478904724121094

Token 196: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006064478773623705
    2. ' x' → logprob: -5.131064414978027
    3. 'nx' → logprob: -9.381064414978027
    4. '(x' → logprob: -11.006064414978027
    5. ' nx' → logprob: -11.506064414978027
    6. 'kx' → logprob: -11.631064414978027
    7. 'k' → logprob: -12.506064414978027
    8. ' ' → logprob: -13.006064414978027
    9. '   ' → logprob: -13.256064414978027
    10. '
' → logprob: -13.506064414978027

Token 197: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6804180145263672
    2. 'for' → logprob: -0.8054180145263672
    3. ']' → logprob: -3.555418014526367
    4. '])' → logprob: -4.180418014526367
    5. 'if' → logprob: -6.930418014526367
    6. 'x' → logprob: -7.055418014526367
    7. 'nx' → logprob: -8.430418014526367
    8. ' if' → logprob: -8.680418014526367
    9. ']))' → logprob: -8.930418014526367
    10. ']==' → logprob: -9.180418014526367

Token 198: ' (' (ID: 350)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.03629399091005325
    2. ' nx' → logprob: -4.036293983459473
    3. '(nx' → logprob: -4.036293983459473
    4. '(n' → logprob: -8.661293983459473
    5. 'n' → logprob: -9.661293983459473
    6. ' (' → logprob: -10.411293983459473
    7. '(' → logprob: -10.786293983459473
    8. ' ' → logprob: -12.036293983459473
    9. 'not' → logprob: -12.286293983459473
    10. '   ' → logprob: -12.786293983459473

Token 199: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.022494064643979073
    2. ' nx' → logprob: -3.897494077682495
    3. '(nx' → logprob: -6.397493839263916
    4. 'n' → logprob: -8.272494316101074
    5. '(n' → logprob: -12.022494316101074
    6. 'x' → logprob: -12.647494316101074
    7. ' n' → logprob: -13.022494316101074
    8. '
' → logprob: -13.147494316101074
    9. 'ny' → logprob: -13.397494316101074
    10. '[n' → logprob: -13.522494316101074

Token 200: ':=' (ID: 33860)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0662623718380928
    2. '%' → logprob: -3.0662624835968018
    3. '%x' → logprob: -4.066262245178223
    4. '%n' → logprob: -9.316262245178223
    5. '%e' → logprob: -9.691262245178223
    6. '%d' → logprob: -9.941262245178223
    7. '%i' → logprob: -10.066262245178223
    8. '%s' → logprob: -10.441262245178223
    9. ' ' → logprob: -10.941262245178223
    10. '[' → logprob: -11.691262245178223

Token 201: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043020427227020264
    2. ' n' → logprob: -3.418020486831665
    3. 'nx' → logprob: -5.043020248413086
    4. 'x' → logprob: -6.543020248413086
    5. ' nx' → logprob: -7.293020248413086
    6. '(n' → logprob: -8.668020248413086
    7. '[n' → logprob: -8.918020248413086
    8. ' x' → logprob: -9.418020248413086
    9. '[' → logprob: -9.668020248413086
    10. 'k' → logprob: -10.793020248413086

Token 202: '0' (ID: 15)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.37638118863105774
    2. ' %' → logprob: -1.2513811588287354
    3. '%x' → logprob: -3.7513811588287354
    4. '0' → logprob: -6.1263813972473145
    5. '%n' → logprob: -7.3763813972473145
    6. '%s' → logprob: -8.376380920410156
    7. '%d' → logprob: -8.501380920410156
    8. 'x' → logprob: -8.751380920410156
    9. '%i' → logprob: -9.001380920410156
    10. '%e' → logprob: -9.251380920410156

Token 203: '[' (ID: 58)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2206553220748901
    2. '[' → logprob: -1.3456553220748901
    3. ')%' → logprob: -1.7206553220748901
    4. '%x' → logprob: -1.9706553220748901
    5. ' %' → logprob: -3.4706554412841797
    6. ']%' → logprob: -3.8456554412841797
    7. '[x' → logprob: -3.9706554412841797
    8. ')' → logprob: -4.09565544128418
    9. ')>' → logprob: -4.22065544128418
    10. '[-' → logprob: -5.59565544128418

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010114319622516632
    2. '1' → logprob: -5.3851141929626465
    3. '[' → logprob: -6.0101141929626465
    4. '-' → logprob: -6.2601141929626465
    5. 'x' → logprob: -7.2601141929626465
    6. 'n' → logprob: -8.760114669799805
    7. ' ' → logprob: -9.385114669799805
    8. '(' → logprob: -10.822614669799805
    9. '   ' → logprob: -11.010114669799805
    10. '
' → logprob: -11.260114669799805

Token 205: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.122389554977417
    2. ']%' → logprob: -1.372389554977417
    3. ')' → logprob: -1.497389554977417
    4. ')%' → logprob: -2.247389554977417
    5. '])' → logprob: -3.497389554977417
    6. '%' → logprob: -3.497389554977417
    7. '%x' → logprob: -4.122389793395996
    8. ' %' → logprob: -5.122389793395996
    9. '%n' → logprob: -6.122389793395996
    10. ')]' → logprob: -6.372389793395996

Token 206: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6688737273216248
    2. '%' → logprob: -1.4188737869262695
    3. '%x' → logprob: -1.4188737869262695
    4. '%e' → logprob: -6.5438737869262695
    5. '%d' → logprob: -7.5438737869262695
    6. ')' → logprob: -7.6688737869262695
    7. '%n' → logprob: -7.7938737869262695
    8. ')%' → logprob: -8.29387378692627
    9. '%s' → logprob: -8.66887378692627
    10. '%i' → logprob: -8.79387378692627

Token 207: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00462510297074914
    2. ' x' → logprob: -5.37962532043457
    3. '<|end|>' → logprob: -13.00462532043457
    4. ' ' → logprob: -13.50462532043457
    5. '	x' → logprob: -15.25462532043457
    6. ')x' → logprob: -15.87962532043457
    7. '```' → logprob: -15.87962532043457
    8. '  ' → logprob: -16.00462532043457
    9. '<|end|>' → logprob: -16.25462532043457
    10. '   ' → logprob: -16.25462532043457

Token 208: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03676338121294975
    2. ' ==' → logprob: -3.4117634296417236
    3. '0' → logprob: -6.0367631912231445
    4. ']==' → logprob: -8.411763191223145
    5. ')==' → logprob: -8.536763191223145
    6. ')' → logprob: -8.661763191223145
    7. '```' → logprob: -10.286763191223145
    8. '!=' → logprob: -10.911763191223145
    9. ' ' → logprob: -11.411763191223145
    10. 'x' → logprob: -11.786763191223145

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017434772104024887
    2. 'x' → logprob: -4.392434597015381
    3. ' ' → logprob: -5.392434597015381
    4. ' x' → logprob: -8.017435073852539
    5. '2' → logprob: -10.767435073852539
    6. '```' → logprob: -12.767435073852539
    7. '1' → logprob: -13.267435073852539
    8. '   ' → logprob: -13.892435073852539
    9. '
' → logprob: -14.017435073852539
    10. '=' → logprob: -14.517435073852539

Token 210: ' else' (ID: 1203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9624910354614258
    2. ' for' → logprob: -1.5874910354614258
    3. ' else' → logprob: -1.5874910354614258
    4. 'else' → logprob: -2.337491035461426
    5. ')' → logprob: -2.712491035461426
    6. '])' → logprob: -4.087491035461426
    7. '))' → logprob: -5.087491035461426
    8. '           ' → logprob: -5.462491035461426
    9. ',' → logprob: -5.462491035461426
    10. ']' → logprob: -6.087491035461426

Token 211: ' nx' (ID: 50118)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.044206470251083374
    2. ' False' → logprob: -3.544206380844116
    3. '[' → logprob: -5.294206619262695
    4. 'True' → logprob: -5.919206619262695
    5. 'n' → logprob: -6.169206619262695
    6. '[n' → logprob: -6.294206619262695
    7. '(False' → logprob: -7.294206619262695
    8. '0' → logprob: -7.794206619262695
    9. '[]' → logprob: -7.794206619262695
    10. ' n' → logprob: -7.919206619262695

Token 212: ' for' (ID: 395)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.45391663908958435
    2. '0' → logprob: -1.7039166688919067
    3. '//' → logprob: -2.828916549682617
    4. ' ==' → logprob: -3.078916549682617
    5. '[' → logprob: -3.328916549682617
    6. '1' → logprob: -5.078916549682617
    7. ')' → logprob: -5.078916549682617
    8. ' //' → logprob: -5.703916549682617
    9. ']==' → logprob: -5.828916549682617
    10. ' ' → logprob: -5.953916549682617

Token 213: ' _' (ID: 1175)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24956296384334564
    2. ' n' → logprob: -1.7495629787445068
    3. '[' → logprob: -3.749562978744507
    4. 'range' → logprob: -5.624562740325928
    5. '[n' → logprob: -5.624562740325928
    6. '_' → logprob: -5.999562740325928
    7. '(n' → logprob: -6.249562740325928
    8. '(' → logprob: -6.499562740325928
    9. ' range' → logprob: -6.499562740325928
    10. 'nx' → logprob: -6.499562740325928

Token 214: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5309605598449707
    2. ' in' → logprob: -0.9059605598449707
    3. '_' → logprob: -6.405960559844971
    4. ')' → logprob: -6.655960559844971
    5. '0' → logprob: -7.405960559844971
    6. ' ' → logprob: -7.530960559844971
    7. ',' → logprob: -7.655960559844971
    8. ')]' → logprob: -7.780960559844971
    9. 'range' → logprob: -8.030960083007812
    10. '1' → logprob: -8.030960083007812

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26299169659614563
    2. 'n' → logprob: -2.2629916667938232
    3. ' range' → logprob: -3.2629916667938232
    4. '[' → logprob: -3.5129916667938232
    5. 'iter' → logprob: -4.012991905212402
    6. 'x' → logprob: -4.262991905212402
    7. '(' → logprob: -5.262991905212402
    8. '1' → logprob: -5.387991905212402
    9. '_' → logprob: -5.512991905212402
    10. 'filter' → logprob: -5.887991905212402

Token 216: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.089836597442627
    2. '100' → logprob: -1.839836597442627
    3. '(n' → logprob: -2.464836597442627
    4. '10' → logprob: -2.589836597442627
    5. '1' → logprob: -3.089836597442627
    6. '(x' → logprob: -3.214836597442627
    7. '20' → logprob: -3.214836597442627
    8. 'n' → logprob: -3.339836597442627
    9. '(sum' → logprob: -3.339836597442627
    10. 'fact' → logprob: -3.339836597442627

Token 217: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021987867075949907
    2. '1' → logprob: -6.752198696136475
    3. '(n' → logprob: -7.877198696136475
    4. '((' → logprob: -8.377199172973633
    5. '(x' → logprob: -8.877199172973633
    6. '(lambda' → logprob: -9.877199172973633
    7. '(
' → logprob: -10.002199172973633
    8. '           ' → logprob: -10.627199172973633
    9. '([' → logprob: -10.627199172973633
    10. '(len' → logprob: -11.127199172973633

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17848309874534607
    2. '1' → logprob: -2.428483009338379
    3. '(x' → logprob: -3.678483009338379
    4. ' ' → logprob: -4.928483009338379
    5. 'x' → logprob: -5.053483009338379
    6. '(' → logprob: -5.178483009338379
    7. '[x' → logprob: -5.553483009338379
    8. ')' → logprob: -5.553483009338379
    9. '==' → logprob: -5.803483009338379
    10. '[' → logprob: -6.178483009338379

Token 219: '[' (ID: 58)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.247094988822937
    2. '+' → logprob: -1.747094988822937
    3. ')' → logprob: -1.997094988822937
    4. '(x' → logprob: -2.4970951080322266
    5. ')])' → logprob: -3.1220951080322266
    6. '))' → logprob: -3.3720951080322266
    7. '1' → logprob: -3.4970951080322266
    8. '[' → logprob: -3.7470951080322266
    9. '0' → logprob: -3.8720951080322266
    10. '(' → logprob: -3.9970951080322266

Token 220: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4113791882991791
    2. '(' → logprob: -2.411379098892212
    3. 'x' → logprob: -2.536379098892212
    4. '0' → logprob: -2.786379098892212
    5. '2' → logprob: -3.036379098892212
    6. '(x' → logprob: -3.786379098892212
    7. 'n' → logprob: -5.161379337310791
    8. '[' → logprob: -5.286379337310791
    9. '(n' → logprob: -6.286379337310791
    10. ']' → logprob: -6.286379337310791

Token 221: ']' (ID: 60)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.3167387247085571
    2. ']==' → logprob: -1.8167387247085571
    3. ']' → logprob: -2.1917386054992676
    4. ']))' → logprob: -2.3167386054992676
    5. ')' → logprob: -2.9417386054992676
    6. '(' → logprob: -2.9417386054992676
    7. '1' → logprob: -3.1917386054992676
    8. '==' → logprob: -3.4417386054992676
    9. '0' → logprob: -3.5667386054992676
    10. '[' → logprob: -3.9417386054992676

Token 222: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2532778978347778
    2. '(x' → logprob: -1.6282778978347778
    3. '%' → logprob: -2.2532777786254883
    4. '))' → logprob: -2.7532777786254883
    5. '```' → logprob: -3.5032777786254883
    6. ')))' → logprob: -3.6282777786254883
    7. '>' → logprob: -3.6282777786254883
    8. '(n' → logprob: -3.6282777786254883
    9. '==' → logprob: -3.6282777786254883
    10. '(' → logprob: -3.8782777786254883

Token 223: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12648743391036987
    2. '1' → logprob: -2.7514874935150146
    3. '2' → logprob: -4.1264872550964355
    4. ' x' → logprob: -4.6264872550964355
    5. '(x' → logprob: -5.1264872550964355
    6. ' ' → logprob: -5.1264872550964355
    7. '0' → logprob: -5.5014872550964355
    8. '(' → logprob: -5.6264872550964355
    9. 'fact' → logprob: -6.1264872550964355
    10. 'n' → logprob: -6.5014872550964355

Token 224: ' ==' (ID: 951)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5999776721000671
    2. '0' → logprob: -1.349977731704712
    3. ' ' → logprob: -2.474977731704712
    4. '==' → logprob: -3.349977731704712
    5. '1' → logprob: -3.724977731704712
    6. '```' → logprob: -4.224977493286133
    7. ' ==' → logprob: -4.349977493286133
    8. '+' → logprob: -5.599977493286133
    9. ')' → logprob: -5.849977493286133
    10. '(' → logprob: -5.974977493286133

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04128233715891838
    2. '1' → logprob: -3.2912824153900146
    3. 'x' → logprob: -6.5412821769714355
    4. ' ' → logprob: -7.1662821769714355
    5. 'sum' → logprob: -7.5412821769714355
    6. '(' → logprob: -9.291282653808594
    7. '2' → logprob: -9.416282653808594
    8. '(x' → logprob: -9.541282653808594
    9. 'n' → logprob: -9.916282653808594
    10. '(sum' → logprob: -10.416282653808594

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03071599081158638
    2. '1' → logprob: -3.5307159423828125
    3. ' ' → logprob: -7.7807159423828125
    4. 'x' → logprob: -8.155715942382812
    5. '2' → logprob: -8.655715942382812
    6. 'True' → logprob: -10.030715942382812
    7. 'sum' → logprob: -11.655715942382812
    8. 'n' → logprob: -12.155715942382812
    9. 'k' → logprob: -12.530715942382812
    10. 'i' → logprob: -12.968215942382812

Token 227: ' for' (ID: 395)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.33285731077194214
    2. ')]' → logprob: -2.332857370376587
    3. ')' → logprob: -2.457857370376587
    4. ')))' → logprob: -3.207857370376587
    5. ')])' → logprob: -3.957857370376587
    6. ')),' → logprob: -5.332857131958008
    7. '))))' → logprob: -5.457857131958008
    8. '==' → logprob: -5.707857131958008
    9. ')):' → logprob: -5.832857131958008
    10. '+' → logprob: -5.832857131958008

Token 228: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23166829347610474
    2. ' range' → logprob: -1.98166823387146
    3. 'range' → logprob: -3.73166823387146
    4. ' _' → logprob: -3.85666823387146
    5. ' n' → logprob: -4.481668472290039
    6. '[' → logprob: -5.856668472290039
    7. 'n' → logprob: -6.106668472290039
    8. ' ' → logprob: -6.481668472290039
    9. ' x' → logprob: -7.231668472290039
    10. 'x' → logprob: -7.356668472290039

Token 229: ' in' (ID: 306)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6055774688720703
    2. '0' → logprob: -1.3555774688720703
    3. 'range' → logprob: -2.6055774688720703
    4. 'x' → logprob: -2.7305774688720703
    5. ' ' → logprob: -4.10557746887207
    6. 'in' → logprob: -4.85557746887207
    7. ' range' → logprob: -4.85557746887207
    8. '2' → logprob: -5.10557746887207
    9. ' in' → logprob: -5.98057746887207
    10. '))' → logprob: -6.23057746887207

Token 230: ' iter' (ID: 10621)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22126394510269165
    2. ' range' → logprob: -2.096263885498047
    3. '[' → logprob: -3.096263885498047
    4. 'x' → logprob: -4.221263885498047
    5. 'n' → logprob: -5.346263885498047
    6. '1' → logprob: -6.596263885498047
    7. ')' → logprob: -6.721263885498047
    8. 'iter' → logprob: -6.846263885498047
    9. 'factor' → logprob: -6.971263885498047
    10. '[x' → logprob: -7.096263885498047

Token 231: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6685114502906799
    2. 'lambda' → logprob: -1.0435113906860352
    3. 'range' → logprob: -2.543511390686035
    4. '(range' → logprob: -3.918511390686035
    5. ' lambda' → logprob: -4.418511390686035
    6. ' range' → logprob: -4.668511390686035
    7. '(' → logprob: -5.543511390686035
    8. '=lambda' → logprob: -5.793511390686035
    9. '```' → logprob: -6.918511390686035
    10. ')' → logprob: -7.043511390686035

Token 232: ',' (ID: 11)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1253739595413208
    2. '(range' → logprob: -3.3753738403320312
    3. '(' → logprob: -3.5003738403320312
    4. '(n' → logprob: -3.8753738403320312
    5. '(x' → logprob: -5.375373840332031
    6. ' range' → logprob: -5.625373840332031
    7. 'lambda' → logprob: -5.750373840332031
    8. 'range' → logprob: -6.000373840332031
    9. '
' → logprob: -6.125373840332031
    10. ',' → logprob: -6.250373840332031

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04538128897547722
    2. '0' → logprob: -3.6703813076019287
    3. ' ' → logprob: -4.17038106918335
    4. 'None' → logprob: -6.79538106918335
    5. 'n' → logprob: -7.42038106918335
    6. '2' → logprob: -8.295381546020508
    7. '100' → logprob: -8.670381546020508
    8. '10' → logprob: -8.795381546020508
    9. 'x' → logprob: -9.170381546020508
    10. '
' → logprob: -9.295381546020508

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28446587920188904
    2. '0' → logprob: -1.4094659090042114
    3. ' ' → logprob: -7.034465789794922
    4. '2' → logprob: -8.034465789794922
    5. 'n' → logprob: -8.034465789794922
    6. '100' → logprob: -8.034465789794922
    7. '10' → logprob: -8.034465789794922
    8. 'lambda' → logprob: -8.034465789794922
    9. 'sys' → logprob: -9.409465789794922
    10. 'None' → logprob: -9.534465789794922

Token 235: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.733527660369873
    2. '))))' → logprob: -0.858527660369873
    3. ')))' → logprob: -3.108527660369873
    4. ')))),' → logprob: -3.733527660369873
    5. ')' → logprob: -4.358527660369873
    6. '))),' → logprob: -5.483527660369873
    7. ')]' → logprob: -6.233527660369873
    8. '0' → logprob: -6.483527660369873
    9. ')):' → logprob: -6.483527660369873
    10. '):' → logprob: -6.608527660369873

Token 236: '])[' (ID: 90869)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -1.015011191368103
    2. ')]' → logprob: -1.140011191368103
    3. ')])' → logprob: -1.890011191368103
    4. '])' → logprob: -3.1400113105773926
    5. '))' → logprob: -3.3900113105773926
    6. ')' → logprob: -3.7650113105773926
    7. '           ' → logprob: -4.515011310577393
    8. ')))' → logprob: -4.640011310577393
    9. ']' → logprob: -5.140011310577393
    10. '])]' → logprob: -5.265011310577393

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006131656467914581
    2. '1' → logprob: -5.881131649017334
    3. '-' → logprob: -6.131131649017334
    4. ']' → logprob: -8.381132125854492
    5. '])' → logprob: -8.568632125854492
    6. ':' → logprob: -9.193632125854492
    7. ')]' → logprob: -9.443632125854492
    8. ')' → logprob: -10.006132125854492
    9. '
' → logprob: -10.068632125854492
    10. ' ' → logprob: -10.068632125854492

Token 238: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6414951086044312
    2. '))' → logprob: -2.5164952278137207
    3. '==' → logprob: -2.7664952278137207
    4. ' !=' → logprob: -3.0164952278137207
    5. ' >' → logprob: -3.1414952278137207
    6. ' ==' → logprob: -3.1414952278137207
    7. '>' → logprob: -3.5164952278137207
    8. ' )' → logprob: -3.5164952278137207
    9. ')))' → logprob: -3.6414952278137207
    10. ',' → logprob: -3.8914952278137207

Token 239: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3216571807861328
    2. '==' → logprob: -1.5716571807861328
    3. '))' → logprob: -1.9466571807861328
    4. ' ==' → logprob: -2.071657180786133
    5. '%' → logprob: -3.321657180786133
    6. ',' → logprob: -3.446657180786133
    7. ')))' → logprob: -3.446657180786133
    8. ' >' → logprob: -3.446657180786133
    9. ')==' → logprob: -3.946657180786133
    10. '>' → logprob: -4.071657180786133

Token 240: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31366807222366333
    2. 'n' → logprob: -1.4386680126190186
    3. '1' → logprob: -3.8136680126190186
    4. ' ' → logprob: -5.938668251037598
    5. 'None' → logprob: -5.938668251037598
    6. ' n' → logprob: -6.188668251037598
    7. 'x' → logprob: -7.063668251037598
    8. 'nx' → logprob: -7.313668251037598
    9. '[' → logprob: -8.063668251037598
    10. '[n' → logprob: -8.438668251037598

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0726960897445679
    2. '))' → logprob: -1.1976960897445679
    3. ')' → logprob: -1.8226960897445679
    4. ')]' → logprob: -3.1976962089538574
    5. ',' → logprob: -3.5726962089538574
    6. ')])' → logprob: -3.8226962089538574
    7. '1' → logprob: -3.9476962089538574
    8. '):' → logprob: -4.572696208953857
    9. ')))' → logprob: -4.572696208953857
    10. ')):' → logprob: -4.822696208953857

Token 242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22165635228157043
    2. '0' → logprob: -1.971656322479248
    3. ')]' → logprob: -4.096656322479248
    4. ')' → logprob: -4.471656322479248
    5. ')])' → logprob: -4.721656322479248
    6. '])' → logprob: -5.096656322479248
    7. '1' → logprob: -5.221656322479248
    8. '):' → logprob: -5.471656322479248
    9. ']' → logprob: -7.096656322479248
    10. '-' → logprob: -7.221656322479248

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007903324440121651
    2. '1' → logprob: -7.625790119171143
    3. '[' → logprob: -9.2507905960083
    4. '-' → logprob: -9.6257905960083
    5. ' ' → logprob: -10.4382905960083
    6. '])' → logprob: -10.9382905960083
    7. '```' → logprob: -11.0007905960083
    8. ']' → logprob: -11.8757905960083
    9. ']]' → logprob: -12.0632905960083
    10. ']))' → logprob: -12.1882905960083

Token 244: ']' (ID: 60)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.931097149848938
    2. ')]' → logprob: -1.181097149848938
    3. '))' → logprob: -2.0560970306396484
    4. ')' → logprob: -2.5560970306396484
    5. '])]' → logprob: -3.3060970306396484
    6. '])' → logprob: -3.9310970306396484
    7. '):' → logprob: -4.681097030639648
    8. ']))' → logprob: -5.056097030639648
    9. ')))' → logprob: -5.431097030639648
    10. '           ' → logprob: -5.806097030639648

Token 245: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0892348662018776
    2. ')' → logprob: -3.0892348289489746
    3. ')])' → logprob: -3.5892348289489746
    4. '])]' → logprob: -5.714234828948975
    5. '))' → logprob: -6.089234828948975
    6. '           ' → logprob: -6.339234828948975
    7. ')],' → logprob: -6.839234828948975
    8. '])' → logprob: -7.339234828948975
    9. ']' → logprob: -7.464234828948975
    10. '):' → logprob: -7.589234828948975

Token 246: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11458349972963333
    2. 'x' → logprob: -3.7395834922790527
    3. ' _' → logprob: -3.8645834922790527
    4. '[' → logprob: -4.114583492279053
    5. ' x' → logprob: -4.739583492279053
    6. '_)' → logprob: -4.989583492279053
    7. '))' → logprob: -5.239583492279053
    8. 'range' → logprob: -5.239583492279053
    9. 'n' → logprob: -5.739583492279053
    10. ' range' → logprob: -5.864583492279053

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3607368469238281
    2. ')])' → logprob: -2.610736846923828
    3. ')]' → logprob: -2.735736846923828
    4. 'in' → logprob: -2.735736846923828
    5. '))' → logprob: -3.360736846923828
    6. ')' → logprob: -3.735736846923828
    7. ')))' → logprob: -4.485736846923828
    8. ' range' → logprob: -4.985736846923828
    9. ']))' → logprob: -5.360736846923828
    10. 'range' → logprob: -5.985736846923828

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2062853574752808
    2. '[' → logprob: -1.9562853574752808
    3. ' range' → logprob: -1.9562853574752808
    4. '))' → logprob: -2.0812854766845703
    5. '1' → logprob: -3.3312854766845703
    6. ')))' → logprob: -3.4562854766845703
    7. 'x' → logprob: -3.4562854766845703
    8. ' x' → logprob: -4.08128547668457
    9. 'iter' → logprob: -4.33128547668457
    10. ')' → logprob: -4.45628547668457

Token 249: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22942973673343658
    2. '(' → logprob: -3.4794297218322754
    3. '10' → logprob: -3.6044297218322754
    4. 'n' → logprob: -3.7294297218322754
    5. 'sum' → logprob: -3.7294297218322754
    6. '0' → logprob: -4.229429721832275
    7. '(n' → logprob: -4.354429721832275
    8. '2' → logprob: -4.354429721832275
    9. '(sum' → logprob: -4.604429721832275
    10. 'fact' → logprob: -4.854429721832275

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17356513440608978
    2. 'n' → logprob: -2.923565149307251
    3. '10' → logprob: -3.923565149307251
    4. '0' → logprob: -4.173564910888672
    5. ' n' → logprob: -4.173564910888672
    6. ' ' → logprob: -4.548564910888672
    7. 'x' → logprob: -4.798564910888672
    8. 'len' → logprob: -4.923564910888672
    9. ')' → logprob: -5.048564910888672
    10. '2' → logprob: -5.173564910888672

Token 251: '))' (ID: 915)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.7547628879547119
    2. ')]' → logprob: -0.8797628879547119
    3. ')' → logprob: -2.754762887954712
    4. '))' → logprob: -3.879762887954712
    5. '):' → logprob: -4.004762649536133
    6. ')))' → logprob: -5.379762649536133
    7. '),' → logprob: -6.629762649536133
    8. ' )' → logprob: -6.629762649536133
    9. ')],' → logprob: -7.504762649536133
    10. '])]' → logprob: -7.629762649536133

Token 252: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.059598423540592194
    2. ']' → logprob: -3.434598445892334
    3. '])]' → logprob: -4.809598445892334
    4. ')])' → logprob: -4.934598445892334
    5. ')' → logprob: -5.309598445892334
    6. '])' → logprob: -5.434598445892334
    7. ')],' → logprob: -8.684597969055176
    8. ' )' → logprob: -9.309597969055176
    9. '<|end|>' → logprob: -9.309597969055176
    10. ')][' → logprob: -9.434597969055176

Token 253: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1891518831253052
    2. ':' → logprob: -1.5641518831253052
    3. '(' → logprob: -1.6891518831253052
    4. ']' → logprob: -2.3141517639160156
    5. ')' → logprob: -2.4391517639160156
    6. '0' → logprob: -3.0641517639160156
    7. ')]' → logprob: -4.064151763916016
    8. '(n' → logprob: -4.689151763916016
    9. ' ' → logprob: -4.814151763916016
    10. '(x' → logprob: -5.314151763916016

Token 254: ' combinations' (ID: 43835)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.6038146615028381
    2. 'factor' → logprob: -1.3538146018981934
    3. ' gcd' → logprob: -2.6038146018981934
    4. 'g' → logprob: -3.4788146018981934
    5. ' main' → logprob: -3.8538146018981934
    6. ' factorial' → logprob: -4.478814601898193
    7. '_factor' → logprob: -4.853814601898193
    8. ' prime' → logprob: -5.603814601898193
    9. ' test' → logprob: -5.728814601898193
    10. ' is' → logprob: -5.978814601898193

Token 255: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1267886608839035
    2. '<|end|>' → logprob: -2.25178861618042
    3. '<|end|>' → logprob: -5.37678861618042
    4. 's' → logprob: -6.25178861618042
    5. '(
' → logprob: -6.50178861618042
    6. '_' → logprob: -7.12678861618042
    7. '(com' → logprob: -7.25178861618042
    8. '(n' → logprob: -7.75178861618042
    9. '(per' → logprob: -8.001789093017578
    10. '(range' → logprob: -8.126789093017578

Token 256: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011478420346975327
    2. '(n' → logprob: -4.636478424072266
    3. '(token' → logprob: -6.761478424072266
    4. '<|end|>' → logprob: -9.011478424072266
    5. ' (' → logprob: -9.761478424072266
    6. '(count' → logprob: -10.136478424072266
    7. '(user' → logprob: -10.386478424072266
    8. '(
' → logprob: -10.386478424072266
    9. '<|end|>' → logprob: -10.636478424072266
    10. '(x' → logprob: -10.636478424072266

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004105827305465937
    2. ',n' → logprob: -5.754106044769287
    3. ' ,' → logprob: -7.754106044769287
    4. '(n' → logprob: -7.754106044769287
    5. ',k' → logprob: -9.879105567932129
    6. ',
' → logprob: -11.504105567932129
    7. '):' → logprob: -12.254105567932129
    8. '(' → logprob: -14.379105567932129
    9. ',

' → logprob: -15.004105567932129
    10. ',p' → logprob: -15.129105567932129

Token 258: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16679441928863525
    2. 'r' → logprob: -2.0417943000793457
    3. ' k' → logprob: -4.166794300079346
    4. ' r' → logprob: -4.791794300079346
    5. '
' → logprob: -11.291794776916504
    6. ' ' → logprob: -11.791794776916504
    7. '   ' → logprob: -12.166794776916504
    8. '```' → logprob: -13.166794776916504
    9. '  ' → logprob: -13.791794776916504
    10. '

' → logprob: -14.291794776916504

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010083963861688972
    2. ')' → logprob: -7.3760085105896
    3. '):
' → logprob: -8.001008033752441
    4. '(n' → logprob: -10.501008033752441
    5. ' ):' → logprob: -11.376008033752441
    6. ':' → logprob: -12.876008033752441
    7. ',' → logprob: -13.001008033752441
    8. '   ' → logprob: -14.251008033752441
    9. '):
' → logprob: -14.626008033752441
    10. ')=' → logprob: -15.251008033752441

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4432874321937561
    2. '<|end|>' → logprob: -1.4432873725891113
    3. ':' → logprob: -2.5682873725891113
    4. '):' → logprob: -3.8182873725891113
    5. ' return' → logprob: -5.443287372589111
    6. '    ' → logprob: -5.568287372589111
    7. ' ' → logprob: -5.693287372589111
    8. ')' → logprob: -6.068287372589111
    9. '  ' → logprob: -6.568287372589111
    10. '<|end|>' → logprob: -6.943287372589111

Token 261: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4002348482608795
    2. ' if' → logprob: -1.9002348184585571
    3. ' return' → logprob: -2.1502349376678467
    4. 'return' (adapté à ' return') → logprob: -3.7752349376678467
    5. 'if' → logprob: -3.9002349376678467
    6. ' res' → logprob: -5.775234699249268
    7. ' result' → logprob: -5.900234699249268
    8. ' from' → logprob: -6.150234699249268
    9. 'result' → logprob: -6.275234699249268
    10. 'from' → logprob: -6.400234699249268

Token 262: ' red' (ID: 3592)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.017869889736175537
    2. ' fact' → logprob: -4.14286994934082
    3. 'factor' → logprob: -6.39286994934082
    4. ' factorial' → logprob: -9.01786994934082
    5. ' ' → logprob: -10.76786994934082
    6. '1' → logprob: -12.51786994934082
    7. 'frac' → logprob: -12.89286994934082
    8. 'fac' → logprob: -12.89286994934082
    9. 'int' → logprob: -13.01786994934082
    10. '0' → logprob: -13.26786994934082

Token 263: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1334250420331955
    2. 'lambda' → logprob: -2.133424997329712
    3. '(int' → logprob: -6.133425235748291
    4. '(' → logprob: -6.258425235748291
    5. ' lambda' → logprob: -7.258425235748291
    6. '(operator' → logprob: -7.258425235748291
    7. 'operator' → logprob: -8.008424758911133
    8. 'int' → logprob: -8.258424758911133
    9. ' (' → logprob: -9.258424758911133
    10. '=lambda' → logprob: -9.383424758911133

Token 264: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3878520131111145
    2. ' x' → logprob: -1.1378519535064697
    3. 'a' → logprob: -7.137852191925049
    4. ' a' → logprob: -9.01285171508789
    5. 'lambda' → logprob: -10.38785171508789
    6. 'acc' → logprob: -11.76285171508789
    7. ' lambda' → logprob: -12.01285171508789
    8. ' acc' → logprob: -12.26285171508789
    9. ' ' → logprob: -13.13785171508789
    10. 'o' → logprob: -13.13785171508789

Token 265: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007933051674626768
    2. ',x' → logprob: -7.75079345703125
    3. ',b' → logprob: -8.87579345703125
    4. 'a' → logprob: -9.12579345703125
    5. ' ,' → logprob: -10.25079345703125
    6. 'x' → logprob: -10.50079345703125
    7. ',n' → logprob: -10.50079345703125
    8. ',a' → logprob: -11.25079345703125
    9. ',c' → logprob: -13.25079345703125
    10. ',
' → logprob: -13.50079345703125

Token 266: ':a' (ID: 77025)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06415947526693344
    2. ',' → logprob: -2.939159393310547
    3. ',a' → logprob: -5.314159393310547
    4. ':a' → logprob: -6.064159393310547
    5. ' :' → logprob: -6.689159393310547
    6. 'a' → logprob: -7.439159393310547
    7. ' a' → logprob: -9.564159393310547
    8. ' ,' → logprob: -10.314159393310547
    9. ',n' → logprob: -11.439159393310547
    10. ':int' → logprob: -12.064159393310547

Token 267: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5511353015899658
    2. '*b' → logprob: -1.0511353015899658
    3. '*a' → logprob: -2.926135301589966
    4. ' *' → logprob: -3.926135301589966
    5. 'a' → logprob: -8.551135063171387
    6. '*(' → logprob: -8.676135063171387
    7. '*n' → logprob: -8.926135063171387
    8. '*x' → logprob: -9.426135063171387
    9. '//' → logprob: -10.426135063171387
    10. '*l' → logprob: -10.426135063171387

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1628829836845398
    2. '//' → logprob: -2.0378830432891846
    3. ' //' → logprob: -4.1628828048706055
    4. ' ,' → logprob: -6.1628828048706055
    5. ':' → logprob: -8.037882804870605
    6. ' (' → logprob: -8.537882804870605
    7. ',//' → logprob: -8.537882804870605
    8. ',
' → logprob: -8.662882804870605
    9. ',(' → logprob: -8.912882804870605
    10. '(range' → logprob: -9.037882804870605

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001177012687548995
    2. '(range' → logprob: -7.001176834106445
    3. ' range' → logprob: -8.251176834106445
    4. '[' → logprob: -12.751176834106445
    5. '[(' → logprob: -14.001176834106445
    6. '	range' → logprob: -14.501176834106445
    7. 'rang' → logprob: -16.251176834106445
    8. '[r' → logprob: -17.251176834106445
    9. ' xrange' → logprob: -17.751176834106445
    10. 'list' → logprob: -17.876176834106445

Token 270: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015444994205608964
    2. '(max' → logprob: -7.00154447555542
    3. '(' → logprob: -7.37654447555542
    4. 'n' → logprob: -12.251544952392578
    5. 'max' → logprob: -13.501544952392578
    6. '(r' → logprob: -14.626544952392578
    7. '(len' → logprob: -15.626544952392578
    8. '1' → logprob: -15.876544952392578
    9. '(start' → logprob: -17.126544952392578
    10. '((' → logprob: -17.376544952392578

Token 271: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00868690200150013
    2. '(' → logprob: -4.7586870193481445
    3. 'n' → logprob: -10.383687019348145
    4. '(r' → logprob: -10.508687019348145
    5. '1' → logprob: -11.383687019348145
    6. '```' → logprob: -14.133687019348145
    7. ')n' → logprob: -15.008687019348145
    8. '0' → logprob: -15.508687019348145
    9. '{' → logprob: -16.008686065673828
    10. '(max' → logprob: -16.008686065673828

Token 272: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.1327202469110489
    2. ' -' → logprob: -2.2577202320098877
    3. 'r' → logprob: -4.132720470428467
    4. '-' → logprob: -5.882720470428467
    5. ' r' → logprob: -7.382720470428467
    6. ',' → logprob: -8.882719993591309
    7. ',r' → logprob: -10.007719993591309
    8. '(r' → logprob: -11.132719993591309
    9. 'n' → logprob: -11.507719993591309
    10. ' ' → logprob: -11.757719993591309

Token 273: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005189551156945527
    2. ' +' → logprob: -7.625518798828125
    3. '+r' → logprob: -11.250518798828125
    4. '+n' → logprob: -11.875518798828125
    5. ',n' → logprob: -12.375518798828125
    6. ',' → logprob: -12.875518798828125
    7. '+k' → logprob: -14.125518798828125
    8. ')+' → logprob: -14.250518798828125
    9. '```' → logprob: -14.875518798828125
    10. ' ,' → logprob: -14.875518798828125

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.500014305114746
    3. '
' → logprob: -13.125014305114746
    4. ',' → logprob: -14.687514305114746
    5. '```' → logprob: -14.937514305114746
    6. '2' → logprob: -15.375014305114746
    7. '   ' → logprob: -16.06251335144043
    8. 'n' → logprob: -16.62501335144043
    9. 'a' → logprob: -16.81251335144043
    10. '0' → logprob: -16.81251335144043

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01769328862428665
    2. ',n' → logprob: -4.392693519592285
    3. ' ,' → logprob: -5.267693519592285
    4. 'n' → logprob: -11.642693519592285
    5. '   ' → logprob: -13.767693519592285
    6. ' ' → logprob: -14.392693519592285
    7. '+' → logprob: -14.392693519592285
    8. ',r' → logprob: -14.392693519592285
    9. '),' → logprob: -14.517693519592285
    10. ',
' → logprob: -14.767693519592285

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03000212460756302
    2. 'n' → logprob: -3.5300021171569824
    3. ' ' → logprob: -9.03000259399414
    4. ' n' → logprob: -10.15500259399414
    5. 'max' → logprob: -10.28000259399414
    6. '0' → logprob: -10.40500259399414
    7. '(n' → logprob: -11.78000259399414
    8. '2' → logprob: -12.28000259399414
    9. 'r' → logprob: -12.28000259399414
    10. '   ' → logprob: -12.53000259399414

Token 277: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06207187846302986
    2. ',' → logprob: -3.3120718002319336
    3. ' ),' → logprob: -3.8120718002319336
    4. ',n' → logprob: -6.812071800231934
    5. ' ,' → logprob: -8.312071800231934
    6. '   ' → logprob: -8.687071800231934
    7. '),(' → logprob: -9.562071800231934
    8. '    ' → logprob: -10.937071800231934
    9. ' ' → logprob: -11.687071800231934
    10. '  ' → logprob: -11.812071800231934

Token 278: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009532637195661664
    2. ' n' → logprob: -7.000953197479248
    3. 'max' → logprob: -10.125953674316406
    4. '(n' → logprob: -14.000953674316406
    5. ' max' → logprob: -15.125953674316406
    6. '1' → logprob: -15.625953674316406
    7. '   ' → logprob: -15.875953674316406
    8. '	n' → logprob: -16.125953674316406
    9. '
' → logprob: -16.500953674316406
    10. '    ' → logprob: -16.875953674316406

Token 279: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020220205187797546
    2. ' +' → logprob: -6.252021789550781
    3. 'max' → logprob: -9.877021789550781
    4. '1' → logprob: -10.877021789550781
    5. 'n' → logprob: -11.002021789550781
    6. '+n' → logprob: -13.502021789550781
    7. ' ' → logprob: -13.877021789550781
    8. ' max' → logprob: -14.002021789550781
    9. ',' → logprob: -14.252021789550781
    10. '+r' → logprob: -15.127021789550781

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.75000286102295
    3. '
' → logprob: -13.75000286102295
    4. '```' → logprob: -15.87500286102295
    5. '`' → logprob: -16.437503814697266
    6. ')' → logprob: -16.437503814697266
    7. '

' → logprob: -16.562503814697266
    8. '   ' → logprob: -16.687503814697266
    9. '１' → logprob: -17.687503814697266
    10. '``' → logprob: -17.750003814697266

Token 281: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3689773976802826
    2. ')' → logprob: -1.243977427482605
    3. '),' → logprob: -4.1189775466918945
    4. '))' → logprob: -6.4939775466918945
    5. ' ,' → logprob: -6.6189775466918945
    6. ')*' → logprob: -7.4939775466918945
    7. ' )' → logprob: -7.6189775466918945
    8. '))*' → logprob: -10.243977546691895
    9. '   ' → logprob: -10.493977546691895
    10. ')*(' → logprob: -10.868977546691895

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4554271996021271
    2. 'initial' → logprob: -1.2054271697998047
    3. ' initial' → logprob: -3.5804271697998047
    4. 'lambda' → logprob: -3.8304271697998047
    5. ' lambda' → logprob: -4.705427169799805
    6. ' ' → logprob: -5.330427169799805
    7. 'initializer' → logprob: -6.455427169799805
    8. 'init' → logprob: -8.205427169799805
    9. 'default' → logprob: -8.455427169799805
    10. 'start' → logprob: -8.705427169799805

Token 283: '1' (ID: 16)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09121886640787125
    2. 'initial' → logprob: -2.841218948364258
    3. ' lambda' → logprob: -3.841218948364258
    4. 'initializer' → logprob: -5.091218948364258
    5. ' initial' → logprob: -7.091218948364258
    6. 'init' → logprob: -8.466218948364258
    7. ' initializer' → logprob: -9.716218948364258
    8. '1' → logprob: -9.966218948364258
    9. 'default' → logprob: -11.341218948364258
    10. ')' → logprob: -11.591218948364258

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001669942052103579
    2. ' )' → logprob: -6.751669883728027
    3. ')*' → logprob: -7.626669883728027
    4. ')#' → logprob: -13.376669883728027
    5. ')//' → logprob: -13.501669883728027
    6. ',' → logprob: -13.876669883728027
    7. ')*(' → logprob: -13.876669883728027
    8. '   ' → logprob: -14.126669883728027
    9. 'if' → logprob: -14.126669883728027
    10. ')
' → logprob: -14.126669883728027

Token 285: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3171984553337097
    2. ' //' → logprob: -2.4421985149383545
    3. 'def' → logprob: -3.0671985149383545
    4. ' *' → logprob: -3.1921985149383545
    5. '//' → logprob: -3.4421985149383545
    6. '<|end|>' → logprob: -3.4421985149383545
    7. ' ' → logprob: -4.817198276519775
    8. ' if' → logprob: -5.192198276519775
    9. '   ' → logprob: -5.317198276519775
    10. '#' → logprob: -6.067198276519775

Token 286: ' red' (ID: 3592)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0012742811813950539
    2. 'red' → logprob: -6.751274108886719
    3. ' fact' → logprob: -10.251274108886719
    4. 'factor' → logprob: -10.251274108886719
    5. 'max' → logprob: -10.876274108886719
    6. 'fac' → logprob: -11.626274108886719
    7. '   ' → logprob: -13.501274108886719
    8. ' red' → logprob: -13.626274108886719
    9. '(red' → logprob: -14.376274108886719
    10. 'Fact' → logprob: -14.876274108886719

Token 287: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0017144508892670274
    2. 'lambda' → logprob: -6.37671422958374
    3. '=lambda' → logprob: -11.751714706420898
    4. '(' → logprob: -13.126714706420898
    5. '```' → logprob: -14.001714706420898
    6. ' lambda' → logprob: -14.001714706420898
    7. ' (' → logprob: -15.001714706420898
    8. '   ' → logprob: -15.501714706420898
    9. '(int' → logprob: -16.0017147064209
    10. '  ' → logprob: -17.2517147064209

Token 288: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00593033991754055
    2. ' a' → logprob: -5.130930423736572
    3. '   ' → logprob: -14.005929946899414
    4. ' ' → logprob: -14.505929946899414
    5. '	a' → logprob: -15.380929946899414
    6. '  ' → logprob: -16.130929946899414
    7. 'lambda' → logprob: -16.630929946899414
    8. '(a' → logprob: -17.380929946899414
    9. '    ' → logprob: -17.505929946899414
    10. ',a' → logprob: -17.755929946899414

Token 289: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0032342751510441303
    2. ',' → logprob: -6.003234386444092
    3. ' ,' → logprob: -7.753234386444092
    4. ',a' → logprob: -8.128233909606934
    5. 'a' → logprob: -10.878233909606934
    6. 'lambda' → logprob: -12.003233909606934
    7. 'b' → logprob: -12.503233909606934
    8. ',
' → logprob: -13.628233909606934
    9. ',x' → logprob: -14.253233909606934
    10. '_,' → logprob: -14.753233909606934

Token 290: ':a' (ID: 77025)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.3703573942184448
    2. ':a' → logprob: -1.8703573942184448
    3. 'a' → logprob: -2.1203575134277344
    4. ',' → logprob: -3.4953575134277344
    5. 'lambda' → logprob: -6.370357513427734
    6. ' ,' → logprob: -6.495357513427734
    7. ' a' → logprob: -6.870357513427734
    8. ':' → logprob: -7.870357513427734
    9. ' :' → logprob: -8.495357513427734
    10. ',b' → logprob: -8.620357513427734

Token 291: '*b' (ID: 72162)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47422823309898376
    2. '*b' → logprob: -0.9742282629013062
    3. 'a' → logprob: -9.349227905273438
    4. ' b' → logprob: -10.224227905273438
    5. ',b' → logprob: -10.724227905273438
    6. '*a' → logprob: -12.849227905273438
    7. ' *' → logprob: -13.349227905273438
    8. '+b' → logprob: -14.724227905273438
    9. '*' → logprob: -15.224227905273438
    10. ' ' → logprob: -15.474227905273438

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002738522016443312
    2. ' ,' → logprob: -8.500273704528809
    3. 'range' → logprob: -9.875273704528809
    4. '(range' → logprob: -11.000273704528809
    5. ',
' → logprob: -13.500273704528809
    6. ' range' → logprob: -14.875273704528809
    7. ',r' → logprob: -15.375273704528809
    8. ',[' → logprob: -17.375274658203125
    9. '    ' → logprob: -17.625274658203125
    10. '   ' → logprob: -17.875274658203125

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7848862373502925e-05
    2. ' range' → logprob: -10.625027656555176
    3. '(range' → logprob: -12.625027656555176
    4. '[' → logprob: -17.125028610229492
    5. '	range' → logprob: -17.125028610229492
    6. '1' → logprob: -17.250028610229492
    7. '   ' → logprob: -18.250028610229492
    8. '
' → logprob: -18.625028610229492
    9. ' ' → logprob: -19.375028610229492
    10. '    ' → logprob: -20.000028610229492

Token 294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002537104592192918
    2. '(max' → logprob: -8.375253677368164
    3. '1' → logprob: -11.000253677368164
    4. 'max' → logprob: -12.000253677368164
    5. ' (' → logprob: -15.625253677368164
    6. '   ' → logprob: -17.875253677368164
    7. ' ' → logprob: -18.250253677368164
    8. 'def' → logprob: -18.375253677368164
    9. ',max' → logprob: -18.375253677368164
    10. ' max' → logprob: -18.500253677368164

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. '(' → logprob: -10.375065803527832
    3. 'max' → logprob: -10.500065803527832
    4. '2' → logprob: -12.375065803527832
    5. ' ' → logprob: -13.000065803527832
    6. '   ' → logprob: -14.375065803527832
    7. '
' → logprob: -15.500065803527832
    8. '(max' → logprob: -16.75006675720215
    9. '	' → logprob: -16.87506675720215
    10. '```' → logprob: -17.37506675720215

Token 296: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.5772621035575867
    2. ',' → logprob: -0.8272621035575867
    3. ' ,' → logprob: -6.827261924743652
    4. ',b' → logprob: -8.702261924743652
    5. '   ' → logprob: -10.702261924743652
    6. ',max' → logprob: -10.827261924743652
    7. 'r' → logprob: -10.952261924743652
    8. ',m' → logprob: -13.452261924743652
    9. ',n' → logprob: -13.577261924743652
    10. '(r' → logprob: -13.702261924743652

Token 297: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006577996537089348
    2. ' +' → logprob: -5.131577968597412
    3. '+r' → logprob: -7.756577968597412
    4. ',' → logprob: -9.00657844543457
    5. '   ' → logprob: -10.63157844543457
    6. ' ' → logprob: -11.00657844543457
    7. '    ' → logprob: -11.13157844543457
    8. 'r' → logprob: -11.38157844543457
    9. ' r' → logprob: -11.38157844543457
    10. ',r' → logprob: -11.50657844543457

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.840432565193623e-05
    2. ' ' → logprob: -9.625088691711426
    3. 'r' → logprob: -10.875088691711426
    4. '+' → logprob: -13.125088691711426
    5. ' r' → logprob: -14.250088691711426
    6. '```' → logprob: -15.500088691711426
    7. '(r' → logprob: -16.00008773803711
    8. ',' → logprob: -16.25008773803711
    9. '   ' → logprob: -16.37508773803711
    10. '
' → logprob: -16.37508773803711

Token 299: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008757318137213588
    2. ')' → logprob: -8.000875473022461
    3. ' ,' → logprob: -8.000875473022461
    4. '),' → logprob: -8.625875473022461
    5. '+' → logprob: -12.000875473022461
    6. '   ' → logprob: -12.125875473022461
    7. '1' → logprob: -12.875875473022461
    8. ')+' → logprob: -12.875875473022461
    9. ',b' → logprob: -13.500875473022461
    10. '))' → logprob: -14.000875473022461

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.62523078918457
    4. '```' → logprob: -17.56273078918457
    5. '  ' → logprob: -18.56273078918457
    6. ')' → logprob: -18.68773078918457
    7. '۱' → logprob: -19.12523078918457
    8. 'lambda' → logprob: -19.31273078918457
    9. '
' → logprob: -19.37523078918457
    10. '    ' → logprob: -19.75023078918457

Token 301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. ' )' → logprob: -11.750012397766113
    3. ')+' → logprob: -13.125012397766113
    4. ')
' → logprob: -13.875012397766113
    5. ')#' → logprob: -14.500012397766113
    6. '))' → logprob: -14.875012397766113
    7. ')return' → logprob: -15.750012397766113
    8. '+' → logprob: -15.875012397766113
    9. ')`' → logprob: -16.125011444091797
    10. ')a' → logprob: -16.875011444091797

Token 302: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05287797003984451
    2. ' r' → logprob: -3.177877902984619
    3. '0' → logprob: -4.677877902984619
    4. ' ' → logprob: -8.052878379821777
    5. 'n' → logprob: -8.677878379821777
    6. ' n' → logprob: -10.302878379821777
    7. '1' → logprob: -12.302878379821777
    8. '   ' → logprob: -13.677878379821777
    9. '2' → logprob: -14.177878379821777
    10. '	r' → logprob: -14.302878379821777

Token 304: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014388793148100376
    2. '0' → logprob: -4.264388561248779
    3. ' r' → logprob: -8.764389038085938
    4. 'n' → logprob: -9.764389038085938
    5. ' ' → logprob: -12.389389038085938
    6. '1' → logprob: -12.764389038085938
    7. '
' → logprob: -13.014389038085938
    8. '(r' → logprob: -14.514389038085938
    9. '

' → logprob: -15.014389038085938
    10. '	r' → logprob: -15.264389038085938

Token 305: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23153769969940186
    2. '<=' → logprob: -1.6065376996994019
    3. ' <' → logprob: -5.231537818908691
    4. '<' → logprob: -7.356537818908691
    5. '<n' → logprob: -9.481537818908691
    6. ' ' → logprob: -11.106537818908691
    7. ' not' → logprob: -11.606537818908691
    8. ' r' → logprob: -11.981537818908691
    9. 'r' → logprob: -12.356537818908691
    10. ' ≤' → logprob: -13.231537818908691

Token 306: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020546091720461845
    2. ' r' → logprob: -3.8955461978912354
    3. 'n' → logprob: -12.520545959472656
    4. ' n' → logprob: -14.645545959472656
    5. ' ' → logprob: -16.520545959472656
    6. '	r' → logprob: -18.145545959472656
    7. '```' → logprob: -19.270545959472656
    8. '_r' → logprob: -19.395545959472656
    9. 'b' → logprob: -19.520545959472656
    10. 'a' → logprob: -19.833045959472656

Token 307: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31454163789749146
    2. ' <=' → logprob: -1.3145415782928467
    3. ' and' → logprob: -6.689541816711426
    4. 'and' → logprob: -10.689541816711426
    5. ')<=' → logprob: -12.939541816711426
    6. '<|end|>' → logprob: -13.064541816711426
    7. ' r' → logprob: -13.314541816711426
    8. ']<=' → logprob: -13.564541816711426
    9. ' ' → logprob: -13.939541816711426
    10. '≤' → logprob: -13.939541816711426

Token 308: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -18.125553131103516
    4. ' ' → logprob: -19.125553131103516
    5. '<|end|>' → logprob: -19.375553131103516
    6. '```' → logprob: -19.500553131103516
    7. '(n' → logprob: -20.500553131103516
    8. '
' → logprob: -20.500553131103516
    9. '_n' → logprob: -21.125553131103516
    10. 'min' → logprob: -21.375553131103516

Token 309: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0028061794582754374
    2. 'else' → logprob: -5.877806186676025
    3. ' and' → logprob: -14.127805709838867
    4. '	else' → logprob: -15.002805709838867
    5. ' ' → logprob: -15.502805709838867
    6. '+' → logprob: -17.377805709838867
    7. '    ' → logprob: -17.877805709838867
    8. '_else' → logprob: -18.252805709838867
    9. '        ' → logprob: -18.877805709838867
    10. 'and' → logprob: -19.002805709838867

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. '۰' → logprob: -19.62509536743164
    5. '  ' → logprob: -20.25009536743164
    6. '０' → logprob: -21.12509536743164
    7. '
' → logprob: -21.50009536743164
    8. '```' → logprob: -21.62509536743164
    9. ' ' → logprob: -21.75009536743164
    10. '<|end|>' → logprob: -21.75009536743164

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.62510871887207
    4. '۰' → logprob: -19.87510871887207
    5. '  ' → logprob: -20.06260871887207
    6. '
' → logprob: -20.56260871887207
    7. ' ' → logprob: -21.18760871887207
    8. '```' → logprob: -21.31260871887207
    9. '０' → logprob: -21.37510871887207
    10. '00' → logprob: -22.00010871887207

Token 312: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.1246429681777954
    2. 'com' → logprob: -1.9996429681777954
    3. ' comb' → logprob: -2.124642848968506
    4. 'pow' → logprob: -2.499642848968506
    5. 'main' → logprob: -2.749642848968506
    6. 'factor' → logprob: -2.749642848968506
    7. ' combinations' → logprob: -2.874642848968506
    8. 'n' → logprob: -3.749642848968506
    9. 'count' → logprob: -3.874642848968506
    10. ' main' → logprob: -4.249642848968506

Token 315: '_with' (ID: 14161)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09494997560977936
    2. '_count' → logprob: -3.094949960708618
    3. '_s' → logprob: -3.344949960708618
    4. '_' → logprob: -5.219950199127197
    5. ' s' → logprob: -6.219950199127197
    6. '(s' → logprob: -6.469950199127197
    7. '_counts' → logprob: -7.469950199127197
    8. '(' → logprob: -8.969949722290039
    9. '<|end|>' → logprob: -9.219949722290039
    10. '_Count' → logprob: -10.094949722290039

Token 316: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.5040489435195923
    2. '_re' → logprob: -1.0040489435195923
    3. 're' → logprob: -3.7540488243103027
    4. 'rep' → logprob: -5.379048824310303
    5. 'repeat' → logprob: -7.504048824310303
    6. 'r' → logprob: -8.254049301147461
    7. '_repeat' → logprob: -8.754049301147461
    8. ' replacement' → logprob: -8.754049301147461
    9. '_rep' → logprob: -9.254049301147461
    10. '(re' → logprob: -9.754049301147461

Token 317: 'petition' (ID: 134449)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.002721064258366823
    2. 'petition' → logprob: -6.002720832824707
    3. 'pe' → logprob: -9.127720832824707
    4. 'place' → logprob: -10.002720832824707
    5. 'p' → logprob: -10.502720832824707
    6. 'pl' → logprob: -10.502720832824707
    7. 'peat' → logprob: -11.252720832824707
    8. 'placements' → logprob: -11.627720832824707
    9. '
' → logprob: -12.627720832824707
    10. 'pt' → logprob: -12.627720832824707

Token 318: '_count' (ID: 7536)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19220378994941711
    2. '(' → logprob: -1.8172037601470947
    3. '_count' → logprob: -4.442203998565674
    4. ' (' → logprob: -7.692203998565674
    5. '_counts' → logprob: -9.317203521728516
    6. 's' → logprob: -11.192203521728516
    7. '(
' → logprob: -11.567203521728516
    8. 'count' → logprob: -11.692203521728516
    9. 'def' → logprob: -11.817203521728516
    10. '(count' → logprob: -12.192203521728516

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.000020027160645
    4. '(
' → logprob: -16.375019073486328
    5. 'def' → logprob: -16.875019073486328
    6. 'n' → logprob: -17.750019073486328
    7. ' n' → logprob: -18.750019073486328
    8. '(N' → logprob: -19.500019073486328
    9. ' def' → logprob: -20.000019073486328
    10. '	n' → logprob: -20.250019073486328

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007534937001764774
    2. ',r' → logprob: -5.007534980773926
    3. ' ,' → logprob: -7.132534980773926
    4. ',k' → logprob: -11.257534980773926
    5. ',n' → logprob: -12.507534980773926
    6. 'r' → logprob: -13.257534980773926
    7. ' r' → logprob: -14.382534980773926
    8. 'def' → logprob: -15.132534980773926
    9. ',m' → logprob: -15.257534980773926
    10. ',
' → logprob: -15.257534980773926

Token 321: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005535162054002285
    2. ' r' → logprob: -5.255535125732422
    3. 'k' → logprob: -8.130535125732422
    4. ' k' → logprob: -13.005535125732422
    5. '   ' → logprob: -13.130535125732422
    6. '
' → logprob: -13.505535125732422
    7. ' ' → logprob: -14.755535125732422
    8. '```' → logprob: -15.380535125732422
    9. 'def' → logprob: -15.505535125732422
    10. '	r' → logprob: -16.005535125732422

Token 322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269838660955429
    2. '):
' → logprob: -2.126983880996704
    3. '):
' → logprob: -10.001983642578125
    4. ' ):' → logprob: -12.001983642578125
    5. ')' → logprob: -13.001983642578125
    6. '):

' → logprob: -14.126983642578125
    7. ':' → logprob: -14.376983642578125
    8. ' ):
' → logprob: -15.251983642578125
    9. '=' → logprob: -15.376983642578125
    10. 'def' → logprob: -15.876983642578125

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021443895995616913
    2. ' return' → logprob: -4.146443843841553
    3. 'return' → logprob: -5.271443843841553
    4. ':' → logprob: -9.271444320678711
    5. ':return' → logprob: -9.646444320678711
    6. '	return' → logprob: -10.146444320678711
    7. ':
' → logprob: -11.021444320678711
    8. 'def' → logprob: -11.271444320678711
    9. '    ' → logprob: -11.896444320678711
    10. '):
' → logprob: -12.021444320678711

Token 324: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00344552262686193
    2. ' return' → logprob: -5.753445625305176
    3. '   ' → logprob: -8.253445625305176
    4. 'def' → logprob: -12.753445625305176
    5. '	return' → logprob: -13.253445625305176
    6. '
' → logprob: -13.753445625305176
    7. 'from' → logprob: -13.878445625305176
    8. 'if' → logprob: -15.503445625305176
    9. ':return' → logprob: -15.628445625305176
    10. 'red' → logprob: -16.25344467163086

Token 325: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08628212660551071
    2. ' combinations' → logprob: -2.8362820148468018
    3. 'comb' → logprob: -3.9612820148468018
    4. 'red' → logprob: -5.836282253265381
    5. '(com' → logprob: -6.836282253265381
    6. ' red' → logprob: -7.461282253265381
    7. ' combination' → logprob: -8.461281776428223
    8. 'fact' → logprob: -9.836281776428223
    9. 'factor' → logprob: -9.961281776428223
    10. ' combin' → logprob: -10.836281776428223

Token 326: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. '\' → logprob: -16.375
    3. '_' → logprob: -16.375
    4. 'count' → logprob: -16.875
    5. '(_' → logprob: -17.25
    6. '_with' → logprob: -17.5
    7. '(' → logprob: -17.625
    8. '_counts' → logprob: -17.75
    9. '(count' → logprob: -18.5
    10. 'Count' → logprob: -18.5

Token 327: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.570319702499546e-05
    2. '(' → logprob: -10.625025749206543
    3. ' (' → logprob: -14.625025749206543
    4. 'n' → logprob: -15.125025749206543
    5. '((' → logprob: -15.250025749206543
    6. 'def' → logprob: -15.875025749206543
    7. '<|end|>' → logprob: -16.375024795532227
    8. '(
' → logprob: -16.750024795532227
    9. '
' → logprob: -18.250024795532227
    10. '```' → logprob: -19.125024795532227

Token 328: '+r' (ID: 133712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6672511100769043
    2. '+r' → logprob: -0.7922511100769043
    3. '+n' → logprob: -3.4172511100769043
    4. '   ' → logprob: -7.917251110076904
    5. 'n' → logprob: -8.292251586914062
    6. ' n' → logprob: -8.542251586914062
    7. ' r' → logprob: -8.542251586914062
    8. '+' → logprob: -9.292251586914062
    9. 'r' → logprob: -9.667251586914062
    10. ' ' → logprob: -10.042251586914062

Token 329: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007417303277179599
    2. ' -' → logprob: -7.250741958618164
    3. 'r' → logprob: -10.750741958618164
    4. ' r' → logprob: -11.750741958618164
    5. '1' → logprob: -13.125741958618164
    6. ' ' → logprob: -14.875741958618164
    7. '-r' → logprob: -16.125741958618164
    8. '−' → logprob: -17.375741958618164
    9. '   ' → logprob: -18.375741958618164
    10. 'minus' → logprob: -18.875741958618164

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'r' → logprob: -17.625
    4. '   ' → logprob: -18.125
    5. '۱' → logprob: -18.8125
    6. '```' → logprob: -19.0625
    7. '
' → logprob: -19.25
    8. 'def' → logprob: -19.5
    9. '2' → logprob: -20.125
    10. '১' → logprob: -20.125

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002074006013572216
    2. ',r' → logprob: -6.502074241638184
    3. ' ,' → logprob: -7.502074241638184
    4. ',n' → logprob: -11.002074241638184
    5. '   ' → logprob: -13.627074241638184
    6. ',
' → logprob: -14.252074241638184
    7. 'def' → logprob: -14.627074241638184
    8. 'r' → logprob: -14.752074241638184
    9. ')' → logprob: -17.502073287963867
    10. '，' → logprob: -17.752073287963867

Token 332: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033546582562848926
    2. ' r' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.875335693359375
    4. '	r' → logprob: -18.875335693359375
    5. ' ' → logprob: -22.250335693359375
    6. '    ' → logprob: -22.750335693359375
    7. '
' → logprob: -22.875335693359375
    8. 'n' → logprob: -22.875335693359375
    9. '_r' → logprob: -23.000335693359375
    10. '  ' → logprob: -23.250335693359375

Token 333: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')
' → logprob: -13.125006675720215
    4. 'def' → logprob: -16.25000762939453
    5. ')#' → logprob: -16.37500762939453
    6. '))' → logprob: -17.00000762939453
    7. '),' → logprob: -17.00000762939453
    8. ' if' → logprob: -17.25000762939453
    9. ')

' → logprob: -17.25000762939453
    10. 'if' → logprob: -17.62500762939453

Token 334: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5692490339279175
    2. '<|end|>' → logprob: -0.9442490339279175
    3. ':' → logprob: -4.194249153137207
    4. ',' → logprob: -5.069249153137207
    5. '
' → logprob: -5.319249153137207
    6. '):' → logprob: -5.569249153137207
    7. '<|end|>' → logprob: -6.069249153137207
    8. ' ' → logprob: -6.319249153137207
    9. 'def' → logprob: -6.319249153137207
    10. '[' → logprob: -6.319249153137207

Token 335: ' gcd' (ID: 106918)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8458217978477478
    2. 'main' → logprob: -2.4708218574523926
    3. ' combinations' → logprob: -2.9708218574523926
    4. 'n' → logprob: -3.2208218574523926
    5. ' gcd' → logprob: -3.2208218574523926
    6. ' pow' → logprob: -3.4708218574523926
    7. 'factor' → logprob: -3.4708218574523926
    8. 'pow' → logprob: -3.4708218574523926
    9. ' factorial' → logprob: -3.4708218574523926
    10. ' comb' → logprob: -3.4708218574523926

Token 336: 's' (ID: 82)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004748149309307337
    2. '(' → logprob: -5.379748344421387
    3. '(*' → logprob: -9.129748344421387
    4. '(x' → logprob: -11.254748344421387
    5. '(
' → logprob: -13.379748344421387
    6. ' (' → logprob: -13.379748344421387
    7. 'a' → logprob: -13.879748344421387
    8. 'def' → logprob: -14.254748344421387
    9. '(A' → logprob: -15.129748344421387
    10. '(n' → logprob: -15.129748344421387

Token 337: '(nums' (ID: 40372)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.024308681488037
    2. '(*' → logprob: -1.024308681488037
    3. '(' → logprob: -1.274308681488037
    4. '(x' → logprob: -6.899308681488037
    5. '(n' → logprob: -8.399309158325195
    6. '(
' → logprob: -8.524309158325195
    7. ' (' → logprob: -8.649309158325195
    8. 'def' → logprob: -8.899309158325195
    9. 'import' → logprob: -9.399309158325195
    10. '_' → logprob: -9.524309158325195

Token 338: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062007904052734375
    2. '):
' → logprob: -2.8120079040527344
    3. ')' → logprob: -10.937007904052734
    4. '):
' → logprob: -11.437007904052734
    5. ' ):' → logprob: -12.187007904052734
    6. ':' → logprob: -12.187007904052734
    7. '):

' → logprob: -13.937007904052734
    8. '(nums' → logprob: -15.187007904052734
    9. ' ):
' → logprob: -15.687007904052734
    10. '   ' → logprob: -16.312007904052734

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041341137140989304
    2. ' return' → logprob: -3.4163410663604736
    3. ' red' → logprob: -5.291341304779053
    4. 'return' → logprob: -6.666341304779053
    5. ' def' → logprob: -7.791341304779053
    6. 'def' → logprob: -8.166340827941895
    7. ':
' → logprob: -8.541340827941895
    8. 'red' → logprob: -9.041340827941895
    9. 'from' → logprob: -9.291340827941895
    10. ' from' → logprob: -9.291340827941895

Token 340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7730675935745239
    2. 'from' → logprob: -1.148067593574524
    3. 'red' → logprob: -2.5230674743652344
    4. 'def' → logprob: -2.6480674743652344
    5. '   ' → logprob: -3.3980674743652344
    6. ' return' → logprob: -4.023067474365234
    7. ' ' → logprob: -4.648067474365234
    8. ' from' → logprob: -5.398067474365234
    9. 'reduce' → logprob: -5.648067474365234
    10. ' red' → logprob: -7.398067474365234

Token 341: ' red' (ID: 3592)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.771946907043457
    2. 'red' → logprob: -1.146946907043457
    3. 'deep' → logprob: -1.646946907043457
    4. ' reduce' → logprob: -4.771946907043457
    5. ' deep' → logprob: -5.021946907043457
    6. ' red' → logprob: -5.021946907043457
    7. '0' → logprob: -6.521946907043457
    8. ' ' → logprob: -6.646946907043457
    9. 'fact' → logprob: -6.771946907043457
    10. 'abs' → logprob: -7.021946907043457

Token 342: '(fr' (ID: 62646)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7833645343780518
    2. '(g' → logprob: -0.9083645343780518
    3. '(fr' → logprob: -2.0333645343780518
    4. 'frac' → logprob: -5.408364295959473
    5. 'g' → logprob: -6.158364295959473
    6. '(' → logprob: -6.533364295959473
    7. 'lambda' → logprob: -7.408364295959473
    8. '(int' → logprob: -9.033364295959473
    9. '(func' → logprob: -9.408364295959473
    10. '(math' → logprob: -10.533364295959473

Token 343: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -2.1888679839321412e-05
    2. 'act' → logprob: -11.875021934509277
    3. 'acf' → logprob: -12.250021934509277
    4. 'from' → logprob: -13.125021934509277
    5. 'ag' → logprob: -13.750021934509277
    6. 'eq' → logprob: -13.875021934509277
    7. 'acd' → logprob: -14.000021934509277
    8. 'acs' → logprob: -14.625021934509277
    9. 'acc' → logprob: -14.750021934509277
    10. '

' → logprob: -14.875021934509277

Token 344: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00013893934374209493
    2. 'ac' → logprob: -9.000139236450195
    3. '_g' → logprob: -12.250139236450195
    4. ' gcd' → logprob: -13.125139236450195
    5. 'act' → logprob: -13.500139236450195
    6. 'ag' → logprob: -13.750139236450195
    7. ')' → logprob: -14.125139236450195
    8. 'c' → logprob: -14.375139236450195
    9. 'import' → logprob: -14.375139236450195
    10. 'ct' → logprob: -15.125139236450195

Token 345: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.01432157214730978
    2. 'g' → logprob: -4.264321804046631
    3. 'c' → logprob: -9.514321327209473
    4. 'd' → logprob: -9.764321327209473
    5. ' gcd' → logprob: -11.139321327209473
    6. 'id' → logprob: -13.139321327209473
    7. 'cc' → logprob: -13.389321327209473
    8. 'ac' → logprob: -13.389321327209473
    9. 'acd' → logprob: -13.889321327209473
    10. 'CD' → logprob: -13.889321327209473

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038014890742488205
    2. ' ,' → logprob: -8.625380516052246
    3. ',g' → logprob: -9.250380516052246
    4. ',int' → logprob: -9.875380516052246
    5. ',num' → logprob: -10.875380516052246
    6. ',l' → logprob: -12.375380516052246
    7. '(lambda' → logprob: -12.375380516052246
    8. ',m' → logprob: -12.500380516052246
    9. ',n' → logprob: -12.875380516052246
    10. ',(' → logprob: -12.875380516052246

Token 347: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0619802325963974
    2. ' nums' → logprob: -2.8119802474975586
    3. '(nums' → logprob: -11.561980247497559
    4. '[' → logprob: -13.436980247497559
    5. 'Nums' → logprob: -14.686980247497559
    6. '   ' → logprob: -14.811980247497559
    7. '_nums' → logprob: -15.186980247497559
    8. 'num' → logprob: -15.936980247497559
    9. ')' → logprob: -16.436979293823242
    10. ' ' → logprob: -16.686979293823242

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.611323624383658e-05
    2. ' )' → logprob: -10.375065803527832
    3. ',' → logprob: -10.750065803527832
    4. ')
' → logprob: -11.875065803527832
    5. '),' → logprob: -13.625065803527832
    6. ')}' → logprob: -13.625065803527832
    7. '[' → logprob: -13.875065803527832
    8. ' ' → logprob: -14.750065803527832
    9. '))' → logprob: -14.875065803527832
    10. '())' → logprob: -15.125065803527832

Token 349: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07431579381227493
    2. ':' → logprob: -3.8243157863616943
    3. ',' → logprob: -4.074316024780273
    4. '<|end|>' → logprob: -4.324316024780273
    5. '[' → logprob: -5.574316024780273
    6. '(' → logprob: -5.699316024780273
    7. ' ' → logprob: -5.949316024780273
    8. '
' → logprob: -6.199316024780273
    9. ')
' → logprob: -7.199316024780273
    10. '),' → logprob: -7.199316024780273

Token 350: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09894756972789764
    2. 'l' → logprob: -2.473947525024414
    3. ' main' → logprob: -5.098947525024414
    4. 'main' → logprob: -7.098947525024414
    5. ' gcd' → logprob: -7.223947525024414
    6. ' pow' → logprob: -8.598947525024414
    7. 'g' → logprob: -8.598947525024414
    8. ' eg' → logprob: -8.598947525024414
    9. ' factorial' → logprob: -8.848947525024414
    10. ' combinations' → logprob: -8.973947525024414

Token 351: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.249780638725497e-05
    2. 'cms' → logprob: -10.500032424926758
    3. 'cd' → logprob: -13.875032424926758
    4. 'c' → logprob: -13.875032424926758
    5. '   ' → logprob: -14.125032424926758
    6. 'cmp' → logprob: -14.250032424926758
    7. 'cmb' → logprob: -15.000032424926758
    8. 'l' → logprob: -15.125032424926758
    9. 'cmd' → logprob: -15.250032424926758
    10. 'ambda' → logprob: -15.875032424926758

Token 352: '(x' (ID: 4061)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.49663394689559937
    2. '(a' → logprob: -0.9966339468955994
    3. '(' → logprob: -4.246634006500244
    4. 's' → logprob: -5.121634006500244
    5. '(numbers' → logprob: -7.496634006500244
    6. '(lst' → logprob: -7.621634006500244
    7. '(vals' → logprob: -7.746634006500244
    8. '(xs' → logprob: -8.871633529663086
    9. '(x' → logprob: -9.871633529663086
    10. ' (' → logprob: -9.996633529663086

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02253439836204052
    2. ',y' → logprob: -3.8975343704223633
    3. ' ,' → logprob: -6.272534370422363
    4. 'y' → logprob: -10.772534370422363
    5. ',b' → logprob: -10.897534370422363
    6. ',n' → logprob: -11.147534370422363
    7. ',int' → logprob: -11.522534370422363
    8. ',r' → logprob: -12.147534370422363
    9. ',a' → logprob: -12.272534370422363
    10. 's' → logprob: -12.522534370422363

Token 354: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0052354102954268456
    2. ' y' → logprob: -5.255235195159912
    3. '	y' → logprob: -13.88023567199707
    4. '*y' → logprob: -15.13023567199707
    5. '   ' → logprob: -15.50523567199707
    6. 'lambda' → logprob: -16.25523567199707
    7. 'def' → logprob: -16.75523567199707
    8. '    ' → logprob: -16.75523567199707
    9. ' ' → logprob: -16.75523567199707
    10. '  ' → logprob: -16.88023567199707

Token 355: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004260988440364599
    2. '):
' → logprob: -6.004261016845703
    3. ',' → logprob: -6.629261016845703
    4. ' ):' → logprob: -8.004261016845703
    5. ')' → logprob: -9.254261016845703
    6. '):
' → logprob: -10.504261016845703
    7. ':' → logprob: -13.129261016845703
    8. '),' → logprob: -13.879261016845703
    9. '):

' → logprob: -14.629261016845703
    10. ' ):
' → logprob: -14.754261016845703

Token 356: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4568883776664734
    2. '   ' → logprob: -1.7068884372711182
    3. ' x' → logprob: -1.9568884372711182
    4. 'return' → logprob: -3.206888437271118
    5. 'x' → logprob: -6.331888198852539
    6. '    ' → logprob: -7.206888198852539
    7. '	return' → logprob: -8.081888198852539
    8. ' (' → logprob: -8.206888198852539
    9. '(x' → logprob: -8.206888198852539
    10. ' ' → logprob: -9.206888198852539

Token 357: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03388415649533272
    2. ' x' → logprob: -3.533884048461914
    3. '(x' → logprob: -5.533884048461914
    4. ' (' → logprob: -9.408884048461914
    5. ' ' → logprob: -10.033884048461914
    6. '	x' → logprob: -11.033884048461914
    7. '  ' → logprob: -11.158884048461914
    8. '   ' → logprob: -11.408884048461914
    9. '    ' → logprob: -13.158884048461914
    10. '(' → logprob: -13.533884048461914

Token 358: ' *' (ID: 425)
  Prédit: '*y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.04922046512365341
    2. ' *' → logprob: -3.049220561981201
    3. '*x' → logprob: -7.549220561981201
    4. '*l' → logprob: -9.674220085144043
    5. '*' → logprob: -10.424220085144043
    6. '//' → logprob: -11.299220085144043
    7. ' //' → logprob: -14.799220085144043
    8. '*k' → logprob: -15.799220085144043
    9. '*b' → logprob: -15.924220085144043
    10. '*i' → logprob: -16.29922103881836

Token 359: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.73052782076411e-05
    2. ' y' → logprob: -9.625067710876465
    3. '(y' → logprob: -13.750067710876465
    4. '	y' → logprob: -16.75006675720215
    5. ' ' → logprob: -17.50006675720215
    6. '(' → logprob: -17.75006675720215
    7. '   ' → logprob: -18.00006675720215
    8. '  ' → logprob: -18.37506675720215
    9. '//' → logprob: -18.62506675720215
    10. ''y' → logprob: -18.87506675720215

Token 360: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.31326520442962646
    2. '//' → logprob: -1.3132652044296265
    3. '#' → logprob: -13.188264846801758
    4. ' #' → logprob: -14.313264846801758
    5. ' ' → logprob: -14.938264846801758
    6. ' ' → logprob: -15.063264846801758
    7. 'y' → logprob: -16.813264846801758
    8. '  ' → logprob: -17.063264846801758
    9. '   ' → logprob: -17.063264846801758
    10. '
' → logprob: -17.438264846801758

Token 361: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.0004236435634084046
    2. 'g' → logprob: -8.000423431396484
    3. ' frac' → logprob: -9.750423431396484
    4. 'fact' → logprob: -11.625423431396484
    5. 'fr' → logprob: -12.000423431396484
    6. 'fra' → logprob: -12.625423431396484
    7. 'frag' → logprob: -12.750423431396484
    8. '(fr' → logprob: -12.875423431396484
    9. ' gcd' → logprob: -13.625423431396484
    10. 'fract' → logprob: -13.875423431396484

Token 362: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6405310816480778e-05
    2. 'frac' → logprob: -11.125016212463379
    3. '_g' → logprob: -14.750016212463379
    4. 'def' → logprob: -15.750016212463379
    5. 'sys' → logprob: -15.875016212463379
    6. '```' → logprob: -15.875016212463379
    7. 'ig' → logprob: -16.250017166137695
    8. 'f' → logprob: -16.250017166137695
    9. '   ' → logprob: -16.375017166137695
    10. '[g' → logprob: -17.250017166137695

Token 363: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -7.703443770878948e-06
    2. 'c' → logprob: -12.000007629394531
    3. 'g' → logprob: -13.500007629394531
    4. 'cdf' → logprob: -16.00000762939453
    5. 'cdn' → logprob: -17.62500762939453
    6. 'cm' → logprob: -18.50000762939453
    7. 'CD' → logprob: -19.00000762939453
    8. 'cf' → logprob: -19.62500762939453
    9. '_cd' → logprob: -20.50000762939453
    10. 'd' → logprob: -20.50000762939453

Token 364: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.417976379045285e-05
    2. 'x' → logprob: -10.125043869018555
    3. '(' → logprob: -12.500043869018555
    4. ' (' → logprob: -15.125043869018555
    5. 'import' → logprob: -17.750043869018555
    6. 'def' → logprob: -18.500043869018555
    7. '(
' → logprob: -18.625043869018555
    8. ' x' → logprob: -18.625043869018555
    9. '```' → logprob: -19.500043869018555
    10. '(y' → logprob: -19.625043869018555

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6198541522026062
    2. '(x' → logprob: -0.8698541522026062
    3. ',y' → logprob: -3.494854211807251
    4. '(y' → logprob: -4.994853973388672
    5. 'x' → logprob: -6.119853973388672
    6. 'y' → logprob: -6.244853973388672
    7. ',x' → logprob: -7.244853973388672
    8. '(' → logprob: -7.869853973388672
    9. ' ,' → logprob: -8.244853973388672
    10. ')' → logprob: -9.119853973388672

Token 366: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. '(x' → logprob: -19.50002098083496
    4. '	x' → logprob: -20.00002098083496
    5. ' ' → logprob: -20.62502098083496
    6. '{x' → logprob: -21.37502098083496
    7. '
' → logprob: -21.50002098083496
    8. '   ' → logprob: -21.87502098083496
    9. '[x' → logprob: -22.75002098083496
    10. ')x' → logprob: -22.75002098083496

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1609642207622528
    2. '(x' → logprob: -1.9109642505645752
    3. '<|end|>' → logprob: -7.910964012145996
    4. ' )' → logprob: -8.910964012145996
    5. ' ' → logprob: -10.035964012145996
    6. '(' → logprob: -10.160964012145996
    7. 'def' → logprob: -10.160964012145996
    8. ')
' → logprob: -10.660964012145996
    9. ')x' → logprob: -10.660964012145996
    10. 'x' → logprob: -10.785964012145996

Token 368: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08293135464191437
    2. ' l' → logprob: -2.7079312801361084
    3. 'g' → logprob: -5.8329315185546875
    4. 'reduce' → logprob: -5.9579315185546875
    5. 'lc' → logprob: -6.0829315185546875
    6. 'def' → logprob: -6.2079315185546875
    7. ' gcd' → logprob: -7.2079315185546875
    8. ' def' → logprob: -7.7079315185546875
    9. ' reduce' → logprob: -8.082931518554688
    10. ' lc' → logprob: -8.332931518554688

Token 370: 'cms' (ID: 60849)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.003148008370772004
    2. 'ambda' → logprob: -6.378148078918457
    3. 'ist' → logprob: -8.253148078918457
    4. 'en' → logprob: -8.378148078918457
    5. 'eft' → logprob: -8.378148078918457
    6. 'amb' → logprob: -8.628148078918457
    7. 'c' → logprob: -9.378148078918457
    8. 'def' → logprob: -9.753148078918457
    9. 'am' → logprob: -10.003148078918457
    10. '   ' → logprob: -10.128148078918457

Token 371: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.001559139578603208
    2. '(*' → logprob: -7.376559257507324
    3. '(lst' → logprob: -7.626559257507324
    4. '(xs' → logprob: -9.251559257507324
    5. 'def' → logprob: -9.501559257507324
    6. '=' → logprob: -9.751559257507324
    7. 'nums' → logprob: -10.001559257507324
    8. ' =' → logprob: -10.126559257507324
    9. '(numbers' → logprob: -10.501559257507324
    10. '(x' → logprob: -11.001559257507324

Token 372: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14798445999622345
    2. '):
' → logprob: -2.022984504699707
    3. '(nums' → logprob: -5.397984504699707
    4. '):
' → logprob: -7.897984504699707
    5. ')' → logprob: -8.147984504699707
    6. ',' → logprob: -10.147984504699707
    7. '):

' → logprob: -10.772984504699707
    8. ' ):' → logprob: -11.022984504699707
    9. 'def' → logprob: -12.147984504699707
    10. '(n' → logprob: -12.147984504699707

Token 373: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.511249840259552
    2. 'return' → logprob: -1.0112497806549072
    3. ' return' → logprob: -4.011250019073486
    4. 'red' → logprob: -4.886250019073486
    5. 'def' → logprob: -5.136250019073486
    6. 'reduce' → logprob: -5.761250019073486
    7. ' ' → logprob: -7.011250019073486
    8. ' red' → logprob: -7.261250019073486
    9. '
' → logprob: -9.636249542236328
    10. ' def' → logprob: -10.011249542236328

Token 374: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0009931529639288783
    2. 'reduce' → logprob: -7.125993251800537
    3. ' red' → logprob: -8.875992774963379
    4. 'deep' → logprob: -10.000992774963379
    5. 'redu' → logprob: -13.375992774963379
    6. '1' → logprob: -14.375992774963379
    7. '(red' → logprob: -14.625992774963379
    8. 're' → logprob: -14.875992774963379
    9. ' ' → logprob: -15.750992774963379
    10. ' reduce' → logprob: -16.500993728637695

Token 375: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.062005553394556046
    2. '(lambda' → logprob: -2.8120055198669434
    3. 'lambda' → logprob: -11.187005996704102
    4. 'l' → logprob: -11.312005996704102
    5. '(' → logprob: -11.437005996704102
    6. ' (' → logprob: -14.937005996704102
    7. '	l' → logprob: -15.312005996704102
    8. '((' → logprob: -16.1870059967041
    9. '```' → logprob: -16.5620059967041
    10. '(
' → logprob: -16.9370059967041

Token 376: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0009916032431647182
    2. 'ambda' → logprob: -7.6259918212890625
    3. 'mb' → logprob: -8.625991821289062
    4. 'cmb' → logprob: -9.625991821289062
    5. '(' → logprob: -9.750991821289062
    6. 'amb' → logprob: -10.375991821289062
    7. '(lambda' → logprob: -10.375991821289062
    8. 'c' → logprob: -10.375991821289062
    9. '(l' → logprob: -10.875991821289062
    10. '   ' → logprob: -11.125991821289062

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000399091251892969
    2. ',num' → logprob: -8.250398635864258
    3. ' ,' → logprob: -9.250398635864258
    4. '(nums' → logprob: -10.125398635864258
    5. ')' → logprob: -14.375398635864258
    6. ',n' → logprob: -15.125398635864258
    7. ',args' → logprob: -15.875398635864258
    8. 'nums' → logprob: -16.125398635864258
    9. ',x' → logprob: -16.125398635864258
    10. '  ' → logprob: -16.625398635864258

Token 378: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.006723771803081036
    2. ' nums' → logprob: -5.006723880767822
    3. '(nums' → logprob: -11.881723403930664
    4. '[' → logprob: -13.881723403930664
    5. '   ' → logprob: -15.006723403930664
    6. 'num' → logprob: -16.006723403930664
    7. ' ' → logprob: -16.756723403930664
    8. '_nums' → logprob: -17.006723403930664
    9. 'Nums' → logprob: -17.756723403930664
    10. '```' → logprob: -18.506723403930664

Token 379: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9292415749514475e-05
    2. ',' → logprob: -10.250039100646973
    3. ' )' → logprob: -13.125039100646973
    4. '(' → logprob: -14.875039100646973
    5. ')
' → logprob: -14.875039100646973
    6. ')`' → logprob: -14.875039100646973
    7. '[' → logprob: -15.750039100646973
    8. ')#' → logprob: -15.750039100646973
    9. '())' → logprob: -16.12504005432129
    10. ')}' → logprob: -16.37504005432129

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005737748462706804
    2. 'initial' → logprob: -5.505737781524658
    3. ')' → logprob: -7.255737781524658
    4. 'lambda' → logprob: -8.3807373046875
    5. ' ' → logprob: -8.6307373046875
    6. 'start' → logprob: -8.7557373046875
    7. '[' → logprob: -8.7557373046875
    8. 'init' → logprob: -9.1307373046875
    9. ' initial' → logprob: -9.8807373046875
    10. 'initializer' → logprob: -10.6307373046875

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04175007343292236
    2. 'initial' → logprob: -4.166749954223633
    3. 'start' → logprob: -4.166749954223633
    4. 'lambda' → logprob: -5.166749954223633
    5. 'init' → logprob: -6.416749954223633
    6. '(' → logprob: -7.041749954223633
    7. 'nums' → logprob: -7.416749954223633
    8. ')' → logprob: -7.541749954223633
    9. '[' → logprob: -8.041749954223633
    10. ' ' → logprob: -10.041749954223633

Token 382: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')}' → logprob: -15.375006675720215
    4. '0' → logprob: -15.375006675720215
    5. ')
' → logprob: -15.500006675720215
    6. 'def' → logprob: -15.750006675720215
    7. ')`' → logprob: -15.875006675720215
    8. '))' → logprob: -16.37500762939453
    9. ')#' → logprob: -16.37500762939453
    10. ')}}' → logprob: -16.87500762939453

Token 383: 'INF' (ID: 64358)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014182209968567
    2. '=' → logprob: -1.701418161392212
    3. ' =
' → logprob: -13.076417922973633
    4. ',' → logprob: -13.826417922973633
    5. '=int' → logprob: -14.201417922973633
    6. '=
' → logprob: -15.201417922973633
    7. '_' → logprob: -15.576417922973633
    8. ' ' → logprob: -15.576417922973633
    9. ')' → logprob: -15.826417922973633
    10. '＝' → logprob: -15.951417922973633

Token 385: ' MOD' (ID: 32868)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2465168982744217
    2. 'MOD' → logprob: -1.8715169429779053
    3. 'MAX' → logprob: -4.246516704559326
    4. 'INF' → logprob: -4.496516704559326
    5. 'INT' → logprob: -4.871516704559326
    6. 'None' → logprob: -4.871516704559326
    7. '=' → logprob: -5.746516704559326
    8. ' ' → logprob: -6.121516704559326
    9. '0' → logprob: -6.121516704559326
    10. ' MOD' → logprob: -6.371516704559326

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689014315605164
    2. ' =' → logprob: -1.136890172958374
    3. ',' → logprob: -10.886890411376953
    4. '=int' → logprob: -14.886890411376953
    5. ' ' → logprob: -16.136890411376953
    6. '=

' → logprob: -17.261890411376953
    7. ' ,' → logprob: -18.136890411376953
    8. ' =
' → logprob: -18.136890411376953
    9. '＝' → logprob: -18.386890411376953
    10. '=
' → logprob: -18.761890411376953

Token 387: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004133253358304501
    2. 'float' → logprob: -5.504133224487305
    3. ' ' → logprob: -10.004133224487305
    4. 'int' → logprob: -12.504133224487305
    5. '1' → logprob: -12.629133224487305
    6. ' float' → logprob: -13.004133224487305
    7. '100' → logprob: -16.004133224487305
    8. '(' → logprob: -17.129133224487305
    9. '   ' → logprob: -18.254133224487305
    10. '(float' → logprob: -18.254133224487305

Token 388: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01815415732562542
    2. 'float' → logprob: -4.018154144287109
    3. 'int' → logprob: -13.01815414428711
    4. '1' → logprob: -13.64315414428711
    5. ' float' → logprob: -15.01815414428711
    6. ' ' → logprob: -15.01815414428711
    7. '100' → logprob: -16.26815414428711
    8. '(' → logprob: -16.39315414428711
    9. '(float' → logprob: -17.14315414428711
    10. 'pow' → logprob: -17.14315414428711

Token 389: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.049738045781850815
    2. '9' → logprob: -3.0497379302978516
    3. '7' → logprob: -6.924737930297852
    4. '```' → logprob: -9.424737930297852
    5. '18' → logprob: -9.799737930297852
    6. ' **' → logprob: -10.924737930297852
    7. '09' → logprob: -12.049737930297852
    8. ' ' → logprob: -13.674737930297852
    9. '10' → logprob: -14.049737930297852
    10. '+' → logprob: -14.299737930297852

Token 390: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4285862057004124e-05
    2. '18' → logprob: -10.50003433227539
    3. '15' → logprob: -12.25003433227539
    4. '10' → logprob: -14.37503433227539
    5. '09' → logprob: -15.12503433227539
    6. '19' → logprob: -15.25003433227539
    7. '+' → logprob: -15.62503433227539
    8. '14' → logprob: -15.75003433227539
    9. '12' → logprob: -15.87503433227539
    10. '13' → logprob: -16.37503433227539

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5313286781311035
    2. '+' → logprob: -0.9063286781311035
    3. ' +' → logprob: -4.9063286781311035
    4. ' ,' → logprob: -7.2813286781311035
    5. '+,' → logprob: -10.281328201293945
    6. '```' → logprob: -11.031328201293945
    7. ',+' → logprob: -12.031328201293945
    8. '1' → logprob: -12.156328201293945
    9. ',
' → logprob: -12.281328201293945
    10. '7' → logprob: -13.156328201293945

Token 392: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.65707261255011e-06
    2. '998' → logprob: -12.375008583068848
    3. ' ' → logprob: -12.750008583068848
    4. 'int' → logprob: -13.875008583068848
    5. '1' → logprob: -15.125008583068848
    6. '100' → logprob: -15.875008583068848
    7. 'MOD' → logprob: -18.625009536743164
    8. 'pow' → logprob: -18.625009536743164
    9. '(' → logprob: -18.875009536743164
    10. '   ' → logprob: -19.250009536743164

Token 393: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005638765869662166
    2. '998' → logprob: -7.500564098358154
    3. 'int' → logprob: -11.750563621520996
    4. '100' → logprob: -13.375563621520996
    5. '1' → logprob: -14.125563621520996
    6. ' ' → logprob: -15.250563621520996
    7. '(' → logprob: -15.375563621520996
    8. '
' → logprob: -16.875564575195312
    9. '```' → logprob: -17.000564575195312
    10. 'pow' → logprob: -17.250564575195312

Token 394: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00012106612848583609
    2. '+' → logprob: -9.125121116638184
    3. '09' → logprob: -11.875121116638184
    4. '```' → logprob: -12.625121116638184
    5. ' ' → logprob: -13.625121116638184
    6. '**' → logprob: -15.500121116638184
    7. '   ' → logprob: -16.500120162963867
    8. '7' → logprob: -16.750120162963867
    9. '``' → logprob: -16.750120162963867
    10. '18' → logprob: -17.250120162963867

Token 395: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.750000953674316
    3. '```' → logprob: -15.500000953674316
    4. '+' → logprob: -15.625000953674316
    5. '10' → logprob: -17.5
    6. '19' → logprob: -18.5
    7. '``' → logprob: -19.5
    8. '
' → logprob: -20.625
    9. ' ' → logprob: -20.625
    10. '12' → logprob: -20.875

Token 396: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002190829487517476
    2. '7' → logprob: -6.127191066741943
    3. ' +' → logprob: -12.252190589904785
    4. '```' → logprob: -14.752190589904785
    5. '+
' → logprob: -15.377190589904785
    6. '＋' → logprob: -15.502190589904785
    7. '9' → logprob: -16.3771915435791
    8. 'plus' → logprob: -17.1271915435791
    9. '07' → logprob: -18.1271915435791
    10. '()+' → logprob: -19.0021915435791

Token 397: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.375
    3. ' ' → logprob: -21.125
    4. '```' → logprob: -21.5
    5. '07' → logprob: -21.75
    6. '9' → logprob: -23.0
    7. '７' → logprob: -23.5
    8. '   ' → logprob: -23.5
    9. '

' → logprob: -24.25
    10. '``' → logprob: -24.875

Token 398: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.875
    3. '```' → logprob: -21.625
    4. ' ' → logprob: -22.0
    5. '７' → logprob: -22.875
    6. '9' → logprob: -23.5
    7. '07' → logprob: -23.5
    8. '

' → logprob: -24.0
    9. '
' → logprob: -24.5
    10. '   ' → logprob: -24.625

Token 399: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3802018463611603
    2. '<|end|>' → logprob: -1.255201816558838
    3. ')' → logprob: -4.380201816558838
    4. ':' → logprob: -4.880201816558838
    5. '#' → logprob: -5.380201816558838
    6. '
' → logprob: -6.380201816558838
    7. '```' → logprob: -6.505201816558838
    8. '<|end|>' → logprob: -6.755201816558838
    9. '):' → logprob: -8.005202293395996
    10. ',' → logprob: -8.130202293395996

Token 401: 'pow' (ID: 30304)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28250351548194885
    2. ' =' → logprob: -1.4075034856796265
    3. '_' → logprob: -8.282503128051758
    4. 'ule' → logprob: -8.407503128051758
    5. 'ulo' → logprob: -8.907503128051758
    6. 'ulus' → logprob: -9.032503128051758
    7. 'def' → logprob: -9.407503128051758
    8. '_mod' → logprob: -9.407503128051758
    9. 'MOD' → logprob: -10.032503128051758
    10. 'ULO' → logprob: -10.282503128051758

Token 402: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001537715899758041
    2. ' (' → logprob: -6.626537799835205
    3. ' =' → logprob: -9.626537322998047
    4. '(
' → logprob: -10.251537322998047
    5. '=' → logprob: -10.876537322998047
    6. '(pow' → logprob: -11.001537322998047
    7. 'def' → logprob: -11.126537322998047
    8. ' ' → logprob: -11.251537322998047
    9. '<|end|>' → logprob: -11.251537322998047
    10. '(

' → logprob: -12.876537322998047

Token 403: ' lambda' (ID: 27871)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04874258115887642
    2. 'lambda' → logprob: -3.0487425327301025
    3. ' pow' → logprob: -9.423742294311523
    4. ' lambda' → logprob: -10.048742294311523
    5. '(lambda' → logprob: -10.798742294311523
    6. '(pow' → logprob: -12.298742294311523
    7. 'def' → logprob: -13.048742294311523
    8. '   ' → logprob: -13.173742294311523
    9. ' ' → logprob: -14.298742294311523
    10. '    ' → logprob: -14.673742294311523

Token 404: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30982261896133423
    2. 'lambda' → logprob: -2.0598225593566895
    3. 'x' → logprob: -2.5598225593566895
    4. 'base' → logprob: -2.9348225593566895
    5. ' lambda' → logprob: -5.9348225593566895
    6. ' a' → logprob: -6.0598225593566895
    7. 'b' → logprob: -6.5598225593566895
    8. ' base' → logprob: -6.9348225593566895
    9. ' x' → logprob: -7.3098225593566895
    10. 'pow' → logprob: -8.059823036193848

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003790760529227555
    2. ',n' → logprob: -8.750378608703613
    3. ',b' → logprob: -9.125378608703613
    4. ',a' → logprob: -10.000378608703613
    5. 'a' → logprob: -10.750378608703613
    6. ',p' → logprob: -10.875378608703613
    7. ' ,' → logprob: -11.625378608703613
    8. ',k' → logprob: -12.500378608703613
    9. ',x' → logprob: -12.625378608703613
    10. 'b' → logprob: -12.750378608703613

Token 406: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001696902181720361
    2. ' b' → logprob: -9.50016975402832
    3. 'p' → logprob: -9.75016975402832
    4. 'n' → logprob: -10.37516975402832
    5. 'x' → logprob: -13.00016975402832
    6. 'e' → logprob: -13.87516975402832
    7. 'k' → logprob: -14.12516975402832
    8. 'r' → logprob: -14.62516975402832
    9. 'pow' → logprob: -14.87516975402832
    10. 'm' → logprob: -15.00016975402832

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006562725640833378
    2. ':' → logprob: -5.25656270980835
    3. 'a' → logprob: -7.25656270980835
    4. ',a' → logprob: -7.63156270980835
    5. 'pow' → logprob: -9.381563186645508
    6. ',p' → logprob: -11.131563186645508
    7. ' :' → logprob: -11.131563186645508
    8. ':a' → logprob: -11.381563186645508
    9. ' ,' → logprob: -12.756563186645508
    10. ',n' → logprob: -12.881563186645508

Token 408: ' p' (ID: 275)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.17344748973846436
    2. 'mod' → logprob: -1.9234474897384644
    3. 'm' → logprob: -4.923447608947754
    4. 'b' → logprob: -5.298447608947754
    5. 'p' → logprob: -7.173447608947754
    6. ' MOD' → logprob: -9.673447608947754
    7. 'pow' → logprob: -10.798447608947754
    8. 'r' → logprob: -12.923447608947754
    9. 'M' → logprob: -12.923447608947754
    10. '_MOD' → logprob: -13.173447608947754

Token 409: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014442270912695676
    2. 'a' → logprob: -9.625144004821777
    3. ':a' → logprob: -10.125144004821777
    4. ' :' → logprob: -10.375144004821777
    5. ':(' → logprob: -12.875144004821777
    6. ',' → logprob: -13.125144004821777
    7. 'pow' → logprob: -13.250144004821777
    8. '=' → logprob: -15.125144004821777
    9. ',a' → logprob: -15.500144004821777
    10. '```' → logprob: -16.500144958496094

Token 410: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.896309739408025e-07
    2. '10' → logprob: -14.875000953674316
    3. ' MOD' → logprob: -15.250000953674316
    4. 'mod' → logprob: -16.75
    5. 'MO' → logprob: -17.625
    6. 'int' → logprob: -18.875
    7. '_MOD' → logprob: -19.375
    8. '100' → logprob: -20.875
    9. 'Mod' → logprob: -20.875
    10. '0' → logprob: -21.125

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005203855689615011
    2. ':a' → logprob: -7.7505202293396
    3. ' :' → logprob: -9.625520706176758
    4. 'a' → logprob: -11.375520706176758
    5. ',' → logprob: -11.500520706176758
    6. ',a' → logprob: -13.875520706176758
    7. ':(' → logprob: -14.125520706176758
    8. 'pow' → logprob: -15.000520706176758
    9. '(a' → logprob: -17.500520706176758
    10. '   ' → logprob: -17.750520706176758

Token 412: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0038903378881514072
    2. '1' → logprob: -5.753890514373779
    3. ' pow' → logprob: -7.503890514373779
    4. '(pow' → logprob: -8.753890037536621
    5. 'a' → logprob: -12.878890037536621
    6. '(' → logprob: -14.628890037536621
    7. '(a' → logprob: -15.003890037536621
    8. ' ' → logprob: -15.128890037536621
    9. '_pow' → logprob: -17.628890991210938
    10. '   ' → logprob: -18.003890991210938

Token 413: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0030753985047340393
    2. 'a' → logprob: -5.87807559967041
    3. '(' → logprob: -8.25307559967041
    4. '(
' → logprob: -12.87807559967041
    5. '<|end|>' → logprob: -13.12807559967041
    6. '```' → logprob: -13.50307559967041
    7. 'mod' → logprob: -14.50307559967041
    8. '$a' → logprob: -14.62807559967041
    9. ')a' → logprob: -14.75307559967041
    10. '#a' → logprob: -14.87807559967041

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043649181723594666
    2. ',n' → logprob: -3.293649196624756
    3. '%n' → logprob: -5.293649196624756
    4. '%' → logprob: -7.543649196624756
    5. ' ,' → logprob: -10.918648719787598
    6. ' %' → logprob: -11.043648719787598
    7. 'n' → logprob: -13.168648719787598
    8. '%,' → logprob: -13.293648719787598
    9. ',
' → logprob: -14.793648719787598
    10. '```' → logprob: -15.168648719787598

Token 415: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.061054359131958e-06
    2. ' n' → logprob: -11.750007629394531
    3. '	n' → logprob: -17.00000762939453
    4. '   ' → logprob: -17.87500762939453
    5. ' ' → logprob: -18.25000762939453
    6. '  ' → logprob: -18.50000762939453
    7. '(n' → logprob: -18.87500762939453
    8. '<|end|>' → logprob: -19.00000762939453
    9. '
' → logprob: -19.37500762939453
    10. '    ' → logprob: -19.50000762939453

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019752219319343567
    2. '%' → logprob: -4.019752025604248
    3. ',p' → logprob: -6.519752025604248
    4. ' ,' → logprob: -9.769752502441406
    5. ' %' → logprob: -10.019752502441406
    6. '%,' → logprob: -11.644752502441406
    7. '%n' → logprob: -11.769752502441406
    8. 'mod' → logprob: -12.894752502441406
    9. '%e' → logprob: -13.519752502441406
    10. '%m' → logprob: -13.894752502441406

Token 417: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.988221684878226e-06
    2. ' p' → logprob: -11.875006675720215
    3. '```' → logprob: -22.37500762939453
    4. ')' → logprob: -22.50000762939453
    5. 'mod' → logprob: -22.75000762939453
    6. '	p' → logprob: -22.87500762939453
    7. '
' → logprob: -23.00000762939453
    8. '<p' → logprob: -23.00000762939453
    9. ' ' → logprob: -23.25000762939453
    10. ')p' → logprob: -23.62500762939453

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -17.875
    4. '))' → logprob: -18.25
    5. '),' → logprob: -19.0
    6. ')#' → logprob: -19.0
    7. ')

' → logprob: -19.75
    8. ')}' → logprob: -20.125
    9. ')return' → logprob: -20.25
    10. ').' → logprob: -21.125

Token 419: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6639166474342346
    2. '<|end|>' → logprob: -1.2889165878295898
    3. ')' → logprob: -1.6639165878295898
    4. '#' → logprob: -4.41391658782959
    5. '<|end|>' → logprob: -6.53891658782959
    6. ':' → logprob: -6.66391658782959
    7. '```' → logprob: -6.66391658782959
    8. '):' → logprob: -6.78891658782959
    9. ',' → logprob: -7.91391658782959
    10. '),' → logprob: -8.16391658782959

Token 420: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.002187256934121251
    2. 'main' → logprob: -6.252187252044678
    3. 'solve' → logprob: -9.502187728881836
    4. 'pow' → logprob: -9.877187728881836
    5. 'mods' → logprob: -10.502187728881836
    6. ' mod' → logprob: -10.627187728881836
    7. 'dfs' → logprob: -10.877187728881836
    8. 'mul' → logprob: -11.252187728881836
    9. 'factor' → logprob: -12.002187728881836
    10. '_mod' → logprob: -12.002187728881836

Token 421: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02559894137084484
    2. 'inv' → logprob: -4.525599002838135
    3. '_pow' → logprob: -4.525599002838135
    4. 'exp' → logprob: -5.775599002838135
    5. '_inv' → logprob: -8.400598526000977
    6. '_add' → logprob: -9.400598526000977
    7. '_exp' → logprob: -9.650598526000977
    8. 'add' → logprob: -10.400598526000977
    9. '_mul' → logprob: -10.400598526000977
    10. 'mul' → logprob: -10.775598526000977

Token 422: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0564331205387134e-05
    2. '(x' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.87501049041748
    4. '(' → logprob: -16.250011444091797
    5. 'a' → logprob: -16.250011444091797
    6. '(n' → logprob: -16.375011444091797
    7. '(m' → logprob: -17.125011444091797
    8. '(b' → logprob: -18.000011444091797
    9. 'def' → logprob: -18.875011444091797
    10. '(p' → logprob: -19.500011444091797

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ',n' → logprob: -12.250009536743164
    3. ' ,' → logprob: -12.625009536743164
    4. ',p' → logprob: -14.250009536743164
    5. ',b' → logprob: -14.375009536743164
    6. ',a' → logprob: -14.625009536743164
    7. ',m' → logprob: -15.750009536743164
    8. ',
' → logprob: -18.750009536743164
    9. 'a' → logprob: -19.125009536743164
    10. 'n' → logprob: -19.375009536743164

Token 424: ' p' (ID: 275)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.21690064668655396
    2. 'p' → logprob: -2.341900587081909
    3. 'MOD' → logprob: -2.591900587081909
    4. ' m' → logprob: -4.091900825500488
    5. ' p' → logprob: -5.466900825500488
    6. ' MOD' → logprob: -6.466900825500488
    7. 'mod' → logprob: -6.591900825500488
    8. ' mod' → logprob: -9.966900825500488
    9. 'M' → logprob: -10.841900825500488
    10. '```' → logprob: -11.091900825500488

Token 425: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2536298334598541
    2. '):' → logprob: -1.5036298036575317
    3. '):
' → logprob: -7.003629684448242
    4. '=p' → logprob: -7.503629684448242
    5. '=None' → logprob: -9.128629684448242
    6. ')' → logprob: -9.503629684448242
    7. '=M' → logprob: -10.378629684448242
    8. '=a' → logprob: -12.253629684448242
    9. '=A' → logprob: -12.628629684448242
    10. '=P' → logprob: -12.878629684448242

Token 426: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.8624639324116288e-06
    2. 'mod' → logprob: -13.500001907348633
    3. ' MOD' → logprob: -14.875001907348633
    4. '_MOD' → logprob: -16.875001907348633
    5. 'MO' → logprob: -17.625001907348633
    6. 'Mod' → logprob: -19.500001907348633
    7. '10' → logprob: -20.000001907348633
    8. 'MODE' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '0' → logprob: -20.500001907348633

Token 427: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016361083544325083
    2. '):
' → logprob: -8.750164031982422
    3. ')' → logprob: -13.000164031982422
    4. ' ):' → logprob: -13.125164031982422
    5. '):
' → logprob: -14.250164031982422
    6. '):

' → logprob: -16.000164031982422
    7. ')：' → logprob: -18.500164031982422
    8. '):(' → logprob: -18.625164031982422
    9. ':' → logprob: -18.750164031982422
    10. '):-' → logprob: -18.875164031982422

Token 428: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7645660638809204
    2. 'return' → logprob: -1.0145660638809204
    3. ' return' → logprob: -1.7645660638809204
    4. 'pow' → logprob: -7.764565944671631
    5. ' pow' → logprob: -8.639566421508789
    6. '	return' → logprob: -10.639566421508789
    7. '```' → logprob: -11.889566421508789
    8. '   ' → logprob: -12.514566421508789
    9. ' ' → logprob: -13.014566421508789
    10. 'def' → logprob: -13.264566421508789

Token 429: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.7697225252486533e-06
    2. ' pow' → logprob: -12.500003814697266
    3. '(pow' → logprob: -18.875003814697266
    4. 'mod' → logprob: -19.500003814697266
    5. '_pow' → logprob: -21.125003814697266
    6. 'power' → logprob: -21.500003814697266
    7. 'pw' → logprob: -23.250003814697266
    8. 'pot' → logprob: -23.250003814697266
    9. 'p' → logprob: -23.375003814697266
    10. 'int' → logprob: -23.750003814697266

Token 430: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0087516784551553e-05
    2. 'a' → logprob: -11.75001049041748
    3. '(' → logprob: -13.25001049041748
    4. 'def' → logprob: -15.25001049041748
    5. '(
' → logprob: -17.500009536743164
    6. '```' → logprob: -17.500009536743164
    7. '<|end|>' → logprob: -17.625009536743164
    8. '(ai' → logprob: -18.375009536743164
    9. '(abs' → logprob: -19.625009536743164
    10. '$a' → logprob: -20.000009536743164

Token 431: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023551058024168015
    2. 'a' → logprob: -3.7735509872436523
    3. '-' → logprob: -8.398550987243652
    4. ',' → logprob: -10.023550987243652
    5. '(' → logprob: -11.523550987243652
    6. ',a' → logprob: -11.523550987243652
    7. '(p' → logprob: -11.648550987243652
    8. 'p' → logprob: -12.773550987243652
    9. ' a' → logprob: -14.023550987243652
    10. ',p' → logprob: -14.398550987243652

Token 432: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005396892665885389
    2. 'p' → logprob: -7.625539779663086
    3. '-' → logprob: -9.875539779663086
    4. ' a' → logprob: -15.500539779663086
    5. ' -' → logprob: -17.125539779663086
    6. '```' → logprob: -18.000539779663086
    7. '-p' → logprob: -18.125539779663086
    8. 'MOD' → logprob: -18.875539779663086
    9. ' p' → logprob: -19.000539779663086
    10. '
' → logprob: -19.125539779663086

Token 433: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1008713702030946e-06
    2. ' -' → logprob: -13.125001907348633
    3. '−' → logprob: -20.500001907348633
    4. '–' → logprob: -21.625001907348633
    5. '```' → logprob: -22.000001907348633
    6. '()-' → logprob: -22.250001907348633
    7. '2' → logprob: -23.125001907348633
    8. 'a' → logprob: -23.375001907348633
    9. ''-' → logprob: -24.250001907348633
    10. '{-' → logprob: -24.375001907348633

Token 434: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.437500953674316
    3. '-' → logprob: -16.0
    4. '۲' → logprob: -16.4375
    5. ' ' → logprob: -16.8125
    6. '２' → logprob: -17.4375
    7. '
' → logprob: -17.4375
    8. '{' → logprob: -17.5625
    9. '3' → logprob: -17.625
    10. '২' → logprob: -17.75

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013325021136552095
    2. ')' → logprob: -7.3763322830200195
    3. ' ,' → logprob: -7.3763322830200195
    4. ',a' → logprob: -9.75133228302002
    5. ',p' → logprob: -11.00133228302002
    6. 'a' → logprob: -13.37633228302002
    7. ',n' → logprob: -13.50133228302002
    8. ',b' → logprob: -14.62633228302002
    9. ' )' → logprob: -15.37633228302002
    10. '```' → logprob: -15.62633228302002

Token 436: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.501928329467773
    4. '	p' → logprob: -19.626928329467773
    5. '<p' → logprob: -19.751928329467773
    6. ')p' → logprob: -20.626928329467773
    7. ')' → logprob: -20.876928329467773
    8. ' ' → logprob: -21.376928329467773
    9. '   ' → logprob: -21.501928329467773
    10. '```' → logprob: -21.751928329467773

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.000000953674316
    4. ')#' → logprob: -17.375
    5. ')return' → logprob: -17.5
    6. ')a' → logprob: -17.75
    7. '<|end|>' → logprob: -18.75
    8. ')

' → logprob: -18.875
    9. ')}' → logprob: -19.125
    10. '))' → logprob: -19.25

Token 438: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0059808492660522
    2. '<|end|>' → logprob: -1.1309808492660522
    3. 'def' → logprob: -1.2559808492660522
    4. ':' → logprob: -5.130980968475342
    5. ',' → logprob: -5.755980968475342
    6. '):' → logprob: -6.005980968475342
    7. '```' → logprob: -6.130980968475342
    8. '#' → logprob: -6.380980968475342
    9. '[' → logprob: -6.380980968475342
    10. ']' → logprob: -6.630980968475342

Token 439: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0028773918747901917
    2. 'mods' → logprob: -6.627877235412598
    3. ' mod' → logprob: -7.377877235412598
    4. 'main' → logprob: -8.502877235412598
    5. 'ch' → logprob: -8.752877235412598
    6. 'ext' → logprob: -9.002877235412598
    7. 'comb' → logprob: -9.752877235412598
    8. 'is' → logprob: -10.127877235412598
    9. 'solve' → logprob: -10.502877235412598
    10. 'safe' → logprob: -10.877877235412598

Token 440: 'inv' (ID: 31086)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.226547509431839
    2. 'inv' → logprob: -1.9765474796295166
    3. 'pow' → logprob: -2.8515474796295166
    4. 'exp' → logprob: -6.101547718048096
    5. 'add' → logprob: -6.476547718048096
    6. 'prod' → logprob: -7.226547718048096
    7. '_mul' → logprob: -7.601547718048096
    8. 'mult' → logprob: -7.726547718048096
    9. 'div' → logprob: -7.851547718048096
    10. 'multiply' → logprob: -8.226547241210938

Token 441: '_list' (ID: 4162)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1177302896976471
    2. 'a' → logprob: -2.6177303791046143
    3. '(' → logprob: -4.617730140686035
    4. '<|end|>' → logprob: -4.867730140686035
    5. 'def' → logprob: -5.242730140686035
    6. 'import' → logprob: -6.117730140686035
    7. '_extended' → logprob: -6.242730140686035
    8. '2' → logprob: -6.742730140686035
    9. 'pow' → logprob: -7.617730140686035
    10. '_' → logprob: -7.617730140686035

Token 442: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014151156647130847
    2. '(' → logprob: -6.876415252685547
    3. 'def' → logprob: -9.126415252685547
    4. '(a' → logprob: -9.501415252685547
    5. '(p' → logprob: -9.751415252685547
    6. '(N' → logprob: -10.001415252685547
    7. '(l' → logprob: -10.626415252685547
    8. ' =' → logprob: -11.376415252685547
    9. '(m' → logprob: -11.751415252685547
    10. '(
' → logprob: -11.751415252685547

Token 443: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40987417101860046
    2. '(n' → logprob: -1.2848742008209229
    3. '):
' → logprob: -3.284874200820923
    4. ',' → logprob: -4.784873962402344
    5. ',n' → logprob: -5.159873962402344
    6. ')' → logprob: -5.534873962402344
    7. '(' → logprob: -6.659873962402344
    8. '```' → logprob: -6.909873962402344
    9. ':' → logprob: -7.159873962402344
    10. 'n' → logprob: -8.159873962402344

Token 444: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28621143102645874
    2. 'MOD' → logprob: -1.4112114906311035
    3. ')' → logprob: -5.7862114906311035
    4. 'mod' → logprob: -6.7862114906311035
    5. 'n' → logprob: -7.7862114906311035
    6. ' p' → logprob: -8.661211013793945
    7. ' MOD' → logprob: -9.161211013793945
    8. 'm' → logprob: -10.661211013793945
    9. '):' → logprob: -10.786211013793945
    10. '):
' → logprob: -11.036211013793945

Token 445: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06901606917381287
    2. '):' → logprob: -2.9440159797668457
    3. '):
' → logprob: -4.444015979766846
    4. '=n' → logprob: -6.694015979766846
    5. '(n' → logprob: -7.194015979766846
    6. '=N' → logprob: -9.569016456604004
    7. 'MOD' → logprob: -10.069016456604004
    8. ')' → logprob: -10.194016456604004
    9. '(' → logprob: -10.694016456604004
    10. '=p' → logprob: -10.819016456604004

Token 446: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.0339031834737398e-05
    2. '10' → logprob: -10.875020027160645
    3. ' MOD' → logprob: -13.750020027160645
    4. 'mod' → logprob: -16.12502098083496
    5. '100' → logprob: -16.50002098083496
    6. '_MOD' → logprob: -17.50002098083496
    7. ' ' → logprob: -18.25002098083496
    8. 'MO' → logprob: -19.25002098083496
    9. 'int' → logprob: -19.62502098083496
    10. 'Mod' → logprob: -19.62502098083496

Token 447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011959441471844912
    2. '):
' → logprob: -6.876195907592773
    3. ')' → logprob: -8.876195907592773
    4. '):
' → logprob: -10.751195907592773
    5. ' ):' → logprob: -14.001195907592773
    6. ')：' → logprob: -14.501195907592773
    7. '):

' → logprob: -15.001195907592773
    8. '=' → logprob: -17.126195907592773
    9. '）：' → logprob: -17.376195907592773
    10. '):

' → logprob: -17.501195907592773

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029298067092895508
    2. ':' → logprob: -4.654297828674316
    3. ' lst' → logprob: -5.029297828674316
    4. ' l' → logprob: -5.779297828674316
    5. '(lst' → logprob: -5.904297828674316
    6. ' return' → logprob: -6.654297828674316
    7. 'lst' → logprob: -7.154297828674316
    8. '[' → logprob: -7.529297828674316
    9. '):' → logprob: -7.654297828674316
    10. ':return' → logprob: -8.279297828674316

Token 449: ' return' (ID: 622)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.008729803375899792
    2. 'fact' → logprob: -5.508729934692383
    3. 'res' → logprob: -6.633729934692383
    4. 'lst' → logprob: -6.883729934692383
    5. ' inv' → logprob: -7.258729934692383
    6. 'dp' → logprob: -7.383729934692383
    7. 'ret' → logprob: -8.133729934692383
    8. 'l' → logprob: -8.383729934692383
    9. 'iv' → logprob: -8.883729934692383
    10. 'f' → logprob: -9.258729934692383

Token 450: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002811199810821563
    2. '[list' → logprob: -9.37528133392334
    3. '[p' → logprob: -9.62528133392334
    4. ' [' → logprob: -10.25028133392334
    5. '[ip' → logprob: -10.25028133392334
    6. '([' → logprob: -11.87528133392334
    7. '[f' → logprob: -12.12528133392334
    8. '[(' → logprob: -12.25028133392334
    9. '[in' → logprob: -12.37528133392334
    10. '[c' → logprob: -12.62528133392334

Token 451: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011791547294706106
    2. '0' → logprob: -7.001179218292236
    3. 'mod' → logprob: -8.501178741455078
    4. '-' → logprob: -10.126178741455078
    5. 'None' → logprob: -11.001178741455078
    6. 'pow' → logprob: -12.876178741455078
    7. '*' → logprob: -13.626178741455078
    8. ']' → logprob: -14.001178741455078
    9. ' ' → logprob: -14.126178741455078
    10. '(' → logprob: -14.626178741455078

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035777103155851364
    2. ']' → logprob: -3.7857770919799805
    3. ']+' → logprob: -4.9107770919799805
    4. ']*(' → logprob: -5.4107770919799805
    5. ']*' → logprob: -8.28577709197998
    6. ' if' → logprob: -8.41077709197998
    7. 'if' → logprob: -9.16077709197998
    8. ' for' → logprob: -11.53577709197998
    9. '0' → logprob: -12.28577709197998
    10. 'for' → logprob: -12.41077709197998

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '0' → logprob: -12.625112533569336
    4. '   ' → logprob: -17.625112533569336
    5. ']' → logprob: -18.125112533569336
    6. '  ' → logprob: -19.125112533569336
    7. '    ' → logprob: -19.750112533569336
    8. '' → logprob: -20.875112533569336
    9. 'None' → logprob: -21.875112533569336
    10. '<|end|>' → logprob: -22.125112533569336

Token 454: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011156410910189152
    2. ']+' → logprob: -4.5111565589904785
    3. ']*(' → logprob: -9.13615608215332
    4. ',' → logprob: -14.88615608215332
    5. ' ]' → logprob: -15.13615608215332
    6. '   ' → logprob: -16.13615608215332
    7. ']+\' → logprob: -16.51115608215332
    8. '](' → logprob: -17.63615608215332
    9. '0' → logprob: -17.88615608215332
    10. ']*' → logprob: -18.01115608215332

Token 455: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4835936725139618
    2. '+' → logprob: -1.7335937023162842
    3. '+[' → logprob: -1.8585937023162842
    4. 'n' → logprob: -4.233593463897705
    5. '(' → logprob: -4.358593463897705
    6. '[n' → logprob: -4.983593463897705
    7. ' +' → logprob: -5.233593463897705
    8. '+(' → logprob: -5.858593463897705
    9. '([' → logprob: -6.108593463897705
    10. ' (' → logprob: -6.108593463897705

Token 456: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009823736734688282
    2. '(n' → logprob: -4.634823799133301
    3. '[n' → logprob: -10.5098237991333
    4. '((' → logprob: -11.1348237991333
    5. '1' → logprob: -11.5098237991333
    6. ' n' → logprob: -11.8848237991333
    7. '(' → logprob: -12.5098237991333
    8. '2' → logprob: -13.2598237991333
    9. '[(' → logprob: -13.8848237991333
    10. '0' → logprob: -14.1348237991333

Token 457: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5764631628990173
    2. '+' → logprob: -0.8264631628990173
    3. '+p' → logprob: -8.201462745666504
    4. '>>' → logprob: -9.826462745666504
    5. '#' → logprob: -9.826462745666504
    6. '+(' → logprob: -10.076462745666504
    7. '+n' → logprob: -10.326462745666504
    8. ' +' → logprob: -10.576462745666504
    9. ' //' → logprob: -11.201462745666504
    10. 'p' → logprob: -11.701462745666504

Token 458: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039797842502593994
    2. '2' → logprob: -3.289797782897949
    3. '(n' → logprob: -6.789797782897949
    4. '//' → logprob: -7.789797782897949
    5. 'n' → logprob: -9.03979778289795
    6. '(' → logprob: -10.16479778289795
    7. '0' → logprob: -10.41479778289795
    8. '(p' → logprob: -12.16479778289795
    9. '+' → logprob: -12.28979778289795
    10. '[n' → logprob: -12.66479778289795

Token 459: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0041230423375964165
    2. ')>>' → logprob: -6.129123210906982
    3. ')' → logprob: -6.754123210906982
    4. '//' → logprob: -7.254123210906982
    5. ')[' → logprob: -10.754122734069824
    6. ' )' → logprob: -10.754122734069824
    7. '+' → logprob: -11.629122734069824
    8. '>>' → logprob: -12.254122734069824
    9. ' //' → logprob: -13.504122734069824
    10. '0' → logprob: -14.004122734069824

Token 460: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '3' → logprob: -15.875001907348633
    4. '1' → logprob: -16.375001907348633
    5. '```' → logprob: -18.125001907348633
    6. '4' → logprob: -18.500001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '  ' → logprob: -19.000001907348633
    9. '
' → logprob: -19.500001907348633
    10. '``' → logprob: -19.750001907348633

Token 461: ')' (ID: 8)
  Prédit: '+['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+[' → logprob: -0.23817315697669983
    2. '+' → logprob: -2.613173246383667
    3. ' +' → logprob: -2.613173246383667
    4. '[:' → logprob: -2.863173246383667
    5. ')' → logprob: -5.238173007965088
    6. '[' → logprob: -6.988173007965088
    7. ')[' → logprob: -7.363173007965088
    8. ')+' → logprob: -7.488173007965088
    9. '[n' → logprob: -8.238173484802246
    10. '[:-' → logprob: -8.738173484802246

Token 462: '[:' (ID: 7808)
  Prédit: '+['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+[' → logprob: -0.33890587091445923
    2. '[' → logprob: -1.7139058113098145
    3. ' +' → logprob: -2.9639058113098145
    4. '[:' → logprob: -3.0889058113098145
    5. '+' → logprob: -4.9639058113098145
    6. '[:-' → logprob: -6.7139058113098145
    7. '<|end|>' → logprob: -7.3389058113098145
    8. '[
' → logprob: -8.463906288146973
    9. '[n' → logprob: -8.463906288146973
    10. '   ' → logprob: -8.463906288146973

Token 463: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9743012671824545e-05
    2. ' n' → logprob: -10.875020027160645
    3. '(n' → logprob: -14.875020027160645
    4. '	n' → logprob: -14.875020027160645
    5. ',n' → logprob: -18.000019073486328
    6. ':n' → logprob: -18.250019073486328
    7. '2' → logprob: -19.125019073486328
    8. ')n' → logprob: -19.250019073486328
    9. '(' → logprob: -19.375019073486328
    10. ']' → logprob: -19.500019073486328

Token 464: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018832555040717125
    2. ']+' → logprob: -4.018832683563232
    3. ' ]' → logprob: -8.393832206726074
    4. '+' → logprob: -9.268832206726074
    5. '+[' → logprob: -9.268832206726074
    6. '[n' → logprob: -10.143832206726074
    7. '][:' → logprob: -10.268832206726074
    8. '(n' → logprob: -10.268832206726074
    9. '[:' → logprob: -10.768832206726074
    10. '+n' → logprob: -10.893832206726074

Token 465: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011248346709180623
    2. ']' → logprob: -9.375112533569336
    3. '2' → logprob: -11.250112533569336
    4. ')' → logprob: -12.125112533569336
    5. '+' → logprob: -13.000112533569336
    6. '1' → logprob: -13.250112533569336
    7. '```' → logprob: -13.375112533569336
    8. ' n' → logprob: -14.000112533569336
    9. ')n' → logprob: -14.125112533569336
    10. '[' → logprob: -15.125112533569336

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8544812798500061
    2. '<|end|>' → logprob: -1.6044812202453613
    3. '+[' → logprob: -1.7294812202453613
    4. '+' → logprob: -2.3544812202453613
    5. ' +' → logprob: -2.8544812202453613
    6. '[' → logprob: -3.8544812202453613
    7. ']+' → logprob: -4.229481220245361
    8. '[n' → logprob: -6.354481220245361
    9. ' ]' → logprob: -6.979481220245361
    10. ')' → logprob: -7.229481220245361

Token 467: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09452696144580841
    2. 'False' → logprob: -2.469527006149292
    3. ' False' → logprob: -5.844526767730713
    4. ' n' → logprob: -5.969526767730713
    5. '0' → logprob: -9.844527244567871
    6. '(False' → logprob: -10.969527244567871
    7. 'not' → logprob: -11.469527244567871
    8. '[' → logprob: -11.719527244567871
    9. 'True' → logprob: -11.969527244567871
    10. 'len' → logprob: -12.719527244567871

Token 469: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2218932956457138
    2. '>=' → logprob: -1.971893310546875
    3. '==' → logprob: -3.846893310546875
    4. '<=' → logprob: -4.096893310546875
    5. ' <' → logprob: -4.471893310546875
    6. '>' → logprob: -5.596893310546875
    7. '+' → logprob: -5.721893310546875
    8. '<n' → logprob: -6.096893310546875
    9. ' >=' → logprob: -7.471893310546875
    10. '<len' → logprob: -8.721893310546875

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.85235276655294e-05
    2. '2' → logprob: -9.500088691711426
    3. '0' → logprob: -11.750088691711426
    4. ' ' → logprob: -12.875088691711426
    5. '3' → logprob: -13.250088691711426
    6. '10' → logprob: -14.875088691711426
    7. '100' → logprob: -15.375088691711426
    8. '
' → logprob: -15.625088691711426
    9. '11' → logprob: -16.00008773803711
    10. '5' → logprob: -16.00008773803711

Token 471: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12272761017084122
    2. 'else' → logprob: -2.247727632522583
    3. '[' → logprob: -5.247727394104004
    4. '   ' → logprob: -5.747727394104004
    5. '[]' → logprob: -7.497727394104004
    6. '<|end|>' → logprob: -7.872727394104004
    7. '	else' → logprob: -8.247727394104004
    8. ' [' → logprob: -10.372727394104004
    9. ',' → logprob: -10.497727394104004
    10. '
' → logprob: -10.497727394104004

Token 472: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03480067849159241
    2. ' [' → logprob: -3.5348007678985596
    3. '[(' → logprob: -6.1598005294799805
    4. '   ' → logprob: -6.9098005294799805
    5. '[p' → logprob: -7.6598005294799805
    6. '[list' → logprob: -8.40980052947998
    7. '[n' → logprob: -8.78480052947998
    8. '[i' → logprob: -8.90980052947998
    9. '[((' → logprob: -8.90980052947998
    10. '[u' → logprob: -9.40980052947998

Token 473: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11391623318195343
    2. '0' → logprob: -2.2389161586761475
    3. 'mod' → logprob: -7.488916397094727
    4. '   ' → logprob: -8.488916397094727
    5. '*' → logprob: -8.863916397094727
    6. 'None' → logprob: -10.113916397094727
    7. ']' → logprob: -10.488916397094727
    8. ' ' → logprob: -10.613916397094727
    9. '(mod' → logprob: -10.988916397094727
    10. '(' → logprob: -11.113916397094727

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041339205927215517
    2. '1' → logprob: -8.375412940979004
    3. ']' → logprob: -9.500412940979004
    4. ']+' → logprob: -9.875412940979004
    5. '0' → logprob: -10.375412940979004
    6. ' ,' → logprob: -11.625412940979004
    7. ',
' → logprob: -11.625412940979004
    8. '   ' → logprob: -12.625412940979004
    9. ']*' → logprob: -13.625412940979004
    10. ']*(' → logprob: -13.875412940979004

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '0' → logprob: -12.750003814697266
    3. ' ' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.500003814697266
    5. ',' → logprob: -18.125003814697266
    6. ']' → logprob: -19.250003814697266
    7. '
' → logprob: -19.500003814697266
    8. '    ' → logprob: -20.375003814697266
    9. '  ' → logprob: -20.875003814697266
    10. '
' → logprob: -21.250003814697266

Token 476: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.6374988555908203
    2. ']' → logprob: -0.7624988555908203
    3. ']*(' → logprob: -5.38749885559082
    4. ']*' → logprob: -9.01249885559082
    5. ',' → logprob: -9.26249885559082
    6. '   ' → logprob: -10.63749885559082
    7. 'for' → logprob: -11.63749885559082
    8. '```' → logprob: -11.63749885559082
    9. ']+\' → logprob: -11.76249885559082
    10. '+[' → logprob: -12.01249885559082

Token 477: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01631341502070427
    2. '[i' → logprob: -5.391313552856445
    3. '[n' → logprob: -5.641313552856445
    4. '[list' → logprob: -5.891313552856445
    5. '[a' → logprob: -7.141313552856445
    6. '[(' → logprob: -7.266313552856445
    7. '[p' → logprob: -7.266313552856445
    8. '[id' → logprob: -7.891313552856445
    9. ' [' → logprob: -7.891313552856445
    10. '[next' → logprob: -8.016313552856445

Token 478: 'inv' (ID: 31086)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.5389772653579712
    2. 'mod' → logprob: -1.1639772653579712
    3. '(j' → logprob: -3.2889771461486816
    4. '(i' → logprob: -3.6639771461486816
    5. 'j' → logprob: -3.9139771461486816
    6. '(lambda' → logprob: -5.163977146148682
    7. '(' → logprob: -5.663977146148682
    8. 'p' → logprob: -5.913977146148682
    9. '0' → logprob: -6.038977146148682
    10. 'lambda' → logprob: -6.163977146148682

Token 479: ':=' (ID: 33860)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06945289671421051
    2. '*p' → logprob: -3.694453001022339
    3. '[i' → logprob: -3.944453001022339
    4. 'i' → logprob: -5.06945276260376
    5. '[-' → logprob: -5.44445276260376
    6. 'mod' → logprob: -5.81945276260376
    7. '[p' → logprob: -6.06945276260376
    8. '(p' → logprob: -6.31945276260376
    9. '   ' → logprob: -6.81945276260376
    10. '*' → logprob: -6.94445276260376

Token 480: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.671104907989502
    2. 'mod' → logprob: -0.921104907989502
    3. '(mod' → logprob: -3.171104907989502
    4. 'lambda' → logprob: -3.921104907989502
    5. '(p' → logprob: -4.296104907989502
    6. ' mod' → logprob: -5.296104907989502
    7. '(lambda' → logprob: -5.421104907989502
    8. '0' → logprob: -6.171104907989502
    9. '[p' → logprob: -6.796104907989502
    10. ' p' → logprob: -7.671104907989502

Token 481: ' %' (ID: 1851)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019643746316432953
    2. ' -' → logprob: -4.144643783569336
    3. '-mod' → logprob: -6.269643783569336
    4. '-p' → logprob: -7.019643783569336
    5. '-in' → logprob: -7.394643783569336
    6. '-i' → logprob: -10.019643783569336
    7. '-int' → logprob: -10.519643783569336
    8. '-(' → logprob: -10.894643783569336
    9. '-module' → logprob: -11.019643783569336
    10. '-next' → logprob: -11.144643783569336

Token 482: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29147467017173767
    2. 'MOD' → logprob: -1.79147469997406
    3. '(i' → logprob: -3.1664745807647705
    4. '(' → logprob: -3.9164745807647705
    5. '-' → logprob: -5.29147481918335
    6. 'fact' → logprob: -6.16647481918335
    7. 'a' → logprob: -6.29147481918335
    8. '_' → logprob: -6.54147481918335
    9. '(-' → logprob: -6.54147481918335
    10. 'inv' → logprob: -6.79147481918335

Token 483: ')' (ID: 8)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.762791633605957
    2. ',' → logprob: -1.262791633605957
    3. '-' → logprob: -2.387791633605957
    4. ',p' → logprob: -2.762791633605957
    5. 'p' → logprob: -2.887791633605957
    6. 'inv' → logprob: -5.012791633605957
    7. ',i' → logprob: -5.137791633605957
    8. 'for' → logprob: -5.137791633605957
    9. ' and' → logprob: -5.137791633605957
    10. ' -' → logprob: -5.762791633605957

Token 484: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22808347642421722
    2. 'and' → logprob: -2.978083372116089
    3. '*(' → logprob: -3.728083372116089
    4. '*' → logprob: -3.728083372116089
    5. 'for' → logprob: -3.728083372116089
    6. ',p' → logprob: -4.353083610534668
    7. '   ' → logprob: -4.728083610534668
    8. ' and' → logprob: -4.978083610534668
    9. '-' → logprob: -5.103083610534668
    10. ' ,' → logprob: -5.103083610534668

Token 485: ' (' (ID: 350)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.035930074751377106
    2. '(mod' → logprob: -3.6609301567077637
    3. ' mod' → logprob: -5.285930156707764
    4. '(' → logprob: -6.660930156707764
    5. 'p' → logprob: -7.660930156707764
    6. '[' → logprob: -7.785930156707764
    7. ' (' → logprob: -7.910930156707764
    8. '(-' → logprob: -8.160929679870605
    9. '(p' → logprob: -8.410929679870605
    10. '-' → logprob: -8.785929679870605

Token 486: 'p' (ID: 79)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.013609781861305237
    2. '(mod' → logprob: -5.388609886169434
    3. 'p' → logprob: -5.763609886169434
    4. ' mod' → logprob: -6.013609886169434
    5. 'm' → logprob: -7.388609886169434
    6. 'res' → logprob: -7.638609886169434
    7. 'inv' → logprob: -8.138609886169434
    8. '(' → logprob: -8.263609886169434
    9. '[' → logprob: -8.513609886169434
    10. 'ans' → logprob: -8.888609886169434

Token 487: ' -' (ID: 533)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0017308680107817054
    2. ' mod' → logprob: -6.501730918884277
    3. '(mod' → logprob: -9.626730918884277
    4. '	mod' → logprob: -10.376730918884277
    5. '   ' → logprob: -10.626730918884277
    6. '[' → logprob: -10.876730918884277
    7. '-' → logprob: -11.376730918884277
    8. 'p' → logprob: -11.751730918884277
    9. '```' → logprob: -11.751730918884277
    10. '<|end|>' → logprob: -11.876730918884277

Token 488: ' p' (ID: 275)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005903314799070358
    2. 'p' → logprob: -5.630903244018555
    3. '(mod' → logprob: -6.130903244018555
    4. '(p' → logprob: -9.505903244018555
    5. ' mod' → logprob: -10.130903244018555
    6. 'MOD' → logprob: -13.255903244018555
    7. '	mod' → logprob: -13.380903244018555
    8. 'div' → logprob: -13.505903244018555
    9. 'm' → logprob: -13.505903244018555
    10. '[p' → logprob: -13.880903244018555

Token 489: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.259079363080673e-05
    2. '#' → logprob: -11.625012397766113
    3. '```' → logprob: -13.625012397766113
    4. '//=' → logprob: -13.875012397766113
    5. '/i' → logprob: -14.500012397766113
    6. '[i' → logprob: -14.875012397766113
    7. 'i' → logprob: -15.625012397766113
    8. '``' → logprob: -15.750012397766113
    9. '`' → logprob: -16.12501335144043
    10. '//#' → logprob: -16.37501335144043

Token 490: 'i' (ID: 72)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2496098279953003
    2. 'inv' → logprob: -1.6246098279953003
    3. 'div' → logprob: -1.8746098279953003
    4. 'p' → logprob: -2.24960994720459
    5. '//' → logprob: -2.62460994720459
    6. '[' → logprob: -2.62460994720459
    7. 'i' → logprob: -3.24960994720459
    8. 'mod' → logprob: -3.62460994720459
    9. '```' → logprob: -4.12460994720459
    10. '[in' → logprob: -4.99960994720459

Token 491: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3667926788330078
    2. ')' → logprob: -1.8667926788330078
    3. '%' → logprob: -2.366792678833008
    4. 'mod' → logprob: -3.491792678833008
    5. ')%' → logprob: -4.241792678833008
    6. 'inv' → logprob: -4.616792678833008
    7. ' *' → logprob: -6.616792678833008
    8. '(mod' → logprob: -7.491792678833008
    9. ' %' → logprob: -7.491792678833008
    10. '   ' → logprob: -7.991792678833008

Token 492: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28714704513549805
    2. ' %' → logprob: -1.412147045135498
    3. ')%' → logprob: -5.787147045135498
    4. '%x' → logprob: -7.037147045135498
    5. '%i' → logprob: -7.287147045135498
    6. '%n' → logprob: -7.537147045135498
    7. ')' → logprob: -7.537147045135498
    8. '%d' → logprob: -8.912147521972656
    9. '%m' → logprob: -10.787147521972656
    10. '%(' → logprob: -10.787147521972656

Token 493: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '	i' → logprob: -17.375001907348633
    4. '%i' → logprob: -19.250001907348633
    5. '*i' → logprob: -20.375001907348633
    6. ',i' → logprob: -21.125001907348633
    7. '{i' → logprob: -21.500001907348633
    8. ''i' → logprob: -21.750001907348633
    9. '```' → logprob: -21.750001907348633
    10. ' ' → logprob: -22.250001907348633

Token 494: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8675897717475891
    2. ' for' → logprob: -1.4925897121429443
    3. '*' → logprob: -1.6175897121429443
    4. 'for' → logprob: -2.6175897121429443
    5. '*(' → logprob: -2.7425897121429443
    6. '   ' → logprob: -4.992589950561523
    7. ')' → logprob: -5.242589950561523
    8. '*i' → logprob: -6.492589950561523
    9. '%' → logprob: -6.867589950561523
    10. '       ' → logprob: -6.992589950561523

Token 495: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007769051473587751
    2. ' i' → logprob: -4.8827691078186035
    3. '(i' → logprob: -10.007768630981445
    4. '   ' → logprob: -10.257768630981445
    5. ' ' → logprob: -10.382768630981445
    6. 'j' → logprob: -10.507768630981445
    7. '  ' → logprob: -12.007768630981445
    8. 'p' → logprob: -12.257768630981445
    9. '	i' → logprob: -12.507768630981445
    10. ' ' → logprob: -13.132768630981445

Token 496: 'inv' (ID: 31086)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021089822985231876
    2. ' i' → logprob: -6.377109050750732
    3. '(i' → logprob: -7.877109050750732
    4. '(' → logprob: -11.502108573913574
    5. ' (' → logprob: -12.127108573913574
    6. ' ' → logprob: -12.502108573913574
    7. '_i' → logprob: -12.877108573913574
    8. '	i' → logprob: -13.127108573913574
    9. ')i' → logprob: -14.377108573913574
    10. '   ' → logprob: -14.752108573913574

Token 497: ':' (ID: 25)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6092215776443481
    2. 'i' → logprob: -0.8592215776443481
    3. '!=' → logprob: -4.234221458435059
    4. ' !=' → logprob: -5.234221458435059
    5. ',i' → logprob: -5.984221458435059
    6. '=i' → logprob: -5.984221458435059
    7. ')' → logprob: -6.359221458435059
    8. '==' → logprob: -6.859221458435059
    9. ' ' → logprob: -7.359221458435059
    10. ' else' → logprob: -7.484221458435059

Token 498: '=[' (ID: 13370)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48541876673698425
    2. ' i' → logprob: -0.9854187965393066
    3. '=i' → logprob: -5.235418796539307
    4. '=' → logprob: -5.360418796539307
    5. ',i' → logprob: -7.985418796539307
    6. '0' → logprob: -8.610418319702148
    7. ' ' → logprob: -8.860418319702148
    8. '!=' → logprob: -9.110418319702148
    9. ' not' → logprob: -9.235418319702148
    10. '>' → logprob: -9.985418319702148

Token 499: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36450639367103577
    2. '1' → logprob: -1.7395063638687134
    3. '0' → logprob: -2.364506483078003
    4. '-' → logprob: -4.739506244659424
    5. 'None' → logprob: -4.989506244659424
    6. ' i' → logprob: -5.239506244659424
    7. 'j' → logprob: -5.614506244659424
    8. '(i' → logprob: -5.864506244659424
    9. '-i' → logprob: -6.489506244659424
    10. 'len' → logprob: -6.739506244659424

Token 500: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30951815843582153
    2. ',i' → logprob: -2.4345180988311768
    3. '1' → logprob: -2.5595180988311768
    4. '0' → logprob: -2.9345180988311768
    5. ',' → logprob: -4.434518337249756
    6. '[' → logprob: -4.684518337249756
    7. '[i' → logprob: -5.059518337249756
    8. ':=' → logprob: -5.434518337249756
    9. '][' → logprob: -6.059518337249756
    10. ' i' → logprob: -6.184518337249756

Token 501: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8773533701896667
    2. '1' → logprob: -1.2523534297943115
    3. 'i' → logprob: -1.3773534297943115
    4. 'p' → logprob: -3.8773534297943115
    5. 'None' → logprob: -5.002353191375732
    6. 'j' → logprob: -5.252353191375732
    7. '(' → logprob: -5.752353191375732
    8. '])' → logprob: -6.377353191375732
    9. '(i' → logprob: -6.627353191375732
    10. '])[' → logprob: -6.752353191375732

Token 502: '][' (ID: 2696)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -1.0426326990127563
    2. 'i' → logprob: -1.1676326990127563
    3. 'for' → logprob: -2.042632579803467
    4. '[i' → logprob: -3.167632579803467
    5. '][' → logprob: -3.167632579803467
    6. ',' → logprob: -3.542632579803467
    7. '])' → logprob: -3.917632579803467
    8. ':=' → logprob: -4.167632579803467
    9. '])[' → logprob: -4.292632579803467
    10. ' for' → logprob: -4.417632579803467

Token 503: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15168090164661407
    2. 'i' → logprob: -2.2766809463500977
    3. '0' → logprob: -3.4016809463500977
    4. 'None' → logprob: -6.151680946350098
    5. '-' → logprob: -7.776680946350098
    6. ':i' → logprob: -7.776680946350098
    7. ':' → logprob: -8.276680946350098
    8. '...' → logprob: -8.401680946350098
    9. 'j' → logprob: -8.901680946350098
    10. '::-' → logprob: -9.026680946350098

Token 504: ' %' (ID: 1851)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41858336329460144
    2. '-' → logprob: -2.418583393096924
    3. '-i' → logprob: -2.668583393096924
    4. '%i' → logprob: -2.668583393096924
    5. ':i' → logprob: -3.793583393096924
    6. ':' → logprob: -4.043583393096924
    7. '1' → logprob: -4.418583393096924
    8. '%' → logprob: -5.168583393096924
    9. ']' → logprob: -5.543583393096924
    10. '<i' → logprob: -5.543583393096924

Token 505: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006158163887448609
    2. ' i' → logprob: -7.75061559677124
    3. '(i' → logprob: -9.125616073608398
    4. '(' → logprob: -10.000616073608398
    5. ' (' → logprob: -11.125616073608398
    6. '   ' → logprob: -12.625616073608398
    7. '((' → logprob: -12.750616073608398
    8. ' ' → logprob: -13.000616073608398
    9. '0' → logprob: -13.625616073608398
    10. '%i' → logprob: -13.750616073608398

Token 506: '>' (ID: 29)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4873746633529663
    2. ':i' → logprob: -2.487374782562256
    3. 'i' → logprob: -2.737374782562256
    4. '0' → logprob: -2.737374782562256
    5. '])' → logprob: -2.862374782562256
    6. '==' → logprob: -3.487374782562256
    7. ':' → logprob: -4.237374782562256
    8. ',i' → logprob: -5.237374782562256
    9. '-' → logprob: -5.362374782562256
    10. '!=' → logprob: -5.362374782562256

Token 507: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0399293527007103
    2. '1' → logprob: -3.2899293899536133
    3. 'i' → logprob: -6.914929389953613
    4. ' ' → logprob: -7.039929389953613
    5. ' i' → logprob: -11.539929389953613
    6. '(i' → logprob: -13.727429389953613
    7. '  ' → logprob: -13.914929389953613
    8. '   ' → logprob: -14.039929389953613
    9. 'p' → logprob: -14.352429389953613
    10. '2' → logprob: -14.477429389953613

Token 508: '])' (ID: 4636)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0834892988204956
    2. '0' → logprob: -1.2084892988204956
    3. 'i' → logprob: -2.458489418029785
    4. '])' → logprob: -2.458489418029785
    5. ',i' → logprob: -2.958489418029785
    6. ':i' → logprob: -3.083489418029785
    7. '*i' → logprob: -3.583489418029785
    8. ':=' → logprob: -4.208489418029785
    9. ':' → logprob: -4.333489418029785
    10. ',' → logprob: -4.458489418029785

Token 509: '==' (ID: 560)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39884138107299805
    2. 'for' → logprob: -1.898841381072998
    3. 'else' → logprob: -2.648841381072998
    4. ' else' → logprob: -3.148841381072998
    5. '*' → logprob: -4.148841381072998
    6. '*i' → logprob: -4.273841381072998
    7. '*(' → logprob: -4.398841381072998
    8. ',' → logprob: -4.898841381072998
    9. ':' → logprob: -5.523841381072998
    10. ' *' → logprob: -5.773841381072998

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11153227835893631
    2. '1' → logprob: -2.986532211303711
    3. 'None' → logprob: -3.736532211303711
    4. '-' → logprob: -4.486532211303711
    5. 'i' → logprob: -5.361532211303711
    6. 'p' → logprob: -5.611532211303711
    7. 'False' → logprob: -5.861532211303711
    8. '(' → logprob: -6.111532211303711
    9. '(i' → logprob: -6.111532211303711
    10. 'True' → logprob: -6.486532211303711

Token 511: ' else' (ID: 1203)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9071502089500427
    2. ' else' → logprob: -1.0321502685546875
    3. 'else' → logprob: -1.9071502685546875
    4. 'for' → logprob: -2.9071502685546875
    5. ',' → logprob: -4.2821502685546875
    6. ':' → logprob: -5.0321502685546875
    7. '   ' → logprob: -5.9071502685546875
    8. ' :' → logprob: -6.0321502685546875
    9. ':i' → logprob: -6.0321502685546875
    10. ')' → logprob: -6.5321502685546875

Token 512: ' (' (ID: 350)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.9545214772224426
    2. 'mod' → logprob: -1.0795214176177979
    3. ' mod' → logprob: -1.7045214176177979
    4. ' (' → logprob: -3.079521417617798
    5. '((' → logprob: -4.579521656036377
    6. '(p' → logprob: -4.579521656036377
    7. '(' → logprob: -5.079521656036377
    8. '0' → logprob: -5.204521656036377
    9. '[' → logprob: -5.704521656036377
    10. '   ' → logprob: -6.204521656036377

Token 513: 'l' (ID: 75)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2851869463920593
    2. '(mod' → logprob: -1.910187005996704
    3. ' mod' → logprob: -2.410187005996704
    4. ' (' → logprob: -5.785186767578125
    5. '((' → logprob: -6.660186767578125
    6. '(' → logprob: -6.785186767578125
    7. '0' → logprob: -7.160186767578125
    8. '(p' → logprob: -7.285186767578125
    9. 'p' → logprob: -7.410186767578125
    10. 'ans' → logprob: -8.160186767578125

Token 514: ':=' (ID: 33860)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.3382467031478882
    2. 'st' → logprob: -1.7132467031478882
    3. '[' → logprob: -1.8382467031478882
    4. 'cm' → logprob: -2.2132468223571777
    5. 'mod' → logprob: -3.2132468223571777
    6. 'ast' → logprob: -3.4632468223571777
    7. 'en' → logprob: -3.4632468223571777
    8. '[i' → logprob: -3.5882468223571777
    9. '[(' → logprob: -3.5882468223571777
    10. '[-' → logprob: -3.7132468223571777

Token 515: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6038293838500977
    2. '(mod' → logprob: -1.4788293838500977
    3. '(l' → logprob: -2.7288293838500977
    4. ' mod' → logprob: -3.2288293838500977
    5. '(p' → logprob: -3.7288293838500977
    6. 'l' → logprob: -3.8538293838500977
    7. 'p' → logprob: -3.8538293838500977
    8. ' (' → logprob: -4.228829383850098
    9. '((' → logprob: -5.103829383850098
    10. 'ans' → logprob: -5.853829383850098

Token 516: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -7.517272024415433e-05
    2. '   ' → logprob: -9.750075340270996
    3. 'pow' → logprob: -12.000075340270996
    4. ' inv' → logprob: -12.125075340270996
    5. 'a' → logprob: -13.750075340270996
    6. 'i' → logprob: -14.125075340270996
    7. '_inv' → logprob: -14.375075340270996
    8. '(inv' → logprob: -14.500075340270996
    9. 'inverse' → logprob: -14.625075340270996
    10. 'l' → logprob: -15.000075340270996

Token 517: '_list' (ID: 4162)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0840730220079422
    2. '(i' → logprob: -2.584073066711426
    3. 'a' → logprob: -5.334073066711426
    4. '(l' → logprob: -8.584073066711426
    5. ' a' → logprob: -10.584073066711426
    6. '(n' → logprob: -11.084073066711426
    7. '(p' → logprob: -11.209073066711426
    8. '(' → logprob: -11.334073066711426
    9. ')' → logprob: -11.584073066711426
    10. 'i' → logprob: -11.584073066711426

Token 518: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07940270751714706
    2. '(i' → logprob: -2.5794026851654053
    3. 'n' → logprob: -7.704402923583984
    4. 'i' → logprob: -10.329402923583984
    5. '(' → logprob: -10.579402923583984
    6. '   ' → logprob: -13.954402923583984
    7. ' n' → logprob: -14.454402923583984
    8. ' (' → logprob: -14.454402923583984
    9. '(
' → logprob: -14.954402923583984
    10. '```' → logprob: -15.329402923583984

Token 519: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06684435904026031
    2. '(i' → logprob: -2.8168444633483887
    3. ' i' → logprob: -5.816844463348389
    4. '   ' → logprob: -7.191844463348389
    5. 'n' → logprob: -7.941844463348389
    6. ' ' → logprob: -8.69184398651123
    7. '(n' → logprob: -8.94184398651123
    8. ',i' → logprob: -8.94184398651123
    9. ' (' → logprob: -9.06684398651123
    10. '  ' → logprob: -9.69184398651123

Token 520: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02799217589199543
    2. '1' → logprob: -3.7779922485351562
    3. 'n' → logprob: -5.652992248535156
    4. '(i' → logprob: -7.277992248535156
    5. '   ' → logprob: -8.402992248535156
    6. ' i' → logprob: -9.152992248535156
    7. '(' → logprob: -9.652992248535156
    8. '(n' → logprob: -10.277992248535156
    9. ')' → logprob: -11.027992248535156
    10. '[i' → logprob: -11.027992248535156

Token 521: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5926498174667358
    2. ',p' → logprob: -0.8426498174667358
    3. ',n' → logprob: -5.092649936676025
    4. '(p' → logprob: -5.342649936676025
    5. ')[' → logprob: -6.467649936676025
    6. '))' → logprob: -6.967649936676025
    7. ')' → logprob: -6.967649936676025
    8. '))[' → logprob: -7.217649936676025
    9. ' ,' → logprob: -7.717649936676025
    10. ',i' → logprob: -8.467649459838867

Token 522: '))' (ID: 915)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.48301053047180176
    2. ')' → logprob: -1.2330105304718018
    3. '))' → logprob: -2.6080105304718018
    4. '))[' → logprob: -5.108010292053223
    5. ',' → logprob: -5.983010292053223
    6. ')]' → logprob: -6.233010292053223
    7. ')][' → logprob: -6.233010292053223
    8. ')])' → logprob: -6.483010292053223
    9. ')+' → logprob: -7.233010292053223
    10. ',p' → logprob: -7.483010292053223

Token 523: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38677725195884705
    2. '+[' → logprob: -2.01177716255188
    3. '+' → logprob: -2.38677716255188
    4. ']' → logprob: -3.88677716255188
    5. ']+' → logprob: -3.88677716255188
    6. '[:-' → logprob: -4.261777400970459
    7. '[:]' → logprob: -5.386777400970459
    8. ')+' → logprob: -5.636777400970459
    9. '[' → logprob: -5.761777400970459
    10. '[::-' → logprob: -5.761777400970459

Token 524: ' l' (ID: 305)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9092627167701721
    2. '[l' → logprob: -1.2842626571655273
    3. '(l' → logprob: -1.6592626571655273
    4. 'l' → logprob: -2.4092626571655273
    5. ' (' → logprob: -4.659262657165527
    6. ' l' → logprob: -4.909262657165527
    7. ' [(' → logprob: -4.909262657165527
    8. '((' → logprob: -5.159262657165527
    9. ' [' → logprob: -5.284262657165527
    10. '[' → logprob: -6.534262657165527

Token 525: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03974514827132225
    2. '.__' → logprob: -4.039745330810547
    3. '+' → logprob: -4.914745330810547
    4. '[' → logprob: -5.414745330810547
    5. '[n' → logprob: -5.789745330810547
    6. '[i' → logprob: -5.914745330810547
    7. '[-' → logprob: -6.789745330810547
    8. '.extend' → logprob: -7.289745330810547
    9. '[:]' → logprob: -7.914745330810547
    10. '.pop' → logprob: -8.164745330810547

Token 526: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5479594469070435
    2. ' for' → logprob: -1.1729594469070435
    3. 'for' → logprob: -2.797959327697754
    4. ']+' → logprob: -4.922959327697754
    5. '[i' → logprob: -5.047959327697754
    6. ']*(' → logprob: -5.047959327697754
    7. 'i' → logprob: -5.422959327697754
    8. '(i' → logprob: -5.797959327697754
    9. '*i' → logprob: -5.797959327697754
    10. '+' → logprob: -5.922959327697754

Token 527: ' for' (ID: 395)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.038413699716329575
    2. '[' → logprob: -4.0384135246276855
    3. ']' → logprob: -5.1634135246276855
    4. '+' → logprob: -5.7884135246276855
    5. '<|end|>' → logprob: -6.4134135246276855
    6. '*' → logprob: -6.5384135246276855
    7. '=' → logprob: -6.6634135246276855
    8. '][' → logprob: -6.9134135246276855
    9. '(i' → logprob: -7.4134135246276855
    10. ' *' → logprob: -7.4134135246276855

Token 528: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0336565300822258
    2. ' i' → logprob: -3.408656597137451
    3. '   ' → logprob: -13.283656120300293
    4. ' ' → logprob: -13.408656120300293
    5. ' range' → logprob: -13.408656120300293
    6. 'range' → logprob: -13.533656120300293
    7. '	i' → logprob: -13.908656120300293
    8. ' in' → logprob: -13.908656120300293
    9. '```' → logprob: -14.658656120300293
    10. '0' → logprob: -14.908656120300293

Token 529: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14408840239048004
    2. ' in' → logprob: -2.0190885066986084
    3. 'range' → logprob: -6.769088268280029
    4. ' range' → logprob: -8.394088745117188
    5. '1' → logprob: -11.519088745117188
    6. '2' → logprob: -11.519088745117188
    7. ' ' → logprob: -12.019088745117188
    8. '	in' → logprob: -13.144088745117188
    9. 'import' → logprob: -13.394088745117188
    10. '(range' → logprob: -13.519088745117188

Token 530: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005539863486774266
    2. ' range' → logprob: -7.500554084777832
    3. '2' → logprob: -14.000554084777832
    4. '	range' → logprob: -17.000553131103516
    5. '
' → logprob: -17.625553131103516
    6. '(range' → logprob: -18.125553131103516
    7. '   ' → logprob: -18.750553131103516
    8. '```' → logprob: -20.375553131103516
    9. '[' → logprob: -20.625553131103516
    10. 'Range' → logprob: -20.875553131103516

Token 531: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006732068490236998
    2. ' ' → logprob: -5.006731986999512
    3. '(' → logprob: -11.756731986999512
    4. '   ' → logprob: -12.631731986999512
    5. '```' → logprob: -13.506731986999512
    6. '  ' → logprob: -13.631731986999512
    7. '    ' → logprob: -13.881731986999512
    8. '[' → logprob: -15.006731986999512
    9. '	' → logprob: -15.131731986999512
    10. '
' → logprob: -15.131731986999512

Token 532: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013294065138325095
    2. ' ' → logprob: -6.62632942199707
    3. '   ' → logprob: -13.50132942199707
    4. '1' → logprob: -14.12632942199707
    5. '```' → logprob: -14.87632942199707
    6. '
' → logprob: -15.25132942199707
    7. '  ' → logprob: -15.25132942199707
    8. '(' → logprob: -15.75132942199707
    9. '    ' → logprob: -15.87632942199707
    10. '3' → logprob: -16.25132942199707

Token 533: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06470077484846115
    2. ',n' → logprob: -3.0647008419036865
    3. ')]' → logprob: -4.689700603485107
    4. ' ,' → logprob: -5.314700603485107
    5. ' )' → logprob: -7.439700603485107
    6. ')' → logprob: -8.064701080322266
    7. ')])' → logprob: -8.439701080322266
    8. ',
' → logprob: -9.189701080322266
    9. '<|end|>' → logprob: -9.189701080322266
    10. ' ]' → logprob: -9.314701080322266

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021240918431431055
    2. ' +' → logprob: -6.627124309539795
    3. ')' → logprob: -8.002123832702637
    4. ')]' → logprob: -8.502123832702637
    5. '1' → logprob: -9.252123832702637
    6. ')])' → logprob: -9.377123832702637
    7. ')],' → logprob: -11.252123832702637
    8. '+)' → logprob: -11.627123832702637
    9. '```' → logprob: -12.002123832702637
    10. ')+' → logprob: -12.002123832702637

Token 535: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010107125155627728
    2. '1' → logprob: -4.885107040405273
    3. '+' → logprob: -6.010107040405273
    4. ' ' → logprob: -10.760107040405273
    5. '```' → logprob: -11.260107040405273
    6. ']+' → logprob: -13.635107040405273
    7. '{' → logprob: -14.010107040405273
    8. ')' → logprob: -14.010107040405273
    9. 'n' → logprob: -14.135107040405273
    10. ' +' → logprob: -14.135107040405273

Token 536: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04473746940493584
    2. ')]' → logprob: -3.1697375774383545
    3. ' ]' → logprob: -6.669737339019775
    4. '   ' → logprob: -8.169737815856934
    5. ')' → logprob: -9.919737815856934
    6. '])' → logprob: -10.044737815856934
    7. ',' → logprob: -10.169737815856934
    8. '()]' → logprob: -11.294737815856934
    9. '])]' → logprob: -11.794737815856934
    10. ']
' → logprob: -11.919737815856934

Token 537: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5961240530014038
    2. ' mod' → logprob: -0.9711240530014038
    3. 'main' → logprob: -3.3461241722106934
    4. ' main' → logprob: -3.7211241722106934
    5. 'comb' → logprob: -6.471124172210693
    6. 'pow' → logprob: -6.596124172210693
    7. 'factor' → logprob: -6.971124172210693
    8. 'bit' → logprob: -6.971124172210693
    9. ' factorial' → logprob: -7.096124172210693
    10. 'ext' → logprob: -7.846124172210693

Token 539: 'factor' (ID: 73174)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.002071990631520748
    2. '_pow' → logprob: -6.502071857452393
    3. 'exp' → logprob: -8.12707233428955
    4. 'inv' → logprob: -8.50207233428955
    5. 'mul' → logprob: -11.00207233428955
    6. 'factor' → logprob: -11.25207233428955
    7. '_factor' → logprob: -11.87707233428955
    8. '_exp' → logprob: -11.87707233428955
    9. 'ular' → logprob: -12.37707233428955
    10. '_mul' → logprob: -12.87707233428955

Token 540: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.04701760783791542
    2. 'ialize' → logprob: -3.1720175743103027
    3. 'def' → logprob: -6.172017574310303
    4. 'ize' → logprob: -6.422017574310303
    5. '```' → logprob: -8.297018051147461
    6. 'ials' → logprob: -11.172018051147461
    7. '``' → logprob: -11.422018051147461
    8. '(n' → logprob: -12.422018051147461
    9. 'int' → logprob: -12.797018051147461
    10. '
' → logprob: -12.797018051147461

Token 541: '_list' (ID: 4162)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00532720098271966
    2. '(' → logprob: -5.255327224731445
    3. ' (' → logprob: -9.755327224731445
    4. 'def' → logprob: -11.005327224731445
    5. '(_' → logprob: -12.505327224731445
    6. '_' → logprob: -12.755327224731445
    7. '(N' → logprob: -13.005327224731445
    8. 'n' → logprob: -13.130327224731445
    9. '(
' → logprob: -13.255327224731445
    10. '_(' → logprob: -13.755327224731445

Token 542: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -13.875003814697266
    4. '(
' → logprob: -15.625003814697266
    5. 'def' → logprob: -16.125003814697266
    6. 'n' → logprob: -16.750003814697266
    7. '(N' → logprob: -18.000003814697266
    8. '=' → logprob: -20.250003814697266
    9. ' =' → logprob: -20.250003814697266
    10. '
' → logprob: -20.500003814697266

Token 543: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2075960636138916
    2. ',' → logprob: -1.9575960636138916
    3. '):' → logprob: -3.9575960636138916
    4. '):
' → logprob: -4.3325958251953125
    5. ',n' → logprob: -4.3325958251953125
    6. 'n' → logprob: -7.3325958251953125
    7. 'def' → logprob: -9.332595825195312
    8. '   ' → logprob: -9.957595825195312
    9. '```' → logprob: -10.832595825195312
    10. ')' → logprob: -11.082595825195312

Token 544: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.698698704596609e-05
    2. ' p' → logprob: -10.000097274780273
    3. 'def' → logprob: -10.375097274780273
    4. 'mod' → logprob: -11.125097274780273
    5. ')' → logprob: -12.875097274780273
    6. 'MOD' → logprob: -13.000097274780273
    7. '):
' → logprob: -15.375097274780273
    8. '):' → logprob: -16.250097274780273
    9. '   ' → logprob: -16.375097274780273
    10. '[' → logprob: -16.375097274780273

Token 545: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3044772148132324
    2. '(n' → logprob: -2.0544772148132324
    3. '):
' → logprob: -2.1794772148132324
    4. '=' → logprob: -4.804477214813232
    5. ')' → logprob: -5.179477214813232
    6. ')=' → logprob: -5.679477214813232
    7. ')(' → logprob: -6.679477214813232
    8. ')(
' → logprob: -7.679477214813232
    9. '=(' → logprob: -7.804477214813232
    10. '):(' → logprob: -8.05447769165039

Token 546: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.684157026233152e-05
    2. '10' → logprob: -9.875077247619629
    3. ' MOD' → logprob: -11.250077247619629
    4. '100' → logprob: -11.375077247619629
    5. ' ' → logprob: -15.500077247619629
    6. '_MOD' → logprob: -15.625077247619629
    7. '[' → logprob: -16.125076293945312
    8. '```' → logprob: -16.250076293945312
    9. 'None' → logprob: -16.375076293945312
    10. '0' → logprob: -17.000076293945312

Token 547: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761507749557495
    2. '):
' → logprob: -0.8261507749557495
    3. '):
' → logprob: -8.951150894165039
    4. ')' → logprob: -9.451150894165039
    5. '):

' → logprob: -13.326150894165039
    6. ')=' → logprob: -14.951150894165039
    7. 'def' → logprob: -15.076150894165039
    8. ':' → logprob: -15.576150894165039
    9. ')：' → logprob: -15.701150894165039
    10. '   ' → logprob: -16.20115089416504

Token 548: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03143446892499924
    2. ' return' → logprob: -4.781434535980225
    3. ' res' → logprob: -4.906434535980225
    4. ' f' → logprob: -5.281434535980225
    5. ' l' → logprob: -5.531434535980225
    6. 'f' → logprob: -5.906434535980225
    7. 'res' → logprob: -6.781434535980225
    8. 'return' → logprob: -6.906434535980225
    9. ' lst' → logprob: -8.156434059143066
    10. 'ret' → logprob: -8.906434059143066

Token 549: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003500884398818016
    2. 'acc' → logprob: -6.128500938415527
    3. ' [' → logprob: -7.503500938415527
    4. 'deep' → logprob: -8.003500938415527
    5. 'list' → logprob: -8.253500938415527
    6. '[(' → logprob: -10.128500938415527
    7. 'red' → logprob: -10.253500938415527
    8. '([' → logprob: -10.753500938415527
    9. '[list' → logprob: -11.378500938415527
    10. ' ' → logprob: -11.628500938415527

Token 550: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. 'fact' → logprob: -10.875046730041504
    3. '(' → logprob: -11.375046730041504
    4. ' ' → logprob: -11.875046730041504
    5. 'factor' → logprob: -12.625046730041504
    6. '0' → logprob: -13.250046730041504
    7. 'i' → logprob: -13.500046730041504
    8. 'int' → logprob: -14.375046730041504
    9. 'deep' → logprob: -14.625046730041504
    10. '*' → logprob: -14.875046730041504

Token 551: ' and' (ID: 326)
  Prédit: ':='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':=' → logprob: -0.11323156952857971
    2. 'for' → logprob: -2.863231658935547
    3. ' for' → logprob: -3.363231658935547
    4. '*(' → logprob: -4.988231658935547
    5. 'if' → logprob: -5.863231658935547
    6. '*' → logprob: -5.988231658935547
    7. ' :=' → logprob: -6.738231658935547
    8. ' if' → logprob: -7.238231658935547
    9. '0' → logprob: -7.738231658935547
    10. ']*(' → logprob: -8.738231658935547

Token 552: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7786290645599365
    2. '(x' → logprob: -1.2786290645599365
    3. '1' → logprob: -1.4036290645599365
    4. '0' → logprob: -4.653629302978516
    5. '(' → logprob: -5.653629302978516
    6. '(i' → logprob: -6.778629302978516
    7. 'y' → logprob: -7.278629302978516
    8. '((' → logprob: -7.278629302978516
    9. 'i' → logprob: -7.903629302978516
    10. '(l' → logprob: -8.528629302978516

Token 553: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20821510255336761
    2. '(x' → logprob: -1.7082151174545288
    3. 'i' → logprob: -5.583215236663818
    4. '(i' → logprob: -6.458215236663818
    5. ' x' → logprob: -8.33321475982666
    6. '(' → logprob: -8.45821475982666
    7. ' (' → logprob: -8.58321475982666
    8. '1' → logprob: -9.45821475982666
    9. '_' → logprob: -9.70821475982666
    10. '((' → logprob: -9.83321475982666

Token 554: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.291984885931015
    2. '*x' → logprob: -1.5419849157333374
    3. '*(' → logprob: -4.166985034942627
    4. 'and' → logprob: -4.291985034942627
    5. ' *' → logprob: -5.541985034942627
    6. '*i' → logprob: -5.666985034942627
    7. '*f' → logprob: -7.541985034942627
    8. 'for' → logprob: -7.666985034942627
    9. ' and' → logprob: -7.791985034942627
    10. '-' → logprob: -8.166984558105469

Token 555: 'mod' (ID: 4847)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8672710061073303
    2. 'i' → logprob: -0.9922710061073303
    3. 'l' → logprob: -2.2422709465026855
    4. '_' → logprob: -3.6172709465026855
    5. 'y' → logprob: -4.1172709465026855
    6. 'ans' → logprob: -4.6172709465026855
    7. 'f' → logprob: -4.6172709465026855
    8. '(x' → logprob: -4.8672709465026855
    9. 'n' → logprob: -5.3672709465026855
    10. '(i' → logprob: -5.6172709465026855

Token 556: 'factor' (ID: 73174)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28142496943473816
    2. 'factor' → logprob: -1.6564249992370605
    3. '(x' → logprob: -3.1564249992370605
    4. 'f' → logprob: -6.0314249992370605
    5. '[x' → logprob: -6.0314249992370605
    6. 'inv' → logprob: -6.5314249992370605
    7. '(' → logprob: -7.0314249992370605
    8. 'prev' → logprob: -7.4064249992370605
    9. '  ' → logprob: -7.7814249992370605
    10. ' x' → logprob: -7.7814249992370605

Token 557: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.004123399965465069
    2. 'rial' → logprob: -6.004123210906982
    3. 'orial' → logprob: -6.879123210906982
    4. 'factor' → logprob: -8.62912368774414
    5. 'actor' → logprob: -9.00412368774414
    6. 'i' → logprob: -9.50412368774414
    7. '[' → logprob: -9.87912368774414
    8. ' factorial' → logprob: -10.50412368774414
    9. '```' → logprob: -11.00412368774414
    10. 'ac' → logprob: -11.12912368774414

Token 558: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00035691517405211926
    2. 'list' → logprob: -8.125356674194336
    3. 'List' → logprob: -10.375356674194336
    4. '[n' → logprob: -11.500356674194336
    5. '[i' → logprob: -12.000356674194336
    6. '(x' → logprob: -12.875356674194336
    7. '(n' → logprob: -13.125356674194336
    8. 's' → logprob: -13.875356674194336
    9. '_lists' → logprob: -13.875356674194336
    10. '```' → logprob: -13.875356674194336

Token 559: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00625238474458456
    2. '(x' → logprob: -5.131252288818359
    3. '(' → logprob: -8.88125228881836
    4. 'n' → logprob: -8.88125228881836
    5. '(i' → logprob: -10.88125228881836
    6. 'def' → logprob: -11.88125228881836
    7. ' (' → logprob: -12.13125228881836
    8. 'x' → logprob: -12.50625228881836
    9. '(
' → logprob: -13.00625228881836
    10. '[n' → logprob: -13.50625228881836

Token 560: '-' (ID: 12)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1621035486459732
    2. 'n' → logprob: -1.912103533744812
    3. '(x' → logprob: -6.787103652954102
    4. 'x' → logprob: -7.412103652954102
    5. '(' → logprob: -9.912103652954102
    6. '[n' → logprob: -11.037103652954102
    7. '
' → logprob: -11.162103652954102
    8. '```' → logprob: -11.787103652954102
    9. '   ' → logprob: -11.912103652954102
    10. 'def' → logprob: -11.912103652954102

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.633853652398102e-05
    2. '(n' → logprob: -11.000056266784668
    3. '(' → logprob: -11.250056266784668
    4. 'n' → logprob: -11.625056266784668
    5. '(x' → logprob: -12.125056266784668
    6. 'x' → logprob: -12.500056266784668
    7. ' ' → logprob: -12.625056266784668
    8. '```' → logprob: -13.375056266784668
    9. '   ' → logprob: -13.750056266784668
    10. 'def' → logprob: -14.625056266784668

Token 562: ',p' (ID: 14835)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004966750275343657
    2. '(' → logprob: -7.875496864318848
    3. '```' → logprob: -10.500496864318848
    4. '[n' → logprob: -10.625496864318848
    5. 'n' → logprob: -11.000496864318848
    6. ' (' → logprob: -11.250496864318848
    7. ')(' → logprob: -12.000496864318848
    8. '(x' → logprob: -12.125496864318848
    9. '1' → logprob: -12.250496864318848
    10. '
' → logprob: -12.625496864318848

Token 563: ')[' (ID: 13637)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5115340352058411
    2. '[-' → logprob: -1.7615339756011963
    3. ')[' → logprob: -1.8865339756011963
    4. '[x' → logprob: -3.0115339756011963
    5. '[n' → logprob: -4.011534214019775
    6. '[i' → logprob: -5.261534214019775
    7. ',p' → logprob: -6.386534214019775
    8. '][' → logprob: -6.761534214019775
    9. ')' → logprob: -7.761534214019775
    10. ',' → logprob: -8.136533737182617

Token 564: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10851576924324036
    2. 'x' → logprob: -2.358515739440918
    3. 'n' → logprob: -5.358515739440918
    4. ' -' → logprob: -6.483515739440918
    5. 'i' → logprob: -7.483515739440918
    6. '-x' → logprob: -7.858515739440918
    7. '(x' → logprob: -8.358515739440918
    8. '1' → logprob: -8.733515739440918
    9. '   ' → logprob: -8.983515739440918
    10. ']' → logprob: -9.608515739440918

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028946325182914734
    2. '-' → logprob: -5.877894401550293
    3. 'x' → logprob: -10.002894401550293
    4. 'i' → logprob: -11.377894401550293
    5. ' -' → logprob: -11.377894401550293
    6. '0' → logprob: -11.502894401550293
    7. '
' → logprob: -13.002894401550293
    8. ']' → logprob: -13.377894401550293
    9. ' ' → logprob: -13.877894401550293
    10. '(' → logprob: -13.877894401550293

Token 566: ']%' (ID: 158002)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.22699713706970215
    2. '%' → logprob: -2.226997137069702
    3. ')' → logprob: -2.601997137069702
    4. '%x' → logprob: -3.976997137069702
    5. '%i' → logprob: -7.101997375488281
    6. ' %' → logprob: -7.226997375488281
    7. 'for' → logprob: -8.351997375488281
    8. '%n' → logprob: -8.476997375488281
    9. ' for' → logprob: -9.351997375488281
    10. '%c' → logprob: -9.601997375488281

Token 567: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. ' ' → logprob: -17.1250057220459
    5. '
' → logprob: -18.5000057220459
    6. '  ' → logprob: -18.6250057220459
    7. '    ' → logprob: -19.3750057220459
    8. '	p' → logprob: -19.8750057220459
    9. '(p' → logprob: -20.0000057220459
    10. '```' → logprob: -20.3750057220459

Token 568: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868822753429413
    2. 'for' → logprob: -1.1368823051452637
    3. ' ' → logprob: -12.761881828308105
    4. '+' → logprob: -13.136881828308105
    5. ')' → logprob: -13.761881828308105
    6. '  ' → logprob: -13.886881828308105
    7. '   ' → logprob: -14.011881828308105
    8. '    ' → logprob: -14.386881828308105
    9. 'if' → logprob: -14.511881828308105
    10. ' if' → logprob: -14.761881828308105

Token 569: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2526475191116333
    2. ' for' → logprob: -1.5026475191116333
    3. 'or' → logprob: -7.627647399902344
    4. ' or' → logprob: -8.502647399902344
    5. 'if' → logprob: -10.877647399902344
    6. ' ' → logprob: -12.127647399902344
    7. ' if' → logprob: -13.002647399902344
    8. '+' → logprob: -13.877647399902344
    9. '   ' → logprob: -15.252647399902344
    10. '
' → logprob: -15.627647399902344

Token 570: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057027884759008884
    2. '[' → logprob: -5.380702972412109
    3. ' ' → logprob: -6.880702972412109
    4. '0' → logprob: -10.50570297241211
    5. ' [' → logprob: -11.00570297241211
    6. '[x' → logprob: -12.13070297241211
    7. '(' → logprob: -13.00570297241211
    8. 'x' → logprob: -14.38070297241211
    9. '[]' → logprob: -15.00570297241211
    10. '[i' → logprob: -15.00570297241211

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007617156486958265
    2. '[' → logprob: -4.882616996765137
    3. ' ' → logprob: -12.382616996765137
    4. ' [' → logprob: -12.632616996765137
    5. '[x' → logprob: -13.132616996765137
    6. '[
' → logprob: -14.382616996765137
    7. 'x' → logprob: -15.382616996765137
    8. '0' → logprob: -15.632616996765137
    9. '[n' → logprob: -15.632616996765137
    10. '[p' → logprob: -16.382617950439453

Token 572: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1602855622768402
    2. 'for' → logprob: -1.9102855920791626
    3. '   ' → logprob: -10.285285949707031
    4. ' ' → logprob: -11.285285949707031
    5. '  ' → logprob: -11.910285949707031
    6. '    ' → logprob: -12.660285949707031
    7. '	for' → logprob: -12.660285949707031
    8. '          ' → logprob: -15.410285949707031
    9. '0' → logprob: -15.535285949707031
    10. '      ' → logprob: -15.910285949707031

Token 573: ' x' (ID: 1215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030790939927101135
    2. 'x' → logprob: -3.5307910442352295
    3. ' range' → logprob: -7.03079080581665
    4. 'i' → logprob: -8.780791282653809
    5. ' x' → logprob: -13.155791282653809
    6. '_' → logprob: -16.530790328979492
    7. ' i' → logprob: -17.280790328979492
    8. '(range' → logprob: -17.780790328979492
    9. 'in' → logprob: -17.780790328979492
    10. '`' → logprob: -18.280790328979492

Token 574: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06197025999426842
    2. ' in' → logprob: -2.8119702339172363
    3. 'range' → logprob: -13.561970710754395
    4. ' ' → logprob: -14.811970710754395
    5. 'import' → logprob: -15.061970710754395
    6. '  ' → logprob: -15.811970710754395
    7. '	in' → logprob: -15.811970710754395
    8. '
' → logprob: -16.436969757080078
    9. 'n' → logprob: -16.936969757080078
    10. 'In' → logprob: -17.061969757080078

Token 575: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '(range' → logprob: -19.50000762939453
    4. '	range' → logprob: -21.75000762939453
    5. 'Range' → logprob: -23.87500762939453
    6. '   ' → logprob: -24.50000762939453
    7. '
' → logprob: -24.62500762939453
    8. 'list' → logprob: -25.00000762939453
    9. 'map' → logprob: -25.37500762939453
    10. '.range' → logprob: -26.12500762939453

Token 576: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10976877063512802
    2. 'n' → logprob: -2.359768867492676
    3. '(' → logprob: -5.234768867492676
    4. '1' → logprob: -5.484768867492676
    5. '0' → logprob: -10.234768867492676
    6. '2' → logprob: -13.609768867492676
    7. ' n' → logprob: -14.109768867492676
    8. '```' → logprob: -14.609768867492676
    9. '	n' → logprob: -15.109768867492676
    10. '_n' → logprob: -15.859768867492676

Token 577: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00199251645244658
    2. '(n' → logprob: -6.376992702484131
    3. '(' → logprob: -8.626992225646973
    4. ' +' → logprob: -10.001992225646973
    5. '1' → logprob: -10.626992225646973
    6. '+n' → logprob: -11.001992225646973
    7. 'n' → logprob: -11.126992225646973
    8. ')]' → logprob: -12.501992225646973
    9. ')' → logprob: -13.251992225646973
    10. '(+' → logprob: -14.126992225646973

Token 578: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15618222951889038
    2. '1' → logprob: -2.031182289123535
    3. 'n' → logprob: -4.406182289123535
    4. '2' → logprob: -6.781182289123535
    5. '(n' → logprob: -10.281182289123535
    6. ' +' → logprob: -10.781182289123535
    7. '+n' → logprob: -12.031182289123535
    8. ' n' → logprob: -12.406182289123535
    9. '```' → logprob: -12.781182289123535
    10. '0' → logprob: -13.031182289123535

Token 579: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.029764965176582336
    2. ']' → logprob: -3.5297648906707764
    3. ' ]' → logprob: -12.904765129089355
    4. '()]' → logprob: -12.904765129089355
    5. '}]' → logprob: -13.154765129089355
    6. ')]
' → logprob: -13.404765129089355
    7. '])]' → logprob: -13.779765129089355
    8. ']
' → logprob: -13.904765129089355
    9. ')],' → logprob: -14.279765129089355
    10. ')' → logprob: -14.279765129089355

Token 580: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06251027435064316
    2. ' mod' → logprob: -2.8125102519989014
    3. 'comb' → logprob: -8.56251049041748
    4. 'mods' → logprob: -8.93751049041748
    5. '_mod' → logprob: -10.31251049041748
    6. 'main' → logprob: -10.56251049041748
    7. ' mods' → logprob: -10.56251049041748
    8. ' modular' → logprob: -10.68751049041748
    9. 'factor' → logprob: -11.18751049041748
    10. 'n' → logprob: -11.81251049041748

Token 582: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0058546047657728195
    2. 'inv' → logprob: -5.755854606628418
    3. '_comb' → logprob: -6.505854606628418
    4. 'combine' → logprob: -7.630854606628418
    5. 'factor' → logprob: -8.255854606628418
    6. 'bin' → logprob: -8.755854606628418
    7. 'com' → logprob: -8.880854606628418
    8. 'inverse' → logprob: -9.380854606628418
    9. 'choose' → logprob: -10.880854606628418
    10. 'fact' → logprob: -11.005854606628418

Token 583: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009957832284271717
    2. 'ination' → logprob: -4.759957790374756
    3. '_count' → logprob: -7.009957790374756
    4. '(' → logprob: -9.134958267211914
    5. 'def' → logprob: -9.134958267211914
    6. 'n' → logprob: -9.384958267211914
    7. '(x' → logprob: -10.134958267211914
    8. '(count' → logprob: -10.884958267211914
    9. '```' → logprob: -11.509958267211914
    10. 'int' → logprob: -11.634958267211914

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016876185312867165
    2. ',n' → logprob: -4.141876220703125
    3. '(n' → logprob: -8.266876220703125
    4. ',k' → logprob: -8.391876220703125
    5. ',r' → logprob: -8.766876220703125
    6. ' ,' → logprob: -8.891876220703125
    7. 'n' → logprob: -10.391876220703125
    8. ',p' → logprob: -11.516876220703125
    9. ',a' → logprob: -12.141876220703125
    10. ',int' → logprob: -12.766876220703125

Token 585: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08007317036390305
    2. 'k' → logprob: -2.580073118209839
    3. ' r' → logprob: -6.830073356628418
    4. ' k' → logprob: -9.455073356628418
    5. 'n' → logprob: -10.705073356628418
    6. 'def' → logprob: -14.580073356628418
    7. '```' → logprob: -15.205073356628418
    8. '   ' → logprob: -15.580073356628418
    9. ' n' → logprob: -16.4550724029541
    10. 'a' → logprob: -16.5800724029541

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0550878681242466
    2. '(n' → logprob: -3.3050878047943115
    3. ',n' → logprob: -4.180088043212891
    4. '):' → logprob: -6.680088043212891
    5. ' ,' → logprob: -9.05508804321289
    6. '   ' → logprob: -9.18008804321289
    7. 'n' → logprob: -9.93008804321289
    8. 'def' → logprob: -10.68008804321289
    9. '```' → logprob: -11.05508804321289
    10. '):
' → logprob: -11.68008804321289

Token 587: ' fac' (ID: 3513)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00045593673712573946
    2. ' p' → logprob: -7.750455856323242
    3. 'mod' → logprob: -11.000455856323242
    4. 'MOD' → logprob: -11.750455856323242
    5. 'r' → logprob: -15.000455856323242
    6. 'm' → logprob: -16.000455856323242
    7. ' MOD' → logprob: -16.000455856323242
    8. '   ' → logprob: -16.375455856323242
    9. ' ' → logprob: -17.125455856323242
    10. ' mod' → logprob: -19.250455856323242

Token 588: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005799028091132641
    2. 's' → logprob: -5.755798816680908
    3. '_list' → logprob: -6.380798816680908
    4. 'list' → logprob: -7.505798816680908
    5. '):' → logprob: -8.630799293518066
    6. '_,' → logprob: -9.880799293518066
    7. ' ,' → logprob: -10.755799293518066
    8. 'List' → logprob: -11.130799293518066
    9. 'ac' → logprob: -11.380799293518066
    10. '):
' → logprob: -11.755799293518066

Token 589: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0075875758193433285
    2. '):' → logprob: -5.257587432861328
    3. ',n' → logprob: -7.007587432861328
    4. ' ,' → logprob: -7.757587432861328
    5. '=None' → logprob: -7.882587432861328
    6. ',f' → logprob: -8.882587432861328
    7. '=[],' → logprob: -9.507587432861328
    8. 'def' → logprob: -10.132587432861328
    9. ',l' → logprob: -10.132587432861328
    10. ',p' → logprob: -10.132587432861328

Token 590: ' [],' (ID: 22188)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0029149537440389395
    2. ' None' → logprob: -5.877914905548096
    3. 'lambda' → logprob: -10.377915382385254
    4. '=None' → logprob: -10.877915382385254
    5. '[]' → logprob: -10.877915382385254
    6. '[],' → logprob: -11.002915382385254
    7. '[' → logprob: -11.377915382385254
    8. 'mod' → logprob: -13.002915382385254
    9. '(None' → logprob: -13.002915382385254
    10. '   ' → logprob: -13.252915382385254

Token 591: ' p' (ID: 275)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.25285518169403076
    2. 'fac' → logprob: -1.5028551816940308
    3. 'fact' → logprob: -8.00285530090332
    4. ' inv' → logprob: -8.12785530090332
    5. 'mod' → logprob: -9.12785530090332
    6. 'ifact' → logprob: -10.00285530090332
    7. ' fac' → logprob: -10.00285530090332
    8. 'inf' → logprob: -10.12785530090332
    9. 'rev' → logprob: -11.12785530090332
    10. '   ' → logprob: -11.37785530090332

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.27099974633893e-05
    2. ' =' → logprob: -12.250012397766113
    3. '):' → logprob: -12.500012397766113
    4. 'MOD' → logprob: -13.125012397766113
    5. '=None' → logprob: -13.750012397766113
    6. '   ' → logprob: -14.750012397766113
    7. 'p' → logprob: -15.000012397766113
    8. ')' → logprob: -15.625012397766113
    9. '):
' → logprob: -16.00001335144043
    10. ',' → logprob: -16.50001335144043

Token 593: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5451681974809617e-05
    2. '10' → logprob: -11.250015258789062
    3. ' MOD' → logprob: -13.000015258789062
    4. 'None' → logprob: -16.375015258789062
    5. 'mod' → logprob: -18.875015258789062
    6. '0' → logprob: -19.125015258789062
    7. 'MO' → logprob: -19.125015258789062
    8. ' ' → logprob: -19.250015258789062
    9. '   ' → logprob: -19.250015258789062
    10. '_MOD' → logprob: -19.500015258789062

Token 594: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008729210123419762
    2. '):
' → logprob: -4.758728981018066
    3. ')' → logprob: -9.758728981018066
    4. '):
' → logprob: -10.258728981018066
    5. ' ):' → logprob: -11.133728981018066
    6. '   ' → logprob: -12.258728981018066
    7. ',' → logprob: -13.883728981018066
    8. '):

' → logprob: -14.258728981018066
    9. '=None' → logprob: -15.008728981018066
    10. ':' → logprob: -16.008729934692383

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35364192724227905
    2. ':' → logprob: -1.2286419868469238
    3. ':return' → logprob: -5.603641986846924
    4. '):' → logprob: -7.603641986846924
    5. ' if' → logprob: -7.978641986846924
    6. ' return' → logprob: -8.228641510009766
    7. ':
' → logprob: -9.103641510009766
    8. ',' → logprob: -9.478641510009766
    9. '```' → logprob: -10.353641510009766
    10. 'if' → logprob: -10.478641510009766

Token 596: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5782825350761414
    2. 'return' → logprob: -1.0782825946807861
    3. 'fac' → logprob: -2.578282594680786
    4. '   ' → logprob: -3.828282594680786
    5. ' return' → logprob: -7.578282356262207
    6. ' if' → logprob: -7.578282356262207
    7. 'fact' → logprob: -9.078282356262207
    8. 'f' → logprob: -10.328282356262207
    9. ' fac' → logprob: -10.703282356262207
    10. 'def' → logprob: -10.828282356262207

Token 597: ' math' (ID: 13324)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0021301566157490015
    2. 'math' → logprob: -6.252130031585693
    3. 'fun' → logprob: -8.752130508422852
    4. 'sys' → logprob: -10.752130508422852
    5. ' operator' → logprob: -11.752130508422852
    6. '_operator' → logprob: -11.877130508422852
    7. 'heap' → logprob: -12.502130508422852
    8. '__' → logprob: -14.127130508422852
    9. 'copy' → logprob: -14.377130508422852
    10. 'it' → logprob: -15.002130508422852

Token 598: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10025055706501007
    2. ' import' → logprob: -2.350250482559204
    3. '	import' → logprob: -11.100250244140625
    4. 'def' → logprob: -11.475250244140625
    5. '```' → logprob: -11.850250244140625
    6. '   ' → logprob: -12.725250244140625
    7. ' ' → logprob: -12.975250244140625
    8. '_import' → logprob: -13.725250244140625
    9. '#import' → logprob: -13.725250244140625
    10. 'factor' → logprob: -14.100250244140625

Token 599: ' factorial' (ID: 111204)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.3677264451980591
    2. 'prod' → logprob: -1.242726445198059
    3. 'factor' → logprob: -4.8677263259887695
    4. 'g' → logprob: -5.2427263259887695
    5. 'is' → logprob: -5.8677263259887695
    6. 'ceil' → logprob: -6.7427263259887695
    7. 'inf' → logprob: -6.9927263259887695
    8. ' comb' → logprob: -7.9927263259887695
    9. 'perm' → logprob: -8.49272632598877
    10. 'pow' → logprob: -8.74272632598877

Token 600: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7403894662857056
    2. 'def' → logprob: -1.1153894662857056
    3. ' as' → logprob: -2.240389347076416
    4. 'as' → logprob: -3.365389347076416
    5. '<|end|>' → logprob: -3.490389347076416
    6. '
' → logprob: -4.740389347076416
    7. 'factor' → logprob: -5.240389347076416
    8. '  
' → logprob: -6.490389347076416
    9. 'return' → logprob: -6.740389347076416
    10. ' 
' → logprob: -6.990389347076416

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06856447458267212
    2. ' if' → logprob: -3.0685644149780273
    3. 'def' → logprob: -4.193564414978027
    4. 'if' → logprob: -6.318564414978027
    5. ' def' → logprob: -6.818564414978027
    6. ':' → logprob: -6.818564414978027
    7. ',' → logprob: -9.068564414978027
    8. ')' → logprob: -9.193564414978027
    9. '):
' → logprob: -9.318564414978027
    10. '):' → logprob: -9.318564414978027

Token 602: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5700927972793579
    2. '   ' → logprob: -1.070092797279358
    3. ' if' → logprob: -2.4450926780700684
    4. 'return' → logprob: -5.445092678070068
    5. ' return' → logprob: -7.695092678070068
    6. 'fac' → logprob: -10.570093154907227
    7. 'def' → logprob: -11.070093154907227
    8. '```' → logprob: -12.570093154907227
    9. 'n' → logprob: -12.820093154907227
    10. '	if' → logprob: -13.570093154907227

Token 603: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0014140465063974261
    2. 'fac' → logprob: -7.376413822174072
    3. 'n' → logprob: -7.501413822174072
    4. ' k' → logprob: -8.75141429901123
    5. 'not' → logprob: -9.75141429901123
    6. '   ' → logprob: -11.75141429901123
    7. '0' → logprob: -13.00141429901123
    8. '(k' → logprob: -13.50141429901123
    9. ' not' → logprob: -13.62641429901123
    10. 'False' → logprob: -13.75141429901123

Token 604: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.037098053842782974
    2. ' <' → logprob: -3.9120981693267822
    3. '<n' → logprob: -4.287097930908203
    4. '==' → logprob: -6.037097930908203
    5. ' ==' → logprob: -9.662097930908203
    6. '<len' → logprob: -10.037097930908203
    7. '<p' → logprob: -10.162097930908203
    8. '<m' → logprob: -10.662097930908203
    9. '<int' → logprob: -10.787097930908203
    10. '>=' → logprob: -11.162097930908203

Token 605: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0097618717700243
    2. '0' → logprob: -4.634761810302734
    3. ' k' → logprob: -13.009761810302734
    4. '=' → logprob: -13.134761810302734
    5. '2' → logprob: -14.384761810302734
    6. '=k' → logprob: -15.009761810302734
    7. '1' → logprob: -15.259761810302734
    8. ' ' → logprob: -15.634761810302734
    9. '100' → logprob: -15.884761810302734
    10. '   ' → logprob: -16.009761810302734

Token 606: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03449208661913872
    2. 'or' → logprob: -3.409492015838623
    3. ':' → logprob: -8.034492492675781
    4. '   ' → logprob: -8.159492492675781
    5. ':return' → logprob: -8.784492492675781
    6. '	or' → logprob: -10.284492492675781
    7. ':
' → logprob: -11.409492492675781
    8. '<|end|>' → logprob: -11.659492492675781
    9. '       ' → logprob: -12.159492492675781
    10. ' ' → logprob: -12.534492492675781

Token 607: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006576312007382512
    2. ' k' → logprob: -7.375657558441162
    3. '(k' → logprob: -11.12565803527832
    4. 'not' → logprob: -11.62565803527832
    5. ' not' → logprob: -13.12565803527832
    6. '   ' → logprob: -13.25065803527832
    7. ' (' → logprob: -13.62565803527832
    8. 'n' → logprob: -13.75065803527832
    9. '  ' → logprob: -14.50065803527832
    10. 'or' → logprob: -15.62565803527832

Token 608: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02667052671313286
    2. '>' → logprob: -4.151670455932617
    3. ' <' → logprob: -5.026670455932617
    4. '<|end|>' → logprob: -6.276670455932617
    5. ' >' → logprob: -6.901670455932617
    6. ' or' → logprob: -7.901670455932617
    7. ' ' → logprob: -8.776670455932617
    8. '0' → logprob: -9.026670455932617
    9. '<|end|>' → logprob: -9.401670455932617
    10. '==' → logprob: -9.651670455932617

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0484450437361374e-05
    2. 'k' → logprob: -10.500040054321289
    3. ' ' → logprob: -11.375040054321289
    4. 'or' → logprob: -15.000040054321289
    5. '1' → logprob: -15.500040054321289
    6. 'n' → logprob: -15.625040054321289
    7. '```' → logprob: -15.750040054321289
    8. '2' → logprob: -16.00004005432129
    9. ' or' → logprob: -16.37504005432129
    10. ' k' → logprob: -16.62504005432129

Token 610: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005312854424118996
    2. 'or' → logprob: -5.255312919616699
    3. '   ' → logprob: -10.3803129196167
    4. ':return' → logprob: -10.7553129196167
    5. '	or' → logprob: -10.8803129196167
    6. ':' → logprob: -12.7553129196167
    7. '<|end|>' → logprob: -13.3803129196167
    8. ' ' → logprob: -14.5053129196167
    9. '  ' → logprob: -14.6303129196167
    10. '<|end|>' → logprob: -14.8803129196167

Token 611: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.347765181795694e-05
    2. 'n' → logprob: -10.000053405761719
    3. ' k' → logprob: -11.875053405761719
    4. '   ' → logprob: -14.250053405761719
    5. '```' → logprob: -15.375053405761719
    6. 'not' → logprob: -17.00005340576172
    7. '(k' → logprob: -17.00005340576172
    8. '	k' → logprob: -17.25005340576172
    9. '(n' → logprob: -17.50005340576172
    10. '{k' → logprob: -17.50005340576172

Token 612: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.000788663572166115
    2. '<n' → logprob: -7.375788688659668
    3. ' <' → logprob: -9.875788688659668
    4. 'k' → logprob: -10.250788688659668
    5. '+' → logprob: -11.250788688659668
    6. '<len' → logprob: -11.250788688659668
    7. '+k' → logprob: -12.000788688659668
    8. '<t' → logprob: -12.375788688659668
    9. '<p' → logprob: -12.500788688659668
    10. '<K' → logprob: -12.625788688659668

Token 613: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.2961512513575144e-05
    2. '0' → logprob: -11.000022888183594
    3. ' k' → logprob: -12.000022888183594
    4. ' ' → logprob: -17.250022888183594
    5. '	k' → logprob: -18.250022888183594
    6. '(k' → logprob: -18.750022888183594
    7. '1' → logprob: -18.750022888183594
    8. '-k' → logprob: -19.000022888183594
    9. '<' → logprob: -19.125022888183594
    10. '=k' → logprob: -19.250022888183594

Token 614: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06698428839445114
    2. ':return' → logprob: -3.066984176635742
    3. ':
' → logprob: -4.691984176635742
    4. ' or' → logprob: -5.066984176635742
    5. '   ' → logprob: -5.941984176635742
    6. ' :' → logprob: -9.941984176635742
    7. '):' → logprob: -10.316984176635742
    8. '       ' → logprob: -11.566984176635742
    9. ' return' → logprob: -11.566984176635742
    10. 'return' → logprob: -11.816984176635742

Token 615: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039888348430395126
    2. '   ' → logprob: -3.289888381958008
    3. 'return' → logprob: -6.414888381958008
    4. ' return' → logprob: -8.539888381958008
    5. '0' → logprob: -11.539888381958008
    6. '	return' → logprob: -13.289888381958008
    7. ':return' → logprob: -14.914888381958008
    8. '{return' → logprob: -15.414888381958008
    9. ' ' → logprob: -15.914888381958008
    10. '	' → logprob: -16.164888381958008

Token 616: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'None' → logprob: -17.75000762939453
    4. '   ' → logprob: -19.37500762939453
    5. '
' → logprob: -19.62500762939453
    6. ' ' → logprob: -20.12500762939453
    7. '```' → logprob: -20.12500762939453
    8. '  ' → logprob: -20.37500762939453
    9. '۰' → logprob: -20.87500762939453
    10. '０' → logprob: -21.12500762939453

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.250003814697266
    4. 'None' → logprob: -19.875003814697266
    5. '```' → logprob: -20.000003814697266
    6. '00' → logprob: -20.250003814697266
    7. '000' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.500003814697266
    9. '۰' → logprob: -20.500003814697266
    10. '
' → logprob: -20.750003814697266

Token 618: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030851366464048624
    2. '
' → logprob: -5.878085136413574
    3. 'def' → logprob: -8.628085136413574
    4. 'return' → logprob: -10.628085136413574
    5. ' return' → logprob: -10.878085136413574
    6. '    
' → logprob: -11.503085136413574
    7. '```' → logprob: -11.503085136413574
    8. 'n' → logprob: -12.128085136413574
    9. 'import' → logprob: -12.253085136413574
    10. 'if' → logprob: -12.628085136413574

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.452426608419046e-05
    2. 'if' → logprob: -10.87503433227539
    3. ' if' → logprob: -11.50003433227539
    4. 'def' → logprob: -13.12503433227539
    5. '
' → logprob: -14.12503433227539
    6. '```' → logprob: -14.25003433227539
    7. 'return' → logprob: -14.50003433227539
    8. '    
' → logprob: -14.75003433227539
    9. 'n' → logprob: -14.87503433227539
    10. '   ' → logprob: -15.37503433227539

Token 620: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02004484459757805
    2. ' if' → logprob: -4.270044803619385
    3. 'if' (adapté à ' if') → logprob: -5.145044803619385
    4. 'fac' → logprob: -11.270045280456543
    5. 'def' → logprob: -11.395045280456543
    6. ' return' → logprob: -12.395045280456543
    7. 'return' → logprob: -12.895045280456543
    8. 'n' → logprob: -13.270045280456543
    9. ' fac' → logprob: -13.770045280456543
    10. '```' → logprob: -13.770045280456543

Token 621: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.011708548292517662
    2. ' not' → logprob: -4.511708736419678
    3. 'fac' → logprob: -7.511708736419678
    4. 'len' → logprob: -10.01170825958252
    5. 'k' → logprob: -10.38670825958252
    6. 'n' → logprob: -10.38670825958252
    7. '(not' → logprob: -12.63670825958252
    8. '	not' → logprob: -13.38670825958252
    9. '   ' → logprob: -13.63670825958252
    10. ' fac' → logprob: -14.88670825958252

Token 622: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5228380560874939
    2. '==' → logprob: -1.0228381156921387
    3. '>=' → logprob: -3.8978381156921387
    4. '<len' → logprob: -4.022838115692139
    5. '<n' → logprob: -5.147838115692139
    6. '<=' → logprob: -6.022838115692139
    7. ' ==' → logprob: -7.897838115692139
    8. '>' → logprob: -8.39783763885498
    9. ' <' → logprob: -8.52283763885498
    10. 'k' → logprob: -10.02283763885498

Token 623: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0021860685665160418
    2. '0' → logprob: -6.127186298370361
    3. ' k' → logprob: -14.252185821533203
    4. ' ' → logprob: -16.752185821533203
    5. '   ' → logprob: -17.002185821533203
    6. '```' → logprob: -17.002185821533203
    7. '{k' → logprob: -17.127185821533203
    8. '1' → logprob: -17.127185821533203
    9. '	k' → logprob: -17.252185821533203
    10. '100' → logprob: -17.377185821533203

Token 624: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.162347212433815
    2. ' and' → logprob: -1.9123471975326538
    3. ' or' → logprob: -6.787347316741943
    4. ':' → logprob: -7.412347316741943
    5. '   ' → logprob: -8.537346839904785
    6. 'or' → logprob: -9.162346839904785
    7. ':return' → logprob: -9.537346839904785
    8. ':
' → logprob: -12.037346839904785
    9. '==' → logprob: -12.412346839904785
    10. ' ' → logprob: -12.787346839904785

Token 625: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00018661346985027194
    2. ' k' → logprob: -8.750186920166016
    3. 'n' → logprob: -10.625186920166016
    4. '   ' → logprob: -13.250186920166016
    5. '0' → logprob: -14.125186920166016
    6. 'not' → logprob: -14.875186920166016
    7. ' ' → logprob: -15.625186920166016
    8. '  ' → logprob: -15.625186920166016
    9. ' n' → logprob: -16.250186920166016
    10. '```' → logprob: -16.375186920166016

Token 626: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006422729231417179
    2. ' ==' → logprob: -5.131422519683838
    3. '0' → logprob: -7.756422519683838
    4. ' ' → logprob: -10.881422996520996
    5. '<|end|>' → logprob: -11.131422996520996
    6. '=' → logprob: -11.256422996520996
    7. ')==' → logprob: -12.631422996520996
    8. '<|end|>' → logprob: -12.881422996520996
    9. '<=' → logprob: -13.006422996520996
    10. ' in' → logprob: -13.381422996520996

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014919086243025959
    2. 'k' → logprob: -9.00014877319336
    3. ' ' → logprob: -10.62514877319336
    4. ' k' → logprob: -14.87514877319336
    5. '   ' → logprob: -15.00014877319336
    6. 'n' → logprob: -15.62514877319336
    7. '```' → logprob: -16.37514877319336
    8. '1' → logprob: -16.43764877319336
    9. '<|end|>' → logprob: -16.75014877319336
    10. ')' → logprob: -16.75014877319336

Token 628: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.485664963722229
    2. ' or' → logprob: -0.985664963722229
    3. '   ' → logprob: -5.3606648445129395
    4. ':return' → logprob: -5.3606648445129395
    5. 'or' → logprob: -6.2356648445129395
    6. ':
' → logprob: -8.860665321350098
    7. ')' → logprob: -12.360665321350098
    8. ' :' → logprob: -12.485665321350098
    9. ' and' → logprob: -12.610665321350098
    10. '  ' → logprob: -12.735665321350098

Token 629: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2224491387605667
    2. ' return' → logprob: -1.7224491834640503
    3. 'return' → logprob: -4.22244930267334
    4. '1' → logprob: -5.59744930267334
    5. '       ' → logprob: -6.09744930267334
    6. ' ' → logprob: -8.72244930267334
    7. '	return' → logprob: -11.34744930267334
    8. '  ' → logprob: -11.72244930267334
    9. '0' → logprob: -12.59744930267334
    10. ':return' → logprob: -12.59744930267334

Token 630: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.125109672546387
    4. 'int' → logprob: -16.62510871887207
    5. '  ' → logprob: -17.37510871887207
    6. '(' → logprob: -18.93760871887207
    7. '۱' → logprob: -19.25010871887207
    8. '0' → logprob: -19.68760871887207
    9. 'return' → logprob: -19.75010871887207
    10. ' (' → logprob: -19.81260871887207

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.500005722045898
    3. 'int' → logprob: -13.500005722045898
    4. '(' → logprob: -16.0000057220459
    5. '0' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.7500057220459
    7. 'mod' → logprob: -17.5000057220459
    8. 'fac' → logprob: -17.7500057220459
    9. '(int' → logprob: -18.0625057220459
    10. 'pow' → logprob: -18.1250057220459

Token 632: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016893428983166814
    2. '
' → logprob: -6.876689434051514
    3. 'if' → logprob: -8.126688957214355
    4. ' if' → logprob: -8.501688957214355
    5. 'def' → logprob: -9.126688957214355
    6. '    
' → logprob: -11.001688957214355
    7. '
' → logprob: -12.251688957214355
    8. ',' → logprob: -12.376688957214355
    9. 'return' → logprob: -12.376688957214355
    10. 'elif' → logprob: -12.501688957214355

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007756813429296017
    2. '
' → logprob: -8.250775337219238
    3. 'if' → logprob: -8.250775337219238
    4. ' if' → logprob: -9.125775337219238
    5. 'def' → logprob: -9.375775337219238
    6. 'return' → logprob: -10.875775337219238
    7. '    
' → logprob: -11.500775337219238
    8. 'fac' → logprob: -11.875775337219238
    9. 'n' → logprob: -12.000775337219238
    10. '```' → logprob: -12.625775337219238

Token 634: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03571269288659096
    2. 'if' → logprob: -3.910712718963623
    3. ' if' → logprob: -4.285712718963623
    4. 'fac' → logprob: -6.910712718963623
    5. 'return' → logprob: -8.785712242126465
    6. ' return' → logprob: -9.535712242126465
    7. ' fac' → logprob: -10.535712242126465
    8. 'def' → logprob: -10.535712242126465
    9. 'f' → logprob: -12.535712242126465
    10. 'n' → logprob: -12.660712242126465

Token 635: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11230781674385071
    2. ' =' → logprob: -2.6123077869415283
    3. ',' → logprob: -3.6123077869415283
    4. '=f' → logprob: -5.487308025360107
    5. '=n' → logprob: -7.862308025360107
    6. '=(' → logprob: -7.862308025360107
    7. 'n' → logprob: -8.73730754852295
    8. '_fac' → logprob: -8.98730754852295
    9. ',f' → logprob: -9.23730754852295
    10. 'fac' → logprob: -9.36230754852295

Token 636: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.749814019713085e-06
    2. ' b' → logprob: -12.250006675720215
    3. 'fac' → logprob: -13.750006675720215
    4. 'c' → logprob: -15.000006675720215
    5. 'f' → logprob: -15.250006675720215
    6. '   ' → logprob: -16.12500762939453
    7. 'd' → logprob: -16.25000762939453
    8. 'def' → logprob: -17.00000762939453
    9. 'if' → logprob: -17.62500762939453
    10. 'bc' → logprob: -17.75000762939453

Token 637: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014550806023180485
    2. ' =' → logprob: -4.264550685882568
    3. ',' → logprob: -8.139551162719727
    4. '=f' → logprob: -9.389551162719727
    5. '=len' → logprob: -12.139551162719727
    6. '=a' → logprob: -12.889551162719727
    7. '=n' → logprob: -13.264551162719727
    8. '=k' → logprob: -14.514551162719727
    9. '=(' → logprob: -15.139551162719727
    10. '=[' → logprob: -15.389551162719727

Token 638: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0126438457518816
    2. 'fac' → logprob: -4.387643814086914
    3. ' c' → logprob: -10.512643814086914
    4. '=' → logprob: -10.637643814086914
    5. 'def' → logprob: -10.637643814086914
    6. 'fact' → logprob: -11.262643814086914
    7. 'fc' → logprob: -11.637643814086914
    8. 'f' → logprob: -12.137643814086914
    9. 'a' → logprob: -12.262643814086914
    10. 'e' → logprob: -12.512643814086914

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036297659389674664
    2. ' =' → logprob: -5.628629684448242
    3. '=f' → logprob: -11.003629684448242
    4. ',' → logprob: -11.878629684448242
    5. '=len' → logprob: -12.878629684448242
    6. '=[' → logprob: -13.753629684448242
    7. '=(' → logprob: -13.878629684448242
    8. '=n' → logprob: -15.378629684448242
    9. '=int' → logprob: -15.503629684448242
    10. '=a' → logprob: -15.753629684448242

Token 640: ' (' (ID: 350)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.002908773487433791
    2. 'fact' → logprob: -5.877908706665039
    3. ' fac' → logprob: -9.377908706665039
    4. '[' → logprob: -11.877908706665039
    5. 'ig' → logprob: -13.002908706665039
    6. '   ' → logprob: -13.127908706665039
    7. 'factor' → logprob: -13.252908706665039
    8. '1' → logprob: -13.627908706665039
    9. 'mod' → logprob: -14.127908706665039
    10. '(' → logprob: -14.502908706665039

Token 641: 'factor' (ID: 73174)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0009552901610732079
    2. 'fact' → logprob: -7.000955104827881
    3. ' fac' → logprob: -10.375955581665039
    4. '   ' → logprob: -12.375955581665039
    5. '1' → logprob: -13.625955581665039
    6. '[' → logprob: -13.875955581665039
    7. 'factor' → logprob: -14.000955581665039
    8. '  ' → logprob: -14.125955581665039
    9. '    ' → logprob: -14.250955581665039
    10. '_fac' → logprob: -14.250955581665039

Token 642: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0035991177428513765
    2. '_list' → logprob: -6.253599166870117
    3. 'ialize' → logprob: -6.628599166870117
    4. 'list' → logprob: -8.878599166870117
    5. 'al' → logprob: -9.128599166870117
    6. 'ialist' → logprob: -10.503599166870117
    7. 'rial' → logprob: -11.253599166870117
    8. '=' → logprob: -11.378599166870117
    9. 'def' → logprob: -12.128599166870117
    10. 'ials' → logprob: -12.253599166870117

Token 643: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04041226580739021
    2. '(k' → logprob: -3.415412187576294
    3. 'fac' → logprob: -6.165412425994873
    4. '_fac' → logprob: -6.540412425994873
    5. ')' → logprob: -7.665412425994873
    6. '[n' → logprob: -7.915412425994873
    7. '(f' → logprob: -7.915412425994873
    8. '(' → logprob: -8.165411949157715
    9. ',' → logprob: -8.540411949157715
    10. 's' → logprob: -8.915411949157715

Token 644: ')%' (ID: 57656)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004680391866713762
    2. '-k' → logprob: -6.129680156707764
    3. ')' → logprob: -6.379680156707764
    4. '),
' → logprob: -8.129680633544922
    5. ')//' → logprob: -8.879680633544922
    6. '   ' → logprob: -9.004680633544922
    7. '-' → logprob: -9.379680633544922
    8. ')),' → logprob: -10.129680633544922
    9. ' ),' → logprob: -10.629680633544922
    10. ' -' → logprob: -10.754680633544922

Token 645: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00027063372544944286
    2. ' p' → logprob: -8.25027084350586
    3. 'MOD' → logprob: -11.62527084350586
    4. '(p' → logprob: -16.00027084350586
    5. 'mod' → logprob: -16.12527084350586
    6. ' MOD' → logprob: -16.37527084350586
    7. ' ' → logprob: -16.62527084350586
    8. '```' → logprob: -17.25027084350586
    9. ' (' → logprob: -17.37527084350586
    10. ')' → logprob: -17.62527084350586

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001183204003609717
    2. '),' → logprob: -7.126183032989502
    3. ' ,' → logprob: -8.75118350982666
    4. ',)' → logprob: -9.62618350982666
    5. ',),' → logprob: -9.75118350982666
    6. ',f' → logprob: -10.25118350982666
    7. ',
' → logprob: -10.25118350982666
    8. ')' → logprob: -11.25118350982666
    9. '),(' → logprob: -12.87618350982666
    10. ',b' → logprob: -13.12618350982666

Token 647: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.006208666134625673
    2. ' factorial' → logprob: -5.131208896636963
    3. 'pow' → logprob: -8.881208419799805
    4. 'fact' → logprob: -9.131208419799805
    5. 'mod' → logprob: -11.506208419799805
    6. '   ' → logprob: -11.631208419799805
    7. ' factor' → logprob: -12.006208419799805
    8. '  ' → logprob: -13.506208419799805
    9. '1' → logprob: -14.131208419799805
    10. '(' → logprob: -14.131208419799805

Token 648: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00015741224342491478
    2. 'k' → logprob: -9.125157356262207
    3. '(n' → logprob: -10.000157356262207
    4. '(' → logprob: -13.625157356262207
    5. '   ' → logprob: -15.000157356262207
    6. '((' → logprob: -15.125157356262207
    7. '[k' → logprob: -15.250157356262207
    8. '(mod' → logprob: -16.000158309936523
    9. ' (' → logprob: -16.125158309936523
    10. '
' → logprob: -16.250158309936523

Token 649: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.17715850472450256
    2. '(n' → logprob: -2.1771585941314697
    3. '%n' → logprob: -3.9271585941314697
    4. '),' → logprob: -4.302158355712891
    5. ')' → logprob: -4.927158355712891
    6. '(p' → logprob: -5.552158355712891
    7. '%' → logprob: -5.927158355712891
    8. ',' → logprob: -7.677158355712891
    9. '(k' → logprob: -8.42715835571289
    10. '   ' → logprob: -8.55215835571289

Token 650: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015796130755916238
    2. '(p' → logprob: -6.501579761505127
    3. 'factor' → logprob: -10.126579284667969
    4. ' p' → logprob: -10.376579284667969
    5. ' (' → logprob: -12.751579284667969
    6. '(' → logprob: -14.126579284667969
    7. '   ' → logprob: -14.751579284667969
    8. '<p' → logprob: -14.876579284667969
    9. ' ' → logprob: -15.251579284667969
    10. '(n' → logprob: -15.626579284667969

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000776634959038347
    2. '),' → logprob: -7.500776767730713
    3. ' ,' → logprob: -9.375776290893555
    4. '%' → logprob: -9.625776290893555
    5. ')' → logprob: -10.625776290893555
    6. ',p' → logprob: -11.125776290893555
    7. '   ' → logprob: -11.500776290893555
    8. '%c' → logprob: -12.000776290893555
    9. '%,' → logprob: -12.875776290893555
    10. ',
' → logprob: -12.875776290893555

Token 652: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.018255768343806267
    2. ' factorial' → logprob: -4.018255710601807
    3. '   ' → logprob: -9.768256187438965
    4. 'fact' → logprob: -10.518256187438965
    5. 'pow' → logprob: -12.018256187438965
    6. '  ' → logprob: -12.518256187438965
    7. ' ' → logprob: -12.643256187438965
    8. '       ' → logprob: -13.018256187438965
    9. '.factor' → logprob: -13.268256187438965
    10. ' factor' → logprob: -13.393256187438965

Token 653: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009800242260098457
    2. '((' → logprob: -4.634800434112549
    3. ' (' → logprob: -10.13479995727539
    4. '(' → logprob: -13.13479995727539
    5. '   ' → logprob: -13.38479995727539
    6. ' ' → logprob: -15.38479995727539
    7. '[(' → logprob: -15.75979995727539
    8. 'n' → logprob: -15.88479995727539
    9. '(max' → logprob: -16.00979995727539
    10. '  ' → logprob: -16.38479995727539

Token 654: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0022725353483110666
    2. ' -' → logprob: -6.127272605895996
    3. 'k' → logprob: -9.877272605895996
    4. '-' → logprob: -11.002272605895996
    5. ' ' → logprob: -12.627272605895996
    6. '%' → logprob: -13.002272605895996
    7. '   ' → logprob: -13.002272605895996
    8. '[k' → logprob: -13.252272605895996
    9. '-K' → logprob: -13.252272605895996
    10. '(k' → logprob: -13.627272605895996

Token 655: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0003473825636319816
    2. ')' → logprob: -8.250347137451172
    3. '%' → logprob: -9.625347137451172
    4. ']%' → logprob: -11.625347137451172
    5. '))' → logprob: -13.375347137451172
    6. 'p' → logprob: -13.375347137451172
    7. '()%' → logprob: -13.375347137451172
    8. ' )' → logprob: -13.500347137451172
    9. '%)' → logprob: -13.500347137451172
    10. '}%' → logprob: -14.000347137451172

Token 656: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. ' p' → logprob: -14.75
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -19.125
    5. '<p' → logprob: -19.5
    6. '(p' → logprob: -19.75
    7. '{' → logprob: -20.125
    8. '	p' → logprob: -20.625
    9. ')p' → logprob: -20.625
    10. ''p' → logprob: -21.0

Token 657: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01447197888046503
    2. ')
' → logprob: -4.639472007751465
    3. '   ' → logprob: -5.389472007751465
    4. ',' → logprob: -9.514472007751465
    5. ' )' → logprob: -10.764472007751465
    6. '),' → logprob: -11.014472007751465
    7. ')
' → logprob: -12.014472007751465
    8. 'def' → logprob: -12.639472007751465
    9. '[' → logprob: -13.014472007751465
    10. '  ' → logprob: -13.014472007751465

Token 658: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09576153010129929
    2. ',' → logprob: -2.97076153755188
    3. '<|end|>' → logprob: -3.47076153755188
    4. ')' → logprob: -5.845761299133301
    5. '<|end|>' → logprob: -6.720761299133301
    6. ';' → logprob: -7.220761299133301
    7. '	return' → logprob: -7.345761299133301
    8. '    
' → logprob: -7.470761299133301
    9. 'return' → logprob: -7.595761299133301
    10. ' return' → logprob: -7.720761299133301

Token 659: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.012242380529642105
    2. ' not' → logprob: -4.887242317199707
    3. 'fac' → logprob: -6.012242317199707
    4. 'len' → logprob: -6.262242317199707
    5. '(not' → logprob: -8.762242317199707
    6. 'False' → logprob: -9.512242317199707
    7. 'fact' → logprob: -11.262242317199707
    8. 'n' → logprob: -12.387242317199707
    9. 'True' → logprob: -12.512242317199707
    10. '(len' → logprob: -12.512242317199707

Token 660: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0037332146894186735
    2. 'fac' → logprob: -5.628733158111572
    3. ' fac' → logprob: -10.00373363494873
    4. '(str' → logprob: -10.37873363494873
    5. '(' → logprob: -11.00373363494873
    6. '==' → logprob: -12.00373363494873
    7. '()' → logprob: -12.25373363494873
    8. '```' → logprob: -12.50373363494873
    9. '
' → logprob: -12.87873363494873
    10. 'f' → logprob: -13.12873363494873

Token 661: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.000133098365040496
    2. 'actor' → logprob: -9.875133514404297
    3. 'fac' → logprob: -10.375133514404297
    4. 'a' → logprob: -11.500133514404297
    5. 'acs' → logprob: -11.625133514404297
    6. 'act' → logprob: -11.750133514404297
    7. '(ac' → logprob: -12.250133514404297
    8. 'c' → logprob: -12.750133514404297
    9. '[]' → logprob: -12.875133514404297
    10. '```' → logprob: -13.125133514404297

Token 662: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001519325451226905
    2. 't' → logprob: -9.500151634216309
    3. 'list' → logprob: -9.625151634216309
    4. 'l' → logprob: -13.500151634216309
    5. '_lists' → logprob: -13.625151634216309
    6. 'fac' → logprob: -14.000151634216309
    7. '=[]' → logprob: -14.125151634216309
    8. 's' → logprob: -14.375151634216309
    9. 'tor' → logprob: -14.375151634216309
    10. 'ilist' → logprob: -14.750151634216309

Token 663: ')<=' (ID: 176862)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.024051612243056297
    2. ' ==' → logprob: -4.149051666259766
    3. ')==' → logprob: -5.024051666259766
    4. ')' → logprob: -7.274051666259766
    5. '<' → logprob: -8.149051666259766
    6. '<len' → logprob: -8.899051666259766
    7. '<n' → logprob: -9.524051666259766
    8. ')<' → logprob: -10.149051666259766
    9. ' <' → logprob: -10.524051666259766
    10. ' else' → logprob: -10.524051666259766

Token 664: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7412658333778381
    2. 'max' → logprob: -1.3662657737731934
    3. 'n' → logprob: -1.7412657737731934
    4. '0' → logprob: -2.6162657737731934
    5. '1' → logprob: -3.9912657737731934
    6. '2' → logprob: -6.741265773773193
    7. 'abs' → logprob: -8.616266250610352
    8. '3' → logprob: -9.116266250610352
    9. '(max' → logprob: -11.116266250610352
    10. '100' → logprob: -11.241266250610352

Token 665: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759890079498291
    2. 'else' → logprob: -0.8259890079498291
    3. '   ' → logprob: -10.07598876953125
    4. '    ' → logprob: -13.70098876953125
    5. '
' → logprob: -13.82598876953125
    6. ' ' → logprob: -13.95098876953125
    7. '```' → logprob: -14.20098876953125
    8. '	else' → logprob: -14.45098876953125
    9. '  ' → logprob: -14.57598876953125
    10. '       ' → logprob: -14.57598876953125

Token 666: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005929505452513695
    2. ' (' → logprob: -5.380929470062256
    3. 'fac' → logprob: -7.005929470062256
    4. '(' → logprob: -9.005929946899414
    5. ' fac' → logprob: -9.255929946899414
    6. '   ' → logprob: -10.755929946899414
    7. '(mod' → logprob: -11.005929946899414
    8. '((' → logprob: -11.130929946899414
    9. '(None' → logprob: -11.130929946899414
    10. '(fc' → logprob: -11.130929946899414

Token 667: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.00019245444855187088
    2. 'fact' → logprob: -9.375192642211914
    3. ' fac' → logprob: -9.750192642211914
    4. '(f' → logprob: -11.125192642211914
    5. '1' → logprob: -11.500192642211914
    6. '(' → logprob: -12.125192642211914
    7. '   ' → logprob: -12.125192642211914
    8. 'factor' → logprob: -12.875192642211914
    9. '  ' → logprob: -13.250192642211914
    10. '[' → logprob: -13.625192642211914

Token 668: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007257753168232739
    2. 'list' → logprob: -8.375725746154785
    3. 'fac' → logprob: -8.500725746154785
    4. 'ac' → logprob: -9.250725746154785
    5. '[' → logprob: -9.875725746154785
    6. '_fac' → logprob: -10.500725746154785
    7. '=' → logprob: -10.750725746154785
    8. 'a' → logprob: -10.875725746154785
    9. 'factor' → logprob: -11.625725746154785
    10. 'fact' → logprob: -11.750725746154785

Token 669: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0009261108934879303
    2. '[k' → logprob: -7.3759260177612305
    3. '[len' → logprob: -9.12592601776123
    4. '[' → logprob: -9.25092601776123
    5. '[a' → logprob: -11.00092601776123
    6. '[p' → logprob: -11.25092601776123
    7. '[]' → logprob: -11.50092601776123
    8. '[c' → logprob: -11.50092601776123
    9. '[f' → logprob: -11.87592601776123
    10. ')' → logprob: -12.00092601776123

Token 670: '],' (ID: 2155)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6182945370674133
    2. ',' → logprob: -1.2432944774627686
    3. '[k' → logprob: -2.4932944774627686
    4. '],' → logprob: -2.8682944774627686
    5. '[' → logprob: -3.9932944774627686
    6. '[],' → logprob: -5.243294715881348
    7. '[p' → logprob: -5.868294715881348
    8. '[f' → logprob: -6.368294715881348
    9. ']' → logprob: -6.743294715881348
    10. '),' → logprob: -6.868294715881348

Token 671: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.0016439995961263776
    2. 'mod' → logprob: -6.751644134521484
    3. 'fact' → logprob: -7.751644134521484
    4. 'factor' → logprob: -11.251644134521484
    5. '(mod' → logprob: -11.376644134521484
    6. ' fac' → logprob: -11.876644134521484
    7. '(' → logprob: -12.126644134521484
    8. '(f' → logprob: -12.626644134521484
    9. 'fc' → logprob: -13.251644134521484
    10. '   ' → logprob: -15.126644134521484

Token 672: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3809363543987274
    2. 'fac' → logprob: -1.6309363842010498
    3. 'ac' → logprob: -2.75593638420105
    4. 'c' → logprob: -3.13093638420105
    5. 'list' → logprob: -5.005936145782471
    6. 'List' → logprob: -5.380936145782471
    7. 'cl' → logprob: -7.380936145782471
    8. 'l' → logprob: -7.755936145782471
    9. '[' → logprob: -8.380936622619629
    10. 'ct' → logprob: -9.005936622619629

Token 673: '[k' (ID: 14298)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005988401360809803
    2. '[k' → logprob: -5.130988597869873
    3. '[n' → logprob: -10.755988121032715
    4. 'n' → logprob: -11.255988121032715
    5. ' k' → logprob: -11.380988121032715
    6. '{k' → logprob: -12.255988121032715
    7. '   ' → logprob: -12.505988121032715
    8. '(k' → logprob: -13.630988121032715
    9. '[' → logprob: -13.880988121032715
    10. '
' → logprob: -14.380988121032715

Token 674: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033043816220015287
    2. '],' → logprob: -5.878304481506348
    3. ' ,' → logprob: -8.378304481506348
    4. '),' → logprob: -8.878304481506348
    5. ',f' → logprob: -10.128304481506348
    6. '   ' → logprob: -10.753304481506348
    7. ',n' → logprob: -10.878304481506348
    8. 'fac' → logprob: -11.503304481506348
    9. '[' → logprob: -11.753304481506348
    10. ']' → logprob: -11.878304481506348

Token 675: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -4.644463479053229e-05
    2. ' fac' → logprob: -10.000046730041504
    3. 'fact' → logprob: -14.375046730041504
    4. '   ' → logprob: -15.125046730041504
    5. 'fc' → logprob: -16.750045776367188
    6. 'fa' → logprob: -17.375045776367188
    7. '  ' → logprob: -17.375045776367188
    8. 'fab' → logprob: -18.125045776367188
    9. 'fas' → logprob: -18.125045776367188
    10. 'Fac' → logprob: -18.250045776367188

Token 676: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00036323294625617564
    2. 'list' → logprob: -8.62536334991455
    3. 'ist' → logprob: -9.25036334991455
    4. 'st' → logprob: -10.12536334991455
    5. 'c' → logprob: -11.62536334991455
    6. 'fac' → logprob: -11.62536334991455
    7. 'List' → logprob: -11.75036334991455
    8. 'ac' → logprob: -12.00036334991455
    9. 'cl' → logprob: -13.12536334991455
    10. '[' → logprob: -13.12536334991455

Token 677: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0036145627964287996
    2. 'n' → logprob: -5.62861442565918
    3. '[' → logprob: -12.25361442565918
    4. '   ' → logprob: -12.50361442565918
    5. '[k' → logprob: -13.00361442565918
    6. ' [' → logprob: -14.37861442565918
    7. ' n' → logprob: -14.50361442565918
    8. '(n' → logprob: -14.62861442565918
    9. ' ' → logprob: -14.87861442565918
    10. '```' → logprob: -15.00361442565918

Token 678: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.000597712118178606
    2. ' -' → logprob: -7.6255974769592285
    3. '-' → logprob: -9.125597953796387
    4. ']' → logprob: -14.375597953796387
    5. 'k' → logprob: -17.12559700012207
    6. ']-' → logprob: -17.12559700012207
    7. '−' → logprob: -17.25059700012207
    8. '   ' → logprob: -17.37559700012207
    9. '
' → logprob: -17.50059700012207
    10. ' ' → logprob: -17.62559700012207

Token 679: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09063763171434402
    2. '])' → logprob: -2.465637683868408
    3. '   ' → logprob: -7.090637683868408
    4. ']' → logprob: -7.590637683868408
    5. 'def' → logprob: -9.09063720703125
    6. ')
' → logprob: -9.21563720703125
    7. ' )' → logprob: -10.21563720703125
    8. ')])' → logprob: -10.59063720703125
    9. '  ' → logprob: -10.84063720703125
    10. '[' → logprob: -11.21563720703125

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004670780152082443
    2. ' return' → logprob: -6.3796706199646
    3. '
' → logprob: -6.7546706199646
    4. 'return' → logprob: -7.2546706199646
    5. ':return' → logprob: -7.7546706199646
    6. '	return' → logprob: -9.004671096801758
    7. ':' → logprob: -9.004671096801758
    8. ')' → logprob: -9.004671096801758
    9. ',' → logprob: -9.129671096801758
    10. '<|end|>' → logprob: -10.254671096801758

Token 681: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1369614452123642
    2. 'return' (adapté à ' return') → logprob: -2.6369614601135254
    3. ' return' → logprob: -2.8869614601135254
    4. '	return' → logprob: -8.511960983276367
    5. ')' → logprob: -9.011960983276367
    6. ':return' → logprob: -9.011960983276367
    7. '  ' → logprob: -10.136960983276367
    8. '```' → logprob: -10.511960983276367
    9. ',' → logprob: -10.886960983276367
    10. '
' → logprob: -11.011960983276367

Token 682: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1025531068444252
    2. '(a' → logprob: -2.352553129196167
    3. ' a' → logprob: -6.102552890777588
    4. ' (' → logprob: -9.352553367614746
    5. '(' → logprob: -11.352553367614746
    6. '((' → logprob: -12.477553367614746
    7. 'b' → logprob: -13.727553367614746
    8. '(b' → logprob: -13.852553367614746
    9. '   ' → logprob: -14.727553367614746
    10. '	a' → logprob: -14.977553367614746

Token 683: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01416398212313652
    2. ' *' → logprob: -4.264163970947266
    3. '*(' → logprob: -15.514163970947266
    4. '*object' → logprob: -16.139163970947266
    5. '**' → logprob: -16.264163970947266
    6. '*b' → logprob: -17.014163970947266
    7. '   ' → logprob: -17.139163970947266
    8. '*out' → logprob: -17.389163970947266
    9. '*a' → logprob: -18.139163970947266
    10. '*ft' → logprob: -18.139163970947266

Token 684: ' pow' (ID: 9779)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00888104923069477
    2. 'pow' → logprob: -4.758881092071533
    3. ' mod' → logprob: -8.258880615234375
    4. ' pow' → logprob: -12.258880615234375
    5. '(mod' → logprob: -13.133880615234375
    6. '	mod' → logprob: -14.633880615234375
    7. '   ' → logprob: -15.383880615234375
    8. '(pow' → logprob: -16.508880615234375
    9. '```' → logprob: -17.383880615234375
    10. 'power' → logprob: -18.883880615234375

Token 685: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0002668192028068006
    2. 'b' → logprob: -8.250267028808594
    3. '(c' → logprob: -12.125267028808594
    4. '(' → logprob: -16.625267028808594
    5. '((' → logprob: -17.375267028808594
    6. 'c' → logprob: -18.500267028808594
    7. '	b' → logprob: -18.875267028808594
    8. ' b' → logprob: -19.750267028808594
    9. '\b' → logprob: -19.750267028808594
    10. '[b' → logprob: -20.625267028808594

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.767145037651062
    2. '-' → logprob: -0.892145037651062
    3. 'p' → logprob: -2.8921451568603516
    4. ',p' → logprob: -3.7671451568603516
    5. ',-' → logprob: -4.517145156860352
    6. ' -' → logprob: -4.642145156860352
    7. '(-' → logprob: -5.017145156860352
    8. 'mod' → logprob: -5.767145156860352
    9. '*' → logprob: -6.142145156860352
    10. 'MOD' → logprob: -6.517145156860352

Token 687: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004678497789427638
    2. '-' → logprob: -7.875467777252197
    3. 'MOD' → logprob: -9.375468254089355
    4. ' p' → logprob: -13.500468254089355
    5. '-p' → logprob: -14.000468254089355
    6. '<p' → logprob: -15.250468254089355
    7. '-mod' → logprob: -15.375468254089355
    8. ' -' → logprob: -15.500468254089355
    9. 'mod' → logprob: -17.25046730041504
    10. ' MOD' → logprob: -17.75046730041504

Token 688: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.779520092299208e-05
    2. ' -' → logprob: -9.500078201293945
    3. 'p' → logprob: -12.875078201293945
    4. '−' → logprob: -16.250078201293945
    5. '-p' → logprob: -16.500078201293945
    6. '–' → logprob: -16.875078201293945
    7. '```' → logprob: -17.250078201293945
    8. '{-' → logprob: -19.250078201293945
    9. '-mod' → logprob: -19.375078201293945
    10. '(p' → logprob: -19.500078201293945

Token 689: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.625
    3. '
' → logprob: -16.875
    4. ' ' → logprob: -17.0
    5. '-' → logprob: -17.75
    6. '
' → logprob: -18.625
    7. '۲' → logprob: -18.75
    8. '   ' → logprob: -19.0625
    9. '3' → logprob: -19.375
    10. '4' → logprob: -19.625

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003426754381507635
    2. ',p' → logprob: -5.753426551818848
    3. ' ,' → logprob: -8.628426551818848
    4. '-' → logprob: -10.503426551818848
    5. ')' → logprob: -10.628426551818848
    6. ',k' → logprob: -12.378426551818848
    7. '%' → logprob: -12.753426551818848
    8. '```' → logprob: -13.003426551818848
    9. ',n' → logprob: -13.503426551818848
    10. ' -' → logprob: -14.003426551818848

Token 691: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.15310683415737e-05
    2. ' p' → logprob: -10.750021934509277
    3. 'MOD' → logprob: -17.00002098083496
    4. '<p' → logprob: -20.75002098083496
    5. 'mod' → logprob: -21.87502098083496
    6. '   ' → logprob: -22.37502098083496
    7. '
' → logprob: -22.62502098083496
    8. '```' → logprob: -22.75002098083496
    9. ')' → logprob: -23.00002098083496
    10. ')p' → logprob: -23.12502098083496

Token 692: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005039133131504059
    2. ',' → logprob: -5.380039215087891
    3. ')%' → logprob: -8.25503921508789
    4. '%' → logprob: -9.38003921508789
    5. '*' → logprob: -10.25503921508789
    6. ' )' → logprob: -10.88003921508789
    7. '%c' → logprob: -12.25503921508789
    8. '```' → logprob: -12.63003921508789
    9. '%b' → logprob: -13.25503921508789
    10. '   ' → logprob: -13.75503921508789

Token 693: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22472377121448517
    2. ' *' → logprob: -2.3497238159179688
    3. ' %' → logprob: -2.4747238159179688
    4. '*' → logprob: -3.8497238159179688
    5. '   ' → logprob: -8.474723815917969
    6. '%c' → logprob: -8.849723815917969
    7. '%x' → logprob: -11.224723815917969
    8. '%b' → logprob: -12.099723815917969
    9. '	' → logprob: -12.724723815917969
    10. '//' → logprob: -12.974723815917969

Token 694: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.000239536224398762
    2. ' pow' → logprob: -8.500239372253418
    3. 'c' → logprob: -10.250239372253418
    4. '(pow' → logprob: -14.250239372253418
    5. ' c' → logprob: -17.125240325927734
    6. '   ' → logprob: -18.875240325927734
    7. '  ' → logprob: -20.250240325927734
    8. ' ' → logprob: -20.375240325927734
    9. '(' → logprob: -20.375240325927734
    10. '.pow' → logprob: -20.750240325927734

Token 695: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.16023477911949158
    2. 'c' → logprob: -1.910234808921814
    3. ' c' → logprob: -12.785234451293945
    4. '	c' → logprob: -12.910234451293945
    5. '(' → logprob: -13.035234451293945
    6. ')c' → logprob: -13.410234451293945
    7. '   ' → logprob: -14.410234451293945
    8. '```' → logprob: -14.785234451293945
    9. ' (' → logprob: -15.660234451293945
    10. '(
' → logprob: -15.660234451293945

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002993544621858746
    2. ',p' → logprob: -8.250299453735352
    3. ' ,' → logprob: -10.250299453735352
    4. 'p' → logprob: -12.875299453735352
    5. '(p' → logprob: -16.87529945373535
    6. 's' → logprob: -17.50029945373535
    7. '(' → logprob: -17.87529945373535
    8. ',
' → logprob: -17.87529945373535
    9. ' p' → logprob: -18.37529945373535
    10. 'mod' → logprob: -18.37529945373535

Token 697: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008615515194833279
    2. ' p' → logprob: -4.758615493774414
    3. '(p' → logprob: -14.133615493774414
    4. 'MOD' → logprob: -15.633615493774414
    5. '   ' → logprob: -16.008615493774414
    6. ' ' → logprob: -17.883615493774414
    7. ' MOD' → logprob: -18.383615493774414
    8. 'mod' → logprob: -18.508615493774414
    9. '  ' → logprob: -18.883615493774414
    10. '	p' → logprob: -19.008615493774414

Token 698: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014072739577386528
    2. ' -' → logprob: -8.875141143798828
    3. '1' → logprob: -14.000141143798828
    4. '−' → logprob: -17.250141143798828
    5. '   ' → logprob: -17.750141143798828
    6. ' ' → logprob: -18.000141143798828
    7. '```' → logprob: -18.500141143798828
    8. '2' → logprob: -19.750141143798828
    9. '–' → logprob: -20.125141143798828
    10. '  ' → logprob: -21.000141143798828

Token 699: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. '
' → logprob: -15.687503814697266
    5. '1' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.312503814697266
    7. '
' → logprob: -17.437503814697266
    8. ')' → logprob: -17.500003814697266
    9. '-' → logprob: -17.625003814697266
    10. '3' → logprob: -17.687503814697266

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01860686205327511
    2. ',p' → logprob: -4.018606662750244
    3. ' ,' → logprob: -7.768606662750244
    4. '(p' → logprob: -11.143607139587402
    5. 'p' → logprob: -11.518607139587402
    6. ')' → logprob: -12.018607139587402
    7. '%' → logprob: -13.768607139587402
    8. '(' → logprob: -14.143607139587402
    9. '[p' → logprob: -15.268607139587402
    10. ' p' → logprob: -15.393607139587402

Token 701: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003357006062287837
    2. ' p' → logprob: -8.000335693359375
    3. ')' → logprob: -15.125335693359375
    4. 'MOD' → logprob: -17.375335693359375
    5. 'mod' → logprob: -18.625335693359375
    6. ')p' → logprob: -18.750335693359375
    7. '```' → logprob: -18.875335693359375
    8. '<p' → logprob: -19.000335693359375
    9. '1' → logprob: -19.375335693359375
    10. '(p' → logprob: -19.625335693359375

Token 702: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018214354058727622
    2. '%' → logprob: -6.626821517944336
    3. '}' → logprob: -8.251821517944336
    4. ')%' → logprob: -9.376821517944336
    5. '<|end|>' → logprob: -10.376821517944336
    6. ']' → logprob: -10.626821517944336
    7. ' )' → logprob: -10.751821517944336
    8. ' %' → logprob: -10.751821517944336
    9. '   ' → logprob: -11.626821517944336
    10. '```' → logprob: -11.751821517944336

Token 703: ' %' (ID: 1851)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.459775686264038
    2. '**' → logprob: -1.459775686264038
    3. '<|end|>' → logprob: -1.709775686264038
    4. ')' → logprob: -2.084775686264038
    5. '
' → logprob: -2.459775686264038
    6. '%' → logprob: -3.584775686264038
    7. '```' → logprob: -4.084775924682617
    8. ' ' → logprob: -4.209775924682617
    9. '\n' → logprob: -4.459775924682617
    10. ' *' → logprob: -4.459775924682617

Token 704: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. 'MOD' → logprob: -19.501928329467773
    4. '(p' → logprob: -21.751928329467773
    5. '```' → logprob: -22.251928329467773
    6. ' MOD' → logprob: -23.876928329467773
    7. 'mod' → logprob: -23.876928329467773
    8. '$p' → logprob: -24.876928329467773
    9. '<p' → logprob: -25.126928329467773
    10. '	p' → logprob: -25.251928329467773

Token 705: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 706: 'mod' (ID: 4847)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9467090368270874
    2. ')' → logprob: -1.4467090368270874
    3. '
' → logprob: -1.4467090368270874
    4. 'def' → logprob: -2.571709156036377
    5. '<|end|>' → logprob: -3.571709156036377
    6. '#' → logprob: -5.196709156036377
    7. ':
' → logprob: -5.571709156036377
    8. '(' → logprob: -5.571709156036377
    9. '\n' → logprob: -5.696709156036377
    10. '(
' → logprob: -5.821709156036377

Token 707: 'add' (ID: 964)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07113310694694519
    2. 'comb' → logprob: -3.0711331367492676
    3. 'inv' → logprob: -4.071133136749268
    4. 'factor' → logprob: -5.571133136749268
    5. 'com' → logprob: -8.19613265991211
    6. '.' → logprob: -8.44613265991211
    7. 'import' → logprob: -9.07113265991211
    8. '=' → logprob: -9.07113265991211
    9. 'combine' → logprob: -9.19613265991211
    10. '_comb' → logprob: -9.69613265991211

Token 708: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48016253113746643
    2. '=' → logprob: -0.980162501335144
    3. '=lambda' → logprob: -5.105162620544434
    4. 'def' → logprob: -13.980162620544434
    5. 'lambda' → logprob: -15.355162620544434
    6. ' ' → logprob: -15.605162620544434
    7. '    ' → logprob: -16.480161666870117
    8. '＝' → logprob: -16.605161666870117
    9. 'import' → logprob: -16.730161666870117
    10. '  ' → logprob: -16.980161666870117

Token 709: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -8.196732960641384e-05
    2. ' lambda' → logprob: -10.000082015991211
    3. '(lambda' → logprob: -10.250082015991211
    4. '=lambda' → logprob: -13.875082015991211
    5. '   ' → logprob: -16.12508201599121
    6. 'λ' → logprob: -19.75008201599121
    7. '    ' → logprob: -20.75008201599121
    8. '```' → logprob: -20.75008201599121
    9. '  ' → logprob: -21.12508201599121
    10. ' ' → logprob: -21.25008201599121

Token 710: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01664138399064541
    2. 'a' → logprob: -4.266641616821289
    3. ' lambda' → logprob: -6.016641616821289
    4. '(lambda' → logprob: -11.141641616821289
    5. '=lambda' → logprob: -11.641641616821289
    6. ' a' → logprob: -11.766641616821289
    7. 'x' → logprob: -12.766641616821289
    8. '   ' → logprob: -13.266641616821289
    9. ' ' → logprob: -14.266641616821289
    10. 'λ' → logprob: -15.141641616821289

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021676063537597656
    2. ',b' → logprob: -4.396676063537598
    3. ',a' → logprob: -4.771676063537598
    4. ' ,' → logprob: -7.521676063537598
    5. ',x' → logprob: -10.396676063537598
    6. ',n' → logprob: -11.021676063537598
    7. ',m' → logprob: -11.146676063537598
    8. 'a' → logprob: -11.396676063537598
    9. ',q' → logprob: -11.771676063537598
    10. 'b' → logprob: -12.396676063537598

Token 712: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.1689596148207784e-05
    2. ' b' → logprob: -10.000051498413086
    3. 'lambda' → logprob: -12.000051498413086
    4. '   ' → logprob: -16.500051498413086
    5. ' lambda' → logprob: -17.125051498413086
    6. '    ' → logprob: -17.750051498413086
    7. '  ' → logprob: -18.875051498413086
    8. ' ' → logprob: -19.125051498413086
    9. '       ' → logprob: -20.125051498413086
    10. 'B' → logprob: -20.500051498413086

Token 713: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.371061772108078
    2. ',' → logprob: -1.3710618019104004
    3. ' :' → logprob: -3.6210618019104004
    4. ',a' → logprob: -4.3710618019104
    5. ',:' → logprob: -4.3710618019104
    6. ':a' → logprob: -6.2460618019104
    7. '+:' → logprob: -7.2460618019104
    8. ' ,' → logprob: -7.3710618019104
    9. 'a' → logprob: -8.121061325073242
    10. ':,' → logprob: -8.621061325073242

Token 714: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01175509113818407
    2. ' p' → logprob: -4.636754989624023
    3. 'MOD' → logprob: -6.511754989624023
    4. 'a' → logprob: -8.636754989624023
    5. 'c' → logprob: -9.011754989624023
    6. 'mod' → logprob: -10.261754989624023
    7. '(a' → logprob: -10.386754989624023
    8. 'b' → logprob: -10.511754989624023
    9. ' MOD' → logprob: -10.511754989624023
    10. '(p' → logprob: -10.636754989624023

Token 715: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16954196989536285
    2. ',' → logprob: -1.9195419549942017
    3. ',p' → logprob: -6.169541835784912
    4. ',a' → logprob: -6.169541835784912
    5. ':p' → logprob: -6.669541835784912
    6. ' :' → logprob: -6.919541835784912
    7. ':a' → logprob: -7.169541835784912
    8. '=' → logprob: -7.169541835784912
    9. ':(' → logprob: -7.544541835784912
    10. ',:' → logprob: -7.544541835784912

Token 716: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00205557351000607
    2. 'p' → logprob: -6.252055644989014
    3. ' MOD' → logprob: -9.002055168151855
    4. ' p' → logprob: -12.877055168151855
    5. '_MOD' → logprob: -14.627055168151855
    6. 'None' → logprob: -14.877055168151855
    7. '10' → logprob: -16.127056121826172
    8. '0' → logprob: -16.502056121826172
    9. '.MOD' → logprob: -16.752056121826172
    10. ' ' → logprob: -17.252056121826172

Token 717: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024081121664494276
    2. ' :' → logprob: -7.002408027648926
    3. ':a' → logprob: -7.127408027648926
    4. ',' → logprob: -7.627408027648926
    5. ':(' → logprob: -8.877408027648926
    6. ',a' → logprob: -9.752408027648926
    7. ',:' → logprob: -12.377408027648926
    8. 'a' → logprob: -13.627408027648926
    9. ':,' → logprob: -14.377408027648926
    10. ' :(' → logprob: -14.502408027648926

Token 718: ' ((' (ID: 3536)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015041481237858534
    2. ' (' → logprob: -6.501503944396973
    3. '((' → logprob: -13.251503944396973
    4. '(A' → logprob: -17.75150489807129
    5. 'a' → logprob: -18.00150489807129
    6. '(' → logprob: -18.25150489807129
    7. ' ' → logprob: -19.00150489807129
    8. '   ' → logprob: -19.75150489807129
    9. ' ((' → logprob: -20.12650489807129
    10. '(ax' → logprob: -21.12650489807129

Token 719: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3425219549390022e-05
    2. '(a' → logprob: -11.25001335144043
    3. ' a' → logprob: -15.00001335144043
    4. '   ' → logprob: -19.50001335144043
    5. '	a' → logprob: -20.50001335144043
    6. ' (' → logprob: -21.50001335144043
    7. ')a' → logprob: -21.87501335144043
    8. '((' → logprob: -22.12501335144043
    9. '[a' → logprob: -22.12501335144043
    10. '_a' → logprob: -22.50001335144043

Token 720: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5774317383766174
    2. '+b' → logprob: -1.0774316787719727
    3. ' +' → logprob: -2.3274316787719727
    4. '%' → logprob: -7.452431678771973
    5. '+a' → logprob: -10.577431678771973
    6. '%b' → logprob: -10.577431678771973
    7. ' %' → logprob: -11.827431678771973
    8. 'a' → logprob: -12.827431678771973
    9. '+p' → logprob: -14.077431678771973
    10. '+B' → logprob: -14.202431678771973

Token 721: 'p' (ID: 79)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25416991114616394
    2. 'p' → logprob: -1.5041699409484863
    3. ' b' → logprob: -6.504169940948486
    4. ' p' → logprob: -7.879169940948486
    5. '(p' → logprob: -9.004169464111328
    6. '+b' → logprob: -9.754169464111328
    7. '+p' → logprob: -9.879169464111328
    8. ' (' → logprob: -9.879169464111328
    9. '+' → logprob: -10.129169464111328
    10. '(' → logprob: -11.004169464111328

Token 722: ')+(' (ID: 104644)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.499765545129776
    2. '+b' → logprob: -0.9997655153274536
    3. ' +' → logprob: -3.749765634536743
    4. ')+' → logprob: -6.374765396118164
    5. ')' → logprob: -8.999765396118164
    6. ')+(' → logprob: -11.749765396118164
    7. '+)' → logprob: -13.499765396118164
    8. '+
' → logprob: -15.249765396118164
    9. '+a' → logprob: -15.374765396118164
    10. '+p' → logprob: -15.374765396118164

Token 723: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00038074489566497505
    2. ' b' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.125380516052246
    4. '(b' → logprob: -15.250380516052246
    5. ' ' → logprob: -16.750381469726562
    6. '  ' → logprob: -17.375381469726562
    7. ' (' → logprob: -17.750381469726562
    8. '    ' → logprob: -17.875381469726562
    9. '	b' → logprob: -19.500381469726562
    10. '(' → logprob: -20.125381469726562

Token 724: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.676292231422849e-05
    2. ')%' → logprob: -11.125017166137695
    3. ' %' → logprob: -13.375017166137695
    4. '()%' → logprob: -16.250017166137695
    5. '%m' → logprob: -16.625017166137695
    6. '%n' → logprob: -16.750017166137695
    7. '%x' → logprob: -16.750017166137695
    8. '%c' → logprob: -17.125017166137695
    9. '%b' → logprob: -17.125017166137695
    10. '%i' → logprob: -17.125017166137695

Token 725: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017994173686020076
    2. ' p' → logprob: -8.6251802444458
    3. ')' → logprob: -15.7501802444458
    4. ')p' → logprob: -16.750179290771484
    5. ' ' → logprob: -16.875179290771484
    6. '<p' → logprob: -17.500179290771484
    7. '   ' → logprob: -18.250179290771484
    8. '(p' → logprob: -18.500179290771484
    9. ',p' → logprob: -18.500179290771484
    10. '```' → logprob: -18.625179290771484

Token 726: '))' (ID: 915)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00045379105722531676
    2. ')' → logprob: -7.750453948974609
    3. ' )' → logprob: -11.37545394897461
    4. '))' → logprob: -11.37545394897461
    5. ' ' → logprob: -16.62545394897461
    6. ')p' → logprob: -16.87545394897461
    7. '%' → logprob: -17.00045394897461
    8. '   ' → logprob: -17.25045394897461
    9. ')
' → logprob: -17.62545394897461
    10. ')+' → logprob: -18.50045394897461

Token 727: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13426226377487183
    2. ')%' → logprob: -2.1342623233795166
    3. ')' → logprob: -5.0092620849609375
    4. ' %' → logprob: -7.3842620849609375
    5. ' )' → logprob: -12.259262084960938
    6. '%)' → logprob: -13.884262084960938
    7. '%c' → logprob: -14.134262084960938
    8. '%n' → logprob: -14.134262084960938
    9. '%e' → logprob: -14.259262084960938
    10. '%b' → logprob: -14.384262084960938

Token 728: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029750484973192215
    2. ' p' → logprob: -3.5297505855560303
    3. '	p' → logprob: -19.02975082397461
    4. ' ' → logprob: -19.52975082397461
    5. ' ' → logprob: -21.02975082397461
    6. '<p' → logprob: -21.15475082397461
    7. '(p' → logprob: -21.15475082397461
    8. ')p' → logprob: -22.15475082397461
    9. '_p' → logprob: -22.27975082397461
    10. '$p' → logprob: -22.52975082397461

Token 729: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04503253847360611
    2. ')' → logprob: -3.920032501220703
    3. '<|end|>' → logprob: -4.420032501220703
    4. '
' → logprob: -5.045032501220703
    5. '```' → logprob: -6.420032501220703
    6. '#' → logprob: -6.420032501220703
    7. '+' → logprob: -7.670032501220703
    8. 'import' → logprob: -7.795032501220703
    9. '\n' → logprob: -8.670032501220703
    10. '%' → logprob: -8.670032501220703

Token 731: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.010501326061785221
    2. '_sub' → logprob: -4.635501384735107
    3. 'pow' → logprob: -8.13550090789795
    4. 'mul' → logprob: -8.63550090789795
    5. 'subtract' → logprob: -8.63550090789795
    6. '-' → logprob: -10.63550090789795
    7. '-sub' → logprob: -10.76050090789795
    8. '_mul' → logprob: -11.38550090789795
    9. ' sub' → logprob: -11.51050090789795
    10. 'Sub' → logprob: -11.63550090789795

Token 732: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38931772112846375
    2. ' =' → logprob: -1.1393177509307861
    3. '=lambda' → logprob: -6.014317512512207
    4. '(lambda' → logprob: -16.514318466186523
    5. '＝' → logprob: -16.639318466186523
    6. 'lambda' → logprob: -17.264318466186523
    7. ' lambda' → logprob: -17.764318466186523
    8. ',' → logprob: -18.014318466186523
    9. ' ' → logprob: -18.264318466186523
    10. '=
' → logprob: -18.639318466186523

Token 733: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.02327284961938858
    2. ' lambda' → logprob: -3.773272752761841
    3. '(lambda' → logprob: -10.523272514343262
    4. '=lambda' → logprob: -14.648272514343262
    5. '   ' → logprob: -17.273273468017578
    6. 'def' → logprob: -18.648273468017578
    7. '_lambda' → logprob: -18.898273468017578
    8. '```' → logprob: -19.398273468017578
    9. 'λ' → logprob: -19.898273468017578
    10. 'a' → logprob: -20.148273468017578

Token 734: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03077556937932968
    2. ' a' → logprob: -3.780775547027588
    3. 'lambda' → logprob: -5.280775547027588
    4. ' lambda' → logprob: -6.030775547027588
    5. '(a' → logprob: -11.655776023864746
    6. '   ' → logprob: -15.280776023864746
    7. ' ' → logprob: -15.280776023864746
    8. '(lambda' → logprob: -15.405776023864746
    9. 'def' → logprob: -15.780776023864746
    10. '	a' → logprob: -16.90577507019043

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028917234390974045
    2. ',a' → logprob: -3.7789173126220703
    3. 'a' → logprob: -5.52891731262207
    4. ' ,' → logprob: -7.52891731262207
    5. ' a' → logprob: -7.77891731262207
    6. '(a' → logprob: -7.90391731262207
    7. 'lambda' → logprob: -8.90391731262207
    8. '=lambda' → logprob: -9.15391731262207
    9. ' lambda' → logprob: -9.27891731262207
    10. ',b' → logprob: -11.27891731262207

Token 736: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003372502396814525
    2. ' b' → logprob: -8.000337600708008
    3. 'lambda' → logprob: -13.375337600708008
    4. ' lambda' → logprob: -16.500337600708008
    5. '   ' → logprob: -16.875337600708008
    6. '(b' → logprob: -17.125337600708008
    7. 'def' → logprob: -17.500337600708008
    8. '	b' → logprob: -17.875337600708008
    9. '    ' → logprob: -18.125337600708008
    10. ' ' → logprob: -18.875337600708008

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0582939013838768
    2. ' lambda' → logprob: -3.4332938194274902
    3. ' a' → logprob: -4.55829381942749
    4. '(a' → logprob: -5.05829381942749
    5. ',a' → logprob: -6.05829381942749
    6. 'a' → logprob: -6.30829381942749
    7. ' ,' → logprob: -6.93329381942749
    8. 'lambda' → logprob: -7.18329381942749
    9. '=lambda' → logprob: -7.18329381942749
    10. ' (' → logprob: -8.058294296264648

Token 738: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003035470610484481
    2. 'lambda' → logprob: -6.003035545349121
    3. ' p' → logprob: -7.753035545349121
    4. ' lambda' → logprob: -9.003035545349121
    5. 'a' → logprob: -11.878035545349121
    6. 'def' → logprob: -16.378034591674805
    7. ' a' → logprob: -16.628034591674805
    8. '(lambda' → logprob: -17.128034591674805
    9. '   ' → logprob: -17.878034591674805
    10. '(p' → logprob: -18.003034591674805

Token 739: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1643519401550293
    2. ',p' → logprob: -1.9143519401550293
    3. 'p' → logprob: -5.914351940155029
    4. 'a' → logprob: -7.539351940155029
    5. '=' → logprob: -7.539351940155029
    6. ',a' → logprob: -8.539352416992188
    7. ':' → logprob: -9.789352416992188
    8. ' ,' → logprob: -10.039352416992188
    9. ' p' → logprob: -10.039352416992188
    10. ' a' → logprob: -12.039352416992188

Token 740: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.635164754698053e-05
    2. 'p' → logprob: -9.625066757202148
    3. ' MOD' → logprob: -15.875066757202148
    4. 'a' → logprob: -16.37506675720215
    5. '(p' → logprob: -17.37506675720215
    6. 'lambda' → logprob: -18.00006675720215
    7. 'mod' → logprob: -18.00006675720215
    8. '(a' → logprob: -18.37506675720215
    9. '(M' → logprob: -18.50006675720215
    10. 'pow' → logprob: -18.87506675720215

Token 741: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014203863975126296
    2. ' :' → logprob: -9.125142097473145
    3. 'a' → logprob: -10.500142097473145
    4. '(a' → logprob: -13.125142097473145
    5. ':(' → logprob: -13.375142097473145
    6. '((' → logprob: -14.125142097473145
    7. ':a' → logprob: -14.625142097473145
    8. ' ((' → logprob: -15.250142097473145
    9. ',' → logprob: -15.750142097473145
    10. '=' → logprob: -16.375141143798828

Token 742: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011048408225178719
    2. ' ((' → logprob: -4.511048316955566
    3. '(((' → logprob: -15.261048316955566
    4. '(a' → logprob: -15.386048316955566
    5. ' ' → logprob: -16.636049270629883
    6. ' (' → logprob: -18.261049270629883
    7. '(' → logprob: -18.886049270629883
    8. ')((' → logprob: -19.636049270629883
    9. '```' → logprob: -20.261049270629883
    10. ' ' → logprob: -20.511049270629883

Token 743: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.2603901015827432e-05
    2. '(a' → logprob: -10.750022888183594
    3. 'b' → logprob: -14.375022888183594
    4. ' a' → logprob: -14.500022888183594
    5. '(b' → logprob: -19.875022888183594
    6. '	a' → logprob: -20.125022888183594
    7. ' (' → logprob: -20.250022888183594
    8. '[a' → logprob: -20.500022888183594
    9. ')a' → logprob: -20.875022888183594
    10. '(' → logprob: -20.875022888183594

Token 744: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -4.763666947837919e-05
    2. ' %' → logprob: -10.00004768371582
    3. '-p' → logprob: -14.00004768371582
    4. 'a' → logprob: -14.50004768371582
    5. '%b' → logprob: -14.50004768371582
    6. '-' → logprob: -15.37504768371582
    7. ' -' → logprob: -17.62504768371582
    8. '%-' → logprob: -17.75004768371582
    9. ')%' → logprob: -17.87504768371582
    10. '-%' → logprob: -18.25004768371582

Token 745: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.5577775128767826e-06
    2. ' p' → logprob: -12.125005722045898
    3. '-p' → logprob: -18.8750057220459
    4. '(p' → logprob: -19.2500057220459
    5. 'b' → logprob: -20.0000057220459
    6. '<p' → logprob: -21.1250057220459
    7. '-' → logprob: -21.1250057220459
    8. '```' → logprob: -21.3750057220459
    9. ')p' → logprob: -21.7500057220459
    10. '+p' → logprob: -22.2500057220459

Token 746: ')-(' (ID: 111485)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.11579759418964386
    2. ' -' → logprob: -2.740797519683838
    3. '-' → logprob: -3.240797519683838
    4. '-b' → logprob: -5.865797519683838
    5. ')-(' → logprob: -6.615797519683838
    6. ')' → logprob: -7.115797519683838
    7. '-a' → logprob: -8.365797996520996
    8. ')-' → logprob: -8.490797996520996
    9. ')%' → logprob: -9.115797996520996
    10. '-%' → logprob: -9.615797996520996

Token 747: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1888679839321412e-05
    2. ' b' → logprob: -10.750021934509277
    3. '(b' → logprob: -14.750021934509277
    4. ')b' → logprob: -18.75002098083496
    5. ' (' → logprob: -19.00002098083496
    6. '   ' → logprob: -19.12502098083496
    7. '	b' → logprob: -19.62502098083496
    8. '```' → logprob: -19.75002098083496
    9. '\b' → logprob: -19.87502098083496
    10. ' ' → logprob: -20.25002098083496

Token 748: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -4.723352049040841e-06
    2. ' %' → logprob: -12.375004768371582
    3. '%b' → logprob: -15.750004768371582
    4. ')%' → logprob: -16.000003814697266
    5. '%x' → logprob: -17.125003814697266
    6. '```' → logprob: -17.625003814697266
    7. '%i' → logprob: -17.875003814697266
    8. '[' → logprob: -18.125003814697266
    9. '()%' → logprob: -19.125003814697266
    10. '%timeout' → logprob: -19.250003814697266

Token 749: 'p' (ID: 79)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18936732411384583
    2. 'p' → logprob: -1.9393672943115234
    3. '%' → logprob: -3.5643672943115234
    4. '%b' → logprob: -8.814367294311523
    5. ' b' → logprob: -8.939367294311523
    6. ' ' → logprob: -10.064367294311523
    7. '```' → logprob: -10.439367294311523
    8. 'mod' → logprob: -11.064367294311523
    9. ' p' → logprob: -11.439367294311523
    10. 'a' → logprob: -12.064367294311523

Token 750: '))' (ID: 915)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00029482474201358855
    2. '%' → logprob: -8.25029468536377
    3. '))' → logprob: -11.25029468536377
    4. '+' → logprob: -11.62529468536377
    5. ')' → logprob: -12.12529468536377
    6. '+p' → logprob: -12.87529468536377
    7. ' )' → logprob: -13.25029468536377
    8. ')+' → logprob: -14.50029468536377
    9. ']%' → logprob: -14.75029468536377
    10. ' +' → logprob: -15.12529468536377

Token 751: '%' (ID: 4)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0007567389984615147
    2. '%' → logprob: -7.250756740570068
    3. ')' → logprob: -10.12575626373291
    4. '+p' → logprob: -12.37575626373291
    5. ']%' → logprob: -14.25075626373291
    6. '+' → logprob: -14.37575626373291
    7. ' %' → logprob: -15.00075626373291
    8. '```' → logprob: -15.25075626373291
    9. ' )' → logprob: -15.75075626373291
    10. '[p' → logprob: -16.250757217407227

Token 752: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -14.625000953674316
    3. 'mod' → logprob: -18.0
    4. '```' → logprob: -19.25
    5. 'MOD' → logprob: -19.5
    6. '(p' → logprob: -19.75
    7. '	p' → logprob: -21.0
    8. '<p' → logprob: -21.125
    9. '{' → logprob: -22.0
    10. '   ' → logprob: -22.0

Token 753: '
' (ID: 198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6333434581756592
    2. '<|end|>' → logprob: -0.8833434581756592
    3. 'def' → logprob: -3.883343458175659
    4. ')' → logprob: -4.508343696594238
    5. '
' → logprob: -4.758343696594238
    6. '%' → logprob: -5.133343696594238
    7. ' mod' → logprob: -5.508343696594238
    8. '```' → logprob: -7.133343696594238
    9. '+' → logprob: -7.508343696594238
    10. ';' → logprob: -7.758343696594238

Token 754: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00424294313415885
    2. '<|end|>' → logprob: -6.379242897033691
    3. '```' → logprob: -6.504242897033691
    4. ')' → logprob: -8.254242897033691
    5. 'mod' → logprob: -8.504242897033691
    6. '#' → logprob: -8.504242897033691
    7. '\' → logprob: -9.629242897033691
    8. 'import' → logprob: -9.629242897033691
    9. '
' → logprob: -9.879242897033691
    10. ';' → logprob: -10.504242897033691

Token 755: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.00015383612480945885
    2. '_mul' → logprob: -9.375153541564941
    3. 'add' → logprob: -9.625153541564941
    4. 'mult' → logprob: -13.625153541564941
    5. 'pow' → logprob: -14.125153541564941
    6. 'Mul' → logprob: -15.125153541564941
    7. ' mul' → logprob: -15.125153541564941
    8. 'div' → logprob: -15.375153541564941
    9. '=' → logprob: -16.250154495239258
    10. 'multiply' → logprob: -16.625154495239258

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08067245781421661
    2. ' =' → logprob: -2.5806725025177
    3. '=lambda' → logprob: -6.330672264099121
    4. 'lambda' → logprob: -15.580672264099121
    5. ' lambda' → logprob: -16.830673217773438
    6. '＝' → logprob: -17.580673217773438
    7. '(lambda' → logprob: -18.205673217773438
    8. '_lambda' → logprob: -20.580673217773438
    9. '=
' → logprob: -20.830673217773438
    10. 'a' → logprob: -20.955673217773438

Token 757: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3869791328907013
    2. ' lambda' → logprob: -1.136979103088379
    3. '(lambda' → logprob: -9.136979103088379
    4. '=lambda' → logprob: -14.636979103088379
    5. '_lambda' → logprob: -18.761980056762695
    6. 'def' → logprob: -19.011980056762695
    7. '.lambda' → logprob: -19.011980056762695
    8. 'lam' → logprob: -20.011980056762695
    9. '```' → logprob: -20.136980056762695
    10. 'ambda' → logprob: -20.761980056762695

Token 758: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10046717524528503
    2. ' a' → logprob: -2.3504672050476074
    3. ' lambda' → logprob: -8.47546672821045
    4. 'lambda' → logprob: -10.10046672821045
    5. '(a' → logprob: -11.72546672821045
    6. ' ' → logprob: -13.10046672821045
    7. '	a' → logprob: -15.22546672821045
    8. '(lambda' → logprob: -15.60046672821045
    9. '   ' → logprob: -16.225467681884766
    10. ' (' → logprob: -16.350467681884766

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006667416077107191
    2. ',a' → logprob: -5.756667613983154
    3. 'a' → logprob: -6.381667613983154
    4. ' ,' → logprob: -6.756667613983154
    5. ' a' → logprob: -7.381667613983154
    6. ',b' → logprob: -13.256667137145996
    7. '(a' → logprob: -13.256667137145996
    8. 'def' → logprob: -13.756667137145996
    9. ',
' → logprob: -14.756667137145996
    10. ' ' → logprob: -15.631667137145996

Token 760: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02975442260503769
    2. ' b' → logprob: -3.529754400253296
    3. ' lambda' → logprob: -13.404754638671875
    4. 'lambda' → logprob: -13.404754638671875
    5. 'a' → logprob: -14.904754638671875
    6. '	b' → logprob: -15.154754638671875
    7. ' ' → logprob: -15.779754638671875
    8. '    ' → logprob: -15.904754638671875
    9. '   ' → logprob: -16.904754638671875
    10. '(b' → logprob: -17.154754638671875

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026261059567332268
    2. ',a' → logprob: -4.276260852813721
    3. 'a' → logprob: -5.026260852813721
    4. ' a' → logprob: -5.776260852813721
    5. ' ,' → logprob: -6.401260852813721
    6. ':' → logprob: -7.776260852813721
    7. '=lambda' → logprob: -9.026261329650879
    8. '(a' → logprob: -9.401261329650879
    9. '=' → logprob: -10.151261329650879
    10. ' :' → logprob: -11.526261329650879

Token 762: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5145346522331238
    2. 'p' → logprob: -1.5145347118377686
    3. ' lambda' → logprob: -1.7645347118377686
    4. 'lambda' → logprob: -4.6395344734191895
    5. ' b' → logprob: -7.2645344734191895
    6. 'b' → logprob: -7.7645344734191895
    7. '(p' → logprob: -9.139534950256348
    8. '(lambda' → logprob: -9.264534950256348
    9. ' (' → logprob: -11.139534950256348
    10. '```' → logprob: -11.389534950256348

Token 763: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.2723104848410003e-05
    2. '=lambda' → logprob: -10.750022888183594
    3. '=p' → logprob: -14.500022888183594
    4. ',' → logprob: -14.875022888183594
    5. '%' → logprob: -15.750022888183594
    6. 'p' → logprob: -15.750022888183594
    7. ':' → logprob: -16.250022888183594
    8. ',p' → logprob: -17.625022888183594
    9. '=(' → logprob: -18.000022888183594
    10. 'MOD' → logprob: -18.125022888183594

Token 764: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10021325200796127
    2. 'p' → logprob: -2.3502132892608643
    3. ' p' → logprob: -12.100213050842285
    4. ' MOD' → logprob: -13.850213050842285
    5. '```' → logprob: -17.4752140045166
    6. ' ' → logprob: -17.4752140045166
    7. '(p' → logprob: -17.6002140045166
    8. '   ' → logprob: -17.9752140045166
    9. '
' → logprob: -18.4752140045166
    10. '_MOD' → logprob: -18.6002140045166

Token 765: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.36574100604048e-06
    2. ' :' → logprob: -12.500004768371582
    3. ':return' → logprob: -15.375004768371582
    4. ':a' → logprob: -15.750004768371582
    5. ':(' → logprob: -16.500003814697266
    6. 'a' → logprob: -16.625003814697266
    7. ',' → logprob: -17.125003814697266
    8. ':`' → logprob: -17.375003814697266
    9. '   ' → logprob: -18.250003814697266
    10. ':
' → logprob: -19.250003814697266

Token 766: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014173151925206184
    2. ' ((' → logprob: -4.2641730308532715
    3. '(a' → logprob: -11.63917350769043
    4. ' (' → logprob: -14.38917350769043
    5. 'a' → logprob: -15.88917350769043
    6. ' ' → logprob: -17.13917350769043
    7. '(((' → logprob: -17.63917350769043
    8. '(' → logprob: -17.88917350769043
    9. ' ' → logprob: -19.51417350769043
    10. ')((' → logprob: -20.13917350769043

Token 767: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0030733791645616293
    2. ' (' → logprob: -6.003073215484619
    3. '((' → logprob: -7.503073215484619
    4. 'a' → logprob: -10.003073692321777
    5. ' ((' → logprob: -14.128073692321777
    6. ' ' → logprob: -16.87807273864746
    7. ' a' → logprob: -17.25307273864746
    8. '   ' → logprob: -17.75307273864746
    9. '(' → logprob: -17.87807273864746
    10. '  ' → logprob: -18.62807273864746

Token 768: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.009112619794905186
    2. ' %' → logprob: -4.75911283493042
    3. '%b' → logprob: -7.63411283493042
    4. '*b' → logprob: -11.884112358093262
    5. ' *' → logprob: -12.384112358093262
    6. '*' → logprob: -13.134112358093262
    7. '*p' → logprob: -15.009112358093262
    8. '%m' → logprob: -15.384112358093262
    9. ' ' → logprob: -16.009113311767578
    10. '%s' → logprob: -16.134113311767578

Token 769: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.4121114822482923e-06
    2. ' p' → logprob: -12.625003814697266
    3. '(p' → logprob: -17.625003814697266
    4. '```' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.875003814697266
    6. 'b' → logprob: -18.875003814697266
    7. '*p' → logprob: -19.125003814697266
    8. ' ' → logprob: -19.500003814697266
    9. '<p' → logprob: -20.125003814697266
    10. ')p' → logprob: -21.250003814697266

Token 770: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.07206957042217255
    2. ')*(' → logprob: -3.3220696449279785
    3. '*' → logprob: -4.3220696449279785
    4. '*(' → logprob: -4.5720696449279785
    5. ' *' → logprob: -4.8220696449279785
    6. '*p' → logprob: -6.6970696449279785
    7. ')*' → logprob: -7.6970696449279785
    8. ')' → logprob: -9.44706916809082
    9. '*a' → logprob: -10.94706916809082
    10. ')%' → logprob: -12.19706916809082

Token 771: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0019485102966427803
    2. ')%' → logprob: -6.251948356628418
    3. ' %' → logprob: -11.001948356628418
    4. ')' → logprob: -12.876948356628418
    5. 'p' → logprob: -14.751948356628418
    6. '%)' → logprob: -16.376949310302734
    7. '```' → logprob: -16.876949310302734
    8. '%b' → logprob: -17.126949310302734
    9. ']%' → logprob: -17.626949310302734
    10. '%c' → logprob: -18.001949310302734

Token 772: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7432603272027336e-06
    2. ' p' → logprob: -13.500001907348633
    3. '%' → logprob: -16.125001907348633
    4. 'b' → logprob: -16.250001907348633
    5. '```' → logprob: -17.875001907348633
    6. '(p' → logprob: -18.375001907348633
    7. ')p' → logprob: -18.375001907348633
    8. '<p' → logprob: -18.500001907348633
    9. 'mod' → logprob: -18.750001907348633
    10. '*p' → logprob: -19.625001907348633

Token 773: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00017040544480551034
    2. ')' → logprob: -8.750170707702637
    3. '%' → logprob: -11.375170707702637
    4. ' )' → logprob: -15.000170707702637
    5. ')p' → logprob: -16.75016975402832
    6. ']%' → logprob: -17.87516975402832
    7. '   ' → logprob: -19.62516975402832
    8. '}%' → logprob: -19.75016975402832
    9. '+p' → logprob: -20.12516975402832
    10. ' %' → logprob: -20.37516975402832

Token 774: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. ' p' → logprob: -14.75
    3. 'MOD' → logprob: -21.125
    4. '```' → logprob: -22.25
    5. '<p' → logprob: -22.5
    6. '{' → logprob: -22.625
    7. '*p' → logprob: -22.625
    8. '(p' → logprob: -23.0
    9. 'mod' → logprob: -23.5
    10. '	p' → logprob: -23.625

Token 775: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07730280607938766
    2. '<|end|>' → logprob: -3.4523026943206787
    3. 'mod' → logprob: -3.8273026943206787
    4. '
' → logprob: -4.827302932739258
    5. ')' → logprob: -5.327302932739258
    6. '%' → logprob: -5.952302932739258
    7. ',' → logprob: -6.702302932739258
    8. '#' → logprob: -6.827302932739258
    9. '```' → logprob: -7.452302932739258
    10. ' mod' → logprob: -7.702302932739258

Token 776: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2628589868545532
    2. ')' → logprob: -2.2628588676452637
    3. '<|end|>' → logprob: -2.3878588676452637
    4. '#' → logprob: -3.5128588676452637
    5. '```' → logprob: -6.887858867645264
    6. ';' → logprob: -7.387858867645264
    7. 'import' → logprob: -7.387858867645264
    8. '<|end|>' → logprob: -7.512858867645264
    9. 'mod' → logprob: -7.887858867645264
    10. ',' → logprob: -8.012859344482422

Token 777: 'div' (ID: 862)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3376648426055908
    2. 'div' → logprob: -1.3376648426055908
    3. 'exp' → logprob: -4.087664604187012
    4. 'mul' → logprob: -5.462664604187012
    5. 'inv' → logprob: -5.837664604187012
    6. 'add' → logprob: -9.337664604187012
    7. '_pow' → logprob: -10.712664604187012
    8. '_div' → logprob: -10.962664604187012
    9. 'divide' → logprob: -11.712664604187012
    10. '```' → logprob: -12.087664604187012

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4756200909614563
    2. '=' → logprob: -0.9756200909614563
    3. '=lambda' → logprob: -6.475620269775391
    4. ' ' → logprob: -14.85062026977539
    5. 'a' → logprob: -15.22562026977539
    6. '<|end|>' → logprob: -15.35062026977539
    7. 'lambda' → logprob: -15.47562026977539
    8. '＝' → logprob: -16.97562026977539
    9. 'ambda' → logprob: -16.97562026977539
    10. 'b' → logprob: -17.22562026977539

Token 779: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3869348466396332
    2. 'lambda' → logprob: -1.1369348764419556
    3. '(lambda' → logprob: -9.761935234069824
    4. '=lambda' → logprob: -12.011935234069824
    5. 'ambda' → logprob: -17.261934280395508
    6. '_lambda' → logprob: -17.636934280395508
    7. 'def' → logprob: -17.761934280395508
    8. '.lambda' → logprob: -18.136934280395508
    9. ' lamb' → logprob: -18.261934280395508
    10. '```' → logprob: -18.761934280395508

Token 780: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010418390855193138
    2. 'lambda' → logprob: -4.76041841506958
    3. ' a' → logprob: -6.63541841506958
    4. ' lambda' → logprob: -7.63541841506958
    5. '(a' → logprob: -12.885417938232422
    6. '=lambda' → logprob: -13.510417938232422
    7. 'def' → logprob: -13.635417938232422
    8. '(lambda' → logprob: -14.135417938232422
    9. '	a' → logprob: -16.885417938232422
    10. ' ' → logprob: -17.260417938232422

Token 781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012190054985694587
    2. ' ,' → logprob: -9.3751220703125
    3. ',a' → logprob: -10.8751220703125
    4. 'a' → logprob: -11.1251220703125
    5. ',b' → logprob: -13.2501220703125
    6. ' a' → logprob: -14.5001220703125
    7. 'mod' → logprob: -14.7501220703125
    8. '_,' → logprob: -15.3751220703125
    9. ',p' → logprob: -15.6251220703125
    10. '=' → logprob: -16.7501220703125

Token 782: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ' ' → logprob: -20.139163970947266
    4. 'mod' → logprob: -21.264163970947266
    5. '	b' → logprob: -21.889163970947266
    6. '(b' → logprob: -22.139163970947266
    7. 'def' → logprob: -22.389163970947266
    8. 'B' → logprob: -22.514163970947266
    9. '   ' → logprob: -23.139163970947266
    10. '$b' → logprob: -23.639163970947266

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034380643046461046
    2. ',p' → logprob: -8.125344276428223
    3. ' ,' → logprob: -10.125344276428223
    4. 'a' → logprob: -12.875344276428223
    5. ',a' → logprob: -12.875344276428223
    6. ' mod' → logprob: -14.375344276428223
    7. '%' → logprob: -14.500344276428223
    8. ',b' → logprob: -14.875344276428223
    9. 'mod' → logprob: -15.375344276428223
    10. ',
' → logprob: -15.375344276428223

Token 784: ' p' (ID: 275)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12012859433889389
    2. 'p' → logprob: -2.620128631591797
    3. 'lambda' → logprob: -3.245128631591797
    4. ' lambda' → logprob: -6.870128631591797
    5. ' b' → logprob: -8.245128631591797
    6. 'a' → logprob: -9.745128631591797
    7. ' p' → logprob: -9.995128631591797
    8. 'mod' → logprob: -11.495128631591797
    9. 'def' → logprob: -11.620128631591797
    10. '(lambda' → logprob: -12.620128631591797

Token 785: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001502636878285557
    2. ',' → logprob: -9.250150680541992
    3. '%' → logprob: -10.250150680541992
    4. 'MOD' → logprob: -11.000150680541992
    5. ',p' → logprob: -13.875150680541992
    6. 'mod' → logprob: -15.375150680541992
    7. 'p' → logprob: -15.375150680541992
    8. '=p' → logprob: -16.250150680541992
    9. ':' → logprob: -16.375150680541992
    10. '_MOD' → logprob: -16.625150680541992

Token 786: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001170460251159966
    2. 'p' → logprob: -6.751170635223389
    3. 'mod' → logprob: -16.251171112060547
    4. '_MOD' → logprob: -17.501171112060547
    5. '(p' → logprob: -17.501171112060547
    6. ' MOD' → logprob: -18.126171112060547
    7. 'MODE' → logprob: -18.126171112060547
    8. 'b' → logprob: -18.376171112060547
    9. 'MO' → logprob: -18.876171112060547
    10. 'int' → logprob: -19.001171112060547

Token 787: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.796184723294573e-06
    2. ' :' → logprob: -12.125005722045898
    3. ':a' → logprob: -15.875005722045898
    4. ':return' → logprob: -16.3750057220459
    5. 'a' → logprob: -16.8750057220459
    6. ':(' → logprob: -17.0000057220459
    7. '=' → logprob: -17.7500057220459
    8. ',' → logprob: -18.2500057220459
    9. '(a' → logprob: -19.0000057220459
    10. ':
' → logprob: -19.7500057220459

Token 788: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.381063312292099
    2. '(a' → logprob: -1.6310633420944214
    3. '(mod' → logprob: -2.256063222885132
    4. ' mod' → logprob: -4.756063461303711
    5. ' (' → logprob: -4.881063461303711
    6. 'a' → logprob: -8.881063461303711
    7. '((' → logprob: -10.381063461303711
    8. 'pow' → logprob: -11.756063461303711
    9. ' a' → logprob: -12.256063461303711
    10. '(m' → logprob: -12.756063461303711

Token 789: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -4.320199877838604e-07
    2. 'inv' → logprob: -16.0
    3. 'mod' → logprob: -16.375
    4. 'div' → logprob: -16.625
    5. '_mul' → logprob: -17.625
    6. ' mul' → logprob: -17.75
    7. 'pow' → logprob: -18.25
    8. 'multip' → logprob: -19.875
    9. '.mul' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 790: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015034328680485487
    2. 'a' → logprob: -6.5015034675598145
    3. ' a' → logprob: -14.376502990722656
    4. 'def' → logprob: -15.626502990722656
    5. ' (' → logprob: -15.751502990722656
    6. '(' → logprob: -15.751502990722656
    7. ',' → logprob: -18.501502990722656
    8. 'mod' → logprob: -18.626502990722656
    9. '#a' → logprob: -18.751502990722656
    10. ',a' → logprob: -19.126502990722656

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4966985285282135
    2. 'a' → logprob: -0.9966984987258911
    3. '(a' → logprob: -4.496698379516602
    4. ',a' → logprob: -4.496698379516602
    5. ' a' → logprob: -10.371698379516602
    6. 'mod' → logprob: -10.496698379516602
    7. ' ,' → logprob: -11.246698379516602
    8. ',b' → logprob: -13.121698379516602
    9. '(mod' → logprob: -13.996698379516602
    10. '(' → logprob: -14.621698379516602

Token 792: ' pow' (ID: 9779)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00047928967978805304
    2. ' mod' → logprob: -7.875479221343994
    3. 'b' → logprob: -9.875479698181152
    4. 'pow' → logprob: -10.125479698181152
    5. '(mod' → logprob: -11.875479698181152
    6. '	mod' → logprob: -14.375479698181152
    7. '   ' → logprob: -16.625478744506836
    8. ' pow' → logprob: -17.125478744506836
    9. ' b' → logprob: -17.500478744506836
    10. 'int' → logprob: -18.000478744506836

Token 793: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5759398937225342
    2. 'b' → logprob: -0.8259398937225342
    3. 'mod' → logprob: -15.450940132141113
    4. ')b' → logprob: -16.325939178466797
    5. '	b' → logprob: -16.700939178466797
    6. ' b' → logprob: -17.200939178466797
    7. 'def' → logprob: -17.700939178466797
    8. ',b' → logprob: -17.700939178466797
    9. '(' → logprob: -17.825939178466797
    10. '```' → logprob: -18.825939178466797

Token 794: ',' (ID: 11)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.21527156233787537
    2. ',' → logprob: -2.215271472930908
    3. '(p' → logprob: -2.965271472930908
    4. 'p' → logprob: -3.465271472930908
    5. 'a' → logprob: -7.590271472930908
    6. '-p' → logprob: -7.590271472930908
    7. '-' → logprob: -7.840271472930908
    8. 'mod' → logprob: -9.090271949768066
    9. ',-' → logprob: -9.340271949768066
    10. '(-' → logprob: -9.715271949768066

Token 795: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.650518920039758e-06
    2. '-' → logprob: -13.125003814697266
    3. ' p' → logprob: -13.500003814697266
    4. '-p' → logprob: -15.875003814697266
    5. '<p' → logprob: -18.125003814697266
    6. 'MOD' → logprob: -18.625003814697266
    7. '```' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.250003814697266
    9. '(p' → logprob: -19.250003814697266
    10. '	p' → logprob: -20.125003814697266

Token 796: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0445127372804563e-05
    2. ' -' → logprob: -11.75001049041748
    3. 'p' → logprob: -13.00001049041748
    4. '-p' → logprob: -15.12501049041748
    5. '{-' → logprob: -17.750009536743164
    6. '−' → logprob: -17.875009536743164
    7. '–' → logprob: -19.125009536743164
    8. '(p' → logprob: -19.625009536743164
    9. ' p' → logprob: -19.875009536743164
    10. '```' → logprob: -20.375009536743164

Token 797: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.875
    3. ' ' → logprob: -17.625
    4. '```' → logprob: -19.625
    5. '
' → logprob: -21.375
    6. 'p' → logprob: -21.5
    7. '۲' → logprob: -21.875
    8. '   ' → logprob: -22.0
    9. '２' → logprob: -22.375
    10. '3' → logprob: -22.9375

Token 798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030369818210601807
    2. ',p' → logprob: -3.530369758605957
    3. 'p' → logprob: -7.905369758605957
    4. ' ,' → logprob: -8.655369758605957
    5. '-' → logprob: -9.655369758605957
    6. ' p' → logprob: -12.405369758605957
    7. '%' → logprob: -13.030369758605957
    8. ')' → logprob: -13.155369758605957
    9. ' -' → logprob: -13.530369758605957
    10. 'mod' → logprob: -14.905369758605957

Token 799: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.0126840758603066e-05
    2. ' p' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.50004005432129
    4. '<p' → logprob: -18.25004005432129
    5. '```' → logprob: -18.50004005432129
    6. ')p' → logprob: -19.00004005432129
    7. ')' → logprob: -19.50004005432129
    8. '	p' → logprob: -19.62504005432129
    9. ',p' → logprob: -19.75004005432129
    10. ' ' → logprob: -20.37504005432129

Token 800: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049198903143405914
    2. ',p' → logprob: -3.049198865890503
    3. '))' → logprob: -7.799199104309082
    4. ' ,' → logprob: -9.549199104309082
    5. ')' → logprob: -9.799199104309082
    6. '),' → logprob: -10.424199104309082
    7. 'p' → logprob: -10.549199104309082
    8. ')%' → logprob: -11.299199104309082
    9. ')p' → logprob: -13.049199104309082
    10. '%' → logprob: -14.174199104309082

Token 801: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.246537173457909e-06
    2. ' p' → logprob: -12.375003814697266
    3. ')' → logprob: -19.125003814697266
    4. ')p' → logprob: -20.625003814697266
    5. '```' → logprob: -21.750003814697266
    6. '<p' → logprob: -22.250003814697266
    7. '	p' → logprob: -22.375003814697266
    8. '
' → logprob: -22.625003814697266
    9. '   ' → logprob: -22.875003814697266
    10. ' ' → logprob: -23.375003814697266

Token 802: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.250001907348633
    3. ')#' → logprob: -15.500001907348633
    4. ')p' → logprob: -15.500001907348633
    5. ')return' → logprob: -15.500001907348633
    6. ')
' → logprob: -16.625001907348633
    7. '))' → logprob: -16.750001907348633
    8. ')a' → logprob: -17.875001907348633
    9. ')`' → logprob: -18.250001907348633
    10. '),' → logprob: -18.250001907348633

Token 803: 'r' (ID: 81)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37420788407325745
    2. '<|end|>' → logprob: -1.999207854270935
    3. ':' → logprob: -2.3742079734802246
    4. 'def' → logprob: -3.3742079734802246
    5. '):' → logprob: -4.124207973480225
    6. '
' → logprob: -4.624207973480225
    7. '[' → logprob: -4.749207973480225
    8. '#' → logprob: -5.874207973480225
    9. '```' → logprob: -5.874207973480225
    10. ')
' → logprob: -6.499207973480225

Token 804: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.20283333957195282
    2. 'eturn' → logprob: -2.577833414077759
    3. 'e' → logprob: -3.327833414077759
    4. ' =' → logprob: -4.07783317565918
    5. '=' → logprob: -4.32783317565918
    6. 'ead' → logprob: -4.70283317565918
    7. 'def' → logprob: -4.82783317565918
    8. 'ef' → logprob: -5.57783317565918
    9. 'es' → logprob: -5.95283317565918
    10. 'range' → logprob: -6.07783317565918

Token 805: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.049452174454927444
    2. '0' → logprob: -3.549452066421509
    3. '5' → logprob: -5.174452304840088
    4. 'map' → logprob: -5.799452304840088
    5. '3' → logprob: -6.049452304840088
    6. '1' → logprob: -6.424452304840088
    7. 'range' → logprob: -6.549452304840088
    8. 'input' → logprob: -6.799452304840088
    9. '[int' → logprob: -7.174452304840088
    10. '10' → logprob: -7.424452304840088

Token 806: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10158532857894897
    2. 'int' → logprob: -3.4765853881835938
    3. 'x' → logprob: -3.6015853881835938
    4. ':int' → logprob: -4.351585388183594
    5. 'n' → logprob: -4.601585388183594
    6. ' x' → logprob: -5.226585388183594
    7. 'lambda' → logprob: -5.851585388183594
    8. 'a' → logprob: -6.101585388183594
    9. ' :' → logprob: -6.476585388183594
    10. 's' → logprob: -7.101585388183594

Token 807: ' sys' (ID: 12228)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004264065530151129
    2. 'map' → logprob: -5.504263877868652
    3. 'sys' → logprob: -9.129263877868652
    4. ' int' → logprob: -9.879263877868652
    5. ' map' → logprob: -11.879263877868652
    6. 'list' → logprob: -12.004263877868652
    7. 'input' → logprob: -12.254263877868652
    8. '[int' → logprob: -12.754263877868652
    9. 'tuple' → logprob: -13.254263877868652
    10. '0' → logprob: -13.379263877868652

Token 808: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.184812031686306e-05
    2. 'stdin' → logprob: -9.625082015991211
    3. '.readline' → logprob: -11.250082015991211
    4. '.stdout' → logprob: -13.125082015991211
    5. '.argv' → logprob: -15.125082015991211
    6. '.' → logprob: -15.875082015991211
    7. '.stderr' → logprob: -16.00008201599121
    8. '(stdin' → logprob: -16.37508201599121
    9. '.std' → logprob: -17.87508201599121
    10. ' stdin' → logprob: -18.25008201599121

Token 809: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.127333340875339e-06
    2. '.buffer' → logprob: -13.000003814697266
    3. '.read' → logprob: -13.625003814697266
    4. '.' → logprob: -15.500003814697266
    5. 'buffer' → logprob: -15.500003814697266
    6. ' readline' → logprob: -16.000003814697266
    7. 'read' → logprob: -16.500003814697266
    8. '.readlines' → logprob: -18.625003814697266
    9. '.stdin' → logprob: -18.750003814697266
    10. '_buffer' → logprob: -19.750003814697266

Token 810: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6351454854011536
    2. '()' → logprob: -0.7601454854011536
    3. '<|end|>' → logprob: -6.385145664215088
    4. '()<' → logprob: -8.38514518737793
    5. '()
' → logprob: -8.88514518737793
    6. '()[' → logprob: -9.51014518737793
    7. '.readline' → logprob: -9.63514518737793
    8. '()\' → logprob: -9.76014518737793
    9. '().__' → logprob: -10.13514518737793
    10. '.strip' → logprob: -10.26014518737793

Token 811: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02975141443312168
    2. 'rstrip' → logprob: -3.5297513008117676
    3. 'read' → logprob: -14.154751777648926
    4. ' strip' → logprob: -15.529751777648926
    5. 'str' → logprob: -17.02975082397461
    6. '_strip' → logprob: -17.90475082397461
    7. '-strip' → logprob: -18.77975082397461
    8. 'decode' → logprob: -20.27975082397461
    9. 'split' → logprob: -20.27975082397461
    10. '.rstrip' → logprob: -20.40475082397461

Token 812: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15207047760486603
    2. 'def' → logprob: -2.1520705223083496
    3. '
' → logprob: -5.02707052230835
    4. '#' → logprob: -5.15207052230835
    5. '<|end|>' → logprob: -5.27707052230835
    6. '(' → logprob: -6.52707052230835
    7. ')' → logprob: -7.15207052230835
    8. '()
' → logprob: -7.27707052230835
    9. 'r' → logprob: -7.65207052230835
    10. '()\' → logprob: -8.152070045471191

Token 813: 'R' (ID: 49)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6179865598678589
    2. '()' → logprob: -0.9929865598678589
    3. '=' → logprob: -3.6179866790771484
    4. '().' → logprob: -4.492986679077148
    5. 'C' → logprob: -4.867986679077148
    6. 'aw' → logprob: -4.992986679077148
    7. 'AW' → logprob: -5.117986679077148
    8. 'E' → logprob: -5.367986679077148
    9. ',' → logprob: -5.867986679077148
    10. 'ange' → logprob: -5.992986679077148

Token 815: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6696704626083374
    2. 'range' → logprob: -1.2946704626083374
    3. 'lambda' → logprob: -1.6696704626083374
    4. 'r' → logprob: -4.544670581817627
    5. 'sys' → logprob: -5.169670581817627
    6. ' lambda' → logprob: -5.294670581817627
    7. ' range' → logprob: -6.544670581817627
    8. '(lambda' → logprob: -7.419670581817627
    9. ' int' → logprob: -7.544670581817627
    10. ' ' → logprob: -7.669670581817627

Token 816: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5117862224578857
    2. ':' → logprob: -1.5117862224578857
    3. 'sys' → logprob: -1.7617862224578857
    4. ' sys' → logprob: -6.136786460876465
    5. ':int' → logprob: -6.261786460876465
    6. 'lambda' → logprob: -6.386786460876465
    7. '():' → logprob: -6.761786460876465
    8. 'r' → logprob: -8.011786460876465
    9. ' int' → logprob: -8.136786460876465
    10. '()' → logprob: -8.636786460876465

Token 817: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2573009431362152
    2. 'map' → logprob: -1.7573009729385376
    3. 'list' → logprob: -3.007300853729248
    4. 'sys' → logprob: -5.382300853729248
    5. 'tuple' → logprob: -8.257301330566406
    6. '[int' → logprob: -10.632301330566406
    7. ' map' → logprob: -11.257301330566406
    8. 'range' → logprob: -11.632301330566406
    9. ' int' → logprob: -11.757301330566406
    10. 'input' → logprob: -12.132301330566406

Token 818: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.696889623621246e-06
    2. '(int' → logprob: -13.62500286102295
    3. 'map' → logprob: -13.87500286102295
    4. '(' → logprob: -15.75000286102295
    5. '(sys' → logprob: -16.250001907348633
    6. '()' → logprob: -16.375001907348633
    7. ' map' → logprob: -16.625001907348633
    8. '(r' → logprob: -16.750001907348633
    9. '(range' → logprob: -17.125001907348633
    10. '_map' → logprob: -17.500001907348633

Token 819: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038044705986976624
    2. 'int' → logprob: -3.2880446910858154
    3. ',int' → logprob: -14.038044929504395
    4. '
' → logprob: -14.913044929504395
    5. '=int' → logprob: -14.913044929504395
    6. ' int' → logprob: -15.038044929504395
    7. '[int' → logprob: -15.038044929504395
    8. 'r' → logprob: -15.538044929504395
    9. 'str' → logprob: -15.663044929504395
    10. '	int' → logprob: -15.788044929504395

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2808489203453064
    2. '(r' → logprob: -1.5308489799499512
    3. ',r' → logprob: -3.780848979949951
    4. 'r' → logprob: -5.655848979949951
    5. 'sys' → logprob: -6.655848979949951
    6. '(sys' → logprob: -7.030848979949951
    7. ')' → logprob: -11.280848503112793
    8. ' ,' → logprob: -12.280848503112793
    9. '(' → logprob: -12.530848503112793
    10. '
' → logprob: -12.905848503112793

Token 821: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1602560132741928
    2. 'sys' → logprob: -1.910256028175354
    3. ' r' → logprob: -11.160256385803223
    4. 'input' → logprob: -11.910256385803223
    5. ' sys' → logprob: -12.035256385803223
    6. 'lambda' → logprob: -12.535256385803223
    7. '(sys' → logprob: -14.660256385803223
    8. 'str' → logprob: -15.160256385803223
    9. 's' → logprob: -16.160255432128906
    10. 'range' → logprob: -16.410255432128906

Token 822: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -14.250001907348633
    3. '.' → logprob: -15.125001907348633
    4. '().__' → logprob: -16.000001907348633
    5. '.split' → logprob: -16.000001907348633
    6. ' ().' → logprob: -16.000001907348633
    7. '))' → logprob: -16.750001907348633
    8. '()))' → logprob: -18.125001907348633
    9. '()[' → logprob: -18.250001907348633
    10. '.strip' → logprob: -18.375001907348633

Token 823: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4974866644479334e-05
    2. 'strip' → logprob: -11.375015258789062
    3. 'rstrip' → logprob: -13.125015258789062
    4. ' split' → logprob: -14.000015258789062
    5. '(split' → logprob: -14.625015258789062
    6. '.split' → logprob: -15.625015258789062
    7. 'spl' → logprob: -16.750015258789062
    8. '().' → logprob: -16.750015258789062
    9. 'plit' → logprob: -18.500015258789062
    10. '```' → logprob: -19.125015258789062

Token 824: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3157673180103302
    2. '()))' → logprob: -1.3157672882080078
    3. '()' → logprob: -6.190767288208008
    4. '()))
' → logprob: -7.940767288208008
    5. '))
' → logprob: -9.315767288208008
    6. '()));' → logprob: -13.190767288208008
    7. ')))' → logprob: -13.565767288208008
    8. ' ))' → logprob: -13.690767288208008
    9. '())' → logprob: -13.690767288208008
    10. '(' → logprob: -14.315767288208008

Token 825: 'R' (ID: 49)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10277385264635086
    2. '#' → logprob: -2.852773904800415
    3. ')' → logprob: -4.352773666381836
    4. 'r' → logprob: -5.477773666381836
    5. '<|end|>' → logprob: -5.602773666381836
    6. 'for' → logprob: -5.852773666381836
    7. 'class' → logprob: -6.102773666381836
    8. 'R' → logprob: -6.227773666381836
    9. 'D' → logprob: -6.477773666381836
    10. '```' → logprob: -6.852773666381836

Token 826: '_t' (ID: 838)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015164113137871027
    2. '()[' → logprob: -7.376516342163086
    3. '<|end|>' → logprob: -7.501516342163086
    4. '())' → logprob: -9.376516342163086
    5. ')' → logprob: -9.376516342163086
    6. '()>' → logprob: -10.001516342163086
    7. '()
' → logprob: -10.251516342163086
    8. '()]' → logprob: -10.751516342163086
    9. 'def' → logprob: -10.876516342163086
    10. '()<' → logprob: -11.126516342163086

Token 827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2273184061050415
    2. ' =' → logprob: -1.7273184061050415
    3. '=lambda' → logprob: -3.727318286895752
    4. '()' → logprob: -7.352318286895752
    5. 'lambda' → logprob: -7.977318286895752
    6. 'ype' → logprob: -8.97731876373291
    7. 't' → logprob: -9.60231876373291
    8. 'uple' → logprob: -9.72731876373291
    9. 'def' → logprob: -10.35231876373291
    10. '(lambda' → logprob: -10.35231876373291

Token 828: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0016295980894938111
    2. ' lambda' → logprob: -6.501629829406738
    3. '(lambda' → logprob: -9.001629829406738
    4. '  ' → logprob: -13.501629829406738
    5. '   ' → logprob: -14.126629829406738
    6. '    ' → logprob: -14.376629829406738
    7. 'int' → logprob: -14.626629829406738
    8. '```' → logprob: -15.001629829406738
    9. ' ' → logprob: -15.251629829406738
    10. '=lambda' → logprob: -15.376629829406738

Token 829: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6177585124969482
    2. ':' → logprob: -0.8677585124969482
    3. 'list' → logprob: -4.242758750915527
    4. 'int' → logprob: -4.367758750915527
    5. 'sys' → logprob: -5.117758750915527
    6. 'r' → logprob: -5.617758750915527
    7. ' lambda' → logprob: -6.492758750915527
    8. '(lambda' → logprob: -6.992758750915527
    9. 'map' → logprob: -7.867758750915527
    10. 't' → logprob: -8.867758750915527

Token 830: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0061270371079444885
    2. 'int' → logprob: -5.256126880645752
    3. 'list' → logprob: -7.256126880645752
    4. ' tuple' → logprob: -9.13112735748291
    5. 'map' → logprob: -10.25612735748291
    6. '[int' → logprob: -11.13112735748291
    7. '[' → logprob: -11.25612735748291
    8. '(int' → logprob: -11.88112735748291
    9. 'lambda' → logprob: -12.38112735748291
    10. '(tuple' → logprob: -12.88112735748291

Token 831: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6076591610908508
    2. 'map' → logprob: -0.8576591610908508
    3. '(int' → logprob: -4.107659339904785
    4. 'int' → logprob: -4.232659339904785
    5. '[int' → logprob: -8.607659339904785
    6. '(lambda' → logprob: -10.732659339904785
    7. ' map' → logprob: -11.107659339904785
    8. 'R' → logprob: -11.732659339904785
    9. 'lambda' → logprob: -11.982659339904785
    10. '()' → logprob: -12.107659339904785

Token 832: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022604703903198
    2. '(int' → logprob: -1.9102261066436768
    3. '=int' → logprob: -14.035225868225098
    4. ' int' → logprob: -14.785225868225098
    5. '[int' → logprob: -14.785225868225098
    6. '<int' → logprob: -15.910225868225098
    7. ',int' → logprob: -17.410226821899414
    8. 'r' → logprob: -17.535226821899414
    9. '	int' → logprob: -17.660226821899414
    10. 'R' → logprob: -17.660226821899414

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021371787413954735
    2. '(r' → logprob: -3.896371841430664
    3. ',r' → logprob: -7.271371841430664
    4. 'r' → logprob: -9.021371841430664
    5. ')' → logprob: -11.896371841430664
    6. '   ' → logprob: -13.396371841430664
    7. ' ,' → logprob: -14.146371841430664
    8. '(),' → logprob: -14.521371841430664
    9. 'import' → logprob: -14.771371841430664
    10. '),' → logprob: -14.896371841430664

Token 834: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013269031187519431
    2. ' r' → logprob: -6.626327037811279
    3. 'R' → logprob: -14.876326560974121
    4. '_r' → logprob: -15.376326560974121
    5. ' ' → logprob: -15.751326560974121
    6. '(r' → logprob: -16.376327514648438
    7. 'sys' → logprob: -16.376327514648438
    8. ' ' → logprob: -16.751327514648438
    9. '	r' → logprob: -16.938827514648438
    10. '
' → logprob: -17.501327514648438

Token 835: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.125001907348633
    3. '.split' → logprob: -16.875001907348633
    4. '()))' → logprob: -16.875001907348633
    5. '()[' → logprob: -17.125001907348633
    6. ' ().' → logprob: -17.375001907348633
    7. '().__' → logprob: -17.500001907348633
    8. '))' → logprob: -17.625001907348633
    9. '.' → logprob: -18.500001907348633
    10. '   ' → logprob: -20.125001907348633

Token 836: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.625000953674316
    3. ' split' → logprob: -15.750000953674316
    4. '
' → logprob: -17.375
    5. '(split' → logprob: -18.125
    6. ')' → logprob: -18.125
    7. '.split' → logprob: -18.25
    8. 'spl' → logprob: -19.5
    9. 'plit' → logprob: -20.5
    10. '()' → logprob: -20.625

Token 837: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006116847973316908
    2. '()))' → logprob: -5.13111686706543
    3. '()' → logprob: -9.13111686706543
    4. ')' → logprob: -9.75611686706543
    5. '())' → logprob: -11.13111686706543
    6. '))
' → logprob: -12.00611686706543
    7. ')))' → logprob: -14.50611686706543
    8. '()))
' → logprob: -14.50611686706543
    9. ' ))' → logprob: -17.00611686706543
    10. '))

' → logprob: -17.63111686706543

Token 838: 'R' (ID: 49)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46566537022590637
    2. '<|end|>' → logprob: -1.465665340423584
    3. '#' → logprob: -2.215665340423584
    4. ')' → logprob: -4.840665340423584
    5. '```' → logprob: -4.965665340423584
    6. '...' → logprob: -4.965665340423584
    7. '<|end|>' → logprob: -5.590665340423584
    8. 'for' → logprob: -6.965665340423584
    9. 'class' → logprob: -7.215665340423584
    10. '[' → logprob: -7.340665340423584

Token 839: 'map' (ID: 3726)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004551996476948261
    2. '_t' → logprob: -6.004551887512207
    3. ' =' → logprob: -7.004551887512207
    4. '=' → logprob: -7.629551887512207
    5. '_' → logprob: -9.004551887512207
    6. '()
' → logprob: -9.754551887512207
    7. '<|end|>' → logprob: -9.754551887512207
    8. 't' → logprob: -10.129551887512207
    9. '()[' → logprob: -10.129551887512207
    10. '()>' → logprob: -10.129551887512207

Token 840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2322711944580078
    2. ' =' → logprob: -1.6072711944580078
    3. '=lambda' → logprob: -5.107271194458008
    4. '(' → logprob: -7.857271194458008
    5. '(lambda' → logprob: -8.482271194458008
    6. '()' → logprob: -9.607271194458008
    7. ',' → logprob: -10.982271194458008
    8. 's' → logprob: -10.982271194458008
    9. '.' → logprob: -11.482271194458008
    10. '=int' → logprob: -11.732271194458008

Token 841: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18357691168785095
    2. ' lambda' → logprob: -1.9335769414901733
    3. 'map' → logprob: -4.058577060699463
    4. '(lambda' → logprob: -5.308577060699463
    5. ' map' → logprob: -7.433577060699463
    6. 'list' → logprob: -8.433576583862305
    7. '=lambda' → logprob: -11.058576583862305
    8. '   ' → logprob: -11.433576583862305
    9. ' list' → logprob: -11.808576583862305
    10. '    ' → logprob: -12.558576583862305

Token 842: ':' (ID: 25)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7654662728309631
    2. 'list' → logprob: -1.5154662132263184
    3. 'lambda' → logprob: -1.6404662132263184
    4. 'int' → logprob: -2.5154662132263184
    5. 'sys' → logprob: -3.5154662132263184
    6. ' map' → logprob: -5.140466213226318
    7. 'r' → logprob: -6.640466213226318
    8. ':' → logprob: -6.890466213226318
    9. ' lambda' → logprob: -7.140466213226318
    10. ' list' → logprob: -7.640466213226318

Token 843: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01816340535879135
    2. 'list' → logprob: -4.018163204193115
    3. ' map' → logprob: -12.143163681030273
    4. 'dict' → logprob: -12.518163681030273
    5. 'lambda' → logprob: -12.893163681030273
    6. 'tuple' → logprob: -14.143163681030273
    7. 'sys' → logprob: -14.893163681030273
    8. 'range' → logprob: -15.518163681030273
    9. '(map' → logprob: -15.518163681030273
    10. '[' → logprob: -16.268163681030273

Token 844: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005234594456851482
    2. 'int' → logprob: -5.255234718322754
    3. '<int' → logprob: -15.755234718322754
    4. '(lambda' → logprob: -15.880234718322754
    5. '[int' → logprob: -16.130233764648438
    6. ' int' → logprob: -16.255233764648438
    7. '=int' → logprob: -16.255233764648438
    8. 'r' → logprob: -16.880233764648438
    9. 'func' → logprob: -17.630233764648438
    10. 'R' → logprob: -17.755233764648438

Token 845: ',' (ID: 11)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.004858953412622213
    2. '(sys' → logprob: -6.00485897064209
    3. 'r' → logprob: -7.25485897064209
    4. ',' → logprob: -7.25485897064209
    5. ')' → logprob: -7.62985897064209
    6. '(' → logprob: -8.00485897064209
    7. ',r' → logprob: -9.37985897064209
    8. '()' → logprob: -11.25485897064209
    9. '())' → logprob: -11.25485897064209
    10. ')(' → logprob: -11.87985897064209

Token 846: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01842675916850567
    2. 'sys' → logprob: -4.018426895141602
    3. ' r' → logprob: -8.393426895141602
    4. ' sys' → logprob: -10.518426895141602
    5. 'input' → logprob: -10.893426895141602
    6. '(sys' → logprob: -13.518426895141602
    7. 'stdin' → logprob: -13.893426895141602
    8. '   ' → logprob: -15.143426895141602
    9. ' ' → logprob: -15.143426895141602
    10. '=sys' → logprob: -15.268426895141602

Token 847: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0040364875458180904
    2. '()' → logprob: -5.6290364265441895
    3. '())' → logprob: -7.8790364265441895
    4. ')' → logprob: -10.004036903381348
    5. '().__' → logprob: -11.504036903381348
    6. '();)' → logprob: -14.004036903381348
    7. '()[' → logprob: -15.004036903381348
    8. '().'' → logprob: -15.629036903381348
    9. '.' → logprob: -16.00403594970703
    10. '()
' → logprob: -16.12903594970703

Token 848: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.523948907968588e-05
    2. 'strip' → logprob: -10.625035285949707
    3. ')' → logprob: -12.375035285949707
    4. 'read' → logprob: -13.125035285949707
    5. ' split' → logprob: -13.125035285949707
    6. 'next' → logprob: -13.875035285949707
    7. '__' → logprob: -14.375035285949707
    8. '_split' → logprob: -15.000035285949707
    9. '.split' → logprob: -15.625035285949707
    10. 'rstrip' → logprob: -16.00003433227539

Token 849: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31508660316467285
    2. ')' → logprob: -1.3150866031646729
    3. '()' → logprob: -6.315086364746094
    4. '))' → logprob: -11.940086364746094
    5. '())
' → logprob: -13.065086364746094
    6. '();)' → logprob: -13.190086364746094
    7. ' ())' → logprob: -13.940086364746094
    8. '()))' → logprob: -14.065086364746094
    9. '()]' → logprob: -15.190086364746094
    10. ')`' → logprob: -15.315086364746094

Token 850: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026117052882909775
    2. '#' → logprob: -4.276116847991943
    3. '<|end|>' → logprob: -5.276116847991943
    4. 'class' → logprob: -5.526116847991943
    5. '```' → logprob: -7.151116847991943
    6. 'for' → logprob: -7.276116847991943
    7. '<|end|>' → logprob: -7.901116847991943
    8. ')' → logprob: -8.401117324829102
    9. '...' → logprob: -9.276117324829102
    10. 'import' → logprob: -9.276117324829102

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7068072557449341
    2. '=' → logprob: -0.7068072557449341
    3. ' =' → logprob: -4.3318071365356445
    4. '=int' → logprob: -8.831807136535645
    5. ',N' → logprob: -9.456807136535645
    6. ',R' → logprob: -9.706807136535645
    7. ',r' → logprob: -9.831807136535645
    8. '   ' → logprob: -11.581807136535645
    9. '.' → logprob: -11.706807136535645
    10. '=input' → logprob: -11.706807136535645

Token 852: ' AB' (ID: 16520)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4411907494068146
    2. 'M' → logprob: -1.0661907196044922
    3. 'Q' → logprob: -4.941190719604492
    4. '*' → logprob: -6.316190719604492
    5. 'A' → logprob: -6.566190719604492
    6. '*K' → logprob: -7.816190719604492
    7. '=' → logprob: -7.941190719604492
    8. '*M' → logprob: -8.441190719604492
    9. 'k' → logprob: -8.691190719604492
    10. ' K' → logprob: -8.816190719604492

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007607220206409693
    2. ' =' → logprob: -4.8826069831848145
    3. '=N' → logprob: -14.382607460021973
    4. '=r' → logprob: -15.132607460021973
    5. ' ' → logprob: -16.882606506347656
    6. '＝' → logprob: -17.507606506347656
    7. 'R' → logprob: -17.632606506347656
    8. '=int' → logprob: -17.632606506347656
    9. '=_' → logprob: -17.757606506347656
    10. ',' → logprob: -17.757606506347656

Token 854: ' int' (ID: 677)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20939412713050842
    2. 'int' → logprob: -1.834394097328186
    3. 'map' → logprob: -3.8343942165374756
    4. ' R' → logprob: -5.8343939781188965
    5. '10' → logprob: -6.4593939781188965
    6. ' int' → logprob: -7.7093939781188965
    7. ' map' → logprob: -7.7093939781188965
    8. '5' → logprob: -8.209394454956055
    9. ' ' → logprob: -8.459394454956055
    10. 'next' → logprob: -8.459394454956055

Token 855: '(r' (ID: 4729)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.3717689514160156
    2. '(r' → logprob: -1.2467689514160156
    3. '(input' → logprob: -3.9967689514160156
    4. '(sys' → logprob: -6.121768951416016
    5. '()' → logprob: -6.746768951416016
    6. '().' → logprob: -7.996768951416016
    7. 'input' → logprob: -8.246768951416016
    8. 'r' → logprob: -8.621768951416016
    9. 'sys' → logprob: -9.246768951416016
    10. '(*' → logprob: -9.496768951416016

Token 856: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.00016086915275081992
    2. '),' → logprob: -8.875161170959473
    3. '()' → logprob: -10.875161170959473
    4. '(' → logprob: -13.750161170959473
    5. '().' → logprob: -15.250161170959473
    6. '(),' → logprob: -15.375161170959473
    7. '())' → logprob: -15.375161170959473
    8. '()
' → logprob: -15.750161170959473
    9. '()),
' → logprob: -16.750160217285156
    10. '()},' → logprob: -17.875160217285156

Token 857: ' [' (ID: 723)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.5790402293205261
    2. '[' → logprob: -0.8290402293205261
    3. '[r' → logprob: -6.579040050506592
    4. '[list' → logprob: -6.954040050506592
    5. 'R' → logprob: -8.32904052734375
    6. '[List' → logprob: -8.82904052734375
    7. '[A' → logprob: -9.20404052734375
    8. '[t' → logprob: -10.32904052734375
    9. '[int' → logprob: -10.32904052734375
    10. '[B' → logprob: -10.82904052734375

Token 858: 'R' (ID: 49)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.47670242190361023
    2. 'R' → logprob: -0.9767024517059326
    3. 'list' → logprob: -5.9767022132873535
    4. ' tuple' → logprob: -9.851702690124512
    5. 'T' → logprob: -10.976702690124512
    6. '*' → logprob: -11.976702690124512
    7. '(tuple' → logprob: -12.601702690124512
    8. ' R' → logprob: -13.351702690124512
    9. 'tu' → logprob: -14.101702690124512
    10. 't' → logprob: -14.351702690124512

Token 859: '_t' (ID: 838)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11303941905498505
    2. '_t' → logprob: -2.488039493560791
    3. 'map' → logprob: -3.988039493560791
    4. '_map' → logprob: -5.863039493560791
    5. '()
' → logprob: -7.488039493560791
    6. '()[' → logprob: -7.863039493560791
    7. '()]' → logprob: -7.863039493560791
    8. '_' → logprob: -7.988039493560791
    9. '())' → logprob: -8.988039016723633
    10. '().' → logprob: -8.988039016723633

Token 860: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012118533049942926
    2. '()]' → logprob: -9.125121116638184
    3. '())' → logprob: -12.500121116638184
    4. '()
' → logprob: -13.250121116638184
    5. '().' → logprob: -13.625121116638184
    6. '()]
' → logprob: -13.750121116638184
    7. ' ()' → logprob: -13.875121116638184
    8. 'for' → logprob: -14.500121116638184
    9. '()*' → logprob: -14.875121116638184
    10. '()[' → logprob: -14.875121116638184

Token 861: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01109203603118658
    2. 'for' → logprob: -4.511092185974121
    3. ' for' → logprob: -10.386092185974121
    4. ')' → logprob: -12.136092185974121
    5. '().' → logprob: -13.386092185974121
    6. 'r' → logprob: -13.386092185974121
    7. '(' → logprob: -13.886092185974121
    8. '()
' → logprob: -14.136092185974121
    9. '```' → logprob: -14.136092185974121
    10. '()]' → logprob: -14.386092185974121

Token 862: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040593139827251434
    2. '_range' → logprob: -3.290593147277832
    3. 'range' → logprob: -6.790593147277832
    4. ' range' → logprob: -7.040593147277832
    5. '_in' → logprob: -7.665593147277832
    6. '_i' → logprob: -10.290593147277832
    7. '_RANGE' → logprob: -10.915593147277832
    8. '_N' → logprob: -12.665593147277832
    9. '_[' → logprob: -12.665593147277832
    10. '_r' → logprob: -12.915593147277832

Token 863: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018734516575932503
    2. ' range' → logprob: -4.018734455108643
    3. '_' → logprob: -8.2687349319458
    4. 'in' → logprob: -8.6437349319458
    5. '_range' → logprob: -9.0187349319458
    6. ' in' → logprob: -10.6437349319458
    7. '(range' → logprob: -12.6437349319458
    8. '_in' → logprob: -13.2687349319458
    9. '	range' → logprob: -14.1437349319458
    10. '[' → logprob: -15.2687349319458

Token 864: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7848862373502925e-05
    2. ' range' → logprob: -10.500027656555176
    3. '_' → logprob: -15.875027656555176
    4. '[' → logprob: -17.000028610229492
    5. '_range' → logprob: -17.125028610229492
    6. '(range' → logprob: -17.500028610229492
    7. '
' → logprob: -18.500028610229492
    8. '	range' → logprob: -18.625028610229492
    9. 'r' → logprob: -19.875028610229492
    10. '.range' → logprob: -20.125028610229492

Token 865: '(int' (ID: 2742)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.47495681833243e-05
    2. 'N' → logprob: -10.625024795532227
    3. '(' → logprob: -14.875024795532227
    4. '(int' → logprob: -17.875024795532227
    5. '(n' → logprob: -18.000024795532227
    6. '
' → logprob: -18.500024795532227
    7. '	N' → logprob: -18.500024795532227
    8. '(
' → logprob: -18.750024795532227
    9. '```' → logprob: -19.625024795532227
    10. '[N' → logprob: -20.250024795532227

Token 866: '(sys' (ID: 41042)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0010297117987647653
    2. 'r' → logprob: -7.1260294914245605
    3. '(input' → logprob: -9.251029968261719
    4. '(N' → logprob: -10.001029968261719
    5. '(R' → logprob: -10.251029968261719
    6. '(sys' → logprob: -10.751029968261719
    7. '(' → logprob: -11.001029968261719
    8. 'input' → logprob: -12.626029968261719
    9. '()' → logprob: -13.126029968261719
    10. 'N' → logprob: -13.876029968261719

Token 867: '.modules' (ID: 48888)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005052898544818163
    2. '.readline' → logprob: -5.8800530433654785
    3. 'stdin' → logprob: -6.3800530433654785
    4. '.argv' → logprob: -7.8800530433654785
    5. '(stdin' → logprob: -9.25505256652832
    6. 'input' → logprob: -10.50505256652832
    7. '().' → logprob: -10.63005256652832
    8. '.max' → logprob: -12.38005256652832
    9. '()' → logprob: -12.63005256652832
    10. '.stdout' → logprob: -13.13005256652832

Token 868: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.1682860851287842
    2. '.stdin' → logprob: -1.2932860851287842
    3. 'sys' → logprob: -1.7932860851287842
    4. '[' → logprob: -2.918286085128784
    5. '.setdefault' → logprob: -3.043286085128784
    6. '(sys' → logprob: -3.543286085128784
    7. 'stdin' → logprob: -3.793286085128784
    8. 'r' → logprob: -3.918286085128784
    9. '.__' → logprob: -3.918286085128784
    10. '._' → logprob: -4.293286323547363

Token 869: '__' (ID: 771)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1172068789601326
    2. '__' → logprob: -2.3672068119049072
    3. '_st' → logprob: -5.492207050323486
    4. 'built' → logprob: -5.617207050323486
    5. 'arg' → logprob: -6.617207050323486
    6. '_sys' → logprob: -6.992207050323486
    7. 'stdin' → logprob: -6.992207050323486
    8. '_builtin' → logprob: -7.367207050323486
    9. '_input' → logprob: -7.492207050323486
    10. 'thread' → logprob: -8.117206573486328

Token 870: 'main' (ID: 7731)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.1585659384727478
    2. 'name' → logprob: -2.0335659980773926
    3. '.stdin' → logprob: -5.283565998077393
    4. 'argv' → logprob: -5.908565998077393
    5. 'sys' → logprob: -5.908565998077393
    6. 'import' → logprob: -7.033565998077393
    7. 'stderr' → logprob: -7.408565998077393
    8. '__' → logprob: -7.658565998077393
    9. 'file' → logprob: -7.658565998077393
    10. 'main' → logprob: -7.783565998077393

Token 871: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06206672638654709
    2. '__.__' → logprob: -2.8120667934417725
    3. '__.' → logprob: -9.562067031860352
    4. 'import' → logprob: -11.687067031860352
    5. '].' → logprob: -12.187067031860352
    6. '{}' → logprob: -12.437067031860352
    7. ''' → logprob: -12.812067031860352
    8. '__
' → logprob: -13.312067031860352
    9. 'sys' → logprob: -13.687067031860352
    10. '__).' → logprob: -13.687067031860352

Token 872: '']' (ID: 1089)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4595049321651459
    2. '__.__' → logprob: -1.4595049619674683
    3. 'sys' → logprob: -2.5845048427581787
    4. 'r' → logprob: -3.3345048427581787
    5. '__.' → logprob: -4.459505081176758
    6. '.__' → logprob: -4.959505081176758
    7. 'import' → logprob: -6.334505081176758
    8. '.' → logprob: -7.084505081176758
    9. ').__' → logprob: -7.209505081176758
    10. '
' → logprob: -7.209505081176758

Token 873: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.14137600362300873
    2. '__.__' → logprob: -2.14137601852417
    3. '__' → logprob: -5.39137601852417
    4. '.' → logprob: -6.39137601852417
    5. '.N' → logprob: -6.64137601852417
    6. '.r' → logprob: -6.64137601852417
    7. ').__' → logprob: -7.01637601852417
    8. 'sys' → logprob: -7.26637601852417
    9. 'import' → logprob: -7.39137601852417
    10. '().__' → logprob: -7.51637601852417

Token 874: 'dict' (ID: 20993)
  Prédit: 'spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spec' → logprob: -0.14221085608005524
    2. 'file' → logprob: -3.2672109603881836
    3. 'dict' → logprob: -3.3922109603881836
    4. 'name' → logprob: -3.3922109603881836
    5. 'loader' → logprob: -4.392210960388184
    6. 'stdin' → logprob: -4.392210960388184
    7. 'main' → logprob: -6.517210960388184
    8. 'code' → logprob: -7.767210960388184
    9. 'import' → logprob: -9.267210960388184
    10. 'stderr' → logprob: -9.392210960388184

Token 875: '__.' (ID: 36429)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030941665172576904
    2. '['' → logprob: -4.030941486358643
    3. '__.' → logprob: -4.405941486358643
    4. '__["' → logprob: -8.2809419631958
    5. '__.__' → logprob: -9.0309419631958
    6. '__)' → logprob: -11.0309419631958
    7. '___' → logprob: -11.1559419631958
    8. 'get' → logprob: -11.4059419631958
    9. '__[' → logprob: -11.4059419631958
    10. '.__' → logprob: -11.6559419631958

Token 876: 'get' (ID: 522)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1444603055715561
    2. '['' → logprob: -2.5194602012634277
    3. ''' → logprob: -3.6444602012634277
    4. 'get' → logprob: -3.7694602012634277
    5. 'r' → logprob: -5.894460201263428
    6. '{'' → logprob: -7.394460201263428
    7. 'N' → logprob: -8.519460678100586
    8. '
' → logprob: -8.769460678100586
    9. '   ' → logprob: -8.894460678100586
    10. '('__' → logprob: -9.019460678100586

Token 877: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08625129610300064
    2. '('__' → logprob: -2.5862512588500977
    3. '(r' → logprob: -5.336251258850098
    4. '("__' → logprob: -7.836251258850098
    5. '('_' → logprob: -7.961251258850098
    6. '("' → logprob: -8.086251258850098
    7. '(N' → logprob: -8.211251258850098
    8. 'input' → logprob: -8.336251258850098
    9. '(__' → logprob: -8.461251258850098
    10. '(sys' → logprob: -8.586251258850098

Token 878: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8830996751785278
    2. 'r' → logprob: -1.2580996751785278
    3. 'input' → logprob: -1.6330996751785278
    4. 'sys' → logprob: -2.7580995559692383
    5. '__' → logprob: -3.6330995559692383
    6. 'import' → logprob: -5.883099555969238
    7. 'stdin' → logprob: -6.258099555969238
    8. 'R' → logprob: -6.508099555969238
    9. 'len' → logprob: -6.633099555969238
    10. ''' → logprob: -6.758099555969238

Token 879: '',' (ID: 787)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08749336004257202
    2. ')))' → logprob: -3.837493419647217
    3. '()))' → logprob: -4.212493419647217
    4. ')' → logprob: -4.337493419647217
    5. 'N' → logprob: -4.462493419647217
    6. ')]' → logprob: -5.087493419647217
    7. '
' → logprob: -5.587493419647217
    8. 'r' → logprob: -5.962493419647217
    9. '()' → logprob: -6.212493419647217
    10. ''))' → logprob: -6.462493419647217

Token 880: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001664717128733173
    2. ' N' → logprob: -10.125166893005371
    3. 'len' → logprob: -10.125166893005371
    4. 'int' → logprob: -10.375166893005371
    5. '0' → logprob: -10.750166893005371
    6. '(N' → logprob: -11.250166893005371
    7. 'r' → logprob: -12.250166893005371
    8. 'sys' → logprob: -12.250166893005371
    9. 'R' → logprob: -13.000166893005371
    10. '   ' → logprob: -13.750166893005371

Token 881: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003467736765742302
    2. ')' → logprob: -7.253467559814453
    3. '()))' → logprob: -7.753467559814453
    4. ')]' → logprob: -7.753467559814453
    5. ')))' → logprob: -7.753467559814453
    6. '
' → logprob: -8.128467559814453
    7. '))]
' → logprob: -8.128467559814453
    8. ' ))' → logprob: -8.753467559814453
    9. ')):' → logprob: -8.878467559814453
    10. ')),' → logprob: -9.378467559814453

Token 882: ' or' (ID: 503)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02763206884264946
    2. '()))' → logprob: -3.902631998062134
    3. ')' → logprob: -5.902632236480713
    4. ')]' → logprob: -5.902632236480713
    5. '()' → logprob: -8.152631759643555
    6. '))]
' → logprob: -8.402631759643555
    7. ')])' → logprob: -8.527631759643555
    8. '())' → logprob: -8.652631759643555
    9. 'N' → logprob: -9.277631759643555
    10. ' ' → logprob: -9.527631759643555

Token 883: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00021867557370569557
    2. 'len' → logprob: -8.750218391418457
    3. ' N' → logprob: -11.375218391418457
    4. '(N' → logprob: -11.500218391418457
    5. 'int' → logprob: -11.625218391418457
    6. '0' → logprob: -12.000218391418457
    7. 'n' → logprob: -12.000218391418457
    8. 'r' → logprob: -12.250218391418457
    9. 'range' → logprob: -12.250218391418457
    10. '_N' → logprob: -12.750218391418457

Token 884: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09142189472913742
    2. ')]' → logprob: -2.5914218425750732
    3. ')])' → logprob: -4.716422080993652
    4. '()))' → logprob: -6.091422080993652
    5. ')' → logprob: -7.466422080993652
    6. '])]' → logprob: -8.091422080993652
    7. '())' → logprob: -8.591422080993652
    8. '))]
' → logprob: -10.091422080993652
    9. ')))' → logprob: -10.216422080993652
    10. '()' → logprob: -10.716422080993652

Token 885: 'ABC' (ID: 44197)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.8590959906578064
    2. 'graph' → logprob: -0.9840959906578064
    3. 'AB' → logprob: -3.484096050262451
    4. 'adj' → logprob: -3.609096050262451
    5. 'deg' → logprob: -3.734096050262451
    6. 'g' → logprob: -3.734096050262451
    7. 'edges' → logprob: -3.734096050262451
    8. 'from' → logprob: -4.109096050262451
    9. 'dp' → logprob: -4.234096050262451
    10. 'def' → logprob: -4.734096050262451

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04303789883852005
    2. ' =' → logprob: -3.1680378913879395
    3. '=[]' → logprob: -10.918038368225098
    4. ',' → logprob: -11.293038368225098
    5. '=[]
' → logprob: -13.418038368225098
    6. 's' → logprob: -13.793038368225098
    7. ' ' → logprob: -13.793038368225098
    8. '_' → logprob: -14.043038368225098
    9. '   ' → logprob: -14.418038368225098
    10. '()' → logprob: -14.793038368225098

Token 887: ' sorted' (ID: 20099)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.059358395636081696
    2. '[' → logprob: -4.309358596801758
    3. '[r' → logprob: -4.434358596801758
    4. 'R' → logprob: -4.684358596801758
    5. '[(' → logprob: -4.934358596801758
    6. '[]' → logprob: -5.184358596801758
    7. '[[' → logprob: -5.559358596801758
    8. 'sorted' → logprob: -6.434358596801758
    9. 'tuple' → logprob: -6.809358596801758
    10. '[t' → logprob: -7.559358596801758

Token 888: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017672894755378366
    2. '([' → logprob: -7.376767158508301
    3. '((' → logprob: -7.501767158508301
    4. '([(' → logprob: -7.626767158508301
    5. '(((' → logprob: -10.0017671585083
    6. '(range' → logprob: -11.1267671585083
    7. '(R' → logprob: -11.5017671585083
    8. '(A' → logprob: -11.8767671585083
    9. '(set' → logprob: -11.8767671585083
    10. '(list' → logprob: -11.8767671585083

Token 889: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6838301420211792
    2. '(set' → logprob: -1.4338301420211792
    3. '(per' → logprob: -2.3088302612304688
    4. '(com' → logprob: -2.6838302612304688
    5. '({' → logprob: -3.0588302612304688
    6. '((' → logprob: -3.5588302612304688
    7. '(map' → logprob: -4.933830261230469
    8. '(filter' → logprob: -6.308830261230469
    9. '(zip' → logprob: -6.683830261230469
    10. '(((' → logprob: -7.058830261230469

Token 890: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.24559369683265686
    2. '(int' → logprob: -1.9955936670303345
    3. '(list' → logprob: -2.995593786239624
    4. '(tuple' → logprob: -3.495593786239624
    5. '(sum' → logprob: -7.370593547821045
    6. '(' → logprob: -8.495594024658203
    7. '(sorted' → logprob: -8.995594024658203
    8. 'list' → logprob: -9.370594024658203
    9. '(str' → logprob: -9.370594024658203
    10. '(R' → logprob: -9.495594024658203

Token 891: ' ab' (ID: 692)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.011775229126214981
    2. '(lambda' → logprob: -4.511775016784668
    3. '   ' → logprob: -8.011775016784668
    4. ' lambda' → logprob: -8.136775016784668
    5. 'list' → logprob: -9.636775016784668
    6. 'int' → logprob: -11.136775016784668
    7. 'tuple' → logprob: -11.636775016784668
    8. '=lambda' → logprob: -12.636775016784668
    9. 'operator' → logprob: -12.761775016784668
    10. ' ' → logprob: -13.261775016784668

Token 892: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.22930851578712463
    2. '(lambda' → logprob: -2.104308605194092
    3. 'ambda' → logprob: -3.229308605194092
    4. '=lambda' → logprob: -3.479308605194092
    5. ' lambda' → logprob: -4.854308605194092
    6. ':' → logprob: -5.979308605194092
    7. ',' → logprob: -6.479308605194092
    8. '   ' → logprob: -8.604308128356934
    9. '_lambda' → logprob: -8.854308128356934
    10. 'int' → logprob: -9.229308128356934

Token 893: ' (' (ID: 350)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.037634000182151794
    2. '(lambda' → logprob: -3.4126338958740234
    3. 'tuple' → logprob: -6.037633895874023
    4. 'ab' → logprob: -7.412633895874023
    5. ' lambda' → logprob: -8.162633895874023
    6. 'list' → logprob: -9.287633895874023
    7. 'int' → logprob: -9.412633895874023
    8. '(' → logprob: -9.412633895874023
    9. 'AB' → logprob: -9.662633895874023
    10. 'ig' → logprob: -9.787633895874023

Token 894: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.029641132801771164
    2. '(ab' → logprob: -3.6546411514282227
    3. '*' → logprob: -7.029641151428223
    4. '(' → logprob: -7.654641151428223
    5. 'min' → logprob: -7.904641151428223
    6. 'abs' → logprob: -8.029641151428223
    7. '(*' → logprob: -8.154641151428223
    8. 'int' → logprob: -8.404641151428223
    9. 'fact' → logprob: -8.404641151428223
    10. 'abc' → logprob: -9.654641151428223

Token 895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09777563810348511
    2. ',' → logprob: -2.97277569770813
    3. ',r' → logprob: -3.97277569770813
    4. '[:' → logprob: -5.222775459289551
    5. 'lambda' → logprob: -5.222775459289551
    6. ':=' → logprob: -5.597775459289551
    7. ':' → logprob: -6.597775459289551
    8. ' +' → logprob: -6.972775459289551
    9. '+' → logprob: -6.972775459289551
    10. '=lambda' → logprob: -7.097775459289551

Token 896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04987369850277901
    2. '[' → logprob: -3.6748735904693604
    3. '2' → logprob: -4.2998738288879395
    4. '1' → logprob: -5.2998738288879395
    5. ',' → logprob: -5.7998738288879395
    6. 'int' → logprob: -8.424873352050781
    7. 'sum' → logprob: -8.424873352050781
    8. ' ' → logprob: -8.549873352050781
    9. 'a' → logprob: -8.674873352050781
    10. '(' → logprob: -8.924873352050781

Token 897: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005047772428952157
    2. '+' → logprob: -8.375504493713379
    3. '[' → logprob: -10.000504493713379
    4. '-' → logprob: -10.625504493713379
    5. '*' → logprob: -10.625504493713379
    6. ',*' → logprob: -10.625504493713379
    7. ',b' → logprob: -10.750504493713379
    8. '),' → logprob: -11.125504493713379
    9. ' ,' → logprob: -11.375504493713379
    10. 'abc' → logprob: -11.375504493713379

Token 898: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0005253921262919903
    2. ' ab' → logprob: -7.87552547454834
    3. '(ab' → logprob: -10.00052547454834
    4. 'int' → logprob: -10.12552547454834
    5. 'abc' → logprob: -11.00052547454834
    6. '   ' → logprob: -11.87552547454834
    7. '1' → logprob: -12.00052547454834
    8. 'abs' → logprob: -12.50052547454834
    9. '-ab' → logprob: -12.62552547454834
    10. 'AB' → logprob: -12.87552547454834

Token 899: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023682620376348495
    2. '1' → logprob: -3.8986825942993164
    3. ',' → logprob: -5.773682594299316
    4. 'and' → logprob: -12.398682594299316
    5. ' ,' → logprob: -12.648682594299316
    6. '(' → logprob: -13.023682594299316
    7. 'def' → logprob: -13.023682594299316
    8. '   ' → logprob: -13.148682594299316
    9. '
' → logprob: -13.273682594299316
    10. '2' → logprob: -13.273682594299316

Token 900: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4656579120783135e-05
    2. '2' → logprob: -10.250044822692871
    3. '-' → logprob: -13.000044822692871
    4. '```' → logprob: -13.500044822692871
    5. ',' → logprob: -14.125044822692871
    6. '
' → logprob: -14.250044822692871
    7. ' ' → logprob: -14.500044822692871
    8. '[' → logprob: -14.687544822692871
    9. '   ' → logprob: -14.937544822692871
    10. '0' → logprob: -14.937544822692871

Token 901: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0542110837996006
    2. '),' → logprob: -4.054211139678955
    3. ',r' → logprob: -4.054211139678955
    4. ',c' → logprob: -5.054211139678955
    5. ')),' → logprob: -5.304211139678955
    6. ',N' → logprob: -6.429211139678955
    7. ',b' → logprob: -6.679211139678955
    8. '[' → logprob: -7.054211139678955
    9. '+' → logprob: -7.304211139678955
    10. ',R' → logprob: -7.804211139678955

Token 902: 'ab' (ID: 378)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.637295663356781
    2. 'ab' → logprob: -1.2622957229614258
    3. '0' → logprob: -2.012295722961426
    4. 'int' → logprob: -3.262295722961426
    5. 'abs' → logprob: -5.012295722961426
    6. 'fact' → logprob: -5.762295722961426
    7. 'r' → logprob: -6.262295722961426
    8. '(' → logprob: -6.637295722961426
    9. 'None' → logprob: -7.512295722961426
    10. 'mod' → logprob: -7.887295722961426

Token 903: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034951844718307257
    2. '2' → logprob: -6.628495216369629
    3. '0' → logprob: -7.128495216369629
    4. '1' → logprob: -7.128495216369629
    5. '(' → logprob: -8.253495216369629
    6. '()[' → logprob: -9.503495216369629
    7. '),' → logprob: -10.253495216369629
    8. '=' → logprob: -10.378495216369629
    9. ')),' → logprob: -10.378495216369629
    10. '```' → logprob: -10.628495216369629

Token 904: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3805040121078491
    2. '0' → logprob: -1.6305040121078491
    3. '1' → logprob: -2.1305041313171387
    4. '-' → logprob: -7.380504131317139
    5. 'N' → logprob: -7.380504131317139
    6. ' ' → logprob: -8.88050365447998
    7. 'r' → logprob: -9.00550365447998
    8. 'int' → logprob: -9.63050365447998
    9. 'None' → logprob: -10.38050365447998
    10. '   ' → logprob: -10.63050365447998

Token 905: ']-' (ID: 27107)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08702272176742554
    2. '+' → logprob: -2.5870227813720703
    3. ')),' → logprob: -5.08702278137207
    4. ')))' → logprob: -7.08702278137207
    5. ' +' → logprob: -8.08702278137207
    6. ')' → logprob: -8.08702278137207
    7. '))),' → logprob: -9.21202278137207
    8. '))' → logprob: -9.46202278137207
    9. '+r' → logprob: -10.33702278137207
    10. ' ),' → logprob: -10.33702278137207

Token 906: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0010842557530850172
    2. ' ab' → logprob: -7.376084327697754
    3. '1' → logprob: -7.876084327697754
    4. '(ab' → logprob: -10.626084327697754
    5. 'abs' → logprob: -10.751084327697754
    6. '0' → logprob: -11.376084327697754
    7. 'abc' → logprob: -11.626084327697754
    8. ' ' → logprob: -13.001084327697754
    9. '(' → logprob: -13.751084327697754
    10. '2' → logprob: -13.751084327697754

Token 907: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0038529320154339075
    2. ')))' → logprob: -6.628852844238281
    3. '(' → logprob: -7.253852844238281
    4. '0' → logprob: -7.378852844238281
    5. ')),' → logprob: -7.628852844238281
    6. '))' → logprob: -7.753852844238281
    7. '1' → logprob: -9.628852844238281
    8. ')' → logprob: -10.503852844238281
    9. ']))' → logprob: -10.503852844238281
    10. '()[' → logprob: -10.503852844238281

Token 908: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017602674197405577
    2. '1' → logprob: -6.376760482788086
    3. '[' → logprob: -10.376760482788086
    4. ' ' → logprob: -10.876760482788086
    5. 'ab' → logprob: -12.376760482788086
    6. '2' → logprob: -13.001760482788086
    7. ')' → logprob: -15.001760482788086
    8. '=' → logprob: -15.626760482788086
    9. '   ' → logprob: -15.876760482788086
    10. '_ab' → logprob: -16.189260482788086

Token 909: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0051503852009773254
    2. ')),' → logprob: -5.380150318145752
    3. ')' → logprob: -8.75515079498291
    4. ' ),' → logprob: -9.50515079498291
    5. ')))' → logprob: -9.63015079498291
    6. '))),' → logprob: -9.63015079498291
    7. '))' → logprob: -10.25515079498291
    8. '+' → logprob: -10.38015079498291
    9. '),
' → logprob: -10.63015079498291
    10. '),(' → logprob: -11.13015079498291

Token 910: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0004972710739821196
    2. ' AB' → logprob: -7.750497341156006
    3. 'lambda' → logprob: -10.500496864318848
    4. 'filter' → logprob: -10.875496864318848
    5. '   ' → logprob: -12.000496864318848
    6. '[' → logprob: -12.250496864318848
    7. 'ab' → logprob: -13.250496864318848
    8. '  ' → logprob: -14.125496864318848
    9. ' ' → logprob: -14.375496864318848
    10. ' lambda' → logprob: -14.625496864318848

Token 911: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008098635007627308
    2. ')))' → logprob: -8.125809669494629
    3. '),' → logprob: -8.375809669494629
    4. '))
' → logprob: -8.875809669494629
    5. ')),' → logprob: -9.625809669494629
    6. ',' → logprob: -10.375809669494629
    7. ')' → logprob: -10.875809669494629
    8. '));' → logprob: -11.375809669494629
    9. '()))' → logprob: -12.125809669494629
    10. ' ))' → logprob: -12.250809669494629

Token 912: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0001005630983854644
    2. ' key' → logprob: -9.250100135803223
    3. 'reverse' → logprob: -12.375100135803223
    4. '(key' → logprob: -16.12510108947754
    5. 'lambda' → logprob: -17.37510108947754
    6. '   ' → logprob: -17.62510108947754
    7. '[key' → logprob: -18.75010108947754
    8. '	key' → logprob: -19.25010108947754
    9. ',key' → logprob: -19.25010108947754
    10. ' ' → logprob: -19.37510108947754

Token 913: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.002041533123701811
    2. '=' → logprob: -6.502041339874268
    3. '=item' → logprob: -7.752041339874268
    4. 'lambda' → logprob: -9.127041816711426
    5. 'item' → logprob: -15.252041816711426
    6. '(lambda' → logprob: -15.752041816711426
    7. ' =' → logprob: -16.75204086303711
    8. '```' → logprob: -18.87704086303711
    9. ' lambda' → logprob: -19.25204086303711
    10. 'key' → logprob: -19.37704086303711

Token 914: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.014251535758376122
    2. 'lambda' → logprob: -4.264251708984375
    3. 'item' → logprob: -9.389251708984375
    4. '(lambda' → logprob: -13.264251708984375
    5. '=lambda' → logprob: -14.139251708984375
    6. ' lambda' → logprob: -14.639251708984375
    7. 'lam' → logprob: -15.139251708984375
    8. 'igg' → logprob: -15.264251708984375
    9. 'igt' → logprob: -15.889251708984375
    10. 'ign' → logprob: -16.389251708984375

Token 915: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6212550401687622
    2. '(' → logprob: -0.9962550401687622
    3. 'lambda' → logprob: -2.8712549209594727
    4. '(lambda' → logprob: -3.3712549209594727
    5. 'ig' → logprob: -6.371254920959473
    6. '0' → logprob: -8.496254920959473
    7. '[' → logprob: -8.621254920959473
    8. '=lambda' → logprob: -8.746254920959473
    9. 'item' → logprob: -9.246254920959473
    10. '1' → logprob: -9.621254920959473

Token 916: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019956497475504875
    2. 'lambda' → logprob: -4.019956588745117
    3. 'item' → logprob: -6.894956588745117
    4. 'ig' → logprob: -7.519956588745117
    5. '(' → logprob: -9.269956588745117
    6. '(lambda' → logprob: -10.269956588745117
    7. '-' → logprob: -10.269956588745117
    8. '0' → logprob: -10.269956588745117
    9. '[' → logprob: -11.019956588745117
    10. '
' → logprob: -11.644956588745117

Token 917: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08841342478990555
    2. ',' → logprob: -3.2134134769439697
    3. '))' → logprob: -3.2134134769439697
    4. 'reverse' → logprob: -5.838413238525391
    5. '=lambda' → logprob: -8.21341323852539
    6. '=True' → logprob: -8.46341323852539
    7. ')
' → logprob: -8.58841323852539
    8. ')))' → logprob: -9.21341323852539
    9. 'lambda' → logprob: -9.71341323852539
    10. '),' → logprob: -9.96341323852539

Token 918: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9199439883232117
    2. '<|end|>' → logprob: -1.4199440479278564
    3. 'for' → logprob: -1.9199440479278564
    4. 'def' → logprob: -2.0449440479278564
    5. '#' → logprob: -3.6699440479278564
    6. '[' → logprob: -3.7949440479278564
    7. ']' → logprob: -4.669943809509277
    8. '[]' → logprob: -5.169943809509277
    9. '[
' → logprob: -5.919943809509277
    10. '```' → logprob: -6.169943809509277

Token 919: ' functools' (ID: 142636)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.47228509187698364
    2. 'collections' → logprob: -1.8472850322723389
    3. 'heap' → logprob: -1.9722850322723389
    4. 'operator' → logprob: -2.972285032272339
    5. 'math' → logprob: -4.347285270690918
    6. 'sys' → logprob: -4.347285270690918
    7. 'it' → logprob: -6.847285270690918
    8. ' itertools' → logprob: -7.847285270690918
    9. 'typing' → logprob: -8.222285270690918
    10. ' collections' → logprob: -8.847285270690918

Token 920: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.016147449612617493
    2. ' import' → logprob: -4.141147613525391
    3. '_import' → logprob: -9.64114761352539
    4. '<|end|>' → logprob: -10.39114761352539
    5. '	import' → logprob: -11.89114761352539
    6. 'from' → logprob: -12.51614761352539
    7. ' ' → logprob: -13.51614761352539
    8. '_' → logprob: -13.76614761352539
    9. '<|end|>' → logprob: -14.26614761352539
    10. ',' → logprob: -14.89114761352539

Token 921: ' reduce' (ID: 10389)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.19541458785533905
    2. 'cache' → logprob: -2.3204145431518555
    3. 'l' → logprob: -2.6954145431518555
    4. 'reduce' → logprob: -4.5704145431518555
    5. 'import' → logprob: -7.8204145431518555
    6. 'cached' → logprob: -7.8204145431518555
    7. 'partial' → logprob: -8.320414543151855
    8. 'wrap' → logprob: -8.945414543151855
    9. ' l' → logprob: -9.445414543151855
    10. 'total' → logprob: -9.695414543151855

Token 922: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: 'f' (ID: 69)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6248434782028198
    2. 'def' → logprob: -0.9998434782028198
    3. 'dist' → logprob: -4.749843597412109
    4. 'max' → logprob: -4.874843597412109
    5. 'from' → logprob: -5.249843597412109
    6. 'DP' → logprob: -5.249843597412109
    7. 'sum' → logprob: -5.374843597412109
    8. 'd' → logprob: -5.374843597412109
    9. 'ans' → logprob: -5.374843597412109
    10. 'min' → logprob: -5.374843597412109

Token 924: '=lambda' (ID: 64865)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.05650884285569191
    2. 'def' → logprob: -3.431508779525757
    3. 'ilter' → logprob: -4.556509017944336
    4. 'unc' → logprob: -5.681509017944336
    5. 'unction' → logprob: -5.806509017944336
    6. 'unct' → logprob: -6.681509017944336
    7. 'or' → logprob: -7.056509017944336
    8. 'reduce' → logprob: -7.181509017944336
    9. 'un' → logprob: -7.306509017944336
    10. '<|end|>' → logprob: -7.431509017944336

Token 925: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5206277966499329
    2. 'x' → logprob: -1.520627737045288
    3. ' lambda' → logprob: -2.020627737045288
    4. 'f' → logprob: -3.770627737045288
    5. ' x' → logprob: -4.020627975463867
    6. 'a' → logprob: -5.145627975463867
    7. '(lambda' → logprob: -6.020627975463867
    8. 'l' → logprob: -6.020627975463867
    9. ' f' → logprob: -7.020627975463867
    10. ' a' → logprob: -7.520627975463867

Token 926: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.344095379114151
    2. 'int' → logprob: -1.9690953493118286
    3. '0' → logprob: -3.469095468521118
    4. ' reduce' → logprob: -3.844095468521118
    5. '[int' → logprob: -4.094095230102539
    6. 'None' → logprob: -4.594095230102539
    7. 'r' → logprob: -5.094095230102539
    8. 'sum' → logprob: -5.094095230102539
    9. ' int' → logprob: -5.219095230102539
    10. '[' → logprob: -5.219095230102539

Token 927: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0007981925155036151
    2. '(' → logprob: -7.750798225402832
    3. '(int' → logprob: -9.125798225402832
    4. 'lambda' → logprob: -9.375798225402832
    5. '<|end|>' → logprob: -10.000798225402832
    6. '
' → logprob: -10.625798225402832
    7. '(operator' → logprob: -11.125798225402832
    8. '(
' → logprob: -11.250798225402832
    9. '=lambda' → logprob: -11.250798225402832
    10. '```' → logprob: -11.250798225402832

Token 928: ' acc' (ID: 1259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5675311088562012
    2. 'a' → logprob: -1.4425311088562012
    3. ' x' → logprob: -2.067531108856201
    4. 'lambda' → logprob: -3.567531108856201
    5. ' a' → logprob: -3.692531108856201
    6. ' lambda' → logprob: -4.317531108856201
    7. ' acc' → logprob: -6.317531108856201
    8. 'f' → logprob: -7.192531108856201
    9. 'acc' → logprob: -7.567531108856201
    10. '(lambda' → logprob: -8.06753158569336

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05328267440199852
    2. 'lambda' → logprob: -3.1782827377319336
    3. '=lambda' → logprob: -5.928282737731934
    4. ' lambda' → logprob: -5.928282737731934
    5. ',x' → logprob: -6.303282737731934
    6. 'x' → logprob: -6.303282737731934
    7. '(lambda' → logprob: -7.678282737731934
    8. 'a' → logprob: -8.303282737731934
    9. ' x' → logprob: -8.803282737731934
    10. ' ,' → logprob: -9.053282737731934

Token 930: 'abc' (ID: 26682)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1296594738960266
    2. ' x' → logprob: -2.254659414291382
    3. 'acc' → logprob: -5.254659652709961
    4. ' acc' → logprob: -5.504659652709961
    5. 'ab' → logprob: -6.004659652709961
    6. ' ab' → logprob: -6.004659652709961
    7. 'xy' → logprob: -7.629659652709961
    8. 't' → logprob: -7.629659652709961
    9. 'a' → logprob: -8.129659652709961
    10. 'abc' → logprob: -8.504659652709961

Token 931: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2881603240966797
    2. ',' → logprob: -1.4131603240966797
    3. 'acc' → logprob: -6.41316032409668
    4. ':(' → logprob: -6.41316032409668
    5. ' :' → logprob: -7.03816032409668
    6. ':[' → logprob: -7.03816032409668
    7. '(acc' → logprob: -8.16316032409668
    8. ' acc' → logprob: -8.28816032409668
    9. 'f' → logprob: -8.53816032409668
    10. ',x' → logprob: -8.78816032409668

Token 932: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.06425014138221741
    2. '(acc' → logprob: -2.9392502307891846
    3. '(' → logprob: -5.8142499923706055
    4. 'abc' → logprob: -6.0642499923706055
    5. '[' → logprob: -6.4392499923706055
    6. '(lambda' → logprob: -7.3142499923706055
    7. 'lambda' → logprob: -8.064249992370605
    8. '*' → logprob: -8.564249992370605
    9. '{' → logprob: -8.689249992370605
    10. 'max' → logprob: -9.189249992370605

Token 933: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6281998157501221
    2. '+' → logprob: -1.503199815750122
    3. '+[' → logprob: -2.128199815750122
    4. '+(' → logprob: -2.878199815750122
    5. ',' → logprob: -3.503199815750122
    6. ':' → logprob: -5.003199577331543
    7. '(' → logprob: -5.253199577331543
    8. ' +' → logprob: -5.628199577331543
    9. 'acc' → logprob: -5.753199577331543
    10. 'lambda' → logprob: -5.878199577331543

Token 934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008745286613702774
    2. '[' → logprob: -6.008745193481445
    3. '(' → logprob: -6.258745193481445
    4. '
' → logprob: -6.883745193481445
    5. 'abc' → logprob: -6.883745193481445
    6. 'acc' → logprob: -7.008745193481445
    7. '+' → logprob: -7.883745193481445
    8. '1' → logprob: -8.508745193481445
    9. ':' → logprob: -9.258745193481445
    10. 'max' → logprob: -9.383745193481445

Token 935: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08806736022233963
    2. '+[' → logprob: -3.7130672931671143
    3. ' +' → logprob: -3.8380672931671143
    4. '+(' → logprob: -3.9630672931671143
    5. ',' → logprob: -4.463067531585693
    6. '|' → logprob: -6.213067531585693
    7. ',max' → logprob: -6.213067531585693
    8. 'and' → logprob: -7.338067531585693
    9. ' and' → logprob: -7.838067531585693
    10. 'max' → logprob: -8.088067054748535

Token 936: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.0250009223818779
    2. '(' → logprob: -4.275001049041748
    3. 'max' → logprob: -5.650001049041748
    4. 'acc' → logprob: -5.775001049041748
    5. '1' → logprob: -5.900001049041748
    6. 'abs' → logprob: -7.150001049041748
    7. '((' → logprob: -8.77500057220459
    8. '0' → logprob: -9.02500057220459
    9. ' abc' → logprob: -9.15000057220459
    10. '(acc' → logprob: -9.77500057220459

Token 937: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2887271046638489
    2. '+' → logprob: -1.788727045059204
    3. '[' → logprob: -2.663727045059204
    4. ' +' → logprob: -5.663727283477783
    5. 'abc' → logprob: -5.913727283477783
    6. '0' → logprob: -6.038727283477783
    7. '+(' → logprob: -6.663727283477783
    8. ' ,' → logprob: -7.538727283477783
    9. ')+(' → logprob: -7.788727283477783
    10. '+[' → logprob: -7.913727283477783

Token 938: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3146255314350128
    2. '2' → logprob: -1.3146255016326904
    3. '0' → logprob: -6.8146257400512695
    4. '[' → logprob: -8.81462574005127
    5. '
' → logprob: -10.18962574005127
    6. '-' → logprob: -10.62712574005127
    7. '```' → logprob: -11.12712574005127
    8. '(' → logprob: -11.25212574005127
    9. '

' → logprob: -12.75212574005127
    10. '{' → logprob: -13.06462574005127

Token 939: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002592065604403615
    2. ' ,' → logprob: -6.127592086791992
    3. '+' → logprob: -8.502592086791992
    4. ',
' → logprob: -9.377592086791992
    5. ',(' → logprob: -9.627592086791992
    6. ',[' → logprob: -11.002592086791992
    7. ' +' → logprob: -11.877592086791992
    8. ',+' → logprob: -12.502592086791992
    9. '),' → logprob: -12.627592086791992
    10. '[' → logprob: -12.752592086791992

Token 940: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.04250771552324295
    2. '(acc' → logprob: -3.2925076484680176
    3. ' acc' → logprob: -5.667507648468018
    4. '(' → logprob: -7.917507648468018
    5. '[' → logprob: -8.417508125305176
    6. ' (' → logprob: -9.042508125305176
    7. '   ' → logprob: -9.417508125305176
    8. '
' → logprob: -10.417508125305176
    9. 'max' → logprob: -10.667508125305176
    10. '  ' → logprob: -10.667508125305176

Token 941: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015378349926322699
    2. '1' → logprob: -6.501537799835205
    3. ',' → logprob: -11.751538276672363
    4. '(' → logprob: -12.001538276672363
    5. '0' → logprob: -12.501538276672363
    6. 'def' → logprob: -12.501538276672363
    7. '+' → logprob: -12.751538276672363
    8. '
' → logprob: -13.126538276672363
    9. ':' → logprob: -13.626538276672363
    10. 'import' → logprob: -13.751538276672363

Token 942: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.458980300929397e-05
    2. '2' → logprob: -10.62508487701416
    3. '0' → logprob: -10.62508487701416
    4. '
' → logprob: -10.75008487701416
    5. '[' → logprob: -12.06258487701416
    6. '```' → logprob: -13.00008487701416
    7. '3' → logprob: -13.56258487701416
    8. ' ' → logprob: -14.12508487701416
    9. '(' → logprob: -14.18758487701416
    10. '

' → logprob: -14.68758487701416

Token 943: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001312617096118629
    2. ' +' → logprob: -7.001312732696533
    3. ',' → logprob: -8.376312255859375
    4. '+(' → logprob: -9.751312255859375
    5. ')+' → logprob: -9.876312255859375
    6. ')+(' → logprob: -11.126312255859375
    7. '+
' → logprob: -12.251312255859375
    8. '+b' → logprob: -12.251312255859375
    9. '
' → logprob: -12.501312255859375
    10. '[' → logprob: -12.501312255859375

Token 944: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008478637901134789
    2. ' +' → logprob: -7.625847816467285
    3. '+(' → logprob: -8.875847816467285
    4. '+[' → logprob: -8.875847816467285
    5. '[' → logprob: -11.125847816467285
    6. '+b' → logprob: -11.500847816467285
    7. '+c' → logprob: -11.875847816467285
    8. ',' → logprob: -12.000847816467285
    9. '+
' → logprob: -12.125847816467285
    10. 'max' → logprob: -12.563347816467285

Token 945: ' acc' (ID: 1259)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.42566782236099243
    2. 'acc' → logprob: -2.0506677627563477
    3. '(acc' → logprob: -2.0506677627563477
    4. '(' → logprob: -2.8006677627563477
    5. ' abc' → logprob: -4.675667762756348
    6. 'max' → logprob: -5.300667762756348
    7. 'abs' → logprob: -5.925667762756348
    8. 'False' → logprob: -6.300667762756348
    9. ' acc' → logprob: -6.300667762756348
    10. ' (' → logprob: -6.425667762756348

Token 946: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011218054220080376
    2. 'and' → logprob: -4.886218070983887
    3. '1' → logprob: -6.136218070983887
    4. '0' → logprob: -7.511218070983887
    5. ' and' → logprob: -8.636218070983887
    6. '
' → logprob: -8.636218070983887
    7. '+' → logprob: -9.136218070983887
    8. '(' → logprob: -9.136218070983887
    9. '2' → logprob: -9.386218070983887
    10. '#' → logprob: -10.511218070983887

Token 947: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5730354189872742
    2. '2' → logprob: -0.9480354189872742
    3. '0' → logprob: -3.323035478591919
    4. '[' → logprob: -4.82303524017334
    5. '(' → logprob: -5.94803524017334
    6. 'abc' → logprob: -6.82303524017334
    7. '-' → logprob: -8.13553524017334
    8. '
' → logprob: -9.19803524017334
    9. ' ' → logprob: -9.63553524017334
    10. '```' → logprob: -10.26053524017334

Token 948: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7472169399261475
    2. '<=' → logprob: -0.8722169399261475
    3. '<' → logprob: -2.9972169399261475
    4. ' +' → logprob: -3.9972169399261475
    5. '>=' → logprob: -4.122217178344727
    6. ' <=' → logprob: -4.372217178344727
    7. '[' → logprob: -6.122217178344727
    8. ' <' → logprob: -6.622217178344727
    9. '>' → logprob: -6.622217178344727
    10. '!=' → logprob: -6.747217178344727

Token 949: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.002818789565935731
    2. '1' → logprob: -6.002818584442139
    3. 'max' → logprob: -8.877819061279297
    4. 'acc' → logprob: -9.252819061279297
    5. '(' → logprob: -10.252819061279297
    6. ' abc' → logprob: -10.502819061279297
    7. 'abs' → logprob: -10.627819061279297
    8. ' ' → logprob: -12.002819061279297
    9. '   ' → logprob: -12.627819061279297
    10. 'ab' → logprob: -12.877819061279297

Token 950: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08415336161851883
    2. '1' → logprob: -3.084153413772583
    3. '(' → logprob: -4.084153175354004
    4. '2' → logprob: -4.209153175354004
    5. '0' → logprob: -5.959153175354004
    6. ']' → logprob: -9.084153175354004
    7. '
' → logprob: -9.709153175354004
    8. ',' → logprob: -9.709153175354004
    9. '][' → logprob: -9.834153175354004
    10. '```' → logprob: -9.959153175354004

Token 951: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43127742409706116
    2. '2' → logprob: -1.0562773942947388
    3. '0' → logprob: -6.181277275085449
    4. '[' → logprob: -7.681277275085449
    5. '
' → logprob: -11.18127727508545
    6. '(' → logprob: -11.68127727508545
    7. '```' → logprob: -11.80627727508545
    8. '   ' → logprob: -13.11877727508545
    9. '{' → logprob: -13.55627727508545
    10. '``' → logprob: -13.74377727508545

Token 952: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17613664269447327
    2. ',' → logprob: -2.8011367321014404
    3. '+' → logprob: -3.4261367321014404
    4. '<' → logprob: -3.9261367321014404
    5. '>=' → logprob: -4.051136493682861
    6. ' <=' → logprob: -4.426136493682861
    7. ')<=' → logprob: -5.801136493682861
    8. '),' → logprob: -5.801136493682861
    9. ')' → logprob: -5.926136493682861
    10. '-' → logprob: -6.051136493682861

Token 953: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.4751244783401489
    2. 'acc' → logprob: -0.9751244783401489
    3. 'ab' → logprob: -7.600124359130859
    4. 'abs' → logprob: -9.22512435913086
    5. '(' → logprob: -9.72512435913086
    6. ' abc' → logprob: -9.72512435913086
    7. '(acc' → logprob: -9.85012435913086
    8. '10' → logprob: -10.47512435913086
    9. '0' → logprob: -10.47512435913086
    10. 'max' → logprob: -10.60012435913086

Token 954: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020938136731274426
    2. '(' → logprob: -9.12520980834961
    3. '1' → logprob: -9.62520980834961
    4. '2' → logprob: -12.00020980834961
    5. '-' → logprob: -12.12520980834961
    6. ')' → logprob: -12.12520980834961
    7. ',' → logprob: -12.37520980834961
    8. ']' → logprob: -12.62520980834961
    9. '][' → logprob: -13.50020980834961
    10. '0' → logprob: -13.75020980834961

Token 955: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06265932321548462
    2. '2' → logprob: -2.81265926361084
    3. '[' → logprob: -7.68765926361084
    4. '0' → logprob: -8.56265926361084
    5. '
' → logprob: -11.31265926361084
    6. '```' → logprob: -12.37515926361084
    7. '(' → logprob: -12.50015926361084
    8. '3' → logprob: -12.68765926361084
    9. '``' → logprob: -13.25015926361084
    10. '' → logprob: -13.43765926361084

Token 956: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.23658746480941772
    2. ',' → logprob: -1.8615875244140625
    3. ')' → logprob: -2.9865875244140625
    4. '))' → logprob: -6.2365875244140625
    5. ')),' → logprob: -6.4865875244140625
    6. ' ,' → logprob: -8.111587524414062
    7. ' ),' → logprob: -8.111587524414062
    8. ' and' → logprob: -8.736587524414062
    9. ',f' → logprob: -10.111587524414062
    10. '),(' → logprob: -10.236587524414062

Token 957: 'ABC' (ID: 44197)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2423497587442398
    2. '(lambda' → logprob: -2.117349863052368
    3. 'lambda' → logprob: -2.742349863052368
    4. '0' → logprob: -4.492349624633789
    5. ' (' → logprob: -4.492349624633789
    6. '[' → logprob: -5.742349624633789
    7. ' lambda' → logprob: -6.492349624633789
    8. '('',' → logprob: -6.617349624633789
    9. 'f' → logprob: -7.617349624633789
    10. '([],' → logprob: -7.992349624633789

Token 958: ',(' (ID: 27243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14431029558181763
    2. ',' → logprob: -2.019310235977173
    3. ')[' → logprob: -7.769310474395752
    4. '[' → logprob: -8.144309997558594
    5. ',)' → logprob: -8.519309997558594
    6. ',[' → logprob: -8.519309997558594
    7. ',(' → logprob: -9.144309997558594
    8. '<|end|>' → logprob: -9.144309997558594
    9. ',None' → logprob: -10.269309997558594
    10. ');' → logprob: -10.394309997558594

Token 959: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20146313309669495
    2. '(' → logprob: -1.7014631032943726
    3. ' ' → logprob: -11.201462745666504
    4. '[' → logprob: -11.576462745666504
    5. '(-' → logprob: -11.951462745666504
    6. ' (' → logprob: -12.326462745666504
    7. '   ' → logprob: -12.576462745666504
    8. '-' → logprob: -13.201462745666504
    9. 'False' → logprob: -13.951462745666504
    10. '
' → logprob: -13.951462745666504

Token 960: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00467861071228981
    2. 'True' → logprob: -5.379678726196289
    3. 'False' → logprob: -10.504678726196289
    4. ' ,' → logprob: -11.254678726196289
    5. ' True' → logprob: -12.129678726196289
    6. '   ' → logprob: -12.504678726196289
    7. '0' → logprob: -12.879678726196289
    8. '  ' → logprob: -13.129678726196289
    9. '    ' → logprob: -13.379678726196289
    10. ' ' → logprob: -13.754678726196289

Token 961: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00011331788846291602
    2. ' True' → logprob: -9.625113487243652
    3. '1' → logprob: -10.000113487243652
    4. '   ' → logprob: -14.375113487243652
    5. 'False' → logprob: -14.625113487243652
    6. '(True' → logprob: -15.000113487243652
    7. '0' → logprob: -16.250112533569336
    8. '
' → logprob: -16.625112533569336
    9. ' ' → logprob: -16.875112533569336
    10. '  ' → logprob: -17.250112533569336

Token 962: '))[' (ID: 101036)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10070919245481491
    2. ')' → logprob: -2.3507091999053955
    3. '))
' → logprob: -8.100708961486816
    4. ')
' → logprob: -8.725708961486816
    5. ')))' → logprob: -11.225708961486816
    6. ')[' → logprob: -11.850708961486816
    7. '))[' → logprob: -11.975708961486816
    8. '));' → logprob: -12.725708961486816
    9. '))

' → logprob: -13.100708961486816
    10. '),' → logprob: -13.725708961486816

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018245819956064224
    2. '-' → logprob: -4.018245697021484
    3. '
' → logprob: -9.893245697021484
    4. '::-' → logprob: -11.393245697021484
    5. '```' → logprob: -11.643245697021484
    6. '[' → logprob: -11.768245697021484
    7. ':' → logprob: -12.393245697021484
    8. ' -' → logprob: -13.143245697021484
    9. '0' → logprob: -13.393245697021484
    10. '][' → logprob: -13.643245697021484

Token 964: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13199321925640106
    2. '<|end|>' → logprob: -2.131993293762207
    3. '()' → logprob: -5.756993293762207
    4. '
' → logprob: -6.881993293762207
    5. '())' → logprob: -8.131993293762207
    6. '```' → logprob: -8.506993293762207
    7. '<|end|>' → logprob: -8.756993293762207
    8. '}' → logprob: -10.006993293762207
    9. '(' → logprob: -10.256993293762207
    10. '#' → logprob: -10.381993293762207

Token 965: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5761231780052185
    2. 'f' → logprob: -1.3261232376098633
    3. ')' → logprob: -1.8261232376098633
    4. 'True' → logprob: -5.826123237609863
    5. '<|end|>' → logprob: -5.951123237609863
    6. '()' → logprob: -6.576123237609863
    7. '```' → logprob: -6.951123237609863
    8. '#' → logprob: -7.451123237609863
    9. 'if' → logprob: -7.826123237609863
    10. '[]' → logprob: -7.951123237609863

Token 966: '(['' (ID: 14113)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.875021934509277
    3. '(int' → logprob: -13.250021934509277
    4. '((' → logprob: -14.375021934509277
    5. '(bool' → logprob: -14.750021934509277
    6. '('' → logprob: -16.125022888183594
    7. 'f' → logprob: -16.375022888183594
    8. '("' → logprob: -16.875022888183594
    9. '()' → logprob: -17.125022888183594
    10. '(F' → logprob: -18.375022888183594

Token 967: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20587585866451263
    2. ''' → logprob: -2.330875873565674
    3. 'f' → logprob: -3.455875873565674
    4. ''f' → logprob: -3.580875873565674
    5. '"No' → logprob: -4.080875873565674
    6. 'True' → logprob: -5.955875873565674
    7. ''ok' → logprob: -6.955875873565674
    8. 'not' → logprob: -7.080875873565674
    9. ''T' → logprob: -7.330875873565674
    10. '0' → logprob: -7.580875873565674

Token 968: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.07891137897968292
    2. '',' → logprob: -2.578911304473877
    3. '","' → logprob: -12.078911781311035
    4. ''' → logprob: -12.078911781311035
    5. '\n' → logprob: -12.953911781311035
    6. '',"' → logprob: -13.453911781311035
    7. '',
' → logprob: -13.578911781311035
    8. 'ne' → logprob: -13.953911781311035
    9. ' ',' → logprob: -14.078911781311035
    10. 'w' → logprob: -14.203911781311035

Token 969: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.008763236925005913
    2. ' Yes' → logprob: -4.758763313293457
    3. ''' → logprob: -8.883763313293457
    4. '','' → logprob: -12.383763313293457
    5. 'YES' → logprob: -13.133763313293457
    6. '',' → logprob: -13.508763313293457
    7. 'No' → logprob: -13.758763313293457
    8. '\n' → logprob: -13.883763313293457
    9. ' '' → logprob: -16.25876235961914
    10. '']' → logprob: -16.50876235961914

Token 970: ''][' (ID: 22110)
  Prédit: '']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''][' → logprob: -0.03904513642191887
    2. '][' → logprob: -3.2890450954437256
    3. '"][' → logprob: -7.664045333862305
    4. ''])' → logprob: -8.664045333862305
    5. ''])[' → logprob: -9.164045333862305
    6. 'f' → logprob: -9.539045333862305
    7. '']' → logprob: -9.664045333862305
    8. '')[' → logprob: -10.039045333862305
    9. '()][' → logprob: -10.414045333862305
    10. '[' → logprob: -11.664045333862305

Token 971: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.700132997939363e-05
    2. ' f' → logprob: -11.000017166137695
    3. '(f' → logprob: -15.875017166137695
    4. 'int' → logprob: -16.500017166137695
    5. ' ' → logprob: -18.000017166137695
    6. '   ' → logprob: -18.000017166137695
    7. '(' → logprob: -19.125017166137695
    8. '  ' → logprob: -19.375017166137695
    9. '	f' → logprob: -19.500017166137695
    10. 'not' → logprob: -19.625017166137695

Token 972: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012322536204010248
    2. '()]' → logprob: -6.751232147216797
    3. '(' → logprob: -10.751232147216797
    4. '())' → logprob: -11.001232147216797
    5. '()==' → logprob: -12.001232147216797
    6. '()])
' → logprob: -12.626232147216797
    7. '()>' → logprob: -12.876232147216797
    8. ' ()' → logprob: -12.876232147216797
    9. '():' → logprob: -13.501232147216797
    10. '()`' → logprob: -13.501232147216797

Token 973: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4796380400657654
    2. '()' → logprob: -0.9796380400657654
    3. ')])' → logprob: -5.85463809967041
    4. '()]' → logprob: -6.85463809967041
    5. ']' → logprob: -7.85463809967041
    6. '()])
' → logprob: -7.85463809967041
    7. '(' → logprob: -8.10463809967041
    8. '())' → logprob: -8.22963809967041
    9. ')' → logprob: -9.35463809967041
    10. ']])' → logprob: -10.10463809967041

Token 974: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008838275447487831
    2. '<|end|>' → logprob: -4.883838176727295
    3. '#' → logprob: -7.883838176727295
    4. ']' → logprob: -8.383838653564453
    5. ')])' → logprob: -9.008838653564453
    6. '```' → logprob: -9.133838653564453
    7. '<|end|>' → logprob: -9.133838653564453
    8. '[' → logprob: -9.258838653564453
    9. ')]' → logprob: -10.633838653564453
    10. ',' → logprob: -10.883838653564453

Token 975: ' Un' (ID: 1367)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 976: '-comment' (ID: 110029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11786133050918579
    2. '<|end|>' → logprob: -2.742861270904541
    3. 'def' → logprob: -3.617861270904541
    4. 'used' → logprob: -5.242861270904541
    5. 'finished' → logprob: -5.492861270904541
    6. 'completed' → logprob: -6.492861270904541
    7. 'ittest' → logprob: -7.117861270904541
    8. 'ndef' → logprob: -7.117861270904541
    9. '#__' → logprob: -7.117861270904541
    10. 'it' → logprob: -7.242861270904541

Token 977: ' next' (ID: 2613)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08295439183712006
    2. '<|end|>' → logprob: -2.5829544067382812
    3. '```' → logprob: -5.707954406738281
    4. 'def' → logprob: -8.832954406738281
    5. '#print' → logprob: -8.957954406738281
    6. ')' → logprob: -9.332954406738281
    7. '...' → logprob: -9.707954406738281
    8. '<|end|>' → logprob: -10.082954406738281
    9. '#import' → logprob: -10.207954406738281
    10. ')#' → logprob: -10.332954406738281

Token 978: ' lines' (ID: 8698)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002088996348902583
    2. '#print' → logprob: -7.627089023590088
    3. '#line' → logprob: -7.877089023590088
    4. ''''
' → logprob: -8.50208854675293
    5. '"""
' → logprob: -8.50208854675293
    6. '
' → logprob: -8.75208854675293
    7. ' #' → logprob: -9.37708854675293
    8. '#import' → logprob: -9.50208854675293
    9. '﻿#' → logprob: -9.50208854675293
    10. '#if' → logprob: -9.75208854675293

Token 979: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0058492738753557205
    2. '#print' → logprob: -5.880849361419678
    3. '#if' → logprob: -6.130849361419678
    4. '#import' → logprob: -7.630849361419678
    5. '#__' → logprob: -9.75584888458252
    6. ''''
' → logprob: -9.75584888458252
    7. '"""
' → logprob: -10.00584888458252
    8. '#from' → logprob: -10.38084888458252
    9. '﻿#' → logprob: -10.50584888458252
    10. '
' → logprob: -10.75584888458252

Token 980: ' main' (ID: 2758)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8124644756317139
    2. '#' → logprob: -1.0624644756317139
    3. 'testing' → logprob: -2.687464475631714
    4. 'debug' → logprob: -3.437464475631714
    5. 'interactive' → logprob: -3.437464475631714
    6. 'local' → logprob: -4.062464714050293
    7. ' input' → logprob: -4.937464714050293
    8. ' testing' → logprob: -4.937464714050293
    9. 'manual' → logprob: -5.062464714050293
    10. 'sys' → logprob: -5.062464714050293

Token 981: '()
' (ID: 1234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12760281562805176
    2. '#if' → logprob: -2.1276028156280518
    3. '#import' → logprob: -8.627602577209473
    4. '#__' → logprob: -9.002602577209473
    5. ''''
' → logprob: -9.252602577209473
    6. 'if' → logprob: -9.377602577209473
    7. '"""
' → logprob: -9.377602577209473
    8. '#print' → logprob: -9.877602577209473
    9. '#
' → logprob: -10.877602577209473
    10. '#from' → logprob: -12.002602577209473

Token 982: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.062491241842508316
    2. '#if' → logprob: -2.8124911785125732
    3. '#import' → logprob: -8.687491416931152
    4. '#__' → logprob: -9.062491416931152
    5. ''''
' → logprob: -9.312491416931152
    6. '#print' → logprob: -9.687491416931152
    7. '"""
' → logprob: -9.937491416931152
    8. '#
' → logprob: -11.562491416931152
    9. '#from' → logprob: -12.062491416931152
    10. 'if' → logprob: -12.312491416931152

Token 983: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6021373271942139
    2. '#if' → logprob: -1.1021373271942139
    3. 'if' → logprob: -2.227137327194214
    4. 'def' → logprob: -4.477137565612793
    5. '#import' → logprob: -7.977137565612793
    6. '#__' → logprob: -8.352137565612793
    7. '#print' → logprob: -9.352137565612793
    8. ''''
' → logprob: -9.727137565612793
    9. 'import' → logprob: -9.852137565612793
    10. '"""
' → logprob: -10.102137565612793

Token 984: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07890333980321884
    2. ' main' → logprob: -2.5789034366607666
    3. '_main' → logprob: -11.578903198242188
    4. '	main' → logprob: -12.703903198242188
    5. 'solve' → logprob: -14.328903198242188
    6. '(main' → logprob: -15.703903198242188
    7. 'input' → logprob: -16.078903198242188
    8. 'def' → logprob: -16.453903198242188
    9. '__' → logprob: -16.703903198242188
    10. ' solve' → logprob: -16.828903198242188

Token 985: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003410647332202643
    2. '():
' → logprob: -8.000341415405273
    3. ' ():' → logprob: -12.875341415405273
    4. '()' → logprob: -13.125341415405273
    5. '():
' → logprob: -14.125341415405273
    6. 'def' → logprob: -16.000341415405273
    7. '():

' → logprob: -16.125341415405273
    8. '(' → logprob: -17.000341415405273
    9. '()>' → logprob: -17.375341415405273
    10. '#' → logprob: -17.750341415405273

Token 986: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.006149315740913153
    2. '<|end|>' → logprob: -5.7561492919921875
    3. '()' → logprob: -6.2561492919921875
    4. 'pass' → logprob: -8.006149291992188
    5. ')' → logprob: -8.881149291992188
    6. 'def' → logprob: -9.006149291992188
    7. '#print' → logprob: -9.506149291992188
    8. '...' → logprob: -9.756149291992188
    9. '
' → logprob: -9.881149291992188
    10. '   ' → logprob: -10.381149291992188

Token 987: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03233660012483597
    2. 'pass' → logprob: -4.532336711883545
    3. '<|end|>' → logprob: -4.532336711883545
    4. '...' → logprob: -5.282336711883545
    5. ' pass' → logprob: -6.157336711883545
    6. '   ' → logprob: -6.907336711883545
    7. 'def' → logprob: -7.782336711883545
    8. '()' → logprob: -8.157336235046387
    9. ' #' → logprob: -8.532336235046387
    10. '#print' → logprob: -8.657336235046387

Token 988: ' ...' (ID: 2550)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.39158451557159424
    2. '#' → logprob: -1.8915845155715942
    3. '   ' → logprob: -2.1415843963623047
    4. ' pass' → logprob: -4.016584396362305
    5. 'r' → logprob: -4.141584396362305
    6. 'if' → logprob: -4.766584396362305
    7. 'import' → logprob: -5.016584396362305
    8. 'main' → logprob: -6.266584396362305
    9. '...' (adapté à ' ...') → logprob: -6.641584396362305
    10. 'N' → logprob: -6.766584396362305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 986
Tokens correctement prédits (1ère position, stricte): 382
Tokens correctement prédits (1ère position, avec adaptation): 385
Tokens correctement prédits (top 10): 780
Précision stricte (1ère position): 38.74%
Précision adaptée (1ère position): 39.05%
Précision (top 10): 79.11%
================================================================================
