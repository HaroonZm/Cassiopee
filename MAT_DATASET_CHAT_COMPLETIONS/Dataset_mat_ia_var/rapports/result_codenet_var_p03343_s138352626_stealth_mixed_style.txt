================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,k,q=map(int,input().split())
a=[int(x) for x in input().split()]
res=10**9

def min_diff(arr, k, q, ref):
    A=[]
    l=[]
    ln=0
    # On alterne for-i et while
    idx = 0
    arrplus = arr[:]+[-1]
    while idx<len(arrplus):
        val = arrplus[idx]
        if ref>val:
            if ln-k+1>=0:
                l.sort(reverse=False)
                for x in l[:ln-k+1]:
                    A.append(x)
            l.clear()
            ln=0
        else:
            l.append(val)
            ln=ln+1
        idx+=1
    if len(A)<q:
        return None
    A.sort()
    return A[q-1]-ref

# Programmation fonctionnelle pour le filtre, puis impératif
for pick in set(a):
    result = min_diff(a, k, q, pick)
    if result is not None:
        res = min(res,result)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',k' (ID: 35155)
  → Token d'amorce (pas de prédiction)

Token 2: ',q' (ID: 86188)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020953131839632988
    2. ' =' → logprob: -4.395953178405762
    3. ',' → logprob: -5.395953178405762
    4. '[' → logprob: -6.645953178405762
    5. ';' → logprob: -6.770953178405762
    6. ' ' → logprob: -7.645953178405762
    7. ')' → logprob: -8.270953178405762
    8. '.' → logprob: -8.520953178405762
    9. '=
' → logprob: -8.895953178405762
    10. '```' → logprob: -8.895953178405762

Token 4: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1035722866654396
    2. ' map' → logprob: -2.353572368621826
    3. 'input' → logprob: -6.103572368621826
    4. 'list' → logprob: -7.853572368621826
    5. '0' → logprob: -8.228571891784668
    6. ' input' → logprob: -8.478571891784668
    7. ' list' → logprob: -9.103571891784668
    8. ' ' → logprob: -9.478571891784668
    9. '10' → logprob: -10.603571891784668
    10. '5' → logprob: -11.228571891784668

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30367034673690796
    2. '<|end|>' → logprob: -1.8036704063415527
    3. '```' → logprob: -3.3036704063415527
    4. '_' → logprob: -3.3036704063415527
    5. ')' → logprob: -5.553670406341553
    6. '(int' → logprob: -5.553670406341553
    7. '(lambda' → logprob: -5.678670406341553
    8. '<|end|>' → logprob: -6.553670406341553
    9. '(_' → logprob: -7.053670406341553
    10. '[' → logprob: -7.553670406341553

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08281394094228745
    2. '(' → logprob: -3.0828139781951904
    3. '(input' → logprob: -3.5828139781951904
    4. '`)' → logprob: -6.582813739776611
    5. '<|end|>' → logprob: -6.832813739776611
    6. '(n' → logprob: -7.457813739776611
    7. ')(' → logprob: -7.707813739776611
    8. '(int' → logprob: -8.33281421661377
    9. '```' → logprob: -8.45781421661377
    10. '")' → logprob: -8.45781421661377

Token 7: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5921725630760193
    2. '())' → logprob: -0.9671725630760193
    3. '()' → logprob: -2.967172622680664
    4. '<|end|>' → logprob: -5.967172622680664
    5. '(' → logprob: -6.092172622680664
    6. '().' → logprob: -6.217172622680664
    7. '`()' → logprob: -6.467172622680664
    8. '`)' → logprob: -7.092172622680664
    9. '();)' → logprob: -7.342172622680664
    10. '')' → logprob: -7.467172622680664

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001673061487963423
    2. 'strip' → logprob: -8.750166893005371
    3. 'rstrip' → logprob: -11.875166893005371
    4. 'spl' → logprob: -14.250166893005371
    5. '(split' → logprob: -14.375166893005371
    6. ' split' → logprob: -14.875166893005371
    7. 's' → logprob: -15.500166893005371
    8. ')' → logprob: -17.125167846679688
    9. 'replace' → logprob: -18.125167846679688
    10. '_split' → logprob: -18.375167846679688

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028926096856594086
    2. '))' → logprob: -6.25289249420166
    3. '())' → logprob: -7.50289249420166
    4. '`)' → logprob: -8.12789249420166
    5. ')`' → logprob: -10.37789249420166
    6. '()' → logprob: -10.62789249420166
    7. '```' → logprob: -11.50289249420166
    8. ')))' → logprob: -12.00289249420166
    9. '')' → logprob: -12.12789249420166
    10. '`' → logprob: -12.37789249420166

Token 10: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4900325536727905
    2. '\n' → logprob: -1.6150325536727905
    3. '
' → logprob: -2.74003267288208
    4. 'n' → logprob: -2.99003267288208
    5. 'for' → logprob: -3.61503267288208
    6. 'arr' → logprob: -4.74003267288208
    7. 's' → logprob: -4.74003267288208
    8. '\' → logprob: -5.11503267288208
    9. '' → logprob: -5.24003267288208
    10. ' 
' → logprob: -5.86503267288208

Token 11: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000586991140153259
    2. '[a' → logprob: -8.250587463378906
    3. '\[' → logprob: -9.250587463378906
    4. '.' → logprob: -9.750587463378906
    5. '=' → logprob: -10.000587463378906
    6. '[n' → logprob: -10.500587463378906
    7. '[i' → logprob: -10.625587463378906
    8. '[]' → logprob: -10.875587463378906
    9. 'a' → logprob: -11.125587463378906
    10. '[int' → logprob: -11.875587463378906

Token 12: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018041764851659536
    2. '0' → logprob: -6.501804351806641
    3. ' int' → logprob: -8.25180435180664
    4. 'map' → logprob: -10.87680435180664
    5. ']int' → logprob: -11.75180435180664
    6. '(int' → logprob: -12.50180435180664
    7. 'i' → logprob: -12.62680435180664
    8. '*' → logprob: -13.00180435180664
    9. '[int' → logprob: -13.50180435180664
    10. 'list' → logprob: -13.62680435180664

Token 13: '(x' (ID: 4061)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7777999639511108
    2. '(x' → logprob: -1.2777999639511108
    3. '(' → logprob: -1.4027999639511108
    4. '()]' → logprob: -4.7778000831604
    5. '(i' → logprob: -5.4028000831604
    6. ']' → logprob: -6.4028000831604
    7. '()' → logprob: -7.1528000831604
    8. '(a' → logprob: -8.152799606323242
    9. '(
' → logprob: -9.152799606323242
    10. '(

' → logprob: -10.027799606323242

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002552242483943701
    2. 'for' → logprob: -7.127552032470703
    3. '(x' → logprob: -7.377552032470703
    4. '()' → logprob: -7.627552032470703
    5. '(input' → logprob: -8.502552032470703
    6. '())' → logprob: -8.877552032470703
    7. ' for' → logprob: -9.377552032470703
    8. '(' → logprob: -9.627552032470703
    9. ' )' → logprob: -10.002552032470703
    10. 'input' → logprob: -10.252552032470703

Token 15: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28290262818336487
    2. ' for' → logprob: -1.5329025983810425
    3. ')' → logprob: -3.657902717590332
    4. 'input' → logprob: -6.032902717590332
    5. '(input' → logprob: -6.407902717590332
    6. '(x' → logprob: -9.032902717590332
    7. ' ' → logprob: -9.157902717590332
    8. ' input' → logprob: -9.282902717590332
    9. ',input' → logprob: -9.407902717590332
    10. 'x' → logprob: -9.907902717590332

Token 16: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3267861604690552
    2. 'input' → logprob: -1.3267861604690552
    3. '<|end|>' → logprob: -4.576786041259766
    4. '=input' → logprob: -6.576786041259766
    5. '<|end|>' → logprob: -7.576786041259766
    6. '_input' → logprob: -7.826786041259766
    7. ' ' → logprob: -8.326786041259766
    8. '(input' → logprob: -8.451786041259766
    9. '	input' → logprob: -9.576786041259766
    10. ',input' → logprob: -9.826786041259766

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02728760614991188
    2. 'in' → logprob: -3.652287721633911
    3. 'input' → logprob: -7.527287483215332
    4. '(' → logprob: -8.402287483215332
    5. '(input' → logprob: -9.152287483215332
    6. '_' → logprob: -10.902287483215332
    7. '=input' → logprob: -10.902287483215332
    8. ' input' → logprob: -11.152287483215332
    9. ' ' → logprob: -11.277287483215332
    10. 'a' → logprob: -11.777287483215332

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861528143286705
    2. ' input' → logprob: -4.758615493774414
    3. 'range' → logprob: -14.633615493774414
    4. '(input' → logprob: -15.633615493774414
    5. '=input' → logprob: -16.508615493774414
    6. '<input' → logprob: -17.633615493774414
    7. ' range' → logprob: -18.258615493774414
    8. ' ' → logprob: -18.258615493774414
    9. ',input' → logprob: -18.633615493774414
    10. '	input' → logprob: -19.258615493774414

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14171965420246124
    2. '()' → logprob: -2.1417195796966553
    3. '()]' → logprob: -4.266719818115234
    4. '())' → logprob: -7.516719818115234
    5. '()].' → logprob: -9.766719818115234
    6. '()][' → logprob: -10.641719818115234
    7. '(' → logprob: -11.516719818115234
    8. '()],' → logprob: -12.266719818115234
    9. '()>' → logprob: -12.891719818115234
    10. '()))' → logprob: -13.391719818115234

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.53050296427682e-05
    2. 'strip' → logprob: -9.50008487701416
    3. ' split' → logprob: -11.87508487701416
    4. 'rstrip' → logprob: -12.62508487701416
    5. 'spl' → logprob: -16.125085830688477
    6. '(split' → logprob: -16.250085830688477
    7. '.split' → logprob: -19.875085830688477
    8. ' strip' → logprob: -20.375085830688477
    9. ')' → logprob: -20.500085830688477
    10. 'replace' → logprob: -20.625085830688477

Token 21: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.006887884344905615
    2. '()' → logprob: -5.631887912750244
    3. '())' → logprob: -5.756887912750244
    4. '(' → logprob: -9.881887435913086
    5. ')]' → logprob: -10.381887435913086
    6. ']' → logprob: -10.631887435913086
    7. '()][' → logprob: -11.881887435913086
    8. '()]
' → logprob: -13.506887435913086
    9. '()],' → logprob: -13.881887435913086
    10. '('' → logprob: -14.131887435913086

Token 22: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.266507089138031
    2. 'r' → logprob: -2.516507148742676
    3. 'c' → logprob: -3.266507148742676
    4. 's' → logprob: -3.516507148742676
    5. 'm' → logprob: -4.141507148742676
    6. 'k' → logprob: -4.141507148742676
    7. 'q' → logprob: -4.266507148742676
    8. 'a' → logprob: -4.766507148742676
    9. 'b' → logprob: -5.016507148742676
    10. 'p' → logprob: -5.266507148742676

Token 23: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45197680592536926
    2. '[' → logprob: -2.076976776123047
    3. ' =' → logprob: -2.201976776123047
    4. '.' → logprob: -2.701976776123047
    5. 'u' → logprob: -4.201976776123047
    6. '[:]' → logprob: -4.201976776123047
    7. '=[]' → logprob: -4.201976776123047
    8. 's' → logprob: -5.826976776123047
    9. '[u' → logprob: -6.201976776123047
    10. ' ' → logprob: -6.201976776123047

Token 24: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0410211086273193
    2. '[]' → logprob: -1.0410211086273193
    3. '[' → logprob: -1.2910211086273193
    4. 'a' → logprob: -5.291021347045898
    5. '[max' → logprob: -5.541021347045898
    6. 'sum' → logprob: -5.666021347045898
    7. '[a' → logprob: -5.666021347045898
    8. 'max' → logprob: -7.041021347045898
    9. '[k' → logprob: -7.916021347045898
    10. ' []' → logprob: -8.416021347045898

Token 25: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2812256813049316
    2. '0' → logprob: -1.5312256813049316
    3. '%' → logprob: -1.7812256813049316
    4. ' ' → logprob: -1.7812256813049316
    5. '**' → logprob: -3.6562256813049316
    6. '+' → logprob: -3.7812256813049316
    7. ',' → logprob: -3.9062256813049316
    8. '[' → logprob: -3.9062256813049316
    9. ')' → logprob: -4.031225681304932
    10. '>' → logprob: -4.531225681304932

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00016706773021724075
    2. '7' → logprob: -10.125166893005371
    3. '10' → logprob: -10.125166893005371
    4. '6' → logprob: -10.375166893005371
    5. '8' → logprob: -10.750166893005371
    6. '18' → logprob: -11.000166893005371
    7. '5' → logprob: -11.500166893005371
    8. '12' → logprob: -12.875166893005371
    9. '15' → logprob: -13.000166893005371
    10. '11' → logprob: -13.875166893005371

Token 27: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5993586182594299
    2. '<|end|>' → logprob: -1.0993585586547852
    3. ' ' → logprob: -2.599358558654785
    4. '
' → logprob: -4.599358558654785
    5. 'for' → logprob: -4.724358558654785
    6. ' 
' → logprob: -5.099358558654785
    7. ' for' → logprob: -5.474358558654785
    8. '\' → logprob: -5.974358558654785
    9. '+
' → logprob: -6.599358558654785
    10. '<|end|>' → logprob: -6.724358558654785

Token 28: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8875318765640259
    2. ' for' → logprob: -1.0125318765640259
    3. 'for' → logprob: -1.7625318765640259
    4. '+' → logprob: -3.3875317573547363
    5. '<|end|>' → logprob: -4.887531757354736
    6. ' 
' → logprob: -5.387531757354736
    7. ')' → logprob: -6.387531757354736
    8. '
' → logprob: -6.637531757354736
    9. '\n' → logprob: -7.137531757354736
    10. ' ' → logprob: -7.637531757354736

Token 29: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12421396374702454
    2. ' solve' → logprob: -2.374213933944702
    3. ' find' → logprob: -5.374214172363281
    4. ' space' → logprob: -5.499214172363281
    5. ' f' → logprob: -5.624214172363281
    6. ' dfs' → logprob: -5.749214172363281
    7. ' calculate' → logprob: -6.374214172363281
    8. ' check' → logprob: -6.499214172363281
    9. ' main' → logprob: -6.749214172363281
    10. ' min' → logprob: -6.874214172363281

Token 30: '_diff' (ID: 41047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022695578634738922
    2. '(' → logprob: -4.147695541381836
    3. '_sum' → logprob: -6.522695541381836
    4. '_dist' → logprob: -7.272695541381836
    5. '(a' → logprob: -7.397695541381836
    6. '_distance' → logprob: -7.397695541381836
    7. '_val' → logprob: -7.647695541381836
    8. '(_' → logprob: -7.897695541381836
    9. '_(' → logprob: -8.522695541381836
    10. '_diff' → logprob: -8.772695541381836

Token 31: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2156398445367813
    2. '_' → logprob: -2.09063982963562
    3. '(a' → logprob: -3.09063982963562
    4. '_(' → logprob: -4.090640068054199
    5. '(_' → logprob: -5.340640068054199
    6. ' (' → logprob: -6.090640068054199
    7. '_between' → logprob: -8.2156400680542
    8. '(x' → logprob: -8.5906400680542
    9. '(_)' → logprob: -9.3406400680542
    10. '```' → logprob: -9.7156400680542

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25926631689071655
    2. '):' → logprob: -1.5092663764953613
    3. ',n' → logprob: -6.384266376495361
    4. ',p' → logprob: -6.884266376495361
    5. ',index' → logprob: -7.134266376495361
    6. ',a' → logprob: -7.509266376495361
    7. ' ,' → logprob: -7.509266376495361
    8. ')' → logprob: -7.634266376495361
    9. ',i' → logprob: -7.759266376495361
    10. '[' → logprob: -8.009265899658203

Token 33: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.45451733469963074
    2. ' k' → logprob: -1.3295173645019531
    3. 'm' → logprob: -3.454517364501953
    4. ' m' → logprob: -4.204517364501953
    5. 'l' → logprob: -4.454517364501953
    6. ' l' → logprob: -4.954517364501953
    7. 'x' → logprob: -5.329517364501953
    8. ' x' → logprob: -5.704517364501953
    9. 'n' → logprob: -5.954517364501953
    10. ' size' → logprob: -6.079517364501953

Token 34: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007013569120317698
    2. ')' → logprob: -7.625701427459717
    3. ',' → logprob: -8.750700950622559
    4. ' ):' → logprob: -10.250700950622559
    5. '):
' → logprob: -11.375700950622559
    6. '):
' → logprob: -13.625700950622559
    7. ']:' → logprob: -13.875700950622559
    8. ':' → logprob: -14.000700950622559
    9. ')):' → logprob: -14.500700950622559
    10. ''):' → logprob: -15.000700950622559

Token 35: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4617607891559601
    2. ' q' → logprob: -1.0867607593536377
    3. ' n' → logprob: -4.586760997772217
    4. 'n' → logprob: -4.836760997772217
    5. ' ' → logprob: -5.711760997772217
    6. ')' → logprob: -6.961760997772217
    7. 'i' → logprob: -6.961760997772217
    8. ' i' → logprob: -7.086760997772217
    9. ' res' → logprob: -7.211760997772217
    10. ' start' → logprob: -7.336760997772217

Token 36: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020849506836384535
    2. ')' → logprob: -6.502084732055664
    3. ',' → logprob: -7.877084732055664
    4. ' ):' → logprob: -8.752084732055664
    5. ':' → logprob: -11.377084732055664
    6. ']:' → logprob: -11.877084732055664
    7. '):
' → logprob: -11.877084732055664
    8. ''):' → logprob: -12.002084732055664
    9. '[]):' → logprob: -13.502084732055664
    10. ')):' → logprob: -13.752084732055664

Token 37: ' ref' (ID: 2714)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9661620259284973
    2. ' i' → logprob: -2.5911619663238525
    3. 'n' → logprob: -2.7161619663238525
    4. ' idx' → logprob: -2.9661619663238525
    5. ' ):' → logprob: -3.2161619663238525
    6. ' m' → logprob: -3.2161619663238525
    7. ' l' → logprob: -3.3411619663238525
    8. ' start' → logprob: -3.4661619663238525
    9. ' res' → logprob: -3.5911619663238525
    10. ' )' → logprob: -3.5911619663238525

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035583775024861097
    2. '):
' → logprob: -6.253558158874512
    3. ' ):' → logprob: -7.128558158874512
    4. '):
' → logprob: -8.628558158874512
    5. '_arr' → logprob: -8.878558158874512
    6. 'er' → logprob: -8.878558158874512
    7. '=' → logprob: -9.503558158874512
    8. ')' → logprob: -9.628558158874512
    9. 'arr' → logprob: -10.253558158874512
    10. '_array' → logprob: -10.378558158874512

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021725050173699856
    2. '):' → logprob: -6.627172470092773
    3. ' :' → logprob: -8.127172470092773
    4. ':
' → logprob: -8.377172470092773
    5. ' ' → logprob: -9.627172470092773
    6. ':**' → logprob: -9.752172470092773
    7. ')' → logprob: -10.002172470092773
    8. ',' → logprob: -10.127172470092773
    9. '   ' → logprob: -10.127172470092773
    10. ':return' → logprob: -10.752172470092773

Token 40: ' A' (ID: 355)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.7474762797355652
    2. '   ' → logprob: -0.9974762797355652
    3. 'arr' → logprob: -2.62247633934021
    4. ' a' → logprob: -3.99747633934021
    5. ' res' → logprob: -3.99747633934021
    6. ' sorted' → logprob: -4.747476100921631
    7. ' ' → logprob: -4.872476100921631
    8. '    ' → logprob: -5.247476100921631
    9. ' n' → logprob: -5.622476100921631
    10. ' if' → logprob: -5.997476100921631

Token 41: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22657620906829834
    2. '=len' → logprob: -2.351576328277588
    3. '.sort' → logprob: -3.476576328277588
    4. ' =' → logprob: -3.851576328277588
    5. '=[]' → logprob: -4.101576328277588
    6. '=[]
' → logprob: -4.476576328277588
    7. '=[' → logprob: -4.976576328277588
    8. '.append' → logprob: -4.976576328277588
    9. 'bs' → logprob: -5.601576328277588
    10. '=A' → logprob: -6.726576328277588

Token 42: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20819419622421265
    2. ' for' → logprob: -1.9581942558288574
    3. '=' → logprob: -4.208194255828857
    4. ' ' → logprob: -4.708194255828857
    5. ' =' → logprob: -5.458194255828857
    6. ')' → logprob: -5.458194255828857
    7. '   ' → logprob: -5.458194255828857
    8. ',' → logprob: -6.083194255828857
    9. '	for' → logprob: -6.208194255828857
    10. 'n' → logprob: -7.208194255828857

Token 43: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48470988869667053
    2. 'for' → logprob: -0.9847098588943481
    3. 'i' → logprob: -5.609709739685059
    4. 'n' → logprob: -7.234709739685059
    5. 'l' (adapté à ' l') → logprob: -7.359709739685059
    6. ' i' → logprob: -7.359709739685059
    7. '=' → logprob: -7.609709739685059
    8. 'prev' → logprob: -7.734709739685059
    9. 'count' → logprob: -7.984709739685059
    10. 'idx' → logprob: -8.109709739685059

Token 44: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018053477630019188
    2. ',' → logprob: -4.5180535316467285
    3. ' =' → logprob: -5.6430535316467285
    4. '=[]' → logprob: -6.6430535316467285
    5. '=len' → logprob: -7.3930535316467285
    6. 'en' → logprob: -7.6430535316467285
    7. 'st' → logprob: -8.51805305480957
    8. '=int' → logprob: -8.76805305480957
    9. '=i' → logprob: -9.51805305480957
    10. 'e' → logprob: -9.89305305480957

Token 45: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8248559832572937
    2. 'for' → logprob: -0.9498559832572937
    3. '=' → logprob: -2.5748560428619385
    4. 'n' → logprob: -3.8248560428619385
    5. ' =' → logprob: -3.9498560428619385
    6. 'i' → logprob: -4.199855804443359
    7. ',' → logprob: -4.449855804443359
    8. '
' → logprob: -5.449855804443359
    9. ' ' → logprob: -5.699855804443359
    10. ' 
' → logprob: -5.824855804443359

Token 46: ' ln' (ID: 68859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49705448746681213
    2. ' for' → logprob: -1.4970544576644897
    3. 'count' → logprob: -2.7470545768737793
    4. 'i' → logprob: -2.8720545768737793
    5. 'n' → logprob: -4.247054576873779
    6. 'cnt' → logprob: -5.122054576873779
    7. 'c' → logprob: -5.872054576873779
    8. 'start' → logprob: -5.872054576873779
    9. 'diff' → logprob: -5.997054576873779
    10. '   ' → logprob: -6.122054576873779

Token 47: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017204906791448593
    2. '=len' → logprob: -4.267204761505127
    3. '=[]' → logprob: -6.517204761505127
    4. ' =' → logprob: -7.767204761505127
    5. '=int' → logprob: -7.767204761505127
    6. 'en' → logprob: -8.267205238342285
    7. 'g' → logprob: -8.517205238342285
    8. '=en' → logprob: -9.517205238342285
    9. 'n' → logprob: -9.642205238342285
    10. ',' → logprob: -10.892205238342285

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20556503534317017
    2. 'len' → logprob: -1.7055649757385254
    3. ' len' → logprob: -6.205564975738525
    4. ' ' → logprob: -6.955564975738525
    5. 'k' → logprob: -8.080565452575684
    6. '1' → logprob: -8.205565452575684
    7. 'n' → logprob: -8.580565452575684
    8. '[]' → logprob: -8.580565452575684
    9. 'q' → logprob: -9.830565452575684
    10. '(len' → logprob: -10.330565452575684

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0715237855911255
    2. '<|end|>' → logprob: -1.8215237855911255
    3. ' ' → logprob: -2.446523666381836
    4. '
' → logprob: -2.571523666381836
    5. 'for' → logprob: -2.821523666381836
    6. 'n' → logprob: -2.946523666381836
    7. '	for' → logprob: -2.946523666381836
    8. 'i' → logprob: -3.321523666381836
    9. '   ' → logprob: -3.821523666381836
    10. ' 
' → logprob: -3.946523666381836

Token 51: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21951909363269806
    2. ' for' → logprob: -1.9695191383361816
    3. 'i' → logprob: -3.0945191383361816
    4. 'n' → logprob: -5.094519138336182
    5. 'f' → logprob: -6.094519138336182
    6. '   ' → logprob: -6.594519138336182
    7. 'max' → logprob: -7.219519138336182
    8. ' ' → logprob: -7.719519138336182
    9. ' i' → logprob: -8.094518661499023
    10. '	for' → logprob: -8.719518661499023

Token 52: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30783072113990784
    2. ' for' → logprob: -1.5578306913375854
    3. 'i' → logprob: -3.307830810546875
    4. 'n' → logprob: -5.182830810546875
    5. 'f' → logprob: -5.682830810546875
    6. ' ' → logprob: -5.807830810546875
    7. '   ' → logprob: -5.932830810546875
    8. ' i' → logprob: -7.307830810546875
    9. 'if' → logprob: -8.057830810546875
    10. 'l' → logprob: -8.432830810546875

Token 53: ' alter' (ID: 14183)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014973784796893597
    2. ' for' → logprob: -4.7649736404418945
    3. ' e' → logprob: -6.2649736404418945
    4. 'es' → logprob: -6.5149736404418945
    5. 'for' → logprob: -7.0149736404418945
    6. ' the' → logprob: -7.0149736404418945
    7. 'line' → logprob: -8.764973640441895
    8. ' line' → logprob: -8.764973640441895
    9. 'ly' → logprob: -9.389973640441895
    10. '   ' → logprob: -9.514973640441895

Token 54: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05217419192194939
    2. 'ing' → logprob: -3.0521740913391113
    3. 't' → logprob: -6.177174091339111
    4. 'ed' → logprob: -7.927174091339111
    5. 'e' → logprob: -8.67717456817627
    6. 'a' → logprob: -8.80217456817627
    7. '   ' → logprob: -8.92717456817627
    8. 'l' → logprob: -9.17717456817627
    9. '_' → logprob: -9.30217456817627
    10. 'ner' → logprob: -9.80217456817627

Token 55: ' for' (ID: 395)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.3539426326751709
    2. ' entre' → logprob: -2.603942632675171
    3. 'between' → logprob: -2.853942632675171
    4. ' ' → logprob: -2.853942632675171
    5. 'i' → logprob: -3.853942632675171
    6. ' i' → logprob: -3.978942632675171
    7. ' for' → logprob: -4.97894287109375
    8. ' =' → logprob: -5.10394287109375
    9. 'l' → logprob: -5.22894287109375
    10. 's' → logprob: -5.35394287109375

Token 56: '-i' (ID: 18499)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31455904245376587
    2. ' i' → logprob: -1.314558982849121
    3. ' ' → logprob: -7.189558982849121
    4. ' ' → logprob: -9.439558982849121
    5. 'r' → logprob: -9.689558982849121
    6. 's' → logprob: -10.064558982849121
    7. ' loop' → logprob: -10.314558982849121
    8. 'e' → logprob: -10.314558982849121
    9. 't' → logprob: -10.439558982849121
    10. '```' → logprob: -10.689558982849121

Token 57: ' et' (ID: 859)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0164315700531006
    2. 'nd' → logprob: -2.0164315700531006
    3. ' range' → logprob: -2.1414315700531006
    4. 'r' → logprob: -2.7664315700531006
    5. ' ' → logprob: -2.7664315700531006
    6. 'n' → logprob: -3.0164315700531006
    7. ' i' → logprob: -4.01643180847168
    8. ' and' → logprob: -4.14143180847168
    9. 'nt' → logprob: -4.26643180847168
    10. 'nge' → logprob: -4.39143180847168

Token 58: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9894096851348877
    2. ' while' → logprob: -1.1144096851348877
    3. 'for' → logprob: -1.9894096851348877
    4. 'range' → logprob: -3.1144096851348877
    5. 'f' → logprob: -3.2394096851348877
    6. ' for' → logprob: -3.2394096851348877
    7. 'or' → logprob: -4.489409446716309
    8. ' i' → logprob: -4.864409446716309
    9. 'i' → logprob: -4.989409446716309
    10. ' range' → logprob: -4.989409446716309

Token 59: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.483524888753891
    2. ' i' → logprob: -1.2335249185562134
    3. ' ' → logprob: -3.733524799346924
    4. '<|end|>' → logprob: -4.233524799346924
    5. ' loop' → logprob: -4.608524799346924
    6. ',' → logprob: -4.733524799346924
    7. ' for' → logprob: -5.108524799346924
    8. 's' → logprob: -5.483524799346924
    9. ' (' → logprob: -6.233524799346924
    10. 'l' → logprob: -6.233524799346924

Token 60: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2308492660522461
    2. ' for' → logprob: -1.980849266052246
    3. 'i' → logprob: -3.855849266052246
    4. 'for' → logprob: -4.605849266052246
    5. ' ' → logprob: -4.730849266052246
    6. ',' → logprob: -4.730849266052246
    7. 'n' → logprob: -6.230849266052246
    8. ' or' → logprob: -6.355849266052246
    9. ' n' → logprob: -6.730849266052246
    10. '<|end|>' → logprob: -6.730849266052246

Token 61: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6794725060462952
    2. ' for' → logprob: -1.0544724464416504
    3. 'i' → logprob: -2.0544724464416504
    4. ' i' → logprob: -4.42947244644165
    5. '   ' → logprob: -6.05447244644165
    6. ' ' → logprob: -7.05447244644165
    7. 'f' → logprob: -7.30447244644165
    8. 'n' → logprob: -7.67947244644165
    9. '```' → logprob: -9.929472923278809
    10. 'r' → logprob: -10.304472923278809

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14493604004383087
    2. ' =' → logprob: -2.0199360847473145
    3. ',' → logprob: -6.3949360847473145
    4. ' ' → logprob: -8.769935607910156
    5. 's' → logprob: -9.519935607910156
    6. '=i' → logprob: -10.019935607910156
    7. ' ,' → logprob: -10.144935607910156
    8. '=int' → logprob: -10.394935607910156
    9. '=n' → logprob: -10.519935607910156
    10. ' in' → logprob: -10.519935607910156

Token 63: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030074777081608772
    2. ' ' → logprob: -3.5300748348236084
    3. '-' → logprob: -8.530075073242188
    4. ' -' → logprob: -9.155075073242188
    5. '1' → logprob: -12.280075073242188
    6. 'n' → logprob: -13.030075073242188
    7. 'len' → logprob: -13.280075073242188
    8. ' len' → logprob: -13.530075073242188
    9. ' n' → logprob: -13.655075073242188
    10. ' i' → logprob: -13.780075073242188

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003224652726203203
    2. '-' → logprob: -5.878224849700928
    3. ' ' → logprob: -8.37822437286377
    4. 'i' → logprob: -10.00322437286377
    5. 'len' → logprob: -10.25322437286377
    6. ' -' → logprob: -10.50322437286377
    7. 'k' → logprob: -11.00322437286377
    8. '1' → logprob: -11.00322437286377
    9. 'n' → logprob: -11.00322437286377
    10. 'q' → logprob: -11.75322437286377

Token 65: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' arr' (ID: 1724)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35086655616760254
    2. 'n' → logprob: -1.9758665561676025
    3. ' while' → logprob: -2.2258665561676025
    4. '<|end|>' → logprob: -3.8508665561676025
    5. ' ' → logprob: -3.9758665561676025
    6. '
' → logprob: -6.350866317749023
    7. 'for' → logprob: -6.600866317749023
    8. 's' → logprob: -6.850866317749023
    9. 'w' → logprob: -6.975866317749023
    10. ')' → logprob: -7.225866317749023

Token 68: 'plus' (ID: 11601)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2562536001205444
    2. ' =' → logprob: -1.6312536001205444
    3. '_len' → logprob: -1.8812536001205444
    4. '=' → logprob: -2.131253719329834
    5. '[idx' → logprob: -2.256253719329834
    6. '_length' → logprob: -3.631253719329834
    7. '.append' → logprob: -3.881253719329834
    8. 'length' → logprob: -4.006253719329834
    9. '[' → logprob: -4.256253719329834
    10. '[:]' → logprob: -5.131253719329834

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.311375230550766
    2. '=' → logprob: -1.5613752603530884
    3. '=[]' → logprob: -3.686375141143799
    4. '[idx' → logprob: -4.811375141143799
    5. '=[' → logprob: -5.311375141143799
    6. '<|end|>' → logprob: -5.436375141143799
    7. '+' → logprob: -6.186375141143799
    8. '>' → logprob: -6.436375141143799
    9. '=[]
' → logprob: -6.686375141143799
    10. '[' → logprob: -6.811375141143799

Token 70: ' arr' (ID: 1724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6295970678329468
    2. '[arr' → logprob: -1.6295970678329468
    3. ' [' → logprob: -2.1295971870422363
    4. 'arr' → logprob: -2.3795971870422363
    5. '[]' → logprob: -3.6295971870422363
    6. '[len' → logprob: -4.129597187042236
    7. ' arr' → logprob: -5.879597187042236
    8. '[idx' → logprob: -6.129597187042236
    9. '[q' → logprob: -6.379597187042236
    10. '[a' → logprob: -6.379597187042236

Token 71: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.05550622567534447
    2. '+' → logprob: -3.4305062294006348
    3. '.copy' → logprob: -4.805506229400635
    4. ' +' → logprob: -4.805506229400635
    5. '[:' → logprob: -5.680506229400635
    6. '[' → logprob: -6.680506229400635
    7. '[idx' → logprob: -8.555505752563477
    8. '+[' → logprob: -8.805505752563477
    9. '<|end|>' → logprob: -9.305505752563477
    10. '[::-' → logprob: -9.805505752563477

Token 72: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017219497822225094
    2. ' ]' → logprob: -7.2517218589782715
    3. ']+' → logprob: -8.12672233581543
    4. 'k' → logprob: -8.62672233581543
    5. 'n' → logprob: -9.12672233581543
    6. 'idx' → logprob: -9.12672233581543
    7. '+' → logprob: -9.37672233581543
    8. ']
' → logprob: -10.37672233581543
    9. 'q' → logprob: -10.50172233581543
    10. '+k' → logprob: -11.00172233581543

Token 73: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1940804123878479
    2. 'arr' → logprob: -2.569080352783203
    3. '[arr' → logprob: -2.944080352783203
    4. '[a' → logprob: -3.819080352783203
    5. '[k' → logprob: -4.569080352783203
    6. 'a' → logprob: -5.069080352783203
    7. '[q' → logprob: -6.069080352783203
    8. ' [' → logprob: -6.069080352783203
    9. '[n' → logprob: -7.194080352783203
    10. '[idx' → logprob: -7.319080352783203

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1256086528301239
    2. '10' → logprob: -3.5006086826324463
    3. '(' → logprob: -3.6256086826324463
    4. 'ref' → logprob: -3.8756086826324463
    5. '100' → logprob: -4.250608444213867
    6. 'float' → logprob: -5.000608444213867
    7. 'x' → logprob: -5.250608444213867
    8. 'k' → logprob: -5.500608444213867
    9. '(ref' → logprob: -6.250608444213867
    10. 'arr' → logprob: -6.875608444213867

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001978714717552066
    2. ' ]' → logprob: -6.626978874206543
    3. ']*' → logprob: -8.501978874206543
    4. ']*(' → logprob: -8.751978874206543
    5. ']
' → logprob: -9.001978874206543
    6. ',' → logprob: -10.001978874206543
    7. '0' → logprob: -10.251978874206543
    8. ']

' → logprob: -10.626978874206543
    9. ' for' → logprob: -10.626978874206543
    10. ']+' → logprob: -11.251978874206543

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07766146212816238
    2. ' while' → logprob: -3.3276615142822266
    3. 'while' → logprob: -4.077661514282227
    4. ' 
' → logprob: -4.452661514282227
    5. '<|end|>' → logprob: -4.952661514282227
    6. ' ' → logprob: -7.452661514282227
    7. '	while' → logprob: -7.702661514282227
    8. ' for' → logprob: -7.827661514282227
    9. '  
' → logprob: -8.077661514282227
    10. '<|end|>' → logprob: -8.327661514282227

Token 77: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.7946309447288513
    2. ' while' → logprob: -0.9196309447288513
    3. 'for' → logprob: -2.419631004333496
    4. ' for' → logprob: -3.044631004333496
    5. '   ' → logprob: -5.294631004333496
    6. ' ' → logprob: -5.794631004333496
    7. 'n' → logprob: -6.169631004333496
    8. 's' → logprob: -7.419631004333496
    9. 'w' → logprob: -7.794631004333496
    10. 'i' → logprob: -7.919631004333496

Token 78: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2244686782360077
    2. ' idx' → logprob: -1.72446870803833
    3. 'arr' → logprob: -3.97446870803833
    4. ' arr' → logprob: -5.97446870803833
    5. 'True' → logprob: -7.84946870803833
    6. ' True' → logprob: -8.099468231201172
    7. '(idx' → logprob: -8.474468231201172
    8. 'len' → logprob: -8.724468231201172
    9. 'q' → logprob: -9.224468231201172
    10. 'l' → logprob: -9.849468231201172

Token 79: '<len' (ID: 141365)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3102639615535736
    2. '<' → logprob: -1.435263991355896
    3. '<len' → logprob: -4.0602641105651855
    4. ' <=' → logprob: -4.9352641105651855
    5. '<=' → logprob: -5.5602641105651855
    6. '<n' → logprob: -8.560263633728027
    7. ' ' → logprob: -8.810263633728027
    8. '[' → logprob: -10.685263633728027
    9. '<size' → logprob: -11.560263633728027
    10. '<count' → logprob: -12.560263633728027

Token 80: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00017243190086446702
    2. 'arr' → logprob: -8.75017261505127
    3. '(' → logprob: -11.62517261505127
    4. '(a' → logprob: -13.12517261505127
    5. ' arr' → logprob: -14.00017261505127
    6. '	arr' → logprob: -14.75017261505127
    7. '[arr' → logprob: -14.75017261505127
    8. 'Arr' → logprob: -15.25017261505127
    9. '<arr' → logprob: -15.25017261505127
    10. '_arr' → logprob: -15.25017261505127

Token 81: 'plus' (ID: 11601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1052839607000351
    2. '):' → logprob: -2.7302839756011963
    3. ')+' → logprob: -4.355283737182617
    4. 'plus' → logprob: -4.480283737182617
    5. ')-' → logprob: -5.355283737182617
    6. ' )' → logprob: -5.855283737182617
    7. '):
' → logprob: -7.105283737182617
    8. 'and' → logprob: -7.855283737182617
    9. ' ):' → logprob: -7.980283737182617
    10. ')>' → logprob: -8.230283737182617

Token 82: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27531540393829346
    2. ' and' → logprob: -2.150315284729004
    3. '):' → logprob: -2.525315284729004
    4. ' )' → logprob: -3.900315284729004
    5. 'and' → logprob: -4.650315284729004
    6. ' ):' → logprob: -4.775315284729004
    7. '):
' → logprob: -5.275315284729004
    8. ' ):
' → logprob: -8.025315284729004
    9. ' ' → logprob: -8.275315284729004
    10. '):

' → logprob: -9.150315284729004

Token 83: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7015482187271118
    2. ' if' → logprob: -1.4515482187271118
    3. '       ' → logprob: -2.3265480995178223
    4. ':' → logprob: -2.3265480995178223
    5. ' ' → logprob: -3.4515480995178223
    6. '<|end|>' → logprob: -3.9515480995178223
    7. '    ' → logprob: -5.201548099517822
    8. ' and' → logprob: -5.576548099517822
    9. '<|end|>' → logprob: -5.576548099517822
    10. '  ' → logprob: -6.326548099517822

Token 84: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.025829339399933815
    2. 'if' → logprob: -3.775829315185547
    3. '   ' → logprob: -7.150829315185547
    4. ' ' → logprob: -7.275829315185547
    5. ' i' → logprob: -8.150829315185547
    6. '       ' → logprob: -8.525829315185547
    7. '    ' → logprob: -9.025829315185547
    8. '<|end|>' → logprob: -9.525829315185547
    9. ' x' → logprob: -9.650829315185547
    10. 'i' → logprob: -9.650829315185547

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2257780283689499
    2. ' =' → logprob: -1.6007779836654663
    3. '=int' → logprob: -9.100777626037598
    4. ' ' → logprob: -9.725777626037598
    5. ',' → logprob: -10.600777626037598
    6. '=index' → logprob: -10.600777626037598
    7. '=k' → logprob: -10.850777626037598
    8. '=a' → logprob: -11.225777626037598
    9. '=None' → logprob: -11.225777626037598
    10. '   ' → logprob: -11.475777626037598

Token 86: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.160342738032341
    2. 'arr' → logprob: -1.9103426933288574
    3. '	arr' → logprob: -10.035343170166016
    4. '(arr' → logprob: -10.910343170166016
    5. 'a' → logprob: -11.160343170166016
    6. ' ' → logprob: -11.535343170166016
    7. '[arr' → logprob: -12.035343170166016
    8. '0' → logprob: -12.160343170166016
    9. '$arr' → logprob: -12.160343170166016
    10. '<arr' → logprob: -12.535343170166016

Token 87: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.01634097658097744
    2. '[idx' → logprob: -4.141341209411621
    3. '[' → logprob: -9.641341209411621
    4. 'idx' → logprob: -9.891341209411621
    5. 'pl' → logprob: -10.141341209411621
    6. '_plus' → logprob: -10.391341209411621
    7. ' plus' → logprob: -10.391341209411621
    8. '```' → logprob: -10.391341209411621
    9. 'Plus' → logprob: -11.891341209411621
    10. '+' → logprob: -12.016341209411621

Token 88: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.875004768371582
    3. 'idx' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.000004768371582
    5. '```' → logprob: -15.125004768371582
    6. ' idx' → logprob: -15.500004768371582
    7. '	idx' → logprob: -16.125003814697266
    8. ' [' → logprob: -16.250003814697266
    9. ' ' → logprob: -16.625003814697266
    10. '[
' → logprob: -18.000003814697266

Token 89: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36635664105415344
    2. ']
' → logprob: -1.241356611251831
    3. ' ]
' → logprob: -4.99135684967041
    4. ' ]' → logprob: -5.11635684967041
    5. ']>=' → logprob: -6.24135684967041
    6. ']+' → logprob: -7.11635684967041
    7. ']
' → logprob: -7.74135684967041
    8. ']==' → logprob: -7.74135684967041
    9. ']

' → logprob: -8.11635684967041
    10. ']>' → logprob: -8.74135684967041

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6966455578804016
    2. ' if' → logprob: -1.0716454982757568
    3. '<|end|>' → logprob: -2.196645498275757
    4. ' ' → logprob: -4.071645736694336
    5. '<|end|>' → logprob: -4.821645736694336
    6. 'if' → logprob: -5.071645736694336
    7. '        
' → logprob: -6.071645736694336
    8. ',' → logprob: -6.071645736694336
    9. ' 
' → logprob: -6.071645736694336
    10. '        ' → logprob: -6.571645736694336

Token 91: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2889600992202759
    2. 'if' (adapté à ' if') → logprob: -1.4139600992202759
    3. '       ' → logprob: -4.913959980010986
    4. '   ' → logprob: -9.538960456848145
    5. ' ' → logprob: -9.788960456848145
    6. '```' → logprob: -10.163960456848145
    7. 'If' → logprob: -10.413960456848145
    8. '0' → logprob: -10.538960456848145
    9. '
' → logprob: -10.538960456848145
    10. '1' → logprob: -11.038960456848145

Token 92: ' ref' (ID: 2714)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5239778757095337
    2. 'val' → logprob: -0.8989778757095337
    3. ' q' → logprob: -8.523978233337402
    4. '(val' → logprob: -8.898978233337402
    5. 'k' → logprob: -9.023978233337402
    6. 'q' → logprob: -9.273978233337402
    7. ' ' → logprob: -9.523978233337402
    8. ' k' → logprob: -9.773978233337402
    9. '	val' → logprob: -9.773978233337402
    10. ' (' → logprob: -10.023978233337402

Token 93: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.002206563949585
    2. '<=' → logprob: -1.627206563949585
    3. '>=' → logprob: -2.002206563949585
    4. '+' → logprob: -2.127206563949585
    5. ' ==' → logprob: -3.127206563949585
    6. '-' → logprob: -3.127206563949585
    7. ' <=' → logprob: -3.377206563949585
    8. ' >=' → logprob: -4.002206802368164
    9. '>' → logprob: -4.377206802368164
    10. ' -' → logprob: -5.002206802368164

Token 94: 'val' (ID: 1105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11072402447462082
    2. 'val' → logprob: -2.7357239723205566
    3. ' val' → logprob: -3.2357239723205566
    4. '0' → logprob: -8.235724449157715
    5. ' =' → logprob: -8.860724449157715
    6. ' ' → logprob: -10.110724449157715
    7. '=value' → logprob: -10.735724449157715
    8. '=
' → logprob: -10.735724449157715
    9. '<|end|>' → logprob: -11.360724449157715
    10. ',val' → logprob: -11.360724449157715

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08406096696853638
    2. ' or' → logprob: -3.0840609073638916
    3. ' and' → logprob: -3.7090609073638916
    4. ':
' → logprob: -4.959061145782471
    5. ' :' → logprob: -6.334061145782471
    6. '           ' → logprob: -7.834061145782471
    7. 'and' → logprob: -8.334060668945312
    8. '       ' → logprob: -8.959060668945312
    9. ' ' → logprob: -8.959060668945312
    10. ':return' → logprob: -9.209060668945312

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19789326190948486
    2. ' and' → logprob: -2.0728931427001953
    3. ' if' → logprob: -4.197893142700195
    4. ' or' → logprob: -4.572893142700195
    5. 'idx' → logprob: -4.947893142700195
    6. '       ' → logprob: -5.197893142700195
    7. '0' → logprob: -5.947893142700195
    8. ' idx' → logprob: -6.322893142700195
    9. ' ' → logprob: -6.572893142700195
    10. ':' → logprob: -6.697893142700195

Token 97: ' if' (ID: 538)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2752446234226227
    2. 'l' → logprob: -1.6502445936203003
    3. '           ' → logprob: -3.27524471282959
    4. ' if' → logprob: -5.02524471282959
    5. '       ' → logprob: -6.77524471282959
    6. 'if' (adapté à ' if') → logprob: -7.02524471282959
    7. 'ln' → logprob: -7.52524471282959
    8. '               ' → logprob: -8.40024471282959
    9. ' ln' → logprob: -8.40024471282959
    10. 'idx' → logprob: -8.52524471282959

Token 98: ' ln' (ID: 68859)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4616968333721161
    2. 'val' → logprob: -2.0866968631744385
    3. ' k' → logprob: -2.5866968631744385
    4. 'ln' → logprob: -3.3366968631744385
    5. ' q' → logprob: -3.3366968631744385
    6. ' ln' → logprob: -3.3366968631744385
    7. ' idx' → logprob: -4.211696624755859
    8. 'k' → logprob: -4.336696624755859
    9. ' l' → logprob: -4.336696624755859
    10. 'l' → logprob: -5.336696624755859

Token 99: '-k' (ID: 10897)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37895467877388
    2. '>' → logprob: -1.8789546489715576
    3. '>=' → logprob: -2.6289546489715576
    4. ' ==' → logprob: -3.3789546489715576
    5. '+' → logprob: -3.3789546489715576
    6. ' >' → logprob: -5.128954887390137
    7. ' >=' → logprob: -5.503954887390137
    8. '<' → logprob: -5.878954887390137
    9. '<|end|>' → logprob: -6.253954887390137
    10. '<|end|>' → logprob: -6.378954887390137

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04289733245968819
    2. '>=' → logprob: -3.2928972244262695
    3. ' +' → logprob: -5.7928972244262695
    4. ' >=' → logprob: -6.7928972244262695
    5. '1' → logprob: -8.79289722442627
    6. ' ' → logprob: -8.91789722442627
    7. '>' → logprob: -9.16789722442627
    8. '<' → logprob: -9.79289722442627
    9. '-' → logprob: -9.85539722442627
    10. '0' → logprob: -10.91789722442627

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003872974484693259
    2. ' ' → logprob: -7.875387191772461
    3. '>' → logprob: -12.875387191772461
    4. '>=' → logprob: -14.250387191772461
    5. '=' → logprob: -14.750387191772461
    6. '```' → logprob: -15.125387191772461
    7. '+' → logprob: -15.312887191772461
    8. '<|end|>' → logprob: -15.312887191772461
    9. '0' → logprob: -15.375387191772461
    10. '2' → logprob: -15.500387191772461

Token 102: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3080185651779175
    2. ' >=' → logprob: -1.5580185651779175
    3. '>' → logprob: -3.183018684387207
    4. ' >' → logprob: -4.933018684387207
    5. ')>=' → logprob: -6.183018684387207
    6. ':' → logprob: -7.058018684387207
    7. ')' → logprob: -7.433018684387207
    8. ' ' → logprob: -7.683018684387207
    9. ']>=' → logprob: -7.933018684387207
    10. '<=' → logprob: -8.058018684387207

Token 103: '0' (ID: 15)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07450778037309647
    2. '0' → logprob: -3.199507713317871
    3. ' q' → logprob: -3.574507713317871
    4. '1' → logprob: -5.949507713317871
    5. ' ' → logprob: -7.949507713317871
    6. '	q' → logprob: -11.699507713317871
    7. '   ' → logprob: -12.074507713317871
    8. 'k' → logprob: -12.574507713317871
    9. '  ' → logprob: -13.949507713317871
    10. '*q' → logprob: -14.262007713317871

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11788897961378098
    2. ' and' → logprob: -2.742888927459717
    3. ':
' → logprob: -3.117888927459717
    4. '           ' → logprob: -6.867888927459717
    5. ' :' → logprob: -6.867888927459717
    6. ' :
' → logprob: -8.742889404296875
    7. '               ' → logprob: -9.117889404296875
    8. 'and' → logprob: -9.867889404296875
    9. '<|end|>' → logprob: -10.117889404296875
    10. ':

' → logprob: -10.367889404296875

Token 105: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32172060012817383
    2. '<|end|>' → logprob: -1.8217206001281738
    3. '           ' → logprob: -2.571720600128174
    4. ' ' → logprob: -3.946720600128174
    5. '<|end|>' → logprob: -6.196720600128174
    6. '            ' → logprob: -6.196720600128174
    7. ',' → logprob: -6.321720600128174
    8. ' ' → logprob: -6.696720600128174
    9. ' n' → logprob: -7.196720600128174
    10. '                       ' → logprob: -7.196720600128174

Token 106: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.05147864297032356
    2. '           ' → logprob: -3.926478624343872
    3. '                   ' → logprob: -4.301478862762451
    4. '               ' → logprob: -4.676478862762451
    5. ' for' → logprob: -6.301478862762451
    6. 'l' (adapté à ' l') → logprob: -6.426478862762451
    7. ' ' → logprob: -7.051478862762451
    8. ' A' → logprob: -7.551478862762451
    9. '                       ' → logprob: -7.801478862762451
    10. ' n' → logprob: -8.176478385925293

Token 107: '.sort' (ID: 19551)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.037142861634492874
    2. '.' → logprob: -3.787142753601074
    3. '.extend' → logprob: -4.412142753601074
    4. '+=' → logprob: -6.662142753601074
    5. ' .' → logprob: -8.537142753601074
    6. '+' → logprob: -9.787142753601074
    7. '=' → logprob: -10.287142753601074
    8. ' +=' → logprob: -10.537142753601074
    9. '.app' → logprob: -10.662142753601074
    10. '.p' → logprob: -11.162142753601074

Token 108: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.049005843698978424
    2. '()
' → logprob: -3.0490057468414307
    3. '()
' → logprob: -8.549005508422852
    4. '();' → logprob: -9.299005508422852
    5. '(reverse' → logprob: -9.549005508422852
    6. '(' → logprob: -11.049005508422852
    7. '               ' → logprob: -11.549005508422852
    8. '[' → logprob: -11.799005508422852
    9. '                   ' → logprob: -11.924005508422852
    10. '()

' → logprob: -12.424005508422852

Token 109: '=False' (ID: 12148)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0025330944918096066
    2. '=' → logprob: -6.252532958984375
    3. '()' → logprob: -8.252532958984375
    4. '())' → logprob: -8.627532958984375
    5. ')' → logprob: -9.627532958984375
    6. ' =' → logprob: -10.252532958984375
    7. '(True' → logprob: -10.252532958984375
    8. 'True' → logprob: -11.627532958984375
    9. '   ' → logprob: -11.877532958984375
    10. '       ' → logprob: -12.877532958984375

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030548814684152603
    2. ')
' → logprob: -3.5305488109588623
    3. '())' → logprob: -8.155549049377441
    4. ')
' → logprob: -8.780549049377441
    5. '()' → logprob: -8.905549049377441
    6. '               ' → logprob: -9.405549049377441
    7. '())
' → logprob: -9.655549049377441
    8. ' )' → logprob: -10.655549049377441
    9. '                   ' → logprob: -11.155549049377441
    10. ')

' → logprob: -12.280549049377441

Token 111: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7448477149009705
    2. ' res' → logprob: -1.6198477745056152
    3. 'for' (adapté à ' for') → logprob: -2.1198477745056152
    4. 'res' → logprob: -3.1198477745056152
    5. '               ' → logprob: -3.4948477745056152
    6. '       ' → logprob: -3.9948477745056152
    7. ' diff' → logprob: -3.9948477745056152
    8. 'diff' → logprob: -4.244847774505615
    9. ' while' → logprob: -4.619847774505615
    10. ' l' → logprob: -4.619847774505615

Token 113: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6290155649185181
    2. ' i' → logprob: -0.8790155649185181
    3. 'j' → logprob: -3.7540154457092285
    4. ' j' → logprob: -4.0040154457092285
    5. 'x' → logprob: -5.5040154457092285
    6. ' x' → logprob: -6.6290154457092285
    7. ' ' → logprob: -8.129015922546387
    8. '_i' → logprob: -8.129015922546387
    9. 'start' → logprob: -8.504015922546387
    10. ' y' → logprob: -8.879015922546387

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046459767036139965
    2. 'in' → logprob: -5.379645824432373
    3. ' ' → logprob: -12.254646301269531
    4. '   ' → logprob: -12.379646301269531
    5. '	in' → logprob: -13.004646301269531
    6. '<|end|>' → logprob: -13.254646301269531
    7. '_in' → logprob: -13.629646301269531
    8. 'n' → logprob: -13.942146301269531
    9. '[' → logprob: -14.192146301269531
    10. ',' → logprob: -14.254646301269531

Token 115: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16680480539798737
    2. ' range' → logprob: -2.166804790496826
    3. 'l' → logprob: -3.291804790496826
    4. ' l' → logprob: -6.291804790496826
    5. '(range' → logprob: -10.541805267333984
    6. '[l' → logprob: -12.041805267333984
    7. ' ' → logprob: -12.541805267333984
    8. 'list' → logprob: -12.541805267333984
    9. '   ' → logprob: -12.791805267333984
    10. '	range' → logprob: -13.166805267333984

Token 116: '[:' (ID: 7808)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016820160672068596
    2. ':
' → logprob: -4.266819953918457
    3. '[:' → logprob: -6.516819953918457
    4. '[:-' → logprob: -7.391819953918457
    5. '[' → logprob: -8.766819953918457
    6. '           ' → logprob: -8.891819953918457
    7. ' :' → logprob: -9.641819953918457
    8. '[::-' → logprob: -9.891819953918457
    9. '   ' → logprob: -10.391819953918457
    10. '[len' → logprob: -10.766819953918457

Token 117: 'ln' (ID: 2943)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09039817750453949
    2. '(' → logprob: -2.965398073196411
    3. 'ln' → logprob: -3.590398073196411
    4. '(k' → logprob: -5.96539831161499
    5. 'q' → logprob: -6.21539831161499
    6. ' k' → logprob: -6.96539831161499
    7. '-(' → logprob: -7.71539831161499
    8. ' (' → logprob: -7.96539831161499
    9. '-k' → logprob: -8.340397834777832
    10. 'n' → logprob: -8.840397834777832

Token 118: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0499555729329586
    2. ' -' → logprob: -3.0499556064605713
    3. '-' → logprob: -7.424955368041992
    4. 'k' → logprob: -8.424955368041992
    5. '-min' → logprob: -9.049955368041992
    6. '+k' → logprob: -9.424955368041992
    7. '   ' → logprob: -9.549955368041992
    8. '-(' → logprob: -9.549955368041992
    9. '-ln' → logprob: -9.674955368041992
    10. '-n' → logprob: -10.174955368041992

Token 119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000968156848102808
    2. ' +' → logprob: -7.375967979431152
    3. '1' → logprob: -8.000967979431152
    4. ']+' → logprob: -13.000967979431152
    5. ' ' → logprob: -13.625967979431152
    6. 'x' → logprob: -14.250967979431152
    7. '   ' → logprob: -14.500967979431152
    8. '       ' → logprob: -15.375967979431152
    9. '+x' → logprob: -15.750967979431152
    10. '           ' → logprob: -16.00096893310547

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.625012397766113
    3. '+' → logprob: -13.750012397766113
    4. '2' → logprob: -14.500012397766113
    5. '
' → logprob: -15.125012397766113
    6. '0' → logprob: -15.125012397766113
    7. '-' → logprob: -15.562512397766113
    8. '11' → logprob: -15.812512397766113
    9. '   ' → logprob: -15.937512397766113
    10. '```' → logprob: -16.000011444091797

Token 121: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04928969219326973
    2. ']:
' → logprob: -3.0492897033691406
    3. ']' → logprob: -7.799289703369141
    4. ']:
' → logprob: -8.42428970336914
    5. ' ]' → logprob: -10.29928970336914
    6. ']:

' → logprob: -11.67428970336914
    7. ':' → logprob: -11.79928970336914
    8. '           ' → logprob: -12.29928970336914
    9. '       ' → logprob: -12.79928970336914
    10. '):' → logprob: -12.92428970336914

Token 122: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1389254629611969
    2. ':' → logprob: -3.888925552368164
    3. '           ' → logprob: -4.013925552368164
    4. ' if' → logprob: -4.138925552368164
    5. '               ' → logprob: -4.263925552368164
    6. ' res' → logprob: -4.763925552368164
    7. 'print' → logprob: -5.013925552368164
    8. ' print' → logprob: -5.138925552368164
    9. ')' → logprob: -5.513925552368164
    10. ':
' → logprob: -5.888925552368164

Token 123: ' A' (ID: 355)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2792244553565979
    2. ' if' → logprob: -1.9042243957519531
    3. 'res' → logprob: -3.154224395751953
    4. '                       ' → logprob: -3.904224395751953
    5. '                   ' → logprob: -4.029224395751953
    6. 'if' → logprob: -5.279224395751953
    7. ' val' → logprob: -5.404224395751953
    8. ' for' → logprob: -6.654224395751953
    9. ' return' → logprob: -7.404224395751953
    10. ' pass' → logprob: -7.654224395751953

Token 124: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05157453939318657
    2. '.remove' → logprob: -3.801574468612671
    3. '.' → logprob: -4.05157470703125
    4. ' .' → logprob: -5.42657470703125
    5. ' =' → logprob: -6.55157470703125
    6. '.pop' → logprob: -6.55157470703125
    7. '=' → logprob: -7.42657470703125
    8. '.sort' → logprob: -8.17657470703125
    9. '[' → logprob: -8.42657470703125
    10. '.extend' → logprob: -8.42657470703125

Token 125: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12012140452861786
    2. '(abs' → logprob: -2.370121479034424
    3. '(val' → logprob: -4.495121479034424
    4. '(' → logprob: -4.870121479034424
    5. '((' → logprob: -7.870121479034424
    6. '(min' → logprob: -8.245121002197266
    7. '(a' → logprob: -9.495121002197266
    8. '(ref' → logprob: -10.245121002197266
    9. '(arr' → logprob: -10.245121002197266
    10. '(max' → logprob: -10.495121002197266

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11356331408023834
    2. ')
' → logprob: -2.738563299179077
    3. '-' → logprob: -4.113563537597656
    4. '-val' → logprob: -4.488563537597656
    5. '])' → logprob: -5.238563537597656
    6. ' -' → logprob: -5.488563537597656
    7. '                   ' → logprob: -6.488563537597656
    8. ' )' → logprob: -6.988563537597656
    9. '+' → logprob: -7.113563537597656
    10. ']' → logprob: -7.613563537597656

Token 127: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22317084670066833
    2. '               ' → logprob: -2.723170757293701
    3. '\n' → logprob: -3.848170757293701
    4. '                    
' → logprob: -3.848170757293701
    5. '
' → logprob: -4.098170757293701
    6. '<|end|>' → logprob: -4.223170757293701
    7. ' 
' → logprob: -4.348170757293701
    8. '           ' → logprob: -4.723170757293701
    9. '                
' → logprob: -5.348170757293701
    10. '    
' → logprob: -5.348170757293701

Token 128: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46179670095443726
    2. 'l' (adapté à ' l') → logprob: -1.961796760559082
    3. 'ln' → logprob: -2.211796760559082
    4. ' l' → logprob: -3.461796760559082
    5. 'else' → logprob: -3.586796760559082
    6. '               ' → logprob: -3.586796760559082
    7. '       ' → logprob: -3.711796760559082
    8. '          ' → logprob: -6.086796760559082
    9. ' else' → logprob: -6.586796760559082
    10. 'val' → logprob: -6.586796760559082

Token 129: '.clear' (ID: 13562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03710988909006119
    2. '=[]' → logprob: -3.787109851837158
    3. '.clear' → logprob: -4.287109851837158
    4. '.=' → logprob: -11.537110328674316
    5. ' =' → logprob: -12.287110328674316
    6. '={}' → logprob: -12.537110328674316
    7. '[:]' → logprob: -13.287110328674316
    8. '.append' → logprob: -13.412110328674316
    9. '.' → logprob: -13.912110328674316
    10. '=[]
' → logprob: -14.287110328674316

Token 130: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17038127779960632
    2. '
' → logprob: -1.9203813076019287
    3. ',' → logprob: -5.29538106918335
    4. '<|end|>' → logprob: -6.17038106918335
    5. '       ' → logprob: -6.54538106918335
    6. '          ' → logprob: -7.54538106918335
    7. '               ' → logprob: -8.670381546020508
    8. '	       ' → logprob: -9.295381546020508
    9. '            
' → logprob: -9.420381546020508
    10. '<|end|>' → logprob: -9.670381546020508

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10181715339422226
    2. '       ' → logprob: -2.4768171310424805
    3. 'else' → logprob: -5.6018171310424805
    4. 'ln' → logprob: -5.8518171310424805
    5. '<|end|>' → logprob: -6.7268171310424805
    6. ',' → logprob: -7.1018171310424805
    7. ' else' → logprob: -7.1018171310424805
    8. '               ' → logprob: -7.2268171310424805
    9. '```' → logprob: -7.4768171310424805
    10. ')' → logprob: -7.6018171310424805

Token 132: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' (adapté à ' ln') → logprob: -0.02494034543633461
    2. '           ' → logprob: -4.024940490722656
    3. 'else' → logprob: -5.149940490722656
    4. '       ' → logprob: -7.899940490722656
    5. 'elif' → logprob: -8.024940490722656
    6. 'idx' → logprob: -8.774940490722656
    7. ' ln' → logprob: -10.274940490722656
    8. 'l' → logprob: -11.024940490722656
    9. '               ' → logprob: -11.024940490722656
    10. 'len' → logprob: -11.899940490722656

Token 133: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04043436050415039
    2. ' =' → logprob: -4.04043436050415
    3. '+=' → logprob: -4.04043436050415
    4. ' +=' → logprob: -5.41543436050415
    5. '+' → logprob: -15.165433883666992
    6. ']+=' → logprob: -15.790433883666992
    7. '-=' → logprob: -16.290433883666992
    8. '.=' → logprob: -16.915433883666992
    9. '=int' → logprob: -16.915433883666992
    10. ' -=' → logprob: -16.915433883666992

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.125096321105957
    4. '1' → logprob: -16.750097274780273
    5. '           ' → logprob: -17.000097274780273
    6. '  ' → logprob: -17.000097274780273
    7. '=' → logprob: -18.062597274780273
    8. '000' → logprob: -18.187597274780273
    9. '    ' → logprob: -18.437597274780273
    10. '00' → logprob: -18.500097274780273

Token 135: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02474730648100376
    2. '<|end|>' → logprob: -4.524747371673584
    3. '
' → logprob: -5.149747371673584
    4. '           ' → logprob: -5.399747371673584
    5. '\n' → logprob: -7.024747371673584
    6. '    
' → logprob: -7.524747371673584
    7. '   ' → logprob: -8.274746894836426
    8. '        
' → logprob: -8.274746894836426
    9. '<|end|>' → logprob: -8.274746894836426
    10. ' else' → logprob: -8.399746894836426

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011946635320782661
    2. '<|end|>' → logprob: -4.636946678161621
    3. '           ' → logprob: -6.761946678161621
    4. '
' → logprob: -8.386946678161621
    5. '<|end|>' → logprob: -8.761946678161621
    6. ' else' → logprob: -8.886946678161621
    7. '   ' → logprob: -9.386946678161621
    8. '\n' → logprob: -9.886946678161621
    9. '    
' → logprob: -10.011946678161621
    10. ',' → logprob: -10.136946678161621

Token 137: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2527059316635132
    2. '       ' → logprob: -2.1277060508728027
    3. ' else' → logprob: -2.3777060508728027
    4. 'elif' → logprob: -4.627706050872803
    5. '   ' → logprob: -7.127706050872803
    6. ' elif' → logprob: -7.252706050872803
    7. '	else' → logprob: -10.002705574035645
    8. '	elif' → logprob: -11.002705574035645
    9. '```' → logprob: -11.002705574035645
    10. '           ' → logprob: -11.252705574035645

Token 138: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5509594082832336
    2. ':' → logprob: -1.1759593486785889
    3. '           ' → logprob: -2.300959348678589
    4. ' if' → logprob: -4.550959587097168
    5. '       ' → logprob: -6.550959587097168
    6. ' :
' → logprob: -6.550959587097168
    7. '   ' → logprob: -7.800959587097168
    8. ' :' → logprob: -8.050959587097168
    9. '```' → logprob: -9.050959587097168
    10. '<|end|>' → logprob: -9.050959587097168

Token 139: '           ' (ID: 352)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46115466952323914
    2. '           ' → logprob: -1.0861546993255615
    3. ' l' → logprob: -3.5861546993255615
    4. 'if' → logprob: -6.086154460906982
    5. '```' → logprob: -7.461154460906982
    6. ' if' → logprob: -7.586154460906982
    7. 'ln' → logprob: -7.711154460906982
    8. '       ' → logprob: -8.33615493774414
    9. '   ' → logprob: -9.58615493774414
    10. '	l' → logprob: -10.08615493774414

Token 140: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.133711576461792
    2. ' l' → logprob: -2.883711576461792
    3. 'ln' → logprob: -3.008711576461792
    4. '           ' → logprob: -4.008711814880371
    5. ' ln' → logprob: -6.883711814880371
    6. '       ' → logprob: -8.008711814880371
    7. '   ' → logprob: -9.133711814880371
    8. '	l' → logprob: -9.758711814880371
    9. 'val' → logprob: -10.133711814880371
    10. '               ' → logprob: -10.383711814880371

Token 141: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043162284418940544
    2. '.' → logprob: -7.750431537628174
    3. '.app' → logprob: -14.875432014465332
    4. ' .' → logprob: -15.750432014465332
    5. '.extend' → logprob: -16.000431060791016
    6. '.ap' → logprob: -16.375431060791016
    7. '+=' → logprob: -17.500431060791016
    8. '.Append' → logprob: -17.875431060791016
    9. '.push' → logprob: -18.125431060791016
    10. 'append' → logprob: -18.750431060791016

Token 142: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.06244140863418579
    2. 'val' → logprob: -2.812441349029541
    3. '(arr' → logprob: -8.1874418258667
    4. 'arr' → logprob: -8.9374418258667
    5. ' val' → logprob: -9.8124418258667
    6. '(' → logprob: -12.4374418258667
    7. '[val' → logprob: -13.0624418258667
    8. ',val' → logprob: -13.4374418258667
    9. '	val' → logprob: -13.8124418258667
    10. '(idx' → logprob: -15.5624418258667

Token 143: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17996232211589813
    2. ')' → logprob: -1.8049622774124146
    3. ' )
' → logprob: -9.304962158203125
    4. ')
' → logprob: -10.054962158203125
    5. '           ' → logprob: -10.179962158203125
    6. ' )' → logprob: -11.429962158203125
    7. '
' → logprob: -11.679962158203125
    8. '<|end|>' → logprob: -12.054962158203125
    9. ')

' → logprob: -12.554962158203125
    10. '<|end|>' → logprob: -12.804962158203125

Token 144: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07976742833852768
    2. '           ' → logprob: -2.9547674655914307
    3. '\n' → logprob: -3.9547674655914307
    4. ' 
' → logprob: -6.329767227172852
    5. '```' → logprob: -7.454767227172852
    6. 'ln' → logprob: -7.579767227172852
    7. ' ln' → logprob: -7.704767227172852
    8. '            
' → logprob: -7.954767227172852
    9. '
' → logprob: -8.079767227172852
    10. '<|end|>' → logprob: -8.079767227172852

Token 145: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' (adapté à ' ln') → logprob: -0.0002448893792461604
    2. ' ln' → logprob: -8.375245094299316
    3. '           ' → logprob: -11.375245094299316
    4. 'idx' → logprob: -14.000245094299316
    5. '_ln' → logprob: -14.125245094299316
    6. 'Ln' → logprob: -14.500245094299316
    7. 'len' → logprob: -14.750245094299316
    8. '   ' → logprob: -15.750245094299316
    9. '       ' → logprob: -16.000244140625
    10. 'l' → logprob: -17.500244140625

Token 146: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01131918653845787
    2. ' +=' → logprob: -4.511319160461426
    3. '=' → logprob: -8.261319160461426
    4. ']+=' → logprob: -12.136319160461426
    5. '=len' → logprob: -12.761319160461426
    6. '+' → logprob: -13.386319160461426
    7. '<|end|>' → logprob: -13.511319160461426
    8. '+='' → logprob: -13.886319160461426
    9. '+="' → logprob: -14.886319160461426
    10. '+=(' → logprob: -15.011319160461426

Token 147: 'ln' (ID: 2943)
  Prédit: 'ln'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.011079652234911919
    2. 'len' → logprob: -4.511079788208008
    3. ' ln' → logprob: -10.386079788208008
    4. ' len' → logprob: -14.511079788208008
    5. '_ln' → logprob: -15.636079788208008
    6. '+' → logprob: -16.011079788208008
    7. '1' → logprob: -17.011079788208008
    8. 'idx' → logprob: -17.511079788208008
    9. 'leni' → logprob: -17.636079788208008
    10. '0' → logprob: -17.636079788208008

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01452003326267004
    2. ' +' → logprob: -4.264520168304443
    3. 'ln' → logprob: -8.264519691467285
    4. '1' → logprob: -10.014519691467285
    5. 'idx' → logprob: -11.014519691467285
    6. ' ln' → logprob: -11.639519691467285
    7. ' plus' → logprob: -12.139519691467285
    8. '0' → logprob: -12.264519691467285
    9. ' idx' → logprob: -12.264519691467285
    10. ' ' → logprob: -12.514519691467285

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'len' → logprob: -20.375009536743164
    4. '<|end|>' → logprob: -21.000009536743164
    5. '   ' → logprob: -21.375009536743164
    6. '```' → logprob: -21.500009536743164
    7. '  ' → logprob: -21.750009536743164
    8. '۱' → logprob: -22.000009536743164
    9. '+' → logprob: -22.500009536743164
    10. '>' → logprob: -23.375009536743164

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6610124111175537
    2. '
' → logprob: -0.7860124111175537
    3. '<|end|>' → logprob: -4.661012649536133
    4. '           ' → logprob: -4.911012649536133
    5. ' idx' → logprob: -6.036012649536133
    6. '<|end|>' → logprob: -6.536012649536133
    7. '	idx' → logprob: -6.661012649536133
    8. '        
' → logprob: -6.911012649536133
    9. '   ' → logprob: -7.161012649536133
    10. '\n' → logprob: -7.286012649536133

Token 151: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8820172548294067
    2. '       ' → logprob: -0.8820172548294067
    3. ' 
' → logprob: -2.632017135620117
    4. '           ' → logprob: -3.132017135620117
    5. ' idx' → logprob: -4.632017135620117
    6. '<|end|>' → logprob: -4.757017135620117
    7. '        
' → logprob: -5.132017135620117
    8. '[' → logprob: -5.632017135620117
    9. '    
' → logprob: -5.757017135620117
    10. '   ' → logprob: -5.757017135620117

Token 152: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3225032091140747
    2. ' idx' → logprob: -1.8225032091140747
    3. 'idx' (adapté à ' idx') → logprob: -2.322503089904785
    4. '
' → logprob: -5.197503089904785
    5. '	idx' → logprob: -5.197503089904785
    6. '   ' → logprob: -5.697503089904785
    7. '        
' → logprob: -8.322503089904785
    8. '[idx' → logprob: -8.447503089904785
    9. ' ' → logprob: -8.697503089904785
    10. '           ' → logprob: -8.947503089904785

Token 153: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.039508651942014694
    2. ' +=' → logprob: -3.289508581161499
    3. '=' → logprob: -6.914508819580078
    4. '+' → logprob: -7.789508819580078
    5. '<|end|>' → logprob: -10.289508819580078
    6. ']+=' → logprob: -11.164508819580078
    7. '++' → logprob: -12.664508819580078
    8. '+="' → logprob: -13.039508819580078
    9. '+='' → logprob: -13.164508819580078
    10. '<|end|>' → logprob: -13.914508819580078

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -18.750009536743164
    4. '   ' → logprob: -19.125009536743164
    5. '１' → logprob: -21.500009536743164
    6. '  ' → logprob: -21.500009536743164
    7. '۱' → logprob: -21.500009536743164
    8. '<|end|>' → logprob: -22.250009536743164
    9. '१' → logprob: -22.437509536743164
    10. '১' → logprob: -22.875009536743164

Token 155: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17076002061367035
    2. '<|end|>' → logprob: -2.045759916305542
    3. '
' → logprob: -3.795759916305542
    4. ' if' → logprob: -6.545760154724121
    5. '<|end|>' → logprob: -6.670760154724121
    6. '       ' → logprob: -7.545760154724121
    7. '    
' → logprob: -7.670760154724121
    8. ')' → logprob: -8.295760154724121
    9. '```' → logprob: -8.295760154724121
    10. ' ' → logprob: -8.420760154724121

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005465809255838394
    2. ' if' → logprob: -5.505465984344482
    3. 'if' → logprob: -8.005465507507324
    4. '<|end|>' → logprob: -8.005465507507324
    5. '```' → logprob: -8.505465507507324
    6. '
' → logprob: -8.880465507507324
    7. '    
' → logprob: -8.880465507507324
    8. ' while' → logprob: -9.880465507507324
    9. '       ' → logprob: -10.755465507507324
    10. ' for' → logprob: -11.005465507507324

Token 157: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590138018131256
    2. 'A' → logprob: -1.7590137720108032
    3. ' if' → logprob: -3.7590138912200928
    4. ' A' → logprob: -4.134013652801514
    5. 'if' (adapté à ' if') → logprob: -4.634013652801514
    6. 'l' → logprob: -6.259013652801514
    7. 'return' → logprob: -6.509013652801514
    8. '```' → logprob: -7.134013652801514
    9. ' for' → logprob: -7.509013652801514
    10. ' l' → logprob: -7.509013652801514

Token 158: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.0197184085845947
    2. ' l' → logprob: -1.2697184085845947
    3. ' ln' → logprob: -2.0197184085845947
    4. 'ln' → logprob: -2.3947184085845947
    5. 'len' → logprob: -2.7697184085845947
    6. 'l' → logprob: -3.7697184085845947
    7. ' res' → logprob: -3.8947184085845947
    8. ' q' → logprob: -4.644718170166016
    9. ' k' → logprob: -5.144718170166016
    10. ' not' → logprob: -5.769718170166016

Token 159: '(A' (ID: 10706)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.10374455153942108
    2. '(A' → logprob: -2.3537445068359375
    3. '(res' → logprob: -6.2287445068359375
    4. '(a' → logprob: -7.3537445068359375
    5. '(' → logprob: -7.8537445068359375
    6. '(arr' → logprob: -7.8537445068359375
    7. '(L' → logprob: -9.728744506835938
    8. 'l' → logprob: -10.353744506835938
    9. 'A' → logprob: -10.853744506835938
    10. ' (' → logprob: -12.353744506835938

Token 160: ')<' (ID: 62287)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3160982131958008
    2. '<' → logprob: -1.9410982131958008
    3. '<len' → logprob: -2.941098213195801
    4. ')>=' → logprob: -3.691098213195801
    5. '<n' → logprob: -3.941098213195801
    6. '>' → logprob: -4.441098213195801
    7. ')<' → logprob: -4.566098213195801
    8. ')' → logprob: -6.441098213195801
    9. '==' → logprob: -6.441098213195801
    10. '<int' → logprob: -6.941098213195801

Token 161: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.055785421282052994
    2. 'k' → logprob: -2.9307854175567627
    3. ' q' → logprob: -7.055785655975342
    4. ' k' → logprob: -10.555785179138184
    5. '(q' → logprob: -12.930785179138184
    6. ' ' → logprob: -13.055785179138184
    7. '   ' → logprob: -13.180785179138184
    8. '(' → logprob: -13.305785179138184
    9. '(k' → logprob: -14.055785179138184
    10. '	q' → logprob: -14.305785179138184

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028062302619218826
    2. ':return' → logprob: -3.903062343597412
    3. ':
' → logprob: -4.903062343597412
    4. '   ' → logprob: -10.653061866760254
    5. ' :' → logprob: -11.028061866760254
    6. ' or' → logprob: -11.028061866760254
    7. '       ' → logprob: -12.778061866760254
    8. 'return' → logprob: -12.778061866760254
    9. ' return' → logprob: -12.903061866760254
    10. '):' → logprob: -13.778061866760254

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05579521879553795
    2. ':' → logprob: -3.430795192718506
    3. ' return' → logprob: -4.680795192718506
    4. ':return' → logprob: -4.805795192718506
    5. ':
' → logprob: -5.680795192718506
    6. 'return' → logprob: -7.680795192718506
    7. '   ' → logprob: -7.805795192718506
    8. '	return' → logprob: -9.805795669555664
    9. '	' → logprob: -10.180795669555664
    10. '    ' → logprob: -11.430795669555664

Token 164: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9202501177787781
    2. ' return' → logprob: -1.0452501773834229
    3. 'return' (adapté à ' return') → logprob: -1.6702501773834229
    4. '   ' → logprob: -2.795250177383423
    5. ' ' → logprob: -8.295249938964844
    6. '	return' → logprob: -8.795249938964844
    7. '    ' → logprob: -9.045249938964844
    8. 'res' → logprob: -10.670249938964844
    9. '
' → logprob: -10.920249938964844
    10. '           ' → logprob: -11.170249938964844

Token 165: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.79865562915802
    2. 'None' → logprob: -1.42365562915802
    3. ' res' → logprob: -1.92365562915802
    4. 'res' → logprob: -2.5486555099487305
    5. '10' → logprob: -2.6736555099487305
    6. '-' → logprob: -5.2986555099487305
    7. ' ' → logprob: -5.5486555099487305
    8. ' -' → logprob: -5.5486555099487305
    9. '0' → logprob: -6.9236555099487305
    10. 'False' → logprob: -7.6736555099487305

Token 166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003318403847515583
    2. '
' → logprob: -5.8783183097839355
    3. '    
' → logprob: -8.003318786621094
    4. ' return' → logprob: -10.003318786621094
    5. ' None' → logprob: -11.003318786621094
    6. ',' → logprob: -11.128318786621094
    7. 'None' → logprob: -11.128318786621094
    8. 'return' → logprob: -11.253318786621094
    9. '       ' → logprob: -11.753318786621094
    10. '-' → logprob: -12.003318786621094

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008199920994229615
    2. 'diff' → logprob: -7.875820159912109
    3. 'min' → logprob: -9.25082015991211
    4. '
' → logprob: -9.37582015991211
    5. 'res' → logprob: -9.87582015991211
    6. ' diff' → logprob: -10.12582015991211
    7. 'return' → logprob: -10.87582015991211
    8. 'm' → logprob: -11.12582015991211
    9. ' res' → logprob: -11.25082015991211
    10. 'for' → logprob: -11.25082015991211

Token 168: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.057514939457178116
    2. ' A' → logprob: -3.3075149059295654
    3. '   ' → logprob: -4.0575151443481445
    4. 'sorted' → logprob: -7.5575151443481445
    5. 'return' → logprob: -8.307515144348145
    6. 's' → logprob: -8.932515144348145
    7. ' sorted' → logprob: -9.057515144348145
    8. 'min' → logprob: -9.182515144348145
    9. 'res' → logprob: -9.307515144348145
    10. 'diff' → logprob: -9.307515144348145

Token 169: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07253454625606537
    2. '[:' → logprob: -3.1975345611572266
    3. '[' → logprob: -3.8225345611572266
    4. '[min' → logprob: -6.072534561157227
    5. 'sort' → logprob: -6.947534561157227
    6. '[q' → logprob: -7.072534561157227
    7. '[:]' → logprob: -7.072534561157227
    8. 'sorted' → logprob: -7.322534561157227
    9. '.' → logprob: -7.322534561157227
    10. '_sorted' → logprob: -8.322534561157227

Token 170: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00475620711222291
    2. '(reverse' → logprob: -5.379755973815918
    3. '()
' → logprob: -9.254755973815918
    4. 'reverse' → logprob: -10.754755973815918
    5. '(' → logprob: -11.129755973815918
    6. '(False' → logprob: -13.629755973815918
    7. '(True' → logprob: -14.254755973815918
    8. '()

' → logprob: -14.504755973815918
    9. '();' → logprob: -14.504755973815918
    10. '()\' → logprob: -14.879755973815918

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017225458286702633
    2. '
' → logprob: -7.37672233581543
    3. '<|end|>' → logprob: -7.75172233581543
    4. '    
' → logprob: -8.37672233581543
    5. ' return' → logprob: -8.37672233581543
    6. ')' → logprob: -10.00172233581543
    7. '	return' → logprob: -10.25172233581543
    8. ',' → logprob: -10.37672233581543
    9. '       ' → logprob: -10.87672233581543
    10. 'return' → logprob: -11.25172233581543

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7317461967468262
    2. ' return' → logprob: -0.9817461967468262
    3. '   ' → logprob: -2.106746196746826
    4. 'diff' → logprob: -5.106746196746826
    5. ' ans' → logprob: -5.481746196746826
    6. 'res' → logprob: -5.731746196746826
    7. 'ans' → logprob: -6.231746196746826
    8. ' res' → logprob: -6.731746196746826
    9. 'min' → logprob: -6.856746196746826
    10. ' for' → logprob: -7.106746196746826

Token 173: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10020849853754044
    2. ' A' → logprob: -2.3502085208892822
    3. ' ' → logprob: -14.225208282470703
    4. 'min' → logprob: -14.725208282470703
    5. '   ' → logprob: -15.100208282470703
    6. ' min' → logprob: -15.850208282470703
    7. '0' → logprob: -16.725208282470703
    8. 'max' → logprob: -17.100208282470703
    9. '  ' → logprob: -17.225208282470703
    10. '(A' → logprob: -17.350208282470703

Token 174: '[q' (ID: 99278)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08190514147281647
    2. '[q' → logprob: -2.7069051265716553
    3. '<|end|>' → logprob: -5.331905364990234
    4. '[len' → logprob: -6.081905364990234
    5. '[-' → logprob: -6.456905364990234
    6. '[
' → logprob: -6.706905364990234
    7. '[min' → logprob: -7.206905364990234
    8. '[:' → logprob: -7.956905364990234
    9. '[n' → logprob: -8.206905364990234
    10. '\[' → logprob: -9.706905364990234

Token 175: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.273621405242011e-05
    2. ' -' → logprob: -11.500032424926758
    3. 'q' → logprob: -11.500032424926758
    4. ']-' → logprob: -11.500032424926758
    5. '[q' → logprob: -13.625032424926758
    6. '-q' → logprob: -14.000032424926758
    7. ']' → logprob: -16.375032424926758
    8. '[' → logprob: -17.250032424926758
    9. '1' → logprob: -17.375032424926758
    10. '```' → logprob: -17.375032424926758

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.125001907348633
    4. ']' → logprob: -17.000001907348633
    5. 'q' → logprob: -17.125001907348633
    6. '0' → logprob: -18.000001907348633
    7. '2' → logprob: -18.437501907348633
    8. ')' → logprob: -18.562501907348633
    9. '   ' → logprob: -18.562501907348633
    10. '-' → logprob: -18.687501907348633

Token 177: ']-' (ID: 27107)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09163151681423187
    2. ']' → logprob: -2.4666314125061035
    3. '-' → logprob: -6.3416314125061035
    4. '])' → logprob: -8.341631889343262
    5. ' )' → logprob: -8.591631889343262
    6. '+' → logprob: -9.091631889343262
    7. ')-' → logprob: -9.216631889343262
    8. '}' → logprob: -9.716631889343262
    9. ']-' → logprob: -9.716631889343262
    10. ' -' → logprob: -10.216631889343262

Token 178: 'ref' (ID: 1874)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8789383830153383e-05
    2. ' A' → logprob: -11.500019073486328
    3. 'k' → logprob: -12.375019073486328
    4. 'a' → logprob: -12.500019073486328
    5. '0' → logprob: -14.500019073486328
    6. 'q' → logprob: -16.000019073486328
    7. ' ' → logprob: -17.625019073486328
    8. '   ' → logprob: -18.000019073486328
    9. 'arr' → logprob: -18.375019073486328
    10. '(' → logprob: -18.375019073486328

Token 179: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013450673781335354
    2. 'low' → logprob: -5.638450622558594
    3. 'r' → logprob: -6.638450622558594
    4. 'res' → logprob: -6.888450622558594
    5. 'min' → logprob: -7.013450622558594
    6. 'max' → logprob: -7.138450622558594
    7. 'i' → logprob: -7.263450622558594
    8. 'ref' → logprob: -7.263450622558594
    9. 'while' → logprob: -7.263450622558594
    10. 'm' → logprob: -7.513450622558594

Token 180: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00900652538985014
    2. 'while' → logprob: -5.759006500244141
    3. 'low' → logprob: -6.134006500244141
    4. 'lo' → logprob: -6.884006500244141
    5. 'ref' → logprob: -7.009006500244141
    6. 'l' → logprob: -8.00900650024414
    7. 'r' → logprob: -8.13400650024414
    8. 'min' → logprob: -8.50900650024414
    9. 'res' → logprob: -8.63400650024414
    10. 'left' → logprob: -8.88400650024414

Token 181: ' Programm' (ID: 49882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8658856749534607
    2. ' for' → logprob: -2.1158857345581055
    3. 'res' → logprob: -2.1158857345581055
    4. 'diff' → logprob: -2.1158857345581055
    5. ' res' → logprob: -2.7408857345581055
    6. 'result' → logprob: -3.3658857345581055
    7. 'r' → logprob: -3.8658857345581055
    8. 'print' → logprob: -4.1158857345581055
    9. 'min' → logprob: -4.4908857345581055
    10. ' diff' → logprob: -4.6158857345581055

Token 182: 'ation' (ID: 387)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030684882774949074
    2. ' for' → logprob: -4.405684947967529
    3. 'e' → logprob: -4.905684947967529
    4. 'if' → logprob: -5.655684947967529
    5. 'res' → logprob: -6.280684947967529
    6. 'min' → logprob: -6.405684947967529
    7. '#' → logprob: -7.155684947967529
    8. 'ref' → logprob: -7.530684947967529
    9. 'a' → logprob: -7.780684947967529
    10. 'n' → logprob: -7.905684947967529

Token 183: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0283118337392807
    2. 'while' → logprob: -4.903311729431152
    3. 'res' → logprob: -5.278311729431152
    4. 'min' → logprob: -5.403311729431152
    5. 'max' → logprob: -6.278311729431152
    6. ' for' → logprob: -6.528311729431152
    7. 'diff' → logprob: -6.653311729431152
    8. 'low' → logprob: -6.903311729431152
    9. 'ref' → logprob: -6.903311729431152
    10. 'i' → logprob: -7.153311729431152

Token 184: 'nelle' (ID: 30805)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2436096966266632
    2. 'min' → logprob: -2.493609666824341
    3. 'main' → logprob: -2.743609666824341
    4. ' main' → logprob: -3.368609666824341
    5. 'if' → logprob: -3.993609666824341
    6. ' min' → logprob: -5.61860990524292
    7. ' def' → logprob: -5.74360990524292
    8. ' if' → logprob: -6.24360990524292
    9. 'for' → logprob: -6.36860990524292
    10. 'n' → logprob: -6.61860990524292

Token 185: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03132101893424988
    2. 'res' → logprob: -4.781321048736572
    3. 'def' → logprob: -5.656321048736572
    4. 'ref' → logprob: -5.906321048736572
    5. 'min' → logprob: -6.031321048736572
    6. 'm' → logprob: -6.156321048736572
    7. 'max' → logprob: -6.406321048736572
    8. 'print' → logprob: -6.656321048736572
    9. 'diff' → logprob: -7.156321048736572
    10. 'while' → logprob: -7.531321048736572

Token 186: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5377774238586426
    2. ' i' → logprob: -1.6627774238586426
    3. '_' → logprob: -2.7877774238586426
    4. 'res' → logprob: -3.2877774238586426
    5. ' res' → logprob: -3.7877774238586426
    6. ' _' → logprob: -4.287777423858643
    7. 'diff' → logprob: -4.287777423858643
    8. 'val' → logprob: -4.412777423858643
    9. 'r' → logprob: -4.412777423858643
    10. 'x' → logprob: -4.662777423858643

Token 187: ' filtre' (ID: 117678)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5436577200889587
    2. 'res' → logprob: -2.2936577796936035
    3. 'for' → logprob: -2.2936577796936035
    4. 'min' → logprob: -2.6686577796936035
    5. 'k' → logprob: -3.4186577796936035
    6. 'ref' → logprob: -3.6686577796936035
    7. '_' → logprob: -3.9186577796936035
    8. ' i' → logprob: -4.9186577796936035
    9. 't' → logprob: -5.2936577796936035
    10. 'q' → logprob: -5.4186577796936035

Token 188: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3070667088031769
    2. 'def' → logprob: -1.9320666790008545
    3. 'res' → logprob: -3.6820666790008545
    4. 'ref' → logprob: -4.057066917419434
    5. 'print' → logprob: -4.682066917419434
    6. 'm' → logprob: -4.682066917419434
    7. 'min' → logprob: -4.807066917419434
    8. 'max' → logprob: -5.182066917419434
    9. 'refs' → logprob: -5.807066917419434
    10. 'diff' → logprob: -5.807066917419434

Token 189: ' puis' (ID: 18766)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576437771320343
    2. 'res' → logprob: -2.7014377117156982
    3. 'vals' → logprob: -2.9514377117156982
    4. 'def' → logprob: -3.2014377117156982
    5. 'arr' → logprob: -3.5764377117156982
    6. 'm' → logprob: -3.8264377117156982
    7. 'filtered' → logprob: -3.9514377117156982
    8. 'ref' → logprob: -3.9514377117156982
    9. 'min' → logprob: -4.201437950134277
    10. 'refs' → logprob: -4.451437950134277

Token 190: ' impér' (ID: 148162)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1748267412185669
    2. 'res' → logprob: -3.1748266220092773
    3. 'low' → logprob: -3.4248266220092773
    4. 'print' → logprob: -3.6748266220092773
    5. 'l' → logprob: -4.424826622009277
    6. 'lo' → logprob: -4.549826622009277
    7. 'left' → logprob: -4.549826622009277
    8. '#' → logprob: -5.174826622009277
    9. 'while' → logprob: -5.799826622009277
    10. 'def' → logprob: -6.174826622009277

Token 191: 'atif' (ID: 23984)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.6564027070999146
    2. 'atif' → logprob: -0.7814027070999146
    3. 'ativement' → logprob: -5.031402587890625
    4. 'ér' → logprob: -5.406402587890625
    5. 'atifs' → logprob: -5.781402587890625
    6. 'def' → logprob: -5.906402587890625
    7. '#' → logprob: -6.156402587890625
    8. 't' → logprob: -7.031402587890625
    9. '```' → logprob: -7.656402587890625
    10. 'er' → logprob: -7.781402587890625

Token 192: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018944615498185158
    2. 'res' → logprob: -5.01894474029541
    3. 'ref' → logprob: -5.76894474029541
    4. 'min' → logprob: -6.14394474029541
    5. 'max' → logprob: -6.26894474029541
    6. 'm' → logprob: -7.26894474029541
    7. 'diff' → logprob: -7.51894474029541
    8. 'def' → logprob: -7.76894474029541
    9. 'result' → logprob: -8.01894474029541
    10. 'r' → logprob: -8.01894474029541

Token 193: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031483659986406565
    2. 'res' → logprob: -7.128148555755615
    3. 'while' → logprob: -7.378148555755615
    4. 'ref' → logprob: -8.378148078918457
    5. 'min' → logprob: -8.378148078918457
    6. 'm' → logprob: -8.378148078918457
    7. 'max' → logprob: -8.628148078918457
    8. 'def' → logprob: -9.253148078918457
    9. 'a' → logprob: -9.628148078918457
    10. 'r' → logprob: -9.753148078918457

Token 194: ' pick' (ID: 5230)
  Prédit: ' ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ref' → logprob: -1.2013933658599854
    2. ' i' → logprob: -1.5763933658599854
    3. ' x' → logprob: -2.0763933658599854
    4. ' val' → logprob: -2.8263933658599854
    5. 'ref' → logprob: -2.9513933658599854
    6. '_' → logprob: -2.9513933658599854
    7. ' _' → logprob: -3.0763933658599854
    8. 'i' → logprob: -3.2013933658599854
    9. '_ref' → logprob: -3.4513933658599854
    10. ' r' → logprob: -3.9513933658599854

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0063637359999120235
    2. 'in' → logprob: -5.131363868713379
    3. '_' → logprob: -8.381363868713379
    4. ' ' → logprob: -9.631363868713379
    5. '_in' → logprob: -9.756363868713379
    6. 's' → logprob: -11.256363868713379
    7. 'e' → logprob: -11.631363868713379
    8. ' _' → logprob: -12.006363868713379
    9. '   ' → logprob: -12.256363868713379
    10. '1' → logprob: -12.256363868713379

Token 196: ' set' (ID: 920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7894512414932251
    2. 'range' → logprob: -0.9144512414932251
    3. ' range' → logprob: -2.0394511222839355
    4. ' a' → logprob: -4.2894511222839355
    5. 'set' → logprob: -7.2894511222839355
    6. 'sorted' → logprob: -8.164451599121094
    7. ' set' → logprob: -8.664451599121094
    8. '[a' → logprob: -9.414451599121094
    9. ' sorted' → logprob: -9.914451599121094
    10. '(range' → logprob: -10.164451599121094

Token 197: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.000001907348633
    3. '(range' → logprob: -14.875001907348633
    4. '()' → logprob: -16.500001907348633
    5. ' (' → logprob: -16.625001907348633
    6. '(arr' → logprob: -17.000001907348633
    7. '([' → logprob: -17.500001907348633
    8. 'a' → logprob: -17.625001907348633
    9. '(k' → logprob: -17.875001907348633
    10. '(A' → logprob: -18.125001907348633

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001658397726714611
    2. ':' → logprob: -6.7516584396362305
    3. '):
' → logprob: -7.8766584396362305
    4. '}:' → logprob: -9.75165843963623
    5. '():' → logprob: -10.75165843963623
    6. ' ):' → logprob: -11.25165843963623
    7. ']:' → logprob: -12.37665843963623
    8. ')' → logprob: -13.12665843963623
    9. '>:' → logprob: -13.12665843963623
    10. '):
' → logprob: -13.75165843963623

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05564559996128082
    2. 'res' → logprob: -3.555645704269409
    3. ' res' → logprob: -4.43064546585083
    4. 'r' → logprob: -5.30564546585083
    5. 'diff' → logprob: -6.18064546585083
    6. ' r' → logprob: -6.30564546585083
    7. 'tmp' → logprob: -6.80564546585083
    8. 'd' → logprob: -6.93064546585083
    9. 'temp' → logprob: -7.55564546585083
    10. '    
' → logprob: -7.93064546585083

Token 200: ' result' (ID: 1534)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.7733890414237976
    2. 'diff' → logprob: -1.3983891010284424
    3. 'temp' → logprob: -2.5233891010284424
    4. 'res' → logprob: -2.6483891010284424
    5. 'd' → logprob: -2.7733891010284424
    6. 'ans' → logprob: -4.273388862609863
    7. 'val' → logprob: -4.273388862609863
    8. 'r' → logprob: -4.398388862609863
    9. 'result' (adapté à ' result') → logprob: -4.648388862609863
    10. 'v' → logprob: -5.273388862609863

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17248937487602234
    2. '=min' → logprob: -2.4224894046783447
    3. ' =' → logprob: -2.6724894046783447
    4. '=max' → logprob: -7.422489166259766
    5. '=res' → logprob: -10.797489166259766
    6. '=result' → logprob: -10.922489166259766
    7. '=int' → logprob: -12.047489166259766
    8. '=_' → logprob: -12.922489166259766
    9. '_=' → logprob: -13.547489166259766
    10. '=current' → logprob: -14.047489166259766

Token 202: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.007619995623826981
    2. ' min' → logprob: -4.882619857788086
    3. '   ' → logprob: -11.382619857788086
    4. 'max' → logprob: -13.257619857788086
    5. ' ' → logprob: -15.257619857788086
    6. '	min' → logprob: -16.132619857788086
    7. '  ' → logprob: -16.257619857788086
    8. '(min' → logprob: -16.382619857788086
    9. '    ' → logprob: -17.757619857788086
    10. 'mind' → logprob: -18.007619857788086

Token 203: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -4.024604277219623e-05
    2. 'diff' → logprob: -10.125040054321289
    3. '_DIFF' → logprob: -16.25004005432129
    4. 'min' → logprob: -17.12504005432129
    5. 'Diff' → logprob: -17.37504005432129
    6. '_difference' → logprob: -18.12504005432129
    7. ' diff' → logprob: -18.12504005432129
    8. '_min' → logprob: -18.12504005432129
    9. '_' → logprob: -18.50004005432129
    10. '	diff' → logprob: -19.00004005432129

Token 204: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.796184723294573e-06
    2. '(arr' → logprob: -12.750005722045898
    3. '_diff' → logprob: -13.125005722045898
    4. 'diff' → logprob: -14.125005722045898
    5. '(' → logprob: -15.750005722045898
    6. ' (' → logprob: -17.1250057220459
    7. 'a' → logprob: -18.1250057220459
    8. 'Diff' → logprob: -19.0000057220459
    9. '(array' → logprob: -19.0000057220459
    10. 'dif' → logprob: -19.6250057220459

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00342544331215322
    2. ',k' → logprob: -5.753425598144531
    3. ' ,' → logprob: -8.378425598144531
    4. ',n' → logprob: -11.253425598144531
    5. ',p' → logprob: -13.253425598144531
    6. '   ' → logprob: -13.378425598144531
    7. ',a' → logprob: -14.878425598144531
    8. '(' → logprob: -15.003425598144531
    9. 'k' → logprob: -15.378425598144531
    10. '(k' → logprob: -15.628425598144531

Token 206: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033546582562848926
    2. ' k' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.375335693359375
    4. 'n' → logprob: -19.000335693359375
    5. ',k' → logprob: -19.125335693359375
    6. '  ' → logprob: -19.375335693359375
    7. '	k' → logprob: -19.625335693359375
    8. '    ' → logprob: -19.750335693359375
    9. ' ' → logprob: -20.000335693359375
    10. '10' → logprob: -20.750335693359375

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001468080561608076
    2. ',q' → logprob: -7.001468181610107
    3. ' ,' → logprob: -7.501468181610107
    4. ',k' → logprob: -12.62646770477295
    5. ',p' → logprob: -15.50146770477295
    6. ',
' → logprob: -15.62646770477295
    7. 'q' → logprob: -15.75146770477295
    8. '   ' → logprob: -16.501468658447266
    9. ',n' → logprob: -16.626468658447266
    10. '```' → logprob: -16.876468658447266

Token 208: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009115827269852161
    2. ' q' → logprob: -7.000911712646484
    3. '	q' → logprob: -18.125911712646484
    4. ' ' → logprob: -18.500911712646484
    5. '   ' → logprob: -19.125911712646484
    6. 'k' → logprob: -20.125911712646484
    7. '
' → logprob: -20.125911712646484
    8. ',q' → logprob: -20.250911712646484
    9. '$q' → logprob: -21.375911712646484
    10. '  ' → logprob: -21.625911712646484

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029850711580365896
    2. ',p' → logprob: -5.877985000610352
    3. ' ,' → logprob: -8.627985000610352
    4. '   ' → logprob: -15.127985000610352
    5. 'p' → logprob: -16.00298500061035
    6. '-' → logprob: -16.00298500061035
    7. '```' → logprob: -16.25298500061035
    8. ',
' → logprob: -16.50298500061035
    9. '_,' → logprob: -16.62798500061035
    10. ')' → logprob: -16.87798500061035

Token 210: ' pick' (ID: 5230)
  Prédit: 'pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pick' → logprob: -0.0019288709154352546
    2. ' pick' → logprob: -6.251928806304932
    3. 'pickup' → logprob: -16.876928329467773
    4. 'pickle' → logprob: -16.876928329467773
    5. 'p' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.251928329467773
    7. 'pic' → logprob: -17.376928329467773
    8. 'picked' → logprob: -17.501928329467773
    9. '   ' → logprob: -17.876928329467773
    10. 'Pick' → logprob: -18.126928329467773

Token 211: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006788432132452726
    2. ')' → logprob: -5.00678825378418
    3. ')
' → logprob: -10.25678825378418
    4. ' )
' → logprob: -10.50678825378418
    5. '   ' → logprob: -11.50678825378418
    6. ' )' → logprob: -15.63178825378418
    7. ')

' → logprob: -15.75678825378418
    8. ' ' → logprob: -16.13178825378418
    9. ')`
' → logprob: -17.00678825378418
    10. '  ' → logprob: -17.88178825378418

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004874250385910273
    2. ' if' → logprob: -5.629874229431152
    3. 'if' → logprob: -6.754874229431152
    4. '
' → logprob: -9.254874229431152
    5. '<|end|>' → logprob: -12.254874229431152
    6. '    
' → logprob: -12.754874229431152
    7. '  ' → logprob: -13.004874229431152
    8. ' ' → logprob: -14.254874229431152
    9. '
' → logprob: -14.629874229431152
    10. ' res' → logprob: -14.754874229431152

Token 213: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.695770263671875
    2. 'if' (adapté à ' if') → logprob: -0.695770263671875
    3. ' if' → logprob: -5.945770263671875
    4. '	if' → logprob: -13.820770263671875
    5. ' ' → logprob: -14.195770263671875
    6. 'res' → logprob: -14.695770263671875
    7. '
' → logprob: -15.195770263671875
    8. '  ' → logprob: -15.320770263671875
    9. '       ' → logprob: -16.570770263671875
    10. '    
' → logprob: -16.695770263671875

Token 214: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4740775227546692
    2. 'result' → logprob: -0.9740775227546692
    3. '(result' → logprob: -14.474077224731445
    4. '	result' → logprob: -18.849077224731445
    5. '_result' → logprob: -18.849077224731445
    6. '   ' → logprob: -18.974077224731445
    7. ' ' → logprob: -19.599077224731445
    8. 'Result' → logprob: -20.474077224731445
    9. '[result' → logprob: -20.599077224731445
    10. '$result' → logprob: -20.849077224731445

Token 215: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01608915627002716
    2. 'is' → logprob: -4.141088962554932
    3. '!=' → logprob: -10.01608943939209
    4. ' ' → logprob: -12.26608943939209
    5. '!==' → logprob: -12.64108943939209
    6. 'not' → logprob: -14.26608943939209
    7. ' !=' → logprob: -14.51608943939209
    8. '==' → logprob: -15.64108943939209
    9. 'and' → logprob: -15.64108943939209
    10. 'if' → logprob: -15.64108943939209

Token 216: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931762099266052
    2. 'not' → logprob: -0.6931762099266052
    3. 'None' → logprob: -10.56817626953125
    4. ' None' → logprob: -13.19317626953125
    5. '	not' → logprob: -14.81817626953125
    6. '   ' → logprob: -14.94317626953125
    7. 'n' → logprob: -15.81817626953125
    8. '       ' → logprob: -16.06817626953125
    9. 'Not' → logprob: -16.31817626953125
    10. 'non' → logprob: -16.81817626953125

Token 217: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.3306015716807451e-05
    2. ' None' → logprob: -11.25001335144043
    3. 'none' → logprob: -16.00001335144043
    4. '_None' → logprob: -16.37501335144043
    5. 'not' → logprob: -17.37501335144043
    6. '=None' → logprob: -17.62501335144043
    7. 'N' → logprob: -17.87501335144043
    8. '   ' → logprob: -18.37501335144043
    9. '0' → logprob: -18.50001335144043
    10. '(None' → logprob: -18.75001335144043

Token 218: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03738001361489296
    2. ':' → logprob: -4.037380218505859
    3. ':
' → logprob: -4.537380218505859
    4. '   ' → logprob: -5.662380218505859
    5. '       ' → logprob: -5.912380218505859
    6. 'and' → logprob: -6.162380218505859
    7. '	and' → logprob: -10.53738021850586
    8. '):
' → logprob: -11.66238021850586
    9. '=' → logprob: -12.03738021850586
    10. ' ' → logprob: -13.03738021850586

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1869259625673294
    2. ' and' → logprob: -2.1869258880615234
    3. '   ' → logprob: -3.0619258880615234
    4. ':' → logprob: -5.186925888061523
    5. 'res' → logprob: -6.186925888061523
    6. ':
' → logprob: -6.311925888061523
    7. ' res' → logprob: -6.436925888061523
    8. 'and' → logprob: -8.311925888061523
    9. '
' → logprob: -10.436925888061523
    10. '):
' → logprob: -10.436925888061523

Token 220: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6988763809204102
    2. ' res' → logprob: -0.6988763809204102
    3. '   ' → logprob: -5.57387638092041
    4. '       ' → logprob: -6.44887638092041
    5. ' if' → logprob: -8.32387638092041
    6. 'if' → logprob: -9.57387638092041
    7. '
' → logprob: -11.69887638092041
    8. '           ' → logprob: -11.82387638092041
    9. '	res' → logprob: -12.07387638092041
    10. '
' → logprob: -14.82387638092041

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06378587335348129
    2. '=' → logprob: -2.8137857913970947
    3. '=min' → logprob: -6.313786029815674
    4. '=max' → logprob: -12.438785552978516
    5. '   ' → logprob: -13.438785552978516
    6. '=res' → logprob: -16.688785552978516
    7. 'min' → logprob: -18.188785552978516
    8. '=int' → logprob: -18.313785552978516
    9. '＝' → logprob: -18.688785552978516
    10. '	' → logprob: -19.188785552978516

Token 222: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10020667314529419
    2. ' min' → logprob: -2.3502066135406494
    3. 'max' → logprob: -17.97520637512207
    4. '	min' → logprob: -17.97520637512207
    5. '   ' → logprob: -18.10020637512207
    6. '(min' → logprob: -18.60020637512207
    7. 'res' → logprob: -19.85020637512207
    8. '.min' → logprob: -20.35020637512207
    9. '=min' → logprob: -20.35020637512207
    10. '[min' → logprob: -20.47520637512207

Token 223: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. 'res' → logprob: -16.750431060791016
    4. ' (' → logprob: -17.000431060791016
    5. '(result' → logprob: -17.500431060791016
    6. '(
' → logprob: -17.875431060791016
    7. ',res' → logprob: -20.375431060791016
    8. '=res' → logprob: -20.750431060791016
    9. '	res' → logprob: -20.875431060791016
    10. ' res' → logprob: -21.375431060791016

Token 224: ',result' (ID: 129217)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07922650873661041
    2. ',result' → logprob: -2.829226493835449
    3. ',res' → logprob: -4.079226493835449
    4. ' ,' → logprob: -8.57922649383545
    5. 'res' → logprob: -14.57922649383545
    6. '(result' → logprob: -14.57922649383545
    7. '(res' → logprob: -14.70422649383545
    8. ',min' → logprob: -15.32922649383545
    9. 'result' → logprob: -15.70422649383545
    10. ',max' → logprob: -16.079227447509766

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.297462171758525e-05
    2. ')
' → logprob: -10.625033378601074
    3. ' )' → logprob: -11.875033378601074
    4. ')return' → logprob: -14.250033378601074
    5. ')+' → logprob: -15.750033378601074
    6. '))' → logprob: -15.875033378601074
    7. ')#' → logprob: -16.000032424926758
    8. '+' → logprob: -16.125032424926758
    9. '())' → logprob: -16.500032424926758
    10. ')**' → logprob: -16.750032424926758

Token 226: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.392202976712724e-06
    2. '
' → logprob: -12.500006675720215
    3. ' print' → logprob: -12.875006675720215
    4. ')
' → logprob: -19.0000057220459
    5. ')' → logprob: -19.2500057220459
    6. '(print' → logprob: -19.2500057220459
    7. '```' → logprob: -19.3750057220459
    8. '    
' → logprob: -20.0000057220459
    9. '-print' → logprob: -20.2500057220459
    10. '#print' → logprob: -20.6250057220459

Token 227: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003362966235727072
    2. '(' → logprob: -8.000336647033691
    3. 'res' → logprob: -14.000336647033691
    4. '(
' → logprob: -17.000335693359375
    5. ' (' → logprob: -18.125335693359375
    6. '()' → logprob: -18.500335693359375
    7. '=res' → logprob: -18.875335693359375
    8. ',res' → logprob: -19.500335693359375
    9. '(r' → logprob: -19.500335693359375
    10. '(re' → logprob: -19.875335693359375

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. '+' → logprob: -11.000020027160645
    3. '))' → logprob: -14.000020027160645
    4. ' )' → logprob: -14.000020027160645
    5. ')
' → logprob: -14.250020027160645
    6. ')`' → logprob: -15.375020027160645
    7. ')#' → logprob: -16.000019073486328
    8. '(' → logprob: -16.375019073486328
    9. '+)' → logprob: -16.500019073486328
    10. '()' → logprob: -17.375019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 226
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 173
Précision stricte (1ère position): 35.40%
Précision adaptée (1ère position): 38.94%
Précision (top 10): 76.55%
================================================================================
