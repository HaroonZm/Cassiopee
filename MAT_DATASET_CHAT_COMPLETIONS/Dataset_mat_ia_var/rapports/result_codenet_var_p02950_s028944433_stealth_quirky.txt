================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as system
read = system.stdin.readline

P = int(read())
A = list(map(int, read().split()))

Answer = [None]*P
for z in range(P):
    Answer[z] = 0

ix,magic = 0,{}

for idx,v in enumerate(A):
    if not v:
        ix += 1
        continue
    Answer[0] += -P+1
    multi = 1
    for step in reversed(range(P)):
        spot = (P-1)-step
        # store some temp in a dict for zero reason
        magic[(idx,step)] = Answer[step]
        Answer[step] -= multi
        Answer[step] %= P
        multi = (multi*idx)%P
    ix += 1

print(*Answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' system' (ID: 2420)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7590999603271484
    2. ' sys' → logprob: -0.8840999603271484
    3. ' ' → logprob: -2.3840999603271484
    4. '   ' → logprob: -4.509099960327148
    5. 'sy' → logprob: -5.009099960327148
    6. ' sy' → logprob: -6.509099960327148
    7. '  ' → logprob: -6.634099960327148
    8. 's' → logprob: -7.009099960327148
    9. '```' → logprob: -7.134099960327148
    10. ' system' → logprob: -7.259099960327148

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016663733404129744
    2. 'import' → logprob: -7.75166654586792
    3. '
' → logprob: -8.126666069030762
    4. '<|end|>' → logprob: -8.501666069030762
    5. 'newline' → logprob: -9.001666069030762
    6. '.import' → logprob: -9.251666069030762
    7. '<|end|>' → logprob: -9.626666069030762
    8. ',' → logprob: -9.751666069030762
    9. '\n' → logprob: -9.876666069030762
    10. '```' → logprob: -10.001666069030762

Token 5: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007130279554985464
    2. '<|end|>' → logprob: -8.625713348388672
    3. 'import' → logprob: -9.500713348388672
    4. '
' → logprob: -9.750713348388672
    5. 'newline' → logprob: -9.750713348388672
    6. '\n' → logprob: -9.875713348388672
    7. '.readline' → logprob: -10.000713348388672
    8. '.import' → logprob: -10.500713348388672
    9. '.exit' → logprob: -10.750713348388672
    10. '<|end|>' → logprob: -10.875713348388672

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09214772284030914
    2. 'line' → logprob: -2.8421478271484375
    3. '()' → logprob: -3.9671478271484375
    4. '_' → logprob: -5.4671478271484375
    5. '_line' → logprob: -6.5921478271484375
    6. '.' → logprob: -7.0921478271484375
    7. ')' → logprob: -7.2171478271484375
    8. 'ing' → logprob: -7.5921478271484375
    9. '(
' → logprob: -7.7171478271484375
    10. 'file' → logprob: -7.8421478271484375

Token 7: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.006871421821415424
    2. 'system' → logprob: -5.006871223449707
    3. ' input' → logprob: -9.506871223449707
    4. ' sys' → logprob: -10.131871223449707
    5. 'input' → logprob: -11.131871223449707
    6. 'sys' → logprob: -11.881871223449707
    7. '	system' → logprob: -11.881871223449707
    8. '(system' → logprob: -12.506871223449707
    9. ' lambda' → logprob: -12.631871223449707
    10. ' ' → logprob: -13.256871223449707

Token 8: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11106640845537186
    2. '.stdin' → logprob: -2.4860663414001465
    3. '.readline' → logprob: -4.3610663414001465
    4. '.stdout' → logprob: -5.1110663414001465
    5. ' .' → logprob: -6.2360663414001465
    6. '.argv' → logprob: -8.361066818237305
    7. '.read' → logprob: -8.486066818237305
    8. '.stderr' → logprob: -8.986066818237305
    9. '.import' → logprob: -8.986066818237305
    10. '.input' → logprob: -9.361066818237305

Token 9: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1284448206424713
    2. '.readline' → logprob: -2.5034449100494385
    3. '.read' → logprob: -3.2534449100494385
    4. '.Read' → logprob: -10.25344467163086
    5. 'read' → logprob: -10.87844467163086
    6. '.readlines' → logprob: -11.00344467163086
    7. '.READ' → logprob: -12.50344467163086
    8. '```' → logprob: -12.62844467163086
    9. '.write' → logprob: -12.75344467163086
    10. ' .' → logprob: -13.00344467163086

Token 10: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010440574027597904
    2. '(' → logprob: -4.635440349578857
    3. '()
' → logprob: -7.760440349578857
    4. '(
' → logprob: -9.010440826416016
    5. '()

' → logprob: -9.635440826416016
    6. '()\' → logprob: -10.760440826416016
    7. '(

' → logprob: -11.385440826416016
    8. ' ()' → logprob: -11.635440826416016
    9. ')' → logprob: -11.760440826416016
    10. '().' → logprob: -12.010440826416016

Token 11: 'P' (ID: 47)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005749551928602159
    2. '(' → logprob: -7.625575065612793
    3. '().' → logprob: -10.000575065612793
    4. '()
' → logprob: -11.000575065612793
    5. ')' → logprob: -11.875575065612793
    6. '()

' → logprob: -11.875575065612793
    7. '())' → logprob: -12.875575065612793
    8. '();' → logprob: -13.500575065612793
    9. '()\' → logprob: -13.500575065612793
    10. '()]' → logprob: -14.125575065612793

Token 12: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0043902406468987465
    2. 'R' → logprob: -5.504390239715576
    3. 'rin' → logprob: -8.504390716552734
    4. 'ri' → logprob: -10.254390716552734
    5. '_r' → logprob: -10.629390716552734
    6. 'rim' → logprob: -11.004390716552734
    7. 'ass' → logprob: -11.629390716552734
    8. '(r' → logprob: -12.129390716552734
    9. 'print' → logprob: -12.879390716552734
    10. ' r' → logprob: -13.129390716552734

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.576196014881134
    2. 'int' → logprob: -0.826196014881134
    3. ' ' → logprob: -9.20119571685791
    4. '10' → logprob: -10.20119571685791
    5. '(int' → logprob: -10.45119571685791
    6. '0' → logprob: -11.07619571685791
    7. 'map' → logprob: -11.07619571685791
    8. ' map' → logprob: -11.32619571685791
    9. '5' → logprob: -11.95119571685791
    10. '[int' → logprob: -12.32619571685791

Token 14: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3164500892162323
    2. '(read' → logprob: -1.3164501190185547
    3. '('' → logprob: -6.191450119018555
    4. '(P' → logprob: -7.816450119018555
    5. '(system' → logprob: -8.441450119018555
    6. '(sys' → logprob: -8.941450119018555
    7. '(input' → logprob: -8.941450119018555
    8. 'read' → logprob: -9.816450119018555
    9. '("' → logprob: -9.816450119018555
    10. ' (' → logprob: -9.941450119018555

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014205695129930973
    2. '()' → logprob: -4.2642059326171875
    3. '().' → logprob: -11.014205932617188
    4. '())
' → logprob: -11.514205932617188
    5. ' ())' → logprob: -11.764205932617188
    6. ')' → logprob: -12.764205932617188
    7. '()))' → logprob: -13.514205932617188
    8. '(' → logprob: -13.514205932617188
    9. '();)' → logprob: -14.389205932617188
    10. '())

' → logprob: -14.389205932617188

Token 16: 'A' (ID: 32)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2642129957675934
    2. ' ' → logprob: -2.5142130851745605
    3. 'for' → logprob: -3.1392130851745605
    4. '\' → logprob: -3.2642130851745605
    5. ')' → logprob: -4.0142130851745605
    6. ' 
' → logprob: -5.0142130851745605
    7. '*' → logprob: -5.0142130851745605
    8. ' for' → logprob: -5.0142130851745605
    9. '\r' → logprob: -5.0142130851745605
    10. ' \' → logprob: -5.5142130851745605

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11692312359809875
    2. 'rr' → logprob: -3.8669230937957764
    3. 'rray' → logprob: -3.9919230937957764
    4. ',' → logprob: -4.1169233322143555
    5. '=' → logprob: -4.1169233322143555
    6. 'L' → logprob: -4.8669233322143555
    7. 'RR' → logprob: -5.4919233322143555
    8. '[' → logprob: -5.8669233322143555
    9. ' ' → logprob: -6.1169233322143555
    10. '_list' → logprob: -6.3669233322143555

Token 18: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9789594411849976
    2. 'int' → logprob: -1.7289594411849976
    3. 'list' → logprob: -1.7289594411849976
    4. ' int' → logprob: -2.103959560394287
    5. ' read' → logprob: -2.603959560394287
    6. 'read' → logprob: -3.353959560394287
    7. '[int' → logprob: -4.228959560394287
    8. '[]' → logprob: -4.978959560394287
    9. ' P' → logprob: -5.353959560394287
    10. '[' → logprob: -5.728959560394287

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4795187711715698
    2. '(map' → logprob: -0.9795187711715698
    3. '(read' → logprob: -5.354518890380859
    4. '(int' → logprob: -7.604518890380859
    5. '()' → logprob: -9.22951889038086
    6. '(range' → logprob: -9.60451889038086
    7. '(system' → logprob: -11.97951889038086
    8. '(

' → logprob: -11.97951889038086
    9. '(input' → logprob: -12.22951889038086
    10. '(
' → logprob: -12.22951889038086

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026372993364930153
    2. '(' → logprob: -3.6513729095458984
    3. '(str' → logprob: -10.651372909545898
    4. '(
' → logprob: -11.151372909545898
    5. '<int' → logprob: -11.526372909545898
    6. '[int' → logprob: -11.651372909545898
    7. 'int' → logprob: -12.151372909545898
    8. '(lambda' → logprob: -12.776372909545898
    9. '=int' → logprob: -13.151372909545898
    10. '(input' → logprob: -13.651372909545898

Token 21: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.0009065798367373645
    2. ',' → logprob: -7.125906467437744
    3. '(' → logprob: -9.375906944274902
    4. ')' → logprob: -12.375906944274902
    5. 'read' → logprob: -12.750906944274902
    6. ' (' → logprob: -12.875906944274902
    7. ' ,' → logprob: -13.125906944274902
    8. '),' → logprob: -13.375906944274902
    9. '(system' → logprob: -13.375906944274902
    10. ' read' → logprob: -14.500906944274902

Token 22: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6931931972503662
    2. ' read' → logprob: -0.6931931972503662
    3. '(read' → logprob: -10.318193435668945
    4. '	read' → logprob: -11.693193435668945
    5. ' input' → logprob: -13.318193435668945
    6. ' ' → logprob: -13.693193435668945
    7. ' readline' → logprob: -14.193193435668945
    8. 'input' → logprob: -14.193193435668945
    9. '.read' → logprob: -15.943193435668945
    10. ' ' → logprob: -16.693193435668945

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005769992247223854
    2. '()))' → logprob: -5.505770206451416
    3. '()' → logprob: -6.630770206451416
    4. '())' → logprob: -8.005769729614258
    5. '())))' → logprob: -11.005769729614258
    6. '()));' → logprob: -11.130769729614258
    7. '());' → logprob: -13.755769729614258
    8. '(),' → logprob: -14.005769729614258
    9. '()),' → logprob: -14.130769729614258
    10. '()>' → logprob: -14.630769729614258

Token 24: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.13052336871623993
    2. 'split' → logprob: -2.130523443222046
    3. 'rstrip' → logprob: -5.630523204803467
    4. ' strip' → logprob: -13.630523681640625
    5. '(split' → logprob: -15.380523681640625
    6. '(strip' → logprob: -15.630523681640625
    7. '().' → logprob: -15.755523681640625
    8. 'replace' → logprob: -16.005523681640625
    9. ' split' → logprob: -16.130523681640625
    10. 'read' → logprob: -16.380523681640625

Token 25: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08809159696102142
    2. '())' → logprob: -2.5880916118621826
    3. '))' → logprob: -4.9630913734436035
    4. '()' → logprob: -6.3380913734436035
    5. ')' → logprob: -8.213091850280762
    6. '(' → logprob: -9.213091850280762
    7. '()))
' → logprob: -11.338091850280762
    8. '())))' → logprob: -12.213091850280762
    9. '()));' → logprob: -12.588091850280762
    10. '(),' → logprob: -13.088091850280762

Token 26: 'Answer' (ID: 17045)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.49226996302604675
    2. 'for' → logprob: -1.6172699928283691
    3. 'print' → logprob: -3.492269992828369
    4. 'count' → logprob: -3.742269992828369
    5. 'if' → logprob: -3.867269992828369
    6. 'answer' → logprob: -4.117269992828369
    7. 'sum' → logprob: -4.242269992828369
    8. 'result' → logprob: -4.367269992828369
    9. 'max' → logprob: -4.367269992828369
    10. 'total' → logprob: -4.492269992828369

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8710037469863892
    2. '(' → logprob: -1.3710037469863892
    3. '=' → logprob: -1.3710037469863892
    4. '.' → logprob: -4.1210036277771
    5. '(A' → logprob: -4.2460036277771
    6. '.sort' → logprob: -5.2460036277771
    7. '_' → logprob: -5.2460036277771
    8. 'A' → logprob: -5.4960036277771
    9. '[:]' → logprob: -5.6210036277771
    10. 's' → logprob: -5.7460036277771

Token 28: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9454149603843689
    2. 'max' → logprob: -1.1954150199890137
    3. 'sum' → logprob: -1.5704150199890137
    4. '[]' → logprob: -3.4454150199890137
    5. '[max' → logprob: -4.320415019989014
    6. '[' → logprob: -4.445415019989014
    7. 'min' → logprob: -4.820415019989014
    8. ' max' → logprob: -4.820415019989014
    9. 'sorted' → logprob: -4.820415019989014
    10. ' sum' → logprob: -5.070415019989014

Token 29: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015227057039737701
    2. 'A' → logprob: -4.7652268409729
    3. 'a' → logprob: -6.0152268409729
    4. 'max' → logprob: -6.8902268409729
    5. '1' → logprob: -7.6402268409729
    6. '-' → logprob: -7.7652268409729
    7. 'x' → logprob: -7.8902268409729
    8. 'P' → logprob: -8.140227317810059
    9. '])' → logprob: -8.390227317810059
    10. 'str' → logprob: -8.515227317810059

Token 30: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1726769506931305
    2. '(' → logprob: -2.2976770401000977
    3. '(P' → logprob: -4.422677040100098
    4. ']*' → logprob: -4.547677040100098
    5. '(len' → logprob: -4.547677040100098
    6. '()]' → logprob: -4.797677040100098
    7. '()' → logprob: -4.922677040100098
    8. ' for' → logprob: -5.922677040100098
    9. 'for' → logprob: -5.922677040100098
    10. ')]' → logprob: -6.547677040100098

Token 31: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009410372003912926
    2. '(P' → logprob: -4.759410381317139
    3. '(' → logprob: -7.884410381317139
    4. 'len' → logprob: -8.38440990447998
    5. '(len' → logprob: -9.38440990447998
    6. ' P' → logprob: -10.50940990447998
    7. '10' → logprob: -11.38440990447998
    8. '7' → logprob: -11.50940990447998
    9. '100' → logprob: -11.75940990447998
    10. '6' → logprob: -11.88440990447998

Token 32: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000889067945536226
    2. ' for' → logprob: -7.250889301300049
    3. '
' → logprob: -9.00088882446289
    4. '\n' → logprob: -11.25088882446289
    5. '(' → logprob: -11.50088882446289
    6. '0' → logprob: -12.12588882446289
    7. '```' → logprob: -12.25088882446289
    8. ')' → logprob: -12.50088882446289
    9. '(
' → logprob: -12.62588882446289
    10. 'i' → logprob: -13.50088882446289

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014554095454514027
    2. 'stack' → logprob: -5.264554023742676
    3. 'count' → logprob: -5.764554023742676
    4. 'idx' → logprob: -6.639554023742676
    5. 'max' → logprob: -6.889554023742676
    6. 'counts' → logprob: -7.639554023742676
    7. 'i' → logprob: -8.139554023742676
    8. 'sum' → logprob: -8.139554023742676
    9. 'cnt' → logprob: -8.264554023742676
    10. 'dp' → logprob: -8.264554023742676

Token 34: ' z' (ID: 579)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00698188366368413
    2. 'i' → logprob: -5.00698184967041
    3. ' ' → logprob: -9.00698184967041
    4. ' p' → logprob: -9.88198184967041
    5. ' _' → logprob: -10.50698184967041
    6. ' idx' → logprob: -11.25698184967041
    7. ' index' → logprob: -11.50698184967041
    8. '_' → logprob: -11.63198184967041
    9. ' range' → logprob: -11.75698184967041
    10. ' ' → logprob: -12.13198184967041

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003635826986283064
    2. 'in' → logprob: -5.753635883331299
    3. ' ' → logprob: -8.37863540649414
    4. ',' → logprob: -8.75363540649414
    5. 'n' → logprob: -10.37863540649414
    6. 'range' → logprob: -11.50363540649414
    7. ' i' → logprob: -12.25363540649414
    8. 'i' → logprob: -12.87863540649414
    9. '_' → logprob: -13.25363540649414
    10. 'x' → logprob: -13.25363540649414

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.054893337190151215
    2. ' range' → logprob: -2.9298932552337646
    3. 'A' → logprob: -12.054893493652344
    4. 'P' → logprob: -13.304893493652344
    5. 'r' → logprob: -14.554893493652344
    6. 'rang' → logprob: -14.679893493652344
    7. '(range' → logprob: -14.804893493652344
    8. 'Range' → logprob: -14.929893493652344
    9. '	range' → logprob: -15.054893493652344
    10. ' A' → logprob: -15.054893493652344

Token 37: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.16024728119373322
    2. '(' → logprob: -1.9102473258972168
    3. ' (' → logprob: -11.535246849060059
    4. '(len' → logprob: -11.785246849060059
    5. '(p' → logprob: -13.285246849060059
    6. '(
' → logprob: -14.285246849060059
    7. '((' → logprob: -14.660246849060059
    8. 'P' → logprob: -14.660246849060059
    9. '()' → logprob: -14.785246849060059
    10. '(i' → logprob: -15.285246849060059

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008376232581213117
    2. ')' → logprob: -7.625837802886963
    3. ' ):' → logprob: -8.500837326049805
    4. '):
' → logprob: -9.500837326049805
    5. '+' → logprob: -10.000837326049805
    6. ':' → logprob: -10.750837326049805
    7. '-' → logprob: -13.625837326049805
    8. '):
' → logprob: -14.000837326049805
    9. ']:' → logprob: -14.250837326049805
    10. ',' → logprob: -14.500837326049805

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24898630380630493
    2. '   ' → logprob: -2.12398624420166
    3. '    ' → logprob: -2.87398624420166
    4. ' 
' → logprob: -4.62398624420166
    5. ' A' → logprob: -5.12398624420166
    6. '     
' → logprob: -5.24898624420166
    7. ' i' → logprob: -5.49898624420166
    8. '    
' → logprob: -5.62398624420166
    9. ' \' → logprob: -6.37398624420166
    10. ' n' → logprob: -7.12398624420166

Token 40: ' Answer' (ID: 30985)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.09077525138855
    2. ' A' → logprob: -2.34077525138855
    3. ' max' → logprob: -2.59077525138855
    4. 'n' → logprob: -2.84077525138855
    5. ' n' → logprob: -2.96577525138855
    6. 'max' → logprob: -3.09077525138855
    7. 'a' → logprob: -3.34077525138855
    8. 'num' → logprob: -3.46577525138855
    9. 'x' → logprob: -3.71577525138855
    10. 'N' → logprob: -3.71577525138855

Token 41: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.0015568782109767199
    2. '[' → logprob: -6.501556873321533
    3. ' =' → logprob: -10.501557350158691
    4. ' [' → logprob: -12.001557350158691
    5. '=' → logprob: -12.376557350158691
    6. '=z' → logprob: -12.501557350158691
    7. '[:]' → logprob: -12.501557350158691
    8. '[q' → logprob: -13.751557350158691
    9. '[-' → logprob: -13.876557350158691
    10. '```' → logprob: -14.251557350158691

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006502558942884207
    2. ' ]' → logprob: -5.631502628326416
    3. ']=' → logprob: -5.881502628326416
    4. ')' → logprob: -10.256502151489258
    5. '[' → logprob: -10.631502151489258
    6. ']+=' → logprob: -11.506502151489258
    7. '])' → logprob: -11.631502151489258
    8. '=' → logprob: -12.006502151489258
    9. ' =' → logprob: -12.756502151489258
    10. '][' → logprob: -13.006502151489258

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764573216438293
    2. ' =' → logprob: -0.8264573216438293
    3. ',' → logprob: -8.201457023620605
    4. '=int' → logprob: -9.326457023620605
    5. ' ' → logprob: -10.076457023620605
    6. ' +=' → logprob: -10.326457023620605
    7. '+=' → logprob: -10.451457023620605
    8. ')' → logprob: -11.701457023620605
    9. '=len' → logprob: -12.576457023620605
    10. '=[]' → logprob: -12.701457023620605

Token 44: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8897289037704468
    2. 'max' → logprob: -1.3897289037704468
    3. 'sum' → logprob: -2.1397290229797363
    4. ' A' → logprob: -3.2647290229797363
    5. ' max' → logprob: -3.6397290229797363
    6. 'str' → logprob: -3.7647290229797363
    7. '0' → logprob: -3.8897290229797363
    8. 'int' → logprob: -4.014729022979736
    9. ' sum' → logprob: -4.014729022979736
    10. ''A' → logprob: -4.389729022979736

Token 45: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7643117308616638
    2. 'max' → logprob: -1.3893117904663086
    3. 'sum' → logprob: -2.0143117904663086
    4. 'int' → logprob: -3.0143117904663086
    5. 'str' → logprob: -3.2643117904663086
    6. '0' → logprob: -4.014311790466309
    7. 'min' → logprob: -4.139311790466309
    8. 'sorted' → logprob: -5.264311790466309
    9. '-' → logprob: -5.639311790466309
    10. 'abs' → logprob: -5.764311790466309

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3418563604354858
    2. 'for' → logprob: -1.4668563604354858
    3. ' ' → logprob: -1.5918563604354858
    4. '<|end|>' → logprob: -1.5918563604354858
    5. ' for' → logprob: -3.2168564796447754
    6. ' 
' → logprob: -3.8418564796447754
    7. '\n' → logprob: -4.341856479644775
    8. ')' → logprob: -4.716856479644775
    9. '.' → logprob: -5.466856479644775
    10. '\' → logprob: -6.216856479644775

Token 47: 'ix' (ID: 1128)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07263610512018204
    2. '
' → logprob: -3.197636127471924
    3. ' for' → logprob: -3.697636127471924
    4. '\n' → logprob: -6.697636127471924
    5. ' ' → logprob: -7.572636127471924
    6. '' → logprob: -7.697636127471924
    7. '<|end|>' → logprob: -8.072635650634766
    8. '#' → logprob: -8.322635650634766
    9. ' 
' → logprob: -8.322635650634766
    10. '\' → logprob: -8.572635650634766

Token 48: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07315775752067566
    2. '=' → logprob: -4.198157787322998
    3. ']' → logprob: -4.198157787322998
    4. '_' → logprob: -4.198157787322998
    5. '[]' → logprob: -4.448157787322998
    6. 's' → logprob: -5.948157787322998
    7. '[:]' → logprob: -6.323157787322998
    8. ' ' → logprob: -6.448157787322998
    9. ' =' → logprob: -6.823157787322998
    10. 'f' → logprob: -6.823157787322998

Token 49: 'magic' (ID: 82292)
  Prédit: 'iy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iy' → logprob: -1.7520825862884521
    2. 'j' → logprob: -2.002082586288452
    3. 'jx' → logprob: -2.564582586288452
    4. ' iy' → logprob: -2.752082586288452
    5. ' j' → logprob: -3.189582586288452
    6. ' ' → logprob: -3.314582586288452
    7. 'n' → logprob: -3.627082586288452
    8. 'count' → logprob: -4.002082824707031
    9. ' =' → logprob: -4.002082824707031
    10. '_' → logprob: -4.002082824707031

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16398796439170837
    2. ' =' → logprob: -2.163987874984741
    3. '_' → logprob: -3.663987874984741
    4. '_idx' → logprob: -5.91398811340332
    5. '_ix' → logprob: -6.66398811340332
    6. 's' → logprob: -6.78898811340332
    7. '_count' → logprob: -7.41398811340332
    8. ',' → logprob: -7.41398811340332
    9. ' ' → logprob: -7.53898811340332
    10. '=[]' → logprob: -7.66398811340332

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0705403983592987
    2. ' ' → logprob: -2.695540428161621
    3. '1' → logprob: -8.570540428161621
    4. '[' → logprob: -9.695540428161621
    5. ' P' → logprob: -9.695540428161621
    6. 'map' → logprob: -9.820540428161621
    7. '-' → logprob: -10.070540428161621
    8. ' -' → logprob: -10.070540428161621
    9. ' map' → logprob: -10.320540428161621
    10. ' [' → logprob: -10.445540428161621

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008438690565526485
    2. 'map' → logprob: -5.258438587188721
    3. ' ' → logprob: -6.258438587188721
    4. ' map' → logprob: -7.883438587188721
    5. '[' → logprob: -8.133439064025879
    6. '1' → logprob: -8.758439064025879
    7. 'P' → logprob: -9.133439064025879
    8. 'read' → logprob: -9.383439064025879
    9. '-' → logprob: -9.508439064025879
    10. 'int' → logprob: -11.008439064025879

Token 53: ',{' (ID: 62536)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4150424003601074
    2. ',' → logprob: -1.5400424003601074
    3. '
' → logprob: -2.7900424003601074
    4. ' ' → logprob: -4.040042400360107
    5. '<|end|>' → logprob: -4.040042400360107
    6. 'for' → logprob: -5.040042400360107
    7. '=' → logprob: -5.915042400360107
    8. ':' → logprob: -6.040042400360107
    9. ' for' → logprob: -6.165042400360107
    10. ';' → logprob: -6.415042400360107

Token 54: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0034398192074149847
    2. '0' → logprob: -6.378439903259277
    3. '1' → logprob: -7.253439903259277
    4. ''}' → logprob: -8.253439903259277
    5. ''' → logprob: -8.628439903259277
    6. ' }' → logprob: -8.753439903259277
    7. '7' → logprob: -9.503439903259277
    8. '[]}' → logprob: -10.003439903259277
    9. '}
' → logprob: -10.378439903259277
    10. '"}' → logprob: -10.878439903259277

Token 55: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7599166035652161
    2. 'for' → logprob: -0.8849166035652161
    3. '
' → logprob: -3.2599165439605713
    4. ' 
' → logprob: -4.00991678237915
    5. ' for' → logprob: -4.38491678237915
    6. ')' → logprob: -4.88491678237915
    7. ''' → logprob: -5.00991678237915
    8. '<|end|>' → logprob: -5.13491678237915
    9. '\n' → logprob: -5.50991678237915
    10. '[' → logprob: -5.75991678237915

Token 56: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0076797008514404
    2. ' a' → logprob: -1.3826797008514404
    3. ' x' → logprob: -1.8826797008514404
    4. 'a' → logprob: -3.0076797008514404
    5. 'i' → logprob: -3.5076797008514404
    6. 'x' → logprob: -3.6326797008514404
    7. ' A' → logprob: -3.7576797008514404
    8. ' val' → logprob: -4.0076799392700195
    9. ' v' → logprob: -4.1326799392700195
    10. ' num' → logprob: -4.3826799392700195

Token 57: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09273646026849747
    2. 'in' → logprob: -2.5927364826202393
    3. ',' → logprob: -4.34273624420166
    4. ' ,' → logprob: -7.84273624420166
    5. ' ' → logprob: -8.71773624420166
    6. ',in' → logprob: -9.71773624420166
    7. '	in' → logprob: -9.71773624420166
    8. ' i' → logprob: -11.53023624420166
    9. 'In' → logprob: -11.90523624420166
    10. ')' → logprob: -12.03023624420166

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03592582046985626
    2. 'in' → logprob: -3.53592586517334
    3. 'al' → logprob: -5.66092586517334
    4. 'alue' → logprob: -6.03592586517334
    5. ' ' → logprob: -8.91092586517334
    6. 'ariable' → logprob: -10.91092586517334
    7. '```' → logprob: -11.16092586517334
    8. 'alid' → logprob: -11.28592586517334
    9. 'ar' → logprob: -11.53592586517334
    10. 'ALUE' → logprob: -11.53592586517334

Token 59: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.01826009899377823
    2. 'enumer' → logprob: -4.0182600021362305
    3. '(en' → logprob: -9.89326000213623
    4. ' zip' → logprob: -10.76826000213623
    5. '```' → logprob: -11.89326000213623
    6. 'A' → logprob: -12.01826000213623
    7. ' en' → logprob: -12.14326000213623
    8. ' enumer' → logprob: -12.51826000213623
    9. ' ' → logprob: -12.64326000213623
    10. ' A' → logprob: -13.01826000213623

Token 60: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.015305552864447e-05
    2. '(' → logprob: -10.125060081481934
    3. '(P' → logprob: -11.000060081481934
    4. '(a' → logprob: -13.500060081481934
    5. 'A' → logprob: -14.000060081481934
    6. ' (' → logprob: -14.625060081481934
    7. '((' → logprob: -15.125060081481934
    8. ' A' → logprob: -16.37506103515625
    9. ' ' → logprob: -17.00006103515625
    10. '(s' → logprob: -17.25006103515625

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006083175539970398
    2. ':' → logprob: -7.500608444213867
    3. ')' → logprob: -10.375608444213867
    4. '):
' → logprob: -11.125608444213867
    5. ' ):' → logprob: -11.875608444213867
    6. '[' → logprob: -14.000608444213867
    7. '():' → logprob: -15.000608444213867
    8. ':)' → logprob: -15.375608444213867
    9. '[]):' → logprob: -15.375608444213867
    10. '}:' → logprob: -15.625608444213867

Token 62: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44985637068748474
    2. ' if' → logprob: -1.1998564004898071
    3. '   ' → logprob: -3.3248562812805176
    4. '<|end|>' → logprob: -4.574856281280518
    5. ' magic' → logprob: -5.449856281280518
    6. ' ix' → logprob: -6.199856281280518
    7. ' 
' → logprob: -6.574856281280518
    8. 'if' → logprob: -6.949856281280518
    9. ':' → logprob: -7.074856281280518
    10. ')' → logprob: -7.324856281280518

Token 63: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07027240097522736
    2. 'if' (adapté à ' if') → logprob: -2.945272445678711
    3. ' ix' → logprob: -5.570272445678711
    4. ' ' → logprob: -5.695272445678711
    5. ' magic' → logprob: -5.820272445678711
    6. 'magic' → logprob: -6.320272445678711
    7. 'ix' → logprob: -6.695272445678711
    8. ' v' → logprob: -7.195272445678711
    9. 'v' → logprob: -7.695272445678711
    10. '   ' → logprob: -9.070272445678711

Token 64: ' not' (ID: 625)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.180501788854599
    2. 'v' → logprob: -1.8055018186569214
    3. ' ' → logprob: -7.805501937866211
    4. ' A' → logprob: -8.805501937866211
    5. ' not' → logprob: -9.805501937866211
    6. '	v' → logprob: -9.930501937866211
    7. 'A' → logprob: -10.055501937866211
    8. '(v' → logprob: -11.743001937866211
    9. ' (' → logprob: -12.180501937866211
    10. '  ' → logprob: -12.305501937866211

Token 65: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.023981783539056778
    2. 'v' → logprob: -3.773981809616089
    3. '(v' → logprob: -8.523982048034668
    4. ' magic' → logprob: -8.898982048034668
    5. '	v' → logprob: -9.273982048034668
    6. ' ix' → logprob: -9.523982048034668
    7. ' (' → logprob: -9.773982048034668
    8. ' A' → logprob: -9.898982048034668
    9. ' ' → logprob: -10.336482048034668
    10. 'ix' → logprob: -11.273982048034668

Token 66: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011335695162415504
    2. 'in' → logprob: -4.511335849761963
    3. '<|end|>' → logprob: -8.761335372924805
    4. ':' → logprob: -9.761335372924805
    5. ')' → logprob: -10.386335372924805
    6. ' ' → logprob: -10.761335372924805
    7. ']' → logprob: -11.511335372924805
    8. '<|end|>' → logprob: -13.011335372924805
    9. '%' → logprob: -13.511335372924805
    10. '):' → logprob: -13.636335372924805

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5156318545341492
    2. '       ' → logprob: -1.765631914138794
    3. ' continue' → logprob: -1.890631914138794
    4. ' ' → logprob: -3.515631914138794
    5. ':' → logprob: -3.890631914138794
    6. ' ix' → logprob: -4.765631675720215
    7. '    ' → logprob: -4.890631675720215
    8. 'continue' → logprob: -5.765631675720215
    9. ' :' → logprob: -6.140631675720215
    10. ' magic' → logprob: -6.765631675720215

Token 68: ' ix' (ID: 44402)
  Prédit: ' ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.7733911871910095
    2. ' magic' → logprob: -1.2733912467956543
    3. ' continue' → logprob: -2.2733912467956543
    4. ' if' → logprob: -2.7733912467956543
    5. ' break' → logprob: -2.8983912467956543
    6. 'magic' → logprob: -4.898391246795654
    7. '   ' → logprob: -5.023391246795654
    8. 'ix' (adapté à ' ix') → logprob: -5.148391246795654
    9. ' for' → logprob: -5.773391246795654
    10. ' while' → logprob: -6.085891246795654

Token 69: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8228467702865601
    2. ' +=' → logprob: -1.32284677028656
    3. '+=' → logprob: -1.69784677028656
    4. ' =' → logprob: -2.1978468894958496
    5. ' ' → logprob: -8.697846412658691
    6. '+' → logprob: -9.697846412658691
    7. ' -=' → logprob: -11.072846412658691
    8. '-=' → logprob: -11.197846412658691
    9. '==' → logprob: -11.572846412658691
    10. ',' → logprob: -11.947846412658691

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007607100997120142
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -15.007607460021973
    4. '<|end|>' → logprob: -15.445107460021973
    5. ' one' → logprob: -15.757607460021973
    6. '  ' → logprob: -16.757606506347656
    7. ' system' → logprob: -17.132606506347656
    8. ' ' → logprob: -17.320106506347656
    9. '+' → logprob: -17.382606506347656
    10. '2' → logprob: -17.382606506347656

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -15.375075340270996
    4. '<|end|>' → logprob: -15.875075340270996
    5. 'v' → logprob: -16.812576293945312
    6. '-' → logprob: -17.125076293945312
    7. '10' → logprob: -17.937576293945312
    8. '+' → logprob: -18.062576293945312
    9. '100' → logprob: -18.187576293945312
    10. '0' → logprob: -18.250076293945312

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953341364860535
    2. '
' → logprob: -1.9453341960906982
    3. ' else' → logprob: -1.9453341960906982
    4. '<|end|>' → logprob: -2.8203341960906982
    5. ' ' → logprob: -3.0703341960906982
    6. '       ' → logprob: -3.1953341960906982
    7. '    
' → logprob: -4.070333957672119
    8. 'else' → logprob: -4.320333957672119
    9. ' 
' → logprob: -4.945333957672119
    10. 'continue' → logprob: -5.445333957672119

Token 73: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9519404768943787
    2. '   ' → logprob: -1.0769405364990234
    3. 'else' → logprob: -2.5769405364990234
    4. '
' → logprob: -2.5769405364990234
    5. '       ' → logprob: -2.8269405364990234
    6. ' continue' → logprob: -3.7019405364990234
    7. 'continue' → logprob: -4.201940536499023
    8. '<|end|>' → logprob: -5.451940536499023
    9. ' ' → logprob: -5.576940536499023
    10. '    
' → logprob: -5.701940536499023

Token 74: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20101025700569153
    2. ' continue' → logprob: -1.9510102272033691
    3. 'magic' → logprob: -3.701010227203369
    4. 'else' → logprob: -5.201010227203369
    5. '   ' → logprob: -5.951010227203369
    6. ' magic' → logprob: -6.576010227203369
    7. '0' → logprob: -6.576010227203369
    8. '       ' → logprob: -6.951010227203369
    9. ' else' → logprob: -7.076010227203369
    10. 'ix' → logprob: -7.826010227203369

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34088215231895447
    2. '    
' → logprob: -1.5908821821212769
    3. '
' → logprob: -3.0908820629119873
    4. ' 
' → logprob: -3.9658820629119873
    5. '   
' → logprob: -4.840882301330566
    6. '  
' → logprob: -5.590882301330566
    7. ' if' → logprob: -6.215882301330566
    8. '<|end|>' → logprob: -6.840882301330566
    9. '```' → logprob: -7.090882301330566
    10. 'if' → logprob: -7.090882301330566

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02941972389817238
    2. 'if' → logprob: -4.529419898986816
    3. 'magic' → logprob: -4.779419898986816
    4. '    
' → logprob: -5.154419898986816
    5. ' if' → logprob: -6.404419898986816
    6. '
' → logprob: -7.279419898986816
    7. ' magic' → logprob: -7.529419898986816
    8. '```' → logprob: -8.404419898986816
    9. 'for' → logprob: -8.779419898986816
    10. 'mag' → logprob: -9.529419898986816

Token 77: ' Answer' (ID: 30985)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7274519205093384
    2. 'if' → logprob: -0.8524519205093384
    3. '   ' → logprob: -2.977451801300049
    4. 'magic' → logprob: -4.352451801300049
    5. '    
' → logprob: -4.852451801300049
    6. ' for' → logprob: -5.352451801300049
    7. ' magic' → logprob: -5.352451801300049
    8. '
' → logprob: -5.602451801300049
    9. 'for' → logprob: -6.227451801300049
    10. ' 
' → logprob: -6.977451801300049

Token 78: '[' (ID: 58)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.4503546953201294
    2. '[' → logprob: -1.0753546953201294
    3. '[idx' → logprob: -3.95035457611084
    4. '[v' → logprob: -7.20035457611084
    5. '[i' → logprob: -7.70035457611084
    6. '[z' → logprob: -7.82535457611084
    7. '[index' → logprob: -9.45035457611084
    8. '[x' → logprob: -9.45035457611084
    9. '[ip' → logprob: -9.82535457611084
    10. '[ii' → logprob: -9.95035457611084

Token 79: '0' (ID: 15)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.4968964755535126
    2. 'idx' → logprob: -0.996896505355835
    3. ' ix' → logprob: -4.121896266937256
    4. ' idx' → logprob: -5.621896266937256
    5. 'v' → logprob: -6.621896266937256
    6. '[ix' → logprob: -7.871896266937256
    7. '0' → logprob: -8.496896743774414
    8. 'z' → logprob: -8.996896743774414
    9. 'index' → logprob: -8.996896743774414
    10. 'x' → logprob: -9.246896743774414

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019526148214936256
    2. ']+=' → logprob: -4.01952600479126
    3. ' ]' → logprob: -7.14452600479126
    4. ']+' → logprob: -8.269526481628418
    5. '[' → logprob: -8.894526481628418
    6. '+' → logprob: -9.769526481628418
    7. '+=' → logprob: -10.644526481628418
    8. ' +=' → logprob: -10.894526481628418
    9. ']=' → logprob: -11.019526481628418
    10. '+]' → logprob: -11.269526481628418

Token 81: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.427418053150177
    2. ' +=' → logprob: -1.1774179935455322
    3. '=' → logprob: -3.4274179935455322
    4. ' =' → logprob: -5.052418231964111
    5. '+' → logprob: -8.052417755126953
    6. ']+=' → logprob: -8.802417755126953
    7. ' ^=' → logprob: -9.052417755126953
    8. ' |=' → logprob: -9.302417755126953
    9. ' ' → logprob: -9.552417755126953
    10. '|' → logprob: -10.302417755126953

Token 82: ' -' (ID: 533)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7046806216239929
    2. '1' → logprob: -0.9546806216239929
    3. ' v' → logprob: -2.8296806812286377
    4. ' ' → logprob: -3.0796806812286377
    5. 'ix' → logprob: -5.954680442810059
    6. 'magic' → logprob: -6.079680442810059
    7. ' magic' → logprob: -6.204680442810059
    8. ' (' → logprob: -6.329680442810059
    9. 'A' → logprob: -6.704680442810059
    10. ' ix' → logprob: -6.829680442810059

Token 83: 'P' (ID: 47)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4244695007801056
    2. '1' → logprob: -1.2994694709777832
    3. ' v' → logprob: -3.799469470977783
    4. 'A' → logprob: -3.924469470977783
    5. 'ix' → logprob: -5.299469470977783
    6. 'Answer' → logprob: -5.424469470977783
    7. '(' → logprob: -5.549469470977783
    8. ' (' → logprob: -5.674469470977783
    9. ' ' → logprob: -5.924469470977783
    10. '-' → logprob: -6.174469470977783

Token 84: '+' (ID: 10)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9224663376808167
    2. '+' → logprob: -1.5474662780761719
    3. '1' → logprob: -2.047466278076172
    4. ' +' → logprob: -2.547466278076172
    5. ' ' → logprob: -2.922466278076172
    6. '*v' → logprob: -3.172466278076172
    7. ' *' → logprob: -3.422466278076172
    8. '*' → logprob: -4.047466278076172
    9. ' v' → logprob: -4.297466278076172
    10. '<|end|>' → logprob: -4.672466278076172

Token 85: '1' (ID: 16)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.7932766079902649
    2. 'idx' → logprob: -0.9182766079902649
    3. ' ix' → logprob: -2.91827654838562
    4. '1' → logprob: -3.04327654838562
    5. ' idx' → logprob: -3.29327654838562
    6. 'v' → logprob: -5.543276786804199
    7. 'P' → logprob: -6.293276786804199
    8. 'z' → logprob: -7.418276786804199
    9. '(ix' → logprob: -7.418276786804199
    10. ' ' → logprob: -7.918276786804199

Token 86: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2342158406972885
    2. ' +' → logprob: -1.7342158555984497
    3. ' ' → logprob: -3.85921573638916
    4. '<|end|>' → logprob: -4.60921573638916
    5. 'v' → logprob: -8.48421573638916
    6. '*' → logprob: -8.60921573638916
    7. '    ' → logprob: -8.73421573638916
    8. '0' → logprob: -9.23421573638916
    9. ')' → logprob: -9.48421573638916
    10. ' +
' → logprob: -9.60921573638916

Token 87: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4145912826061249
    2. '+' → logprob: -1.4145913124084473
    3. '<|end|>' → logprob: -2.7895913124084473
    4. ')' → logprob: -5.039591312408447
    5. '    ' → logprob: -5.164591312408447
    6. ' 
' → logprob: -5.164591312408447
    7. ' )' → logprob: -5.414591312408447
    8. '1' → logprob: -5.914591312408447
    9. ' +' → logprob: -6.289591312408447
    10. '   ' → logprob: -6.664591312408447

Token 88: ' multi' (ID: 12151)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8144402503967285
    2. '1' → logprob: -1.3144402503967285
    3. '+' → logprob: -2.0644402503967285
    4. 'ix' → logprob: -2.9394402503967285
    5. ' +' → logprob: -3.5644402503967285
    6. ' ix' → logprob: -4.0644402503967285
    7. ')' → logprob: -4.1894402503967285
    8. ' )' → logprob: -4.6894402503967285
    9. 'v' → logprob: -4.8144402503967285
    10. '    ' → logprob: -5.3144402503967285

Token 89: ' =' (ID: 314)
  Prédit: 'plier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plier' → logprob: -0.3312370181083679
    2. 'ply' → logprob: -1.4562370777130127
    3. 'plic' → logprob: -3.8312370777130127
    4. 'p' → logprob: -4.331236839294434
    5. 'pl' → logprob: -4.831236839294434
    6. ' =' → logprob: -6.456236839294434
    7. 'pliers' → logprob: -6.956236839294434
    8. 'ple' → logprob: -7.331236839294434
    9. 'plies' → logprob: -7.456236839294434
    10. '=' → logprob: -7.706236839294434

Token 90: ' ' (ID: 220)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.26447024941444397
    2. 'v' → logprob: -2.389470338821411
    3. ' ' → logprob: -3.389470338821411
    4. '1' → logprob: -3.639470338821411
    5. ' (' → logprob: -3.764470338821411
    6. ' P' → logprob: -4.139470100402832
    7. ' idx' → logprob: -4.764470100402832
    8. ' -' → logprob: -5.264470100402832
    9. ' A' → logprob: -5.514470100402832
    10. '0' → logprob: -5.514470100402832

Token 91: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34814319014549255
    2. 'P' → logprob: -2.8481431007385254
    3. ' v' → logprob: -2.9731431007385254
    4. '(v' → logprob: -3.7231431007385254
    5. '-' → logprob: -3.8481431007385254
    6. '1' → logprob: -3.9731431007385254
    7. '(P' → logprob: -4.223143100738525
    8. '-P' → logprob: -4.223143100738525
    9. 'idx' → logprob: -4.348143100738525
    10. '(' → logprob: -4.473143100738525

Token 92: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48603555560112
    2. '<|end|>' → logprob: -1.1110355854034424
    3. ' ' → logprob: -2.9860355854034424
    4. ' +' → logprob: -6.486035346984863
    5. '<|end|>' → logprob: -6.736035346984863
    6. '*' → logprob: -7.361035346984863
    7. '-' → logprob: -8.236035346984863
    8. ' for' → logprob: -8.361035346984863
    9. 'for' → logprob: -8.361035346984863
    10. ')' → logprob: -8.486035346984863

Token 93: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33833539485931396
    2. ' for' → logprob: -1.588335394859314
    3. ' ' → logprob: -3.3383355140686035
    4. '<|end|>' → logprob: -4.3383355140686035
    5. '*' → logprob: -4.4633355140686035
    6. '+' → logprob: -4.9633355140686035
    7. '   ' → logprob: -5.3383355140686035
    8. ')' → logprob: -5.5883355140686035
    9. '	for' → logprob: -6.5883355140686035
    10. '    ' → logprob: -7.2133355140686035

Token 95: ' step' (ID: 5983)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6870132088661194
    2. ' i' → logprob: -1.8120131492614746
    3. ' range' → logprob: -3.1870131492614746
    4. 'j' → logprob: -3.4370131492614746
    5. ' _' → logprob: -3.6870131492614746
    6. ' k' → logprob: -3.8120131492614746
    7. ' x' → logprob: -3.9370131492614746
    8. ' v' → logprob: -3.9370131492614746
    9. '_' → logprob: -4.062013149261475
    10. ' idx' → logprob: -4.187013149261475

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05657869204878807
    2. 'in' → logprob: -2.9315786361694336
    3. ',' → logprob: -6.806578636169434
    4. ' ' → logprob: -8.306578636169434
    5. ' ,' → logprob: -9.431578636169434
    6. '_' → logprob: -10.306578636169434
    7. '	in' → logprob: -10.431578636169434
    8. '1' → logprob: -10.556578636169434
    9. ',v' → logprob: -10.681578636169434
    10. '_in' → logprob: -11.056578636169434

Token 97: ' reversed' (ID: 57184)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12761037051677704
    2. 'range' → logprob: -2.127610445022583
    3. ' A' → logprob: -8.252610206604004
    4. 'A' → logprob: -8.627610206604004
    5. ' ' → logprob: -9.502610206604004
    6. '	range' → logprob: -10.127610206604004
    7. '[' → logprob: -10.502610206604004
    8. ' v' → logprob: -10.627610206604004
    9. ' reversed' → logprob: -11.252610206604004
    10. '   ' → logprob: -11.502610206604004

Token 98: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.007534937001764774
    2. 'range' → logprob: -5.132534980773926
    3. ' range' → logprob: -6.882534980773926
    4. '(' → logprob: -7.507534980773926
    5. '(A' → logprob: -11.757534980773926
    6. '(list' → logprob: -12.007534980773926
    7. '	range' → logprob: -12.132534980773926
    8. ' (' → logprob: -12.757534980773926
    9. '(r' → logprob: -13.632534980773926
    10. '((' → logprob: -13.882534980773926

Token 99: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022263487800955772
    2. '(P' → logprob: -4.772263526916504
    3. '(ix' → logprob: -4.772263526916504
    4. '(v' → logprob: -5.772263526916504
    5. '(len' → logprob: -7.022263526916504
    6. '(idx' → logprob: -7.272263526916504
    7. '(z' → logprob: -8.647263526916504
    8. '(p' → logprob: -9.772263526916504
    9. '(m' → logprob: -10.397263526916504
    10. '(-' → logprob: -10.522263526916504

Token 100: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.3795376718044281
    2. ')):
' → logprob: -1.2545377016067505
    3. '))' → logprob: -4.004537582397461
    4. '-' → logprob: -5.629537582397461
    5. '+' → logprob: -5.754537582397461
    6. ' ' → logprob: -6.754537582397461
    7. ' ))' → logprob: -6.879537582397461
    8. ')):
' → logprob: -6.879537582397461
    9. ' -' → logprob: -7.129537582397461
    10. '   ' → logprob: -7.379537582397461

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8008887767791748
    2. '<|end|>' → logprob: -1.1758887767791748
    3. ':' → logprob: -1.8008887767791748
    4. ' ' → logprob: -3.175888776779175
    5. '   ' → logprob: -4.550889015197754
    6. '    ' → logprob: -5.175889015197754
    7. ' :' → logprob: -5.300889015197754
    8. ',' → logprob: -5.925889015197754
    9. ')' → logprob: -6.050889015197754
    10. '<|end|>' → logprob: -6.175889015197754

Token 102: ' spot' (ID: 10021)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05104691535234451
    2. ' 
' → logprob: -3.801046848297119
    3. '<|end|>' → logprob: -4.676046848297119
    4. '       ' → logprob: -5.051046848297119
    5. '    ' → logprob: -5.926046848297119
    6. '   ' → logprob: -6.176046848297119
    7. ')' → logprob: -6.676046848297119
    8. '        ' → logprob: -7.051046848297119
    9. '  ' → logprob: -7.051046848297119
    10. ' if' → logprob: -7.676046848297119

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0361461378633976
    2. '=' → logprob: -3.4111461639404297
    3. ',' → logprob: -7.03614616394043
    4. ' ' → logprob: -7.16114616394043
    5. '   ' → logprob: -8.66114616394043
    6. 's' → logprob: -9.16114616394043
    7. '+' → logprob: -9.53614616394043
    8. '    ' → logprob: -9.53614616394043
    9. ' +' → logprob: -9.66114616394043
    10. ' +=' → logprob: -9.78614616394043

Token 104: ' (' (ID: 350)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.816145658493042
    2. '(idx' → logprob: -1.941145658493042
    3. '(ix' → logprob: -2.066145658493042
    4. ' (' → logprob: -2.191145658493042
    5. '(step' → logprob: -2.191145658493042
    6. 'ix' → logprob: -2.191145658493042
    7. ' ix' → logprob: -2.816145658493042
    8. ' idx' → logprob: -2.941145658493042
    9. 'step' → logprob: -3.191145658493042
    10. '(A' → logprob: -3.316145658493042

Token 105: 'P' (ID: 47)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.6587900519371033
    2. ' ix' → logprob: -1.908790111541748
    3. 'idx' → logprob: -2.033790111541748
    4. '(ix' → logprob: -2.033790111541748
    5. '(idx' → logprob: -3.658790111541748
    6. ' idx' → logprob: -3.908790111541748
    7. ' (' → logprob: -4.158790111541748
    8. 'step' → logprob: -5.783790111541748
    9. '(' → logprob: -6.033790111541748
    10. '(step' → logprob: -6.283790111541748

Token 106: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8417395353317261
    2. '-' → logprob: -1.091739535331726
    3. '+' → logprob: -1.966739535331726
    4. ' +' → logprob: -2.4667396545410156
    5. '-step' → logprob: -4.966739654541016
    6. '*' → logprob: -8.216739654541016
    7. 'ix' → logprob: -8.466739654541016
    8. ' ' → logprob: -8.716739654541016
    9. '-z' → logprob: -8.966739654541016
    10. ' ix' → logprob: -9.341739654541016

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2860577702522278
    2. 'step' → logprob: -1.536057710647583
    3. 'ix' → logprob: -4.036057949066162
    4. 'multi' → logprob: -5.286057949066162
    5. ' step' → logprob: -5.536057949066162
    6. '(' → logprob: -6.161057949066162
    7. ' ' → logprob: -6.411057949066162
    8. 'idx' → logprob: -6.911057949066162
    9. '(step' → logprob: -7.286057949066162
    10. ' ix' → logprob: -7.536057949066162

Token 108: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20941103994846344
    2. '-' → logprob: -2.084411144256592
    3. '-step' → logprob: -2.959411144256592
    4. ')' → logprob: -5.334411144256592
    5. '+' → logprob: -5.459411144256592
    6. ')-' → logprob: -6.334411144256592
    7. ' +' → logprob: -7.084411144256592
    8. ')+' → logprob: -7.959411144256592
    9. ')*' → logprob: -8.209410667419434
    10. ' )' → logprob: -9.334410667419434

Token 109: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.030717838555574417
    2. ' step' → logprob: -3.5307178497314453
    3. 'ix' → logprob: -7.405717849731445
    4. 'idx' → logprob: -8.655717849731445
    5. ' ix' → logprob: -9.530717849731445
    6. '(step' → logprob: -9.655717849731445
    7. '	step' → logprob: -11.405717849731445
    8. ' idx' → logprob: -11.530717849731445
    9. 'z' → logprob: -12.155717849731445
    10. ' (' → logprob: -12.280717849731445

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.257342129945755
    2. 'Answer' → logprob: -2.3823421001434326
    3. ' Answer' → logprob: -3.3823421001434326
    4. 'if' → logprob: -3.7573421001434326
    5. '+' → logprob: -3.8823421001434326
    6. ' ' → logprob: -4.257342338562012
    7. ')' → logprob: -4.632342338562012
    8. '<|end|>' → logprob: -4.632342338562012
    9. '
' → logprob: -4.757342338562012
    10. ' +' → logprob: -6.007342338562012

Token 113: ' store' (ID: 4897)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44468456506729126
    2. 'if' → logprob: -1.4446845054626465
    3. 'Answer' → logprob: -2.5696845054626465
    4. ' Answer' → logprob: -4.9446845054626465
    5. ' v' → logprob: -5.6946845054626465
    6. ' for' → logprob: -5.6946845054626465
    7. 'magic' → logprob: -5.6946845054626465
    8. 'ix' → logprob: -5.8196845054626465
    9. 'v' → logprob: -5.9446845054626465
    10. ' ix' → logprob: -5.9446845054626465

Token 114: ' some' (ID: 1236)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -2.0286855697631836
    2. ' in' → logprob: -2.1536855697631836
    3. ' v' → logprob: -2.4036855697631836
    4. ' ix' → logprob: -2.4036855697631836
    5. '<|end|>' → logprob: -2.5286855697631836
    6. 'spot' → logprob: -2.6536855697631836
    7. ' spot' → logprob: -3.1536855697631836
    8. '=' → logprob: -3.1536855697631836
    9. ' =' → logprob: -3.1536855697631836
    10. 'magic' → logprob: -3.2786855697631836

Token 115: ' temp' (ID: 5484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' in' (ID: 306)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.252990484237671
    2. ' =' → logprob: -1.877990484237671
    3. ' value' → logprob: -1.877990484237671
    4. 'values' → logprob: -2.377990484237671
    5. ' values' → logprob: -2.502990484237671
    6. '=' → logprob: -2.627990484237671
    7. '<|end|>' → logprob: -3.627990484237671
    8. 'val' → logprob: -4.62799072265625
    9. ' variable' → logprob: -4.75299072265625
    10. '_value' → logprob: -4.75299072265625

Token 117: ' a' (ID: 261)
  Prédit: 'magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'magic' → logprob: -0.2547180950641632
    2. ' magic' → logprob: -1.5047180652618408
    3. 'multi' → logprob: -7.12971830368042
    4. 'spot' → logprob: -8.129717826843262
    5. ' spot' → logprob: -8.254717826843262
    6. 'ix' → logprob: -8.254717826843262
    7. ' multi' → logprob: -8.379717826843262
    8. ' ix' → logprob: -9.004717826843262
    9. 'mag' → logprob: -9.004717826843262
    10. ' a' → logprob: -9.504717826843262

Token 118: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.8790180683135986
    2. 'variable' → logprob: -1.6290180683135986
    3. ' variable' → logprob: -2.2540180683135986
    4. 'dictionary' → logprob: -3.1290180683135986
    5. 'magic' → logprob: -3.2540180683135986
    6. ' dictionary' → logprob: -3.6290180683135986
    7. 'rray' → logprob: -3.7540180683135986
    8. 'multi' → logprob: -3.8790180683135986
    9. 'ictionary' → logprob: -3.8790180683135986
    10. 'mp' → logprob: -4.7540178298950195

Token 119: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3267054259777069
    2. '   ' → logprob: -2.5767054557800293
    3. 'magic' → logprob: -2.5767054557800293
    4. '<|end|>' → logprob: -2.7017054557800293
    5. ' magic' → logprob: -4.451705455780029
    6. ')' → logprob: -4.576705455780029
    7. ' if' → logprob: -5.076705455780029
    8. ',' → logprob: -5.201705455780029
    9. '    ' → logprob: -5.451705455780029
    10. '        ' → logprob: -5.826705455780029

Token 120: ' zero' (ID: 12421)
  Prédit: ' magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' magic' → logprob: -1.0628265142440796
    2. 'magic' → logprob: -1.1878265142440796
    3. ' spot' → logprob: -2.187826633453369
    4. 'spot' → logprob: -2.312826633453369
    5. ' step' → logprob: -3.687826633453369
    6. ' the' → logprob: -3.812826633453369
    7. 'step' → logprob: -4.687826633453369
    8. ' v' → logprob: -4.812826633453369
    9. 'the' → logprob: -5.187826633453369
    10. 'v' → logprob: -5.187826633453369

Token 121: ' reason' (ID: 5207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' magic' (ID: 19745)
  Prédit: ' magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magic' → logprob: -0.4475032687187195
    2. 'magic' (adapté à ' magic') → logprob: -1.0725033283233643
    3. ' if' → logprob: -5.072503089904785
    4. '       ' → logprob: -5.572503089904785
    5. ' key' → logprob: -6.572503089904785
    6. '   ' → logprob: -7.072503089904785
    7. 'if' → logprob: -7.322503089904785
    8. 'm' → logprob: -7.572503089904785
    9. ' for' → logprob: -7.697503089904785
    10. '    ' → logprob: -8.010003089904785

Token 125: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6705507636070251
    2. '[v' → logprob: -1.17055082321167
    3. '[(' → logprob: -1.79555082321167
    4. '.setdefault' → logprob: -5.04555082321167
    5. '[f' → logprob: -6.67055082321167
    6. '[z' → logprob: -6.79555082321167
    7. '[P' → logprob: -7.04555082321167
    8. '[str' → logprob: -7.92055082321167
    9. '[temp' → logprob: -8.545550346374512
    10. '[val' → logprob: -8.545550346374512

Token 126: 'idx' (ID: 13196)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -1.0019601583480835
    2. 'ix' → logprob: -1.1269601583480835
    3. 'idx' → logprob: -1.3769601583480835
    4. 'step' → logprob: -4.126960277557373
    5. 'P' → logprob: -4.626960277557373
    6. 'v' → logprob: -4.751960277557373
    7. 'z' → logprob: -5.001960277557373
    8. ' idx' → logprob: -5.876960277557373
    9. ' ix' → logprob: -5.876960277557373
    10. ' spot' → logprob: -6.126960277557373

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10691545903682709
    2. ' ,' → logprob: -2.3569154739379883
    3. '-step' → logprob: -6.356915473937988
    4. ')]' → logprob: -6.981915473937988
    5. ' -' → logprob: -7.356915473937988
    6. ' ' → logprob: -7.606915473937988
    7. ',v' → logprob: -7.981915473937988
    8. '-' → logprob: -8.106915473937988
    9. '+' → logprob: -8.106915473937988
    10. ')' → logprob: -8.231915473937988

Token 128: 'step' (ID: 17509)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.38553422689437866
    2. 'step' → logprob: -1.3855342864990234
    3. ' step' → logprob: -3.5105342864990234
    4. ' spot' → logprob: -3.7605342864990234
    5. 'v' → logprob: -4.385534286499023
    6. ' v' → logprob: -6.135534286499023
    7. 'ix' → logprob: -7.635534286499023
    8. ')' → logprob: -8.135534286499023
    9. ' ' → logprob: -8.573034286499023
    10. ' ix' → logprob: -9.198034286499023

Token 129: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004107732092961669
    2. ')' → logprob: -8.625411033630371
    3. ']' → logprob: -8.875411033630371
    4. ' )' → logprob: -9.500411033630371
    5. ',' → logprob: -11.625411033630371
    6. ')]
' → logprob: -14.250411033630371
    7. ']=' → logprob: -14.375411033630371
    8. ')][' → logprob: -14.375411033630371
    9. ' ]' → logprob: -14.500411033630371
    10. ')=' → logprob: -14.625411033630371

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42871928215026855
    2. ' =' → logprob: -1.0537192821502686
    3. ' ' → logprob: -11.803719520568848
    4. ']' → logprob: -12.803719520568848
    5. ')' → logprob: -13.178719520568848
    6. ',' → logprob: -13.428719520568848
    7. ']=' → logprob: -13.553719520568848
    8. ' =)' → logprob: -14.303719520568848
    9. '=}' → logprob: -14.803719520568848
    10. ')=' → logprob: -14.803719520568848

Token 131: ' Answer' (ID: 30985)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7579628825187683
    2. ' v' → logprob: -1.007962942123413
    3. 'Answer' → logprob: -3.757962942123413
    4. 'multi' → logprob: -3.757962942123413
    5. ' multi' → logprob: -4.132962703704834
    6. 'A' → logprob: -4.132962703704834
    7. 'spot' → logprob: -4.507962703704834
    8. ' A' → logprob: -4.632962703704834
    9. ' spot' → logprob: -4.757962703704834
    10. ' step' → logprob: -4.882962703704834

Token 132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15179358422756195
    2. '<|end|>' → logprob: -2.6517934799194336
    3. '[ix' → logprob: -2.9017934799194336
    4. '[z' → logprob: -5.151793479919434
    5. '[idx' → logprob: -5.526793479919434
    6. '<|end|>' → logprob: -6.526793479919434
    7. 'ix' → logprob: -7.026793479919434
    8. '[s' → logprob: -8.026793479919434
    9. '[(' → logprob: -8.151793479919434
    10. '[token' → logprob: -8.901793479919434

Token 133: 'step' (ID: 17509)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.44949060678482056
    2. '[' → logprob: -1.1994905471801758
    3. '[ix' → logprob: -3.574490547180176
    4. 'ix' → logprob: -3.949490547180176
    5. 'step' → logprob: -5.574490547180176
    6. '0' → logprob: -5.574490547180176
    7. 'idx' → logprob: -6.574490547180176
    8. ' ix' → logprob: -6.949490547180176
    9. '[z' → logprob: -7.199490547180176
    10. ' spot' → logprob: -7.324490547180176

Token 134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10717187821865082
    2. ']+' → logprob: -2.4821717739105225
    3. ' ]' → logprob: -5.232172012329102
    4. ')' → logprob: -5.857172012329102
    5. '-' → logprob: -6.107172012329102
    6. ']*' → logprob: -6.107172012329102
    7. '])' → logprob: -6.357172012329102
    8. '+' → logprob: -6.357172012329102
    9. ')]' → logprob: -7.857172012329102
    10. ' -' → logprob: -7.982172012329102

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41337093710899353
    2. '<|end|>' → logprob: -1.413370966911316
    3. '+' → logprob: -3.6633708477020264
    4. '   ' → logprob: -3.7883708477020264
    5. '        ' → logprob: -4.2883710861206055
    6. '    ' → logprob: -4.6633710861206055
    7. ' if' → logprob: -5.5383710861206055
    8. '
' → logprob: -5.7883710861206055
    9. '<|end|>' → logprob: -5.7883710861206055
    10. ' ' → logprob: -6.2883710861206055

Token 136: ' Answer' (ID: 30985)
  Prédit: 'Answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Answer' (adapté à ' Answer') → logprob: -0.1379280537366867
    2. ' if' → logprob: -3.137928009033203
    3. 'if' → logprob: -3.512928009033203
    4. ' Answer' → logprob: -4.387928009033203
    5. 'multi' → logprob: -4.387928009033203
    6. '+' → logprob: -5.262928009033203
    7. '    ' → logprob: -5.262928009033203
    8. ' multi' → logprob: -5.387928009033203
    9. ' ' → logprob: -5.637928009033203
    10. ' for' → logprob: -5.637928009033203

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.546478935983032e-05
    2. '[m' → logprob: -11.625025749206543
    3. '[ix' → logprob: -12.625025749206543
    4. ' [' → logprob: -13.500025749206543
    5. '[ip' → logprob: -13.625025749206543
    6. '[idx' → logprob: -13.750025749206543
    7. '[s' → logprob: -14.125025749206543
    8. '[Index' → logprob: -14.500025749206543
    9. '[count' → logprob: -14.500025749206543
    10. '[i' → logprob: -14.625025749206543

Token 138: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.09876096248626709
    2. 'spot' → logprob: -2.4737610816955566
    3. ' step' → logprob: -4.723761081695557
    4. ' spot' → logprob: -7.848761081695557
    5. '[' → logprob: -8.473760604858398
    6. 'ix' → logprob: -9.223760604858398
    7. '0' → logprob: -10.223760604858398
    8. '(step' → logprob: -10.473760604858398
    9. 'idx' → logprob: -10.848760604858398
    10. ' ix' → logprob: -11.348760604858398

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4424596428871155
    2. ']+=' → logprob: -1.6924595832824707
    3. ' +=' → logprob: -2.4424595832824707
    4. '+=' → logprob: -2.5674595832824707
    5. ' ]' → logprob: -5.692459583282471
    6. '+' → logprob: -5.817459583282471
    7. ']+' → logprob: -6.442459583282471
    8. ')' → logprob: -8.067460060119629
    9. '=' → logprob: -8.192460060119629
    10. '    ' → logprob: -8.442460060119629

Token 140: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3888593316078186
    2. ' +=' → logprob: -1.1388592720031738
    3. '=' → logprob: -7.013859272003174
    4. ' -=' → logprob: -7.763859272003174
    5. '-=' → logprob: -8.013859748840332
    6. '+' → logprob: -9.013859748840332
    7. ' ' → logprob: -9.763859748840332
    8. ' =' → logprob: -9.888859748840332
    9. ']+=' → logprob: -10.263859748840332
    10. '+=(' → logprob: -11.013859748840332

Token 141: ' multi' (ID: 12151)
  Prédit: ' multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multi' → logprob: -0.5058605074882507
    2. 'multi' → logprob: -1.1308605670928955
    3. '1' → logprob: -3.7558605670928955
    4. ' ix' → logprob: -4.255860328674316
    5. ' ' → logprob: -4.505860328674316
    6. ' v' → logprob: -5.130860328674316
    7. 'v' → logprob: -5.255860328674316
    8. ' (' → logprob: -5.880860328674316
    9. ' P' → logprob: -6.255860328674316
    10. 'ix' → logprob: -6.755860328674316

Token 142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8323654532432556
    2. ' multi' → logprob: -0.9573654532432556
    3. 'multi' → logprob: -2.8323655128479004
    4. '<|end|>' → logprob: -3.3323655128479004
    5. '       ' → logprob: -3.4573655128479004
    6. '    ' → logprob: -3.7073655128479004
    7. '   ' → logprob: -4.3323655128479
    8. '+' → logprob: -5.5823655128479
    9. ' +' → logprob: -5.8323655128479
    10. '        ' → logprob: -6.3323655128479

Token 144: ' Answer' (ID: 30985)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.20180164277553558
    2. ' multi' → logprob: -1.7018016576766968
    3. '       ' → logprob: -9.201801300048828
    4. '   ' → logprob: -9.826801300048828
    5. ' ' → logprob: -10.076801300048828
    6. '+' → logprob: -10.701801300048828
    7. 'multip' → logprob: -10.701801300048828
    8. 'mult' → logprob: -10.951801300048828
    9. ' multip' → logprob: -11.451801300048828
    10. '           ' → logprob: -11.576801300048828

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008198698051273823
    2. '[ix' → logprob: -5.7581987380981445
    3. '[z' → logprob: -5.8831987380981445
    4. '[m' → logprob: -6.2581987380981445
    5. '[idx' → logprob: -9.258198738098145
    6. '[P' → logprob: -9.758198738098145
    7. '[(' → logprob: -10.758198738098145
    8. ' [' → logprob: -10.883198738098145
    9. '[-' → logprob: -11.383198738098145
    10. 'step' → logprob: -11.508198738098145

Token 146: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.20833301544189453
    2. 'spot' → logprob: -1.8333330154418945
    3. 'ix' → logprob: -4.3333330154418945
    4. '0' → logprob: -4.9583330154418945
    5. ' step' → logprob: -5.9583330154418945
    6. 'idx' → logprob: -6.2083330154418945
    7. 'P' → logprob: -7.0833330154418945
    8. ' ix' → logprob: -7.3333330154418945
    9. ' spot' → logprob: -7.4583330154418945
    10. 'z' → logprob: -8.833333015441895

Token 147: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7534176111221313
    2. ' *=' → logprob: -1.7534176111221313
    3. '+=' → logprob: -1.7534176111221313
    4. '*=' → logprob: -2.003417491912842
    5. '=' → logprob: -4.128417491912842
    6. '*' → logprob: -4.503417491912842
    7. ' ' → logprob: -4.753417491912842
    8. ' =' → logprob: -5.503417491912842
    9. ' *' → logprob: -6.753417491912842
    10. ']' → logprob: -6.753417491912842

Token 148: ' %=' (ID: 117035)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3119354546070099
    2. '*=' → logprob: -1.6869354248046875
    3. ' +=' → logprob: -2.8119354248046875
    4. ' *=' → logprob: -4.6869354248046875
    5. '=' → logprob: -4.8119354248046875
    6. '-=' → logprob: -5.8119354248046875
    7. '*' → logprob: -7.1869354248046875
    8. ' -=' → logprob: -7.5619354248046875
    9. '%=' → logprob: -7.9369354248046875
    10. ' ' → logprob: -8.061935424804688

Token 149: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.19637370109558105
    2. '100' → logprob: -1.946373701095581
    3. '10' → logprob: -4.19637393951416
    4. ' P' → logprob: -5.19637393951416
    5. ' ' → logprob: -5.57137393951416
    6. '(' → logprob: -6.07137393951416
    7. '(P' → logprob: -6.32137393951416
    8. '998' → logprob: -6.32137393951416
    9. '1' → logprob: -7.32137393951416
    10. ' (' → logprob: -7.82137393951416

Token 150: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7892115116119385
    2. '<|end|>' → logprob: -1.6642115116119385
    3. '       ' → logprob: -1.9142115116119385
    4. ' 
' → logprob: -1.9142115116119385
    5. '
' → logprob: -3.4142115116119385
    6. '	' → logprob: -5.289211273193359
    7. '   ' → logprob: -5.414211273193359
    8. '    ' → logprob: -5.914211273193359
    9. '+' → logprob: -5.914211273193359
    10. '  
' → logprob: -6.039211273193359

Token 151: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6692681312561035
    2. '<|end|>' → logprob: -1.5442681312561035
    3. '       ' → logprob: -1.6692681312561035
    4. '   ' → logprob: -3.4192681312561035
    5. '+' → logprob: -4.1692681312561035
    6. '    ' → logprob: -4.2942681312561035
    7. ' 
' → logprob: -4.5442681312561035
    8. '  ' → logprob: -6.0442681312561035
    9. ' multi' → logprob: -6.1692681312561035
    10. '<|end|>' → logprob: -6.7942681312561035

Token 152: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' (adapté à ' multi') → logprob: -0.3712286353111267
    2. ' multi' → logprob: -1.3712286949157715
    3. ' ' → logprob: -3.7462286949157715
    4. '       ' → logprob: -3.8712286949157715
    5. '   ' → logprob: -5.7462286949157715
    6. '	m' → logprob: -5.9962286949157715
    7. '	' → logprob: -6.8712286949157715
    8. '+' → logprob: -6.9962286949157715
    9. '    ' → logprob: -7.2462286949157715
    10. ' ' → logprob: -7.4962286949157715

Token 153: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.03601527959108353
    2. ' *=' → logprob: -3.411015272140503
    3. '*' → logprob: -6.161015510559082
    4. '=' → logprob: -8.661015510559082
    5. '+=' → logprob: -10.161015510559082
    6. ' <<=' → logprob: -10.661015510559082
    7. ' *' → logprob: -11.786015510559082
    8. ' ' → logprob: -12.411015510559082
    9. ' =' → logprob: -12.786015510559082
    10. ' ' → logprob: -13.161015510559082

Token 154: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03134817257523537
    2. ' (' → logprob: -4.28134822845459
    3. 'multi' → logprob: -4.28134822845459
    4. '(mult' → logprob: -6.28134822845459
    5. ' multi' → logprob: -7.53134822845459
    6. '(' → logprob: -8.03134822845459
    7. '(P' → logprob: -9.03134822845459
    8. 'P' → logprob: -9.28134822845459
    9. 'm' → logprob: -10.15634822845459
    10. '(M' → logprob: -10.65634822845459

Token 155: 'multi' (ID: 59250)
  Prédit: 'multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.11180169135332108
    2. ' multi' → logprob: -2.6118016242980957
    3. '(m' → logprob: -3.6118016242980957
    4. ' (' → logprob: -5.611801624298096
    5. '(mult' → logprob: -7.986801624298096
    6. 'mul' → logprob: -8.361802101135254
    7. 'multip' → logprob: -8.486802101135254
    8. '(' → logprob: -8.736802101135254
    9. '(v' → logprob: -8.861802101135254
    10. 'mult' → logprob: -9.236802101135254

Token 156: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47512176632881165
    2. ' *' → logprob: -0.9751217365264893
    3. '*v' → logprob: -7.350121974945068
    4. '*(' → logprob: -8.72512149810791
    5. '*p' → logprob: -9.60012149810791
    6. '*z' → logprob: -10.47512149810791
    7. '*q' → logprob: -10.97512149810791
    8. ' ' → logprob: -10.97512149810791
    9. '*i' → logprob: -11.35012149810791
    10. ' ' → logprob: -11.47512149810791

Token 157: 'idx' (ID: 13196)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06656824797391891
    2. 'P' → logprob: -3.19156813621521
    3. '10' → logprob: -5.316568374633789
    4. 'A' → logprob: -5.441568374633789
    5. '(P' → logprob: -5.941568374633789
    6. ' v' → logprob: -5.941568374633789
    7. 'idx' → logprob: -6.816568374633789
    8. 'step' → logprob: -6.816568374633789
    9. '2' → logprob: -6.941568374633789
    10. '-' → logprob: -7.191568374633789

Token 158: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04394981637597084
    2. ')%' → logprob: -3.168949842453003
    3. '+' → logprob: -7.168949604034424
    4. ' )' → logprob: -9.418950080871582
    5. '%' → logprob: -10.168950080871582
    6. ' +' → logprob: -11.543950080871582
    7. '*' → logprob: -11.668950080871582
    8. ')v' → logprob: -12.043950080871582
    9. '*v' → logprob: -12.168950080871582
    10. '+)' → logprob: -12.168950080871582

Token 159: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0002627662615850568
    2. ' P' → logprob: -8.250263214111328
    3. '(P' → logprob: -14.500263214111328
    4. ' ' → logprob: -14.875263214111328
    5. ' ' → logprob: -15.500263214111328
    6. '	P' → logprob: -15.625263214111328
    7. '<|end|>' → logprob: -16.250263214111328
    8. '
' → logprob: -17.375263214111328
    9. '(' → logprob: -17.375263214111328
    10. '`' → logprob: -18.000263214111328

Token 160: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' ix' (ID: 44402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.365874707698822
    2. ' +=' → logprob: -1.2408747673034668
    3. '+' → logprob: -4.115874767303467
    4. '=' → logprob: -7.115874767303467
    5. ' +' → logprob: -10.365874290466309
    6. '<|end|>' → logprob: -10.490874290466309
    7. '-' → logprob: -11.115874290466309
    8. ' =' → logprob: -11.365874290466309
    9. ')' → logprob: -11.365874290466309
    10. ' ' → logprob: -11.365874290466309

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036215700674802065
    2. ' ' → logprob: -5.628621578216553
    3. '0' → logprob: -10.878621101379395
    4. '2' → logprob: -14.566121101379395
    5. '-' → logprob: -14.816121101379395
    6. '+' → logprob: -15.253621101379395
    7. '   ' → logprob: -15.253621101379395
    8. 'system' → logprob: -15.816121101379395
    9. '3' → logprob: -16.06612205505371
    10. '4' → logprob: -16.12862205505371

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033045929740183055
    2. '0' → logprob: -8.375330924987793
    3. ' ' → logprob: -9.500330924987793
    4. '-' → logprob: -11.750330924987793
    5. '2' → logprob: -12.375330924987793
    6. 'P' → logprob: -12.500330924987793
    7. 'v' → logprob: -13.937830924987793
    8. 'system' → logprob: -14.437830924987793
    9. '3' → logprob: -14.500330924987793
    10. '10' → logprob: -14.625330924987793

Token 166: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6670376658439636
    2. '<|end|>' → logprob: -0.7920376658439636
    3. ']' → logprob: -4.292037487030029
    4. '}' → logprob: -5.167037487030029
    5. '```' → logprob: -5.542037487030029
    6. '%' → logprob: -5.792037487030029
    7. '#' → logprob: -6.042037487030029
    8. ' ' → logprob: -6.542037487030029
    9. '0' → logprob: -7.917037487030029
    10. '<|end|>' → logprob: -8.042037963867188

Token 167: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12777414917945862
    2. '<|end|>' → logprob: -2.627774238586426
    3. '
' → logprob: -4.502774238586426
    4. '}' → logprob: -4.877774238586426
    5. '#' → logprob: -4.877774238586426
    6. ']' → logprob: -5.877774238586426
    7. '```' → logprob: -6.127774238586426
    8. ' ' → logprob: -6.252774238586426
    9. '0' → logprob: -6.252774238586426
    10. 'ix' → logprob: -6.377774238586426

Token 168: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025917079765349627
    2. '()' → logprob: -6.252591609954834
    3. '('' → logprob: -8.502592086791992
    4. '("("' → logprob: -8.752592086791992
    5. '(*' → logprob: -8.877592086791992
    6. '((' → logprob: -9.877592086791992
    7. '(len' → logprob: -10.377592086791992
    8. '(sum' → logprob: -10.377592086791992
    9. '(tuple' → logprob: -12.002592086791992
    10. '(
' → logprob: -12.002592086791992

Token 169: 'Answer' (ID: 17045)
  Prédit: 'Answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Answer' → logprob: -6.704273118884885e-07
    2. ' Answer' → logprob: -14.375000953674316
    3. 'Ans' → logprob: -18.125
    4. '[' → logprob: -19.75
    5. 'Answers' → logprob: -19.875
    6. 'answer' → logprob: -20.5
    7. ')' → logprob: -20.75
    8. '(' → logprob: -21.0
    9. 'ANSWER' → logprob: -21.5
    10. '_answer' → logprob: -22.0

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.057743949990254e-05
    2. ',' → logprob: -12.000020980834961
    3. ' )' → logprob: -12.375020980834961
    4. '))' → logprob: -12.500020980834961
    5. ',)' → logprob: -12.625020980834961
    6. ')`' → logprob: -13.625020980834961
    7. ')
' → logprob: -14.250020980834961
    8. '())' → logprob: -15.375020980834961
    9. '()' → logprob: -15.625020980834961
    10. '[' → logprob: -15.750020980834961


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 27.38%
Précision adaptée (1ère position): 29.76%
Précision (top 10): 67.26%
================================================================================
