================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import re

chaine_entree_utilisateur = input()

expression_reguliere_minuscules = '[a-z]'

chaine_modifiee = re.sub(
    expression_reguliere_minuscules,
    'x',
    chaine_entree_utilisateur
)

print(chaine_modifiee)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' re' (ID: 322)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'chaine' (ID: 68916)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.090257167816162
    2. '\n' → logprob: -1.340257167816162
    3. '\b' → logprob: -2.215257167816162
    4. 'import' → logprob: -2.715257167816162
    5. '.' → logprob: -2.715257167816162
    6. '```' → logprob: -3.340257167816162
    7. '\' → logprob: -3.965257167816162
    8. '#' → logprob: -4.090257167816162
    9. '\s' → logprob: -4.840257167816162
    10. '\r' → logprob: -4.965257167816162

Token 4: '_ent' (ID: 66249)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19049882888793945
    2. '.' → logprob: -2.5654988288879395
    3. '_' → logprob: -2.5654988288879395
    4. 's' → logprob: -4.5654988288879395
    5. '=' → logprob: -5.4404988288879395
    6. ' =' → logprob: -5.9404988288879395
    7. 'r' → logprob: -7.3154988288879395
    8. ')' → logprob: -7.6904988288879395
    9. ' ' → logprob: -8.440498352050781
    10. '[:]' → logprob: -8.565498352050781

Token 5: 'ree' (ID: 908)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.027082961052656174
    2. 'ire' → logprob: -4.777082920074463
    3. 't' → logprob: -5.402082920074463
    4. ' =' → logprob: -5.777082920074463
    5. 're' → logprob: -6.027082920074463
    6. 'ite' → logprob: -6.527082920074463
    7. 'ier' → logprob: -6.652082920074463
    8. 'te' → logprob: -6.777082920074463
    9. 'er' → logprob: -6.902082920074463
    10. '=' → logprob: -7.277082920074463

Token 6: '_util' (ID: 46866)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4328985810279846
    2. '[' → logprob: -1.8078985214233398
    3. '=' → logprob: -2.30789852142334
    4. '_' → logprob: -2.68289852142334
    5. 's' → logprob: -5.05789852142334
    6. '.' → logprob: -5.05789852142334
    7. '[:]' → logprob: -5.43289852142334
    8. ')' → logprob: -7.18289852142334
    9. '[]' → logprob: -7.55789852142334
    10. ',' → logprob: -8.68289852142334

Token 7: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.24381083250045776
    2. 'isée' → logprob: -2.3688108921051025
    3. 'ise' → logprob: -3.2438108921051025
    4. 'isable' → logprob: -3.2438108921051025
    5. 'is' → logprob: -3.9938108921051025
    6. 'isateurs' → logprob: -5.118810653686523
    7. 'isee' → logprob: -5.368810653686523
    8. 'es' → logprob: -5.618810653686523
    9. 'isé' → logprob: -5.868810653686523
    10. 'isation' → logprob: -5.993810653686523

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.69166100025177
    2. '=' → logprob: -1.06666100025177
    3. '.' → logprob: -2.1916608810424805
    4. '[' → logprob: -4.1916608810424805
    5. '_' → logprob: -4.1916608810424805
    6. ')' → logprob: -4.9416608810424805
    7. ',' → logprob: -6.5666608810424805
    8. ' ' → logprob: -7.0666608810424805
    9. 's' → logprob: -7.0666608810424805
    10. '(' → logprob: -7.1916608810424805

Token 9: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3322242796421051
    2. ' "' → logprob: -1.7072242498397827
    3. 'input' → logprob: -3.2072243690490723
    4. ''' → logprob: -3.8322243690490723
    5. ' '' → logprob: -4.332224369049072
    6. ' ""' → logprob: -4.957224369049072
    7. ' input' → logprob: -5.082224369049072
    8. '""' → logprob: -5.082224369049072
    9. ' ' → logprob: -5.332224369049072
    10. ' ''' → logprob: -6.957224369049072

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010998018842656165
    2. '('' → logprob: -9.625109672546387
    3. '("("' → logprob: -10.625109672546387
    4. '(
' → logprob: -11.625109672546387
    5. ' (' → logprob: -13.125109672546387
    6. '(

' → logprob: -13.875109672546387
    7. '(`' → logprob: -13.875109672546387
    8. '```' → logprob: -14.125109672546387
    9. '("")' → logprob: -14.250109672546387
    10. '()' → logprob: -14.250109672546387

Token 11: 'expression' (ID: 61248)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36707407236099243
    2. '.' → logprob: -2.3670740127563477
    3. 'result' → logprob: -3.1170740127563477
    4. '=' → logprob: -3.1170740127563477
    5. 're' → logprob: -3.2420740127563477
    6. 'pattern' → logprob: -3.6170740127563477
    7. ' =' → logprob: -4.617074012756348
    8. 'match' → logprob: -4.617074012756348
    9. 'r' → logprob: -4.992074012756348
    10. 'm' → logprob: -5.367074012756348

Token 12: '_reg' (ID: 14091)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03647986054420471
    2. '=' → logprob: -3.786479949951172
    3. '_' → logprob: -4.411479949951172
    4. 's' → logprob: -7.661479949951172
    5. '_re' → logprob: -9.286479949951172
    6. '_match' → logprob: -10.036479949951172
    7. '_regex' → logprob: -10.036479949951172
    8. '.' → logprob: -10.286479949951172
    9. '\s' → logprob: -10.411479949951172
    10. '  ' → logprob: -10.411479949951172

Token 13: 'uli' (ID: 6824)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.039145100861787796
    2. 'exp' → logprob: -3.789144992828369
    3. 'ular' → logprob: -5.289144992828369
    4. 'ulaire' → logprob: -5.664144992828369
    5. ' =' → logprob: -5.914144992828369
    6. '^' → logprob: -7.289144992828369
    7. '_ex' → logprob: -7.414144992828369
    8. 'ulare' → logprob: -7.539144992828369
    9. 'ul' → logprob: -7.664144992828369
    10. '	ex' → logprob: -8.414145469665527

Token 14: 'ere' (ID: 512)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.21065320074558258
    2. 'ere' → logprob: -1.7106531858444214
    3. '`' → logprob: -4.960653305053711
    4. 'er' → logprob: -6.710653305053711
    5. 're' → logprob: -7.460653305053711
    6. '```' → logprob: -9.085653305053711
    7. 'aire' → logprob: -9.210653305053711
    8. '\' → logprob: -10.335653305053711
    9. 'ére' → logprob: -10.460653305053711
    10. 'e' → logprob: -10.710653305053711

Token 15: '_minus' (ID: 101055)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0023123843129724264
    2. '=' → logprob: -6.252312183380127
    3. '_' → logprob: -8.377312660217285
    4. 's' → logprob: -9.377312660217285
    5. ' ' → logprob: -10.752312660217285
    6. '\s' → logprob: -11.377312660217285
    7. '  ' → logprob: -11.502312660217285
    8. '.' → logprob: -12.002312660217285
    9. ' ' → logprob: -12.627312660217285
    10. ')' → logprob: -13.002312660217285

Token 16: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.7177248001098633
    2. 'cule' → logprob: -0.8427248001098633
    3. 'c' → logprob: -2.9677248001098633
    4. '```' → logprob: -3.8427248001098633
    5. 'ule' → logprob: -6.842724800109863
    6. '[' → logprob: -7.217724800109863
    7. '=' → logprob: -7.342724800109863
    8. 'cale' → logprob: -7.342724800109863
    9. 'cula' → logprob: -7.592724800109863
    10. 'culas' → logprob: -7.592724800109863

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013235727092251182
    2. '=' → logprob: -6.876323699951172
    3. ' ' → logprob: -9.251323699951172
    4. '_' → logprob: -9.501323699951172
    5. 's' → logprob: -10.001323699951172
    6. '  ' → logprob: -10.751323699951172
    7. '\s' → logprob: -10.751323699951172
    8. '   ' → logprob: -12.001323699951172
    9. ' ' → logprob: -12.876323699951172
    10. ' ='' → logprob: -13.376323699951172

Token 18: ' '[' (ID: 40660)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23446671664714813
    2. ' r' → logprob: -1.6094666719436646
    3. '"' → logprob: -6.109466552734375
    4. 're' → logprob: -6.234466552734375
    5. ' re' → logprob: -6.359466552734375
    6. '"[' → logprob: -6.609466552734375
    7. ' "[' → logprob: -7.359466552734375
    8. ' ' → logprob: -8.234466552734375
    9. ' "' → logprob: -8.484466552734375
    10. '   ' → logprob: -9.234466552734375

Token 19: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020973898062948138
    2. 'az' → logprob: -9.25020980834961
    3. '[a' → logprob: -10.00020980834961
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.00020980834961
    5. '^' → logprob: -11.75020980834961
    6. ' a' → logprob: -12.50020980834961
    7. 'abc' → logprob: -13.00020980834961
    8. '0' → logprob: -13.50020980834961
    9. ''a' → logprob: -13.75020980834961
    10. 'а' → logprob: -13.75020980834961

Token 20: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.00019102399528492242
    2. '-' → logprob: -9.375190734863281
    3. 'z' → logprob: -9.750190734863281
    4. 'a' → logprob: -10.750190734863281
    5. '-Za' → logprob: -10.875190734863281
    6. '-Z' → logprob: -12.750190734863281
    7. 'b' → logprob: -13.625190734863281
    8. '-я' → logprob: -14.000190734863281
    9. 'za' → logprob: -14.125190734863281
    10. '_z' → logprob: -15.500190734863281

Token 21: ']' (ID: 60)
  Prédit: ']''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.15215852856636047
    2. ']' → logprob: -2.027158498764038
    3. ']+' → logprob: -4.777158737182617
    4. '']' → logprob: -7.402158737182617
    5. ']*' → logprob: -9.027158737182617
    6. 'a' → logprob: -9.402158737182617
    7. ''' → logprob: -9.652158737182617
    8. ' ]' → logprob: -10.527158737182617
    9. ']{' → logprob: -10.902158737182617
    10. '-' → logprob: -11.027158737182617

Token 22: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23750029504299164
    2. ']'' → logprob: -1.9875003099441528
    3. ']' → logprob: -3.2375001907348633
    4. '+'' → logprob: -4.487500190734863
    5. '']' → logprob: -4.612500190734863
    6. '+' → logprob: -4.862500190734863
    7. '*' → logprob: -5.612500190734863
    8. ']+' → logprob: -6.987500190734863
    9. ')'' → logprob: -8.362500190734863
    10. ']*' → logprob: -8.362500190734863

Token 23: 'chaine' (ID: 68916)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45084279775619507
    2. '.findall' → logprob: -2.82584285736084
    3. 'match' → logprob: -2.95084285736084
    4. '.match' → logprob: -3.07584285736084
    5. '+' → logprob: -3.20084285736084
    6. 'import' → logprob: -3.70084285736084
    7. 'matches' → logprob: -3.70084285736084
    8. 're' → logprob: -3.82584285736084
    9. ')' → logprob: -4.07584285736084
    10. 'result' → logprob: -4.20084285736084

Token 24: '_mod' (ID: 15325)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.11811865121126175
    2. '_' → logprob: -2.3681187629699707
    3. '_util' → logprob: -4.493118762969971
    4. '_match' → logprob: -6.118118762969971
    5. '.' → logprob: -6.618118762969971
    6. '._' → logprob: -7.243118762969971
    7. '_re' → logprob: -8.118118286132812
    8. '_.' → logprob: -8.368118286132812
    9. '.ent' → logprob: -8.618118286132812
    10. '_cont' → logprob: -8.868118286132812

Token 25: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.02838379703462124
    2. ' =' → logprob: -4.653383731842041
    3. 'if' → logprob: -4.778383731842041
    4. 'ifiée' → logprob: -5.528383731842041
    5. 'e' → logprob: -6.278383731842041
    6. '=' → logprob: -6.528383731842041
    7. '_' → logprob: -6.653383731842041
    8. 'ife' → logprob: -7.903383731842041
    9. 'ule' → logprob: -8.5283842086792
    10. 'i' → logprob: -8.6533842086792

Token 26: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3048882484436035
    2. 'e' → logprob: -1.6798882484436035
    3. '=' → logprob: -2.8048882484436035
    4. 'es' → logprob: -4.9298882484436035
    5. '_' → logprob: -5.3048882484436035
    6. 's' → logprob: -6.5548882484436035
    7. '.replace' → logprob: -7.1798882484436035
    8. '_e' → logprob: -7.8048882484436035
    9. '   ' → logprob: -9.054887771606445
    10. ' ' → logprob: -9.179887771606445

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02980928122997284
    2. '=' → logprob: -3.5298092365264893
    3. '=re' → logprob: -10.27980899810791
    4. '_' → logprob: -12.27980899810791
    5. '.' → logprob: -12.27980899810791
    6. '.replace' → logprob: -12.77980899810791
    7. 're' → logprob: -13.02980899810791
    8. 's' → logprob: -13.40480899810791
    9. ' ' → logprob: -13.40480899810791
    10. ',' → logprob: -13.52980899810791

Token 28: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6931527853012085
    2. ' re' → logprob: -0.6931527853012085
    3. 'chaine' → logprob: -13.44315242767334
    4. '.re' → logprob: -14.19315242767334
    5. '	re' → logprob: -14.19315242767334
    6. ' ' → logprob: -14.31815242767334
    7. '```' → logprob: -14.56815242767334
    8. '"' → logprob: -14.94315242767334
    9. '(re' → logprob: -16.068153381347656
    10. '_re' → logprob: -16.318153381347656

Token 29: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -0.7938852310180664
    2. '.findall' → logprob: -0.7938852310180664
    3. '.' → logprob: -2.4188852310180664
    4. '.search' → logprob: -5.418885231018066
    5. '.replace' → logprob: -6.793885231018066
    6. '.find' → logprob: -7.543885231018066
    7. '.match' → logprob: -7.668885231018066
    8. '.compile' → logprob: -9.793885231018066
    9. '.gsub' → logprob: -9.918885231018066
    10. '.split' → logprob: -10.168885231018066

Token 30: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33511975407600403
    2. '('' → logprob: -1.3351197242736816
    3. '(r' → logprob: -3.9601197242736816
    4. '("("' → logprob: -6.835119724273682
    5. '(
' → logprob: -7.960119724273682
    6. '(expression' → logprob: -8.08512020111084
    7. '('[' → logprob: -8.21012020111084
    8. '('\' → logprob: -8.83512020111084
    9. '('(' → logprob: -9.08512020111084
    10. '(

' → logprob: -9.96012020111084

Token 31: '   ' (ID: 271)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.015606453642249107
    2. ' expression' → logprob: -4.89060640335083
    3. '(expression' → logprob: -5.01560640335083
    4. '   ' → logprob: -7.14060640335083
    5. ''ex' → logprob: -8.890606880187988
    6. ' ' → logprob: -9.140606880187988
    7. 'r' → logprob: -9.140606880187988
    8. ''' → logprob: -9.640606880187988
    9. ''[' → logprob: -11.015606880187988
    10. '  ' → logprob: -11.265606880187988

Token 32: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' (adapté à ' expression') → logprob: -0.004170764237642288
    2. '   ' → logprob: -6.629170894622803
    3. ' expression' → logprob: -6.629170894622803
    4. ''ex' → logprob: -7.879170894622803
    5. '(expression' → logprob: -7.879170894622803
    6. 'r' → logprob: -8.129170417785645
    7. ''[' → logprob: -9.004170417785645
    8. ''' → logprob: -9.004170417785645
    9. ' ' → logprob: -9.379170417785645
    10. ''r' → logprob: -10.754170417785645

Token 33: '_reg' (ID: 14091)
  Prédit: '_reg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reg' → logprob: -0.00031890018726699054
    2. '_' → logprob: -8.62531852722168
    3. '_regular' → logprob: -9.75031852722168
    4. '_r' → logprob: -10.00031852722168
    5. 'r' → logprob: -10.87531852722168
    6. '_regex' → logprob: -12.37531852722168
    7. '_Reg' → logprob: -13.50031852722168
    8. ')' → logprob: -13.75031852722168
    9. '```' → logprob: -14.00031852722168
    10. '[_' → logprob: -14.12531852722168

Token 34: 'uli' (ID: 6824)
  Prédit: 'uli'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uli' → logprob: -0.8228319883346558
    2. 'ulaire' → logprob: -1.1978319883346558
    3. 'iere' → logprob: -2.1978321075439453
    4. 'ul' → logprob: -2.3228321075439453
    5. 'li' → logprob: -4.322832107543945
    6. 'ulier' → logprob: -5.072832107543945
    7. 'ulia' → logprob: -5.197832107543945
    8. 'ex' → logprob: -5.197832107543945
    9. 'aire' → logprob: -5.197832107543945
    10. 'ulare' → logprob: -5.322832107543945

Token 35: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -5.836499985889532e-05
    2. 'eres' → logprob: -9.8750581741333
    3. 'ère' → logprob: -13.0000581741333
    4. '`' → logprob: -13.2500581741333
    5. '{' → logprob: -14.7500581741333
    6. '_re' → logprob: -14.8750581741333
    7. '%' → logprob: -15.3750581741333
    8. '[' → logprob: -15.3750581741333
    9. 'ERE' → logprob: -15.6250581741333
    10. 'e' → logprob: -15.7500581741333

Token 36: '_minus' (ID: 101055)
  Prédit: '_minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_minus' → logprob: -0.32996082305908203
    2. ',' → logprob: -1.454960823059082
    3. ' ,' → logprob: -4.329960823059082
    4. '   ' → logprob: -4.704960823059082
    5. '_,' → logprob: -5.454960823059082
    6. ','' → logprob: -5.954960823059082
    7. '',' → logprob: -5.954960823059082
    8. '_plus' → logprob: -6.454960823059082
    9. ')' → logprob: -6.579960823059082
    10. 'minus' → logprob: -6.704960823059082

Token 37: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.001434993464499712
    2. 'culas' → logprob: -8.001435279846191
    3. 'cule' → logprob: -8.251435279846191
    4. 'c' → logprob: -8.376435279846191
    5. 'coles' → logprob: -9.001435279846191
    6. 'ces' → logprob: -9.001435279846191
    7. 'cles' → logprob: -9.126435279846191
    8. 'ules' → logprob: -10.126435279846191
    9. 'cu' → logprob: -10.126435279846191
    10. 'ques' → logprob: -10.376435279846191

Token 38: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012751155300065875
    2. '   ' → logprob: -7.126275062561035
    3. '',' → logprob: -8.751275062561035
    4. ' ,' → logprob: -9.126275062561035
    5. ''',' → logprob: -9.376275062561035
    6. ','' → logprob: -10.251275062561035
    7. ')' → logprob: -10.251275062561035
    8. ',''' → logprob: -11.001275062561035
    9. ',
' → logprob: -11.626275062561035
    10. ',"' → logprob: -12.876275062561035

Token 39: '   ' (ID: 271)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.48652347922325134
    2. '''' → logprob: -1.3615235090255737
    3. ''' → logprob: -2.861523389816284
    4. ' ''' → logprob: -3.736523389816284
    5. ' '*'' → logprob: -4.736523628234863
    6. '   ' → logprob: -4.861523628234863
    7. ''A' → logprob: -5.361523628234863
    8. ' '' → logprob: -5.486523628234863
    9. ''-' → logprob: -5.986523628234863
    10. '"' → logprob: -5.986523628234863

Token 40: ' '' (ID: 461)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.48551249504089355
    2. '''' → logprob: -1.4855124950408936
    3. ''' (adapté à ' '') → logprob: -2.3605124950408936
    4. ''A' → logprob: -3.7355124950408936
    5. ''-' → logprob: -4.985512733459473
    6. ''M' → logprob: -5.735512733459473
    7. '""' → logprob: -5.735512733459473
    8. 'lambda' → logprob: -5.860512733459473
    9. ''I' → logprob: -5.860512733459473
    10. '"' → logprob: -5.985512733459473

Token 41: 'x' (ID: 87)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.8653308749198914
    2. '''' → logprob: -1.2403309345245361
    3. ''' → logprob: -1.7403309345245361
    4. ''-' → logprob: -3.240330934524536
    5. ''A' → logprob: -3.740330934524536
    6. '*' → logprob: -5.115330696105957
    7. 'A' → logprob: -5.115330696105957
    8. ''M' → logprob: -5.240330696105957
    9. 'X' → logprob: -5.240330696105957
    10. ''.' → logprob: -5.865330696105957

Token 42: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1245146244764328
    2. ''' → logprob: -2.374514579772949
    3. '',
' → logprob: -3.874514579772949
    4. 'a' → logprob: -6.749514579772949
    5. 'e' → logprob: -7.374514579772949
    6. ')',' → logprob: -7.999514579772949
    7. '','' → logprob: -8.24951457977295
    8. '')' → logprob: -8.99951457977295
    9. 'x' → logprob: -8.99951457977295
    10. 'A' → logprob: -9.74951457977295

Token 43: '   ' (ID: 271)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.007655257824808359
    2. ' chaine' → logprob: -4.882655143737793
    3. '   ' → logprob: -10.257655143737793
    4. 'cha' → logprob: -12.007655143737793
    5. ' chaîne' → logprob: -12.257655143737793
    6. 'chain' → logprob: -13.882655143737793
    7. ' ' → logprob: -13.882655143737793
    8. '  ' → logprob: -15.132655143737793
    9. '```' → logprob: -15.132655143737793
    10. ')' → logprob: -15.382655143737793

Token 44: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' (adapté à ' chaine') → logprob: -0.00034774013329297304
    2. ' chaine' → logprob: -8.000348091125488
    3. '   ' → logprob: -11.625348091125488
    4. 'cha' → logprob: -13.125348091125488
    5. ' ' → logprob: -14.375348091125488
    6. ' chaîne' → logprob: -15.125348091125488
    7. '  ' → logprob: -15.625348091125488
    8. '```' → logprob: -16.375347137451172
    9. 'chain' → logprob: -16.875347137451172
    10. '    ' → logprob: -16.875347137451172

Token 45: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -9.77022064034827e-05
    2. 'ent' → logprob: -9.250097274780273
    3. '_util' → logprob: -14.125097274780273
    4. '_' → logprob: -14.875097274780273
    5. '	ent' → logprob: -16.250097274780273
    6. 'e' → logprob: -16.375097274780273
    7. '_ENT' → logprob: -16.500097274780273
    8. ')' → logprob: -16.875097274780273
    9. '_entropy' → logprob: -16.875097274780273
    10. '_mod' → logprob: -17.750097274780273

Token 46: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -3.2617008400848135e-05
    2. 'ete' → logprob: -10.500032424926758
    3. 'ee' → logprob: -13.500032424926758
    4. 'rée' → logprob: -13.875032424926758
    5. 're' → logprob: -14.500032424926758
    6. 'iere' → logprob: -14.875032424926758
    7. 'er' → logprob: -15.125032424926758
    8. 'r' → logprob: -15.375032424926758
    9. 'e' → logprob: -15.500032424926758
    10. 'tee' → logprob: -15.625032424926758

Token 47: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.032085541635751724
    2. 'isateur' → logprob: -3.657085657119751
    3. 'iseur' → logprob: -6.407085418701172
    4. 'eur' → logprob: -6.532085418701172
    5. 'taire' → logprob: -7.157085418701172
    6. '_user' → logprob: -8.032085418701172
    7. 'teur' → logprob: -8.032085418701172
    8. 'util' → logprob: -8.407085418701172
    9. 'isseur' → logprob: -8.782085418701172
    10. 'ateur' → logprob: -8.782085418701172

Token 48: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.0005417120410129428
    2. 'is' → logprob: -7.625541687011719
    3. 'iseur' → logprob: -10.750541687011719
    4. 'isat' → logprob: -11.250541687011719
    5. 'ateur' → logprob: -12.375541687011719
    6. ' utilisateur' → logprob: -12.500541687011719
    7. 's' → logprob: -12.625541687011719
    8. 'isateurs' → logprob: -13.125541687011719
    9. 'isa' → logprob: -13.875541687011719
    10. ' is' → logprob: -14.125541687011719

Token 49: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.625
    4. '   ' → logprob: -18.0
    5. '))' → logprob: -18.25
    6. ')`' → logprob: -18.5
    7. '),' → logprob: -18.75
    8. '')' → logprob: -19.25
    9. '）' → logprob: -19.375
    10. ')

' → logprob: -19.875

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.75
    3. ' )' → logprob: -16.875
    4. ')`' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. '),' → logprob: -19.0
    7. '))' → logprob: -19.125
    8. '   ' → logprob: -19.875
    9. '#' → logprob: -19.875
    10. '）' → logprob: -20.25

Token 51: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030776144936680794
    2. 'print' → logprob: -3.655776262283325
    3. '#' → logprob: -5.655776023864746
    4. '<|end|>' → logprob: -7.780776023864746
    5. '```' → logprob: -8.905776023864746
    6. '.' → logprob: -9.780776023864746
    7. '(' → logprob: -9.905776023864746
    8. '[' → logprob: -10.155776023864746
    9. '#print' → logprob: -10.155776023864746
    10. '')' → logprob: -10.280776023864746

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005183627945370972
    2. '()' → logprob: -7.625518321990967
    3. '(chain' → logprob: -11.000518798828125
    4. '('' → logprob: -12.000518798828125
    5. '(
' → logprob: -12.875518798828125
    6. '("("' → logprob: -13.750518798828125
    7. '(`' → logprob: -14.125518798828125
    8. '(

' → logprob: -14.250518798828125
    9. ' (' → logprob: -14.875518798828125
    10. '((' → logprob: -15.000518798828125

Token 53: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -2.45848218582978e-06
    2. ' chaine' → logprob: -13.25000286102295
    3. 'cha' → logprob: -14.37500286102295
    4. 'chain' → logprob: -17.375001907348633
    5. ')' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. ' chaîne' → logprob: -19.125001907348633
    8. '"' → logprob: -20.000001907348633
    9. 'chai' → logprob: -20.750001907348633
    10. ''' → logprob: -20.750001907348633

Token 54: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0921942703134846e-05
    2. '_modified' → logprob: -11.62501049041748
    3. '_' → logprob: -14.37501049041748
    4. '_mode' → logprob: -14.50001049041748
    5. '_m' → logprob: -15.25001049041748
    6. '_)' → logprob: -15.75001049041748
    7. ')' → logprob: -16.000011444091797
    8. '_modifier' → logprob: -16.250011444091797
    9. ')_' → logprob: -17.000011444091797
    10. 'mod' → logprob: -17.125011444091797

Token 55: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.4478018879890442
    2. 'od' → logprob: -1.1978018283843994
    3. 'ife' → logprob: -3.8228018283843994
    4. 'ifiée' → logprob: -5.4478020668029785
    5. 'af' → logprob: -5.8228020668029785
    6. 'f' → logprob: -5.8228020668029785
    7. 'ie' → logprob: -6.0728020668029785
    8. 'idee' → logprob: -6.0728020668029785
    9. 'ofie' → logprob: -6.3228020668029785
    10. 'of' → logprob: -6.5728020668029785

Token 56: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.659005157416686e-05
    2. 'ee' → logprob: -9.750066757202148
    3. 'ée' → logprob: -12.500066757202148
    4. '_e' → logprob: -13.000066757202148
    5. 'ed' → logprob: -14.250066757202148
    6. 'de' → logprob: -14.875066757202148
    7. '_' → logprob: -15.000066757202148
    8. ' e' → logprob: -15.625066757202148
    9. 'е' → logprob: -15.625066757202148
    10. 'ede' → logprob: -15.875066757202148

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.125001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '')' → logprob: -16.000001907348633
    5. '`)' → logprob: -16.375001907348633
    6. ')`' → logprob: -16.500001907348633
    7. ')
' → logprob: -18.250001907348633
    8. '）' → logprob: -19.375001907348633
    9. '")' → logprob: -19.375001907348633
    10. '})' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 43.64%
Précision adaptée (1ère position): 47.27%
Précision (top 10): 70.91%
================================================================================
