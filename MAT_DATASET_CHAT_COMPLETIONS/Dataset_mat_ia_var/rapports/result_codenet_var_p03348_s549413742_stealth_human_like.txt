================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def f(n, dm, g, ind, a, b):
    # ok bon, une fonction franchement pas très claire mais ça marche ?
    q = deque([a, b])
    d = [-1] * n
    d[a] = d[b] = 0
    while q:  # bfs de base ?
        p = q.popleft()
        for node in g[p]:
            if d[node] == -1:
                d[node] = d[p] + 1
                q.append(node)
    l = [0 for _ in range(dm // 2 + 1)]
    if a == b: # hmm, le cas où on prend deux fois le même sommet ?
        l[0] = ind[a]
    # j'ai mis un max là, mais j'aurais pu faire différemment
    for i in range(n):
        try:
            l[d[i]] = max(l[d[i]], ind[i]-1)
        except Exception:
            # bon normalement d[i] devrait jamais être out of range...
            pass
    res = 1
    for x in l[:-1]:
        res *= x
    return res

n = int(input())  # nombre de noeuds ?
g = [[] for _ in range(n)]
ind = [0] * n
for i in range(n - 1):
    a, b = map(int, input().split())
    g[a-1].append(b-1)
    ind[a-1] += 1
    g[b-1].append(a-1)
    ind[b-1] += 1  # arf, les indices décalés d'1...

s = [0]
d = [-1]*n
d[0] = 0
while s:
    p = s.pop()
    for node in g[p]:
        if d[node] == -1:
            d[node] = d[p] + 1
            s.append(node)
m = max(d)
idx = d.index(m)
s = [idx]
d1 = [-1]*n
d1[idx] = 0
while s:
    p = s.pop()
    for node in g[p]:
        if d1[node] == -1:
            d1[node] = d1[p] + 1
            s.append(node)
diam = max(d1)
idx = d1.index(diam)
s = [idx]
d2 = [-1]*n
d2[idx] = 0
while s:
    p = s.pop()
    for node in g[p]:
        if d2[node] == -1:
            d2[node] = d2[p] + 1
            s.append(node)
if diam % 2 == 1:  # diamètre impair ? pourquoi pas
    c = []
    t = diam // 2 + 1
    print(t, end=' ')
    for i in range(n):
        if d1[i] <= t and d2[i] <= t:
            c.append(i)
    # Oups, si c n'a pas deux éléments ça va planter...
    ans = f(n, diam, g, ind, c[0], c[1]) * 2
    print(ans)
else:
    t = diam // 2
    print(t+1, end=' ')
    for i in range(n):
        if d1[i] <= t and d2[i] <= t:
            c = i  # bon, on prend le dernier vu, tant pis ?
    ans = f(n, diam, g, ind, c, c)
    for node in g[c]:
        val = f(n, diam, g, ind, c, node) * 2
        if val < ans:
            ans = val  # minimisation à l'arrache
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014323927462100983
    2. '.' → logprob: -5.014323711395264
    3. '\(' → logprob: -5.764323711395264
    4. '```' → logprob: -6.889323711395264
    5. '\' → logprob: -7.014323711395264
    6. '\n' → logprob: -7.264323711395264
    7. '[' → logprob: -8.014324188232422
    8. '(
' → logprob: -8.264324188232422
    9. 'import' → logprob: -8.389324188232422
    10. 'newline' → logprob: -8.389324188232422

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019750266801565886
    2. '\n' → logprob: -7.501975059509277
    3. '\' → logprob: -8.126975059509277
    4. '[' → logprob: -8.376975059509277
    5. '\(' → logprob: -8.626975059509277
    6. 'a' → logprob: -9.001975059509277
    7. 'newline' → logprob: -9.251975059509277
    8. '(
' → logprob: -9.376975059509277
    9. 'import' → logprob: -9.501975059509277
    10. ',' → logprob: -9.626975059509277

Token 6: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008024984039366245
    2. ' bfs' → logprob: -5.633025169372559
    3. ' deque' → logprob: -6.383025169372559
    4. ' ' → logprob: -7.508025169372559
    5. ' queue' → logprob: -8.258025169372559
    6. ' de' → logprob: -8.383025169372559
    7. ' space' → logprob: -8.758025169372559
    8. ' a' → logprob: -8.883025169372559
    9. ' breadth' → logprob: -9.008025169372559
    10. ' create' → logprob: -9.008025169372559

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19836866855621338
    2. 'u' → logprob: -1.9483686685562134
    3. '(u' → logprob: -3.698368549346924
    4. '_' → logprob: -4.698368549346924
    5. 'unction' → logprob: -7.198368549346924
    6. '('' → logprob: -8.073369026184082
    7. '(a' → logprob: -8.198369026184082
    8. 'n' → logprob: -8.448369026184082
    9. 'unc' → logprob: -8.573369026184082
    10. '(n' → logprob: -8.698369026184082

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2818649709224701
    2. ')' → logprob: -1.4068650007247925
    3. ',' → logprob: -7.781865119934082
    4. ':' → logprob: -8.406865119934082
    5. '):
' → logprob: -11.156865119934082
    6. '=' → logprob: -11.406865119934082
    7. ')>' → logprob: -12.156865119934082
    8. ' ):' → logprob: -12.281865119934082
    9. 'a' → logprob: -12.406865119934082
    10. ')n' → logprob: -12.781865119934082

Token 9: ' dm' (ID: 55454)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5738672614097595
    2. ' m' → logprob: -1.8238673210144043
    3. 'k' → logprob: -2.4488673210144043
    4. ' q' → logprob: -2.8238673210144043
    5. ' queue' → logprob: -3.6988673210144043
    6. 'm' → logprob: -3.9488673210144043
    7. ' lst' → logprob: -4.323867321014404
    8. ' d' → logprob: -4.448867321014404
    9. 'q' → logprob: -4.573867321014404
    10. ' deque' → logprob: -4.698867321014404

Token 10: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7068585157394409
    2. '):' → logprob: -1.206858515739441
    3. 'e' → logprob: -2.4568586349487305
    4. 'ax' → logprob: -2.5818586349487305
    5. ')' → logprob: -3.9568586349487305
    6. 's' → logprob: -5.2068586349487305
    7. 'q' → logprob: -5.4568586349487305
    8. ',' → logprob: -5.4568586349487305
    9. '=' → logprob: -5.5818586349487305
    10. 'ean' → logprob: -6.4568586349487305

Token 11: ' g' (ID: 329)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.9559524059295654
    2. ' d' → logprob: -2.2059524059295654
    3. ' q' → logprob: -2.8309524059295654
    4. ' s' → logprob: -3.0809524059295654
    5. ' dq' → logprob: -3.0809524059295654
    6. ' dp' → logprob: -3.3309524059295654
    7. ' p' → logprob: -3.3934524059295654
    8. ' visited' → logprob: -3.6434524059295654
    9. ' lst' → logprob: -3.7059524059295654
    10. ' l' → logprob: -3.8309524059295654

Token 12: ',' (ID: 11)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.7763357758522034
    2. '):' → logprob: -0.7763357758522034
    3. ')' → logprob: -2.7763357162475586
    4. 'a' → logprob: -5.026335716247559
    5. 'r' → logprob: -5.401335716247559
    6. ',' → logprob: -5.776335716247559
    7. 'u' → logprob: -7.401335716247559
    8. '[' → logprob: -8.026335716247559
    9. 'raphics' → logprob: -8.151335716247559
    10. 't' → logprob: -8.276335716247559

Token 13: ' ind' (ID: 1383)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.4599800109863281
    2. ' p' → logprob: -2.459980010986328
    3. ' d' → logprob: -2.459980010986328
    4. ' start' → logprob: -2.709980010986328
    5. ' k' → logprob: -3.334980010986328
    6. ' visited' → logprob: -3.522480010986328
    7. ' q' → logprob: -3.772480010986328
    8. 's' → logprob: -3.834980010986328
    9. ' dm' → logprob: -3.897480010986328
    10. ' dist' → logprob: -3.897480010986328

Token 14: ',' (ID: 11)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011721037328243256
    2. '):' → logprob: -4.511721134185791
    3. ')' → logprob: -7.511721134185791
    4. '_ex' → logprob: -9.636720657348633
    5. 'e' → logprob: -10.636720657348633
    6. 'ices' → logprob: -11.761720657348633
    7. '[' → logprob: -11.886720657348633
    8. ']:' → logprob: -12.011720657348633
    9. '[]):' → logprob: -12.386720657348633
    10. ':' → logprob: -13.011720657348633

Token 15: ' a' (ID: 261)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -2.520364999771118
    2. ' visited' → logprob: -2.645364999771118
    3. ' path' → logprob: -2.645364999771118
    4. ' d' → logprob: -2.957864999771118
    5. ' p' → logprob: -3.082864999771118
    6. ' dp' → logprob: -3.082864999771118
    7. 'q' → logprob: -3.270364999771118
    8. ' k' → logprob: -3.520364999771118
    9. ' val' → logprob: -3.645364999771118
    10. ' v' → logprob: -3.770364999771118

Token 16: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008949936367571354
    2. ')' → logprob: -5.1339497566223145
    3. ',' → logprob: -6.8839497566223145
    4. '[' → logprob: -7.3839497566223145
    5. '[]):' → logprob: -8.008950233459473
    6. 'ex' → logprob: -8.383950233459473
    7. 'x' → logprob: -8.883950233459473
    8. 'e' → logprob: -9.008950233459473
    9. ' ):' → logprob: -9.008950233459473
    10. 's' → logprob: -9.758950233459473

Token 17: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.1090755462646484
    2. 'b' → logprob: -1.6090755462646484
    3. ' d' → logprob: -3.3590755462646484
    4. ' dp' → logprob: -3.4840755462646484
    5. ' p' → logprob: -3.6090755462646484
    6. 'd' → logprob: -3.6090755462646484
    7. 'q' → logprob: -3.7340755462646484
    8. ' k' → logprob: -3.7340755462646484
    9. ' q' → logprob: -3.8590755462646484
    10. 'k' → logprob: -4.109075546264648

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04955166578292847
    2. ')' → logprob: -3.0495517253875732
    3. ',' → logprob: -7.049551486968994
    4. ':' → logprob: -9.924551963806152
    5. '):
' → logprob: -11.049551963806152
    6. ''):' → logprob: -12.049551963806152
    7. '=' → logprob: -12.049551963806152
    8. '**' → logprob: -12.924551963806152
    9. ' ):' → logprob: -13.174551963806152
    10. ')：' → logprob: -13.424551963806152

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05555021017789841
    2. ':' → logprob: -3.5555500984191895
    3. ' ' → logprob: -4.8055500984191895
    4. '    ' → logprob: -4.9305500984191895
    5. '```' → logprob: -5.6805500984191895
    6. ' :' → logprob: -6.5555500984191895
    7. '[' → logprob: -6.9305500984191895
    8. ' if' → logprob: -7.5555500984191895
    9. ',' → logprob: -7.8055500984191895
    10. '    
' → logprob: -7.9305500984191895

Token 20: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2888684868812561
    2. ' if' → logprob: -1.6638684272766113
    3. 'if' → logprob: -4.788868427276611
    4. 'd' → logprob: -4.913868427276611
    5. ' queue' → logprob: -4.913868427276611
    6. ' dp' → logprob: -4.913868427276611
    7. ' for' → logprob: -5.663868427276611
    8. 'q' → logprob: -5.788868427276611
    9. '    ' → logprob: -5.788868427276611
    10. 'dp' → logprob: -5.913868427276611

Token 21: ' ok' (ID: 4763)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.88233482837677
    2. ' d' → logprob: -2.0073347091674805
    3. ' if' → logprob: -2.3823347091674805
    4. ' queue' → logprob: -2.6323347091674805
    5. 'q' → logprob: -3.1323347091674805
    6. ' stack' → logprob: -3.3823347091674805
    7. 'd' → logprob: -3.5073347091674805
    8. '   ' → logprob: -3.5073347091674805
    9. ' dp' → logprob: -3.5073347091674805
    10. ' ' → logprob: -3.7573347091674805

Token 22: ' bon' (ID: 4846)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2772158980369568
    2. '=' → logprob: -2.6522159576416016
    3. ' =' → logprob: -2.6522159576416016
    4. ')' → logprob: -3.0272159576416016
    5. ' ' → logprob: -4.152215957641602
    6. '):' → logprob: -4.152215957641602
    7. '[' → logprob: -4.652215957641602
    8. '   ' → logprob: -5.402215957641602
    9. ' :' → logprob: -5.902215957641602
    10. ',' → logprob: -6.902215957641602

Token 23: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5597071051597595
    2. 'd' → logprob: -0.9347071051597595
    3. '   ' → logprob: -4.434707164764404
    4. ':' → logprob: -4.934707164764404
    5. '    ' → logprob: -5.559707164764404
    6. ')' → logprob: -5.684707164764404
    7. '  ' → logprob: -6.059707164764404
    8. 'e' → logprob: -6.434707164764404
    9. '       ' → logprob: -6.559707164764404
    10. '      ' → logprob: -6.934707164764404

Token 24: ' une' (ID: 2463)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.2513678073883057
    2. ' q' → logprob: -2.5013678073883057
    3. ' if' → logprob: -3.0013678073883057
    4. 'c' → logprob: -3.1263678073883057
    5. ' for' → logprob: -3.2513678073883057
    6. 'q' → logprob: -3.2513678073883057
    7. ' d' → logprob: -3.2513678073883057
    8. ' return' → logprob: -3.3763678073883057
    9. ' stack' → logprob: -3.5013678073883057
    10. ' n' → logprob: -3.5013678073883057

Token 25: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7646510004997253
    2. 'deque' → logprob: -3.01465106010437
    3. 'chaine' → logprob: -3.51465106010437
    4. 'liste' → logprob: -3.51465106010437
    5. 'fonction' → logprob: -3.51465106010437
    6. 'pile' → logprob: -3.63965106010437
    7. 'queue' → logprob: -3.76465106010437
    8. 'de' → logprob: -3.76465106010437
    9. ' file' → logprob: -4.014650821685791
    10. 'voie' → logprob: -4.077150821685791

Token 26: ' franchement' (ID: 182681)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41429412364959717
    2. ':' → logprob: -2.0392942428588867
    3. ' ' → logprob: -2.1642942428588867
    4. ' :' → logprob: -3.5392942428588867
    5. 'def' → logprob: -3.9142942428588867
    6. '  ' → logprob: -4.789294242858887
    7. ',' → logprob: -4.914294242858887
    8. '    ' → logprob: -4.914294242858887
    9. ')' → logprob: -5.164294242858887
    10. '<|end|>' → logprob: -6.289294242858887

Token 27: ' pas' (ID: 2173)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.5464302897453308
    2. ' simple' → logprob: -2.2964303493499756
    3. 'utile' → logprob: -2.7964303493499756
    4. 'compl' → logprob: -3.0464303493499756
    5. 'pas' → logprob: -3.0464303493499756
    6. 'sym' → logprob: -3.4214303493499756
    7. '   ' → logprob: -4.1714301109313965
    8. 'b' → logprob: -4.2964301109313965
    9. 'bien' → logprob: -4.7964301109313965
    10. 'super' → logprob: -5.1714301109313965

Token 28: ' très' (ID: 9412)
  Prédit: 'terr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terr' → logprob: -1.2735315561294556
    2. 'tr' → logprob: -1.7735315561294556
    3. ' terrible' → logprob: -2.023531436920166
    4. '   ' → logprob: -2.273531436920166
    5. 'mal' → logprob: -2.398531436920166
    6. ' ' → logprob: -2.773531436920166
    7. 'top' → logprob: -3.773531436920166
    8. 'simple' → logprob: -4.273531436920166
    9. ' très' → logprob: -4.523531436920166
    10. 't' → logprob: -4.523531436920166

Token 29: ' claire' (ID: 72397)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.537337064743042
    2. 'clair' → logprob: -1.162337064743042
    3. ' claire' → logprob: -2.537337064743042
    4. 'simple' → logprob: -5.287337303161621
    5. 'utile' → logprob: -5.537337303161621
    6. 'optim' → logprob: -5.662337303161621
    7. 'tr' → logprob: -6.412337303161621
    8. 'lis' → logprob: -7.162337303161621
    9. 'clear' → logprob: -7.537337303161621
    10. '```' → logprob: -7.662337303161621

Token 30: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4646575152873993
    2. ':' → logprob: -1.9646575450897217
    3. ' :' → logprob: -2.3396575450897217
    4. ' ' → logprob: -3.0896575450897217
    5. '    ' → logprob: -3.4646575450897217
    6. ',' → logprob: -3.7146575450897217
    7. ' 
' → logprob: -4.839657306671143
    8. '    
' → logprob: -5.964657306671143
    9. '  ' → logprob: -6.089657306671143
    10. ' ,' → logprob: -6.089657306671143

Token 31: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33524686098098755
    2. ' je' → logprob: -1.4602468013763428
    3. ' on' → logprob: -4.335247039794922
    4. ' voilà' → logprob: -4.960247039794922
    5. ' j' → logprob: -5.335247039794922
    6. '   ' → logprob: -5.335247039794922
    7. '    ' → logprob: -5.960247039794922
    8. ' c' → logprob: -6.210247039794922
    9. ' ' → logprob: -6.335247039794922
    10. '  ' → logprob: -6.460247039794922

Token 32: ' marche' (ID: 58191)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.19093060493469238
    2. ' semble' → logprob: -2.4409306049346924
    3. ' continue' → logprob: -4.565930366516113
    4. ' part' → logprob: -5.065930366516113
    5. ' doit' → logprob: -5.315930366516113
    6. '   ' → logprob: -5.315930366516113
    7. ' devrait' → logprob: -5.440930366516113
    8. ' n' → logprob: -5.440930366516113
    9. ' marche' → logprob: -5.440930366516113
    10. ' fait' → logprob: -5.690930366516113

Token 33: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6694051027297974
    2. ':' → logprob: -0.9194051027297974
    3. '
' → logprob: -3.419404983520508
    4. ' ' → logprob: -4.169404983520508
    5. '\n' → logprob: -4.794404983520508
    6. ' :' → logprob: -5.294404983520508
    7. ' 
' → logprob: -5.294404983520508
    8. ',' → logprob: -5.544404983520508
    9. ':
' → logprob: -5.669404983520508
    10. '    
' → logprob: -5.919404983520508

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49808236956596375
    2. ':' → logprob: -0.9980823993682861
    3. ' :' → logprob: -5.123082160949707
    4. ' ' → logprob: -5.498082160949707
    5. '
' → logprob: -6.123082160949707
    6. ':
' → logprob: -6.248082160949707
    7. '    
' → logprob: -6.373082160949707
    8. '    ' → logprob: -6.373082160949707
    9. '\n' → logprob: -6.748082160949707
    10. '\' → logprob: -6.873082160949707

Token 35: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10077450424432755
    2. '    ' → logprob: -3.4757745265960693
    3. ' ' → logprob: -4.47577428817749
    4. ' 
' → logprob: -4.47577428817749
    5. '
' → logprob: -4.97577428817749
    6. ' if' → logprob: -5.10077428817749
    7. ':' → logprob: -5.10077428817749
    8. '     
' → logprob: -5.10077428817749
    9. '    
' → logprob: -5.35077428817749
    10. ' :' → logprob: -5.60077428817749

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1203191801905632
    2. '=' → logprob: -2.245319128036499
    3. 'ue' → logprob: -4.995319366455078
    4. 'u' → logprob: -7.370319366455078
    5. ' ue' → logprob: -11.495319366455078
    6. ',' → logprob: -11.745319366455078
    7. 'e' → logprob: -11.745319366455078
    8. ' u' → logprob: -11.745319366455078
    9. '.' → logprob: -11.995319366455078
    10. ' ' → logprob: -11.995319366455078

Token 37: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.1269298940896988
    2. 'deque' → logprob: -2.126929998397827
    3. 'Deque' → logprob: -13.626930236816406
    4. ' de' → logprob: -15.376930236816406
    5. 'de' → logprob: -15.626930236816406
    6. '	de' → logprob: -15.751930236816406
    7. ' dequeue' → logprob: -17.501930236816406
    8. '(de' → logprob: -17.751930236816406
    9. ' dq' → logprob: -17.751930236816406
    10. ' ' → logprob: -18.626930236816406

Token 38: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11423412710428238
    2. '(' → logprob: -2.364234209060669
    3. '([' → logprob: -4.36423397064209
    4. '([]' → logprob: -7.36423397064209
    5. '([(' → logprob: -7.73923397064209
    6. '(q' → logprob: -9.61423397064209
    7. '((' → logprob: -11.36423397064209
    8. '(n' → logprob: -11.61423397064209
    9. '()]' → logprob: -11.61423397064209
    10. '([...' → logprob: -11.98923397064209

Token 39: 'a' (ID: 64)
  Prédit: '(ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.9556073546409607
    2. '(' → logprob: -1.2056074142456055
    3. '(n' → logprob: -2.2056074142456055
    4. 'n' → logprob: -2.3306074142456055
    5. 'ind' → logprob: -2.9556074142456055
    6. '0' → logprob: -3.0806074142456055
    7. ' (' → logprob: -5.0806074142456055
    8. '(i' → logprob: -6.9556074142456055
    9. ' ind' → logprob: -7.4556074142456055
    10. ' n' → logprob: -7.5806074142456055

Token 40: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3585453927516937
    2. ',' → logprob: -1.6085454225540161
    3. '[a' → logprob: -3.1085453033447266
    4. '[' → logprob: -3.9835453033447266
    5. ')])' → logprob: -3.9835453033447266
    6. ')' → logprob: -4.733545303344727
    7. ' ])' → logprob: -5.608545303344727
    8. ' ' → logprob: -6.983545303344727
    9. '[b' → logprob: -7.108545303344727
    10. ' +' → logprob: -7.233545303344727

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1635793298482895
    2. ' b' → logprob: -2.038579225540161
    3. 'a' → logprob: -4.66357946395874
    4. '])' → logprob: -5.41357946395874
    5. ' ])' → logprob: -6.28857946395874
    6. '0' → logprob: -6.53857946395874
    7. ' a' → logprob: -6.66357946395874
    8. 'ind' → logprob: -7.41357946395874
    9. ' ind' → logprob: -8.163578987121582
    10. ' ' → logprob: -8.288578987121582

Token 42: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011119971750304103
    2. ')' → logprob: -7.75111198425293
    3. ' ])' → logprob: -7.75111198425293
    4. ')])' → logprob: -8.75111198425293
    5. ']' → logprob: -10.37611198425293
    6. ',' → logprob: -10.62611198425293
    7. '])
' → logprob: -12.00111198425293
    8. '])]' → logprob: -12.00111198425293
    9. ']])' → logprob: -12.12611198425293
    10. ')]' → logprob: -12.37611198425293

Token 43: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890532165765762
    2. '
' → logprob: -2.9539053440093994
    3. ')
' → logprob: -4.45390510559082
    4. ' ' → logprob: -5.70390510559082
    5. ' 
' → logprob: -5.82890510559082
    6. '   ' → logprob: -6.57890510559082
    7. ' )' → logprob: -7.07890510559082
    8. ':' → logprob: -7.20390510559082
    9. '\n' → logprob: -7.82890510559082
    10. '  
' → logprob: -7.82890510559082

Token 44: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.666879415512085
    2. '
' → logprob: -0.791879415512085
    3. ')
' → logprob: -4.166879653930664
    4. ' ' → logprob: -5.291879653930664
    5. ' 
' → logprob: -5.416879653930664
    6. '.' → logprob: -6.166879653930664
    7. '\n' → logprob: -6.791879653930664
    8. '  
' → logprob: -7.041879653930664
    9. ',' → logprob: -7.416879653930664
    10. ':' → logprob: -7.416879653930664

Token 45: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003314129135105759
    2. 'ist' → logprob: -8.62533187866211
    3. '[m' → logprob: -10.00033187866211
    4. 'istance' → logprob: -10.87533187866211
    5. ' =' → logprob: -11.00033187866211
    6. 'e' → logprob: -11.62533187866211
    7. '[' → logprob: -11.75033187866211
    8. 'ms' → logprob: -11.87533187866211
    9. 'M' → logprob: -12.00033187866211
    10. 'м' → logprob: -12.25033187866211

Token 46: ' [-' (ID: 20191)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.455375999212265
    2. '[' → logprob: -1.4553760290145874
    3. '{}' → logprob: -3.080375909805298
    4. ' [' → logprob: -3.330375909805298
    5. ' {' → logprob: -3.705375909805298
    6. '[-' → logprob: -3.955375909805298
    7. '{-' → logprob: -6.455376148223877
    8. '[ind' → logprob: -6.580376148223877
    9. ' [-' → logprob: -6.705376148223877
    10. '[n' → logprob: -6.830376148223877

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017588881019037217
    2. 'float' → logprob: -9.625175476074219
    3. '10' → logprob: -9.750175476074219
    4. '100' → logprob: -11.000175476074219
    5. 'int' → logprob: -11.875175476074219
    6. '999' → logprob: -11.875175476074219
    7. '2' → logprob: -12.250175476074219
    8. '-' → logprob: -12.500175476074219
    9. 'inf' → logprob: -12.875175476074219
    10. ' ' → logprob: -12.875175476074219

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01692119427025318
    2. ']*' → logprob: -4.266921043395996
    3. ' for' → logprob: -6.516921043395996
    4. ' ]' → logprob: -6.766921043395996
    5. ']*(' → logprob: -9.266921043395996
    6. 'for' → logprob: -11.641921043395996
    7. ']+' → logprob: -11.766921043395996
    8. ',' → logprob: -12.266921043395996
    9. ')' → logprob: -12.766921043395996
    10. '']' → logprob: -13.391921043395996

Token 49: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23937858641147614
    2. ' *' → logprob: -1.614378571510315
    3. '*(' → logprob: -4.739378452301025
    4. '*n' → logprob: -5.364378452301025
    5. '+' → logprob: -8.489378929138184
    6. 'n' → logprob: -10.489378929138184
    7. ']' → logprob: -10.739378929138184
    8. '(n' → logprob: -10.739378929138184
    9. '0' → logprob: -10.739378929138184
    10. ' *(' → logprob: -11.114378929138184

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017002997919917107
    2. '(n' → logprob: -4.142003059387207
    3. '(' → logprob: -7.767003059387207
    4. ' n' → logprob: -8.517003059387207
    5. 'len' → logprob: -9.142003059387207
    6. '(len' → logprob: -9.517003059387207
    7. ' (' → logprob: -9.767003059387207
    8. 'dm' → logprob: -10.392003059387207
    9. 'g' → logprob: -10.892003059387207
    10. '   ' → logprob: -11.267003059387207

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.27041953802108765
    2. '
' → logprob: -1.6454195976257324
    3. '<|end|>' → logprob: -3.8954195976257324
    4. 'q' → logprob: -5.020419597625732
    5. ' 
' → logprob: -5.395419597625732
    6. '  
' → logprob: -5.395419597625732
    7. ' ' → logprob: -6.895419597625732
    8. '[' → logprob: -7.145419597625732
    9. '<|end|>' → logprob: -7.145419597625732
    10. ' d' → logprob: -7.270419597625732

Token 54: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.024313194677233696
    2. '[' → logprob: -4.149312973022461
    3. '[q' → logprob: -5.024312973022461
    4. '[ind' → logprob: -7.149312973022461
    5. '[b' → logprob: -7.524312973022461
    6. '[d' → logprob: -8.274312973022461
    7. '```' → logprob: -10.399312973022461
    8. '[c' → logprob: -11.274312973022461
    9. 'q' → logprob: -12.024312973022461
    10. ' ' → logprob: -12.399312973022461

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015908108616713434
    2. ' ]' → logprob: -9.00015926361084
    3. ']=' → logprob: -10.25015926361084
    4. '`]' → logprob: -16.750158309936523
    5. ' ' → logprob: -16.875158309936523
    6. '   ' → logprob: -17.000158309936523
    7. '],' → logprob: -17.000158309936523
    8. ']==' → logprob: -17.250158309936523
    9. ']+=' → logprob: -17.375158309936523
    10. ',' → logprob: -17.375158309936523

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22543933987617493
    2. '=' → logprob: -1.6004393100738525
    3. ' ' → logprob: -11.225439071655273
    4. ',' → logprob: -11.475439071655273
    5. ']' → logprob: -14.100439071655273
    6. '<|end|>' → logprob: -14.100439071655273
    7. '[' → logprob: -14.600439071655273
    8. ')' → logprob: -15.850439071655273
    9. ' =
' → logprob: -16.100439071655273
    10. ']=' → logprob: -16.350439071655273

Token 57: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043353010551072657
    2. ' ' → logprob: -7.750433444976807
    3. '1' → logprob: -13.250433921813965
    4. '2' → logprob: -14.625433921813965
    5. 'd' → logprob: -16.37543296813965
    6. '  ' → logprob: -16.37543296813965
    7. '۰' → logprob: -16.68793296813965
    8. '   ' → logprob: -16.75043296813965
    9. 'dm' → logprob: -17.00043296813965
    10. ' ' → logprob: -17.18793296813965

Token 58: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.3835347592830658
    2. 'b' → logprob: -1.2585347890853882
    3. '[' → logprob: -3.7585346698760986
    4. '[a' → logprob: -4.758534908294678
    5. ' b' → logprob: -7.008534908294678
    6. ' ' → logprob: -7.883534908294678
    7. '   ' → logprob: -8.75853443145752
    8. '0' → logprob: -8.75853443145752
    9. 'a' → logprob: -9.13353443145752
    10. ',' → logprob: -9.38353443145752

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011987409379798919
    2. ']=' → logprob: -9.250120162963867
    3. ' ]' → logprob: -10.875120162963867
    4. '0' → logprob: -13.250120162963867
    5. '=' → logprob: -14.375120162963867
    6. '<|end|>' → logprob: -14.500120162963867
    7. '[' → logprob: -14.625120162963867
    8. ']
' → logprob: -15.375120162963867
    9. '<|end|>' → logprob: -15.875120162963867
    10. ' ' → logprob: -15.875120162963867

Token 60: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8628914952278137
    2. ' ' → logprob: -1.612891435623169
    3. '=' → logprob: -1.612891435623169
    4. ' =' → logprob: -1.737891435623169
    5. '+' → logprob: -6.487891674041748
    6. ',' → logprob: -7.737891674041748
    7. ' +' → logprob: -7.987891674041748
    8. '<|end|>' → logprob: -7.987891674041748
    9. '  ' → logprob: -8.23789119720459
    10. '   ' → logprob: -8.61289119720459

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476604888215661
    2. ' ' → logprob: -6.002476692199707
    3. '1' → logprob: -14.877476692199707
    4. '2' → logprob: -15.002476692199707
    5. '  ' → logprob: -15.752476692199707
    6. '   ' → logprob: -16.62747573852539
    7. '00' → logprob: -18.50247573852539
    8. '=' → logprob: -18.75247573852539
    9. ' ' → logprob: -18.93997573852539
    10. '۰' → logprob: -18.93997573852539

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3438327843905427e-05
    2. ' ' → logprob: -10.87502384185791
    3. '2' → logprob: -12.62502384185791
    4. '1' → logprob: -13.75002384185791
    5. '00' → logprob: -17.625022888183594
    6. '  ' → logprob: -17.625022888183594
    7. '   ' → logprob: -17.812522888183594
    8. '۰' → logprob: -18.250022888183594
    9. '10' → logprob: -18.500022888183594
    10. '4' → logprob: -18.687522888183594

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2693690061569214
    2. '   ' → logprob: -1.7693690061569214
    3. ' 
' → logprob: -3.894369125366211
    4. '    
' → logprob: -4.019369125366211
    5. ' ' → logprob: -4.769369125366211
    6. '   
' → logprob: -5.894369125366211
    7. '\n' → logprob: -6.144369125366211
    8. '  
' → logprob: -6.144369125366211
    9. ' while' → logprob: -6.269369125366211
    10. 'while' → logprob: -6.394369125366211

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27502644062042236
    2. ' 
' → logprob: -2.525026321411133
    3. ' ' → logprob: -3.150026321411133
    4. '\n' → logprob: -3.275026321411133
    5. '   ' → logprob: -3.650026321411133
    6. '  
' → logprob: -4.150026321411133
    7. '    
' → logprob: -4.400026321411133
    8. '   
' → logprob: -4.900026321411133
    9. ')' → logprob: -5.150026321411133
    10. '' → logprob: -5.650026321411133

Token 65: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009695647284388542
    2. ' 
' → logprob: -5.384695529937744
    3. '\n' → logprob: -6.509695529937744
    4. '  
' → logprob: -7.259695529937744
    5. ' ' → logprob: -7.509695529937744
    6. 'while' (adapté à ' while') → logprob: -7.509695529937744
    7. '    
' → logprob: -7.634695529937744
    8. ' while' → logprob: -8.259696006774902
    9. '   
' → logprob: -8.259696006774902
    10. ')' → logprob: -8.509696006774902

Token 66: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.11485952883958817
    2. 'q' → logprob: -2.2398595809936523
    3. ' len' → logprob: -6.364859580993652
    4. ' ' → logprob: -9.114859580993652
    5. 'len' → logprob: -9.239859580993652
    6. '	q' → logprob: -10.364859580993652
    7. '   ' → logprob: -10.739859580993652
    8. ' not' → logprob: -10.739859580993652
    9. '  ' → logprob: -11.489859580993652
    10. '    ' → logprob: -12.614859580993652

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002827223390340805
    2. '.' → logprob: -6.127827167510986
    3. '[' → logprob: -8.752827644348145
    4. '.p' → logprob: -8.752827644348145
    5. '):' → logprob: -9.127827644348145
    6. '.pop' → logprob: -9.252827644348145
    7. '.:' → logprob: -10.627827644348145
    8. ' :' → logprob: -11.377827644348145
    9. ' and' → logprob: -11.502827644348145
    10. ':not' → logprob: -11.502827644348145

Token 68: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3357052505016327
    2. '<|end|>' → logprob: -2.710705280303955
    3. '    ' → logprob: -3.335705280303955
    4. '       ' → logprob: -3.335705280303955
    5. '.pop' → logprob: -3.710705280303955
    6. ' ' → logprob: -3.960705280303955
    7. '    
' → logprob: -3.960705280303955
    8. '  ' → logprob: -4.210705280303955
    9. '
' → logprob: -4.335705280303955
    10. 'pop' → logprob: -4.585705280303955

Token 69: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5924783945083618
    2. ' u' → logprob: -1.5924783945083618
    3. '   ' → logprob: -2.0924782752990723
    4. 'v' → logprob: -2.5924782752990723
    5. 'x' → logprob: -3.5924782752990723
    6. ' v' → logprob: -4.342478275299072
    7. ' x' → logprob: -5.717478275299072
    8. 't' → logprob: -8.34247875213623
    9. ' ' → logprob: -8.34247875213623
    10. 'n' → logprob: -8.96747875213623

Token 70: ' bfs' (ID: 147571)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6678226590156555
    2. 'u' → logprob: -0.7928226590156555
    3. 'v' → logprob: -4.29282283782959
    4. 'x' → logprob: -4.79282283782959
    5. '   ' → logprob: -5.79282283782959
    6. ' v' → logprob: -5.91782283782959
    7. 'n' → logprob: -6.16782283782959
    8. 't' → logprob: -6.29282283782959
    9. ' x' → logprob: -6.66782283782959
    10. ' t' → logprob: -7.91782283782959

Token 71: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1916627287864685
    2. '   ' → logprob: -2.6916627883911133
    3. ',' → logprob: -4.066662788391113
    4. 'u' → logprob: -4.441662788391113
    5. ' =' → logprob: -4.816662788391113
    6. '.pop' → logprob: -4.816662788391113
    7. ' :' → logprob: -4.941662788391113
    8. ' ' → logprob: -4.941662788391113
    9. '=' → logprob: -4.941662788391113
    10. '.' → logprob: -5.441662788391113

Token 72: ' base' (ID: 3611)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1814577281475067
    2. ' ind' → logprob: -3.556457757949829
    3. 'g' → logprob: -3.806457757949829
    4. 'm' → logprob: -3.806457757949829
    5. 'que' → logprob: -4.18145751953125
    6. 'ind' → logprob: -4.30645751953125
    7. ' q' → logprob: -4.55645751953125
    8. ' la' → logprob: -4.93145751953125
    9. 'f' → logprob: -5.05645751953125
    10. 'l' → logprob: -5.30645751953125

Token 73: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6036534309387207
    2. '<|end|>' → logprob: -1.3536534309387207
    3. '
' → logprob: -2.7286534309387207
    4. ':' → logprob: -3.1036534309387207
    5. '<|end|>' → logprob: -3.6036534309387207
    6. '    
' → logprob: -3.9786534309387207
    7. ' ' → logprob: -4.853653430938721
    8. '       ' → logprob: -4.853653430938721
    9. '    ' → logprob: -5.728653430938721
    10. ',' → logprob: -5.853653430938721

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31555065512657166
    2. 'u' → logprob: -1.565550684928894
    3. ':' → logprob: -3.3155505657196045
    4. ' u' → logprob: -4.565550804138184
    5. 'v' → logprob: -5.690550804138184
    6. '    
' → logprob: -5.940550804138184
    7. 't' → logprob: -6.690550804138184
    8. ',' → logprob: -6.940550804138184
    9. '    ' → logprob: -7.065550804138184
    10. '```' → logprob: -7.190550804138184

Token 75: ' p' (ID: 275)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3395286500453949
    2. ' u' → logprob: -1.7145286798477173
    3. 'v' → logprob: -2.7145285606384277
    4. 'x' → logprob: -3.9645285606384277
    5. ' v' → logprob: -3.9645285606384277
    6. ' x' → logprob: -6.464528560638428
    7. '   ' → logprob: -7.589528560638428
    8. ' node' → logprob: -7.714528560638428
    9. 'node' → logprob: -8.214529037475586
    10. 'cur' → logprob: -8.714529037475586

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04564179480075836
    2. '=' → logprob: -3.2956418991088867
    3. 'opleft' → logprob: -5.545641899108887
    4. 'op' → logprob: -6.045641899108887
    5. ' ' → logprob: -7.295641899108887
    6. 'p' → logprob: -8.045641899108887
    7. '   ' → logprob: -9.420641899108887
    8. ',' → logprob: -10.045641899108887
    9. ')' → logprob: -10.420641899108887
    10. 'opped' → logprob: -10.920641899108887

Token 77: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07889077812433243
    2. ' q' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.578890800476074
    4. 'd' → logprob: -15.453890800476074
    5. '	q' → logprob: -15.578890800476074
    6. 'deque' → logprob: -15.703890800476074
    7. 'de' → logprob: -17.703889846801758
    8. 's' → logprob: -17.828889846801758
    9. ')' → logprob: -17.953889846801758
    10. 'p' → logprob: -18.078889846801758

Token 78: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.014599799178540707
    2. 'opleft' → logprob: -4.264599800109863
    3. '.' → logprob: -8.139599800109863
    4. '.pop' → logprob: -8.889599800109863
    5. 'p' → logprob: -12.514599800109863
    6. ' .' → logprob: -13.514599800109863
    7. '   ' → logprob: -14.014599800109863
    8. 'op' → logprob: -15.264599800109863
    9. 'ople' → logprob: -15.639599800109863
    10. '```' → logprob: -15.764599800109863

Token 79: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.005738697946071625
    2. 'op' → logprob: -5.505738735198975
    3. 'ople' → logprob: -6.505738735198975
    4. 'opl' → logprob: -8.755738258361816
    5. 'opf' → logprob: -12.130738258361816
    6. 'opc' → logprob: -14.505738258361816
    7. 'oph' → logprob: -15.630738258361816
    8. 'opy' → logprob: -15.755738258361816
    9. 'oplevel' → logprob: -16.255739212036133
    10. 'o' → logprob: -16.380739212036133

Token 80: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011069283820688725
    2. '()
' → logprob: -4.511069297790527
    3. '()
' → logprob: -11.261069297790527
    4. '(' → logprob: -12.636069297790527
    5. ')' → logprob: -12.636069297790527
    6. '()

' → logprob: -13.636069297790527
    7. ' ()' → logprob: -15.386069297790527
    8. '())' → logprob: -15.511069297790527
    9. '()`' → logprob: -15.636069297790527
    10. '()]' → logprob: -16.13606834411621

Token 81: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2074771225452423
    2. 'for' → logprob: -2.33247709274292
    3. '<|end|>' → logprob: -2.58247709274292
    4. ')' → logprob: -5.95747709274292
    5. '   ' → logprob: -5.95747709274292
    6. '       ' → logprob: -6.08247709274292
    7. '
' → logprob: -6.08247709274292
    8. '<|end|>' → logprob: -6.33247709274292
    9. ' ' → logprob: -6.45747709274292
    10. '	for' → logprob: -7.45747709274292

Token 82: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016043519601225853
    2. ' for' → logprob: -4.141043663024902
    3. '   ' → logprob: -11.766043663024902
    4. '	for' → logprob: -14.641043663024902
    5. ' ' → logprob: -15.766043663024902
    6. 'if' → logprob: -16.016042709350586
    7. ',' → logprob: -16.266042709350586
    8. 'f' → logprob: -16.391042709350586
    9. ')' → logprob: -16.641042709350586
    10. ']' → logprob: -16.891042709350586

Token 83: ' node' (ID: 4596)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.1387279033660889
    2. ' x' → logprob: -1.5137279033660889
    3. ' v' → logprob: -2.138727903366089
    4. ' i' → logprob: -2.513727903366089
    5. ' nxt' → logprob: -2.638727903366089
    6. ' w' → logprob: -2.763727903366089
    7. ' e' → logprob: -3.638727903366089
    8. 'x' → logprob: -3.763727903366089
    9. 'u' → logprob: -4.388728141784668
    10. 'v' → logprob: -4.888728141784668

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026605287566781044
    2. 'in' → logprob: -3.6516053676605225
    3. 's' → logprob: -8.651605606079102
    4. ' ' → logprob: -9.401605606079102
    5. '<|end|>' → logprob: -10.776605606079102
    6. ',' → logprob: -11.651605606079102
    7. '<|end|>' → logprob: -12.526605606079102
    8. 'd' → logprob: -12.776605606079102
    9. 'ind' → logprob: -13.026605606079102
    10. '	in' → logprob: -13.026605606079102

Token 85: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.016697073355317116
    2. 'g' → logprob: -4.266696929931641
    3. ' dm' → logprob: -6.141696929931641
    4. 'dm' → logprob: -8.76669692993164
    5. ' ' → logprob: -8.89169692993164
    6. '	g' → logprob: -11.01669692993164
    7. ' range' → logprob: -11.01669692993164
    8. '(g' → logprob: -11.39169692993164
    9. '(dm' → logprob: -11.76669692993164
    10. ' ' → logprob: -11.76669692993164

Token 86: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00023691373644396663
    2. '[' → logprob: -8.500236511230469
    3. 'p' → logprob: -11.250236511230469
    4. '[ind' → logprob: -12.125236511230469
    5. ' [' → logprob: -12.625236511230469
    6. '[m' → logprob: -13.000236511230469
    7. '[d' → logprob: -13.625236511230469
    8. '[s' → logprob: -14.000236511230469
    9. '[q' → logprob: -14.250236511230469
    10. '[g' → logprob: -14.250236511230469

Token 87: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00013262155698612332
    2. ']' → logprob: -9.25013256072998
    3. '[' → logprob: -11.75013256072998
    4. ']:
' → logprob: -12.00013256072998
    5. '[p' → logprob: -12.12513256072998
    6. ' ]' → logprob: -12.50013256072998
    7. '):' → logprob: -12.62513256072998
    8. ']:
' → logprob: -12.75013256072998
    9. ']):' → logprob: -13.12513256072998
    10. '}:' → logprob: -13.62513256072998

Token 88: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46726953983306885
    2. '<|end|>' → logprob: -1.2172695398330688
    3. ' if' → logprob: -3.3422694206237793
    4. '       ' → logprob: -3.7172694206237793
    5. '<|end|>' → logprob: -4.842269420623779
    6. ' :' → logprob: -5.592269420623779
    7. '   ' → logprob: -6.217269420623779
    8. ' ' → logprob: -6.842269420623779
    9. ':
' → logprob: -6.967269420623779
    10. '        ' → logprob: -7.967269420623779

Token 89: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6134887933731079
    2. ' ' → logprob: -0.8634887933731079
    3. '<|end|>' → logprob: -3.6134886741638184
    4. 'if' (adapté à ' if') → logprob: -5.488488674163818
    5. '<|end|>' → logprob: -6.738488674163818
    6. '       ' → logprob: -6.988488674163818
    7. '           ' → logprob: -7.113488674163818
    8. '    ' → logprob: -7.613488674163818
    9. '               ' → logprob: -7.613488674163818
    10. '   ' → logprob: -7.738488674163818

Token 90: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0015527134528383613
    2. 'd' → logprob: -6.501552581787109
    3. ' ' → logprob: -10.12655258178711
    4. ' ' → logprob: -12.50155258178711
    5. '	d' → logprob: -12.75155258178711
    6. '    ' → logprob: -13.00155258178711
    7. ' not' → logprob: -14.75155258178711
    8. '   ' → logprob: -15.50155258178711
    9. '<|end|>' → logprob: -15.50155258178711
    10. '_d' → logprob: -16.12655258178711

Token 91: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. 'node' → logprob: -16.625001907348633
    4. ' node' → logprob: -19.125001907348633
    5. '[n' → logprob: -19.125001907348633
    6. '	node' → logprob: -19.625001907348633
    7. ' [' → logprob: -20.250001907348633
    8. '<Node' → logprob: -20.250001907348633
    9. '=node' → logprob: -20.375001907348633
    10. '[
' → logprob: -20.750001907348633

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.711520254611969
    2. ' ==' → logprob: -1.4615201950073242
    3. '==-' → logprob: -2.336520195007324
    4. '==' → logprob: -2.711520195007324
    5. '[' → logprob: -3.086520195007324
    6. ']==' → logprob: -3.211520195007324
    7. ')' → logprob: -3.711520195007324
    8. '<' → logprob: -6.586520195007324
    9. ' ' → logprob: -6.711520195007324
    10. ')==' → logprob: -7.961520195007324

Token 93: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5741860270500183
    2. '==-' → logprob: -1.324186086654663
    3. '==' → logprob: -1.824186086654663
    4. '<' → logprob: -5.074185848236084
    5. ')' → logprob: -6.949185848236084
    6. ' ' → logprob: -7.449185848236084
    7. '[' → logprob: -7.574185848236084
    8. ']==' → logprob: -7.949185848236084
    9. ' <' → logprob: -8.074186325073242
    10. ')==' → logprob: -8.574186325073242

Token 94: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004624510649591684
    2. ' -' → logprob: -5.379624366760254
    3. '   ' → logprob: -13.129624366760254
    4. ' ' → logprob: -13.379624366760254
    5. '  ' → logprob: -14.754624366760254
    6. '<|end|>' → logprob: -15.254624366760254
    7. '<|end|>' → logprob: -17.00462532043457
    8. '	' → logprob: -17.00462532043457
    9. '−' → logprob: -17.12962532043457
    10. '‌' → logprob: -17.75462532043457

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -15.125008583068848
    4. '2' → logprob: -17.06250762939453
    5. '  ' → logprob: -17.50000762939453
    6. '```' → logprob: -17.68750762939453
    7. '   ' → logprob: -18.00000762939453
    8. '    ' → logprob: -18.25000762939453
    9. ')' → logprob: -18.93750762939453
    10. '۱' → logprob: -19.00000762939453

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059991865418851376
    2. ':
' → logprob: -5.2559990882873535
    3. '               ' → logprob: -8.505999565124512
    4. ' and' → logprob: -8.880999565124512
    5. '<|end|>' → logprob: -9.255999565124512
    6. '):' → logprob: -9.380999565124512
    7. '           ' → logprob: -9.505999565124512
    8. ' :' → logprob: -9.880999565124512
    9. ' or' → logprob: -10.505999565124512
    10. ')' → logprob: -10.505999565124512

Token 97: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006572430487722158
    2. '<|end|>' → logprob: -5.756572246551514
    3. '           ' → logprob: -7.506572246551514
    4. ' ' → logprob: -7.506572246551514
    5. ' d' → logprob: -8.006572723388672
    6. ':' → logprob: -8.006572723388672
    7. '       ' → logprob: -8.131572723388672
    8. ')' → logprob: -8.381572723388672
    9. '                ' → logprob: -8.881572723388672
    10. 'd' → logprob: -8.881572723388672

Token 98: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08638382703065872
    2. 'd' (adapté à ' d') → logprob: -2.711383819580078
    3. '               ' → logprob: -4.336383819580078
    4. '                   ' → logprob: -6.086383819580078
    5. '                ' → logprob: -7.711383819580078
    6. '           ' → logprob: -9.211383819580078
    7. '<|end|>' → logprob: -9.211383819580078
    8. ' ' → logprob: -9.711383819580078
    9. '                       ' → logprob: -10.211383819580078
    10. '       ' → logprob: -10.211383819580078

Token 99: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.50001049041748
    3. '[token' → logprob: -15.50001049041748
    4. '=node' → logprob: -18.000009536743164
    5. '[module' → logprob: -18.375009536743164
    6. '[user' → logprob: -18.375009536743164
    7. '```' → logprob: -18.625009536743164
    8. '[cell' → logprob: -18.750009536743164
    9. 'node' → logprob: -18.875009536743164
    10. '	node' → logprob: -19.125009536743164

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07014916092157364
    2. '[node' → logprob: -2.6951491832733154
    3. '[' → logprob: -9.320149421691895
    4. ']=' → logprob: -9.570149421691895
    5. ')' → logprob: -10.945149421691895
    6. ' ]' → logprob: -11.445149421691895
    7. '=node' → logprob: -11.570149421691895
    8. ' =' → logprob: -12.195149421691895
    9. '=' → logprob: -12.945149421691895
    10. '][' → logprob: -13.570149421691895

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005236360710114241
    2. '=' → logprob: -5.2552361488342285
    3. ' =
' → logprob: -14.130236625671387
    4. '[' → logprob: -14.130236625671387
    5. ']' → logprob: -15.005236625671387
    6. ' ' → logprob: -15.130236625671387
    7. ')' → logprob: -16.13023567199707
    8. '<|end|>' → logprob: -16.63023567199707
    9. 's' → logprob: -17.13023567199707
    10. '[node' → logprob: -17.25523567199707

Token 102: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868756890296936
    2. ' d' → logprob: -1.1368756294250488
    3. '	d' → logprob: -12.886876106262207
    4. ' ' → logprob: -13.761876106262207
    5. '   ' → logprob: -14.386876106262207
    6. '               ' → logprob: -15.136876106262207
    7. '                   ' → logprob: -16.13687515258789
    8. ')d' → logprob: -16.88687515258789
    9. '    ' → logprob: -17.01187515258789
    10. ' ' → logprob: -17.63687515258789

Token 103: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0010393599513918161
    2. 'p' → logprob: -6.876039505004883
    3. '[' → logprob: -12.501039505004883
    4. ' p' → logprob: -14.126039505004883
    5. '[node' → logprob: -14.251039505004883
    6. '	p' → logprob: -14.876039505004883
    7. '<p' → logprob: -15.126039505004883
    8. '```' → logprob: -15.626039505004883
    9. '[q' → logprob: -16.251039505004883
    10. '[parent' → logprob: -16.251039505004883

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053855376318097115
    2. ']+' → logprob: -5.255385398864746
    3. '+' → logprob: -8.880385398864746
    4. ' +' → logprob: -12.130385398864746
    5. '[' → logprob: -12.755385398864746
    6. ')' → logprob: -13.380385398864746
    7. ' ]' → logprob: -14.130385398864746
    8. '']' → logprob: -14.505385398864746
    9. '+]' → logprob: -14.630385398864746
    10. '}' → logprob: -14.755385398864746

Token 105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14267753064632416
    2. ' +' → logprob: -2.0176775455474854
    3. '1' → logprob: -14.392677307128906
    4. ' plus' → logprob: -14.517677307128906
    5. ' ' → logprob: -14.642677307128906
    6. ' ' → logprob: -15.517677307128906
    7. '+
' → logprob: -16.392677307128906
    8. '[' → logprob: -16.517677307128906
    9. '   ' → logprob: -16.642677307128906
    10. 'plus' → logprob: -16.767677307128906

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.750296592712402
    4. 'dm' → logprob: -17.250295639038086
    5. '2' → logprob: -17.625295639038086
    6. ' ' → logprob: -18.125295639038086
    7. ' dm' → logprob: -18.375295639038086
    8. '+' → logprob: -18.625295639038086
    9. '  ' → logprob: -18.875295639038086
    10. '[' → logprob: -19.625295639038086

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '2' → logprob: -15.500045776367188
    5. '4' → logprob: -18.375045776367188
    6. '  ' → logprob: -18.375045776367188
    7. 'dm' → logprob: -18.375045776367188
    8. '[' → logprob: -18.875045776367188
    9. '3' → logprob: -19.562545776367188
    10. '6' → logprob: -19.625045776367188

Token 108: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.7755875129951164e-05
    2. 'q' → logprob: -11.50004768371582
    3. '                   ' → logprob: -12.00004768371582
    4. ',' → logprob: -12.00004768371582
    5. '<|end|>' → logprob: -12.12504768371582
    6. '           ' → logprob: -12.25004768371582
    7. '              ' → logprob: -12.50004768371582
    8. ' q' → logprob: -13.00004768371582
    9. '                ' → logprob: -13.25004768371582
    10. ')' → logprob: -13.25004768371582

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.110668618930504e-05
    2. 'q' → logprob: -11.00006103515625
    3. '              ' → logprob: -11.62506103515625
    4. '           ' → logprob: -11.75006103515625
    5. '                   ' → logprob: -11.87506103515625
    6. ' q' → logprob: -12.12506103515625
    7. '<|end|>' → logprob: -12.62506103515625
    8. '			' → logprob: -12.87506103515625
    9. '                ' → logprob: -13.00006103515625
    10. ',' → logprob: -13.12506103515625

Token 110: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -2.248469718324486e-05
    2. '               ' → logprob: -10.875022888183594
    3. ' q' → logprob: -12.750022888183594
    4. '           ' → logprob: -15.250022888183594
    5. '	q' → logprob: -16.000022888183594
    6. '                   ' → logprob: -16.125022888183594
    7. '   ' → logprob: -16.750022888183594
    8. 'ind' → logprob: -17.625022888183594
    9. '       ' → logprob: -17.875022888183594
    10. 'if' → logprob: -18.375022888183594

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021474185632541776
    2. '.' → logprob: -8.500214576721191
    3. '.extend' → logprob: -12.000214576721191
    4. '.app' → logprob: -13.500214576721191
    5. '.Append' → logprob: -13.750214576721191
    6. '.enqueue' → logprob: -14.000214576721191
    7. '.p' → logprob: -14.250214576721191
    8. ' .' → logprob: -15.500214576721191
    9. 'append' → logprob: -15.500214576721191
    10. '.add' → logprob: -15.500214576721191

Token 112: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'node' → logprob: -18.3750057220459
    4. '(nodes' → logprob: -18.6250057220459
    5. '(
' → logprob: -18.8750057220459
    6. '(Node' → logprob: -19.1250057220459
    7. ' (' → logprob: -19.8750057220459
    8. '[node' → logprob: -19.8750057220459
    9. '=node' → logprob: -20.1250057220459
    10. '(token' → logprob: -20.1250057220459

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ')
' → logprob: -11.250015258789062
    3. ')return' → logprob: -13.875015258789062
    4. ' )' → logprob: -14.250015258789062
    5. '<|end|>' → logprob: -15.250015258789062
    6. '               ' → logprob: -15.250015258789062
    7. '<|end|>' → logprob: -16.625015258789062
    8. '()' → logprob: -16.750015258789062
    9. ']' → logprob: -17.000015258789062
    10. '())' → logprob: -17.000015258789062

Token 114: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9905423521995544
    2. 'return' → logprob: -1.4905424118041992
    3. '<|end|>' → logprob: -1.6155424118041992
    4. ')' → logprob: -2.740542411804199
    5. '.' → logprob: -3.365542411804199
    6. ' return' → logprob: -3.865542411804199
    7. ' ' → logprob: -4.490542411804199
    8. 'if' → logprob: -4.865542411804199
    9. 'ind' → logprob: -4.865542411804199
    10. ']' → logprob: -4.990542411804199

Token 116: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01575442962348461
    2. 'e' → logprob: -4.765754222869873
    3. 'et' → logprob: -6.390754222869873
    4. '   ' → logprob: -7.265754222869873
    5. 'ist' → logprob: -7.390754222869873
    6. 'eft' → logprob: -7.515754222869873
    7. '(en' → logprob: -7.765754222869873
    8. '[' → logprob: -8.015754699707031
    9. 'ength' → logprob: -8.015754699707031
    10. 'ast' → logprob: -8.640754699707031

Token 117: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6322418451309204
    2. '[min' → logprob: -1.6322418451309204
    3. '[max' → logprob: -1.7572418451309204
    4. '[]' → logprob: -2.382241725921631
    5. '[ind' → logprob: -2.507241725921631
    6. ' [' → logprob: -2.632241725921631
    7. '[d' → logprob: -2.882241725921631
    8. '[len' → logprob: -3.132241725921631
    9. '[n' → logprob: -3.507241725921631
    10. 'max' → logprob: -4.882241725921631

Token 118: '0' (ID: 15)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.48825952410697937
    2. 'i' → logprob: -1.7382595539093018
    3. '(d' → logprob: -2.4882595539093018
    4. 'd' → logprob: -2.6132595539093018
    5. '(x' → logprob: -3.6132595539093018
    6. '[i' → logprob: -5.113259315490723
    7. 'x' → logprob: -5.238259315490723
    8. '0' → logprob: -5.738259315490723
    9. '(p' → logprob: -6.113259315490723
    10. '(' → logprob: -6.113259315490723

Token 119: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03401413932442665
    2. ' for' → logprob: -4.4090142250061035
    3. ']*' → logprob: -4.4090142250061035
    4. 'for' → logprob: -5.2840142250061035
    5. ',' → logprob: -6.2840142250061035
    6. ' ]' → logprob: -6.4090142250061035
    7. ']*(' → logprob: -8.284013748168945
    8. ']+' → logprob: -8.659013748168945
    9. '   ' → logprob: -11.034013748168945
    10. '+' → logprob: -11.284013748168945

Token 120: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07165033370256424
    2. ' _' → logprob: -2.696650266647339
    3. 'range' → logprob: -7.196650505065918
    4. ' range' → logprob: -7.446650505065918
    5. '_range' → logprob: -8.321650505065918
    6. ' in' → logprob: -9.446650505065918
    7. '(range' → logprob: -10.446650505065918
    8. ' i' → logprob: -11.446650505065918
    9. ' ' → logprob: -11.946650505065918
    10. '_in' → logprob: -12.696650505065918

Token 121: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004452550783753395
    2. ' range' → logprob: -5.504452705383301
    3. 'in' → logprob: -8.0044527053833
    4. ' in' → logprob: -10.3794527053833
    5. '_range' → logprob: -12.8794527053833
    6. '(range' → logprob: -13.1294527053833
    7. '_' → logprob: -13.6294527053833
    8. 'ange' → logprob: -13.8794527053833
    9. '	range' → logprob: -13.8794527053833
    10. 'n' → logprob: -14.2544527053833

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008620485663414001
    2. ' range' → logprob: -4.758620262145996
    3. 'd' → logprob: -12.383620262145996
    4. 'r' → logprob: -14.508620262145996
    5. 'rang' → logprob: -15.258620262145996
    6. 'g' → logprob: -15.508620262145996
    7. ' ' → logprob: -15.508620262145996
    8. ' d' → logprob: -16.383621215820312
    9. '	range' → logprob: -16.383621215820312
    10. '  ' → logprob: -16.633621215820312

Token 123: '(dm' (ID: 188448)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00036084887688048184
    2. '(' → logprob: -8.750360488891602
    3. 'n' → logprob: -9.250360488891602
    4. ' (' → logprob: -9.375360488891602
    5. ' n' → logprob: -11.000360488891602
    6. '(len' → logprob: -12.875360488891602
    7. '(range' → logprob: -14.375360488891602
    8. 'range' → logprob: -14.750360488891602
    9. '(dm' → logprob: -15.125360488891602
    10. '(
' → logprob: -15.375360488891602

Token 124: ' //' (ID: 602)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.041231781244277954
    2. '+' → logprob: -3.291231870651245
    3. ' +' → logprob: -6.291231632232666
    4. ' )' → logprob: -6.791231632232666
    5. ')' → logprob: -8.916232109069824
    6. ']' → logprob: -10.166232109069824
    7. ' ]' → logprob: -11.166232109069824
    8. '-' → logprob: -12.666232109069824
    9. ')]
' → logprob: -12.666232109069824
    10. ' ' → logprob: -13.416232109069824

Token 125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004015476442873478
    2. ' ' → logprob: -6.5040154457092285
    3. '3' → logprob: -6.8790154457092285
    4. '4' → logprob: -7.2540154457092285
    5. 'n' → logprob: -8.504015922546387
    6. '1' → logprob: -9.629015922546387
    7. '5' → logprob: -9.754015922546387
    8. '10' → logprob: -9.754015922546387
    9. 'd' → logprob: -9.879015922546387
    10. '6' → logprob: -9.879015922546387

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007398230955004692
    2. '4' → logprob: -8.000740051269531
    3. '3' → logprob: -8.625740051269531
    4. '10' → logprob: -10.375740051269531
    5. ' ' → logprob: -10.500740051269531
    6. '1' → logprob: -10.625740051269531
    7. 'n' → logprob: -11.000740051269531
    8. '5' → logprob: -11.125740051269531
    9. '6' → logprob: -11.125740051269531
    10. 'd' → logprob: -11.375740051269531

Token 127: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03987471014261246
    2. '+' → logprob: -3.664874792098999
    3. ' +' → logprob: -4.78987455368042
    4. ' )' → logprob: -5.28987455368042
    5. ')' → logprob: -9.289875030517578
    6. ',' → logprob: -12.164875030517578
    7. ']' → logprob: -12.164875030517578
    8. ')]
' → logprob: -12.414875030517578
    9. ' ]' → logprob: -12.539875030517578
    10. ' ' → logprob: -12.789875030517578

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007344625773839653
    2. ' ' → logprob: -7.500734329223633
    3. '2' → logprob: -8.625734329223633
    4. '   ' → logprob: -14.125734329223633
    5. '+' → logprob: -14.375734329223633
    6. '  ' → logprob: -15.813234329223633
    7. '    ' → logprob: -16.063234329223633
    8. ' +' → logprob: -16.813234329223633
    9. '     ' → logprob: -17.000734329223633
    10. '3' → logprob: -17.125734329223633

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.847109812544659e-05
    2. '2' → logprob: -10.125048637390137
    3. ' ' → logprob: -11.750048637390137
    4. '   ' → logprob: -15.000048637390137
    5. '+' → logprob: -16.87504768371582
    6. '(' → logprob: -17.50004768371582
    7. '0' → logprob: -17.68754768371582
    8. '  ' → logprob: -17.75004768371582
    9. '    ' → logprob: -18.31254768371582
    10. '```' → logprob: -18.43754768371582

Token 130: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014320163987576962
    2. ']' → logprob: -4.264320373535156
    3. ' ]' → logprob: -9.514320373535156
    4. ')' → logprob: -9.889320373535156
    5. ' )' → logprob: -11.389320373535156
    6. '])' → logprob: -11.514320373535156
    7. ')]
' → logprob: -12.639320373535156
    8. '])]' → logprob: -12.889320373535156
    9. ')])' → logprob: -14.014320373535156
    10. ' }]' → logprob: -14.139320373535156

Token 131: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3645528256893158
    2. ' for' → logprob: -1.3645528554916382
    3. '<|end|>' → logprob: -3.3645527362823486
    4. 'd' → logprob: -5.614552974700928
    5. 'i' → logprob: -6.239552974700928
    6. 'l' → logprob: -6.364552974700928
    7. ' ' → logprob: -6.489552974700928
    8. '   ' → logprob: -6.614552974700928
    9. ')' → logprob: -7.114552974700928
    10. 'n' → logprob: -7.989552974700928

Token 133: ' a' (ID: 261)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09321963042020798
    2. ' dm' → logprob: -3.468219518661499
    3. 'd' → logprob: -4.218219757080078
    4. ' n' → logprob: -4.468219757080078
    5. ' max' → logprob: -5.218219757080078
    6. ' ' → logprob: -5.218219757080078
    7. ' len' → logprob: -5.468219757080078
    8. ' b' → logprob: -5.843219757080078
    9. ' a' → logprob: -6.093219757080078
    10. 'dm' → logprob: -6.093219757080078

Token 134: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2371939867734909
    2. ' !=' → logprob: -1.9871939420700073
    3. '==' → logprob: -2.737194061279297
    4. '!=' → logprob: -5.112194061279297
    5. ' >' → logprob: -7.237194061279297
    6. ' <' → logprob: -7.362194061279297
    7. '+' → logprob: -7.487194061279297
    8. ' ' → logprob: -7.487194061279297
    9. '[' → logprob: -8.112194061279297
    10. ' +' → logprob: -8.862194061279297

Token 135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038900330662727356
    2. ' b' → logprob: -3.288900375366211
    3. '0' → logprob: -7.413900375366211
    4. ' ' → logprob: -8.288900375366211
    5. 'n' → logprob: -13.663900375366211
    6. '1' → logprob: -14.038900375366211
    7. ' n' → logprob: -15.038900375366211
    8. '-' → logprob: -15.288900375366211
    9. '	b' → logprob: -15.288900375366211
    10. 'ind' → logprob: -15.663900375366211

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016609008889645338
    2. ' :' → logprob: -7.3766608238220215
    3. ':return' → logprob: -7.5016608238220215
    4. ':
' → logprob: -7.8766608238220215
    5. ' or' → logprob: -9.50166130065918
    6. ' and' → logprob: -10.75166130065918
    7. 'and' → logprob: -13.25166130065918
    8. ' :
' → logprob: -13.75166130065918
    9. '   ' → logprob: -14.12666130065918
    10. '.' → logprob: -14.50166130065918

Token 137: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16901710629463196
    2. '       ' → logprob: -1.9190170764923096
    3. '\n' → logprob: -5.669017314910889
    4. ' 
' → logprob: -6.669017314910889
    5. '<|end|>' → logprob: -6.794017314910889
    6. '   ' → logprob: -7.669017314910889
    7. ' return' → logprob: -7.669017314910889
    8. '        
' → logprob: -7.919017314910889
    9. 'return' → logprob: -8.16901683807373
    10. ':
' → logprob: -8.41901683807373

Token 138: ' hmm' (ID: 186402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17461234331130981
    2. ' 
' → logprob: -2.049612283706665
    3. '       ' → logprob: -4.799612522125244
    4. ' return' → logprob: -5.174612522125244
    5. '\n' → logprob: -5.299612522125244
    6. '    
' → logprob: -5.799612522125244
    7. 'return' → logprob: -5.924612522125244
    8. '        
' → logprob: -6.424612522125244
    9. ' ' → logprob: -6.549612522125244
    10. '   ' → logprob: -6.674612522125244

Token 139: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5065768957138062
    2. ':' → logprob: -1.8815768957138062
    3. '       ' → logprob: -2.1315770149230957
    4. ':
' → logprob: -2.7565770149230957
    5. '   ' → logprob: -4.256577014923096
    6. ':return' → logprob: -4.881577014923096
    7. '<|end|>' → logprob: -5.006577014923096
    8. '    
' → logprob: -5.256577014923096
    9. ' return' → logprob: -5.256577014923096
    10. '        
' → logprob: -5.381577014923096

Token 140: ' le' (ID: 505)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8337348103523254
    2. '       ' → logprob: -1.5837347507476807
    3. ' l' → logprob: -1.7087347507476807
    4. '   ' → logprob: -2.3337347507476807
    5. 'return' → logprob: -2.9587347507476807
    6. '    ' → logprob: -4.45873498916626
    7. ' d' → logprob: -5.20873498916626
    8. 'l' → logprob: -5.95873498916626
    9. ' pass' → logprob: -5.95873498916626
    10. ' for' → logprob: -6.45873498916626

Token 141: ' cas' (ID: 2108)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.22422921657562256
    2. 'a' → logprob: -3.224229335784912
    3. ' d' → logprob: -3.474229335784912
    4. 'd' → logprob: -4.224229335784912
    5. ' a' → logprob: -4.599229335784912
    6. 'n' → logprob: -4.599229335784912
    7. ' return' → logprob: -4.724229335784912
    8. 'len' → logprob: -5.349229335784912
    9. 'f' → logprob: -5.474229335784912
    10. 'r' → logprob: -5.599229335784912

Token 142: ' où' (ID: 15113)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0011178255081177
    2. ' where' → logprob: -1.3761178255081177
    3. ' a' → logprob: -1.8761178255081177
    4. ' d' → logprob: -2.751117706298828
    5. ' ' → logprob: -3.126117706298828
    6. ' où' → logprob: -3.501117706298828
    7. '   ' → logprob: -3.626117706298828
    8. 'a' → logprob: -4.126117706298828
    9. 'd' → logprob: -4.376117706298828
    10. '    ' → logprob: -5.126117706298828

Token 143: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8904407024383545
    2. ' a' → logprob: -1.2654407024383545
    3. ' n' → logprob: -2.0154407024383545
    4. 'n' → logprob: -2.5154407024383545
    5. 'dm' → logprob: -3.2654407024383545
    6. ' dm' → logprob: -3.5154407024383545
    7. ' ' → logprob: -4.765440940856934
    8. '0' → logprob: -4.890440940856934
    9. 'd' → logprob: -5.515440940856934
    10. ' d' → logprob: -6.265440940856934

Token 144: ' prend' (ID: 37463)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3394143879413605
    2. ' a' → logprob: -2.964414358139038
    3. ''re' → logprob: -3.214414358139038
    4. 'n' → logprob: -3.339414358139038
    5. 'a' → logprob: -3.464414358139038
    6. ' reste' → logprob: -3.589414358139038
    7. ' have' → logprob: -3.964414358139038
    8. ' ne' → logprob: -4.714414596557617
    9. ' continue' → logprob: -4.714414596557617
    10. ' are' → logprob: -5.089414596557617

Token 145: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6588738560676575
    2. ' un' → logprob: -2.1588737964630127
    3. ' juste' → logprob: -2.5338737964630127
    4. ' la' → logprob: -2.9088737964630127
    5. ' uniquement' → logprob: -2.9088737964630127
    6. ' seulement' → logprob: -3.1588737964630127
    7. ' only' → logprob: -4.033874034881592
    8. ' ' → logprob: -4.158874034881592
    9. ' just' → logprob: -4.408874034881592
    10. ' les' → logprob: -4.533874034881592

Token 146: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.7845624089241028
    2. 'fois' → logprob: -1.909562349319458
    3. 'a' → logprob: -2.534562349319458
    4. ' mêmes' → logprob: -2.909562349319458
    5. ' copies' → logprob: -3.409562349319458
    6. 'm' → logprob: -3.534562349319458
    7. ' tokens' → logprob: -3.909562349319458
    8. ' même' → logprob: -4.034562587738037
    9. 'copies' → logprob: -4.409562587738037
    10. 'for' → logprob: -4.409562587738037

Token 147: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3910203278064728
    2. 'a' → logprob: -1.1410202980041504
    3. ' p' → logprob: -6.51602029800415
    4. '<|end|>' → logprob: -6.89102029800415
    5. ' ' → logprob: -7.76602029800415
    6. ' the' → logprob: -8.016020774841309
    7. 'p' → logprob: -8.766020774841309
    8. 'b' → logprob: -8.766020774841309
    9. ' b' → logprob: -9.016020774841309
    10. ' (' → logprob: -9.391020774841309

Token 148: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.28239578008651733
    2. 'm' → logprob: -1.407395839691162
    3. 'a' → logprob: -7.407395839691162
    4. 'even' → logprob: -8.907395362854004
    5. ' meme' → logprob: -9.407395362854004
    6. ' even' → logprob: -9.407395362854004
    7. ' ' → logprob: -9.657395362854004
    8. 'Même' → logprob: -10.282395362854004
    9. ' mêmes' → logprob: -10.532395362854004
    10. 'mé' → logprob: -10.532395362854004

Token 149: ' sommet' (ID: 130502)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.0653274059295654
    2. 'node' → logprob: -1.0653274059295654
    3. ' sommet' → logprob: -2.0653274059295654
    4. ' noe' → logprob: -2.3153274059295654
    5. 'a' → logprob: -3.3153274059295654
    6. 'n' → logprob: -4.1903276443481445
    7. 'point' → logprob: -4.6903276443481445
    8. ' a' → logprob: -4.8153276443481445
    9. ' point' → logprob: -5.9403276443481445
    10. ' n' → logprob: -6.3153276443481445

Token 150: ' ?
' (ID: 19740)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007906957529485226
    2. '<|end|>' → logprob: -5.757906913757324
    3. ':
' → logprob: -6.132906913757324
    4. ':return' → logprob: -6.257906913757324
    5. '<|end|>' → logprob: -8.882906913757324
    6. '.' → logprob: -9.007906913757324
    7. '   ' → logprob: -9.007906913757324
    8. ' :' → logprob: -9.507906913757324
    9. '       ' → logprob: -10.132906913757324
    10. '
' → logprob: -10.507906913757324

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5794166326522827
    2. ':' → logprob: -0.9544166326522827
    3. ':
' → logprob: -3.8294167518615723
    4. '
' → logprob: -4.204416751861572
    5. '   ' → logprob: -4.829416751861572
    6. ' :' → logprob: -5.704416751861572
    7. ':return' → logprob: -6.579416751861572
    8. ',' → logprob: -7.204416751861572
    9. '<|end|>' → logprob: -7.329416751861572
    10. '        
' → logprob: -7.454416751861572

Token 152: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.1380970478057861
    2. '   ' → logprob: -1.5130970478057861
    3. ' l' → logprob: -1.8880970478057861
    4. 'return' → logprob: -2.138097047805786
    5. '       ' → logprob: -2.513097047805786
    6. ' return' → logprob: -2.763097047805786
    7. ' for' → logprob: -4.513096809387207
    8. '
' → logprob: -4.763096809387207
    9. ' pass' → logprob: -4.763096809387207
    10. 'for' → logprob: -5.013096809387207

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012945265509188175
    2. '[a' → logprob: -4.387945175170898
    3. '[d' → logprob: -8.512945175170898
    4. '[-' → logprob: -9.762945175170898
    5. ' [' → logprob: -10.012945175170898
    6. '[l' → logprob: -10.637945175170898
    7. ' =' → logprob: -11.137945175170898
    8. '[b' → logprob: -11.387945175170898
    9. '[len' → logprob: -11.387945175170898
    10. 'a' → logprob: -11.887945175170898

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008389154449105263
    2. 'd' → logprob: -5.383388996124268
    3. ' ' → logprob: -5.633388996124268
    4. ' d' → logprob: -8.883389472961426
    5. '1' → logprob: -10.883389472961426
    6. 'dm' → logprob: -12.008389472961426
    7. '(' → logprob: -12.133389472961426
    8. ']' → logprob: -12.508389472961426
    9. '-' → logprob: -13.008389472961426
    10. '   ' → logprob: -13.320889472961426

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007121934904716909
    2. ' ]' → logprob: -7.6257123947143555
    3. ']+=' → logprob: -8.500712394714355
    4. ']=' → logprob: -11.125712394714355
    5. '   ' → logprob: -13.500712394714355
    6. ']+' → logprob: -13.625712394714355
    7. '()]' → logprob: -14.625712394714355
    8. ')]' → logprob: -14.875712394714355
    9. ' +=' → logprob: -14.875712394714355
    10. '`]' → logprob: -15.125712394714355

Token 156: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6208810806274414
    2. '=' → logprob: -1.4958810806274414
    3. ' +=' → logprob: -1.4958810806274414
    4. ' =' → logprob: -4.245881080627441
    5. '+' → logprob: -9.620881080627441
    6. ']+=' → logprob: -11.245881080627441
    7. ' ' → logprob: -11.995881080627441
    8. '   ' → logprob: -12.870881080627441
    9. '[' → logprob: -12.995881080627441
    10. ',' → logprob: -13.245881080627441

Token 157: ' ind' (ID: 1383)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13996417820453644
    2. '0' → logprob: -2.1399641036987305
    3. 'n' → logprob: -5.3899641036987305
    4. 'd' → logprob: -5.7649641036987305
    5. '2' → logprob: -6.1399641036987305
    6. 'dm' → logprob: -6.3899641036987305
    7. '-' → logprob: -7.2649641036987305
    8. ' ' → logprob: -8.01496410369873
    9. '(' → logprob: -9.88996410369873
    10. 'a' → logprob: -10.01496410369873

Token 158: '[a' (ID: 32035)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7921155095100403
    2. '+' → logprob: -1.0421154499053955
    3. '[ind' → logprob: -2.5421154499053955
    4. ' +' → logprob: -3.0421154499053955
    5. ']' → logprob: -4.417115688323975
    6. '   ' → logprob: -4.667115688323975
    7. '*' → logprob: -4.667115688323975
    8. ' ' → logprob: -5.042115688323975
    9. '[p' → logprob: -5.042115688323975
    10. ' *' → logprob: -5.292115688323975

Token 159: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023524489370174706
    2. ']+' → logprob: -9.250235557556152
    3. ' ]' → logprob: -10.250235557556152
    4. ')]' → logprob: -10.500235557556152
    5. ']]' → logprob: -11.125235557556152
    6. '])' → logprob: -11.375235557556152
    7. ')' → logprob: -11.375235557556152
    8. ']
' → logprob: -11.500235557556152
    9. ']*' → logprob: -11.750235557556152
    10. ']>' → logprob: -12.750235557556152

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08909399807453156
    2. '<|end|>' → logprob: -3.3390939235687256
    3. ' ' → logprob: -4.339094161987305
    4. '\n' → logprob: -4.839094161987305
    5. '
' → logprob: -5.214094161987305
    6. ' else' → logprob: -5.339094161987305
    7. '    
' → logprob: -5.589094161987305
    8. 'else' → logprob: -5.964094161987305
    9. ')' → logprob: -5.964094161987305
    10. '[' → logprob: -6.714094161987305

Token 161: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9730213284492493
    2. '   ' → logprob: -1.3480212688446045
    3. ' else' → logprob: -1.3480212688446045
    4. '\n' → logprob: -3.3480212688446045
    5. ' ' → logprob: -3.4730212688446045
    6. '
' → logprob: -4.723021507263184
    7. ' 
' → logprob: -5.098021507263184
    8. '    
' → logprob: -5.098021507263184
    9. '	else' → logprob: -5.348021507263184
    10. '<|end|>' → logprob: -6.223021507263184

Token 162: ' j' (ID: 441)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5800723433494568
    2. 'else' → logprob: -0.8300723433494568
    3. 'elif' → logprob: -6.455072402954102
    4. ' elif' → logprob: -6.705072402954102
    5. ' for' → logprob: -7.205072402954102
    6. ' ' → logprob: -8.455072402954102
    7. 'for' → logprob: -8.455072402954102
    8. '   ' → logprob: -9.955072402954102
    9. 'return' → logprob: -10.080072402954102
    10. ' return' → logprob: -10.205072402954102

Token 163: ''ai' (ID: 12480)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7713308930397034
    2. ' else' → logprob: -0.8963308930397034
    3. '   ' → logprob: -2.8963308334350586
    4. ' ' → logprob: -4.021330833435059
    5. ' elif' → logprob: -4.021330833435059
    6. 'elif' → logprob: -4.021330833435059
    7. '    ' → logprob: -5.146330833435059
    8. 'for' → logprob: -5.521330833435059
    9. ' for' → logprob: -5.896330833435059
    10. '       ' → logprob: -6.646330833435059

Token 164: ' mis' (ID: 4694)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9212881922721863
    2. 'else' → logprob: -1.296288251876831
    3. ' ' → logprob: -2.546288251876831
    4. '   ' → logprob: -2.796288251876831
    5. ' for' → logprob: -3.046288251876831
    6. 'elif' → logprob: -3.421288251876831
    7. 'for' → logprob: -3.546288251876831
    8. ' elif' → logprob: -4.171288013458252
    9. ' return' → logprob: -4.546288013458252
    10. 'return' → logprob: -4.921288013458252

Token 165: ' un' (ID: 537)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2131650745868683
    2. ' else' → logprob: -1.963165044784546
    3. '   ' → logprob: -3.713165044784546
    4. 'elif' → logprob: -4.088165283203125
    5. ' elif' → logprob: -5.963165283203125
    6. 'for' → logprob: -6.213165283203125
    7. 'return' → logprob: -6.588165283203125
    8. ' for' → logprob: -6.713165283203125
    9. ' ' → logprob: -7.213165283203125
    10. ' an' → logprob: -7.588165283203125

Token 166: ' max' (ID: 2999)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9060054421424866
    2. ' return' → logprob: -1.4060053825378418
    3. 'return' → logprob: -1.6560053825378418
    4. ' else' → logprob: -2.156005382537842
    5. ' for' → logprob: -3.906005382537842
    6. 'for' → logprob: -5.281005382537842
    7. ' ' → logprob: -5.531005382537842
    8. 'elif' → logprob: -5.531005382537842
    9. 'e' → logprob: -6.031005382537842
    10. '   ' → logprob: -6.156005382537842

Token 167: ' là' (ID: 8052)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5365934371948242
    2. ' else' → logprob: -1.1615934371948242
    3. '   ' → logprob: -2.536593437194824
    4. ' ' → logprob: -4.161593437194824
    5. 'elif' → logprob: -5.536593437194824
    6. ' elif' → logprob: -6.911593437194824
    7. '       ' → logprob: -7.786593437194824
    8. '	else' → logprob: -8.161593437194824
    9. '<|end|>' → logprob: -8.286593437194824
    10. ' 
' → logprob: -8.411593437194824

Token 168: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7094808220863342
    2. '   ' → logprob: -1.2094807624816895
    3. 'else' → logprob: -1.5844807624816895
    4. ' ' → logprob: -5.9594807624816895
    5. '       ' → logprob: -7.5844807624816895
    6. ' elif' → logprob: -7.5844807624816895
    7. 'elif' → logprob: -8.209481239318848
    8. ' for' → logprob: -8.334481239318848
    9. '	else' → logprob: -8.959481239318848
    10. '  ' → logprob: -9.209481239318848

Token 169: ' mais' (ID: 2899)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.46895357966423035
    2. ' for' → logprob: -1.7189536094665527
    3. 'else' → logprob: -2.2189536094665527
    4. '   ' → logprob: -2.9689536094665527
    5. 'for' → logprob: -3.7189536094665527
    6. ' ' → logprob: -5.593953609466553
    7. ' elif' → logprob: -5.968953609466553
    8. '       ' → logprob: -6.718953609466553
    9. 'elif' → logprob: -6.718953609466553
    10. '    ' → logprob: -6.843953609466553

Token 170: ' j' (ID: 441)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7378754019737244
    2. ' else' → logprob: -0.8628754019737244
    3. ' for' → logprob: -2.737875461578369
    4. 'for' → logprob: -3.862875461578369
    5. ' elif' → logprob: -5.612875461578369
    6. 'elif' → logprob: -5.862875461578369
    7. '   ' → logprob: -5.987875461578369
    8. ' return' → logprob: -6.487875461578369
    9. 'return' → logprob: -6.737875461578369
    10. '       ' → logprob: -7.737875461578369

Token 171: ''aurais' (ID: 149917)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09768406301736832
    2. ''ai' → logprob: -2.847684144973755
    3. ''aurais' → logprob: -4.597683906555176
    4. ' e' → logprob: -6.097683906555176
    5. ''espère' → logprob: -6.222683906555176
    6. 'u' → logprob: -6.347683906555176
    7. ' pense' → logprob: -6.347683906555176
    8. '   ' → logprob: -6.597683906555176
    9. ''aime' → logprob: -6.847683906555176
    10. ' continue' → logprob: -6.972683906555176

Token 172: ' pu' (ID: 2923)
  Prédit: ' plutôt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plutôt' → logprob: -1.5052937269210815
    2. ' préféré' → logprob: -2.630293846130371
    3. ' peut' → logprob: -2.755293846130371
    4. ' probablement' → logprob: -2.880293846130371
    5. ' besoin' → logprob: -3.005293846130371
    6. ':' → logprob: -3.130293846130371
    7. 'pas' → logprob: -3.505293846130371
    8. 'put' → logprob: -3.505293846130371
    9. ' pas' → logprob: -3.630293846130371
    10. '```' → logprob: -3.755293846130371

Token 173: ' faire' (ID: 8119)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5044242143630981
    2. ' ' → logprob: -1.7544242143630981
    3. '+' → logprob: -3.0044240951538086
    4. '   ' → logprob: -3.1294240951538086
    5. 'for' → logprob: -4.129424095153809
    6. ' for' → logprob: -4.254424095153809
    7. '=' → logprob: -4.254424095153809
    8. ':' → logprob: -4.379424095153809
    9. '[max' → logprob: -5.254424095153809
    10. 'return' → logprob: -5.379424095153809

Token 174: ' diff' (ID: 8868)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9889224171638489
    2. ' for' → logprob: -1.488922357559204
    3. ' l' → logprob: -1.863922357559204
    4. '   ' → logprob: -2.738922357559204
    5. 'else' → logprob: -2.863922357559204
    6. 'elif' → logprob: -3.113922357559204
    7. 'l' → logprob: -3.238922357559204
    8. ' else' → logprob: -4.488922595977783
    9. 'continue' → logprob: -5.363922595977783
    10. ' elif' → logprob: -5.363922595977783

Token 175: 'é' (ID: 377)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.264989972114563
    2. '       ' → logprob: -1.389989972114563
    3. '   ' → logprob: -2.0149898529052734
    4. ' ' → logprob: -2.6399898529052734
    5. '<|end|>' → logprob: -2.8899898529052734
    6. ' for' → logprob: -3.0149898529052734
    7. 'else' → logprob: -3.6399898529052734
    8. '(' → logprob: -3.7649898529052734
    9. ' else' → logprob: -4.264989852905273
    10. ',' → logprob: -4.639989852905273

Token 176: 'rem' (ID: 1935)
  Prédit: 'rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rent' → logprob: -0.5761411190032959
    2. 'rence' → logprob: -0.8261411190032959
    3. 'r' → logprob: -8.701141357421875
    4. 'rance' → logprob: -11.201141357421875
    5. 'rend' → logprob: -12.076141357421875
    6. 'ren' → logprob: -12.326141357421875
    7. 'ront' → logprob: -12.701141357421875
    8. ' rent' → logprob: -13.576141357421875
    9. 'rant' → logprob: -13.576141357421875
    10. 'rene' → logprob: -13.701141357421875

Token 177: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.02512195147573948
    2. 'ax' → logprob: -4.775122165679932
    3. '0' → logprob: -5.275122165679932
    4. 'range' → logprob: -5.650122165679932
    5. 'ix' → logprob: -7.025122165679932
    6. 'er' → logprob: -7.525122165679932
    7. 'ents' → logprob: -7.525122165679932
    8. 'max' → logprob: -7.900122165679932
    9. 'else' → logprob: -7.900122165679932
    10. 'and' → logprob: -8.025121688842773

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48998281359672546
    2. 'else' → logprob: -1.3649828433990479
    3. ' else' → logprob: -2.364982843399048
    4. '<|end|>' → logprob: -4.114982604980469
    5. ' ' → logprob: -4.614982604980469
    6. ' for' → logprob: -5.239982604980469
    7. '       ' → logprob: -5.989982604980469
    8. 'for' → logprob: -6.864982604980469
    9. '  ' → logprob: -7.364982604980469
    10. '.' → logprob: -7.489982604980469

Token 179: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' for' (ID: 395)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6880658864974976
    2. '   ' → logprob: -1.6880658864974976
    3. ' else' → logprob: -1.6880658864974976
    4. ' ' → logprob: -2.438066005706787
    5. ' for' → logprob: -4.563066005706787
    6. 'for' (adapté à ' for') → logprob: -4.688066005706787
    7. '
' → logprob: -4.813066005706787
    8. '<|end|>' → logprob: -5.938066005706787
    9. 'elif' → logprob: -6.688066005706787
    10. '[' → logprob: -6.938066005706787

Token 181: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04325186833739281
    2. 'i' → logprob: -3.6682517528533936
    3. ' dist' → logprob: -5.043251991271973
    4. ' p' → logprob: -5.918251991271973
    5. ' u' → logprob: -6.293251991271973
    6. ' x' → logprob: -6.543251991271973
    7. ' d' → logprob: -7.043251991271973
    8. ' distance' → logprob: -7.418251991271973
    9. ' j' → logprob: -7.918251991271973
    10. 'x' → logprob: -8.043251991271973

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006356984842568636
    2. 'in' → logprob: -5.131357192993164
    3. ',' → logprob: -8.006357192993164
    4. ' ' → logprob: -9.506357192993164
    5. ' i' → logprob: -11.881357192993164
    6. ' _' → logprob: -13.006357192993164
    7. '_' → logprob: -13.256357192993164
    8. ' ,' → logprob: -13.256357192993164
    9. ' ' → logprob: -13.756357192993164
    10. 'n' → logprob: -13.881357192993164

Token 183: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04858884960412979
    2. 'range' → logprob: -3.048588752746582
    3. '(range' → logprob: -14.798588752746582
    4. '	range' → logprob: -14.923588752746582
    5. ' ' → logprob: -15.048588752746582
    6. ' xrange' → logprob: -15.548588752746582
    7. 'r' → logprob: -16.6735897064209
    8. '   ' → logprob: -16.9235897064209
    9. ' rang' → logprob: -17.0485897064209
    10. 'rang' → logprob: -17.1735897064209

Token 184: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22625739872455597
    2. '(dm' → logprob: -1.6012574434280396
    3. '(len' → logprob: -7.10125732421875
    4. ' (' → logprob: -12.47625732421875
    5. '(l' → logprob: -12.85125732421875
    6. '(n' → logprob: -12.85125732421875
    7. '1' → logprob: -13.22625732421875
    8. '((' → logprob: -13.47625732421875
    9. '(d' → logprob: -13.72625732421875
    10. ' ' → logprob: -13.72625732421875

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038430105894804
    2. '):
' → logprob: -3.2884302139282227
    3. ' ):' → logprob: -8.038430213928223
    4. '   ' → logprob: -10.663430213928223
    5. '):
' → logprob: -11.663430213928223
    6. ' ):
' → logprob: -11.788430213928223
    7. '-' → logprob: -11.913430213928223
    8. ' ' → logprob: -11.913430213928223
    9. ')' → logprob: -12.163430213928223
    10. '  ' → logprob: -13.538430213928223

Token 186: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8427623510360718
    2. ' :' → logprob: -1.5927623510360718
    3. '   ' → logprob: -1.7177623510360718
    4. ' ' → logprob: -2.5927624702453613
    5. '       ' → logprob: -3.5927624702453613
    6. '<|end|>' → logprob: -3.5927624702453613
    7. '    ' → logprob: -3.9677624702453613
    8. ' if' → logprob: -4.217762470245361
    9. ' :
' → logprob: -4.342762470245361
    10. ',' → logprob: -5.467762470245361

Token 187: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6515724658966064
    2. ' if' → logprob: -1.2765724658966064
    3. ' l' → logprob: -2.7765724658966064
    4. ' ' → logprob: -3.0265724658966064
    5. '       ' → logprob: -3.2765724658966064
    6. '   ' → logprob: -3.4015724658966064
    7. 'for' → logprob: -4.651572227478027
    8. '    ' → logprob: -5.276572227478027
    9. 'if' → logprob: -6.026572227478027
    10. 'l' → logprob: -8.776572227478027

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0415157750248909
    2. ' :' → logprob: -3.666515827178955
    3. ':
' → logprob: -4.291515827178955
    4. ' :
' → logprob: -7.041515827178955
    5. '           ' → logprob: -7.666515827178955
    6. '[' → logprob: -10.666515350341797
    7. '        ' → logprob: -11.041515350341797
    8. '       ' → logprob: -11.666515350341797
    9. '   ' → logprob: -12.041515350341797
    10. '            ' → logprob: -12.541515350341797

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24000996351242065
    2. ' :' → logprob: -2.2400100231170654
    3. ':' → logprob: -2.6150100231170654
    4. ':
' → logprob: -4.740009784698486
    5. '        ' → logprob: -4.990009784698486
    6. ' l' → logprob: -5.240009784698486
    7. '       ' → logprob: -5.490009784698486
    8. ' :
' → logprob: -5.490009784698486
    9. '            ' → logprob: -7.115009784698486
    10. '    ' → logprob: -7.365009784698486

Token 190: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13529101014137268
    2. ':' → logprob: -3.26029109954834
    3. ' if' → logprob: -3.63529109954834
    4. '       ' → logprob: -3.88529109954834
    5. '   ' → logprob: -4.63529109954834
    6. ':
' → logprob: -5.01029109954834
    7. '    ' → logprob: -5.26029109954834
    8. '           ' → logprob: -5.63529109954834
    9. ' :' → logprob: -5.88529109954834
    10. ' ' → logprob: -5.88529109954834

Token 191: '[d' (ID: 48377)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1061963140964508
    2. '[' → logprob: -2.606196403503418
    3. '[max' → logprob: -3.731196403503418
    4. '[l' → logprob: -7.231196403503418
    5. '[ind' → logprob: -7.231196403503418
    6. '[len' → logprob: -8.231196403503418
    7. '[d' → logprob: -8.481196403503418
    8. '[min' → logprob: -8.856196403503418
    9. '[
' → logprob: -8.981196403503418
    10. 'max' → logprob: -9.106196403503418

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006339810788631439
    2. '[node' → logprob: -5.131340026855469
    3. '][' → logprob: -8.881340026855469
    4. ']' → logprob: -9.131340026855469
    5. '[' → logprob: -9.881340026855469
    6. '[p' → logprob: -10.131340026855469
    7. '[n' → logprob: -10.381340026855469
    8. 'i' → logprob: -11.131340026855469
    9. ' i' → logprob: -11.631340026855469
    10. ' [' → logprob: -12.006340026855469

Token 193: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058142513036727905
    2. ']+' → logprob: -3.1831424236297607
    3. ']]' → logprob: -4.30814266204834
    4. '[i' → logprob: -7.80814266204834
    5. '+' → logprob: -7.93314266204834
    6. ']==' → logprob: -8.68314266204834
    7. '//' → logprob: -8.68314266204834
    8. ' ]' → logprob: -8.68314266204834
    9. '[' → logprob: -9.55814266204834
    10. ' +' → logprob: -10.30814266204834

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38728344440460205
    2. '=' → logprob: -1.137283444404602
    3. '=max' → logprob: -8.012283325195312
    4. '+=' → logprob: -10.762283325195312
    5. '>' → logprob: -11.012283325195312
    6. ' +=' → logprob: -11.137283325195312
    7. 'max' → logprob: -11.387283325195312
    8. ' ' → logprob: -12.137283325195312
    9. '[' → logprob: -12.762283325195312
    10. ']=' → logprob: -13.512283325195312

Token 195: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01814994215965271
    2. ' max' → logprob: -4.0181498527526855
    3. '	max' → logprob: -16.893150329589844
    4. '   ' → logprob: -18.393150329589844
    5. '(max' → logprob: -18.893150329589844
    6. '           ' → logprob: -19.643150329589844
    7. '[max' → logprob: -19.893150329589844
    8. '_max' → logprob: -20.893150329589844
    9. '               ' → logprob: -21.143150329589844
    10. ',max' → logprob: -21.518150329589844

Token 196: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.375011444091797
    3. '(ind' → logprob: -15.875011444091797
    4. 'l' → logprob: -16.000011444091797
    5. '(
' → logprob: -16.500011444091797
    6. '	l' → logprob: -18.375011444091797
    7. ' (' → logprob: -19.375011444091797
    8. '[l' → logprob: -19.500011444091797
    9. '   ' → logprob: -19.625011444091797
    10. ' l' → logprob: -19.625011444091797

Token 197: '[d' (ID: 48377)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4431769847869873
    2. '[d' → logprob: -1.0681769847869873
    3. '[l' → logprob: -4.443177223205566
    4. '[' → logprob: -6.568177223205566
    5. ',' → logprob: -7.318177223205566
    6. 'l' → logprob: -8.443177223205566
    7. '[ind' → logprob: -8.693177223205566
    8. '   ' → logprob: -9.818177223205566
    9. '[
' → logprob: -10.943177223205566
    10. 'd' → logprob: -11.193177223205566

Token 198: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.375004768371582
    3. '{i' → logprob: -15.875004768371582
    4. ']' → logprob: -16.5000057220459
    5. '(i' → logprob: -16.6250057220459
    6. '[' → logprob: -16.6250057220459
    7. ' i' → logprob: -16.7500057220459
    8. ',i' → logprob: -17.0000057220459
    9. '[node' → logprob: -17.0000057220459
    10. '[I' → logprob: -17.3750057220459

Token 199: ']],' (ID: 37171)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34264442324638367
    2. '],' → logprob: -1.342644453048706
    3. ']],' → logprob: -3.967644453048706
    4. ']' → logprob: -4.842644214630127
    5. 'i' → logprob: -6.842644214630127
    6. '][' → logprob: -7.467644214630127
    7. ']][' → logprob: -8.592644691467285
    8. ']]' → logprob: -9.092644691467285
    9. '(i' → logprob: -10.092644691467285
    10. '       ' → logprob: -10.467644691467285

Token 200: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.31328150629997253
    2. ' ind' → logprob: -1.313281536102295
    3. '           ' → logprob: -12.188281059265137
    4. '[ind' → logprob: -12.188281059265137
    5. '(ind' → logprob: -13.563281059265137
    6. '       ' → logprob: -13.563281059265137
    7. '   ' → logprob: -13.688281059265137
    8. '    ' → logprob: -13.938281059265137
    9. ' ' → logprob: -14.063281059265137
    10. '          ' → logprob: -14.313281059265137

Token 201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006846757605671883
    2. '[a' → logprob: -7.62568473815918
    3. '[' → logprob: -9.00068473815918
    4. '][' → logprob: -10.37568473815918
    5. ' [' → logprob: -10.37568473815918
    6. ']' → logprob: -12.75068473815918
    7. '[node' → logprob: -13.25068473815918
    8. '   ' → logprob: -14.00068473815918
    9. 'i' → logprob: -14.25068473815918
    10. '[I' → logprob: -14.50068473815918

Token 202: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003054301778320223
    2. '])
' → logprob: -8.62530517578125
    3. ' ])' → logprob: -9.25030517578125
    4. ']' → logprob: -10.87530517578125
    5. ')' → logprob: -12.37530517578125
    6. ')])' → logprob: -13.62530517578125
    7. '])

' → logprob: -14.37530517578125
    8. ']+' → logprob: -14.50030517578125
    9. ']])' → logprob: -14.50030517578125
    10. ']))' → logprob: -14.50030517578125

Token 203: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9584323763847351
    2. 'dm' → logprob: -1.8334324359893799
    3. '1' → logprob: -2.08343243598938
    4. 'ind' → logprob: -2.45843243598938
    5. ' l' → logprob: -3.08343243598938
    6. ' ind' → logprob: -3.08343243598938
    7. ')' → logprob: -3.58343243598938
    8. 'd' → logprob: -3.58343243598938
    9. 'g' → logprob: -3.70843243598938
    10. ' dm' → logprob: -3.83343243598938

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006173660513013601
    2. ')
' → logprob: -8.125617027282715
    3. ' )' → logprob: -8.250617027282715
    4. '+' → logprob: -10.250617027282715
    5. '       ' → logprob: -11.500617027282715
    6. '   ' → logprob: -12.375617027282715
    7. '))' → logprob: -13.500617027282715
    8. ' +' → logprob: -13.625617027282715
    9. '           ' → logprob: -13.875617027282715
    10. '               ' → logprob: -14.375617027282715

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33616113662719727
    2. ')' → logprob: -1.8361611366271973
    3. ' except' → logprob: -2.3361611366271973
    4. 'except' → logprob: -3.8361611366271973
    5. '	except' → logprob: -5.836161136627197
    6. '<|end|>' → logprob: -5.961161136627197
    7. ')
' → logprob: -6.961161136627197
    8. '
' → logprob: -8.586160659790039
    9. '<|end|>' → logprob: -8.586160659790039
    10. ',' → logprob: -8.711160659790039

Token 206: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.15495382249355316
    2. '       ' → logprob: -2.529953718185425
    3. 'except' (adapté à ' except') → logprob: -3.404953718185425
    4. ')' → logprob: -3.654953718185425
    5. '	except' → logprob: -5.779953956604004
    6. '   ' → logprob: -7.029953956604004
    7. ')
' → logprob: -8.279953956604004
    8. '<|end|>' → logprob: -9.029953956604004
    9. ' ' → logprob: -9.279953956604004
    10. '
' → logprob: -9.779953956604004

Token 207: ' Exception' (ID: 6851)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.16367819905281067
    2. ' Index' → logprob: -1.9136781692504883
    3. 'Type' → logprob: -6.413678169250488
    4. '(Index' → logprob: -7.038678169250488
    5. ':' → logprob: -7.413678169250488
    6. 'Value' → logprob: -8.413678169250488
    7. ' Type' → logprob: -10.163678169250488
    8. 'Exception' → logprob: -10.913678169250488
    9. ' Value' → logprob: -10.913678169250488
    10. '(Value' → logprob: -11.663678169250488

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009147809818387032
    2. ' as' → logprob: -4.884147644042969
    3. ':
' → logprob: -7.509147644042969
    4. ' :' → logprob: -7.759147644042969
    5. '[' → logprob: -8.134147644042969
    6. '):' → logprob: -9.759147644042969
    7. '           ' → logprob: -9.884147644042969
    8. '[Index' → logprob: -10.634147644042969
    9. 'as' → logprob: -10.759147644042969
    10. ',' → logprob: -11.009147644042969

Token 209: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10270888358354568
    2. '           ' → logprob: -2.4777088165283203
    3. ' as' → logprob: -5.35270881652832
    4. ':
' → logprob: -5.35270881652832
    5. '):' → logprob: -6.97770881652832
    6. ' pass' → logprob: -7.60270881652832
    7. '               ' → logprob: -7.60270881652832
    8. '       ' → logprob: -7.72770881652832
    9. ' :' → logprob: -8.22770881652832
    10. '   ' → logprob: -8.35270881652832

Token 210: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.11180062592029572
    2. 'pass' → logprob: -2.4868006706237793
    3. 'Index' → logprob: -4.111800670623779
    4. ' Index' → logprob: -6.361800670623779
    5. 'None' → logprob: -6.986800670623779
    6. ' l' → logprob: -6.986800670623779
    7. 'Type' → logprob: -7.361800670623779
    8. ' continue' → logprob: -7.986800670623779
    9. ' None' → logprob: -8.236800193786621
    10. '           ' → logprob: -8.236800193786621

Token 211: ' bon' (ID: 4846)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.228174090385437
    2. 'pass' → logprob: -1.603174090385437
    3. ' continue' → logprob: -6.603174209594727
    4. ' l' → logprob: -7.853174209594727
    5. 'continue' → logprob: -7.853174209594727
    6. '           ' → logprob: -8.103174209594727
    7. 'l' → logprob: -9.728174209594727
    8. ' break' → logprob: -9.728174209594727
    9. 'print' → logprob: -9.853174209594727
    10. '   ' → logprob: -10.228174209594727

Token 212: ' normalement' (ID: 164432)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.0331713892519474
    2. '           ' → logprob: -4.6581711769104
    3. ' continue' → logprob: -4.6581711769104
    4. '            ' → logprob: -5.4081711769104
    5. ' break' → logprob: -5.6581711769104
    6. 'pass' → logprob: -6.1581711769104
    7. '               ' → logprob: -6.6581711769104
    8. ' ' → logprob: -6.7831711769104
    9. ' ' → logprob: -8.283171653747559
    10. ' l' → logprob: -8.783171653747559

Token 213: ' d' (ID: 272)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.06229804828763008
    2. 'pass' → logprob: -3.062298059463501
    3. '           ' → logprob: -4.937297821044922
    4. ' continue' → logprob: -5.437297821044922
    5. '            ' → logprob: -7.687297821044922
    6. '               ' → logprob: -7.937297821044922
    7. ' break' → logprob: -8.062297821044922
    8. 'continue' → logprob: -8.312297821044922
    9. ' l' → logprob: -8.437297821044922
    10. ' print' → logprob: -9.562297821044922

Token 214: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000561373308300972
    2. ' ==' → logprob: -8.750561714172363
    3. ')' → logprob: -9.000561714172363
    4. '==' → logprob: -9.375561714172363
    5. 'i' → logprob: -9.750561714172363
    6. '[node' → logprob: -10.125561714172363
    7. ' is' → logprob: -10.500561714172363
    8. '[' → logprob: -10.750561714172363
    9. ' i' → logprob: -12.000561714172363
    10. '[d' → logprob: -12.250561714172363

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26329362392425537
    2. ' ==' → logprob: -2.138293743133545
    3. ']==' → logprob: -2.763293743133545
    4. '==' → logprob: -3.263293743133545
    5. '[' → logprob: -5.388293743133545
    6. '==-' → logprob: -5.638293743133545
    7. '[i' → logprob: -5.888293743133545
    8. ' ]' → logprob: -7.513293743133545
    9. ' <' → logprob: -8.763293266296387
    10. '   ' → logprob: -9.638293266296387

Token 216: ' devrait' (ID: 52773)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3608424663543701
    2. '==' → logprob: -1.4858424663543701
    3. ' is' → logprob: -2.98584246635437
    4. ' <' → logprob: -4.485842704772949
    5. ' >=' → logprob: -5.735842704772949
    6. '<' → logprob: -6.110842704772949
    7. '==-' → logprob: -6.110842704772949
    8. '>=' → logprob: -6.235842704772949
    9. ')' → logprob: -6.735842704772949
    10. ' >' → logprob: -7.110842704772949

Token 217: ' jamais' (ID: 23077)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7244275808334351
    2. ' never' → logprob: -1.599427580833435
    3. '>=' → logprob: -2.5994277000427246
    4. '>' → logprob: -2.8494277000427246
    5. ' ==' → logprob: -2.9744277000427246
    6. ' be' → logprob: -3.5994277000427246
    7. '=' → logprob: -3.7244277000427246
    8. ' not' → logprob: -4.099427700042725
    9. '==-' → logprob: -4.474427700042725
    10. ')' → logprob: -4.849427700042725

Token 218: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7253029942512512
    2. 'être' → logprob: -1.2253029346466064
    3. ' be' → logprob: -1.6003029346466064
    4. ' etre' → logprob: -5.1003031730651855
    5. 'etre' → logprob: -5.4753031730651855
    6. '>' → logprob: -6.2253031730651855
    7. ' dépasser' → logprob: -6.3503031730651855
    8. '<' → logprob: -6.4753031730651855
    9. ''être' → logprob: -6.6003031730651855
    10. 'be' → logprob: -6.7253031730651855

Token 219: ' out' (ID: 842)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008747772313654423
    2. ' -' → logprob: -5.633747577667236
    3. '0' → logprob: -5.758747577667236
    4. '-index' → logprob: -7.008747577667236
    5. '-out' → logprob: -8.258748054504395
    6. ' ' → logprob: -8.633748054504395
    7. '-n' → logprob: -9.383748054504395
    8. ' out' → logprob: -9.383748054504395
    9. 'None' → logprob: -9.383748054504395
    10. 'out' → logprob: -9.633748054504395

Token 220: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4176480770111084
    2. 'of' → logprob: -1.1676480770111084
    3. 'dex' → logprob: -4.7926483154296875
    4. 'Of' → logprob: -5.0426483154296875
    5. '_of' → logprob: -5.4176483154296875
    6. 'f' → logprob: -5.6676483154296875
    7. 'Index' → logprob: -6.1676483154296875
    8. '  ' → logprob: -6.5426483154296875
    9. '_index' → logprob: -7.2926483154296875
    10. 'index' → logprob: -7.7926483154296875

Token 221: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006114058778621256
    2. 'index' → logprob: -8.125611305236816
    3. 'bounds' → logprob: -8.875611305236816
    4. 'list' → logprob: -9.500611305236816
    5. 'bound' → logprob: -9.750611305236816
    6. ' range' → logprob: -10.750611305236816
    7. 'rang' → logprob: -11.000611305236816
    8. 'ranges' → logprob: -13.750611305236816
    9. '-range' → logprob: -14.125611305236816
    10. 'r' → logprob: -14.125611305236816

Token 222: '...
' (ID: 4908)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6185247302055359
    2. ')' → logprob: -1.1185247898101807
    3. ' pass' → logprob: -2.7435247898101807
    4. '       ' → logprob: -3.2435247898101807
    5. '               ' → logprob: -4.868524551391602
    6. ' except' → logprob: -4.868524551391602
    7. '   ' → logprob: -5.493524551391602
    8. ',' → logprob: -5.493524551391602
    9. ':' → logprob: -6.618524551391602
    10. ':
' → logprob: -6.743524551391602

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43843770027160645
    2. ' pass' → logprob: -1.0634377002716064
    3. ' continue' → logprob: -5.438437461853027
    4. 'pass' → logprob: -6.063437461853027
    5. '       ' → logprob: -6.313437461853027
    6. '   ' → logprob: -7.688437461853027
    7. '               ' → logprob: -8.063437461853027
    8. '0' → logprob: -8.313437461853027
    9. 'continue' → logprob: -9.813437461853027
    10. ' ' → logprob: -10.813437461853027

Token 224: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.08282041549682617
    2. ' pass' → logprob: -2.582820415496826
    3. 'continue' → logprob: -6.332820415496826
    4. 'print' → logprob: -7.207820415496826
    5. '   ' → logprob: -7.707820415496826
    6. 'break' → logprob: -7.832820415496826
    7. 'l' → logprob: -8.082820892333984
    8. ' continue' → logprob: -9.082820892333984
    9. '           ' → logprob: -9.832820892333984
    10. '       ' → logprob: -10.832820892333984

Token 225: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7895376682281494
    2. '<|end|>' → logprob: -1.1645376682281494
    3. ')' → logprob: -2.2895376682281494
    4. ']' → logprob: -3.0395376682281494
    5. ' ' → logprob: -3.4145376682281494
    6. '\n' → logprob: -3.7895376682281494
    7. '\' → logprob: -5.28953742980957
    8. ' 
' → logprob: -5.53953742980957
    9. '
' → logprob: -6.16453742980957
    10. '    
' → logprob: -6.28953742980957

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3789677321910858
    2. ' =' → logprob: -1.2539677619934082
    3. '[' → logprob: -3.753967761993408
    4. '[:]' → logprob: -6.503967761993408
    5. ' +=' → logprob: -6.878967761993408
    6. '.append' → logprob: -6.878967761993408
    7. '[]' → logprob: -7.253967761993408
    8. '_' → logprob: -7.378967761993408
    9. '+=' → logprob: -7.503967761993408
    10. '.' → logprob: -8.12896728515625

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6782258749008179
    2. 'max' → logprob: -1.8032258749008179
    3. ' max' → logprob: -1.8032258749008179
    4. ' ' → logprob: -3.0532259941101074
    5. '[]' → logprob: -3.4282259941101074
    6. '[max' → logprob: -3.8032259941101074
    7. '[' → logprob: -4.053225994110107
    8. ' [' → logprob: -4.553225994110107
    9. ' []' → logprob: -5.178225994110107
    10. ' l' → logprob: -5.428225994110107

Token 230: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27987948060035706
    2. 'max' → logprob: -2.404879570007324
    3. '[' → logprob: -2.904879570007324
    4. '[]' → logprob: -3.654879570007324
    5. 'l' → logprob: -3.904879570007324
    6. '[max' → logprob: -4.029879570007324
    7. 'float' → logprob: -4.529879570007324
    8. '-' → logprob: -5.029879570007324
    9. '[-' → logprob: -5.154879570007324
    10. '[l' → logprob: -5.154879570007324

Token 231: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17590701580047607
    2. '+' → logprob: -2.1759071350097656
    3. '<|end|>' → logprob: -4.425907135009766
    4. '+
' → logprob: -4.800907135009766
    5. ' +' → logprob: -5.425907135009766
    6. 'for' → logprob: -5.425907135009766
    7. ' ' → logprob: -5.800907135009766
    8. ' 
' → logprob: -5.925907135009766
    9. ',' → logprob: -6.300907135009766
    10. ' for' → logprob: -6.300907135009766

Token 232: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7071080207824707
    2. '<|end|>' → logprob: -1.3321080207824707
    3. ' +' → logprob: -2.7071080207824707
    4. '
' → logprob: -2.8321080207824707
    5. ' ' → logprob: -3.2071080207824707
    6. ',' → logprob: -3.7071080207824707
    7. ' 
' → logprob: -4.707108020782471
    8. '+
' → logprob: -4.832108020782471
    9. ' for' → logprob: -5.082108020782471
    10. '   ' → logprob: -5.082108020782471

Token 233: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6975504159927368
    2. 'for' (adapté à ' for') → logprob: -0.6975504159927368
    3. '   ' → logprob: -5.572550296783447
    4. ' i' → logprob: -8.447550773620605
    5. '
' → logprob: -9.447550773620605
    6. 'i' → logprob: -9.447550773620605
    7. ' ' → logprob: -10.197550773620605
    8. 'max' → logprob: -10.697550773620605
    9. ' 
' → logprob: -10.822550773620605
    10. ' res' → logprob: -10.947550773620605

Token 234: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05509047210216522
    2. 'i' → logprob: -2.9300904273986816
    3. ' _' → logprob: -9.43009090423584
    4. '_i' → logprob: -9.93009090423584
    5. '_' → logprob: -10.18009090423584
    6. ' ' → logprob: -11.30509090423584
    7. ' x' → logprob: -11.55509090423584
    8. '	i' → logprob: -11.93009090423584
    9. ' j' → logprob: -13.05509090423584
    10. 'x' → logprob: -13.05509090423584

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038074664771556854
    2. 'in' → logprob: -3.2880747318267822
    3. ' ' → logprob: -11.163074493408203
    4. '	in' → logprob: -11.913074493408203
    5. ',' → logprob: -12.038074493408203
    6. '_in' → logprob: -13.288074493408203
    7. 'n' → logprob: -14.038074493408203
    8. ' ' → logprob: -14.288074493408203
    9. 'import' → logprob: -14.913074493408203
    10. ',in' → logprob: -15.413074493408203

Token 236: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08083862066268921
    2. ' l' → logprob: -2.705838680267334
    3. ' range' → logprob: -4.955838680267334
    4. 'range' → logprob: -5.580838680267334
    5. '	l' → logprob: -11.580838203430176
    6. '   ' → logprob: -12.205838203430176
    7. ' ' → logprob: -12.205838203430176
    8. '[l' → logprob: -12.330838203430176
    9. '  ' → logprob: -13.768338203430176
    10. ' ' → logprob: -14.018338203430176

Token 237: '[:-' (ID: 63556)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -2.963691804325208e-05
    2. ' :' → logprob: -11.500029563903809
    3. ':
' → logprob: -12.000029563903809
    4. ' in' → logprob: -12.500029563903809
    5. 'in' → logprob: -13.125029563903809
    6. '[' → logprob: -13.250029563903809
    7. '+:' → logprob: -13.625029563903809
    8. '>' → logprob: -13.750029563903809
    9. '=' → logprob: -14.125029563903809
    10. ':max' → logprob: -14.375029563903809

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.250008583068848
    3. '   ' → logprob: -13.375008583068848
    4. '-' → logprob: -14.375008583068848
    5. '2' → logprob: -14.875008583068848
    6. '...' → logprob: -15.437508583068848
    7. ']' → logprob: -16.06250762939453
    8. '```' → logprob: -16.18750762939453
    9. '
' → logprob: -16.37500762939453
    10. '(' → logprob: -16.93750762939453

Token 239: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0011367622064426541
    2. ']:
' → logprob: -6.876136779785156
    3. ']' → logprob: -9.501136779785156
    4. ']:
' → logprob: -11.376136779785156
    5. ' ]' → logprob: -11.501136779785156
    6. ':' → logprob: -12.501136779785156
    7. ']+' → logprob: -13.251136779785156
    8. '+' → logprob: -14.626136779785156
    9. ']:

' → logprob: -14.751136779785156
    10. '   ' → logprob: -15.126136779785156

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044097015634179115
    2. ' if' → logprob: -6.5044097900390625
    3. ' res' → logprob: -6.6294097900390625
    4. 'res' → logprob: -7.2544097900390625
    5. ':' → logprob: -7.8794097900390625
    6. 'if' → logprob: -9.254409790039062
    7. ':
' → logprob: -9.254409790039062
    8. '+' → logprob: -9.629409790039062
    9. '   ' → logprob: -9.754409790039062
    10. ',' → logprob: -10.129409790039062

Token 241: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.05001828074455261
    2. 'if' → logprob: -3.050018310546875
    3. '   ' → logprob: -7.425018310546875
    4. ' if' → logprob: -7.800018310546875
    5. ' res' → logprob: -7.800018310546875
    6. '
' → logprob: -12.425018310546875
    7. '       ' → logprob: -12.425018310546875
    8. 'for' → logprob: -13.175018310546875
    9. '	res' → logprob: -13.800018310546875
    10. '_res' → logprob: -14.550018310546875

Token 242: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3976331353187561
    2. ' *=' → logprob: -1.1476330757141113
    3. '=' → logprob: -4.647633075714111
    4. ' =' → logprob: -7.772633075714111
    5. '+=' → logprob: -8.14763355255127
    6. '*' → logprob: -8.27263355255127
    7. ' +=' → logprob: -9.14763355255127
    8. ' <<=' → logprob: -10.52263355255127
    9. ' *' → logprob: -11.77263355255127
    10. '   ' → logprob: -12.27263355255127

Token 243: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06039472296833992
    2. '(x' → logprob: -3.185394763946533
    3. 'max' → logprob: -5.310394763946533
    4. 'dm' → logprob: -5.310394763946533
    5. '(' → logprob: -5.935394763946533
    6. '2' → logprob: -6.060394763946533
    7. '(max' → logprob: -6.435394763946533
    8. '(dm' → logprob: -8.310394287109375
    9. ' x' → logprob: -8.685394287109375
    10. '(n' → logprob: -10.060394287109375

Token 244: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15074513852596283
    2. ' 
' → logprob: -2.775745153427124
    3. '+' → logprob: -3.025745153427124
    4. '    
' → logprob: -4.275744915008545
    5. '  
' → logprob: -5.400744915008545
    6. '\n' → logprob: -5.775744915008545
    7. 'return' → logprob: -6.400744915008545
    8. '+
' → logprob: -6.400744915008545
    9. ' +' → logprob: -7.025744915008545
    10. '   ' → logprob: -7.525744915008545

Token 245: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49847912788391113
    2. ' 
' → logprob: -1.7484791278839111
    3. '   ' → logprob: -2.998479127883911
    4. '    
' → logprob: -3.498479127883911
    5. ' return' → logprob: -3.748479127883911
    6. 'return' → logprob: -3.873479127883911
    7. ' ' → logprob: -3.998479127883911
    8. ')' → logprob: -3.998479127883911
    9. '  
' → logprob: -4.123478889465332
    10. '\n' → logprob: -4.623478889465332

Token 246: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27797749638557434
    2. ' 
' → logprob: -2.777977466583252
    3. 'return' (adapté à ' return') → logprob: -2.902977466583252
    4. ' return' → logprob: -3.402977466583252
    5. '\n' → logprob: -3.652977466583252
    6. '   ' → logprob: -3.777977466583252
    7. '    
' → logprob: -4.027977466583252
    8. ' ' → logprob: -5.152977466583252
    9. '\' → logprob: -5.402977466583252
    10. '  
' → logprob: -5.527977466583252

Token 247: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3132619559764862
    2. 'res' → logprob: -1.3132619857788086
    3. '(res' → logprob: -16.313261032104492
    4. ' ' → logprob: -16.438261032104492
    5. '	res' → logprob: -17.063261032104492
    6. ' max' → logprob: -17.688261032104492
    7. 'max' → logprob: -17.938261032104492
    8. ' ' → logprob: -18.563261032104492
    9. '$res' → logprob: -18.563261032104492
    10. '_res' → logprob: -18.688261032104492

Token 248: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0175367593765259
    2. ')' → logprob: -1.2675367593765259
    3. '<|end|>' → logprob: -1.2675367593765259
    4. ' ' → logprob: -3.1425366401672363
    5. '
' → logprob: -4.517536640167236
    6. '+' → logprob: -5.017536640167236
    7. ']' → logprob: -5.392536640167236
    8. '```' → logprob: -5.892536640167236
    9. '(' → logprob: -6.267536640167236
    10. '<|end|>' → logprob: -7.267536640167236

Token 249: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3174642324447632
    2. '<|end|>' → logprob: -1.8174642324447632
    3. ' ' → logprob: -2.9424643516540527
    4. '[' → logprob: -3.4424643516540527
    5. '#' → logprob: -5.442464351654053
    6. '+' → logprob: -5.567464351654053
    7. '```' → logprob: -5.692464351654053
    8. '
' → logprob: -5.692464351654053
    9. '(' → logprob: -5.942464351654053
    10. ']' → logprob: -6.317464351654053

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9274626970291138
    2. ',' → logprob: -1.3024626970291138
    3. '<|end|>' → logprob: -1.3024626970291138
    4. '=' → logprob: -3.052462577819824
    5. ')' → logprob: -4.927462577819824
    6. '<|end|>' → logprob: -6.177462577819824
    7. ' ,' → logprob: -6.927462577819824
    8. ' ' → logprob: -7.052462577819824
    9. '#' → logprob: -7.677462577819824
    10. ' n' → logprob: -7.802462577819824

Token 251: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2794302701950073
    2. '10' → logprob: -1.5294302701950073
    3. 'int' → logprob: -1.6544302701950073
    4. '5' → logprob: -1.9044302701950073
    5. ' int' → logprob: -1.9044302701950073
    6. '0' → logprob: -5.029430389404297
    7. '7' → logprob: -5.529430389404297
    8. '6' → logprob: -5.904430389404297
    9. '4' → logprob: -6.904430389404297
    10. '3' → logprob: -6.904430389404297

Token 252: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16155296564102173
    2. '(' → logprob: -1.911552906036377
    3. '()' → logprob: -6.911552906036377
    4. 'input' → logprob: -8.536553382873535
    5. '('' → logprob: -9.411553382873535
    6. '(
' → logprob: -10.911553382873535
    7. '("' → logprob: -11.161553382873535
    8. '=input' → logprob: -11.661553382873535
    9. '("")' → logprob: -12.161553382873535
    10. ' (' → logprob: -13.286553382873535

Token 253: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003263153601437807
    2. '()' → logprob: -5.753262996673584
    3. ')' → logprob: -9.628263473510742
    4. '())
' → logprob: -11.253263473510742
    5. '(' → logprob: -12.253263473510742
    6. '().' → logprob: -14.253263473510742
    7. ' ())' → logprob: -14.753263473510742
    8. '()
' → logprob: -15.628263473510742
    9. '())

' → logprob: -15.878263473510742
    10. '());' → logprob: -16.628263473510742

Token 254: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' nombre' (ID: 9733)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.36501544713974
    2. 'dm' → logprob: -1.3650155067443848
    3. 'm' → logprob: -3.3650155067443848
    4. 'for' → logprob: -4.240015506744385
    5. '#' → logprob: -7.865015506744385
    6. 'graph' → logprob: -8.490015029907227
    7. 'n' → logprob: -8.740015029907227
    8. ' g' → logprob: -8.865015029907227
    9. 'gm' → logprob: -9.115015029907227
    10. ' for' → logprob: -9.740015029907227

Token 257: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' noe' (ID: 49921)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04553689435124397
    2. 'som' → logprob: -4.170536994934082
    3. ' somm' → logprob: -4.545536994934082
    4. 'nodes' → logprob: -5.545536994934082
    5. 'vertices' → logprob: -5.920536994934082
    6. 'n' → logprob: -5.920536994934082
    7. 'points' → logprob: -6.295536994934082
    8. 'cases' → logprob: -7.295536994934082
    9. 'no' → logprob: -7.670536994934082
    10. ' noe' → logprob: -7.670536994934082

Token 259: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.00500651728361845
    2. 'ds' → logprob: -5.380006313323975
    3. 'ud' → logprob: -8.380006790161133
    4. 's' → logprob: -9.630006790161133
    5. '```' → logprob: -9.755006790161133
    6. 'd' → logprob: -11.255006790161133
    7. 'nds' → logprob: -12.630006790161133
    8. '#' → logprob: -12.755006790161133
    9. '   ' → logprob: -13.505006790161133
    10. 'e' → logprob: -13.630006790161133

Token 260: ' ?
' (ID: 19740)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'g' (ID: 70)
  Prédit: 'dm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dm' → logprob: -0.07911086082458496
    2. 'g' → logprob: -3.079110860824585
    3. 'm' → logprob: -4.079111099243164
    4. ' dm' → logprob: -4.954111099243164
    5. ' g' → logprob: -5.829111099243164
    6. 'n' → logprob: -6.579111099243164
    7. ' m' → logprob: -7.454111099243164
    8. 'graph' → logprob: -8.704111099243164
    9. 'for' → logprob: -8.829111099243164
    10. 'd' → logprob: -9.079111099243164

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231544971466064
    2. ' =' → logprob: -0.8981544971466064
    3. '[' → logprob: -11.398154258728027
    4. '=[]' → logprob: -11.648154258728027
    5. '=[' → logprob: -12.898154258728027
    6. ',' → logprob: -13.898154258728027
    7. ')' → logprob: -14.148154258728027
    8. ' =
' → logprob: -14.148154258728027
    9. ' =[' → logprob: -14.273154258728027
    10. '=
' → logprob: -14.398154258728027

Token 263: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013102402444928885
    2. ' [[]' → logprob: -6.751310348510742
    3. '[]' → logprob: -9.501310348510742
    4. '{' → logprob: -9.751310348510742
    5. '[]
' → logprob: -12.751310348510742
    6. '[n' → logprob: -13.501310348510742
    7. '[[' → logprob: -13.876310348510742
    8. 'default' → logprob: -14.501310348510742
    9. '[int' → logprob: -15.376310348510742
    10. '{}' → logprob: -15.376310348510742

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25460195541381836
    2. ' for' → logprob: -1.5046019554138184
    3. '(n' → logprob: -6.379601955413818
    4. ']' → logprob: -7.379601955413818
    5. 'n' → logprob: -9.254602432250977
    6. '
' → logprob: -9.504602432250977
    7. '(' → logprob: -10.254602432250977
    8. ' ' → logprob: -10.379602432250977
    9. '()' → logprob: -10.629602432250977
    10. '   ' → logprob: -10.754602432250977

Token 265: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.4849443838757e-06
    2. ' _' → logprob: -12.750004768371582
    3. ' range' → logprob: -13.625004768371582
    4. 'range' → logprob: -15.625004768371582
    5. ' in' → logprob: -16.250003814697266
    6. '_range' → logprob: -17.125003814697266
    7. 'in' → logprob: -17.625003814697266
    8. '_
' → logprob: -19.125003814697266
    9. '_

' → logprob: -19.625003814697266
    10. ' ' → logprob: -20.375003814697266

Token 266: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7181387543678284
    2. 'range' → logprob: -0.7181387543678284
    3. ' range' → logprob: -3.7181386947631836
    4. 'in' → logprob: -8.468138694763184
    5. '_range' → logprob: -9.218138694763184
    6. ' in' → logprob: -9.968138694763184
    7. 'n' → logprob: -10.968138694763184
    8. 'i' → logprob: -10.968138694763184
    9. ' _' → logprob: -12.093138694763184
    10. ' ' → logprob: -12.968138694763184

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023247575387358665
    2. ' range' → logprob: -3.773247480392456
    3. '_' → logprob: -13.273247718811035
    4. '_range' → logprob: -14.898247718811035
    5. 'n' → logprob: -17.64824676513672
    6. '(range' → logprob: -18.89824676513672
    7. ' ' → logprob: -19.02324676513672
    8. '	range' → logprob: -19.14824676513672
    9. '   ' → logprob: -19.39824676513672
    10. 'rang' → logprob: -20.39824676513672

Token 268: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.39971816539764404
    2. 'n' → logprob: -1.149718165397644
    3. 'range' → logprob: -4.399718284606934
    4. ' range' → logprob: -8.149718284606934
    5. ' n' → logprob: -8.649718284606934
    6. '_' → logprob: -11.649718284606934
    7. '(' → logprob: -12.399718284606934
    8. '_n' → logprob: -12.399718284606934
    9. '(range' → logprob: -13.399718284606934
    10. ' ' → logprob: -14.899718284606934

Token 269: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.959636033978313e-05
    2. ')]
' → logprob: -9.375089645385742
    3. ')' → logprob: -13.250089645385742
    4. ']' → logprob: -13.750089645385742
    5. ')]

' → logprob: -14.250089645385742
    6. '])' → logprob: -14.875089645385742
    7. ')]
' → logprob: -15.000089645385742
    8. ' )' → logprob: -15.125089645385742
    9. '])]' → logprob: -16.625089645385742
    10. ')])' → logprob: -16.875089645385742

Token 270: 'ind' (ID: 521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3919680118560791
    2. ' for' → logprob: -1.391968011856079
    3. '<|end|>' → logprob: -3.266968011856079
    4. '
' → logprob: -3.641968011856079
    5. 'n' → logprob: -4.5169677734375
    6. ' 
' → logprob: -8.3919677734375
    7. '<|end|>' → logprob: -9.3919677734375
    8. '  
' → logprob: -9.6419677734375
    9. '\n' → logprob: -11.6419677734375
    10. '```' → logprob: -11.6419677734375

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741451144218445
    2. '=' → logprob: -0.9741451144218445
    3. '[' → logprob: -10.09914493560791
    4. ',' → logprob: -11.59914493560791
    5. ' =[' → logprob: -12.72414493560791
    6. 's' → logprob: -12.84914493560791
    7. ']' → logprob: -13.34914493560791
    8. ' =
' → logprob: -13.47414493560791
    9. '=input' → logprob: -13.84914493560791
    10. '[n' → logprob: -13.84914493560791

Token 272: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.954933226108551
    2. '[' → logprob: -1.0799331665039062
    3. '{}' → logprob: -1.8299331665039062
    4. '[list' → logprob: -3.0799331665039062
    5. ' [' → logprob: -3.4549331665039062
    6. ' list' → logprob: -3.7049331665039062
    7. '[int' → logprob: -5.204933166503906
    8. '[]' → logprob: -6.079933166503906
    9. '{' → logprob: -6.079933166503906
    10. 'dict' → logprob: -7.454933166503906

Token 273: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08054093271493912
    2. '0' → logprob: -2.580540895462036
    3. '1' → logprob: -6.705541133880615
    4. ' int' → logprob: -8.830540657043457
    5. 'n' → logprob: -9.330540657043457
    6. 'i' → logprob: -9.455540657043457
    7. 'map' → logprob: -10.330540657043457
    8. '(int' → logprob: -10.330540657043457
    9. ']' → logprob: -11.955540657043457
    10. 'len' → logprob: -12.205540657043457

Token 274: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036456878297030926
    2. ' ]' → logprob: -6.128645896911621
    3. ' for' → logprob: -7.128645896911621
    4. '(n' → logprob: -7.878645896911621
    5. 'for' → logprob: -8.878645896911621
    6. 'n' → logprob: -9.503645896911621
    7. ' n' → logprob: -11.378645896911621
    8. ']
' → logprob: -11.503645896911621
    9. 'in' → logprob: -11.878645896911621
    10. ')' → logprob: -12.003645896911621

Token 275: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9476991891860962
    2. 'for' → logprob: -1.0726991891860962
    3. ' for' → logprob: -1.6976991891860962
    4. ']' → logprob: -3.4476990699768066
    5. '(n' → logprob: -3.5726990699768066
    6. '(' → logprob: -4.447699069976807
    7. ',n' → logprob: -5.447699069976807
    8. 'range' → logprob: -5.947699069976807
    9. '(range' → logprob: -6.697699069976807
    10. '=' → logprob: -6.822699069976807

Token 276: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020961537957191467
    2. '(n' → logprob: -3.8959615230560303
    3. '(' → logprob: -8.02096176147461
    4. ' n' → logprob: -10.02096176147461
    5. '100' → logprob: -11.77096176147461
    6. ' (' → logprob: -11.77096176147461
    7. '10' → logprob: -12.39596176147461
    8. '101' → logprob: -12.39596176147461
    9. '26' → logprob: -13.52096176147461
    10. '500' → logprob: -13.64596176147461

Token 277: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.698698704596609e-05
    2. ' for' → logprob: -9.250097274780273
    3. '
' → logprob: -15.000097274780273
    4. 'n' → logprob: -15.375097274780273
    5. 'i' → logprob: -16.375097274780273
    6. '```' → logprob: -16.500097274780273
    7. '<|end|>' → logprob: -16.750097274780273
    8. 's' → logprob: -17.750097274780273
    9. 'import' → logprob: -18.000097274780273
    10. 'range' → logprob: -18.125097274780273

Token 278: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003166353271808475
    2. ' for' → logprob: -8.125316619873047
    3. '<|end|>' → logprob: -10.875316619873047
    4. 'n' → logprob: -14.500316619873047
    5. '<|end|>' → logprob: -15.125316619873047
    6. '#' → logprob: -15.625316619873047
    7. '	for' → logprob: -16.000316619873047
    8. 's' → logprob: -16.125316619873047
    9. 'range' → logprob: -16.250316619873047
    10. 'i' → logprob: -16.625316619873047

Token 279: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004645026754587889
    2. 'i' → logprob: -6.129644870758057
    3. ' _' → logprob: -6.754644870758057
    4. ' i' → logprob: -7.004644870758057
    5. '_i' → logprob: -7.879644870758057
    6. '_=' → logprob: -12.504645347595215
    7. ' range' → logprob: -14.504645347595215
    8. '_]' → logprob: -15.129645347595215
    9. 'range' → logprob: -15.629645347595215
    10. '_u' → logprob: -16.2546443939209

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026744691655039787
    2. 'in' → logprob: -3.6517446041107178
    3. '_' → logprob: -7.776744842529297
    4. 'n' → logprob: -12.276744842529297
    5. ' _' → logprob: -12.276744842529297
    6. ' ' → logprob: -12.276744842529297
    7. 'range' → logprob: -12.526744842529297
    8. 's' → logprob: -12.901744842529297
    9. '_in' → logprob: -13.526744842529297
    10. ' ' → logprob: -14.776744842529297

Token 281: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005236837547272444
    2. ' range' → logprob: -5.255236625671387
    3. '_' → logprob: -12.755236625671387
    4. 'rang' → logprob: -16.505237579345703
    5. ' ' → logprob: -17.630237579345703
    6. 'r' → logprob: -17.755237579345703
    7. 'ra' → logprob: -18.130237579345703
    8. 'in' → logprob: -18.380237579345703
    9. '_range' → logprob: -18.505237579345703
    10. 'ran' → logprob: -18.630237579345703

Token 282: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005237075500190258
    2. '(' → logprob: -5.255237102508545
    3. 'n' → logprob: -12.755236625671387
    4. '1' → logprob: -15.630236625671387
    5. '(
' → logprob: -15.755236625671387
    6. ' (' → logprob: -17.255237579345703
    7. '(int' → logprob: -17.255237579345703
    8. '((' → logprob: -18.255237579345703
    9. '(m' → logprob: -19.255237579345703
    10. ' n' → logprob: -19.255237579345703

Token 283: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25772222876548767
    2. '):
' → logprob: -1.75772225856781
    3. ' -' → logprob: -3.1327221393585205
    4. '):' → logprob: -4.5077223777771
    5. '):
' → logprob: -9.382721900939941
    6. '   ' → logprob: -11.257721900939941
    7. ')' → logprob: -11.507721900939941
    8. ' ):
' → logprob: -12.132721900939941
    9. 'n' → logprob: -12.257721900939941
    10. '
' → logprob: -13.132721900939941

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. ')' → logprob: -15.37617015838623
    4. '   ' → logprob: -17.251171112060547
    5. '0' → logprob: -17.376171112060547
    6. '2' → logprob: -18.126171112060547
    7. '  ' → logprob: -18.313671112060547
    8. '
' → logprob: -18.438671112060547
    9. '```' → logprob: -18.563671112060547
    10. '-' → logprob: -18.813671112060547

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '１' → logprob: -17.250003814697266
    4. '2' → logprob: -17.312503814697266
    5. '
' → logprob: -18.187503814697266
    6. '   ' → logprob: -18.312503814697266
    7. '۱' → logprob: -18.500003814697266
    8. '১' → logprob: -18.625003814697266
    9. '१' → logprob: -18.625003814697266
    10. ')' → logprob: -19.062503814697266

Token 286: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3489983081817627
    2. '):' → logprob: -1.7239983081817627
    3. '):
' → logprob: -2.2239983081817627
    4. ':
' → logprob: -5.223998069763184
    5. ' :' → logprob: -6.098998069763184
    6. '):
' → logprob: -9.098998069763184
    7. ' :
' → logprob: -9.473998069763184
    8. ']:' → logprob: -9.848998069763184
    9. '{' → logprob: -10.348998069763184
    10. '():
' → logprob: -10.348998069763184

Token 287: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.24625909328460693
    2. 'u' → logprob: -2.6212592124938965
    3. ' a' → logprob: -2.9962592124938965
    4. 'a' → logprob: -3.6212592124938965
    5. '   ' → logprob: -3.7462592124938965
    6. ' x' → logprob: -4.1212592124938965
    7. ' line' → logprob: -4.3712592124938965
    8. ',' → logprob: -4.9962592124938965
    9. ',u' → logprob: -5.3712592124938965
    10. '	u' → logprob: -6.7462592124938965

Token 288: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.003909795545041561
    2. 'x' → logprob: -5.628909587860107
    3. ' u' → logprob: -8.253910064697266
    4. 'a' (adapté à ' a') → logprob: -10.003910064697266
    5. 'v' → logprob: -13.503910064697266
    6. '   ' → logprob: -13.753910064697266
    7. '	u' → logprob: -14.503910064697266
    8. 'p' → logprob: -15.128910064697266
    9. '```' → logprob: -15.378910064697266
    10. ',u' → logprob: -16.253910064697266

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015127197839319706
    2. ',b' → logprob: -6.62651252746582
    3. ' ,' → logprob: -8.87651252746582
    4. ',input' → logprob: -10.12651252746582
    5. ',v' → logprob: -13.75151252746582
    6. ',int' → logprob: -14.00151252746582
    7. ',s' → logprob: -14.12651252746582
    8. ',a' → logprob: -14.37651252746582
    9. ',n' → logprob: -14.50151252746582
    10. ',
' → logprob: -14.75151252746582

Token 290: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0380416102707386
    2. ' b' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.538042068481445
    4. '=' → logprob: -16.913042068481445
    5. ',b' → logprob: -17.788042068481445
    6. '	b' → logprob: -18.788042068481445
    7. '_b' → logprob: -19.038042068481445
    8. ',' → logprob: -19.288042068481445
    9. '=b' → logprob: -19.788042068481445
    10. 'c' → logprob: -20.288042068481445

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694647908210754
    2. ' =' → logprob: -2.126946449279785
    3. '=input' → logprob: -11.001946449279785
    4. '=int' → logprob: -14.001946449279785
    5. ',' → logprob: -14.126946449279785
    6. '=list' → logprob: -16.0019474029541
    7. '=line' → logprob: -17.0019474029541
    8. '＝' → logprob: -17.6269474029541
    9. '=
' → logprob: -18.2519474029541
    10. 'input' → logprob: -18.2519474029541

Token 292: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47407761216163635
    2. ' map' → logprob: -0.974077582359314
    3. '	map' → logprob: -14.974077224731445
    4. ' [' → logprob: -16.349077224731445
    5. 'list' → logprob: -16.349077224731445
    6. '[' → logprob: -16.974077224731445
    7. '(map' → logprob: -17.349077224731445
    8. ' ' → logprob: -17.349077224731445
    9. ' list' → logprob: -17.474077224731445
    10. '_map' → logprob: -18.224077224731445

Token 293: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.727905979962088e-05
    2. 'int' → logprob: -10.00004768371582
    3. '(' → logprob: -13.50004768371582
    4. '[int' → logprob: -15.75004768371582
    5. '=int' → logprob: -16.87504768371582
    6. '<int' → logprob: -16.87504768371582
    7. ',int' → logprob: -17.87504768371582
    8. ' int' → logprob: -17.87504768371582
    9. '(input' → logprob: -18.12504768371582
    10. '(
' → logprob: -18.87504768371582

Token 294: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3862984776496887
    2. '(input' → logprob: -1.761298418045044
    3. 'input' → logprob: -2.636298418045044
    4. ',' → logprob: -2.636298418045044
    5. '=input' → logprob: -6.511298656463623
    6. '(' → logprob: -6.511298656463623
    7. ' input' → logprob: -6.886298656463623
    8. '().' → logprob: -8.511298179626465
    9. ',int' → logprob: -8.636298179626465
    10. '<input' → logprob: -8.636298179626465

Token 295: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005530327325686812
    2. ' input' → logprob: -7.500553131103516
    3. '=input' → logprob: -21.250553131103516
    4. ' ' → logprob: -22.000553131103516
    5. '(input' → logprob: -22.000553131103516
    6. ',input' → logprob: -22.250553131103516
    7. '	input' → logprob: -22.625553131103516
    8. 'Input' → logprob: -22.750553131103516
    9. '_input' → logprob: -23.000553131103516
    10. '   ' → logprob: -23.125553131103516

Token 296: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.750003814697266
    3. '(' → logprob: -15.250003814697266
    4. ' ().' → logprob: -17.250003814697266
    5. '.split' → logprob: -17.625003814697266
    6. '()[' → logprob: -17.875003814697266
    7. 'split' → logprob: -17.875003814697266
    8. '()
' → logprob: -18.375003814697266
    9. '())' → logprob: -18.625003814697266
    10. 'input' → logprob: -19.375003814697266

Token 297: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'strip' → logprob: -12.87500286102295
    3. ' split' → logprob: -15.00000286102295
    4. '(split' → logprob: -17.125003814697266
    5. 'rstrip' → logprob: -19.000003814697266
    6. '().' → logprob: -20.125003814697266
    7. 'spl' → logprob: -20.250003814697266
    8. 'plit' → logprob: -20.375003814697266
    9. '.split' → logprob: -20.625003814697266
    10. 's' → logprob: -21.375003814697266

Token 298: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06256426125764847
    2. '())' → logprob: -2.8125643730163574
    3. '()' → logprob: -7.812564373016357
    4. ')
' → logprob: -9.3125638961792
    5. '(' → logprob: -9.6875638961792
    6. '())
' → logprob: -10.5625638961792
    7. ')`' → logprob: -12.0625638961792
    8. '))' → logprob: -12.8125638961792
    9. ' )' → logprob: -13.5625638961792
    10. '()
' → logprob: -14.8125638961792

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018390359356999397
    2. 'g' → logprob: -4.26839017868042
    3. 'a' → logprob: -6.14339017868042
    4. ' g' → logprob: -7.26839017868042
    5. '<|end|>' → logprob: -7.89339017868042
    6. '    
' → logprob: -8.643390655517578
    7. '	g' → logprob: -8.768390655517578
    8. '
' → logprob: -8.893390655517578
    9. ')' → logprob: -9.143390655517578
    10. 'n' → logprob: -9.643390655517578

Token 300: ' g' (ID: 329)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13992717862129211
    2. 'g' (adapté à ' g') → logprob: -2.6399271488189697
    3. ' a' → logprob: -3.1399271488189697
    4. ' g' → logprob: -4.139927387237549
    5. '-g' → logprob: -14.51492691040039
    6. '   ' → logprob: -14.63992691040039
    7. 'n' → logprob: -15.38992691040039
    8. '	g' → logprob: -15.38992691040039
    9. '#g' → logprob: -16.26492691040039
    10. '_g' → logprob: -16.51492691040039

Token 301: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.625000953674316
    3. '[b' → logprob: -14.750000953674316
    4. '[g' → logprob: -16.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '[i' → logprob: -19.750001907348633
    8. '[A' → logprob: -19.750001907348633
    9. '```' → logprob: -19.875001907348633
    10. '
' → logprob: -20.000001907348633

Token 302: '-' (ID: 12)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02019789069890976
    2. '].' → logprob: -4.145197868347168
    3. '-' → logprob: -5.770197868347168
    4. 'a' → logprob: -7.645197868347168
    5. '[b' → logprob: -8.520197868347168
    6. '[i' → logprob: -8.895197868347168
    7. '[' → logprob: -8.895197868347168
    8. ' -' → logprob: -9.895197868347168
    9. '][' → logprob: -10.895197868347168
    10. ']' → logprob: -12.395197868347168

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -19.500001907348633
    4. '```' → logprob: -19.875001907348633
    5. '

' → logprob: -20.125001907348633
    6. '2' → logprob: -20.750001907348633
    7. '-' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. ']' → logprob: -21.625001907348633
    10. '１' → logprob: -22.125001907348633

Token 304: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.688212614681106e-05
    2. ' ].' → logprob: -11.500017166137695
    3. ']' → logprob: -12.000017166137695
    4. '.append' → logprob: -15.875017166137695
    5. '.' → logprob: -15.875017166137695
    6. ').' → logprob: -16.125017166137695
    7. '   ' → logprob: -16.375017166137695
    8. '-' → logprob: -19.250017166137695
    9. ''].' → logprob: -19.500017166137695
    10. '"].' → logprob: -19.625017166137695

Token 305: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -15.000000953674316
    3. '.append' → logprob: -15.500000953674316
    4. 'appen' → logprob: -16.125
    5. '	append' → logprob: -19.625
    6. 'Append' → logprob: -20.625
    7. '_append' → logprob: -21.0
    8. 'app' → logprob: -21.25
    9. 'add' → logprob: -22.625
    10. ' ' → logprob: -23.0

Token 306: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.895480277715251e-06
    2. ' b' → logprob: -11.750008583068848
    3. '(b' → logprob: -14.000008583068848
    4. '	b' → logprob: -16.375009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '[b' → logprob: -19.250009536743164
    7. 'B' → logprob: -21.000009536743164
    8. ' (' → logprob: -21.875009536743164
    9. ')b' → logprob: -21.875009536743164
    10. '_b' → logprob: -22.000009536743164

Token 307: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. '[' → logprob: -17.25002670288086
    4. '1' → logprob: -18.00002670288086
    5. '()-' → logprob: -18.25002670288086
    6. '–' → logprob: -19.25002670288086
    7. '−' → logprob: -19.50002670288086
    8. ')-' → logprob: -20.37502670288086
    9. ')' → logprob: -20.75002670288086
    10. '[-' → logprob: -21.25002670288086

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -15.87500286102295
    4. '-' → logprob: -17.000003814697266
    5. '```' → logprob: -17.437503814697266
    6. '   ' → logprob: -17.875003814697266
    7. ')' → logprob: -19.062503814697266
    8. '0' → logprob: -19.937503814697266
    9. '１' → logprob: -20.187503814697266
    10. '6' → logprob: -20.250003814697266

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005237548612058163
    2. ')
' → logprob: -5.255237579345703
    3. ' )' → logprob: -13.130237579345703
    4. '   ' → logprob: -14.380237579345703
    5. ')b' → logprob: -15.130237579345703
    6. ')
' → logprob: -15.380237579345703
    7. '),' → logprob: -15.505237579345703
    8. '<|end|>' → logprob: -15.630237579345703
    9. ' )
' → logprob: -16.380237579345703
    10. '[' → logprob: -16.755237579345703

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003488762304186821
    2. 'g' → logprob: -6.253488540649414
    3. ' g' → logprob: -6.503488540649414
    4. '<|end|>' → logprob: -10.378488540649414
    5. '	g' → logprob: -10.628488540649414
    6. '#g' → logprob: -13.253488540649414
    7. ')' → logprob: -13.878488540649414
    8. '[g' → logprob: -14.753488540649414
    9. '       ' → logprob: -14.878488540649414
    10. ',g' → logprob: -15.003488540649414

Token 311: ' ind' (ID: 1383)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0003802680876106024
    2. ' g' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.25037956237793
    4. '	g' → logprob: -17.25037956237793
    5. '_g' → logprob: -20.25037956237793
    6. '#g' → logprob: -20.50037956237793
    7. '.g' → logprob: -20.87537956237793
    8. ' ' → logprob: -21.12537956237793
    9. '    ' → logprob: -21.12537956237793
    10. '  ' → logprob: -21.25037956237793

Token 312: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.4740886688232422
    2. '[b' → logprob: -0.9740886688232422
    3. '[' → logprob: -12.099088668823242
    4. '[g' → logprob: -13.099088668823242
    5. 'a' → logprob: -13.724088668823242
    6. '[i' → logprob: -14.349088668823242
    7. ' [' → logprob: -14.599088668823242
    8. 'b' → logprob: -15.224088668823242
    9. '[u' → logprob: -15.911588668823242
    10. '```' → logprob: -15.911588668823242

Token 313: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017016702622640878
    2. '[i' → logprob: -10.00016975402832
    3. 'b' → logprob: -10.12516975402832
    4. ' -' → logprob: -10.37516975402832
    5. '[' → logprob: -11.12516975402832
    6. ']' → logprob: -11.37516975402832
    7. 'i' → logprob: -11.75016975402832
    8. '[b' → logprob: -11.87516975402832
    9. 'a' → logprob: -12.37516975402832
    10. ']-' → logprob: -13.50016975402832

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.375018119812012
    3. 'b' → logprob: -12.375018119812012
    4. '2' → logprob: -14.562518119812012
    5. ' b' → logprob: -15.000018119812012
    6. '```' → logprob: -15.562518119812012
    7. '   ' → logprob: -15.812518119812012
    8. 'i' → logprob: -16.000017166137695
    9. ']' → logprob: -16.000017166137695
    10. '-' → logprob: -16.187517166137695

Token 315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25267279148101807
    2. ']+=' → logprob: -1.502672791481018
    3. ' ]' → logprob: -7.8776726722717285
    4. '+=' → logprob: -8.877673149108887
    5. ']+' → logprob: -8.877673149108887
    6. '+' → logprob: -10.377673149108887
    7. ']=' → logprob: -10.627673149108887
    8. ' +=' → logprob: -11.752673149108887
    9. '+]' → logprob: -12.002673149108887
    10. ')' → logprob: -12.002673149108887

Token 316: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07774880528450012
    2. ' +=' → logprob: -2.9527487754821777
    3. '=' → logprob: -3.9527487754821777
    4. '[' → logprob: -6.452748775482178
    5. ']+=' → logprob: -6.702748775482178
    6. ' =' → logprob: -7.702748775482178
    7. '[b' → logprob: -9.577749252319336
    8. '+' → logprob: -10.702749252319336
    9. '=b' → logprob: -11.327749252319336
    10. '[ind' → logprob: -11.452749252319336

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. ' ' → logprob: -10.125046730041504
    3. 'b' → logprob: -12.750046730041504
    4. '2' → logprob: -13.000046730041504
    5. 'g' → logprob: -14.125046730041504
    6. '0' → logprob: -14.750046730041504
    7. 'ind' → logprob: -16.18754768371582
    8. '   ' → logprob: -16.81254768371582
    9. 'i' → logprob: -17.06254768371582
    10. 'a' → logprob: -17.31254768371582

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '0' → logprob: -11.875018119812012
    3. 'b' → logprob: -12.125018119812012
    4. ' ' → logprob: -13.250018119812012
    5. '2' → logprob: -13.375018119812012
    6. 'g' → logprob: -13.750018119812012
    7. 'a' → logprob: -14.875018119812012
    8. 'i' → logprob: -16.000017166137695
    9. 'ind' → logprob: -16.062517166137695
    10. 'n' → logprob: -16.625017166137695

Token 319: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006040262524038553
    2. 'g' → logprob: -7.750604152679443
    3. '<|end|>' → logprob: -8.875603675842285
    4. ' g' → logprob: -10.625603675842285
    5. ')' → logprob: -12.750603675842285
    6. '	g' → logprob: -13.125603675842285
    7. '    
' → logprob: -14.000603675842285
    8. '  ' → logprob: -14.750603675842285
    9. ' ' → logprob: -14.875603675842285
    10. ',' → logprob: -15.000603675842285

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011125043965876102
    2. 'g' → logprob: -4.511125087738037
    3. ' g' → logprob: -9.761124610900879
    4. '```' → logprob: -11.011124610900879
    5. '	g' → logprob: -14.011124610900879
    6. ' ' → logprob: -14.261124610900879
    7. 'b' → logprob: -14.261124610900879
    8. '       ' → logprob: -15.261124610900879
    9. '  ' → logprob: -15.511124610900879
    10. '<|end|>' → logprob: -16.386125564575195

Token 321: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0034291273914277554
    2. '   ' → logprob: -5.753428936004639
    3. ' g' → logprob: -8.878429412841797
    4. 'ind' → logprob: -9.128429412841797
    5. ' ind' → logprob: -13.253429412841797
    6. '  ' → logprob: -14.378429412841797
    7. '	g' → logprob: -14.503429412841797
    8. ' ' → logprob: -15.003429412841797
    9. '```' → logprob: -16.378429412841797
    10. '       ' → logprob: -17.003429412841797

Token 322: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.320199877838604e-07
    2. 'b' → logprob: -14.875
    3. '[a' → logprob: -18.0
    4. '[' → logprob: -19.5
    5. '	b' → logprob: -20.5
    6. '[g' → logprob: -20.75
    7. '[n' → logprob: -21.75
    8. '[c' → logprob: -22.375
    9. ' b' → logprob: -22.5
    10. '[ind' → logprob: -22.625

Token 323: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.796184723294573e-06
    2. ' -' → logprob: -12.750005722045898
    3. '[' → logprob: -12.875005722045898
    4. '[-' → logprob: -15.500005722045898
    5. ']-' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.7500057220459
    7. '-.' → logprob: -19.3750057220459
    8. '.' → logprob: -19.5000057220459
    9. '```' → logprob: -19.5000057220459
    10. 's' → logprob: -19.8750057220459

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'g' → logprob: -17.250003814697266
    4. '-' → logprob: -17.437503814697266
    5. '```' → logprob: -17.687503814697266
    6. 'b' → logprob: -17.750003814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '0' → logprob: -19.000003814697266
    10. ' g' → logprob: -19.000003814697266

Token 325: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.02684822306036949
    2. '.append' → logprob: -4.026848316192627
    3. '.' → logprob: -4.901848316192627
    4. ' .' → logprob: -6.901848316192627
    5. '[' → logprob: -9.526847839355469
    6. '[].' → logprob: -10.026847839355469
    7. '   ' → logprob: -10.151847839355469
    8. ' ].' → logprob: -10.526847839355469
    9. ').' → logprob: -10.901847839355469
    10. ']' → logprob: -11.276847839355469

Token 326: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.25
    3. 'appen' → logprob: -17.375
    4. '.append' → logprob: -18.0
    5. '	append' → logprob: -18.5
    6. 'app' → logprob: -20.75
    7. '1' → logprob: -20.875
    8. ' ' → logprob: -21.375
    9. 'Append' → logprob: -21.625
    10. '0' → logprob: -21.75

Token 327: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.2729995988775045e-06
    2. 'a' → logprob: -12.000006675720215
    3. ' (' → logprob: -17.6250057220459
    4. '(' → logprob: -17.6250057220459
    5. '((' → logprob: -18.5000057220459
    6. '(i' → logprob: -18.6250057220459
    7. '(
' → logprob: -18.8750057220459
    8. '(ai' → logprob: -19.7500057220459
    9. '(A' → logprob: -20.0000057220459
    10. '   ' → logprob: -20.0000057220459

Token 328: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '[-' → logprob: -17.25000762939453
    4. '[' → logprob: -18.37500762939453
    5. '[i' → logprob: -18.62500762939453
    6. '   ' → logprob: -19.62500762939453
    7. '-
' → logprob: -20.12500762939453
    8. ']-' → logprob: -20.12500762939453
    9. '[a' → logprob: -20.37500762939453
    10. 'a' → logprob: -20.87500762939453

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -14.375000953674316
    4. '0' → logprob: -17.250001907348633
    5. '```' → logprob: -17.500001907348633
    6. '2' → logprob: -19.062501907348633
    7. '   ' → logprob: -19.437501907348633
    8. '
' → logprob: -19.562501907348633
    9. ')' → logprob: -19.750001907348633
    10. 'b' → logprob: -20.062501907348633

Token 330: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0069379559718072414
    2. '[' → logprob: -5.6319379806518555
    3. ')' → logprob: -6.5069379806518555
    4. '   ' → logprob: -7.5069379806518555
    5. '[a' → logprob: -7.5069379806518555
    6. '[-' → logprob: -7.7569379806518555
    7. ' -' → logprob: -8.756937980651855
    8. ']' → logprob: -10.131937980651855
    9. '[i' → logprob: -10.381937980651855
    10. '[b' → logprob: -10.756937980651855

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151484429836273
    2. 'ind' → logprob: -1.3151484727859497
    3. ' ind' → logprob: -6.44014835357666
    4. '[ind' → logprob: -8.94014835357666
    5. '```' → logprob: -9.31514835357666
    6. 'indent' → logprob: -11.19014835357666
    7. 'b' → logprob: -11.31514835357666
    8. '  ' → logprob: -11.56514835357666
    9. '[' → logprob: -11.56514835357666
    10. '<|end|>' → logprob: -12.44014835357666

Token 332: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -1.5451681974809617e-05
    2. ' ind' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.000015258789062
    4. 'indent' → logprob: -17.625015258789062
    5. '[ind' → logprob: -17.750015258789062
    6. '  ' → logprob: -17.875015258789062
    7. '```' → logprob: -18.875015258789062
    8. ' ' → logprob: -19.000015258789062
    9. '
' → logprob: -20.250015258789062
    10. 'index' → logprob: -20.375015258789062

Token 333: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.128163257315464e-07
    2. 'b' → logprob: -16.0
    3. '[a' → logprob: -16.25
    4. '[' → logprob: -17.25
    5. '[ind' → logprob: -17.5
    6. ' [' → logprob: -19.5
    7. '[int' → logprob: -21.75
    8. '[g' → logprob: -21.75
    9. '[
' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 334: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -17.0
    3. 'b' → logprob: -17.125
    4. '[b' → logprob: -17.375
    5. '1' → logprob: -17.625
    6. ']' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. '   ' → logprob: -19.125
    9. '[' → logprob: -19.375
    10. '–' → logprob: -20.0

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005245141219347715
    2. '-' → logprob: -5.255245208740234
    3. 'b' → logprob: -11.880245208740234
    4. '```' → logprob: -12.880245208740234
    5. ' ' → logprob: -14.380245208740234
    6. ']' → logprob: -14.755245208740234
    7. '   ' → logprob: -15.130245208740234
    8. '
' → logprob: -16.005245208740234
    9. '0' → logprob: -16.630245208740234
    10. '+' → logprob: -16.817745208740234

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023928703740239143
    2. ']+=' → logprob: -3.773928642272949
    3. ' ]' → logprob: -7.398928642272949
    4. ' +=' → logprob: -10.27392864227295
    5. '+=' → logprob: -10.52392864227295
    6. '']' → logprob: -12.89892864227295
    7. '+]' → logprob: -13.02392864227295
    8. '+' → logprob: -13.52392864227295
    9. ')' → logprob: -13.89892864227295
    10. '[' → logprob: -13.89892864227295

Token 337: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07896260172128677
    2. ' +=' → logprob: -2.578962564468384
    3. ']+=' → logprob: -9.703962326049805
    4. '+' → logprob: -11.953962326049805
    5. ' ' → logprob: -12.953962326049805
    6. '+='' → logprob: -13.578962326049805
    7. '+=(' → logprob: -15.078962326049805
    8. '=' → logprob: -15.078962326049805
    9. '+="' → logprob: -15.203962326049805
    10. '<|end|>' → logprob: -15.453962326049805

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -17.001325607299805
    4. '0' → logprob: -18.438825607299805
    5. '```' → logprob: -18.501325607299805
    6. '  ' → logprob: -18.876325607299805
    7. '2' → logprob: -19.751325607299805
    8. '+' → logprob: -20.001325607299805
    9. '１' → logprob: -20.063825607299805
    10. '<|end|>' → logprob: -20.251325607299805

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. '0' → logprob: -16.812536239624023
    5. '2' → logprob: -17.000036239624023
    6. '```' → logprob: -17.500036239624023
    7. '-' → logprob: -18.687536239624023
    8. '!' → logprob: -18.750036239624023
    9. '  ' → logprob: -18.750036239624023
    10. '１' → logprob: -19.687536239624023

Token 340: ' ' (ID: 220)
  Prédit: 'dm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dm' → logprob: -0.19808679819107056
    2. 'for' → logprob: -2.573086738586426
    3. 'm' → logprob: -2.698086738586426
    4. 'd' → logprob: -3.948086738586426
    5. 'q' → logprob: -5.948086738586426
    6. 'c' → logprob: -6.073086738586426
    7. 'print' → logprob: -6.073086738586426
    8. 'x' → logprob: -6.698086738586426
    9. 'l' → logprob: -6.698086738586426
    10. 's' → logprob: -6.948086738586426

Token 341: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7570193409919739
    2. 'print' → logprob: -0.8820193409919739
    3. 'result' → logprob: -3.757019281387329
    4. 'u' → logprob: -4.132019519805908
    5. 'res' → logprob: -4.257019519805908
    6. 'dm' → logprob: -4.382019519805908
    7. 'm' → logprob: -4.507019519805908
    8. 'a' → logprob: -4.882019519805908
    9. '#' → logprob: -5.257019519805908
    10. 'l' → logprob: -5.382019519805908

Token 342: ' arf' (ID: 174970)
  Prédit: 'dm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dm' → logprob: -0.9910476803779602
    2. ')' → logprob: -1.8660476207733154
    3. '<|end|>' → logprob: -1.9910476207733154
    4. 'for' → logprob: -2.3660476207733154
    5. '#' → logprob: -2.7410476207733154
    6. 'n' → logprob: -3.1160476207733154
    7. 'm' → logprob: -3.7410476207733154
    8. 'print' → logprob: -3.7410476207733154
    9. ' for' → logprob: -4.1160478591918945
    10. 'd' → logprob: -4.4910478591918945

Token 343: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' les' (ID: 1341)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.6847653388977051
    2. '#' → logprob: -2.059765338897705
    3. ' ind' → logprob: -2.309765338897705
    4. ')' → logprob: -3.059765338897705
    5. 'n' → logprob: -3.559765338897705
    6. 'pass' → logprob: -3.684765338897705
    7. '0' → logprob: -3.684765338897705
    8. '<|end|>' → logprob: -3.684765338897705
    9. '...' → logprob: -3.809765338897705
    10. '1' → logprob: -3.934765338897705

Token 345: ' indices' (ID: 30378)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.7399393916130066
    2. 'indices' → logprob: -1.4899394512176514
    3. ' ind' → logprob: -2.9899394512176514
    4. ' indices' → logprob: -3.2399394512176514
    5. '#' → logprob: -3.3649394512176514
    6. 'b' → logprob: -3.8649394512176514
    7. 'edges' → logprob: -3.9899394512176514
    8. ' edges' → logprob: -3.9899394512176514
    9. 'indent' → logprob: -4.364939212799072
    10. ' b' → logprob: -4.739939212799072

Token 346: ' dé' (ID: 2393)
  Prédit: 'dm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dm' → logprob: -0.008670237846672535
    2. 'm' → logprob: -5.133670330047607
    3. 'd' → logprob: -6.883670330047607
    4. '
' → logprob: -7.883670330047607
    5. 'for' → logprob: -8.00866985321045
    6. ' dm' → logprob: -8.13366985321045
    7. '#' → logprob: -8.50866985321045
    8. ')' → logprob: -9.25866985321045
    9. 'q' → logprob: -10.00866985321045
    10. 's' → logprob: -10.38366985321045

Token 347: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -1.1735682487487793
    2. 'pass' → logprob: -1.2985682487487793
    3. 'rang' → logprob: -1.2985682487487793
    4. 'bord' → logprob: -3.4235682487487793
    5. 'riv' → logprob: -3.7985682487487793
    6. 'r' → logprob: -4.173568248748779
    7. 'pas' → logprob: -4.423568248748779
    8. 'f' → logprob: -4.423568248748779
    9. 'ç' → logprob: -4.673568248748779
    10. 'conn' → logprob: -5.548568248748779

Token 348: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03089716285467148
    2. 'agés' → logprob: -4.53089714050293
    3. 'ent' → logprob: -5.40589714050293
    4. 's' → logprob: -5.90589714050293
    5. 'é' → logprob: -6.15589714050293
    6. 'age' → logprob: -6.65589714050293
    7. 'rés' → logprob: -6.65589714050293
    8. '```' → logprob: -7.03089714050293
    9. 'ment' → logprob: -7.28089714050293
    10. 'aient' → logprob: -7.40589714050293

Token 349: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ''' (ID: 6)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03486078232526779
    2. ''un' → logprob: -4.034860610961914
    3. 'un' → logprob: -4.784860610961914
    4. ''entrée' → logprob: -6.534860610961914
    5. 'e' → logprob: -6.784860610961914
    6. '```' → logprob: -6.909860610961914
    7. 'eux' → logprob: -7.034860610961914
    8. 'entrée' → logprob: -7.534860610961914
    9. 'une' → logprob: -7.534860610961914
    10. 'input' → logprob: -7.659860610961914

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01450253278017044
    2. 'un' → logprob: -4.26450252532959
    3. ''un' → logprob: -9.01450252532959
    4. ' ' → logprob: -9.51450252532959
    5. 'une' → logprob: -9.76450252532959
    6. ' un' → logprob: -11.01450252532959
    7. '```' → logprob: -11.51450252532959
    8. '-' → logprob: -11.63950252532959
    9. '
' → logprob: -11.88950252532959
    10. ' ' → logprob: -12.01450252532959

Token 352: '...

' (ID: 2161)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9111069440841675
    2. 'dm' → logprob: -1.4111069440841675
    3. '<|end|>' → logprob: -1.9111069440841675
    4. 'n' → logprob: -2.911107063293457
    5. '#' → logprob: -3.286107063293457
    6. 'm' → logprob: -3.661107063293457
    7. ' for' → logprob: -3.786107063293457
    8. ')' → logprob: -4.536107063293457
    9. 'a' → logprob: -4.786107063293457
    10. '<|end|>' → logprob: -4.911107063293457

Token 353: 's' (ID: 82)
  Prédit: 'dm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dm' → logprob: -0.08714455366134644
    2. 'for' → logprob: -2.962144613265991
    3. 'd' → logprob: -4.337144374847412
    4. 'm' → logprob: -4.587144374847412
    5. 'print' → logprob: -5.837144374847412
    6. 'x' → logprob: -6.587144374847412
    7. 'q' → logprob: -6.712144374847412
    8. 'a' → logprob: -7.837144374847412
    9. 'k' → logprob: -8.33714485168457
    10. 'res' → logprob: -8.46214485168457

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4081352651119232
    2. '=' → logprob: -1.5331352949142456
    3. 't' → logprob: -2.533135175704956
    4. 'um' → logprob: -4.408135414123535
    5. 'for' → logprob: -4.783135414123535
    6. 'e' → logprob: -5.408135414123535
    7. 'earch' → logprob: -5.908135414123535
    8. 'et' → logprob: -7.033135414123535
    9. '=[]' → logprob: -7.033135414123535
    10. '1' → logprob: -7.158135414123535

Token 355: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4157205820083618
    2. 'set' → logprob: -2.0407204627990723
    3. '[]' → logprob: -2.2907204627990723
    4. 'sum' → logprob: -2.5407204627990723
    5. '[' → logprob: -5.040720462799072
    6. '[n' → logprob: -5.415720462799072
    7. '[]
' → logprob: -5.540720462799072
    8. 'n' → logprob: -5.915720462799072
    9. 'range' → logprob: -6.040720462799072
    10. '[(' → logprob: -6.415720462799072

Token 356: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6402075886726379
    2. '0' → logprob: -1.2652075290679932
    3. 'i' → logprob: -1.7652075290679932
    4. '(i' → logprob: -5.515207767486572
    5. '[]' → logprob: -5.765207767486572
    6. ']' → logprob: -6.140207767486572
    7. 'f' → logprob: -6.265207767486572
    8. 'False' → logprob: -6.515207767486572
    9. 'tuple' → logprob: -6.640207767486572
    10. '(int' → logprob: -6.640207767486572

Token 357: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12734319269657135
    2. ' for' → logprob: -2.75234317779541
    3. 'for' → logprob: -3.25234317779541
    4. ',' → logprob: -4.50234317779541
    5. ' ]' → logprob: -6.37734317779541
    6. ']*' → logprob: -6.62734317779541
    7. ')' → logprob: -6.62734317779541
    8. ',n' → logprob: -8.25234317779541
    9. ']*(' → logprob: -8.37734317779541
    10. ']+' → logprob: -8.62734317779541

Token 358: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015900744125247
    2. ' for' → logprob: -4.265900611877441
    3. 's' → logprob: -6.765900611877441
    4. 'q' → logprob: -9.265900611877441
    5. 'from' → logprob: -9.640900611877441
    6. 'while' → logprob: -9.640900611877441
    7. 'x' → logprob: -10.265900611877441
    8. ' ' → logprob: -10.640900611877441
    9. 'i' → logprob: -10.640900611877441
    10. 'stack' → logprob: -10.765900611877441

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36969417333602905
    2. '=' → logprob: -1.2446942329406738
    3. 'e' → logprob: -4.869694232940674
    4. 'ef' → logprob: -4.994694232940674
    5. 'for' → logprob: -5.994694232940674
    6. '=[]' → logprob: -6.994694232940674
    7. ',' → logprob: -7.494694232940674
    8. 'ist' → logprob: -7.744694232940674
    9. 'q' → logprob: -7.744694232940674
    10. '.append' → logprob: -8.119693756103516

Token 360: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038044363260269165
    2. '[n' → logprob: -4.038044452667236
    3. 'deque' → logprob: -4.913044452667236
    4. '0' → logprob: -5.163044452667236
    5. ' [' → logprob: -6.038044452667236
    6. '[-' → logprob: -6.538044452667236
    7. 'n' → logprob: -6.663044452667236
    8. '[s' → logprob: -7.038044452667236
    9. '1' → logprob: -8.788043975830078
    10. '[]' → logprob: -9.163043975830078

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015073629328981042
    2. '-' → logprob: -6.50150728225708
    3. 'n' → logprob: -12.876507759094238
    4. ']' → logprob: -14.626507759094238
    5. ' -' → logprob: -14.751507759094238
    6. '2' → logprob: -14.876507759094238
    7. 'float' → logprob: -15.251507759094238
    8. '10' → logprob: -15.501507759094238
    9. 'int' → logprob: -15.626507759094238
    10. '100' → logprob: -16.001506805419922

Token 362: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013691653730347753
    2. ' for' → logprob: -7.251368999481201
    3. 'for' → logprob: -7.751368999481201
    4. ']*' → logprob: -8.75136947631836
    5. ' ]' → logprob: -10.12636947631836
    6. ' *' → logprob: -11.75136947631836
    7. '*' → logprob: -11.87636947631836
    8. '[' → logprob: -12.12636947631836
    9. ']*(' → logprob: -13.00136947631836
    10. '(' → logprob: -13.25136947631836

Token 363: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.4121114822482923e-06
    2. ' n' → logprob: -13.125003814697266
    3. '(n' → logprob: -14.875003814697266
    4. '(' → logprob: -14.875003814697266
    5. '1' → logprob: -15.250003814697266
    6. '2' → logprob: -15.375003814697266
    7. '
' → logprob: -16.375003814697266
    8. '0' → logprob: -17.500003814697266
    9. ' (' → logprob: -18.125003814697266
    10. '	n' → logprob: -18.125003814697266

Token 364: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9318419098854065
    2. 's' → logprob: -1.4318418502807617
    3. ' =' → logprob: -1.8068418502807617
    4. '0' → logprob: -2.8068418502807617
    5. '=' → logprob: -2.8068418502807617
    6. 'd' → logprob: -4.306841850280762
    7. ']' → logprob: -4.306841850280762
    8. ' s' → logprob: -4.431841850280762
    9. '<|end|>' → logprob: -4.556841850280762
    10. 'for' → logprob: -4.681841850280762

Token 365: 'd' (ID: 67)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.46513110399246216
    2. 'd' → logprob: -1.3401310443878174
    3. 'for' → logprob: -3.4651310443878174
    4. 'def' → logprob: -3.5901310443878174
    5. 'from' → logprob: -4.0901312828063965
    6. 'while' → logprob: -4.0901312828063965
    7. 's' → logprob: -4.3401312828063965
    8. ' for' → logprob: -6.5901312828063965
    9. 'import' → logprob: -6.8401312828063965
    10. ' while' → logprob: -7.0901312828063965

Token 366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12490587681531906
    2. '[s' → logprob: -2.249905824661255
    3. 's' → logprob: -4.624906063079834
    4. '=' → logprob: -6.374906063079834
    5. ' =' → logprob: -8.374905586242676
    6. '[a' → logprob: -9.624905586242676
    7. '[n' → logprob: -9.999905586242676
    8. ' [' → logprob: -9.999905586242676
    9. ' s' → logprob: -11.124905586242676
    10. '=[' → logprob: -11.124905586242676

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026317719370126724
    2. 's' → logprob: -3.651317834854126
    3. ' ' → logprob: -11.776317596435547
    4. 'n' → logprob: -12.901317596435547
    5. ' s' → logprob: -13.026317596435547
    6. 'a' → logprob: -13.651317596435547
    7. '1' → logprob: -14.401317596435547
    8. '
' → logprob: -14.651317596435547
    9. '-' → logprob: -14.713817596435547
    10. '(' → logprob: -14.963817596435547

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019376773852854967
    2. ']=' → logprob: -6.2519378662109375
    3. ' ]' → logprob: -12.251937866210938
    4. '[' → logprob: -12.751937866210938
    5. '=' → logprob: -14.126937866210938
    6. '0' → logprob: -15.501937866210938
    7. ']+=' → logprob: -15.751937866210938
    8. 'd' → logprob: -16.376937866210938
    9. ']
' → logprob: -16.626937866210938
    10. ']==' → logprob: -17.251937866210938

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008617172949016094
    2. ' =' → logprob: -4.758617401123047
    3. ',' → logprob: -13.008617401123047
    4. ']' → logprob: -15.883617401123047
    5. ']=' → logprob: -16.008617401123047
    6. '=True' → logprob: -16.883617401123047
    7. '=int' → logprob: -17.633617401123047
    8. ')' → logprob: -17.883617401123047
    9. '=}' → logprob: -17.883617401123047
    10. ')=' → logprob: -17.883617401123047

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. 's' → logprob: -14.000011444091797
    4. '1' → logprob: -15.625011444091797
    5. 'd' → logprob: -17.375011444091797
    6. '   ' → logprob: -18.687511444091797
    7. '2' → logprob: -18.812511444091797
    8. '۰' → logprob: -19.312511444091797
    9. '  ' → logprob: -19.687511444091797
    10. '=' → logprob: -19.875011444091797

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. 's' → logprob: -12.250009536743164
    3. ' ' → logprob: -12.875009536743164
    4. '1' → logprob: -13.375009536743164
    5. '2' → logprob: -15.875009536743164
    6. 'd' → logprob: -16.500009536743164
    7. 'n' → logprob: -16.562509536743164
    8. '-' → logprob: -17.375009536743164
    9. 'deque' → logprob: -17.500009536743164
    10. '00' → logprob: -17.937509536743164

Token 372: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12931104004383087
    2. '<|end|>' → logprob: -2.7543110847473145
    3. 'deque' → logprob: -3.3793110847473145
    4. 'queue' → logprob: -4.5043110847473145
    5. 'while' → logprob: -5.5043110847473145
    6. '[' → logprob: -6.6293110847473145
    7. '
' → logprob: -7.1293110847473145
    8. 'from' → logprob: -7.1293110847473145
    9. ',' → logprob: -7.3793110847473145
    10. ')' → logprob: -7.5043110847473145

Token 373: 'while' (ID: 7032)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019978696946054697
    2. 'while' → logprob: -6.751997947692871
    3. 'for' → logprob: -7.501997947692871
    4. 'from' → logprob: -8.501997947692871
    5. 'queue' → logprob: -9.876997947692871
    6. '```' → logprob: -12.126997947692871
    7. ' q' → logprob: -12.501997947692871
    8. ' while' → logprob: -12.751997947692871
    9. 'deque' → logprob: -13.126997947692871
    10. 'def' → logprob: -13.501997947692871

Token 374: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06791254878044128
    2. ' s' → logprob: -3.4429125785827637
    3. 'q' → logprob: -3.8179125785827637
    4. 'len' → logprob: -4.817912578582764
    5. 'deque' → logprob: -6.442912578582764
    6. ' len' → logprob: -7.192912578582764
    7. ' q' → logprob: -7.317912578582764
    8. 'd' → logprob: -8.192912101745605
    9. 'queue' → logprob: -8.817912101745605
    10. ' deque' → logprob: -9.317912101745605

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08703792095184326
    2. '=' → logprob: -3.837038040161133
    3. '[-' → logprob: -3.837038040161133
    4. '.pop' → logprob: -4.337038040161133
    5. '=[]' → logprob: -4.837038040161133
    6. '[' → logprob: -5.087038040161133
    7. '[:]' → logprob: -5.462038040161133
    8. '!=' → logprob: -5.962038040161133
    9. ' =' → logprob: -6.962038040161133
    10. '[len' → logprob: -7.087038040161133

Token 376: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2560037076473236
    2. ' p' → logprob: -1.506003737449646
    3. '   ' → logprob: -6.5060038566589355
    4. 'n' → logprob: -6.8810038566589355
    5. 't' → logprob: -8.006003379821777
    6. 's' → logprob: -8.131003379821777
    7. ' s' → logprob: -8.506003379821777
    8. 'u' → logprob: -8.756003379821777
    9. ' t' → logprob: -8.881003379821777
    10. ' new' → logprob: -9.131003379821777

Token 377: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.1528865396976471
    2. 't' → logprob: -2.6528866291046143
    3. 'u' → logprob: -3.2778866291046143
    4. 'new' → logprob: -4.902886390686035
    5. 'x' → logprob: -5.277886390686035
    6. ' p' → logprob: -5.277886390686035
    7. 'ns' → logprob: -5.277886390686035
    8. 'n' → logprob: -5.527886390686035
    9. 'v' → logprob: -6.527886390686035
    10. ' t' → logprob: -6.652886390686035

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07132070511579514
    2. ' =' → logprob: -2.6963207721710205
    3. 'p' → logprob: -7.446320533752441
    4. '=s' → logprob: -7.821320533752441
    5. '.pop' → logprob: -8.321320533752441
    6. 'pop' → logprob: -9.571320533752441
    7. '=p' → logprob: -9.696320533752441
    8. 'new' → logprob: -12.071320533752441
    9. '.' → logprob: -12.446320533752441
    10. '.=' → logprob: -13.321320533752441

Token 379: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004768545739352703
    2. '[]' → logprob: -5.754768371582031
    3. ' s' → logprob: -6.504768371582031
    4. 'deque' → logprob: -9.754768371582031
    5. 'p' → logprob: -10.504768371582031
    6. '[]
' → logprob: -12.129768371582031
    7. ' []' → logprob: -13.879768371582031
    8. 'd' → logprob: -14.379768371582031
    9. '[' → logprob: -15.004768371582031
    10. ' deque' → logprob: -15.254768371582031

Token 380: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00018458699923940003
    2. 'pop' → logprob: -9.000185012817383
    3. '.' → logprob: -10.000185012817383
    4. '.p' → logprob: -11.250185012817383
    5. ' .' → logprob: -13.000185012817383
    6. '   ' → logprob: -15.750185012817383
    7. 'p' → logprob: -16.375185012817383
    8. '0' → logprob: -17.375185012817383
    9. '```' → logprob: -17.500185012817383
    10. '	pop' → logprob: -17.750185012817383

Token 381: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10021831095218658
    2. '()
' → logprob: -2.3502182960510254
    3. '()
' → logprob: -11.600218772888184
    4. '()

' → logprob: -13.975218772888184
    5. '(' → logprob: -14.225218772888184
    6. '0' → logprob: -14.850218772888184
    7. '()\' → logprob: -14.850218772888184
    8. '();' → logprob: -16.350217819213867
    9. '()`' → logprob: -16.725217819213867
    10. '())' → logprob: -16.725217819213867

Token 382: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11035770922899246
    2. '   ' → logprob: -2.3603577613830566
    3. ' for' → logprob: -4.610357761383057
    4. '```' → logprob: -9.235357284545898
    5. '	for' → logprob: -10.485357284545898
    6. '       ' → logprob: -10.610357284545898
    7. ' ' → logprob: -14.860357284545898
    8. '
' → logprob: -14.860357284545898
    9. '``' → logprob: -15.235357284545898
    10. '  ' → logprob: -16.1103572845459

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.517272024415433e-05
    2. ' for' → logprob: -9.750075340270996
    3. '   ' → logprob: -11.000075340270996
    4. '	for' → logprob: -16.62507438659668
    5. '
' → logprob: -17.12507438659668
    6. '```' → logprob: -17.37507438659668
    7. '       ' → logprob: -18.87507438659668
    8. '    
' → logprob: -18.87507438659668
    9. ' ' → logprob: -20.37507438659668
    10. '  ' → logprob: -22.00007438659668

Token 384: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3332706689834595
    2. 'x' → logprob: -1.7082706689834595
    3. 'v' → logprob: -3.08327054977417
    4. 'nx' → logprob: -3.45827054977417
    5. 'n' → logprob: -4.95827054977417
    6. 'e' → logprob: -5.70827054977417
    7. 'i' → logprob: -5.70827054977417
    8. 'u' → logprob: -5.83327054977417
    9. 'c' → logprob: -6.58327054977417
    10. 'ne' → logprob: -6.70827054977417

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889936864376068
    2. 'in' → logprob: -2.578899383544922
    3. 's' → logprob: -12.203899383544922
    4. 'g' → logprob: -13.328899383544922
    5. ' ' → logprob: -13.828899383544922
    6. 'd' → logprob: -14.953899383544922
    7. '	in' → logprob: -14.953899383544922
    8. ' ' → logprob: -15.578899383544922
    9. 'n' → logprob: -15.828899383544922
    10. 'import' → logprob: -15.953899383544922

Token 386: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005234832875430584
    2. ' g' → logprob: -5.255234718322754
    3. '	g' → logprob: -14.880234718322754
    4. '[g' → logprob: -15.505234718322754
    5. ' ' → logprob: -15.880234718322754
    6. '
' → logprob: -16.50523567199707
    7. '   ' → logprob: -16.50523567199707
    8. '_g' → logprob: -16.75523567199707
    9. ')' → logprob: -17.63023567199707
    10. '#g' → logprob: -18.38023567199707

Token 387: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00033546582562848926
    2. 'p' → logprob: -8.000335693359375
    3. '[' → logprob: -18.125335693359375
    4. '   ' → logprob: -18.875335693359375
    5. '	p' → logprob: -19.000335693359375
    6. '<p' → logprob: -19.500335693359375
    7. ' p' → logprob: -20.250335693359375
    8. '[
' → logprob: -20.375335693359375
    9. '```' → logprob: -20.500335693359375
    10. ' [' → logprob: -20.625335693359375

Token 388: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.21477459371089935
    2. ':' → logprob: -2.5897746086120605
    3. ']:' → logprob: -2.7147746086120605
    4. ':
' → logprob: -2.9647746086120605
    5. ']' → logprob: -8.214774131774902
    6. '):
' → logprob: -9.839774131774902
    7. '():
' → logprob: -10.464774131774902
    8. '   ' → logprob: -10.714774131774902
    9. ']:
' → logprob: -10.964774131774902
    10. '>:' → logprob: -11.714774131774902

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002762326330412179
    2. ':' → logprob: -9.125276565551758
    3. ' if' → logprob: -9.375276565551758
    4. '   ' → logprob: -10.500276565551758
    5. ':
' → logprob: -10.625276565551758
    6. 'if' → logprob: -11.500276565551758
    7. '<|end|>' → logprob: -11.625276565551758
    8. '```' → logprob: -13.125276565551758
    9. '	' → logprob: -13.375276565551758
    10. '	   ' → logprob: -13.375276565551758

Token 390: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9244858622550964
    2. 'if' (adapté à ' if') → logprob: -1.0494859218597412
    3. '       ' → logprob: -1.4244859218597412
    4. '           ' → logprob: -4.549485683441162
    5. '   ' → logprob: -6.299485683441162
    6. '	if' → logprob: -9.92448616027832
    7. ' ' → logprob: -10.92448616027832
    8. '	   ' → logprob: -11.42448616027832
    9. '```' → logprob: -11.92448616027832
    10. '    ' → logprob: -12.17448616027832

Token 391: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2519412040710449
    2. ' d' → logprob: -1.501941204071045
    3. '   ' → logprob: -11.501941680908203
    4. '	d' → logprob: -14.251941680908203
    5. ' ' → logprob: -14.501941680908203
    6. '  ' → logprob: -15.626941680908203
    7. '    ' → logprob: -15.876941680908203
    8. '       ' → logprob: -16.126941680908203
    9. ' ' → logprob: -16.626941680908203
    10. '(d' → logprob: -16.751941680908203

Token 392: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -16.375
    3. '[d' → logprob: -16.625
    4. '[' → logprob: -18.75
    5. 'd' → logprob: -19.875
    6. '[p' → logprob: -20.125
    7. ' [' → logprob: -20.75
    8. 'p' → logprob: -21.125
    9. '(node' → logprob: -21.125
    10. '[player' → logprob: -21.875

Token 393: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5214889049530029
    2. ' ==' → logprob: -2.021488904953003
    3. '==-' → logprob: -2.021488904953003
    4. ']' → logprob: -2.146488904953003
    5. ']==' → logprob: -3.771488904953003
    6. '<' → logprob: -7.146489143371582
    7. ')' → logprob: -8.021489143371582
    8. '[' → logprob: -8.521489143371582
    9. '=' → logprob: -9.771489143371582
    10. ' ]' → logprob: -10.146489143371582

Token 394: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1395115703344345
    2. '==' → logprob: -2.2645115852355957
    3. '==-' → logprob: -3.6395115852355957
    4. '<' → logprob: -10.514511108398438
    5. '[' → logprob: -11.389511108398438
    6. ')' → logprob: -11.639511108398438
    7. ']==' → logprob: -12.014511108398438
    8. ' ' → logprob: -12.264511108398438
    9. ' <' → logprob: -12.764511108398438
    10. '=' → logprob: -12.764511108398438

Token 395: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.036524842376821e-05
    2. ' -' → logprob: -10.125040054321289
    3. ' ' → logprob: -15.750040054321289
    4. '   ' → logprob: -15.875040054321289
    5. '  ' → logprob: -18.87504005432129
    6. '0' → logprob: -18.87504005432129
    7. '−' → logprob: -19.12504005432129
    8. '1' → logprob: -20.25004005432129
    9. '[-' → logprob: -21.00004005432129
    10. '	' → logprob: -21.12504005432129

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.016616291366518e-05
    2. '-' → logprob: -9.625070571899414
    3. ' ' → logprob: -13.375070571899414
    4. ' -' → logprob: -13.500070571899414
    5. '```' → logprob: -14.125070571899414
    6. '   ' → logprob: -15.562570571899414
    7. '2' → logprob: -17.062570571899414
    8. '  ' → logprob: -17.375070571899414
    9. '=' → logprob: -17.750070571899414
    10. '=-' → logprob: -18.250070571899414

Token 397: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12759149074554443
    2. ':' → logprob: -2.127591609954834
    3. '           ' → logprob: -7.752591609954834
    4. '       ' → logprob: -9.252591133117676
    5. '=' → logprob: -9.877591133117676
    6. '):
' → logprob: -10.752591133117676
    7. ' :
' → logprob: -10.752591133117676
    8. ' and' → logprob: -11.752591133117676
    9. ':d' → logprob: -12.252591133117676
    10. '               ' → logprob: -12.252591133117676

Token 398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014095805585384369
    2. ':
' → logprob: -5.264095783233643
    3. ':' → logprob: -5.389095783233643
    4. '       ' → logprob: -5.889095783233643
    5. ' d' → logprob: -7.514095783233643
    6. '               ' → logprob: -8.1390962600708
    7. 'd' → logprob: -8.3890962600708
    8. '   ' → logprob: -8.7640962600708
    9. '          ' → logprob: -9.5140962600708
    10. '            
' → logprob: -10.5140962600708

Token 399: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.38728588819503784
    2. ' d' → logprob: -1.1372859477996826
    3. '               ' → logprob: -8.012286186218262
    4. '           ' → logprob: -9.887286186218262
    5. '   ' → logprob: -10.762286186218262
    6. '```' → logprob: -12.512286186218262
    7. '       ' → logprob: -12.762286186218262
    8. ' ' → logprob: -13.137286186218262
    9. '	d' → logprob: -13.387286186218262
    10. '              ' → logprob: -15.012286186218262

Token 400: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '=node' → logprob: -17.0
    3. '[' → logprob: -17.5
    4. ' [' → logprob: -19.375
    5. '[cell' → logprob: -20.375
    6. '[
' → logprob: -20.375
    7. 'node' → logprob: -21.25
    8. '[user' → logprob: -21.5
    9. '[player' → logprob: -21.625
    10. '[token' → logprob: -21.625

Token 401: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006315177772194147
    2. ']=' → logprob: -5.756315231323242
    3. '=' → logprob: -6.131315231323242
    4. ' =' → logprob: -7.131315231323242
    5. ' ]' → logprob: -9.381315231323242
    6. '[node' → logprob: -9.756315231323242
    7. '=node' → logprob: -11.381315231323242
    8. ')' → logprob: -13.006315231323242
    9. '[' → logprob: -13.381315231323242
    10. '```' → logprob: -14.756315231323242

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132660686969757
    2. ' =' → logprob: -1.3132660388946533
    3. ']' → logprob: -13.188265800476074
    4. ' ' → logprob: -14.063265800476074
    5. ')' → logprob: -14.438265800476074
    6. ']=' → logprob: -14.438265800476074
    7. '=d' → logprob: -16.31326675415039
    8. ')=' → logprob: -16.31326675415039
    9. '[' → logprob: -16.56326675415039
    10. '<|end|>' → logprob: -16.56326675415039

Token 403: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038043901324272156
    2. ' d' → logprob: -3.288043975830078
    3. '           ' → logprob: -13.538043975830078
    4. '   ' → logprob: -15.163043975830078
    5. ' ' → logprob: -15.163043975830078
    6. '               ' → logprob: -15.163043975830078
    7. '	d' → logprob: -15.288043975830078
    8. '            ' → logprob: -17.413043975830078
    9. '0' → logprob: -17.413043975830078
    10. '  ' → logprob: -17.913043975830078

Token 404: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0005537479883059859
    2. 'p' → logprob: -7.500553607940674
    3. '[' → logprob: -15.250554084777832
    4. ' p' → logprob: -16.000553131103516
    5. '	p' → logprob: -16.500553131103516
    6. '<p' → logprob: -17.000553131103516
    7. '[node' → logprob: -17.125553131103516
    8. ' ' → logprob: -17.375553131103516
    9. ' [' → logprob: -17.750553131103516
    10. '[
' → logprob: -17.750553131103516

Token 405: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5677281618118286
    2. ']' → logprob: -1.0677281618118286
    3. ' +' → logprob: -2.942728042602539
    4. ']+' → logprob: -3.317728042602539
    5. ' ' → logprob: -9.067728042602539
    6. ')' → logprob: -9.067728042602539
    7. ' ]' → logprob: -9.817728042602539
    8. ')+' → logprob: -10.192728042602539
    9. ' plus' → logprob: -10.442728042602539
    10. '[' → logprob: -11.317728042602539

Token 406: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02354290522634983
    2. ' +' → logprob: -3.773542881011963
    3. ' ' → logprob: -8.648543357849121
    4. '1' → logprob: -9.398543357849121
    5. '10' → logprob: -11.648543357849121
    6. '2' → logprob: -11.648543357849121
    7. ' plus' → logprob: -12.773543357849121
    8. '           ' → logprob: -13.148543357849121
    9. '+d' → logprob: -13.398543357849121
    10. '0' → logprob: -13.648543357849121

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010336418636143208
    2. ' ' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.251033782958984
    4. '           ' → logprob: -15.751033782958984
    5. '```' → logprob: -16.751033782958984
    6. '       ' → logprob: -18.126033782958984
    7. '[' → logprob: -18.313533782958984
    8. '=' → logprob: -18.438533782958984
    9. ' ' → logprob: -18.438533782958984
    10. '  ' → logprob: -18.501033782958984

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '           ' → logprob: -16.250022888183594
    5. '```' → logprob: -17.000022888183594
    6. '[' → logprob: -18.125022888183594
    7. '  ' → logprob: -18.125022888183594
    8. '       ' → logprob: -18.562522888183594
    9. '=' → logprob: -19.250022888183594
    10. '               ' → logprob: -19.437522888183594

Token 409: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00419165613129735
    2. 's' → logprob: -5.504191875457764
    3. ' s' → logprob: -9.379191398620605
    4. '   ' → logprob: -10.879191398620605
    5. '       ' → logprob: -12.129191398620605
    6. '               ' → logprob: -13.879191398620605
    7. ',' → logprob: -14.129191398620605
    8. '          ' → logprob: -14.129191398620605
    9. ' ' → logprob: -14.879191398620605
    10. '```' → logprob: -15.754191398620605

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010811517015099525
    2. 's' → logprob: -4.7608113288879395
    3. ' s' → logprob: -6.3858113288879395
    4. '   ' → logprob: -7.7608113288879395
    5. '       ' → logprob: -9.510811805725098
    6. '          ' → logprob: -13.510811805725098
    7. '```' → logprob: -13.510811805725098
    8. ' ' → logprob: -13.760811805725098
    9. ',' → logprob: -13.760811805725098
    10. '               ' → logprob: -14.010811805725098

Token 411: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0005653033731505275
    2. ' s' → logprob: -7.500565528869629
    3. '           ' → logprob: -11.625565528869629
    4. '   ' → logprob: -13.000565528869629
    5. 'node' → logprob: -14.375565528869629
    6. '       ' → logprob: -15.125565528869629
    7. 'p' → logprob: -15.875565528869629
    8. '	s' → logprob: -16.750564575195312
    9. 'd' → logprob: -17.250564575195312
    10. '               ' → logprob: -17.625564575195312

Token 412: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -13.125003814697266
    3. 'append' → logprob: -13.500003814697266
    4. ' .' → logprob: -15.250003814697266
    5. '.app' → logprob: -15.625003814697266
    6. '.push' → logprob: -15.625003814697266
    7. '.extend' → logprob: -17.625003814697266
    8. '.ap' → logprob: -17.875003814697266
    9. ' append' → logprob: -18.500003814697266
    10. '.add' → logprob: -18.875003814697266

Token 413: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. 'node' → logprob: -17.875
    3. '(' → logprob: -18.375
    4. '(
' → logprob: -19.75
    5. '[node' → logprob: -22.125
    6. '(nodes' → logprob: -22.375
    7. ',node' → logprob: -22.375
    8. ' (' → logprob: -22.5
    9. '=node' → logprob: -22.625
    10. '(n' → logprob: -22.75

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2929787039756775
    2. '(node' → logprob: -1.5429787635803223
    3. '(' → logprob: -3.5429787635803223
    4. '(p' → logprob: -4.542978763580322
    5. ')
' → logprob: -8.167978286743164
    6. '(
' → logprob: -8.417978286743164
    7. '(n' → logprob: -9.167978286743164
    8. '()' → logprob: -11.292978286743164
    9. 'p' → logprob: -12.042978286743164
    10. ')p' → logprob: -12.792978286743164

Token 415: 'm' (ID: 76)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7665167450904846
    2. 'f' → logprob: -2.39151668548584
    3. 'm' → logprob: -2.39151668548584
    4. 'u' → logprob: -2.51651668548584
    5. 'x' → logprob: -3.01651668548584
    6. 'mx' → logprob: -3.01651668548584
    7. 'd' → logprob: -3.14151668548584
    8. 'l' → logprob: -4.01651668548584
    9. 'a' → logprob: -4.01651668548584
    10. 't' → logprob: -4.39151668548584

Token 416: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.3886834979057312
    2. 'a' → logprob: -1.388683557510376
    3. ' =' → logprob: -3.638683557510376
    4. '=' → logprob: -3.638683557510376
    5. 'x' → logprob: -4.388683319091797
    6. '=max' → logprob: -5.513683319091797
    7. '=a' → logprob: -6.763683319091797
    8. 'max' → logprob: -8.013683319091797
    9. '   ' → logprob: -8.513683319091797
    10. 'd' → logprob: -8.513683319091797

Token 417: ' max' (ID: 2999)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.032309699803590775
    2. '0' → logprob: -3.7823097705841064
    3. 'max' → logprob: -4.907309532165527
    4. ' d' → logprob: -6.657309532165527
    5. ' max' → logprob: -8.907309532165527
    6. ' ' → logprob: -9.282309532165527
    7. '(d' → logprob: -10.657309532165527
    8. '[d' → logprob: -10.907309532165527
    9. '(max' → logprob: -11.032309532165527
    10. 'n' → logprob: -11.657309532165527

Token 418: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0006378580583259463
    2. '(range' → logprob: -7.375638008117676
    3. 'd' → logprob: -12.375638008117676
    4. 'range' → logprob: -12.750638008117676
    5. '(en' → logprob: -13.375638008117676
    6. '(' → logprob: -13.625638008117676
    7. '((' → logprob: -14.750638008117676
    8. '([' → logprob: -15.750638008117676
    9. '([(' → logprob: -16.00063705444336
    10. '(
' → logprob: -16.25063705444336

Token 419: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001322639436693862
    2. ')
' → logprob: -9.00013256072998
    3. ' )' → logprob: -11.87513256072998
    4. '<|end|>' → logprob: -13.87513256072998
    5. '))' → logprob: -14.87513256072998
    6. ')

' → logprob: -15.87513256072998
    7. ')+' → logprob: -16.750131607055664
    8. ')
' → logprob: -16.875131607055664
    9. ')#' → logprob: -16.875131607055664
    10. '())' → logprob: -16.875131607055664

Token 420: 'idx' (ID: 13196)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.8138405084609985
    2. 'd' → logprob: -2.313840389251709
    3. 'dm' → logprob: -2.313840389251709
    4. 'for' → logprob: -2.438840389251709
    5. 'x' → logprob: -2.563840389251709
    6. 'c' → logprob: -2.688840389251709
    7. 'max' → logprob: -2.938840389251709
    8. 'res' → logprob: -3.063840389251709
    9. 'r' → logprob: -3.188840389251709
    10. 'm' → logprob: -3.313840389251709

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09491939842700958
    2. 's' → logprob: -2.969919443130493
    3. 'es' → logprob: -3.969919443130493
    4. '=' → logprob: -4.594919204711914
    5. 'x' → logprob: -5.219919204711914
    6. 'i' → logprob: -6.344919204711914
    7. 'o' → logprob: -7.469919204711914
    8. '_' → logprob: -7.969919204711914
    9. 'max' → logprob: -8.219919204711914
    10. '_idx' → logprob: -8.219919204711914

Token 422: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029786715283989906
    2. ' d' → logprob: -4.404786586761475
    3. '[d' → logprob: -4.404786586761475
    4. '[' → logprob: -5.779786586761475
    5. ' [' → logprob: -7.404786586761475
    6. '[]
' → logprob: -7.529786586761475
    7. '0' → logprob: -8.029787063598633
    8. '[]' → logprob: -8.154787063598633
    9. ' ' → logprob: -10.904787063598633
    10. '   ' → logprob: -11.779787063598633

Token 423: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.676292231422849e-05
    2. '.' → logprob: -11.375017166137695
    3. 'index' → logprob: -12.375017166137695
    4. '.count' → logprob: -15.500017166137695
    5. '.idx' → logprob: -15.500017166137695
    6. '.copy' → logprob: -15.625017166137695
    7. ' .' → logprob: -16.125017166137695
    8. '.argmax' → logprob: -16.250017166137695
    9. '.indices' → logprob: -17.000017166137695
    10. '.ind' → logprob: -18.000017166137695

Token 424: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.500000953674316
    3. 'm' → logprob: -14.500000953674316
    4. '(max' → logprob: -15.500000953674316
    5. '(d' → logprob: -17.500001907348633
    6. '(
' → logprob: -19.125001907348633
    7. ' (' → logprob: -19.125001907348633
    8. '(n' → logprob: -19.250001907348633
    9. '((' → logprob: -19.875001907348633
    10. '(s' → logprob: -20.125001907348633

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013319060672074556
    2. ')
' → logprob: -6.626331806182861
    3. ' )' → logprob: -12.25133228302002
    4. ')

' → logprob: -14.75133228302002
    5. '())' → logprob: -15.00133228302002
    6. ')
' → logprob: -15.37633228302002
    7. '()' → logprob: -16.001331329345703
    8. ')#' → logprob: -17.126331329345703
    9. ' )
' → logprob: -17.126331329345703
    10. '),' → logprob: -17.376331329345703

Token 426: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2381100207567215
    2. 'res' → logprob: -2.988110065460205
    3. 'ans' → logprob: -3.113110065460205
    4. 'dm' → logprob: -3.488110065460205
    5. 'd' → logprob: -3.863110065460205
    6. 'result' → logprob: -3.988110065460205
    7. 'r' → logprob: -4.113110065460205
    8. 'm' → logprob: -4.988110065460205
    9. 'for' → logprob: -5.238110065460205
    10. 'x' → logprob: -5.613110065460205

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20379464328289032
    2. ' =' → logprob: -1.7037945985794067
    3. '.append' → logprob: -6.328794479370117
    4. '=[' → logprob: -7.953794479370117
    5. '[' → logprob: -9.203794479370117
    6. '=[]' → logprob: -10.328794479370117
    7. '.' → logprob: -10.328794479370117
    8. '[:]' → logprob: -10.578794479370117
    9. ',' → logprob: -11.578794479370117
    10. 's' → logprob: -11.703794479370117

Token 428: ' [' (ID: 723)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.04127982631325722
    2. '[ind' → logprob: -3.6662797927856445
    3. '[f' → logprob: -5.0412797927856445
    4. '[' → logprob: -5.5412797927856445
    5. ' [' → logprob: -5.6662797927856445
    6. '[index' → logprob: -8.541279792785645
    7. 'deque' → logprob: -8.791279792785645
    8. '[d' → logprob: -8.791279792785645
    9. '[id' → logprob: -9.166279792785645
    10. '[n' → logprob: -9.291279792785645

Token 429: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.6312321753939614e-05
    2. '0' → logprob: -10.375036239624023
    3. ' idx' → logprob: -12.500036239624023
    4. '
' → logprob: -14.500036239624023
    5. '[idx' → logprob: -15.375036239624023
    6. '(idx' → logprob: -15.375036239624023
    7. 'index' → logprob: -16.125036239624023
    8. '	idx' → logprob: -16.250036239624023
    9. 's' → logprob: -16.875036239624023
    10. '   ' → logprob: -18.000036239624023

Token 430: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4740920662879944
    2. ']' → logprob: -0.9740920662879944
    3. ']
' → logprob: -11.224092483520508
    4. ']

' → logprob: -13.599092483520508
    5. ' ]
' → logprob: -14.974092483520508
    6. ' ]' → logprob: -15.724092483520508
    7. '']
' → logprob: -18.849092483520508
    8. '']' → logprob: -18.974092483520508
    9. '```' → logprob: -18.974092483520508
    10. '}
' → logprob: -19.724092483520508

Token 431: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.5107177862082608e-05
    2. 'while' → logprob: -11.000024795532227
    3. 'dd' → logprob: -12.500024795532227
    4. 'visited' → logprob: -13.750024795532227
    5. 'p' → logprob: -13.875024795532227
    6. 'dp' → logprob: -14.000024795532227
    7. 'dist' → logprob: -14.875024795532227
    8. ' d' → logprob: -15.250024795532227
    9. 't' → logprob: -15.500024795532227
    10. 'dm' → logprob: -15.625024795532227

Token 432: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23743663728237152
    2. '=' → logprob: -1.8624366521835327
    3. '[idx' → logprob: -2.987436532974243
    4. '[' → logprob: -5.362436771392822
    5. '=[' → logprob: -8.237436294555664
    6. '[:]' → logprob: -8.362436294555664
    7. ' =[' → logprob: -8.487436294555664
    8. '2' → logprob: -9.362436294555664
    9. 'd' → logprob: -10.237436294555664
    10. 's' → logprob: -10.487436294555664

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12704621255397797
    2. '=' → logprob: -2.1270461082458496
    3. '2' → logprob: -9.627046585083008
    4. '1' → logprob: -11.002046585083008
    5. '[' → logprob: -11.502046585083008
    6. ' =[' → logprob: -12.002046585083008
    7. '[idx' → logprob: -12.377046585083008
    8. 'd' → logprob: -12.377046585083008
    9. 's' → logprob: -12.627046585083008
    10. ']' → logprob: -13.627046585083008

Token 434: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [-' → logprob: -14.000003814697266
    4. '-' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.125003814697266
    6. '[n' → logprob: -20.875003814697266
    7. '0' → logprob: -21.000003814697266
    8. '[:-' → logprob: -21.375003814697266
    9. ' ' → logprob: -21.500003814697266
    10. '[len' → logprob: -22.000003814697266

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '-' → logprob: -13.125001907348633
    3. ' ' → logprob: -17.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. ' -' → logprob: -17.750001907348633
    6. 'int' → logprob: -18.187501907348633
    7. '2' → logprob: -18.687501907348633
    8. 'n' → logprob: -19.312501907348633
    9. '
' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.937501907348633

Token 436: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.007516715209931135
    2. '*n' → logprob: -5.382516860961914
    3. ']' → logprob: -6.007516860961914
    4. '*' → logprob: -7.757516860961914
    5. 'n' → logprob: -13.382516860961914
    6. ']*(' → logprob: -14.132516860961914
    7. '```' → logprob: -14.382516860961914
    8. ' *' → logprob: -15.007516860961914
    9. ')*' → logprob: -15.007516860961914
    10. '*d' → logprob: -15.382516860961914

Token 437: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. ' n' → logprob: -13.500001907348633
    3. '
' → logprob: -17.000001907348633
    4. '(n' → logprob: -18.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. '	n' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -19.125001907348633
    9. '[n' → logprob: -20.000001907348633
    10. 'len' → logprob: -20.125001907348633

Token 438: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007729776669293642
    2. '<|end|>' → logprob: -4.882730007171631
    3. '[' → logprob: -9.757729530334473
    4. ' d' → logprob: -10.007729530334473
    5. '0' → logprob: -11.882729530334473
    6. 's' → logprob: -12.632729530334473
    7. '<|end|>' → logprob: -12.757729530334473
    8. '[d' → logprob: -13.632729530334473
    9. 'n' → logprob: -13.757729530334473
    10. ' ' → logprob: -13.882729530334473

Token 439: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -14.125001907348633
    3. '<|end|>' → logprob: -14.875001907348633
    4. '```' → logprob: -16.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. '0' → logprob: -16.500001907348633
    7. '1' → logprob: -18.000001907348633
    8. 's' → logprob: -18.250001907348633
    9. 'idx' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18008816242218018
    2. '[idx' → logprob: -1.9300881624221802
    3. '[' → logprob: -3.9300880432128906
    4. '[node' → logprob: -11.68008804321289
    5. '[s' → logprob: -11.93008804321289
    6. '[ind' → logprob: -12.93008804321289
    7. ' [' → logprob: -13.18008804321289
    8. '[index' → logprob: -13.80508804321289
    9. '[i' → logprob: -13.93008804321289
    10. 'idx' → logprob: -14.43008804321289

Token 441: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0019770495127886534
    2. '[' → logprob: -6.37697696685791
    3. '[s' → logprob: -8.25197696685791
    4. '[d' → logprob: -12.37697696685791
    5. 'idx' → logprob: -13.37697696685791
    6. '[id' → logprob: -13.50197696685791
    7. '[index' → logprob: -13.50197696685791
    8. '[ind' → logprob: -14.00197696685791
    9. '[i' → logprob: -14.25197696685791
    10. '[df' → logprob: -14.50197696685791

Token 442: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1517960956552997e-05
    2. ']=' → logprob: -11.500011444091797
    3. ' ]' → logprob: -13.750011444091797
    4. '=' → logprob: -15.250011444091797
    5. '']' → logprob: -18.875011444091797
    6. '[' → logprob: -19.250011444091797
    7. ']
' → logprob: -19.500011444091797
    8. '`]' → logprob: -19.500011444091797
    9. ']=-' → logprob: -20.000011444091797
    10. ' =' → logprob: -20.000011444091797

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. ']' → logprob: -16.038042068481445
    4. ']=' → logprob: -16.663042068481445
    5. ' ' → logprob: -17.538042068481445
    6. '[' → logprob: -18.163042068481445
    7. ')' → logprob: -18.538042068481445
    8. '<|end|>' → logprob: -18.663042068481445
    9. ')=' → logprob: -19.288042068481445
    10. '＝' → logprob: -19.788042068481445

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.5000057220459
    4. '۰' → logprob: -20.3750057220459
    5. 's' → logprob: -20.5000057220459
    6. '  ' → logprob: -20.8750057220459
    7. '1' → logprob: -21.6250057220459
    8. 'd' → logprob: -22.1875057220459
    9. '00' → logprob: -22.3125057220459
    10. '=' → logprob: -22.5625057220459

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. 's' → logprob: -16.25
    4. '۰' → logprob: -17.9375
    5. '1' → logprob: -18.875
    6. 'd' → logprob: -18.875
    7. '00' → logprob: -19.0
    8. '   ' → logprob: -19.1875
    9. '=' → logprob: -19.4375
    10. ' ' → logprob: -19.5

Token 446: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.277553620748222e-05
    2. ' while' → logprob: -9.750062942504883
    3. 'p' → logprob: -13.500062942504883
    4. '	while' → logprob: -13.625062942504883
    5. '<|end|>' → logprob: -13.875062942504883
    6. 's' → logprob: -15.375062942504883
    7. 'w' → logprob: -15.500062942504883
    8. 'While' → logprob: -15.625062942504883
    9. '```' → logprob: -16.250062942504883
    10. 'for' → logprob: -16.250062942504883

Token 447: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004428243264555931
    2. 'p' → logprob: -7.750442981719971
    3. ' while' → logprob: -11.375442504882812
    4. 'While' → logprob: -14.625442504882812
    5. '```' → logprob: -16.000442504882812
    6. '	while' → logprob: -16.750442504882812
    7. '   ' → logprob: -18.375442504882812
    8. 'for' → logprob: -18.625442504882812
    9. 't' → logprob: -19.500442504882812
    10. 'b' → logprob: -20.250442504882812

Token 448: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750484973192215
    2. ' s' → logprob: -3.5297505855560303
    3. '	s' → logprob: -18.90475082397461
    4. '_s' → logprob: -19.77975082397461
    5. '>s' → logprob: -20.02975082397461
    6. '<s' → logprob: -20.15475082397461
    7. '{s' → logprob: -20.52975082397461
    8. '[s' → logprob: -20.65475082397461
    9. '   ' → logprob: -21.40475082397461
    10. 'user' → logprob: -21.40475082397461

Token 449: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01314575970172882
    2. 's' → logprob: -5.138145923614502
    3. '<|end|>' → logprob: -5.388145923614502
    4. ':
' → logprob: -6.513145923614502
    5. '```' → logprob: -7.388145923614502
    6. '   ' → logprob: -9.013145446777344
    7. ')' → logprob: -9.263145446777344
    8. 'not' → logprob: -10.638145446777344
    9. '>' → logprob: -10.888145446777344
    10. '<|end|>' → logprob: -10.888145446777344

Token 450: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2269834578037262
    2. '   ' → logprob: -2.2269835472106934
    3. ' p' → logprob: -2.3519835472106934
    4. '  ' → logprob: -11.226983070373535
    5. ' ' → logprob: -11.476983070373535
    6. '	p' → logprob: -12.101983070373535
    7. '_p' → logprob: -14.476983070373535
    8. 'P' → logprob: -14.476983070373535
    9. '.p' → logprob: -14.601983070373535
    10. '       ' → logprob: -14.851983070373535

Token 451: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0015051016816869378
    2. ' p' → logprob: -6.501504898071289
    3. '   ' → logprob: -12.876504898071289
    4. '	p' → logprob: -15.876504898071289
    5. '  ' → logprob: -18.12650489807129
    6. 'P' → logprob: -18.50150489807129
    7. ' ' → logprob: -18.50150489807129
    8. '_p' → logprob: -19.12650489807129
    9. '.p' → logprob: -19.75150489807129
    10. 'node' → logprob: -19.87650489807129

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10065679997205734
    2. '=' → logprob: -2.350656747817993
    3. '=s' → logprob: -7.725656986236572
    4. 's' → logprob: -12.600656509399414
    5. '   ' → logprob: -12.725656509399414
    6. '=p' → logprob: -13.975656509399414
    7. ')' → logprob: -14.100656509399414
    8. ' s' → logprob: -15.100656509399414
    9. ' ' → logprob: -15.350656509399414
    10. 'p' → logprob: -16.850656509399414

Token 453: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750604182481766
    2. ' s' → logprob: -3.5297505855560303
    3. '<|end|>' → logprob: -17.52975082397461
    4. '_s' → logprob: -17.90475082397461
    5. '   ' → logprob: -18.15475082397461
    6. '.s' → logprob: -18.15475082397461
    7. '	s' → logprob: -18.27975082397461
    8. ' ' → logprob: -18.52975082397461
    9. '(s' → logprob: -18.65475082397461
    10. '[s' → logprob: -19.02975082397461

Token 454: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00010485442908247933
    2. 'pop' → logprob: -9.250104904174805
    3. '.' → logprob: -11.750104904174805
    4. '.append' → logprob: -15.250104904174805
    5. 's' → logprob: -15.375104904174805
    6. ' .' → logprob: -15.625104904174805
    7. '.p' → logprob: -15.875104904174805
    8. '.s' → logprob: -16.375104904174805
    9. ' pop' → logprob: -18.000104904174805
    10. '	pop' → logprob: -20.125104904174805

Token 455: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07125145196914673
    2. '()
' → logprob: -2.696251392364502
    3. ')' → logprob: -7.071251392364502
    4. '<|end|>' → logprob: -8.19625186920166
    5. '   ' → logprob: -9.82125186920166
    6. ')
' → logprob: -9.94625186920166
    7. '())' → logprob: -10.07125186920166
    8. '())
' → logprob: -11.32125186920166
    9. '(' → logprob: -11.69625186920166
    10. '()
' → logprob: -12.19625186920166

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026622318546287715
    2. ' for' → logprob: -9.000266075134277
    3. '	for' → logprob: -9.250266075134277
    4. 'for' → logprob: -10.125266075134277
    5. '       ' → logprob: -12.000266075134277
    6. ' ' → logprob: -15.250266075134277
    7. '   ' → logprob: -15.625266075134277
    8. '<|end|>' → logprob: -16.500267028808594
    9. '  ' → logprob: -17.500267028808594
    10. '    ' → logprob: -18.500267028808594

Token 457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005671844817698002
    2. '   ' → logprob: -5.755671977996826
    3. ' for' → logprob: -6.005671977996826
    4. '	for' → logprob: -11.255671501159668
    5. '       ' → logprob: -11.380671501159668
    6. ' ' → logprob: -13.380671501159668
    7. '  ' → logprob: -15.380671501159668
    8. '           ' → logprob: -17.380672454833984
    9. '_for' → logprob: -17.630672454833984
    10. 'For' → logprob: -17.755672454833984

Token 458: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.25193464756011963
    2. ' node' → logprob: -1.5019346475601196
    3. '	node' → logprob: -13.251935005187988
    4. '[node' → logprob: -13.376935005187988
    5. '(node' → logprob: -14.126935005187988
    6. 'user' → logprob: -14.626935005187988
    7. ' ' → logprob: -15.126935005187988
    8. '=node' → logprob: -15.626935005187988
    9. ',node' → logprob: -15.751935005187988
    10. 'n' → logprob: -16.126934051513672

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248620331287384
    2. 'in' → logprob: -3.7732486724853516
    3. '   ' → logprob: -13.773248672485352
    4. 'g' → logprob: -14.398248672485352
    5. ' ' → logprob: -14.523248672485352
    6. 'd' → logprob: -15.273248672485352
    7. '	in' → logprob: -15.898248672485352
    8. 's' → logprob: -16.02324867248535
    9. 'import' → logprob: -16.02324867248535
    10. '  ' → logprob: -16.02324867248535

Token 460: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005930101033300161
    2. ' g' → logprob: -5.130929946899414
    3. '	g' → logprob: -14.255929946899414
    4. '[g' → logprob: -15.505929946899414
    5. '#g' → logprob: -15.630929946899414
    6. '   ' → logprob: -16.130929946899414
    7. '_g' → logprob: -16.380929946899414
    8. '<|end|>' → logprob: -16.505929946899414
    9. ' ' → logprob: -16.880929946899414
    10. 's' → logprob: -17.005929946899414

Token 461: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -4.5491004129871726e-05
    2. 'p' → logprob: -10.000045776367188
    3. '	p' → logprob: -18.250045776367188
    4. ' p' → logprob: -18.250045776367188
    5. '<p' → logprob: -19.000045776367188
    6. '[' → logprob: -19.375045776367188
    7. '(p' → logprob: -19.875045776367188
    8. '   ' → logprob: -20.000045776367188
    9. 's' → logprob: -20.500045776367188
    10. '[s' → logprob: -20.750045776367188

Token 462: ']:
' (ID: 22152)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00047714399988763034
    2. 'p' → logprob: -7.875477313995361
    3. '):
' → logprob: -10.250476837158203
    4. ']:
' → logprob: -10.875476837158203
    5. '   ' → logprob: -11.375476837158203
    6. '):' → logprob: -11.875476837158203
    7. ' p' → logprob: -11.875476837158203
    8. ']:' → logprob: -12.125476837158203
    9. ':' → logprob: -12.250476837158203
    10. ':
' → logprob: -13.625476837158203

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.0219828002154827e-05
    2. ' if' → logprob: -11.875020027160645
    3. '   ' → logprob: -12.000020027160645
    4. '           ' → logprob: -12.750020027160645
    5. '<|end|>' → logprob: -13.500020027160645
    6. '               ' → logprob: -13.625020027160645
    7. 'if' → logprob: -14.000020027160645
    8. '	' → logprob: -15.125020027160645
    9. '```' → logprob: -16.12502098083496
    10. '	   ' → logprob: -16.62502098083496

Token 464: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09862649440765381
    2. ' if' → logprob: -2.4736266136169434
    3. 'if' (adapté à ' if') → logprob: -4.973626613616943
    4. '           ' → logprob: -6.098626613616943
    5. '   ' → logprob: -7.723626613616943
    6. '               ' → logprob: -11.973626136779785
    7. ' ' → logprob: -12.098626136779785
    8. '<|end|>' → logprob: -12.098626136779785
    9. '```' → logprob: -12.348626136779785
    10. '	if' → logprob: -12.598626136779785

Token 465: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3868737816810608
    2. 'd' → logprob: -1.136873722076416
    3. '   ' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.136874198913574
    5. '	d' → logprob: -14.761874198913574
    6. '  ' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.136873245239258
    8. '    ' → logprob: -17.511873245239258
    9. '(d' → logprob: -17.511873245239258
    10. ')d' → logprob: -17.636873245239258

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326589584350586
    2. '[node' → logprob: -0.7576589584350586
    3. '[' → logprob: -10.257658958435059
    4. 'node' → logprob: -11.757658958435059
    5. '```' → logprob: -12.257658958435059
    6. 'd' → logprob: -13.132658958435059
    7. '(node' → logprob: -13.757658958435059
    8. '[user' → logprob: -14.007658958435059
    9. ',node' → logprob: -14.132658958435059
    10. '
' → logprob: -14.382658958435059

Token 467: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.320199877838604e-07
    2. 'node' → logprob: -14.875
    3. '[' → logprob: -19.0
    4. '(node' → logprob: -19.625
    5. '	node' → logprob: -20.375
    6. '```' → logprob: -20.375
    7. ',node' → logprob: -20.375
    8. ' [' → logprob: -20.625
    9. '=node' → logprob: -20.625
    10. '
' → logprob: -20.625

Token 468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007292000576853752
    2. ' ==' → logprob: -5.632291793823242
    3. ']==' → logprob: -6.007291793823242
    4. '==' → logprob: -6.757291793823242
    5. ' ]' → logprob: -10.132291793823242
    6. '==-' → logprob: -11.507291793823242
    7. '[' → logprob: -11.632291793823242
    8. ')' → logprob: -13.507291793823242
    9. '   ' → logprob: -14.632291793823242
    10. ' ' → logprob: -15.257291793823242

Token 469: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04944514483213425
    2. '==' → logprob: -3.174445152282715
    3. '==-' → logprob: -5.049445152282715
    4. ']==' → logprob: -11.924445152282715
    5. '[' → logprob: -13.674445152282715
    6. ' ' → logprob: -13.924445152282715
    7. ']' → logprob: -13.924445152282715
    8. '=' → logprob: -13.924445152282715
    9. ')' → logprob: -14.299445152282715
    10. ')==' → logprob: -15.174445152282715

Token 470: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014001218369230628
    2. ' -' → logprob: -8.875140190124512
    3. '1' → logprob: -16.375139236450195
    4. ' ' → logprob: -17.000139236450195
    5. '   ' → logprob: -17.125139236450195
    6. '0' → logprob: -17.875139236450195
    7. '  ' → logprob: -19.250139236450195
    8. '```' → logprob: -20.125139236450195
    9. '−' → logprob: -20.125139236450195
    10. '2' → logprob: -20.625139236450195

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001711709308438003
    2. '-' → logprob: -6.376711845397949
    3. ' -' → logprob: -12.25171184539795
    4. ' ' → logprob: -12.62671184539795
    5. '```' → logprob: -13.87671184539795
    6. '   ' → logprob: -14.87671184539795
    7. '  ' → logprob: -17.314210891723633
    8. '           ' → logprob: -17.876710891723633
    9. '==-' → logprob: -17.876710891723633
    10. '(-' → logprob: -18.751710891723633

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6114606857299805
    2. ':' → logprob: -0.8614606857299805
    3. '           ' → logprob: -3.3614606857299805
    4. '):
' → logprob: -10.23646068572998
    5. '               ' → logprob: -10.36146068572998
    6. ' :
' → logprob: -10.48646068572998
    7. '          ' → logprob: -10.61146068572998
    8. ' and' → logprob: -10.73646068572998
    9. '=' → logprob: -11.11146068572998
    10. '       ' → logprob: -11.23646068572998

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11728205531835556
    2. ' d' → logprob: -2.7422821521759033
    3. 'd' → logprob: -3.1172821521759033
    4. '               ' → logprob: -6.867281913757324
    5. '   ' → logprob: -7.242281913757324
    6. '          ' → logprob: -9.992281913757324
    7. '       ' → logprob: -10.367281913757324
    8. ':
' → logprob: -10.617281913757324
    9. '                   ' → logprob: -10.742281913757324
    10. ' ' → logprob: -10.742281913757324

Token 474: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0297548845410347
    2. 'd' (adapté à ' d') → logprob: -3.529754877090454
    3. '               ' → logprob: -13.404754638671875
    4. '           ' → logprob: -13.529754638671875
    5. '   ' → logprob: -13.904754638671875
    6. '	d' → logprob: -14.779754638671875
    7. ')d' → logprob: -16.279754638671875
    8. ' ' → logprob: -16.779754638671875
    9. '```' → logprob: -17.029754638671875
    10. ' ' → logprob: -17.154754638671875

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20189206302165985
    2. '[node' → logprob: -1.7018920183181763
    3. 'd' → logprob: -8.201891899108887
    4. '[' → logprob: -9.701891899108887
    5. '[
' → logprob: -10.201891899108887
    6. '=node' → logprob: -10.451891899108887
    7. '_node' → logprob: -11.076891899108887
    8. '```' → logprob: -11.326891899108887
    9. 'node' → logprob: -11.576891899108887
    10. '   ' → logprob: -11.951891899108887

Token 476: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. '=node' → logprob: -16.125001907348633
    4. ' [' → logprob: -17.500001907348633
    5. '=' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '
' → logprob: -20.500001907348633
    8. 'node' → logprob: -20.625001907348633
    9. '[
' → logprob: -20.875001907348633
    10. '	node' → logprob: -21.125001907348633

Token 477: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2186560481786728
    2. ' =' → logprob: -1.718656063079834
    3. ']' → logprob: -4.093656063079834
    4. ']=' → logprob: -7.968656063079834
    5. ')' → logprob: -10.093655586242676
    6. '           ' → logprob: -11.718655586242676
    7. '   ' → logprob: -12.218655586242676
    8. ' ' → logprob: -12.468655586242676
    9. '            ' → logprob: -12.718655586242676
    10. ' ]' → logprob: -13.218655586242676

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022443771362305
    2. ' =' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.16022491455078
    4. '   ' → logprob: -16.91022491455078
    5. '[' → logprob: -17.16022491455078
    6. ']' → logprob: -17.41022491455078
    7. '=
' → logprob: -17.53522491455078
    8. ')' → logprob: -17.53522491455078
    9. '+=' → logprob: -17.53522491455078
    10. '=d' → logprob: -18.16022491455078

Token 479: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023246875032782555
    2. ' d' → logprob: -3.7732467651367188
    3. '   ' → logprob: -15.023246765136719
    4. '           ' → logprob: -15.023246765136719
    5. '	d' → logprob: -15.398246765136719
    6. '
' → logprob: -15.523246765136719
    7. ' ' → logprob: -15.648246765136719
    8. '  ' → logprob: -16.64824676513672
    9. '    ' → logprob: -16.77324676513672
    10. ')d' → logprob: -17.27324676513672

Token 480: '1' (ID: 16)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.4744042754173279
    2. '[p' → logprob: -0.9744042754173279
    3. '1' → logprob: -8.724404335021973
    4. 'node' → logprob: -8.849404335021973
    5. 'p' → logprob: -11.224404335021973
    6. '[' → logprob: -13.099404335021973
    7. ' node' → logprob: -13.974404335021973
    8. '   ' → logprob: -13.974404335021973
    9. ' p' → logprob: -14.349404335021973
    10. '(node' → logprob: -14.849404335021973

Token 481: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.007207371760159731
    2. '[node' → logprob: -5.00720739364624
    3. 'p' → logprob: -7.63220739364624
    4. 'node' → logprob: -12.382206916809082
    5. '[' → logprob: -14.007206916809082
    6. '```' → logprob: -14.757206916809082
    7. '
' → logprob: -15.257206916809082
    8. '[
' → logprob: -15.757206916809082
    9. '[parent' → logprob: -15.757206916809082
    10. '[P' → logprob: -15.757206916809082

Token 482: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015826476737856865
    2. ']+' → logprob: -4.26582670211792
    3. '+' → logprob: -6.51582670211792
    4. ' +' → logprob: -8.765826225280762
    5. ' ]' → logprob: -11.015826225280762
    6. '+]' → logprob: -12.140826225280762
    7. '[' → logprob: -13.890826225280762
    8. ')' → logprob: -14.140826225280762
    9. '1' → logprob: -15.140826225280762
    10. '   ' → logprob: -15.140826225280762

Token 483: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014141082763672
    2. ' +' → logprob: -1.7014141082763672
    3. ' ' → logprob: -15.451414108276367
    4. '+
' → logprob: -15.576414108276367
    5. '1' → logprob: -16.076414108276367
    6. '＋' → logprob: -16.576414108276367
    7. '[' → logprob: -16.826414108276367
    8. ' ' → logprob: -16.826414108276367
    9. '
' → logprob: -17.076414108276367
    10. ' plus' → logprob: -17.201414108276367

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.375296592712402
    4. '           ' → logprob: -15.750296592712402
    5. '```' → logprob: -16.50029754638672
    6. '       ' → logprob: -18.06279754638672
    7. ' ' → logprob: -18.12529754638672
    8. '               ' → logprob: -18.12529754638672
    9. '  ' → logprob: -18.18779754638672
    10. '<|end|>' → logprob: -18.68779754638672

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.750066757202148
    4. '```' → logprob: -16.62506675720215
    5. '<|end|>' → logprob: -17.50006675720215
    6. '           ' → logprob: -18.12506675720215
    7. '  ' → logprob: -19.37506675720215
    8. '       ' → logprob: -19.43756675720215
    9. '۱' → logprob: -19.81256675720215
    10. '[' → logprob: -19.93756675720215

Token 486: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000563042180147022
    2. 's' → logprob: -7.500563144683838
    3. '               ' → logprob: -12.87556266784668
    4. ' s' → logprob: -13.00056266784668
    5. '		' → logprob: -13.50056266784668
    6. '       ' → logprob: -13.50056266784668
    7. '   ' → logprob: -13.62556266784668
    8. '          ' → logprob: -14.62556266784668
    9. '                   ' → logprob: -15.50056266784668
    10. '```' → logprob: -16.12556266784668

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005645881756208837
    2. 's' → logprob: -7.5005645751953125
    3. '       ' → logprob: -11.875564575195312
    4. '   ' → logprob: -12.875564575195312
    5. '               ' → logprob: -13.625564575195312
    6. ' s' → logprob: -14.625564575195312
    7. '          ' → logprob: -14.875564575195312
    8. '		' → logprob: -17.375564575195312
    9. '         ' → logprob: -18.000564575195312
    10. '                   ' → logprob: -18.500564575195312

Token 488: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -9.615255839889869e-05
    2. ' s' → logprob: -9.250096321105957
    3. '           ' → logprob: -19.00009536743164
    4. '   ' → logprob: -20.12509536743164
    5. '       ' → logprob: -21.25009536743164
    6. '	s' → logprob: -21.25009536743164
    7. 'node' → logprob: -21.50009536743164
    8. '_s' → logprob: -21.62509536743164
    9. '`s' → logprob: -23.50009536743164
    10. '{s' → logprob: -23.75009536743164

Token 489: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5776860184123507e-06
    2. 'append' → logprob: -13.25000286102295
    3. '.' → logprob: -14.12500286102295
    4. '.app' → logprob: -16.750001907348633
    5. ' .' → logprob: -19.000001907348633
    6. 'app' → logprob: -20.250001907348633
    7. '.extend' → logprob: -20.625001907348633
    8. '.push' → logprob: -21.875001907348633
    9. '.pop' → logprob: -22.250001907348633
    10. '	append' → logprob: -22.250001907348633

Token 490: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.1472419600977446e-06
    2. '[node' → logprob: -14.250000953674316
    3. 'node' → logprob: -14.750000953674316
    4. '(' → logprob: -17.625001907348633
    5. '(
' → logprob: -19.125001907348633
    6. '=node' → logprob: -19.250001907348633
    7. ',node' → logprob: -20.625001907348633
    8. '(n' → logprob: -21.500001907348633
    9. '1' → logprob: -21.625001907348633
    10. '(Node' → logprob: -22.500001907348633

Token 491: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.919942486798391e-05
    2. ')
' → logprob: -9.750059127807617
    3. ')
' → logprob: -14.875059127807617
    4. ' )' → logprob: -15.875059127807617
    5. ')

' → logprob: -16.125059127807617
    6. ']' → logprob: -16.875059127807617
    7. '```' → logprob: -16.875059127807617
    8. '))' → logprob: -17.125059127807617
    9. 'return' → logprob: -17.375059127807617
    10. ')`' → logprob: -17.500059127807617

Token 492: 'diam' (ID: 98903)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7567925453186035
    2. 'm' → logprob: -1.0067925453186035
    3. 'mx' → logprob: -3.0067925453186035
    4. 'dm' → logprob: -3.8817925453186035
    5. 'j' → logprob: -4.1317925453186035
    6. 'diam' → logprob: -4.3817925453186035
    7. 'md' → logprob: -4.5067925453186035
    8. 'max' → logprob: -4.6317925453186035
    9. 'r' → logprob: -5.2567925453186035
    10. 'end' → logprob: -5.2567925453186035

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16487957537174225
    2. 'eter' → logprob: -1.914879560470581
    3. ' =' → logprob: -5.66487979888916
    4. 'eters' → logprob: -7.41487979888916
    5. 'ètre' → logprob: -8.28987979888916
    6. 'etre' → logprob: -9.66487979888916
    7. 'et' → logprob: -10.03987979888916
    8. 'etr' → logprob: -10.16487979888916
    9. 'etter' → logprob: -10.28987979888916
    10. '=d' → logprob: -10.66487979888916

Token 494: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07065270096063614
    2. ' max' → logprob: -2.695652723312378
    3. 'd' → logprob: -7.320652484893799
    4. ' d' → logprob: -10.070652961730957
    5. 'm' → logprob: -11.820652961730957
    6. '	max' → logprob: -13.820652961730957
    7. '(max' → logprob: -13.820652961730957
    8. 'min' → logprob: -14.070652961730957
    9. '=max' → logprob: -14.070652961730957
    10. '   ' → logprob: -15.070652961730957

Token 495: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9361264946837764e-07
    2. 'd' → logprob: -16.625
    3. '[d' → logprob: -16.75
    4. '(' → logprob: -19.375
    5. '([' → logprob: -20.0
    6. '(
' → logprob: -20.625
    7. '=d' → logprob: -22.25
    8. '	d' → logprob: -22.5
    9. '(D' → logprob: -22.875
    10. '((' → logprob: -23.25

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -13.875001907348633
    3. 'd' → logprob: -14.750001907348633
    4. ']' → logprob: -16.000001907348633
    5. '])' → logprob: -17.125001907348633
    6. '[' → logprob: -18.625001907348633
    7. ' ' → logprob: -18.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. ')]' → logprob: -19.750001907348633
    10. '...' → logprob: -20.000001907348633

Token 497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5861724831629544e-05
    2. ')
' → logprob: -10.250056266784668
    3. ' )' → logprob: -10.875056266784668
    4. '))' → logprob: -14.750056266784668
    5. ')

' → logprob: -15.125056266784668
    6. ')#' → logprob: -16.00005531311035
    7. ')+' → logprob: -16.12505531311035
    8. '<|end|>' → logprob: -16.37505531311035
    9. '())' → logprob: -16.50005531311035
    10. '[' → logprob: -16.50005531311035

Token 498: 'idx' (ID: 13196)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8003321886062622
    2. 'dm' → logprob: -1.6753321886062622
    3. 'for' → logprob: -2.0503320693969727
    4. 'result' → logprob: -2.3003320693969727
    5. 'max' → logprob: -3.1753320693969727
    6. 'ans' → logprob: -3.4253320693969727
    7. 'r' → logprob: -3.9253320693969727
    8. 'count' → logprob: -4.425332069396973
    9. 'print' → logprob: -4.800332069396973
    10. 'results' → logprob: -5.175332069396973

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34849607944488525
    2. '=' → logprob: -1.2234960794448853
    3. 's' → logprob: -10.848496437072754
    4. '_=' → logprob: -11.473496437072754
    5. '2' → logprob: -11.598496437072754
    6. '_' → logprob: -12.973496437072754
    7. '_idx' → logprob: -13.723496437072754
    8. ' ' → logprob: -13.848496437072754
    9. '1' → logprob: -13.973496437072754
    10. '=d' → logprob: -14.098496437072754

Token 500: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38688531517982483
    2. ' d' → logprob: -1.1368852853775024
    3. '   ' → logprob: -12.636885643005371
    4. ' ' → logprob: -12.636885643005371
    5. '[' → logprob: -13.261885643005371
    6. '0' → logprob: -13.261885643005371
    7. '[d' → logprob: -13.511885643005371
    8. '	d' → logprob: -14.261885643005371
    9. '  ' → logprob: -14.386885643005371
    10. ' [' → logprob: -14.761885643005371

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '.index' → logprob: -14.125000953674316
    3. ' ' → logprob: -19.625
    4. '１' → logprob: -19.75
    5. '.' → logprob: -19.875
    6. '```' → logprob: -19.875
    7. 'index' → logprob: -20.0
    8. ' .' → logprob: -20.5
    9. '[' → logprob: -21.375
    10. '۱' → logprob: -21.5625

Token 502: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.9385402993066236e-05
    2. '.' → logprob: -10.875019073486328
    3. ' .' → logprob: -16.000019073486328
    4. 'index' → logprob: -16.250019073486328
    5. '.i' → logprob: -17.500019073486328
    6. '.idx' → logprob: -17.625019073486328
    7. '.ind' → logprob: -17.750019073486328
    8. '.Index' → logprob: -19.500019073486328
    9. '#index' → logprob: -19.750019073486328
    10. '/index' → logprob: -20.375019073486328

Token 503: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2113979209971149e-05
    2. 'diam' → logprob: -11.750012397766113
    3. 'd' → logprob: -13.000012397766113
    4. '(' → logprob: -13.625012397766113
    5. '(max' → logprob: -14.625012397766113
    6. '(m' → logprob: -16.125011444091797
    7. 'max' → logprob: -16.375011444091797
    8. '((' → logprob: -18.250011444091797
    9. '0' → logprob: -18.625011444091797
    10. '(
' → logprob: -18.750011444091797

Token 504: 'iam' (ID: 5866)
  Prédit: 'iam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iam' → logprob: -2.117345684382599e-05
    2. ' iam' → logprob: -11.500020980834961
    3. 'iameter' → logprob: -13.000020980834961
    4. 'Iam' → logprob: -13.250020980834961
    5. 'i' → logprob: -13.750020980834961
    6. 'am' → logprob: -14.000020980834961
    7. ')' → logprob: -14.000020980834961
    8. 'IAM' → logprob: -14.250020980834961
    9. 'diam' → logprob: -14.375020980834961
    10. 'iams' → logprob: -14.750020980834961

Token 505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019329203059896827
    2. ')
' → logprob: -6.2519330978393555
    3. ')

' → logprob: -13.126933097839355
    4. ' )' → logprob: -14.126933097839355
    5. ')
' → logprob: -15.126933097839355
    6. '())' → logprob: -15.251933097839355
    7. '+' → logprob: -15.626933097839355
    8. '()' → logprob: -16.00193214416504
    9. '))' → logprob: -16.25193214416504
    10. '),' → logprob: -16.37693214416504

Token 506: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6965200304985046
    2. 'res' → logprob: -1.1965200901031494
    3. 'result' → logprob: -2.6965200901031494
    4. 'ans' → logprob: -2.8215200901031494
    5. 'dm' → logprob: -3.1965200901031494
    6. 'r' → logprob: -4.82151985168457
    7. 'total' → logprob: -5.19651985168457
    8. 'answer' → logprob: -5.57151985168457
    9. 'm' → logprob: -6.19651985168457
    10. 'max' → logprob: -6.44651985168457

Token 507: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5234822630882263
    2. ' =' → logprob: -0.8984822630882263
    3. '=[' → logprob: -8.273482322692871
    4. '.append' → logprob: -9.398482322692871
    5. '[' → logprob: -11.148482322692871
    6. ' =[' → logprob: -13.273482322692871
    7. 's' → logprob: -13.773482322692871
    8. '=[]' → logprob: -14.148482322692871
    9. ',' → logprob: -14.523482322692871
    10. 'append' → logprob: -15.148482322692871

Token 508: ' [' (ID: 723)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5149211287498474
    2. '[f' → logprob: -1.0149211883544922
    3. '[s' → logprob: -4.389921188354492
    4. ' [' → logprob: -4.389921188354492
    5. '[ind' → logprob: -4.764921188354492
    6. '[' → logprob: -6.139921188354492
    7. '[n' → logprob: -6.514921188354492
    8. '[a' → logprob: -6.514921188354492
    9. 'f' → logprob: -8.014921188354492
    10. '[i' → logprob: -8.014921188354492

Token 509: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.3458322731312364e-06
    2. '(idx' → logprob: -12.500007629394531
    3. ' idx' → logprob: -13.500007629394531
    4. 'ind' → logprob: -13.875007629394531
    5. '0' → logprob: -14.125007629394531
    6. 'index' → logprob: -15.500007629394531
    7. '[idx' → logprob: -15.875007629394531
    8. 'indx' → logprob: -16.75000762939453
    9. '
' → logprob: -17.00000762939453
    10. '(' → logprob: -17.12500762939453

Token 510: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4629646837711334
    2. ']
' → logprob: -1.087964653968811
    3. ',' → logprob: -3.5879647731781006
    4. 'd' → logprob: -5.7129645347595215
    5. '   ' → logprob: -6.5879645347595215
    6. ',d' → logprob: -8.33796501159668
    7. '[' → logprob: -8.83796501159668
    8. '<|end|>' → logprob: -8.96296501159668
    9. ')
' → logprob: -9.08796501159668
    10. '
' → logprob: -9.08796501159668

Token 511: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022975169122219086
    2. 'res' → logprob: -6.752297401428223
    3. 'visited' → logprob: -7.877297401428223
    4. 'p' → logprob: -8.752297401428223
    5. 'while' → logprob: -8.877297401428223
    6. 'b' → logprob: -9.502297401428223
    7. 'dist' → logprob: -9.502297401428223
    8. 'for' → logprob: -10.002297401428223
    9. 'ans' → logprob: -10.252297401428223
    10. 'diam' → logprob: -10.377297401428223

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01392301730811596
    2. '1' → logprob: -4.513923168182373
    3. ' =' → logprob: -6.013923168182373
    4. '=' → logprob: -8.263922691345215
    5. '[idx' → logprob: -9.638922691345215
    6. '[-' → logprob: -10.388922691345215
    7. '0' → logprob: -10.638922691345215
    8. '=[' → logprob: -10.638922691345215
    9. 'idx' → logprob: -11.388922691345215
    10. '3' → logprob: -12.763922691345215

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931583285331726
    2. ' =' → logprob: -0.6931583285331726
    3. '=[' → logprob: -11.818158149719238
    4. '[' → logprob: -13.443158149719238
    5. ' =[' → logprob: -13.818158149719238
    6. '[-' → logprob: -15.068158149719238
    7. '2' → logprob: -15.193158149719238
    8. '=[]' → logprob: -15.568158149719238
    9. ']' → logprob: -15.818158149719238
    10. ' ' → logprob: -16.693159103393555

Token 514: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. '-' → logprob: -16.0
    4. ' [-' → logprob: -17.625
    5. '][-' → logprob: -20.625
    6. '```' → logprob: -20.75
    7. '   ' → logprob: -21.75
    8. '`' → logprob: -22.125
    9. '(-' → logprob: -22.375
    10. '[]' → logprob: -22.5

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06203142926096916
    2. '-' → logprob: -2.8120315074920654
    3. '[-' → logprob: -9.687031745910645
    4. ' -' → logprob: -14.062031745910645
    5. '```' → logprob: -14.437031745910645
    6. '[' → logprob: -15.937031745910645
    7. ' ' → logprob: -17.187030792236328
    8. ']' → logprob: -17.437030792236328
    9. '...' → logprob: -17.562030792236328
    10. '`' → logprob: -17.687030792236328

Token 516: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.34313350915908813
    2. '*n' → logprob: -1.7181334495544434
    3. ']' → logprob: -2.4681334495544434
    4. '*' → logprob: -4.218133449554443
    5. '[n' → logprob: -5.218133449554443
    6. 'n' → logprob: -5.343133449554443
    7. '[' → logprob: -7.218133449554443
    8. '*d' → logprob: -8.468133926391602
    9. '[]' → logprob: -9.218133926391602
    10. '*[' → logprob: -9.468133926391602

Token 517: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.625
    3. 's' → logprob: -16.875
    4. '```' → logprob: -17.0
    5. '<|end|>' → logprob: -17.75
    6. '	n' → logprob: -20.0
    7. '[n' → logprob: -20.125
    8. 'ns' → logprob: -20.875
    9. ')n' → logprob: -21.0
    10. '[' → logprob: -21.375

Token 518: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15964314341545105
    2. '[idx' → logprob: -2.2846431732177734
    3. 's' → logprob: -3.2846431732177734
    4. '[s' → logprob: -5.409643173217773
    5. 'idx' → logprob: -5.659643173217773
    6. '[' → logprob: -8.534643173217773
    7. '
' → logprob: -10.159643173217773
    8. '```' → logprob: -10.409643173217773
    9. '[n' → logprob: -11.159643173217773
    10. 'n' → logprob: -11.284643173217773

Token 519: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -16.875
    3. '```' → logprob: -19.125
    4. '[' → logprob: -19.25
    5. '   ' → logprob: -20.75
    6. '[d' → logprob: -20.875
    7. '
' → logprob: -20.875
    8. 's' → logprob: -21.125
    9. '<|end|>' → logprob: -21.5
    10. 'idx' → logprob: -22.0

Token 520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '[idx' → logprob: -13.375001907348633
    3. '```' → logprob: -16.125001907348633
    4. '[' → logprob: -16.750001907348633
    5. '[ind' → logprob: -17.750001907348633
    6. '_' → logprob: -18.125001907348633
    7. '۲' → logprob: -18.875001907348633
    8. '₂' → logprob: -19.125001907348633
    9. '[index' → logprob: -19.312501907348633
    10. '[s' → logprob: -19.312501907348633

Token 521: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.002843625843524933
    2. '[s' → logprob: -5.877843856811523
    3. '[d' → logprob: -10.877843856811523
    4. '[' → logprob: -11.377843856811523
    5. 'idx' → logprob: -12.002843856811523
    6. 's' → logprob: -13.752843856811523
    7. 'd' → logprob: -14.752843856811523
    8. '=' → logprob: -15.502843856811523
    9. ' =' → logprob: -16.377843856811523
    10. '[i' → logprob: -16.502843856811523

Token 522: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007433769293129444
    2. '=' → logprob: -5.382433891296387
    3. ']=' → logprob: -5.882433891296387
    4. ' =' → logprob: -11.382433891296387
    5. ' ]' → logprob: -11.507433891296387
    6. ')' → logprob: -17.00743293762207
    7. '   ' → logprob: -17.50743293762207
    8. ']
' → logprob: -18.38243293762207
    9. '`]' → logprob: -18.38243293762207
    10. ' ' → logprob: -18.63243293762207

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. ']=' → logprob: -17.02975082397461
    4. ' ' → logprob: -17.27975082397461
    5. ']' → logprob: -17.40475082397461
    6. '   ' → logprob: -18.15475082397461
    7. '=
' → logprob: -18.40475082397461
    8. ')' → logprob: -19.52975082397461
    9. '<|end|>' → logprob: -19.52975082397461
    10. ')=' → logprob: -19.90475082397461

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '=' → logprob: -17.625024795532227
    5. '۰' → logprob: -17.625024795532227
    6. 's' → logprob: -18.375024795532227
    7. '<|end|>' → logprob: -18.625024795532227
    8. '  ' → logprob: -18.812524795532227
    9. 'def' → logprob: -19.125024795532227
    10. 'd' → logprob: -19.437524795532227

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -18.125001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.000001907348633
    6. 'def' → logprob: -19.937501907348633
    7. '=' → logprob: -20.000001907348633
    8. '1' → logprob: -20.625001907348633
    9. '```' → logprob: -20.937501907348633
    10. '  ' → logprob: -21.000001907348633

Token 526: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001767170149832964
    2. ' while' → logprob: -6.376767158508301
    3. '	while' → logprob: -10.1267671585083
    4. 's' → logprob: -10.8767671585083
    5. '<|end|>' → logprob: -12.6267671585083
    6. '```' → logprob: -14.1267671585083
    7. 'While' → logprob: -14.5017671585083
    8. '
' → logprob: -14.6267671585083
    9. '   ' → logprob: -14.6267671585083
    10. 'for' → logprob: -15.1267671585083

Token 527: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0280383548888494e-06
    2. ' while' → logprob: -13.875000953674316
    3. 'for' → logprob: -17.625001907348633
    4. 's' → logprob: -17.875001907348633
    5. 'While' → logprob: -18.875001907348633
    6. '	while' → logprob: -19.000001907348633
    7. '```' → logprob: -20.875001907348633
    8. 'w' → logprob: -21.375001907348633
    9. '
' → logprob: -21.375001907348633
    10. 'stack' → logprob: -21.625001907348633

Token 528: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004620472434908152
    2. ' s' → logprob: -5.379620552062988
    3. 'True' → logprob: -16.129619598388672
    4. '(s' → logprob: -17.254619598388672
    5. '	s' → logprob: -17.504619598388672
    6. '   ' → logprob: -17.754619598388672
    7. '```' → logprob: -17.754619598388672
    8. ' ' → logprob: -18.379619598388672
    9. '_s' → logprob: -18.692119598388672
    10. '#' → logprob: -18.817119598388672

Token 529: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3243987560272217
    2. ':
' → logprob: -1.3243987560272217
    3. 's' → logprob: -4.699398994445801
    4. '```' → logprob: -6.699398994445801
    5. '   ' → logprob: -7.574398994445801
    6. '<|end|>' → logprob: -9.9493989944458
    7. '):
' → logprob: -10.3243989944458
    8. '[' → logprob: -10.4493989944458
    9. '=' → logprob: -10.9493989944458
    10. '``' → logprob: -11.1993989944458

Token 530: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5326895117759705
    2. '   ' → logprob: -0.9076895117759705
    3. 'p' → logprob: -4.657689571380615
    4. '	p' → logprob: -10.657689094543457
    5. ' ' → logprob: -12.782689094543457
    6. '   ' → logprob: -13.032689094543457
    7. '```' → logprob: -14.282689094543457
    8. '  ' → logprob: -14.407689094543457
    9. ' ' → logprob: -14.657689094543457
    10. '       ' → logprob: -14.907689094543457

Token 531: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.25193241238594055
    2. 'p' (adapté à ' p') → logprob: -1.5019323825836182
    3. '   ' → logprob: -12.751932144165039
    4. '	p' → logprob: -15.251932144165039
    5. ')p' → logprob: -16.37693214416504
    6. '  ' → logprob: -17.87693214416504
    7. 's' → logprob: -18.12693214416504
    8. '.p' → logprob: -18.87693214416504
    9. ' ' → logprob: -18.87693214416504
    10. '(p' → logprob: -19.00193214416504

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02652333676815033
    2. '=' → logprob: -3.6515233516693115
    3. '=s' → logprob: -8.65152359008789
    4. 's' → logprob: -10.02652359008789
    5. ' s' → logprob: -13.40152359008789
    6. '=p' → logprob: -13.65152359008789
    7. '   ' → logprob: -13.77652359008789
    8. ')' → logprob: -16.77652359008789
    9. 'p' → logprob: -16.77652359008789
    10. ' ' → logprob: -17.02652359008789

Token 533: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141451060771942
    2. ' s' → logprob: -1.7014144659042358
    3. 'p' → logprob: -14.951414108276367
    4. '	s' → logprob: -15.701414108276367
    5. '(s' → logprob: -15.826414108276367
    6. '[s' → logprob: -16.076414108276367
    7. '{s' → logprob: -16.201414108276367
    8. '<s' → logprob: -16.576414108276367
    9. '   ' → logprob: -16.701414108276367
    10. '>s' → logprob: -16.701414108276367

Token 534: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.000215457082958892
    2. 'pop' → logprob: -8.500215530395508
    3. '.append' → logprob: -11.750215530395508
    4. '.' → logprob: -12.875215530395508
    5. '.p' → logprob: -13.625215530395508
    6. 's' → logprob: -15.750215530395508
    7. ' .' → logprob: -16.500215530395508
    8. '.s' → logprob: -17.375215530395508
    9. ' pop' → logprob: -18.250215530395508
    10. '(pop' → logprob: -20.000215530395508

Token 535: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10658901184797287
    2. '()' → logprob: -2.8565890789031982
    3. '       ' → logprob: -3.9815890789031982
    4. '(p' → logprob: -4.606588840484619
    5. 's' → logprob: -5.606588840484619
    6. '<|end|>' → logprob: -5.981588840484619
    7. '```' → logprob: -6.106588840484619
    8. ')' → logprob: -6.731588840484619
    9. '=' → logprob: -6.981588840484619
    10. '()
' → logprob: -6.981588840484619

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08613263070583344
    2. 'for' → logprob: -3.211132526397705
    3. '	for' → logprob: -3.711132526397705
    4. ' for' → logprob: -4.211132526397705
    5. '       ' → logprob: -5.836132526397705
    6. ' ' → logprob: -11.461133003234863
    7. '   ' → logprob: -13.461133003234863
    8. '  ' → logprob: -13.961133003234863
    9. '    ' → logprob: -14.086133003234863
    10. '```' → logprob: -14.461133003234863

Token 537: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007111206650733948
    2. ' for' → logprob: -7.250710964202881
    3. '   ' → logprob: -13.875711441040039
    4. '       ' → logprob: -16.00071144104004
    5. '	for' → logprob: -16.50071144104004
    6. 'For' → logprob: -21.00071144104004
    7. ' ' → logprob: -21.37571144104004
    8. '```' → logprob: -21.37571144104004
    9. '  ' → logprob: -21.75071144104004
    10. '
' → logprob: -21.75071144104004

Token 538: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4740805923938751
    2. ' node' → logprob: -0.9740805625915527
    3. '	node' → logprob: -13.349081039428711
    4. '[node' → logprob: -13.474081039428711
    5. '(node' → logprob: -15.224081039428711
    6. ' ' → logprob: -16.22408103942871
    7. '=node' → logprob: -16.47408103942871
    8. ',node' → logprob: -16.97408103942871
    9. 'token' → logprob: -17.34908103942871
    10. '
' → logprob: -17.72408103942871

Token 539: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002216562628746
    2. 'in' → logprob: -2.350221633911133
    3. 'g' → logprob: -12.600221633911133
    4. ' ' → logprob: -12.725221633911133
    5. 's' → logprob: -13.100221633911133
    6. '   ' → logprob: -13.225221633911133
    7. 'd' → logprob: -13.600221633911133
    8. '	in' → logprob: -13.725221633911133
    9. 'import' → logprob: -14.850221633911133
    10. '  ' → logprob: -14.850221633911133

Token 540: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004079470410943031
    2. ' g' → logprob: -5.504079341888428
    3. '   ' → logprob: -15.379079818725586
    4. ' ' → logprob: -15.504079818725586
    5. 's' → logprob: -15.629079818725586
    6. '	g' → logprob: -16.004079818725586
    7. '
' → logprob: -16.504079818725586
    8. '[g' → logprob: -16.629079818725586
    9. '```' → logprob: -17.754079818725586
    10. '#g' → logprob: -17.754079818725586

Token 541: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -7.493430894101039e-05
    2. 'p' → logprob: -9.500075340270996
    3. '<p' → logprob: -17.25007438659668
    4. ' p' → logprob: -18.62507438659668
    5. '(p' → logprob: -18.75007438659668
    6. '[' → logprob: -19.12507438659668
    7. 's' → logprob: -19.37507438659668
    8. '```' → logprob: -19.50007438659668
    9. '	p' → logprob: -19.75007438659668
    10. '[
' → logprob: -20.00007438659668

Token 542: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.012397566810250282
    2. ']:' → logprob: -4.637397766113281
    3. ':' → logprob: -6.637397766113281
    4. ':
' → logprob: -6.887397766113281
    5. '```' → logprob: -9.012397766113281
    6. 'g' → logprob: -10.012397766113281
    7. 's' → logprob: -10.262397766113281
    8. ']:
' → logprob: -10.762397766113281
    9. ']' → logprob: -11.137397766113281
    10. '):
' → logprob: -11.137397766113281

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06329051405191422
    2. 'g' → logprob: -3.313290596008301
    3. '   ' → logprob: -4.063290596008301
    4. 'if' → logprob: -5.438290596008301
    5. ' if' → logprob: -6.438290596008301
    6. ' g' → logprob: -6.563290596008301
    7. '               ' → logprob: -8.8132905960083
    8. '           ' → logprob: -9.0632905960083
    9. 'd' → logprob: -9.6882905960083
    10. 'for' → logprob: -11.6882905960083

Token 544: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.022033898159861565
    2. 'if' (adapté à ' if') → logprob: -4.02203369140625
    3. '           ' → logprob: -6.02203369140625
    4. '       ' → logprob: -6.64703369140625
    5. '               ' → logprob: -9.02203369140625
    6. '   ' → logprob: -11.27203369140625
    7. '```' → logprob: -12.02203369140625
    8. ' ' → logprob: -12.39703369140625
    9. '        ' → logprob: -12.89703369140625
    10. '          ' → logprob: -13.14703369140625

Token 545: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759462714195251
    2. 'd' → logprob: -0.8259462714195251
    3. '   ' → logprob: -12.700945854187012
    4. ' ' → logprob: -13.450945854187012
    5. '  ' → logprob: -13.700945854187012
    6. '	d' → logprob: -14.325945854187012
    7. '    ' → logprob: -15.325945854187012
    8. ' ' → logprob: -16.325946807861328
    9. '     ' → logprob: -16.450946807861328
    10. '       ' → logprob: -16.700946807861328

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8074162653647363e-05
    2. '[node' → logprob: -11.000018119812012
    3. '1' → logprob: -14.750018119812012
    4. '```' → logprob: -15.125018119812012
    5. '
' → logprob: -15.875018119812012
    6. '_' → logprob: -16.000017166137695
    7. '[' → logprob: -16.375017166137695
    8. '[user' → logprob: -16.625017166137695
    9. '₂' → logprob: -16.750017166137695
    10. '[p' → logprob: -17.625017166137695

Token 547: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. 'node' → logprob: -17.25
    3. '[' → logprob: -19.625
    4. '(node' → logprob: -20.375
    5. '=node' → logprob: -20.625
    6. ',node' → logprob: -21.125
    7. '[
' → logprob: -21.625
    8. '[player' → logprob: -21.875
    9. ' [' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 548: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11081025004386902
    2. '==' → logprob: -2.8608102798461914
    3. ']==' → logprob: -3.3608102798461914
    4. ' ==' → logprob: -4.360810279846191
    5. '[node' → logprob: -9.610810279846191
    6. '[' → logprob: -9.985810279846191
    7. '==-' → logprob: -10.860810279846191
    8. '           ' → logprob: -11.110810279846191
    9. '       ' → logprob: -11.485810279846191
    10. '   ' → logprob: -11.860810279846191

Token 549: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5197464227676392
    2. ' ==' → logprob: -1.0197464227676392
    3. '[node' → logprob: -3.1447463035583496
    4. '==-' → logprob: -7.39474630355835
    5. ']==' → logprob: -7.51974630355835
    6. '[' → logprob: -8.519746780395508
    7. ']' → logprob: -9.519746780395508
    8. '```' → logprob: -9.769746780395508
    9. '[p' → logprob: -10.019746780395508
    10. 'node' → logprob: -12.144746780395508

Token 550: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '1' → logprob: -20.00002098083496
    4. '   ' → logprob: -20.50002098083496
    5. ' ' → logprob: -22.25002098083496
    6. '
' → logprob: -22.25002098083496
    7. '```' → logprob: -22.87502098083496
    8. '  ' → logprob: -23.37502098083496
    9. '-p' → logprob: -23.50002098083496
    10. '==-' → logprob: -24.12502098083496

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600544296205044
    2. '-' → logprob: -5.628600597381592
    3. ' -' → logprob: -15.128600120544434
    4. '```' → logprob: -16.00360107421875
    5. ' ' → logprob: -16.12860107421875
    6. '=' → logprob: -16.50360107421875
    7. '==-' → logprob: -17.50360107421875
    8. '2' → logprob: -17.50360107421875
    9. '=-' → logprob: -18.25360107421875
    10. '   ' → logprob: -18.25360107421875

Token 552: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044351186603307724
    2. '=' → logprob: -4.044351100921631
    3. ':' → logprob: -4.169351100921631
    4. ' =' → logprob: -5.294351100921631
    5. ':
' → logprob: -6.294351100921631
    6. '               ' → logprob: -6.294351100921631
    7. '          ' → logprob: -7.044351100921631
    8. '   ' → logprob: -8.544351577758789
    9. 'd' → logprob: -9.044351577758789
    10. '=d' → logprob: -9.044351577758789

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059228308498859406
    2. ' d' → logprob: -3.1842284202575684
    3. 'd' → logprob: -4.184228420257568
    4. '               ' → logprob: -7.684228420257568
    5. '          ' → logprob: -8.18422794342041
    6. '   ' → logprob: -9.93422794342041
    7. '       ' → logprob: -10.18422794342041
    8. '         ' → logprob: -11.18422794342041
    9. '            ' → logprob: -11.93422794342041
    10. '=' → logprob: -12.55922794342041

Token 554: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.038042984902858734
    2. ' d' → logprob: -3.2880430221557617
    3. '           ' → logprob: -13.788043022155762
    4. '   ' → logprob: -14.788043022155762
    5. '               ' → logprob: -16.913042068481445
    6. '	d' → logprob: -17.288042068481445
    7. '       ' → logprob: -19.038042068481445
    8. ' ' → logprob: -19.663042068481445
    9. ')d' → logprob: -20.288042068481445
    10. '  ' → logprob: -20.538042068481445

Token 555: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. '[node' → logprob: -12.250005722045898
    3. '[user' → logprob: -15.625005722045898
    4. '```' → logprob: -16.1250057220459
    5. '[' → logprob: -16.5000057220459
    6. '₂' → logprob: -16.7500057220459
    7. 'd' → logprob: -17.1250057220459
    8. '
' → logprob: -17.9375057220459
    9. '_' → logprob: -18.1875057220459
    10. 'p' → logprob: -18.3125057220459

Token 556: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -7.374227425316349e-05
    2. '2' → logprob: -9.625073432922363
    3. '[' → logprob: -12.125073432922363
    4. '```' → logprob: -13.750073432922363
    5. '=node' → logprob: -15.000073432922363
    6. '(node' → logprob: -15.500073432922363
    7. '[user' → logprob: -15.750073432922363
    8. '[p' → logprob: -15.875073432922363
    9. '[token' → logprob: -16.62507438659668
    10. 'node' → logprob: -16.62507438659668

Token 557: ']' (ID: 60)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.3900601863861084
    2. ']' → logprob: -1.1400601863861084
    3. '[' → logprob: -6.8900604248046875
    4. '[p' → logprob: -7.2650604248046875
    5. '=' → logprob: -8.015060424804688
    6. '```' → logprob: -8.265060424804688
    7. ']=' → logprob: -8.515060424804688
    8. ')' → logprob: -8.640060424804688
    9. '=node' → logprob: -8.640060424804688
    10. '   ' → logprob: -9.515060424804688

Token 558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022777557373047
    2. ' =' → logprob: -1.9102277755737305
    3. ']' → logprob: -13.41022777557373
    4. '[' → logprob: -14.78522777557373
    5. '=d' → logprob: -15.16022777557373
    6. 'd' → logprob: -15.28522777557373
    7. ')' → logprob: -15.66022777557373
    8. ' ' → logprob: -15.66022777557373
    9. ']=' → logprob: -15.66022777557373
    10. '   ' → logprob: -15.91022777557373

Token 559: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013271415373310447
    2. ' d' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.251327514648438
    4. '
' → logprob: -15.751327514648438
    5. '	d' → logprob: -16.001327514648438
    6. '           ' → logprob: -16.376327514648438
    7. ' ' → logprob: -16.876327514648438
    8. '  ' → logprob: -17.001327514648438
    9. '    ' → logprob: -17.501327514648438
    10. '          ' → logprob: -17.626327514648438

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024168188974726945
    2. '[p' → logprob: -8.50024127960205
    3. '[node' → logprob: -10.25024127960205
    4. 'p' → logprob: -14.50024127960205
    5. '[v' → logprob: -15.12524127960205
    6. ' ' → logprob: -15.12524127960205
    7. '[' → logprob: -15.37524127960205
    8. '   ' → logprob: -15.50024127960205
    9. '```' → logprob: -15.50024127960205
    10. '[u' → logprob: -15.62524127960205

Token 561: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.002915788209065795
    2. '[node' → logprob: -6.002915859222412
    3. 'p' → logprob: -7.752915859222412
    4. '[' → logprob: -12.502915382385254
    5. '2' → logprob: -12.627915382385254
    6. '```' → logprob: -13.502915382385254
    7. ' p' → logprob: -15.127915382385254
    8. '_p' → logprob: -15.127915382385254
    9. '[parent' → logprob: -15.377915382385254
    10. 'node' → logprob: -15.377915382385254

Token 562: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27420511841773987
    2. ']' → logprob: -1.5242050886154175
    3. ' +' → logprob: -4.024205207824707
    4. ']+' → logprob: -5.524205207824707
    5. '+]' → logprob: -9.524205207824707
    6. ')' → logprob: -10.399205207824707
    7. '[' → logprob: -11.274205207824707
    8. ' ' → logprob: -11.399205207824707
    9. ' ]' → logprob: -11.524205207824707
    10. ']+=' → logprob: -12.149205207824707

Token 563: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029755352064967155
    2. ' +' → logprob: -3.5297553539276123
    3. '1' → logprob: -12.654755592346191
    4. '[' → logprob: -14.279755592346191
    5. '+p' → logprob: -14.654755592346191
    6. ' ' → logprob: -15.529755592346191
    7. '=' → logprob: -15.529755592346191
    8. '```' → logprob: -16.779754638671875
    9. '+
' → logprob: -16.904754638671875
    10. 'p' → logprob: -17.154754638671875

Token 564: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.375096321105957
    4. '+' → logprob: -17.875097274780273
    5. '```' → logprob: -18.000097274780273
    6. 's' → logprob: -18.250097274780273
    7. '  ' → logprob: -18.375097274780273
    8. '
' → logprob: -18.437597274780273
    9. '           ' → logprob: -19.500097274780273
    10. '2' → logprob: -19.750097274780273

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. 'd' → logprob: -11.75001049041748
    3. '2' → logprob: -13.87501049041748
    4. ' ' → logprob: -14.75001049041748
    5. '
' → logprob: -15.12501049041748
    6. '0' → logprob: -16.312509536743164
    7. '```' → logprob: -16.375009536743164
    8. 's' → logprob: -16.812509536743164
    9. 'p' → logprob: -16.812509536743164
    10. '

' → logprob: -16.875009536743164

Token 566: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020473242329899222
    2. 's' → logprob: -8.625205039978027
    3. '               ' → logprob: -11.000205039978027
    4. '		' → logprob: -12.875205039978027
    5. '          ' → logprob: -13.250205039978027
    6. '   ' → logprob: -13.500205039978027
    7. '       ' → logprob: -13.875205039978027
    8. ' s' → logprob: -14.250205039978027
    9. '	       ' → logprob: -15.125205039978027
    10. '            ' → logprob: -15.250205039978027

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.264322317088954e-05
    2. 's' → logprob: -10.000052452087402
    3. '               ' → logprob: -12.875052452087402
    4. '       ' → logprob: -13.000052452087402
    5. '   ' → logprob: -13.375052452087402
    6. ' s' → logprob: -15.125052452087402
    7. '          ' → logprob: -15.375052452087402
    8. 'p' → logprob: -16.37505340576172
    9. '         ' → logprob: -16.75005340576172
    10. '```' → logprob: -16.75005340576172

Token 568: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -9.662937372922897e-05
    2. ' s' → logprob: -9.250096321105957
    3. '           ' → logprob: -14.875096321105957
    4. '   ' → logprob: -16.000097274780273
    5. '       ' → logprob: -17.750097274780273
    6. '_s' → logprob: -19.500097274780273
    7. '               ' → logprob: -19.750097274780273
    8. '          ' → logprob: -20.250097274780273
    9. 'node' → logprob: -20.250097274780273
    10. '	s' → logprob: -20.625097274780273

Token 569: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004593862977344543
    2. 'append' → logprob: -8.000459671020508
    3. '2' → logprob: -9.500459671020508
    4. '_append' → logprob: -10.875459671020508
    5. '_' → logprob: -11.125459671020508
    6. 's' → logprob: -12.500459671020508
    7. '.' → logprob: -12.625459671020508
    8. '           ' → logprob: -13.000459671020508
    9. '```' → logprob: -13.375459671020508
    10. '_node' → logprob: -13.875459671020508

Token 570: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.320199877838604e-07
    2. 'node' → logprob: -15.125
    3. '[node' → logprob: -16.375
    4. '(
' → logprob: -18.75
    5. '(' → logprob: -19.5
    6. '=node' → logprob: -20.5
    7. ',node' → logprob: -20.875
    8. '```' → logprob: -21.125
    9. '(Node' → logprob: -22.5
    10. '	node' → logprob: -22.75

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031949623371474445
    2. ')
' → logprob: -8.250319480895996
    3. '()' → logprob: -10.000319480895996
    4. '())' → logprob: -12.000319480895996
    5. '```' → logprob: -13.375319480895996
    6. '))' → logprob: -14.000319480895996
    7. '(' → logprob: -14.250319480895996
    8. ')`' → logprob: -14.375319480895996
    9. '(p' → logprob: -14.625319480895996
    10. '#' → logprob: -14.750319480895996

Token 572: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41216015815734863
    2. 'for' → logprob: -1.7871601581573486
    3. 'res' → logprob: -2.4121601581573486
    4. 'result' → logprob: -3.7871601581573486
    5. 'r' → logprob: -4.5371599197387695
    6. 'ans' → logprob: -4.7871599197387695
    7. 'l' → logprob: -4.9121599197387695
    8. 'if' → logprob: -4.9121599197387695
    9. 'm' → logprob: -5.4121599197387695
    10. 'dm' → logprob: -5.4121599197387695

Token 573: ' diam' (ID: 14315)
  Prédit: ' diam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diam' → logprob: -0.27538302540779114
    2. ' d' → logprob: -2.1503829956054688
    3. 'diam' → logprob: -2.7753829956054688
    4. ' dm' → logprob: -4.275382995605469
    5. '(d' → logprob: -4.400382995605469
    6. ' n' → logprob: -4.775382995605469
    7. 'd' → logprob: -5.025382995605469
    8. ' (' → logprob: -5.275382995605469
    9. ' len' → logprob: -5.400382995605469
    10. ' ind' → logprob: -6.275382995605469

Token 574: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20912152528762817
    2. ' >' → logprob: -2.3341214656829834
    3. ' <' → logprob: -3.4591214656829834
    4. '==' → logprob: -3.5841214656829834
    5. ' >=' → logprob: -4.8341217041015625
    6. '>' → logprob: -4.9591217041015625
    7. ' <=' → logprob: -5.0841217041015625
    8. ' !=' → logprob: -5.4591217041015625
    9. ' %' → logprob: -5.9591217041015625
    10. ' +' → logprob: -6.5841217041015625

Token 575: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014332851395010948
    2. ' ' → logprob: -4.2643327713012695
    3. '==' → logprob: -9.13933277130127
    4. '=' → logprob: -10.26433277130127
    5. ' ==' → logprob: -11.26433277130127
    6. '```' → logprob: -11.51433277130127
    7. '
' → logprob: -14.51433277130127
    8. '3' → logprob: -14.76433277130127
    9. '  ' → logprob: -14.76433277130127
    10. '...' → logprob: -14.76433277130127

Token 576: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.500009536743164
    4. '==' → logprob: -17.125009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '=' → logprob: -18.250009536743164
    7. '4' → logprob: -18.375009536743164
    8. '3' → logprob: -19.000009536743164
    9. '
' → logprob: -19.250009536743164
    10. '...' → logprob: -19.375009536743164

Token 577: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3135138750076294
    2. ' ==' → logprob: -1.3135138750076294
    3. '!=' → logprob: -9.43851375579834
    4. '=' → logprob: -9.68851375579834
    5. ' !=' → logprob: -9.68851375579834
    6. ':' → logprob: -10.68851375579834
    7. ' ' → logprob: -11.93851375579834
    8. ' :' → logprob: -12.06351375579834
    9. '0' → logprob: -12.43851375579834
    10. '2' → logprob: -13.81351375579834

Token 578: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022478802129626274
    2. '1' → logprob: -4.0224785804748535
    3. ' ' → logprob: -5.6474785804748535
    4. '2' → logprob: -7.1474785804748535
    5. '=' → logprob: -12.272479057312012
    6. '==' → logprob: -14.647479057312012
    7. ' =' → logprob: -15.022479057312012
    8. '```' → logprob: -15.272479057312012
    9. '   ' → logprob: -15.397479057312012
    10. ':' → logprob: -16.459978103637695

Token 579: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017499087378382683
    2. '2' → logprob: -4.267498970031738
    3. '1' → logprob: -5.892498970031738
    4. ' ' → logprob: -7.517498970031738
    5. '=' → logprob: -10.767498970031738
    6. '==' → logprob: -12.267498970031738
    7. '```' → logprob: -14.767498970031738
    8. ' ==' → logprob: -15.767498970031738
    9. ' =' → logprob: -16.142499923706055
    10. '!=' → logprob: -17.079999923706055

Token 580: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02950468473136425
    2. ':
' → logprob: -3.6545047760009766
    3. ' ==' → logprob: -5.904504776000977
    4. '==' → logprob: -8.154504776000977
    5. ' :' → logprob: -9.029504776000977
    6. '   ' → logprob: -10.404504776000977
    7. ' :
' → logprob: -11.029504776000977
    8. ' and' → logprob: -11.529504776000977
    9. '=' → logprob: -13.154504776000977
    10. ':
' → logprob: -13.404504776000977

Token 581: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4683273434638977
    2. '   ' → logprob: -1.218327283859253
    3. 'result' → logprob: -3.218327283859253
    4. ' print' → logprob: -3.843327283859253
    5. 'res' → logprob: -4.468327522277832
    6. ' res' → logprob: -6.218327522277832
    7. ' result' → logprob: -6.968327522277832
    8. 'a' → logprob: -7.843327522277832
    9. 'r' → logprob: -8.093327522277832
    10. '
' → logprob: -8.093327522277832

Token 582: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005509315058588982
    2. 'result' → logprob: -5.880509376525879
    3. 'res' → logprob: -6.755509376525879
    4. '
' → logprob: -7.005509376525879
    5. 'r' → logprob: -8.255509376525879
    6. ' print' → logprob: -8.880509376525879
    7. '   ' → logprob: -9.005509376525879
    8. 'pr' → logprob: -10.255509376525879
    9. 'answer' → logprob: -10.880509376525879
    10. '    
' → logprob: -11.755509376525879

Token 583: ' diamètre' (ID: 167210)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05603961646556854
    2. 'res' → logprob: -3.181039571762085
    3. 'r' → logprob: -5.556039810180664
    4. ' print' → logprob: -5.556039810180664
    5. 'result' → logprob: -6.556039810180664
    6. '   ' → logprob: -6.556039810180664
    7. 'a' → logprob: -7.306039810180664
    8. ' res' → logprob: -7.431039810180664
    9. 'm' → logprob: -7.431039810180664
    10. 'for' → logprob: -9.306039810180664

Token 584: ' impair' (ID: 64113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023593205958604813
    2. ':
' → logprob: -4.273593425750732
    3. '==' → logprob: -5.398593425750732
    4. ' ==' → logprob: -6.023593425750732
    5. '   ' → logprob: -6.148593425750732
    6. '=' → logprob: -8.773592948913574
    7. ' :' → logprob: -10.148592948913574
    8. ' =' → logprob: -10.273592948913574
    9. ' and' → logprob: -11.023592948913574
    10. '>' → logprob: -11.898592948913574

Token 585: ' ?' (ID: 1423)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31435728073120117
    2. ':
' → logprob: -1.3143572807312012
    3. '   ' → logprob: -6.939357280731201
    4. ' and' → logprob: -10.18935775756836
    5. ' :
' → logprob: -10.43935775756836
    6. ' :' → logprob: -11.18935775756836
    7. ',' → logprob: -11.81435775756836
    8. '):
' → logprob: -12.06435775756836
    9. '=' → logprob: -12.18935775756836
    10. '==' → logprob: -12.31435775756836

Token 586: ' pourquoi' (ID: 39224)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6729902029037476
    2. 'print' → logprob: -1.1729902029037476
    3. 'res' → logprob: -2.172990322113037
    4. 'result' → logprob: -3.047990322113037
    5. 'r' → logprob: -5.297990322113037
    6. ' res' → logprob: -5.547990322113037
    7. ' print' → logprob: -6.047990322113037
    8. '
' → logprob: -6.172990322113037
    9. '    
' → logprob: -6.422990322113037
    10. 'a' → logprob: -6.672990322113037

Token 587: ' pas' (ID: 2173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22521696984767914
    2. ':' → logprob: -2.100216865539551
    3. ':
' → logprob: -3.350216865539551
    4. 'print' → logprob: -4.475216865539551
    5. ' res' → logprob: -4.850216865539551
    6. 'res' → logprob: -5.100216865539551
    7. 'result' → logprob: -5.475216865539551
    8. 'a' → logprob: -5.600216865539551
    9. '
' → logprob: -6.225216865539551
    10. ' print' → logprob: -6.600216865539551

Token 588: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8063727617263794
    2. ':
' → logprob: -1.1813727617263794
    3. ':' → logprob: -1.4313727617263794
    4. 'print' → logprob: -6.18137264251709
    5. 'else' → logprob: -6.80637264251709
    6. 'a' → logprob: -7.18137264251709
    7. 'elif' → logprob: -7.30637264251709
    8. '    
' → logprob: -7.80637264251709
    9. '):
' → logprob: -8.18137264251709
    10. 'result' → logprob: -8.18137264251709

Token 589: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7011008858680725
    2. '   ' → logprob: -1.0761008262634277
    3. 'res' → logprob: -2.2011008262634277
    4. 'result' → logprob: -3.2011008262634277
    5. 'r' → logprob: -4.826100826263428
    6. ' print' → logprob: -7.076100826263428
    7. 'ans' → logprob: -7.076100826263428
    8. 'a' → logprob: -7.701100826263428
    9. ' res' → logprob: -7.701100826263428
    10. 'answer' → logprob: -8.201101303100586

Token 590: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15199430286884308
    2. 'res' → logprob: -2.401994228363037
    3. 'r' → logprob: -4.026994228363037
    4. 'a' → logprob: -4.276994228363037
    5. 'result' → logprob: -5.651994228363037
    6. 'x' → logprob: -5.651994228363037
    7. 'm' → logprob: -5.901994228363037
    8. 'ans' → logprob: -5.901994228363037
    9. 'mid' → logprob: -6.151994228363037
    10. 'p' → logprob: -6.651994228363037

Token 591: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3661181330680847
    2. ' =' → logprob: -1.3661181926727295
    3. 'c' → logprob: -4.24111795425415
    4. '=' → logprob: -4.74111795425415
    5. 'enter' → logprob: -4.74111795425415
    6. '_' → logprob: -5.86611795425415
    7. '_c' → logprob: -6.24111795425415
    8. 'ont' → logprob: -6.24111795425415
    9. '0' → logprob: -6.36611795425415
    10. '#' → logprob: -6.49111795425415

Token 592: ' []
' (ID: 8911)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.521109402179718
    2. '(d' → logprob: -1.6461093425750732
    3. '(f' → logprob: -2.1461093425750732
    4. ' (' → logprob: -3.0211093425750732
    5. ' f' → logprob: -4.146109580993652
    6. 'd' → logprob: -5.146109580993652
    7. '(n' → logprob: -5.771109580993652
    8. 'diam' → logprob: -5.771109580993652
    9. '(ind' → logprob: -5.771109580993652
    10. '[]' → logprob: -6.021109580993652

Token 593: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006322166882455349
    2. 'c' → logprob: -5.881322383880615
    3. 'u' → logprob: -7.131322383880615
    4. 'd' → logprob: -7.131322383880615
    5. 'p' → logprob: -7.506322383880615
    6. 'dist' → logprob: -8.256321907043457
    7. 'l' → logprob: -8.506321907043457
    8. 'x' → logprob: -8.631321907043457
    9. 'a' → logprob: -8.756321907043457
    10. '   ' → logprob: -9.506321907043457

Token 594: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004660215228796005
    2. 'c' → logprob: -6.879660129547119
    3. 'd' → logprob: -7.129660129547119
    4. 'res' → logprob: -7.504660129547119
    5. 'mid' → logprob: -7.879660129547119
    6. 'u' → logprob: -8.254660606384277
    7. 'p' → logprob: -8.379660606384277
    8. 'm' → logprob: -8.504660606384277
    9. 'x' → logprob: -8.754660606384277
    10. 'cent' → logprob: -9.129660606384277

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5547708868980408
    2. ' =' → logprob: -1.3047709465026855
    3. '.append' → logprob: -2.1797709465026855
    4. '=[]' → logprob: -4.6797709465026855
    5. 'c' → logprob: -4.8047709465026855
    6. 'for' → logprob: -5.4297709465026855
    7. 'mp' → logprob: -5.5547709465026855
    8. 'emp' → logprob: -5.6797709465026855
    9. '=[]
' → logprob: -6.3047709465026855
    10. 's' → logprob: -6.5547709465026855

Token 596: ' diam' (ID: 14315)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9263572096824646
    2. 'diam' → logprob: -2.3013572692871094
    3. '[]' → logprob: -2.4263572692871094
    4. 'idx' → logprob: -2.4263572692871094
    5. '(d' → logprob: -2.6763572692871094
    6. '0' → logprob: -3.3013572692871094
    7. '(idx' → logprob: -3.4263572692871094
    8. '(' → logprob: -3.5513572692871094
    9. ' (' → logprob: -3.6763572692871094
    10. '(s' → logprob: -4.051357269287109

Token 597: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4848613142967224
    2. ' //' → logprob: -0.9848613142967224
    3. '#' → logprob: -5.859861373901367
    4. ' =' → logprob: -6.359861373901367
    5. '=' → logprob: -6.484861373901367
    6. '
' → logprob: -6.734861373901367
    7. 'for' → logprob: -6.859861373901367
    8. '   ' → logprob: -7.484861373901367
    9. 'c' → logprob: -7.484861373901367
    10. '//=' → logprob: -7.859861373901367

Token 598: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '1' → logprob: -15.875204086303711
    4. '   ' → logprob: -16.87520408630371
    5. '```' → logprob: -17.50020408630371
    6. '=' → logprob: -18.50020408630371
    7. '
' → logprob: -19.12520408630371
    8. '  ' → logprob: -19.50020408630371
    9. '۲' → logprob: -21.00020408630371
    10. '>' → logprob: -21.12520408630371

Token 599: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.375003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '=' → logprob: -19.250003814697266
    6. '```' → logprob: -19.750003814697266
    7. '
' → logprob: -20.000003814697266
    8. '  ' → logprob: -20.875003814697266
    9. '22' → logprob: -21.125003814697266
    10. 'c' → logprob: -21.250003814697266

Token 600: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5180013179779053
    2. 'while' → logprob: -1.3930013179779053
    3. '   ' → logprob: -2.3930013179779053
    4. 'c' → logprob: -3.7680013179779053
    5. 'p' → logprob: -3.8930013179779053
    6. 't' → logprob: -5.143001556396484
    7. '+' → logprob: -5.518001556396484
    8. ' for' → logprob: -6.143001556396484
    9. 's' → logprob: -6.518001556396484
    10. 'u' → logprob: -6.643001556396484

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. '2' → logprob: -10.125053405761719
    3. ' ' → logprob: -11.375053405761719
    4. '0' → logprob: -13.500053405761719
    5. '   ' → logprob: -14.750053405761719
    6. '
' → logprob: -16.25005340576172
    7. '  ' → logprob: -16.93755340576172
    8. '```' → logprob: -16.93755340576172
    9. 'c' → logprob: -18.50005340576172
    10. '    ' → logprob: -18.68755340576172

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. '2' → logprob: -10.87502670288086
    3. '0' → logprob: -12.12502670288086
    4. ' ' → logprob: -13.00002670288086
    5. '   ' → logprob: -16.12502670288086
    6. '```' → logprob: -16.25002670288086
    7. '  ' → logprob: -17.06252670288086
    8. 'c' → logprob: -17.18752670288086
    9. '
' → logprob: -18.43752670288086
    10. '(' → logprob: -18.56252670288086

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16996760666370392
    2. 'for' → logprob: -2.0449676513671875
    3. 'c' → logprob: -4.5449676513671875
    4. ' for' → logprob: -4.6699676513671875
    5. '
' → logprob: -5.1699676513671875
    6. 'while' → logprob: -7.9199676513671875
    7. 'p' → logprob: -9.044967651367188
    8. 'a' → logprob: -9.044967651367188
    9. ',' → logprob: -9.419967651367188
    10. ' c' → logprob: -9.669967651367188

Token 604: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16753853857517242
    2. '   ' → logprob: -2.542538642883301
    3. 'c' → logprob: -2.667538642883301
    4. 'while' → logprob: -5.792538642883301
    5. ' for' → logprob: -7.042538642883301
    6. 'p' → logprob: -7.542538642883301
    7. 'u' → logprob: -8.2925386428833
    8. 'x' → logprob: -8.5425386428833
    9. 'res' → logprob: -8.9175386428833
    10. 'i' → logprob: -8.9175386428833

Token 605: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011839319951832294
    2. 'while' → logprob: -5.011839389801025
    3. 'c' → logprob: -5.886839389801025
    4. 'u' → logprob: -7.136839389801025
    5. 'p' → logprob: -7.761839389801025
    6. 'x' → logprob: -8.511838912963867
    7. 'd' → logprob: -8.636838912963867
    8. 'q' → logprob: -9.011838912963867
    9. 'res' → logprob: -9.261838912963867
    10. 'l' → logprob: -10.011838912963867

Token 606: '(t' (ID: 2025)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.1046498641371727
    2. 'f' → logprob: -2.479649782180786
    3. '(' → logprob: -4.604650020599365
    4. '((' → logprob: -6.229650020599365
    5. '(d' → logprob: -7.104650020599365
    6. '(max' → logprob: -7.354650020599365
    7. '(t' → logprob: -7.604650020599365
    8. 'max' → logprob: -7.854650020599365
    9. '(c' → logprob: -8.229649543762207
    10. '(
' → logprob: -8.354649543762207

Token 607: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1416943073272705
    2. ',' → logprob: -2.7666943073272705
    3. ' )' → logprob: -3.3916943073272705
    4. ' *' → logprob: -4.516694068908691
    5. '*' → logprob: -4.891694068908691
    6. ' ,' → logprob: -4.891694068908691
    7. '+' → logprob: -5.266694068908691
    8. ')
' → logprob: -6.516694068908691
    9. ' +' → logprob: -6.891694068908691
    10. ',c' → logprob: -8.141694068908691

Token 608: ' end' (ID: 1268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1061135530471802
    2. 'end' → logprob: -1.1061135530471802
    3. 'f' → logprob: -1.7311135530471802
    4. '"' → logprob: -2.4811134338378906
    5. ' )' → logprob: -3.8561134338378906
    6. 't' → logprob: -3.8561134338378906
    7. ' f' → logprob: -4.606113433837891
    8. ' end' → logprob: -5.106113433837891
    9. 'sep' → logprob: -5.481113433837891
    10. ''' → logprob: -5.731113433837891

Token 609: '='' (ID: 2053)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6217082738876343
    2. '=' → logprob: -1.6217082738876343
    3. '"' → logprob: -2.121708393096924
    4. '('' → logprob: -3.246708393096924
    5. ')' → logprob: -3.371708393096924
    6. '='' → logprob: -3.371708393096924
    7. '(' → logprob: -3.496708393096924
    8. ' )' → logprob: -6.121708393096924
    9. '("' → logprob: -6.621708393096924
    10. '*' → logprob: -6.746708393096924

Token 610: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18076705932617188
    2. '"' → logprob: -3.055767059326172
    3. ' )' → logprob: -3.055767059326172
    4. ')' → logprob: -3.180767059326172
    5. ' ' → logprob: -3.680767059326172
    6. ' '' → logprob: -5.805767059326172
    7. ' "' → logprob: -7.805767059326172
    8. ' '')' → logprob: -8.430767059326172
    9. ' 
' → logprob: -8.680767059326172
    10. ' )
' → logprob: -8.930767059326172

Token 611: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1730552315711975
    2. 'res' → logprob: -2.9230551719665527
    3. 'print' → logprob: -3.0480551719665527
    4. 'c' → logprob: -3.1730551719665527
    5. 'l' → logprob: -4.673055171966553
    6. 'r' → logprob: -6.423055171966553
    7. 'p' → logprob: -7.298055171966553
    8. 'a' → logprob: -7.298055171966553
    9. 'i' → logprob: -7.923055171966553
    10. 'result' → logprob: -8.048055648803711

Token 612: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6339961886405945
    2. 'print' → logprob: -1.0089962482452393
    3. 'res' → logprob: -2.3839962482452393
    4. 'r' → logprob: -5.13399600982666
    5. 'c' → logprob: -6.25899600982666
    6. 'f' → logprob: -6.63399600982666
    7. 'ans' → logprob: -7.00899600982666
    8. 'result' → logprob: -7.25899600982666
    9. 'p' → logprob: -8.13399600982666
    10. 'cnt' → logprob: -8.50899600982666

Token 613: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3497564494609833
    2. 'x' → logprob: -1.8497564792633057
    3. 'node' → logprob: -2.2247564792633057
    4. 'u' → logprob: -4.224756240844727
    5. 'v' → logprob: -5.224756240844727
    6. 'c' → logprob: -5.974756240844727
    7. 'neighbor' → logprob: -6.099756240844727
    8. '_i' → logprob: -7.474756240844727
    9. 'mid' → logprob: -7.474756240844727
    10. 'p' → logprob: -7.474756240844727

Token 614: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14736905694007874
    2. ' in' → logprob: -2.022369146347046
    3. 'n' → logprob: -5.397368907928467
    4. ',' → logprob: -9.272369384765625
    5. 'range' → logprob: -10.897369384765625
    6. ' ' → logprob: -11.647369384765625
    7. 'd' → logprob: -11.897369384765625
    8. 't' → logprob: -12.897369384765625
    9. '   ' → logprob: -13.147369384765625
    10. ' n' → logprob: -13.147369384765625

Token 615: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004978762473911047
    2. 'g' → logprob: -5.379978656768799
    3. ' range' → logprob: -8.129979133605957
    4. 'r' → logprob: -10.629979133605957
    5. '[g' → logprob: -11.379979133605957
    6. 'd' → logprob: -11.879979133605957
    7. '(range' → logprob: -12.004979133605957
    8. '[' → logprob: -12.004979133605957
    9. '(g' → logprob: -13.879979133605957
    10. 'rang' → logprob: -14.004979133605957

Token 616: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0504600889980793
    2. '(d' → logprob: -3.55046010017395
    3. '(t' → logprob: -4.425459861755371
    4. '(len' → logprob: -5.425459861755371
    5. '(' → logprob: -6.050459861755371
    6. 'n' → logprob: -6.675459861755371
    7. '(c' → logprob: -8.175459861755371
    8. 't' → logprob: -9.425459861755371
    9. '(m' → logprob: -10.300459861755371
    10. '((' → logprob: -10.425459861755371

Token 617: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05549461022019386
    2. '):' → logprob: -2.930494546890259
    3. ':' → logprob: -7.930494785308838
    4. ':
' → logprob: -9.18049430847168
    5. '   ' → logprob: -9.55549430847168
    6. '):
' → logprob: -10.43049430847168
    7. ')' → logprob: -11.18049430847168
    8. 'if' → logprob: -11.18049430847168
    9. '       ' → logprob: -11.80549430847168
    10. '):

' → logprob: -12.30549430847168

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013834515120834112
    2. ' if' → logprob: -7.376383304595947
    3. '   ' → logprob: -7.751383304595947
    4. 'if' → logprob: -8.251383781433105
    5. 'print' → logprob: -10.626383781433105
    6. ' print' → logprob: -10.876383781433105
    7. '        
' → logprob: -12.001383781433105
    8. ' and' → logprob: -13.126383781433105
    9. '<|end|>' → logprob: -13.376383781433105
    10. '#' → logprob: -13.501383781433105

Token 619: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4814845323562622
    2. ' if' → logprob: -1.4814845323562622
    3. '       ' → logprob: -1.9814845323562622
    4. '   ' → logprob: -4.356484413146973
    5. 'print' → logprob: -5.731484413146973
    6. ' print' → logprob: -7.606484413146973
    7. '	if' → logprob: -9.106484413146973
    8. 'c' → logprob: -9.481484413146973
    9. 'd' → logprob: -10.106484413146973
    10. '           ' → logprob: -10.356484413146973

Token 620: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0017691855318844318
    2. '(d' → logprob: -7.001769065856934
    3. ' d' → logprob: -7.626769065856934
    4. 'max' → logprob: -8.626769065856934
    5. 'min' → logprob: -8.876769065856934
    6. 'abs' → logprob: -11.126769065856934
    7. '   ' → logprob: -11.251769065856934
    8. '0' → logprob: -11.876769065856934
    9. '(min' → logprob: -12.876769065856934
    10. ' ' → logprob: -12.876769065856934

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39543798565864563
    2. '2' → logprob: -1.1454379558563232
    3. '[i' → logprob: -4.895438194274902
    4. '[node' → logprob: -7.270438194274902
    5. '[idx' → logprob: -8.395438194274902
    6. 'i' → logprob: -10.145438194274902
    7. '[p' → logprob: -10.770438194274902
    8. '[' → logprob: -10.770438194274902
    9. '[u' → logprob: -12.270438194274902
    10. 'idx' → logprob: -12.582938194274902

Token 622: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.869639476761222e-05
    2. '[node' → logprob: -10.500039100646973
    3. '[' → logprob: -12.000039100646973
    4. ' [' → logprob: -13.125039100646973
    5. '[p' → logprob: -13.500039100646973
    6. 'i' → logprob: -14.250039100646973
    7. '[I' → logprob: -16.125038146972656
    8. '   ' → logprob: -16.250038146972656
    9. '[
' → logprob: -16.500038146972656
    10. '```' → logprob: -16.500038146972656

Token 623: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31671562790870667
    2. ' ==' → logprob: -1.3167155981063843
    3. ']' → logprob: -6.566715717315674
    4. '+' → logprob: -7.316715717315674
    5. ']==' → logprob: -7.316715717315674
    6. ' +' → logprob: -8.441715240478516
    7. '=' → logprob: -8.691715240478516
    8. '[' → logprob: -8.816715240478516
    9. ')' → logprob: -10.191715240478516
    10. ' ' → logprob: -10.441715240478516

Token 624: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02065529301762581
    2. ' ==' → logprob: -3.895655393600464
    3. '==
' → logprob: -9.770655632019043
    4. '=' → logprob: -10.020655632019043
    5. '+' → logprob: -11.770655632019043
    6. '===' → logprob: -13.645655632019043
    7. ' ' → logprob: -14.520655632019043
    8. ']==' → logprob: -14.645655632019043
    9. ' +' → logprob: -14.770655632019043
    10. ' =' → logprob: -15.395655632019043

Token 625: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010303005576133728
    2. ' t' → logprob: -4.885303020477295
    3. 'diam' → logprob: -6.010303020477295
    4. 'd' → logprob: -9.510302543640137
    5. ' diam' → logprob: -9.760302543640137
    6. ' ' → logprob: -10.260302543640137
    7. '   ' → logprob: -10.260302543640137
    8. '
' → logprob: -11.885302543640137
    9. '	t' → logprob: -12.010302543640137
    10. '    
' → logprob: -12.385302543640137

Token 626: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3869967758655548
    2. ' and' → logprob: -1.1369967460632324
    3. '==' → logprob: -9.51199722290039
    4. '       ' → logprob: -11.26199722290039
    5. '    ' → logprob: -11.88699722290039
    6. '   ' → logprob: -12.01199722290039
    7. ' ' → logprob: -12.13699722290039
    8. '        ' → logprob: -12.13699722290039
    9. '           ' → logprob: -12.38699722290039
    10. '      ' → logprob: -13.51199722290039

Token 627: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0030859708786010742
    2. ' d' → logprob: -6.253086090087891
    3. '       ' → logprob: -7.128086090087891
    4. '           ' → logprob: -9.50308609008789
    5. 'diam' → logprob: -9.87808609008789
    6. '   ' → logprob: -10.12808609008789
    7. '         ' → logprob: -10.25308609008789
    8. '        ' → logprob: -10.50308609008789
    9. '          ' → logprob: -10.62808609008789
    10. '     ' → logprob: -10.87808609008789

Token 628: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.37500286102295
    3. '```' → logprob: -14.50000286102295
    4. '
' → logprob: -15.00000286102295
    5. '[i' → logprob: -16.062501907348633
    6. '[' → logprob: -16.312501907348633
    7. ' ' → logprob: -16.937501907348633
    8. '   ' → logprob: -17.000001907348633
    9. '₂' → logprob: -17.187501907348633
    10. '_' → logprob: -17.250001907348633

Token 629: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -14.250001907348633
    3. '[' → logprob: -14.500001907348633
    4. '```' → logprob: -15.125001907348633
    5. '[I' → logprob: -15.375001907348633
    6. '[
' → logprob: -15.500001907348633
    7. 'i' → logprob: -16.500001907348633
    8. '[node' → logprob: -16.875001907348633
    9. '<|end|>' → logprob: -17.375001907348633
    10. '][' → logprob: -17.750001907348633

Token 630: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019761571660637856
    2. ']' → logprob: -4.519761562347412
    3. '<=' → logprob: -5.644761562347412
    4. ' <=' → logprob: -6.394761562347412
    5. '[' → logprob: -6.769761562347412
    6. '][' → logprob: -7.144761562347412
    7. ']<=' → logprob: -7.519761562347412
    8. '[]' → logprob: -8.64476203918457
    9. ']>=' → logprob: -8.76976203918457
    10. '   ' → logprob: -9.01976203918457

Token 631: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9403929114341736
    2. '>=' → logprob: -1.3153929710388184
    3. ' <=' → logprob: -1.5653929710388184
    4. ' >=' → logprob: -2.5653929710388184
    5. '==' → logprob: -3.0653929710388184
    6. ' ==' → logprob: -4.815392971038818
    7. '   ' → logprob: -8.56539249420166
    8. ' ' → logprob: -8.81539249420166
    9. '>' → logprob: -10.44039249420166
    10. '       ' → logprob: -10.94039249420166

Token 632: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010334976017475128
    2. ' t' → logprob: -4.6353349685668945
    3. 'diam' → logprob: -7.5103349685668945
    4. ' diam' → logprob: -11.135334968566895
    5. '(t' → logprob: -12.135334968566895
    6. '	t' → logprob: -12.385334968566895
    7. ' ' → logprob: -13.135334968566895
    8. '   ' → logprob: -13.260334968566895
    9. '
' → logprob: -14.135334968566895
    10. '  ' → logprob: -15.072834968566895

Token 633: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.034898541867733
    2. ':' → logprob: -3.659898519515991
    3. ':
' → logprob: -5.65989875793457
    4. 'and' → logprob: -5.78489875793457
    5. '       ' → logprob: -6.78489875793457
    6. '           ' → logprob: -7.28489875793457
    7. '   ' → logprob: -10.03489875793457
    8. ' :' → logprob: -10.40989875793457
    9. ',' → logprob: -10.78489875793457
    10. ' ' → logprob: -11.15989875793457

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017147263512015343
    2. ' c' → logprob: -4.892147064208984
    3. ' and' → logprob: -4.892147064208984
    4. ',' → logprob: -7.267147064208984
    5. '       ' → logprob: -8.517147064208984
    6. ':' → logprob: -8.642147064208984
    7. '          ' → logprob: -8.892147064208984
    8. 'c' → logprob: -9.017147064208984
    9. ' ' → logprob: -9.267147064208984
    10. '		' → logprob: -9.642147064208984

Token 635: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.19362777471542358
    2. 'c' (adapté à ' c') → logprob: -1.8186278343200684
    3. '           ' → logprob: -4.693627834320068
    4. ' print' → logprob: -5.943627834320068
    5. 'print' → logprob: -6.568627834320068
    6. '               ' → logprob: -8.44362735748291
    7. '       ' → logprob: -8.69362735748291
    8. '   ' → logprob: -9.06862735748291
    9. '
' → logprob: -10.06862735748291
    10. ' ' → logprob: -10.69362735748291

Token 636: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006799798924475908
    2. '.' → logprob: -5.006799697875977
    3. ' .' → logprob: -9.631799697875977
    4. '.app' → logprob: -11.506799697875977
    5. '.ap' → logprob: -12.256799697875977
    6. '.add' → logprob: -13.756799697875977
    7. ').' → logprob: -14.756799697875977
    8. '.insert' → logprob: -15.131799697875977
    9. '.Append' → logprob: -15.256799697875977
    10. '       ' → logprob: -15.381799697875977

Token 637: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20676831901073456
    2. '(i' → logprob: -1.706768274307251
    3. 'ind' → logprob: -5.70676851272583
    4. '(' → logprob: -7.45676851272583
    5. '1' → logprob: -7.58176851272583
    6. ' i' → logprob: -7.95676851272583
    7. '(ind' → logprob: -8.081768035888672
    8. 'd' → logprob: -9.081768035888672
    9. ' ind' → logprob: -9.706768035888672
    10. '(d' → logprob: -10.831768035888672

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027059658896178007
    2. ')
' → logprob: -6.252706050872803
    3. ' )' → logprob: -7.627706050872803
    4. '   ' → logprob: -8.627705574035645
    5. '<|end|>' → logprob: -9.752705574035645
    6. '
' → logprob: -12.002705574035645
    7. '       ' → logprob: -12.377705574035645
    8. ' ' → logprob: -12.502705574035645
    9. ')]' → logprob: -12.627705574035645
    10. '])' → logprob: -12.627705574035645

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2101062536239624
    2. 'for' → logprob: -2.835106372833252
    3. ' for' → logprob: -2.835106372833252
    4. 'print' → logprob: -3.085106372833252
    5. ' 
' → logprob: -4.960106372833252
    6. ' print' → logprob: -5.210106372833252
    7. '    
' → logprob: -6.085106372833252
    8. ' c' → logprob: -6.210106372833252
    9. '
' → logprob: -6.335106372833252
    10. ' ' → logprob: -6.335106372833252

Token 640: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9765551090240479
    2. 'r' → logprob: -1.3515551090240479
    3. 'for' → logprob: -1.3515551090240479
    4. 'l' → logprob: -3.726555109024048
    5. 'c' → logprob: -3.851555109024048
    6. 'res' → logprob: -4.101554870605469
    7. 'm' → logprob: -4.601554870605469
    8. 'p' → logprob: -4.726554870605469
    9. '   ' → logprob: -5.101554870605469
    10. 'if' → logprob: -5.476554870605469

Token 641: ' O' (ID: 532)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9312313795089722
    2. 'for' → logprob: -1.0562313795089722
    3. 'res' → logprob: -1.5562313795089722
    4. 'r' → logprob: -3.5562314987182617
    5. 'ans' → logprob: -4.806231498718262
    6. 'l' → logprob: -6.056231498718262
    7. 'x' → logprob: -6.181231498718262
    8. 'm' → logprob: -7.431231498718262
    9. 'v' → logprob: -7.431231498718262
    10. 'p' → logprob: -7.431231498718262

Token 642: 'ups' (ID: 14409)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43101510405540466
    2. 'f' → logprob: -1.806015133857727
    3. 'ut' → logprob: -2.5560150146484375
    4. 'k' → logprob: -3.5560150146484375
    5. 'n' → logprob: -4.0560150146484375
    6. 'p' → logprob: -4.3060150146484375
    7. 'print' → logprob: -4.5560150146484375
    8. 'r' → logprob: -4.5560150146484375
    9. 'pt' → logprob: -4.6810150146484375
    10. 'pen' → logprob: -5.1810150146484375

Token 643: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.482720285654068
    2. ' for' → logprob: -1.8577202558517456
    3. 'for' → logprob: -2.232720375061035
    4. 'print' → logprob: -2.732720375061035
    5. 'c' → logprob: -3.857720375061035
    6. '[' → logprob: -5.607720375061035
    7. ' c' → logprob: -5.732720375061035
    8. '
' → logprob: -5.732720375061035
    9. 'a' → logprob: -5.982720375061035
    10. ' print' → logprob: -6.232720375061035

Token 644: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0825881958007812
    2. 'for' → logprob: -1.3325881958007812
    3. ' for' → logprob: -1.8325881958007812
    4. ' res' → logprob: -2.3325881958007812
    5. ' print' → logprob: -3.0825881958007812
    6. 'res' → logprob: -3.5825881958007812
    7. 'c' → logprob: -4.207588195800781
    8. 'l' → logprob: -4.707588195800781
    9. 'r' → logprob: -4.957588195800781
    10. '   ' → logprob: -5.332588195800781

Token 645: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3613762855529785
    2. 'for' → logprob: -1.3613762855529785
    3. 'len' → logprob: -2.2363762855529785
    4. 'print' → logprob: -2.2363762855529785
    5. 'c' → logprob: -2.6113762855529785
    6. ' c' → logprob: -2.7363762855529785
    7. ' len' → logprob: -3.4863762855529785
    8. ' print' → logprob: -3.7363762855529785
    9. ' not' → logprob: -4.2363762855529785
    10. '
' → logprob: -4.3613762855529785

Token 646: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6575965881347656
    2. '.sort' → logprob: -2.1575965881347656
    3. 'f' → logprob: -2.2825965881347656
    4. '=' → logprob: -2.5325965881347656
    5. 'n' → logprob: -2.9075965881347656
    6. '.append' → logprob: -3.6575965881347656
    7. ' =' → logprob: -4.657596588134766
    8. '_len' → logprob: -4.657596588134766
    9. 'k' → logprob: -4.657596588134766
    10. '#' → logprob: -4.782596588134766

Token 647: ''a' (ID: 10443)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3735736608505249
    2. 'ont' → logprob: -1.623573660850525
    3. '=len' → logprob: -3.1235737800598145
    4. '<len' → logprob: -4.2485737800598145
    5. '=' → logprob: -4.9985737800598145
    6. ':' → logprob: -5.1235737800598145
    7. '>' → logprob: -5.2485737800598145
    8. '   ' → logprob: -5.4985737800598145
    9. '==' → logprob: -5.4985737800598145
    10. '(len' → logprob: -5.4985737800598145

Token 648: ' pas' (ID: 2173)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.5929350852966309
    2. 't' → logprob: -1.5929350852966309
    3. ''est' → logprob: -3.092935085296631
    4. 'ont' → logprob: -3.217935085296631
    5. ''t' → logprob: -3.342935085296631
    6. 'othing' → logprob: -3.717935085296631
    7. 'not' → logprob: -4.342935085296631
    8. '>' → logprob: -4.592935085296631
    9. 'o' → logprob: -4.717935085296631
    10. ''' → logprob: -4.967935085296631

Token 649: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3413851261138916
    2. 'len' → logprob: -2.0913851261138916
    3. '1' → logprob: -2.4663851261138916
    4. '0' → logprob: -2.8413851261138916
    5. ' ' → logprob: -4.7163848876953125
    6. '...' → logprob: -6.2163848876953125
    7. ' len' → logprob: -6.4663848876953125
    8. '=' → logprob: -6.5913848876953125
    9. '>' → logprob: -6.8413848876953125
    10. '==' → logprob: -7.0913848876953125

Token 650: ' éléments' (ID: 57375)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.7186033129692078
    2. ' éléments' → logprob: -1.8436033725738525
    3. 'elements' → logprob: -1.9686033725738525
    4. 'élé' → logprob: -1.9686033725738525
    5. 'len' → logprob: -3.0936033725738525
    6. 'indices' → logprob: -4.343603134155273
    7. ' indices' → logprob: -5.593603134155273
    8. 'c' → logprob: -5.968603134155273
    9. ' c' → logprob: -6.468603134155273
    10. 'items' → logprob: -6.468603134155273

Token 651: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1620328426361084
    2. ':' → logprob: -1.2870328426361084
    3. '[' → logprob: -1.9120328426361084
    4. ':
' → logprob: -2.7870328426361084
    5. ' =' → logprob: -3.1620328426361084
    6. '       ' → logprob: -3.5370328426361084
    7. '==' → logprob: -3.5370328426361084
    8. ',' → logprob: -3.9120328426361084
    9. '=' → logprob: -4.1620330810546875
    10. 'if' → logprob: -4.4120330810546875

Token 652: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21059903502464294
    2. '   ' → logprob: -2.085598945617676
    3. '.' → logprob: -4.210598945617676
    4. 'raise' → logprob: -4.335598945617676
    5. 'print' → logprob: -4.585598945617676
    6. ' continue' → logprob: -5.210598945617676
    7. '	continue' → logprob: -5.835598945617676
    8. '[' → logprob: -6.335598945617676
    9. 'return' → logprob: -6.335598945617676
    10. '       ' → logprob: -6.335598945617676

Token 653: ' planter' (ID: 117173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2587070167064667
    2. ' if' → logprob: -2.633707046508789
    3. ' for' → logprob: -2.883707046508789
    4. ',' → logprob: -4.133707046508789
    5. '    
' → logprob: -4.383707046508789
    6. '[' → logprob: -4.508707046508789
    7. 'if' → logprob: -4.508707046508789
    8. 'for' → logprob: -4.758707046508789
    9. '
' → logprob: -4.758707046508789
    10. ' c' → logprob: -5.133707046508789

Token 654: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1497945636510849
    2. '
' → logprob: -2.524794578552246
    3. '    
' → logprob: -4.024794578552246
    4. '[' → logprob: -4.399794578552246
    5. ',' → logprob: -5.149794578552246
    6. ' if' → logprob: -5.399794578552246
    7. 'print' → logprob: -5.774794578552246
    8. 'for' → logprob: -5.899794578552246
    9. ':' → logprob: -6.149794578552246
    10. 'if' → logprob: -6.274794578552246

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16422894597053528
    2. ' for' → logprob: -2.664228916168213
    3. 'for' → logprob: -3.414228916168213
    4. 'print' → logprob: -3.789228916168213
    5. ' print' → logprob: -5.039228916168213
    6. 'a' → logprob: -5.164228916168213
    7. 'c' → logprob: -5.664228916168213
    8. '
' → logprob: -6.039228916168213
    9. '    
' → logprob: -6.164228916168213
    10. ' c' → logprob: -6.789228916168213

Token 656: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008945208042860031
    2. 'res' → logprob: -5.633944988250732
    3. 'r' → logprob: -6.258944988250732
    4. 'for' → logprob: -6.758944988250732
    5. 'x' → logprob: -7.508944988250732
    6. 'p' → logprob: -7.508944988250732
    7. ' print' → logprob: -7.758944988250732
    8. 'c' → logprob: -8.75894546508789
    9. 'v' → logprob: -9.25894546508789
    10. 'ans' (adapté à ' ans') → logprob: -9.38394546508789

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007612305693328381
    2. '=' → logprob: -4.882612228393555
    3. ' ' → logprob: -13.007612228393555
    4. '   ' → logprob: -13.382612228393555
    5. 's' → logprob: -14.757612228393555
    6. ',' → logprob: -15.007612228393555
    7. '[' → logprob: -15.382612228393555
    8. ' =[' → logprob: -15.507612228393555
    9. '_' → logprob: -15.632612228393555
    10. ':' → logprob: -16.007612228393555

Token 658: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.009825390763580799
    2. ' f' → logprob: -4.634825229644775
    3. '1' → logprob: -10.009825706481934
    4. '   ' → logprob: -12.259825706481934
    5. '0' → logprob: -12.509825706481934
    6. '(f' → logprob: -12.634825706481934
    7. ' ' → logprob: -12.634825706481934
    8. 'ans' → logprob: -12.759825706481934
    9. 'max' → logprob: -13.259825706481934
    10. '(' → logprob: -14.009825706481934

Token 659: '(n' (ID: 2406)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.008929966948926449
    2. '(n' → logprob: -4.75892972946167
    3. '(' → logprob: -8.133930206298828
    4. '(
' → logprob: -11.883930206298828
    5. '(d' → logprob: -12.258930206298828
    6. '(*' → logprob: -12.758930206298828
    7. 'c' → logprob: -12.758930206298828
    8. '(t' → logprob: -14.133930206298828
    9. '((' → logprob: -14.258930206298828
    10. '(len' → logprob: -14.258930206298828

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013145243283361197
    2. '(n' → logprob: -7.251314640045166
    3. ',c' → logprob: -8.626314163208008
    4. '(c' → logprob: -8.876314163208008
    5. ',n' → logprob: -9.626314163208008
    6. '(' → logprob: -9.626314163208008
    7. ' ,' → logprob: -10.001314163208008
    8. ',d' → logprob: -10.626314163208008
    9. 'n' → logprob: -10.751314163208008
    10. '(d' → logprob: -10.876314163208008

Token 661: ' diam' (ID: 14315)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.005416369065642357
    2. ' diam' → logprob: -5.505416393280029
    3. 'dm' → logprob: -7.005416393280029
    4. '2' → logprob: -7.880416393280029
    5. ' ' → logprob: -11.255415916442871
    6. 'dim' → logprob: -11.380415916442871
    7. 'd' → logprob: -11.880415916442871
    8. 'n' → logprob: -12.255415916442871
    9. 'di' → logprob: -12.505415916442871
    10. '   ' → logprob: -12.630415916442871

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013025633059442043
    2. ' ,' → logprob: -4.388025760650635
    3. ' +' → logprob: -8.263025283813477
    4. '+' → logprob: -8.638025283813477
    5. ' //' → logprob: -10.638025283813477
    6. '//' → logprob: -10.888025283813477
    7. '```' → logprob: -11.513025283813477
    8. ',
' → logprob: -12.013025283813477
    9. ',n' → logprob: -12.138025283813477
    10. '   ' → logprob: -12.388025283813477

Token 663: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003211938077583909
    2. ' g' → logprob: -5.878211975097656
    3. 'c' → logprob: -8.378211975097656
    4. '   ' → logprob: -9.878211975097656
    5. ' ' → logprob: -10.378211975097656
    6. '1' → logprob: -10.503211975097656
    7. 'd' → logprob: -10.878211975097656
    8. 'f' → logprob: -11.378211975097656
    9. 'n' → logprob: -12.128211975097656
    10. 'diam' → logprob: -12.253211975097656

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020291616674512625
    2. ',c' → logprob: -6.377028942108154
    3. ' ,' → logprob: -8.127029418945312
    4. 'c' → logprob: -11.127029418945312
    5. '   ' → logprob: -12.002029418945312
    6. ' c' → logprob: -12.502029418945312
    7. ',
' → logprob: -12.627029418945312
    8. ',n' → logprob: -14.002029418945312
    9. ')' → logprob: -15.377029418945312
    10. ',i' → logprob: -15.502029418945312

Token 665: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.026370087638497353
    2. ' ind' → logprob: -3.651370048522949
    3. '[ind' → logprob: -9.77637004852295
    4. 'c' → logprob: -13.02637004852295
    5. '   ' → logprob: -13.02637004852295
    6. 'd' → logprob: -13.27637004852295
    7. ' ' → logprob: -13.52637004852295
    8. '(ind' → logprob: -13.77637004852295
    9. 'idx' → logprob: -14.02637004852295
    10. 'index' → logprob: -14.15137004852295

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014678422594442964
    2. ',c' → logprob: -6.626467704772949
    3. ' ,' → logprob: -9.62646770477295
    4. 'c' → logprob: -9.62646770477295
    5. ',
' → logprob: -12.37646770477295
    6. ' c' → logprob: -13.12646770477295
    7. '   ' → logprob: -13.12646770477295
    8. ')' → logprob: -15.81396770477295
    9. ',n' → logprob: -16.376468658447266
    10. '  ' → logprob: -16.626468658447266

Token 667: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00523719098418951
    2. ' c' → logprob: -5.255237102508545
    3. '   ' → logprob: -12.755237579345703
    4. '	c' → logprob: -15.380237579345703
    5. ')c' → logprob: -15.630237579345703
    6. ' ' → logprob: -17.630237579345703
    7. '
' → logprob: -17.755237579345703
    8. ')' → logprob: -17.880237579345703
    9. '*c' → logprob: -18.130237579345703
    10. '    ' → logprob: -18.130237579345703

Token 668: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08897119760513306
    2. '0' → logprob: -2.4639711380004883
    3. ' ' → logprob: -11.463971138000488
    4. '[c' → logprob: -12.213971138000488
    5. '[-' → logprob: -12.213971138000488
    6. '[
' → logprob: -12.838971138000488
    7. 'c' → logprob: -13.088971138000488
    8. ' [' → logprob: -13.463971138000488
    9. '   ' → logprob: -13.588971138000488
    10. '1' → logprob: -13.838971138000488

Token 669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.125020980834961
    3. '1' → logprob: -13.375020980834961
    4. '[' → logprob: -13.375020980834961
    5. '   ' → logprob: -13.750020980834961
    6. '-' → logprob: -13.750020980834961
    7. '
' → logprob: -14.500020980834961
    8. '```' → logprob: -15.750020980834961
    9. '    
' → logprob: -16.68752098083496
    10. '(' → logprob: -17.06252098083496

Token 670: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016294787637889385
    2. ' ,' → logprob: -6.50162935256958
    3. ',c' → logprob: -9.001629829406738
    4. '],' → logprob: -13.751629829406738
    5. '   ' → logprob: -13.751629829406738
    6. ',
' → logprob: -14.126629829406738
    7. ']' → logprob: -15.126629829406738
    8. 'c' → logprob: -15.251629829406738
    9. ' ' → logprob: -15.376629829406738
    10. '‌,' → logprob: -15.626629829406738

Token 671: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858759790658951
    2. ' c' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.673587799072266
    4. ')c' → logprob: -16.798587799072266
    5. '	c' → logprob: -17.548587799072266
    6. ' ' → logprob: -18.173587799072266
    7. '           ' → logprob: -20.173587799072266
    8. '    ' → logprob: -20.298587799072266
    9. '  ' → logprob: -20.923587799072266
    10. '.c' → logprob: -21.173587799072266

Token 672: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25194093585014343
    2. '[' → logprob: -1.5019409656524658
    3. '```' → logprob: -12.501940727233887
    4. ' ' → logprob: -12.626940727233887
    5. '   ' → logprob: -12.876940727233887
    6. '[
' → logprob: -14.126940727233887
    7. ' [' → logprob: -15.376940727233887
    8. '`' → logprob: -15.876940727233887
    9. 'c' → logprob: -16.001941680908203
    10. '``' → logprob: -16.001941680908203

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.250020980834961
    4. '```' → logprob: -15.500020980834961
    5. '0' → logprob: -16.12502098083496
    6. '  ' → logprob: -16.25002098083496
    7. '[' → logprob: -17.06252098083496
    8. '2' → logprob: -17.43752098083496
    9. ')' → logprob: -17.62502098083496
    10. ']' → logprob: -17.68752098083496

Token 674: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.62501335144043
    3. '])' → logprob: -13.25001335144043
    4. ' )' → logprob: -13.62501335144043
    5. '))' → logprob: -14.12501335144043
    6. ')

' → logprob: -16.25001335144043
    7. ')c' → logprob: -16.37501335144043
    8. ')#' → logprob: -16.62501335144043
    9. ')]' → logprob: -16.87501335144043
    10. ']' → logprob: -16.87501335144043

Token 675: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044477298855781555
    2. 'print' → logprob: -3.4194772243499756
    3. '
' → logprob: -4.544477462768555
    4. ' print' → logprob: -9.544477462768555
    5. '    
' → logprob: -10.169477462768555
    6. '
' → logprob: -11.544477462768555
    7. 'for' → logprob: -11.794477462768555
    8. '```' → logprob: -12.294477462768555
    9. '	print' → logprob: -12.669477462768555
    10. ')' → logprob: -12.669477462768555

Token 676: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21076461672782898
    2. 'f' → logprob: -1.8357646465301514
    3. ' ' → logprob: -4.210764408111572
    4. ' f' → logprob: -5.460764408111572
    5. '10' → logprob: -6.460764408111572
    6. '1' → logprob: -6.585764408111572
    7. '   ' → logprob: -6.710764408111572
    8. '4' → logprob: -7.085764408111572
    9. '3' → logprob: -7.085764408111572
    10. '(' → logprob: -7.210764408111572

Token 677: '2' (ID: 17)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001354402513243258
    2. '2' → logprob: -7.001354217529297
    3. ' f' → logprob: -8.376354217529297
    4. '   ' → logprob: -10.126354217529297
    5. '1' → logprob: -10.501354217529297
    6. ' ' → logprob: -10.501354217529297
    7. '  ' → logprob: -10.751354217529297
    8. '10' → logprob: -11.376354217529297
    9. '(f' → logprob: -11.876354217529297
    10. 'c' → logprob: -12.001354217529297

Token 678: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5358040928840637
    2. '   ' → logprob: -1.285804033279419
    3. '
' → logprob: -2.035804033279419
    4. ')' → logprob: -5.660804271697998
    5. ' print' → logprob: -6.410804271697998
    6. '<|end|>' → logprob: -6.660804271697998
    7. 'else' → logprob: -7.785804271697998
    8. ')
' → logprob: -8.16080379486084
    9. '
' → logprob: -8.91080379486084
    10. '.' → logprob: -9.03580379486084

Token 679: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1392197608947754
    2. ')' → logprob: -2.8892197608947754
    3. '   ' → logprob: -3.3892197608947754
    4. '
' → logprob: -3.3892197608947754
    5. '<|end|>' → logprob: -5.514219760894775
    6. ' print' → logprob: -7.014219760894775
    7. ')
' → logprob: -7.139219760894775
    8. '.' → logprob: -7.764219760894775
    9. '.print' → logprob: -9.139219284057617
    10. '    
' → logprob: -9.639219284057617

Token 680: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013629894703626633
    2. ')' → logprob: -5.138629913330078
    3. '
' → logprob: -5.388629913330078
    4. '<|end|>' → logprob: -6.888629913330078
    5. ' print' → logprob: -7.013629913330078
    6. '   ' → logprob: -7.388629913330078
    7. 'else' → logprob: -7.888629913330078
    8. 'elif' → logprob: -9.513629913330078
    9. '```' → logprob: -10.263629913330078
    10. ' ' → logprob: -11.513629913330078

Token 681: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.003927129786461592
    2. '(' → logprob: -5.753927230834961
    3. '()' → logprob: -7.378927230834961
    4. '('' → logprob: -9.253927230834961
    5. '("' → logprob: -11.003927230834961
    6. ' (' → logprob: -12.503927230834961
    7. '(answer' → logprob: -13.378927230834961
    8. '(f' → logprob: -13.753927230834961
    9. '((' → logprob: -13.878927230834961
    10. '(
' → logprob: -14.003927230834961

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -12.250011444091797
    3. ')
' → logprob: -13.000011444091797
    4. '()' → logprob: -13.625011444091797
    5. '())' → logprob: -13.750011444091797
    6. '')' → logprob: -14.250011444091797
    7. '(' → logprob: -14.750011444091797
    8. '))' → logprob: -15.250011444091797
    9. ')`' → logprob: -15.375011444091797
    10. ')#' → logprob: -15.500011444091797

Token 683: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.030168818309903145
    2. 'elif' → logprob: -3.7801687717437744
    3. '<|end|>' → logprob: -5.1551690101623535
    4. ' else' → logprob: -7.7801690101623535
    5. ')' → logprob: -7.9051690101623535
    6. '```' → logprob: -8.405168533325195
    7. '#' → logprob: -10.530168533325195
    8. '[' → logprob: -11.155168533325195
    9. '.' → logprob: -11.530168533325195
    10. '...' → logprob: -11.655168533325195

Token 684: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.434786319732666
    2. ':' → logprob: -1.059786319732666
    3. ' :
' → logprob: -5.434786319732666
    4. '   ' → logprob: -6.809786319732666
    5. ' :' → logprob: -7.434786319732666
    6. ':

' → logprob: -12.434785842895508
    7. ':
' → logprob: -12.934785842895508
    8. '    ' → logprob: -13.434785842895508
    9. '):
' → logprob: -14.184785842895508
    10. ' if' → logprob: -14.434785842895508

Token 685: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8459634184837341
    2. 'c' → logprob: -1.095963478088379
    3. ' t' → logprob: -2.470963478088379
    4. '   ' → logprob: -2.970963478088379
    5. ' c' → logprob: -2.970963478088379
    6. 'm' → logprob: -3.470963478088379
    7. ' m' → logprob: -4.970963478088379
    8. ' mid' → logprob: -5.220963478088379
    9. 'mid' → logprob: -5.720963478088379
    10. ' ' → logprob: -6.720963478088379

Token 686: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.6763495206832886
    2. 'c' → logprob: -1.4263495206832886
    3. 'mid' → logprob: -2.176349639892578
    4. 'm' → logprob: -2.801349639892578
    5. 'print' → logprob: -3.301349639892578
    6. 'center' → logprob: -4.176349639892578
    7. 'cent' → logprob: -4.801349639892578
    8. 'ans' → logprob: -4.801349639892578
    9. 'for' → logprob: -6.301349639892578
    10. 'mi' → logprob: -6.426349639892578

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. '＝' → logprob: -15.451414108276367
    4. ' =
' → logprob: -16.076414108276367
    5. 't' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.576414108276367
    7. '=int' → logprob: -17.201414108276367
    8. ' ' → logprob: -17.326414108276367
    9. '=
' → logprob: -17.451414108276367
    10. 's' → logprob: -17.826414108276367

Token 688: ' diam' (ID: 14315)
  Prédit: 'diam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diam' → logprob: -0.014164921827614307
    2. ' diam' → logprob: -4.264164924621582
    3. '(d' → logprob: -14.014164924621582
    4. '   ' → logprob: -15.264164924621582
    5. ' ' → logprob: -15.889164924621582
    6. 'd' → logprob: -16.014163970947266
    7. 'di' → logprob: -16.389163970947266
    8. 'Diam' → logprob: -17.014163970947266
    9. ' diameter' → logprob: -17.139163970947266
    10. ' (' → logprob: -17.389163970947266

Token 689: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5232016444206238
    2. '//' → logprob: -0.8982016444206238
    3. '#' → logprob: -10.023201942443848
    4. '//=' → logprob: -11.273201942443848
    5. '=' → logprob: -11.773201942443848
    6. ' =' → logprob: -12.023201942443848
    7. ' ' → logprob: -13.273201942443848
    8. '
' → logprob: -13.398201942443848
    9. '   ' → logprob: -13.898201942443848
    10. 'import' → logprob: -14.023201942443848

Token 690: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002809275174513459
    2. ' ' → logprob: -5.877809047698975
    3. '1' → logprob: -13.252809524536133
    4. '   ' → logprob: -13.502809524536133
    5. '
' → logprob: -14.877809524536133
    6. '(' → logprob: -15.252809524536133
    7. '```' → logprob: -15.502809524536133
    8. '0' → logprob: -16.190309524536133
    9. '  ' → logprob: -16.252809524536133
    10. '20' → logprob: -17.065309524536133

Token 691: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.813969957875088e-05
    2. ' ' → logprob: -9.625067710876465
    3. '
' → logprob: -14.375067710876465
    4. '   ' → logprob: -14.625067710876465
    5. '1' → logprob: -14.937567710876465
    6. '```' → logprob: -15.937567710876465
    7. '(' → logprob: -16.43756866455078
    8. '۲' → logprob: -16.68756866455078
    9. '

' → logprob: -17.12506866455078
    10. '
' → logprob: -17.18756866455078

Token 692: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6842268109321594
    2. '
' → logprob: -1.5592267513275146
    3. 'c' → logprob: -2.9342267513275146
    4. 'for' → logprob: -2.9342267513275146
    5. ' for' → logprob: -3.1842267513275146
    6. ' +' → logprob: -3.9342267513275146
    7. ' print' → logprob: -4.059226989746094
    8. '+' → logprob: -4.059226989746094
    9. '   ' → logprob: -4.184226989746094
    10. '#' → logprob: -4.184226989746094

Token 693: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08351348340511322
    2. 'm' → logprob: -2.9585134983062744
    3. 'cent' → logprob: -4.583513259887695
    4. 'center' → logprob: -4.958513259887695
    5. 'print' → logprob: -5.458513259887695
    6. 'mid' → logprob: -5.583513259887695
    7. 'for' → logprob: -6.958513259887695
    8. 'import' → logprob: -8.333513259887695
    9. 'centr' → logprob: -9.083513259887695
    10. 's' → logprob: -9.083513259887695

Token 694: ' print' (ID: 2123)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3031444847583771
    2. 'print' (adapté à ' print') → logprob: -2.1781444549560547
    3. 'm' → logprob: -2.3031444549560547
    4. 'cent' → logprob: -4.053144454956055
    5. 'mid' → logprob: -4.178144454956055
    6. 'for' → logprob: -5.553144454956055
    7. 'center' → logprob: -5.553144454956055
    8. 'cc' → logprob: -6.928144454956055
    9. 'p' → logprob: -7.303144454956055
    10. 'd' → logprob: -7.428144454956055

Token 695: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3134230971336365
    2. 't' → logprob: -1.3134231567382812
    3. '(' → logprob: -9.188423156738281
    4. '1' → logprob: -10.563423156738281
    5. ' t' → logprob: -11.563423156738281
    6. '2' → logprob: -11.563423156738281
    7. 'f' → logprob: -12.813423156738281
    8. ' (' → logprob: -12.938423156738281
    9. '((' → logprob: -13.063423156738281
    10. '(
' → logprob: -13.563423156738281

Token 696: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020878534764051437
    2. ')' → logprob: -4.520878314971924
    3. ',end' → logprob: -4.645878314971924
    4. ' ,' → logprob: -8.770878791809082
    5. 'end' → logprob: -11.520878791809082
    6. ' )' → logprob: -11.895878791809082
    7. '+' → logprob: -12.520878791809082
    8. ',)' → logprob: -13.520878791809082
    9. ' end' → logprob: -13.770878791809082
    10. ',
' → logprob: -14.395878791809082

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014166445471346378
    2. ' ' → logprob: -4.264166355133057
    3. ')' → logprob: -13.514166831970215
    4. '0' → logprob: -14.639166831970215
    5. '```' → logprob: -15.264166831970215
    6. '+' → logprob: -15.514166831970215
    7. ' )' → logprob: -15.514166831970215
    8. ',' → logprob: -16.2641658782959
    9. '2' → logprob: -16.5141658782959
    10. ' +' → logprob: -16.6391658782959

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008616935461759567
    2. ',end' → logprob: -5.633616924285889
    3. ' ,' → logprob: -5.883616924285889
    4. ')' → logprob: -6.133616924285889
    5. 'end' → logprob: -10.883617401123047
    6. ' )' → logprob: -11.508617401123047
    7. ' end' → logprob: -11.508617401123047
    8. ',
' → logprob: -11.758617401123047
    9. '),' → logprob: -14.383617401123047
    10. '   ' → logprob: -14.383617401123047

Token 699: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.009767306968569756
    2. ' end' → logprob: -4.634767532348633
    3. ''end' → logprob: -12.259767532348633
    4. ',end' → logprob: -13.259767532348633
    5. ',' → logprob: -13.384767532348633
    6. '   ' → logprob: -13.884767532348633
    7. '"' → logprob: -14.509767532348633
    8. ')' → logprob: -14.759767532348633
    9. 'ans' → logprob: -15.259767532348633
    10. ' ' → logprob: -15.634767532348633

Token 700: '='' (ID: 2053)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.21639412641525269
    2. ''' → logprob: -1.8413941860198975
    3. '='' → logprob: -3.3413941860198975
    4. '(' → logprob: -7.966393947601318
    5. '=' → logprob: -8.841394424438477
    6. ')' → logprob: -9.466394424438477
    7. '"' → logprob: -11.716394424438477
    8. '("' → logprob: -12.341394424438477
    9. '(',' → logprob: -12.341394424438477
    10. '')' → logprob: -12.591394424438477

Token 701: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.106736039626412e-05
    2. ' '' → logprob: -10.875031471252441
    3. '"' → logprob: -11.875031471252441
    4. ')' → logprob: -12.875031471252441
    5. '')' → logprob: -14.125031471252441
    6. ' )' → logprob: -14.250031471252441
    7. ' ')
' → logprob: -14.875031471252441
    8. ' ')' → logprob: -15.125031471252441
    9. ' ' → logprob: -15.250031471252441
    10. '('' → logprob: -15.875031471252441

Token 702: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4108116924762726
    2. 'ans' → logprob: -1.4108116626739502
    3. 'cent' → logprob: -3.53581166267395
    4. 'mid' → logprob: -4.035811901092529
    5. 'm' → logprob: -4.535811901092529
    6. 'for' → logprob: -4.910811901092529
    7. 'center' → logprob: -5.160811901092529
    8. 'vals' → logprob: -5.160811901092529
    9. 'res' → logprob: -5.535811901092529
    10. 'max' → logprob: -6.410811901092529

Token 703: ' for' (ID: 395)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10977017134428024
    2. 'c' → logprob: -2.6097700595855713
    3. 'print' → logprob: -4.48477029800415
    4. 'res' → logprob: -5.35977029800415
    5. 'm' → logprob: -5.85977029800415
    6. 'l' → logprob: -6.10977029800415
    7. 'for' (adapté à ' for') → logprob: -6.48477029800415
    8. 'vals' → logprob: -6.60977029800415
    9. 'mid' → logprob: -6.73477029800415
    10. 'a' → logprob: -6.85977029800415

Token 704: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005317481700330973
    2. ' i' → logprob: -5.255317687988281
    3. 'x' → logprob: -10.880317687988281
    4. 'v' → logprob: -11.005317687988281
    5. 'node' → logprob: -11.130317687988281
    6. 'u' → logprob: -11.255317687988281
    7. 'c' → logprob: -11.630317687988281
    8. 'a' → logprob: -13.130317687988281
    9. '_i' → logprob: -13.255317687988281
    10. 'j' → logprob: -13.505317687988281

Token 705: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4810785949230194
    2. ' in' → logprob: -0.9810786247253418
    3. 'n' → logprob: -4.981078624725342
    4. 'range' → logprob: -9.856078147888184
    5. '   ' → logprob: -10.731078147888184
    6. '(n' → logprob: -11.606078147888184
    7. 's' → logprob: -12.356078147888184
    8. 't' → logprob: -12.356078147888184
    9. 'i' → logprob: -12.981078147888184
    10. '(' → logprob: -13.106078147888184

Token 706: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. 'in' → logprob: -16.131715774536133
    4. '(range' → logprob: -16.256715774536133
    5. ' ' → logprob: -18.256715774536133
    6. ' in' → logprob: -18.506715774536133
    7. '   ' → logprob: -19.631715774536133
    8. 'n' → logprob: -19.631715774536133
    9. '  ' → logprob: -20.131715774536133
    10. '
' → logprob: -20.631715774536133

Token 707: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008925211732275784
    2. 'n' → logprob: -7.500892639160156
    3. ' range' → logprob: -8.500892639160156
    4. '(n' → logprob: -9.750892639160156
    5. '(range' → logprob: -9.750892639160156
    6. 'in' → logprob: -10.875892639160156
    7. ' in' → logprob: -14.750892639160156
    8. '(' → logprob: -16.250892639160156
    9. '   ' → logprob: -16.250892639160156
    10. ' ' → logprob: -16.750892639160156

Token 708: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9934000968933105
    2. '):
' → logprob: -1.1184000968933105
    3. 'in' → logprob: -1.7434000968933105
    4. '   ' → logprob: -3.4934000968933105
    5. 'n' → logprob: -3.6184000968933105
    6. ')' → logprob: -3.7434000968933105
    7. '):' → logprob: -4.1184000968933105
    8. '       ' → logprob: -4.6184000968933105
    9. '(n' → logprob: -5.3684000968933105
    10. ':
' → logprob: -5.4934000968933105

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18199805915355682
    2. '   ' → logprob: -2.3069980144500732
    3. 'if' → logprob: -2.9319980144500732
    4. ' if' → logprob: -4.306998252868652
    5. '	if' → logprob: -10.556998252868652
    6. '           ' → logprob: -11.556998252868652
    7. '	   ' → logprob: -11.556998252868652
    8. '    ' → logprob: -12.931998252868652
    9. ' ' → logprob: -13.056998252868652
    10. '
' → logprob: -13.056998252868652

Token 710: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008960334584116936
    2. ' if' → logprob: -4.883960247039795
    3. '   ' → logprob: -6.758960247039795
    4. '       ' → logprob: -8.633960723876953
    5. '	if' → logprob: -11.883960723876953
    6. 'd' → logprob: -13.008960723876953
    7. ' ' → logprob: -13.758960723876953
    8. 'c' → logprob: -13.758960723876953
    9. 'print' → logprob: -13.758960723876953
    10. '           ' → logprob: -14.133960723876953

Token 711: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6939893960952759
    2. ' d' → logprob: -0.6939893960952759
    3. '   ' → logprob: -7.443989276885986
    4. ' max' → logprob: -9.943989753723145
    5. '(d' → logprob: -9.943989753723145
    6. 'max' → logprob: -10.193989753723145
    7. ' (' → logprob: -10.443989753723145
    8. ' ' → logprob: -10.693989753723145
    9. '       ' → logprob: -10.818989753723145
    10. '    ' → logprob: -11.193989753723145

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014177384786307812
    2. '2' → logprob: -4.264177322387695
    3. 'd' → logprob: -11.514177322387695
    4. '[i' → logprob: -13.764177322387695
    5. '
' → logprob: -14.764177322387695
    6. ' d' → logprob: -14.889177322387695
    7. '[' → logprob: -15.014177322387695
    8. '   ' → logprob: -15.264177322387695
    9. ' ' → logprob: -15.576677322387695
    10. '```' → logprob: -15.701677322387695

Token 713: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.250001907348633
    3. 'i' → logprob: -15.000001907348633
    4. '[I' → logprob: -15.500001907348633
    5. '```' → logprob: -15.625001907348633
    6. '[node' → logprob: -15.875001907348633
    7. ' [' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '[
' → logprob: -16.625001907348633
    10. '
' → logprob: -17.875001907348633

Token 714: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. 'i' → logprob: -11.625020027160645
    3. ']' → logprob: -12.250020027160645
    4. '][' → logprob: -12.750020027160645
    5. '[' → logprob: -13.625020027160645
    6. '```' → logprob: -13.750020027160645
    7. '   ' → logprob: -14.750020027160645
    8. '<=' → logprob: -15.500020027160645
    9. ']<=' → logprob: -16.25002098083496
    10. ' [' → logprob: -16.25002098083496

Token 715: ' <=' (ID: 5017)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4285862057004124e-05
    2. '<=' → logprob: -11.37503433227539
    3. 'i' → logprob: -11.75003433227539
    4. '[' → logprob: -12.00003433227539
    5. '==' → logprob: -12.87503433227539
    6. ' <=' → logprob: -12.87503433227539
    7. '```' → logprob: -14.00003433227539
    8. ' [' → logprob: -14.25003433227539
    9. '[node' → logprob: -14.87503433227539
    10. '   ' → logprob: -15.00003433227539

Token 716: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0021867838222533464
    2. ' t' → logprob: -6.1271867752075195
    3. 'diam' → logprob: -14.50218677520752
    4. '(t' → logprob: -15.00218677520752
    5. ' ' → logprob: -15.37718677520752
    6. '   ' → logprob: -15.62718677520752
    7. '
' → logprob: -15.87718677520752
    8. ' diam' → logprob: -16.002187728881836
    9. '`t' → logprob: -16.502187728881836
    10. '	t' → logprob: -16.502187728881836

Token 717: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931501626968384
    2. 'and' → logprob: -0.6931501626968384
    3. ' ' → logprob: -14.568150520324707
    4. '        ' → logprob: -14.693150520324707
    5. '   ' → logprob: -14.818150520324707
    6. '    ' → logprob: -14.943150520324707
    7. '          ' → logprob: -14.943150520324707
    8. '           ' → logprob: -15.068150520324707
    9. '       ' → logprob: -15.693150520324707
    10. '            ' → logprob: -15.943150520324707

Token 718: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04312524572014809
    2. ' d' → logprob: -3.1681251525878906
    3. '   ' → logprob: -9.04312515258789
    4. '    ' → logprob: -12.91812515258789
    5. '	d' → logprob: -13.91812515258789
    6. '  ' → logprob: -14.04312515258789
    7. '       ' → logprob: -14.04312515258789
    8. ' ' → logprob: -14.66812515258789
    9. ' ' → logprob: -14.91812515258789
    10. '...' → logprob: -15.16812515258789

Token 719: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. '₂' → logprob: -18.0625
    5. '_' → logprob: -18.1875
    6. '２' → logprob: -18.4375
    7. '
' → logprob: -18.75
    8. '۲' → logprob: -18.8125
    9. '1' → logprob: -18.875
    10. '   ' → logprob: -19.125

Token 720: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -15.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[' → logprob: -16.25
    5. '[
' → logprob: -16.625
    6. '[I' → logprob: -17.375
    7. ' [' → logprob: -17.375
    8. '[node' → logprob: -17.5
    9. '(i' → logprob: -18.875
    10. '[int' → logprob: -19.0

Token 721: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. 'i' → logprob: -12.625005722045898
    3. ']' → logprob: -13.625005722045898
    4. '[' → logprob: -15.250005722045898
    5. '][' → logprob: -15.750005722045898
    6. ' [' → logprob: -16.1250057220459
    7. '```' → logprob: -16.3750057220459
    8. '[
' → logprob: -16.8750057220459
    9. '[I' → logprob: -16.8750057220459
    10. '[]' → logprob: -17.0000057220459

Token 722: ' <=' (ID: 5017)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.77022064034827e-05
    2. '<=' → logprob: -9.375097274780273
    3. ' <=' → logprob: -11.750097274780273
    4. '[' → logprob: -13.000097274780273
    5. 'i' → logprob: -13.875097274780273
    6. '```' → logprob: -14.000097274780273
    7. ' [' → logprob: -15.250097274780273
    8. '``' → logprob: -16.250097274780273
    9. '[
' → logprob: -16.875097274780273
    10. '(i' → logprob: -16.875097274780273

Token 723: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012523093027994037
    2. ' t' → logprob: -9.00012493133545
    3. 'diam' → logprob: -13.50012493133545
    4. '
' → logprob: -15.62512493133545
    5. ' diam' → logprob: -16.375125885009766
    6. '	t' → logprob: -16.750125885009766
    7. '(t' → logprob: -16.875125885009766
    8. '`t' → logprob: -17.000125885009766
    9. '   ' → logprob: -17.250125885009766
    10. ' ' → logprob: -17.375125885009766

Token 724: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20355504751205444
    2. 'and' → logprob: -2.203555107116699
    3. ':
' → logprob: -3.203555107116699
    4. '       ' → logprob: -3.578555107116699
    5. ':' → logprob: -5.828555107116699
    6. '           ' → logprob: -6.828555107116699
    7. '   ' → logprob: -7.578555107116699
    8. '          ' → logprob: -9.2035551071167
    9. '.append' → logprob: -9.2035551071167
    10. '      ' → logprob: -9.8285551071167

Token 725: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04277946427464485
    2. '   ' → logprob: -3.7927794456481934
    3. 'c' → logprob: -4.042779445648193
    4. ' c' → logprob: -6.417779445648193
    5. 'print' → logprob: -10.167779922485352
    6. ' ' → logprob: -10.917779922485352
    7. '      ' → logprob: -11.417779922485352
    8. '           ' → logprob: -11.542779922485352
    9. 's' → logprob: -11.792779922485352
    10. 'b' → logprob: -11.792779922485352

Token 726: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.018095625564455986
    2. '   ' → logprob: -4.26809549331665
    3. ' c' → logprob: -5.89309549331665
    4. 'print' → logprob: -7.64309549331665
    5. '       ' → logprob: -7.76809549331665
    6. '           ' → logprob: -9.393095970153809
    7. ' ' → logprob: -10.518095970153809
    8. 'a' → logprob: -10.518095970153809
    9. '	c' → logprob: -10.893095970153809
    10. 'b' → logprob: -10.893095970153809

Token 727: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.750436007976532e-05
    2. '.' → logprob: -10.37503719329834
    3. '.app' → logprob: -12.12503719329834
    4. '.ap' → logprob: -14.62503719329834
    5. ' .' → logprob: -15.50003719329834
    6. '.add' → logprob: -16.875038146972656
    7. '.Append' → logprob: -16.875038146972656
    8. 'append' → logprob: -17.750038146972656
    9. '.py' → logprob: -18.000038146972656
    10. '.push' → logprob: -18.375038146972656

Token 728: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01877966895699501
    2. ' i' → logprob: -4.393779754638672
    3. '[i' → logprob: -5.143779754638672
    4. '   ' → logprob: -8.893779754638672
    5. '[' → logprob: -9.268779754638672
    6. ' [' → logprob: -9.393779754638672
    7. '       ' → logprob: -10.643779754638672
    8. '           ' → logprob: -10.768779754638672
    9. '         ' → logprob: -11.518779754638672
    10. '          ' → logprob: -11.643779754638672

Token 729: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8018341064453125
    2. '   ' → logprob: -0.9268341064453125
    3. 'print' → logprob: -1.9268341064453125
    4. '    
' → logprob: -6.1768341064453125
    5. '           ' → logprob: -6.4268341064453125
    6. '       ' → logprob: -6.6768341064453125
    7. ' print' → logprob: -7.1768341064453125
    8. 'ans' → logprob: -7.5518341064453125
    9. '#' → logprob: -7.9268341064453125
    10. 'for' → logprob: -7.9268341064453125

Token 730: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7306001782417297
    2. 'print' → logprob: -0.7306001782417297
    3. '   ' → logprob: -3.355600118637085
    4. '    
' → logprob: -7.980600357055664
    5. 'for' → logprob: -8.105600357055664
    6. 'c' → logprob: -8.480600357055664
    7. ' print' → logprob: -8.605600357055664
    8. 'ans' → logprob: -8.980600357055664
    9. 'break' → logprob: -8.980600357055664
    10. '       ' → logprob: -9.355600357055664

Token 731: ' bon' (ID: 4846)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39583444595336914
    2. 'c' → logprob: -1.3958344459533691
    3. '
' → logprob: -3.145834445953369
    4. '   ' → logprob: -5.020834445953369
    5. ' c' → logprob: -5.145834445953369
    6. ' print' → logprob: -5.270834445953369
    7. 'break' → logprob: -5.270834445953369
    8. 'f' → logprob: -5.770834445953369
    9. '#' → logprob: -5.770834445953369
    10. ' break' → logprob: -6.520834445953369

Token 732: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 733: ' on' (ID: 402)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5888146162033081
    2. 'break' → logprob: -1.588814616203308
    3. ' break' → logprob: -2.2138147354125977
    4. '#' → logprob: -3.4638147354125977
    5. ' c' → logprob: -3.8388147354125977
    6. 'continue' → logprob: -4.213814735412598
    7. '           ' → logprob: -4.463814735412598
    8. '       ' → logprob: -4.463814735412598
    9. 't' → logprob: -5.213814735412598
    10. 'print' → logprob: -5.213814735412598

Token 734: ' prend' (ID: 37463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.737460970878601
    2. '#' → logprob: -1.862460970878601
    3. ' =' → logprob: -2.2374610900878906
    4. 'continue' → logprob: -2.2374610900878906
    5. '<|end|>' → logprob: -2.6124610900878906
    6. '           ' → logprob: -2.6124610900878906
    7. ' continue' → logprob: -2.8624610900878906
    8. ' ' → logprob: -3.3624610900878906
    9. '
' → logprob: -3.6124610900878906
    10. '       ' → logprob: -3.7374610900878906

Token 735: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21987633407115936
    2. ' c' → logprob: -1.7198762893676758
    3. ' i' → logprob: -5.219876289367676
    4. 'i' → logprob: -5.344876289367676
    5. ' ' → logprob: -6.344876289367676
    6. '           ' → logprob: -6.594876289367676
    7. ')' → logprob: -7.219876289367676
    8. '   ' → logprob: -7.344876289367676
    9. '       ' → logprob: -7.344876289367676
    10. '               ' → logprob: -7.594876289367676

Token 736: ' dernier' (ID: 27982)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5892034769058228
    2. 'i' → logprob: -0.8392034769058228
    3. 'candidate' → logprob: -5.464203357696533
    4. 'node' → logprob: -5.839203357696533
    5. 'center' → logprob: -6.839203357696533
    6. ' i' → logprob: -7.089203357696533
    7. 'centre' → logprob: -7.089203357696533
    8. 'vertex' → logprob: -7.839203357696533
    9. 'cent' → logprob: -7.964203357696533
    10. ' sommet' → logprob: -7.964203357696533

Token 737: ' vu' (ID: 12005)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6397674679756165
    2. '   ' → logprob: -0.7647674679756165
    3. ' print' → logprob: -5.514767646789551
    4. '
' → logprob: -7.389767646789551
    5. 'ans' → logprob: -7.389767646789551
    6. '#' → logprob: -7.639767646789551
    7. 'c' → logprob: -8.38976764678955
    8. '    
' → logprob: -8.38976764678955
    9. '<|end|>' → logprob: -8.63976764678955
    10. '       ' → logprob: -9.01476764678955

Token 738: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19194230437278748
    2. 'print' → logprob: -2.1919422149658203
    3. '
' → logprob: -2.8169422149658203
    4. ' print' → logprob: -6.06694221496582
    5. 'ans' → logprob: -8.31694221496582
    6. '    
' → logprob: -8.56694221496582
    7. ')
' → logprob: -9.56694221496582
    8. '       ' → logprob: -10.06694221496582
    9. ',' → logprob: -10.06694221496582
    10. ')' → logprob: -10.19194221496582

Token 739: ' tant' (ID: 16235)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9640762209892273
    2. 'c' → logprob: -1.714076280593872
    3. 'print' → logprob: -2.089076280593872
    4. '   ' → logprob: -3.464076280593872
    5. 'ans' → logprob: -3.464076280593872
    6. ' #' → logprob: -3.714076280593872
    7. '
' → logprob: -3.714076280593872
    8. 'break' → logprob: -3.839076280593872
    9. ' ind' → logprob: -3.964076280593872
    10. 't' → logprob: -4.089076042175293

Token 740: ' pis' (ID: 19525)
  Prédit: 'pis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pis' → logprob: -1.2467782497406006
    2. 'que' → logprob: -1.9967782497406006
    3. 'c' → logprob: -2.3717782497406006
    4. 'qu' → logprob: -2.6217782497406006
    5. '   ' → logprob: -2.6217782497406006
    6. '         ' → logprob: -3.1217782497406006
    7. '       ' → logprob: -3.1217782497406006
    8. '           ' → logprob: -4.12177848815918
    9. 'bien' → logprob: -4.12177848815918
    10. '```' → logprob: -4.12177848815918

Token 741: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8029490113258362
    2. '
' → logprob: -1.3029489517211914
    3. 'ans' → logprob: -1.5529489517211914
    4. 'print' → logprob: -2.8029489517211914
    5. ',' → logprob: -5.427948951721191
    6. 's' → logprob: -7.302948951721191
    7. '    
' → logprob: -7.802948951721191
    8. 'a' → logprob: -7.802948951721191
    9. ' ans' → logprob: -8.052948951721191
    10. 'c' → logprob: -8.677948951721191

Token 742: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05992811173200607
    2. 'print' → logprob: -3.3099281787872314
    3. '   ' → logprob: -4.059927940368652
    4. '
' → logprob: -6.059927940368652
    5. ' ans' → logprob: -7.559927940368652
    6. 'a' → logprob: -7.684927940368652
    7. 'for' → logprob: -7.809927940368652
    8. ',' → logprob: -8.809927940368652
    9. 'answer' → logprob: -9.184927940368652
    10. 's' → logprob: -9.684927940368652

Token 743: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006275486201047897
    2. 'print' → logprob: -5.256275653839111
    3. ' ans' → logprob: -7.256275653839111
    4. '
' → logprob: -8.631275177001953
    5. 'for' → logprob: -10.131275177001953
    6. '   ' → logprob: -10.256275177001953
    7. 'a' → logprob: -11.006275177001953
    8. 'answer' → logprob: -11.006275177001953
    9. 'res' → logprob: -11.131275177001953
    10. 'l' → logprob: -11.756275177001953

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740787148475647
    2. ' =' → logprob: -0.9740787148475647
    3. '=f' → logprob: -13.724079132080078
    4. ',' → logprob: -14.724079132080078
    5. '＝' → logprob: -16.474079132080078
    6. ' ' → logprob: -17.099079132080078
    7. ' +=' → logprob: -17.599079132080078
    8. '=
' → logprob: -17.849079132080078
    9. ' =
' → logprob: -17.974079132080078
    10. '+=' → logprob: -17.974079132080078

Token 745: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.898723561083898e-05
    2. ' f' → logprob: -9.625079154968262
    3. '1' → logprob: -11.500079154968262
    4. '2' → logprob: -13.500079154968262
    5. '   ' → logprob: -14.375079154968262
    6. 'max' → logprob: -15.250079154968262
    7. '(f' → logprob: -15.875079154968262
    8. '0' → logprob: -16.250078201293945
    9. '  ' → logprob: -16.625078201293945
    10. 'ans' → logprob: -16.625078201293945

Token 746: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. 'n' → logprob: -15.000003814697266
    4. ' (' → logprob: -16.500003814697266
    5. '(
' → logprob: -16.875003814697266
    6. '```' → logprob: -17.125003814697266
    7. '<n' → logprob: -18.125003814697266
    8. '<|end|>' → logprob: -18.500003814697266
    9. '(len' → logprob: -18.875003814697266
    10. '[n' → logprob: -19.375003814697266

Token 747: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007453064317815006
    2. '(' → logprob: -7.6257452964782715
    3. ',' → logprob: -8.62574577331543
    4. 'n' → logprob: -10.12574577331543
    5. ')' → logprob: -10.87574577331543
    6. ' (' → logprob: -11.87574577331543
    7. '(
' → logprob: -11.87574577331543
    8. ',n' → logprob: -13.25074577331543
    9. '```' → logprob: -13.37574577331543
    10. ')(' → logprob: -14.12574577331543

Token 748: ' diam' (ID: 14315)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014060820103622973
    2. ' n' → logprob: -8.875140190124512
    3. '(n' → logprob: -14.250140190124512
    4. '   ' → logprob: -18.500141143798828
    5. '	n' → logprob: -19.000141143798828
    6. 'len' → logprob: -19.625141143798828
    7. ')n' → logprob: -19.875141143798828
    8. ')' → logprob: -20.125141143798828
    9. '_n' → logprob: -20.500141143798828
    10. ' ' → logprob: -20.625141143798828

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004123399965465069
    2. '(n' → logprob: -6.129123210906982
    3. ',n' → logprob: -6.254123210906982
    4. ' ,' → logprob: -11.75412368774414
    5. 'n' → logprob: -13.37912368774414
    6. ',
' → logprob: -13.50412368774414
    7. ' n' → logprob: -13.62912368774414
    8. '(' → logprob: -14.37912368774414
    9. ')' → logprob: -14.62912368774414
    10. '=n' → logprob: -15.37912368774414

Token 750: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007340872660279274
    2. 'n' → logprob: -5.507340908050537
    3. ' g' → logprob: -5.757340908050537
    4. ' n' → logprob: -9.257340431213379
    5. '   ' → logprob: -13.632340431213379
    6. 'c' → logprob: -14.507340431213379
    7. '    ' → logprob: -15.632340431213379
    8. ' ' → logprob: -16.007341384887695
    9. '	g' → logprob: -17.257341384887695
    10. ')' → logprob: -17.507341384887695

Token 751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033117449493147433
    2. ',n' → logprob: -8.250330924987793
    3. ' ,' → logprob: -9.625330924987793
    4. 'n' → logprob: -13.250330924987793
    5. ' n' → logprob: -13.375330924987793
    6. ',
' → logprob: -15.250330924987793
    7. ',c' → logprob: -16.12533187866211
    8. '(n' → logprob: -16.37533187866211
    9. '   ' → logprob: -17.50033187866211
    10. ',int' → logprob: -18.50033187866211

Token 752: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.029842477291822433
    2. ' ind' → logprob: -3.5298423767089844
    3. 'c' → logprob: -9.404842376708984
    4. '[ind' → logprob: -12.779842376708984
    5. 'n' → logprob: -13.279842376708984
    6. ' c' → logprob: -13.529842376708984
    7. '   ' → logprob: -13.654842376708984
    8. '0' → logprob: -14.029842376708984
    9. ' ' → logprob: -14.904842376708984
    10. '    ' → logprob: -15.154842376708984

Token 753: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000511687423568219
    2. ',n' → logprob: -8.12551212310791
    3. ' ,' → logprob: -8.50051212310791
    4. ',c' → logprob: -11.37551212310791
    5. '   ' → logprob: -15.62551212310791
    6. ',t' → logprob: -15.87551212310791
    7. ',
' → logprob: -15.87551212310791
    8. 'n' → logprob: -16.125511169433594
    9. ' n' → logprob: -16.750511169433594
    10. ',g' → logprob: -17.250511169433594

Token 754: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11323221027851105
    2. 'c' → logprob: -2.238232135772705
    3. ' n' → logprob: -7.863232135772705
    4. ' c' → logprob: -10.738232612609863
    5. '   ' → logprob: -14.363232612609863
    6. '0' → logprob: -14.488232612609863
    7. '```' → logprob: -14.738232612609863
    8. '1' → logprob: -14.988232612609863
    9. '(n' → logprob: -15.113232612609863
    10. ' ' → logprob: -15.238232612609863

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. ' ,' → logprob: -9.750105857849121
    3. ',c' → logprob: -10.125105857849121
    4. 'c' → logprob: -12.375105857849121
    5. ')' → logprob: -13.000105857849121
    6. ',
' → logprob: -15.625105857849121
    7. '   ' → logprob: -16.625104904174805
    8. ' c' → logprob: -16.875104904174805
    9. '```' → logprob: -16.875104904174805
    10. '[' → logprob: -17.000104904174805

Token 756: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00038086410495452583
    2. ' c' → logprob: -7.875380992889404
    3. '   ' → logprob: -14.625380516052246
    4. ' ' → logprob: -16.125381469726562
    5. '	c' → logprob: -16.125381469726562
    6. '  ' → logprob: -17.875381469726562
    7. ')c' → logprob: -18.625381469726562
    8. '
' → logprob: -19.875381469726562
    9. 'с' → logprob: -19.875381469726562
    10. '    ' → logprob: -20.000381469726562

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. ')+' → logprob: -11.250028610229492
    3. ')
' → logprob: -12.250028610229492
    4. '))' → logprob: -12.250028610229492
    5. ' )' → logprob: -12.750028610229492
    6. ')#' → logprob: -13.875028610229492
    7. '+' → logprob: -14.375028610229492
    8. ')`' → logprob: -14.500028610229492
    9. ')}' → logprob: -15.875028610229492
    10. ')return' → logprob: -16.250028610229492

Token 758: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029687879141420126
    2. '   ' → logprob: -6.627968788146973
    3. ' print' → logprob: -6.752968788146973
    4. ')' → logprob: -8.252968788146973
    5. ')
' → logprob: -9.127968788146973
    6. '*' → logprob: -9.877968788146973
    7. '
' → logprob: -9.877968788146973
    8. ' 
' → logprob: -13.877968788146973
    9. '+' → logprob: -15.002968788146973
    10. '),' → logprob: -15.377968788146973

Token 759: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010456704767420888
    2. '   ' → logprob: -7.2510457038879395
    3. ' print' → logprob: -8.001045227050781
    4. '
' → logprob: -14.626045227050781
    5. '	print' → logprob: -16.62604522705078
    6. '```' → logprob: -17.37604522705078
    7. ' ' → logprob: -18.62604522705078
    8. '.print' → logprob: -18.87604522705078
    9. '#print' → logprob: -19.12604522705078
    10. '  ' → logprob: -19.12604522705078

Token 760: ' node' (ID: 4596)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5609571933746338
    2. ' i' → logprob: -1.0609571933746338
    3. 'x' → logprob: -3.435957193374634
    4. '_' → logprob: -3.560957193374634
    5. ' x' → logprob: -4.560956954956055
    6. ' _' → logprob: -4.685956954956055
    7. '_i' → logprob: -6.310956954956055
    8. '_x' → logprob: -7.185956954956055
    9. 'v' → logprob: -9.560956954956055
    10. ' ' → logprob: -10.060956954956055

Token 761: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012517307884991169
    2. 'in' → logprob: -4.38751745223999
    3. ' ' → logprob: -12.762516975402832
    4. '  ' → logprob: -13.387516975402832
    5. '   ' → logprob: -13.512516975402832
    6. '	in' → logprob: -13.887516975402832
    7. 'n' → logprob: -15.637516975402832
    8. 's' → logprob: -15.887516975402832
    9. ' i' → logprob: -16.01251792907715
    10. '    ' → logprob: -16.13751792907715

Token 762: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02718077227473259
    2. ' g' → logprob: -3.6521806716918945
    3. 'range' → logprob: -7.6521806716918945
    4. ' range' → logprob: -8.027180671691895
    5. 'c' → logprob: -10.277180671691895
    6. 's' → logprob: -10.902180671691895
    7. '[g' → logprob: -11.777180671691895
    8. 'print' → logprob: -12.402180671691895
    9. 'd' → logprob: -12.652180671691895
    10. '	g' → logprob: -13.152180671691895

Token 763: '[c' (ID: 22840)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5535935759544373
    2. '[c' → logprob: -1.053593635559082
    3. 'in' → logprob: -2.803593635559082
    4. 'c' → logprob: -4.178593635559082
    5. ' c' → logprob: -8.303593635559082
    6. '[' → logprob: -9.053593635559082
    7. '[in' → logprob: -10.178593635559082
    8. ' ' → logprob: -10.178593635559082
    9. '   ' → logprob: -11.053593635559082
    10. '[node' → logprob: -11.178593635559082

Token 764: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018799698445945978
    2. ':
' → logprob: -6.501880168914795
    3. '):' → logprob: -8.126879692077637
    4. ')' → logprob: -10.251879692077637
    5. '):
' → logprob: -11.376879692077637
    6. '[' → logprob: -12.001879692077637
    7. ']:' → logprob: -12.126879692077637
    8. '   ' → logprob: -12.251879692077637
    9. '       ' → logprob: -12.376879692077637
    10. ' :' → logprob: -12.501879692077637

Token 765: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01678018644452095
    2. 'print' → logprob: -4.391780376434326
    3. 'if' → logprob: -5.766780376434326
    4. '       ' → logprob: -6.891780376434326
    5. ' if' → logprob: -9.516779899597168
    6. ' print' → logprob: -10.641779899597168
    7. 'ans' → logprob: -11.516779899597168
    8. '	print' → logprob: -13.016779899597168
    9. 'for' → logprob: -14.266779899597168
    10. '	if' → logprob: -14.266779899597168

Token 766: ' val' (ID: 1459)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4971589744091034
    2. 'ans' → logprob: -1.1221590042114258
    3. 'if' → logprob: -3.372159004211426
    4. '   ' → logprob: -3.997159004211426
    5. ' ans' → logprob: -5.122159004211426
    6. ' print' → logprob: -5.747159004211426
    7. ' if' → logprob: -5.747159004211426
    8. '	ans' → logprob: -7.747159004211426
    9. 'for' → logprob: -8.372159004211426
    10. 'a' → logprob: -9.747159004211426

Token 767: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7150847315788269
    2. ' =' → logprob: -0.7150847315788269
    3. '   ' → logprob: -3.9650847911834717
    4. 'if' → logprob: -7.840084552764893
    5. '+=' → logprob: -7.840084552764893
    6. '       ' → logprob: -7.965084552764893
    7. '=int' → logprob: -8.21508502960205
    8. ' +=' → logprob: -8.71508502960205
    9. '  ' → logprob: -8.84008502960205
    10. ',' → logprob: -8.96508502960205

Token 768: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09618943184614182
    2. 'ind' → logprob: -2.846189498901367
    3. 'max' → logprob: -3.846189498901367
    4. 'ans' → logprob: -5.221189498901367
    5. ' ind' → logprob: -6.096189498901367
    6. ' f' → logprob: -6.221189498901367
    7. 'val' → logprob: -6.846189498901367
    8. '1' → logprob: -6.971189498901367
    9. ' max' → logprob: -8.596189498901367
    10. '(ind' → logprob: -9.221189498901367

Token 769: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.750000953674316
    3. 'n' → logprob: -15.250000953674316
    4. '(len' → logprob: -15.500000953674316
    5. '(
' → logprob: -16.125001907348633
    6. ' (' → logprob: -17.125001907348633
    7. '```' → logprob: -19.125001907348633
    8. '   ' → logprob: -20.125001907348633
    9. '
' → logprob: -20.375001907348633
    10. '(node' → logprob: -20.750001907348633

Token 770: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004487208090722561
    2. '(' → logprob: -6.129487037658691
    3. '(dm' → logprob: -6.379487037658691
    4. ',' → logprob: -7.629487037658691
    5. ' (' → logprob: -10.129487037658691
    6. '(
' → logprob: -10.879487037658691
    7. 'dm' → logprob: -11.129487037658691
    8. '(d' → logprob: -11.379487037658691
    9. ')' → logprob: -11.504487037658691
    10. 'n' → logprob: -12.879487037658691

Token 771: ' diam' (ID: 14315)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.314363956451416
    2. 'diam' → logprob: -1.314363956451416
    3. ' diam' → logprob: -7.314363956451416
    4. ' n' → logprob: -8.689363479614258
    5. 'di' → logprob: -9.314363479614258
    6. 'dm' → logprob: -9.689363479614258
    7. 'c' → logprob: -9.939363479614258
    8. 'd' → logprob: -10.439363479614258
    9. '(n' → logprob: -10.939363479614258
    10. 'node' → logprob: -11.939363479614258

Token 772: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019546831026673317
    2. ',n' → logprob: -6.501954555511475
    3. '(n' → logprob: -7.876954555511475
    4. ' ,' → logprob: -9.751955032348633
    5. 'g' → logprob: -12.376955032348633
    6. 'n' → logprob: -12.751955032348633
    7. ',node' → logprob: -12.751955032348633
    8. ',g' → logprob: -14.126955032348633
    9. ',
' → logprob: -14.251955032348633
    10. ')' → logprob: -14.376955032348633

Token 773: ' g' (ID: 329)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05198192968964577
    2. 'node' → logprob: -3.8019819259643555
    3. ' n' → logprob: -4.0519819259643555
    4. 'c' → logprob: -4.9269819259643555
    5. 'g' → logprob: -6.1769819259643555
    6. ' node' → logprob: -7.5519819259643555
    7. 'ind' → logprob: -8.301981925964355
    8. 'dm' → logprob: -8.301981925964355
    9. ' ind' → logprob: -8.426981925964355
    10. '   ' → logprob: -9.051981925964355

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012769035529345274
    2. ',n' → logprob: -6.751276969909668
    3. ' ,' → logprob: -9.376276969909668
    4. '(n' → logprob: -11.001276969909668
    5. ',c' → logprob: -13.376276969909668
    6. 'n' → logprob: -14.126276969909668
    7. ',
' → logprob: -14.126276969909668
    8. ' n' → logprob: -14.626276969909668
    9. ',node' → logprob: -14.626276969909668
    10. ',d' → logprob: -15.251276969909668

Token 775: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.009492321871221066
    2. ' ind' → logprob: -5.25949239730835
    3. 'c' → logprob: -6.25949239730835
    4. 'node' → logprob: -6.50949239730835
    5. 'n' → logprob: -7.25949239730835
    6. '   ' → logprob: -9.384491920471191
    7. '[ind' → logprob: -11.009491920471191
    8. '    ' → logprob: -11.884491920471191
    9. ' n' → logprob: -12.134491920471191
    10. ' node' → logprob: -12.509491920471191

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003452291479334235
    2. ',n' → logprob: -5.878452301025391
    3. ',node' → logprob: -8.00345230102539
    4. ',c' → logprob: -8.87845230102539
    5. ' ,' → logprob: -9.12845230102539
    6. '(n' → logprob: -10.25345230102539
    7. '(node' → logprob: -11.37845230102539
    8. 'c' → logprob: -12.12845230102539
    9. 'n' → logprob: -13.00345230102539
    10. '           ' → logprob: -13.37845230102539

Token 777: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13394734263420105
    2. 'node' → logprob: -2.1339473724365234
    3. 'n' → logprob: -5.133947372436523
    4. ' node' → logprob: -7.258947372436523
    5. ' c' → logprob: -8.008947372436523
    6. '   ' → logprob: -10.883947372436523
    7. ' n' → logprob: -11.633947372436523
    8. 'ind' → logprob: -11.758947372436523
    9. '[node' → logprob: -12.508947372436523
    10. ' ' → logprob: -12.633947372436523

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002112886286340654
    2. ',node' → logprob: -8.750211715698242
    3. ',c' → logprob: -10.375211715698242
    4. ' ,' → logprob: -11.500211715698242
    5. ',val' → logprob: -11.500211715698242
    6. 'c' → logprob: -14.625211715698242
    7. ',
' → logprob: -14.750211715698242
    8. ',n' → logprob: -15.500211715698242
    9. '   ' → logprob: -16.125211715698242
    10. 'val' → logprob: -16.625211715698242

Token 779: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0011724866926670074
    2. ' node' → logprob: -6.7511725425720215
    3. 'c' → logprob: -13.251172065734863
    4. '   ' → logprob: -14.876172065734863
    5. '	node' → logprob: -16.25117301940918
    6. '(node' → logprob: -18.50117301940918
    7. 'nod' → logprob: -18.62617301940918
    8. '[node' → logprob: -18.87617301940918
    9. ' ' → logprob: -19.00117301940918
    10. '  ' → logprob: -19.12617301940918

Token 780: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1798233985900879
    2. ')
' → logprob: -1.804823398590088
    3. '   ' → logprob: -10.30482292175293
    4. ')
' → logprob: -11.05482292175293
    5. ')*' → logprob: -11.42982292175293
    6. ')+' → logprob: -12.30482292175293
    7. ' )' → logprob: -13.05482292175293
    8. ' )
' → logprob: -13.30482292175293
    9. '+' → logprob: -13.30482292175293
    10. '       ' → logprob: -13.67982292175293

Token 781: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003184363478794694
    2. ' if' → logprob: -6.7531843185424805
    3. '   ' → logprob: -6.8781843185424805
    4. 'if' → logprob: -7.5031843185424805
    5. '
' → logprob: -9.25318431854248
    6. 'print' → logprob: -9.37818431854248
    7. '<|end|>' → logprob: -9.37818431854248
    8. 'val' → logprob: -10.00318431854248
    9. ',' → logprob: -10.62818431854248
    10. '           ' → logprob: -10.87818431854248

Token 782: ' ' (ID: 220)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.7712960839271545
    2. 'val' → logprob: -1.1462960243225098
    3. '2' → logprob: -2.1462960243225098
    4. '(ind' → logprob: -3.3962960243225098
    5. ' ind' → logprob: -3.6462960243225098
    6. ' val' → logprob: -3.7712960243225098
    7. '(node' → logprob: -5.64629602432251
    8. 'node' → logprob: -5.89629602432251
    9. '(val' → logprob: -5.89629602432251
    10. 'max' → logprob: -6.14629602432251

Token 783: '2' (ID: 17)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.8692375421524048
    2. '(ind' → logprob: -1.2442375421524048
    3. '2' → logprob: -1.6192375421524048
    4. 'val' → logprob: -2.4942374229431152
    5. '(val' → logprob: -5.119237422943115
    6. ' ind' → logprob: -5.869237422943115
    7. '1' → logprob: -7.369237422943115
    8. 'max' → logprob: -7.744237422943115
    9. '(' → logprob: -7.869237422943115
    10. ' val' → logprob: -8.369237899780273

Token 784: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004839385801460594
    2. ' if' → logprob: -8.375483512878418
    3. '   ' → logprob: -9.000483512878418
    4. 'if' → logprob: -9.125483512878418
    5. ',' → logprob: -12.000483512878418
    6. 'val' → logprob: -12.750483512878418
    7. '           ' → logprob: -12.750483512878418
    8. 'print' → logprob: -12.875483512878418
    9. '	if' → logprob: -13.250483512878418
    10. '<|end|>' → logprob: -14.000483512878418

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019432762637734413
    2. ' if' → logprob: -7.001943111419678
    3. '   ' → logprob: -7.376943111419678
    4. 'if' → logprob: -7.876943111419678
    5. '           ' → logprob: -12.251943588256836
    6. 'print' → logprob: -12.501943588256836
    7. '	if' → logprob: -12.626943588256836
    8. ',' → logprob: -12.626943588256836
    9. '<|end|>' → logprob: -12.876943588256836
    10. ')' → logprob: -13.376943588256836

Token 786: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7047398686408997
    2. 'ans' → logprob: -0.7047398686408997
    3. '       ' → logprob: -4.829740047454834
    4. ' if' → logprob: -6.579740047454834
    5. '   ' → logprob: -6.704740047454834
    6. '           ' → logprob: -8.079739570617676
    7. 'print' → logprob: -8.329739570617676
    8. ' ans' → logprob: -8.829739570617676
    9. 'val' → logprob: -8.829739570617676
    10. '
' → logprob: -9.829739570617676

Token 787: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.006717505399137735
    2. ' val' → logprob: -5.006717681884766
    3. '	val' → logprob: -13.756717681884766
    4. '   ' → logprob: -13.881717681884766
    5. '(val' → logprob: -16.506717681884766
    6. '
' → logprob: -17.506717681884766
    7. ' ' → logprob: -18.131717681884766
    8. '[val' → logprob: -18.256717681884766
    9. 'ans' → logprob: -18.381717681884766
    10. '       ' → logprob: -18.506717681884766

Token 788: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10020849853754044
    2. ' >' → logprob: -2.3502085208892822
    3. '   ' → logprob: -14.475208282470703
    4. ')' → logprob: -15.475208282470703
    5. ' ' → logprob: -15.600208282470703
    6. ')>' → logprob: -15.600208282470703
    7. 'val' → logprob: -15.975208282470703
    8. ' val' → logprob: -15.975208282470703
    9. '[' → logprob: -16.225208282470703
    10. ' ' → logprob: -16.975208282470703

Token 789: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001337147317826748
    2. ' ans' → logprob: -6.626337051391602
    3. 'val' → logprob: -12.126337051391602
    4. '	ans' → logprob: -12.376337051391602
    5. 'res' → logprob: -14.626337051391602
    6. '   ' → logprob: -14.626337051391602
    7. '(ans' → logprob: -14.626337051391602
    8. '  ' → logprob: -16.7513370513916
    9. '_ans' → logprob: -16.7513370513916
    10. '=' → logprob: -17.3763370513916

Token 790: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.415362149477005
    2. ':' → logprob: -1.4153621196746826
    3. ':
' → logprob: -2.4153621196746826
    4. '       ' → logprob: -6.290362358093262
    5. 'ans' → logprob: -6.540362358093262
    6. '):
' → logprob: -6.915362358093262
    7. '<' → logprob: -7.040362358093262
    8. ' <' → logprob: -7.165362358093262
    9. ' ans' → logprob: -7.915362358093262
    10. ')' → logprob: -8.290362358093262

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029843976721167564
    2. 'ans' → logprob: -3.654844045639038
    3. ' ans' → logprob: -6.029843807220459
    4. '       ' → logprob: -7.779843807220459
    5. '	ans' → logprob: -7.904843807220459
    6. '   ' → logprob: -8.154844284057617
    7. '(ans' → logprob: -10.654844284057617
    8. '               ' → logprob: -11.029844284057617
    9. '	       ' → logprob: -12.529844284057617
    10. '
' → logprob: -12.529844284057617

Token 792: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0016832745168358088
    2. ' ans' → logprob: -7.251683235168457
    3. '           ' → logprob: -7.626683235168457
    4. '   ' → logprob: -7.751683235168457
    5. '	ans' → logprob: -10.376683235168457
    6. '       ' → logprob: -11.126683235168457
    7. 'val' → logprob: -12.126683235168457
    8. '               ' → logprob: -14.001683235168457
    9. '(ans' → logprob: -14.001683235168457
    10. 'break' → logprob: -14.001683235168457

Token 793: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021518170833588
    2. '=' → logprob: -2.350215196609497
    3. '   ' → logprob: -11.975214958190918
    4. '           ' → logprob: -13.475214958190918
    5. '    ' → logprob: -15.225214958190918
    6. ' ' → logprob: -15.475214958190918
    7. 'val' → logprob: -16.350215911865234
    8. '	' → logprob: -16.725215911865234
    9. '       ' → logprob: -16.725215911865234
    10. ',' → logprob: -16.850215911865234

Token 794: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0008052219054661691
    2. ' val' → logprob: -7.125805377960205
    3. '	val' → logprob: -14.750804901123047
    4. '           ' → logprob: -15.625804901123047
    5. '   ' → logprob: -16.250804901123047
    6. 'v' → logprob: -17.000804901123047
    7. 'va' → logprob: -17.500804901123047
    8. '       ' → logprob: -17.750804901123047
    9. '_val' → logprob: -18.125804901123047
    10. '(val' → logprob: -18.125804901123047

Token 795: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03805239871144295
    2. 'print' → logprob: -3.2880523204803467
    3. ' print' → logprob: -11.663052558898926
    4. '       ' → logprob: -13.538052558898926
    5. '```' → logprob: -14.663052558898926
    6. '           ' → logprob: -15.163052558898926
    7. '	print' → logprob: -15.413052558898926
    8. '
' → logprob: -17.78805160522461
    9. 'else' → logprob: -19.41305160522461
    10. '    
' → logprob: -19.41305160522461

Token 796: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12694185972213745
    2. 'print' → logprob: -2.1269419193267822
    3. ' print' → logprob: -11.751941680908203
    4. '       ' → logprob: -12.751941680908203
    5. '           ' → logprob: -12.876941680908203
    6. '```' → logprob: -15.001941680908203
    7. '	print' → logprob: -16.501941680908203
    8. 'else' → logprob: -18.001941680908203
    9. '
' → logprob: -18.251941680908203
    10. '  ' → logprob: -18.376941680908203

Token 797: ' minim' (ID: 23874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2343454360961914
    2. '   ' → logprob: -1.8593454360961914
    3. '       ' → logprob: -3.4843454360961914
    4. '           ' → logprob: -4.359345436096191
    5. ' print' → logprob: -4.984345436096191
    6. ' ans' → logprob: -6.609345436096191
    7. 'ans' → logprob: -6.984345436096191
    8. ')' → logprob: -9.234345436096191
    9. '```' → logprob: -9.234345436096191
    10. 'pass' → logprob: -9.484345436096191

Token 798: 'isation' (ID: 6993)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.8225696682929993
    2. 'al' → logprob: -1.3225696086883545
    3. 'iser' → logprob: -1.5725696086883545
    4. 'e' → logprob: -3.3225696086883545
    5. 'ale' → logprob: -3.9475696086883545
    6. 'a' → logprob: -4.697569847106934
    7. 'isez' → logprob: -6.072569847106934
    8. 'ise' → logprob: -6.072569847106934
    9. 'izer' → logprob: -6.322569847106934
    10. 'er' → logprob: -6.322569847106934

Token 799: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.313458651304245
    2. '   ' → logprob: -1.3134586811065674
    3. ' print' → logprob: -8.563458442687988
    4. '       ' → logprob: -13.063458442687988
    5. '
' → logprob: -13.313458442687988
    6. '```' → logprob: -13.688458442687988
    7. '           ' → logprob: -14.938458442687988
    8. '	print' → logprob: -15.313458442687988
    9. '    
' → logprob: -16.313459396362305
    10. 'else' → logprob: -16.438459396362305

Token 800: ' l' (ID: 305)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04303104802966118
    2. ' val' → logprob: -3.1680309772491455
    3. 'max' → logprob: -11.793030738830566
    4. 'min' → logprob: -12.168030738830566
    5. '[val' → logprob: -12.293030738830566
    6. 'ans' → logprob: -12.668030738830566
    7. '```' → logprob: -13.293030738830566
    8. 'print' → logprob: -13.668030738830566
    9. '(val' → logprob: -13.918030738830566
    10. ' ' → logprob: -14.043030738830566

Token 801: ''arr' (ID: 49695)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8117861747741699
    2. 'else' → logprob: -1.31178617477417
    3. '```' → logprob: -2.06178617477417
    4. 'print' → logprob: -3.81178617477417
    5. '   ' → logprob: -4.06178617477417
    6. 'pp' → logprob: -4.31178617477417
    7. 'plus' → logprob: -5.06178617477417
    8. 'à' → logprob: -5.18678617477417
    9. 'près' → logprob: -5.18678617477417
    10. 'ns' → logprob: -5.31178617477417

Token 802: 'ache' (ID: 2285)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.5370659828186035
    2. 'ivée' → logprob: -1.0370659828186035
    3. 'iv' → logprob: -3.6620659828186035
    4. 'ive' → logprob: -4.4120659828186035
    5. 'ondi' → logprob: -4.9120659828186035
    6. 'ivé' → logprob: -5.4120659828186035
    7. 'os' → logprob: -5.5370659828186035
    8. 'ière' → logprob: -6.7870659828186035
    9. 'ont' → logprob: -6.9120659828186035
    10. 'oire' → logprob: -7.5370659828186035

Token 803: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759691596031189
    2. 'print' → logprob: -0.8259691596031189
    3. ' print' → logprob: -10.700968742370605
    4. '       ' → logprob: -12.700968742370605
    5. '```' → logprob: -12.700968742370605
    6. '           ' → logprob: -14.200968742370605
    7. '	print' → logprob: -15.200968742370605
    8. 'else' → logprob: -16.325969696044922
    9. '
' → logprob: -16.575969696044922
    10. 'for' → logprob: -17.950969696044922

Token 804: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02977004647254944
    2. '   ' → logprob: -3.5297701358795166
    3. ' print' → logprob: -10.904769897460938
    4. '```' → logprob: -14.154769897460938
    5. '
' → logprob: -15.279769897460938
    6. '       ' → logprob: -16.029769897460938
    7. '           ' → logprob: -16.404769897460938
    8. '	print' → logprob: -16.779769897460938
    9. '            
' → logprob: -18.904769897460938
    10. '    
' → logprob: -18.904769897460938

Token 805: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -13.500003814697266
    3. '
' → logprob: -13.875003814697266
    4. ' print' → logprob: -13.875003814697266
    5. '```' → logprob: -18.250003814697266
    6. '    
' → logprob: -19.250003814697266
    7. '#print' → logprob: -21.250003814697266
    8. ')
' → logprob: -21.375003814697266
    9. '	print' → logprob: -21.750003814697266
    10. ')' → logprob: -22.250003814697266

Token 806: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.125
    3. ' (' → logprob: -16.875
    4. '(' → logprob: -17.375
    5. '(f' → logprob: -18.5
    6. '(answer' → logprob: -18.875
    7. '(abs' → logprob: -19.75
    8. '	ans' → logprob: -19.875
    9. '(an' → logprob: -20.25
    10. '('' → logprob: -20.375

Token 807: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.875001907348633
    4. '())' → logprob: -16.500001907348633
    5. '()' → logprob: -17.125001907348633
    6. '))' → logprob: -17.750001907348633
    7. ')#' → logprob: -19.375001907348633
    8. ')`' → logprob: -19.375001907348633
    9. ')}' → logprob: -19.625001907348633
    10. '),' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 805
Tokens correctement prédits (1ère position, stricte): 285
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 615
Précision stricte (1ère position): 35.40%
Précision adaptée (1ère position): 38.88%
Précision (top 10): 76.40%
================================================================================
