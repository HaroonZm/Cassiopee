================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
f=input().split(" ")
a,b,m=[int(f[i]) for i in range(3)]
coup=[]
As=[]
Bs=[]
f=input().split(" ")
for each in f:
    As.append(int(each))
f=input().split(" ")
for each in f:
    Bs.append(int(each))
for i in range(m):
    f=input().split(" ")
    vac=[]
    for each in f:
        vac.append(int(each))
    coup.append(vac)
price=min(As)+min(Bs)
for each in coup:
    price_c=As[each[0]-1]+Bs[each[1]-1]-each[2]
    if price_c<price:
        price=price_c
print(price)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'f' (ID: 69)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '().' (ID: 1454)
  → Token d'amorce (pas de prédiction)

Token 3: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20761242508888245
    2. '()' → logprob: -2.8326125144958496
    3. '().' → logprob: -3.3326125144958496
    4. '.split' → logprob: -3.8326125144958496
    5. '.strip' → logprob: -4.20761251449585
    6. '+' → logprob: -4.45761251449585
    7. ')' → logprob: -4.58261251449585
    8. '(' → logprob: -4.58261251449585
    9. 'split' → logprob: -5.20761251449585
    10. '.readline' → logprob: -5.33261251449585

Token 4: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03839247673749924
    2. '()' → logprob: -3.2883925437927246
    3. '('' → logprob: -8.663392066955566
    4. '"' → logprob: -10.163392066955566
    5. '("("' → logprob: -10.413392066955566
    6. '(
' → logprob: -10.538392066955566
    7. '(

' → logprob: -11.038392066955566
    8. ' (' → logprob: -11.163392066955566
    9. '((' → logprob: -11.288392066955566
    10. '```' → logprob: -12.163392066955566

Token 5: ' ")
' (ID: 31232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12302974611520767
    2. '")' → logprob: -2.2480297088623047
    3. '"' → logprob: -5.123029708862305
    4. ',' → logprob: -6.123029708862305
    5. ' ")' → logprob: -6.998029708862305
    6. ' )' → logprob: -7.873029708862305
    7. ' ' → logprob: -8.123029708862305
    8. '[' → logprob: -8.998029708862305
    9. '')' → logprob: -9.248029708862305
    10. '(' → logprob: -9.748029708862305

Token 6: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014922104775905609
    2. '=' → logprob: -5.639922142028809
    3. 'if' → logprob: -6.014922142028809
    4. 'for' → logprob: -6.139922142028809
    5. 'a' → logprob: -6.264922142028809
    6. 'x' → logprob: -6.764922142028809
    7. 'n' → logprob: -7.014922142028809
    8. '.' → logprob: -7.139922142028809
    9. 'f' → logprob: -8.014922142028809
    10. 'i' → logprob: -8.514922142028809

Token 7: ',b' (ID: 17568)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011735646054148674
    2. '=' → logprob: -5.136735439300537
    3. ' =' → logprob: -6.511735439300537
    4. '[p' → logprob: -7.261735439300537
    5. 'pp' → logprob: -7.386735439300537
    6. '[int' → logprob: -7.511735439300537
    7. '.' → logprob: -7.636735439300537
    8. 'p' → logprob: -8.136735916137695
    9. 's' → logprob: -8.636735916137695
    10. 'm' → logprob: -8.636735916137695

Token 8: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016580771654844284
    2. ' =' → logprob: -4.141580581665039
    3. '=input' → logprob: -8.266580581665039
    4. '=f' → logprob: -8.516580581665039
    5. '=a' → logprob: -10.891580581665039
    6. ',' → logprob: -10.891580581665039
    7. '=int' → logprob: -11.391580581665039
    8. '[' → logprob: -11.766580581665039
    9. '=

' → logprob: -11.891580581665039
    10. '=user' → logprob: -12.391580581665039

Token 9: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07018617540597916
    2. ' =' → logprob: -2.695186138153076
    3. ',' → logprob: -8.945186614990234
    4. '=

' → logprob: -10.570186614990234
    5. '=[' → logprob: -10.945186614990234
    6. '=
' → logprob: -10.945186614990234
    7. '=input' → logprob: -11.445186614990234
    8. '[' → logprob: -11.695186614990234
    9. ' =
' → logprob: -11.945186614990234
    10. ' =[' → logprob: -11.945186614990234

Token 10: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00019018957391381264
    2. '*' → logprob: -9.375189781188965
    3. '0' → logprob: -9.875189781188965
    4. ' int' → logprob: -11.000189781188965
    5. 'map' → logprob: -11.000189781188965
    6. '[int' → logprob: -12.125189781188965
    7. '(int' → logprob: -12.500189781188965
    8. 'float' → logprob: -12.500189781188965
    9. ']int' → logprob: -12.750189781188965
    10. '1' → logprob: -13.000189781188965

Token 11: '(f' (ID: 1526)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2979419231414795
    2. '(i' → logprob: -1.7979419231414795
    3. '(f' → logprob: -2.4229419231414795
    4. '(' → logprob: -6.797942161560059
    5. '(s' → logprob: -7.672942161560059
    6. '(a' → logprob: -7.672942161560059
    7. '(n' → logprob: -8.172942161560059
    8. ']' → logprob: -8.547942161560059
    9. '(_)' → logprob: -8.922942161560059
    10. '(c' → logprob: -9.047942161560059

Token 12: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020712153986096382
    2. '[i' → logprob: -3.89571213722229
    3. '[x' → logprob: -8.770711898803711
    4. '[a' → logprob: -12.270711898803711
    5. '(' → logprob: -13.020711898803711
    6. '0' → logprob: -13.520711898803711
    7. ' [' → logprob: -13.520711898803711
    8. '(i' → logprob: -13.770711898803711
    9. ')' → logprob: -14.520711898803711
    10. '()[' → logprob: -14.520711898803711

Token 13: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011861803941428661
    2. '])]' → logprob: -6.751186370849609
    3. ''])' → logprob: -12.50118637084961
    4. ' ])' → logprob: -12.75118637084961
    5. '])]
' → logprob: -13.00118637084961
    6. ']' → logprob: -13.37618637084961
    7. ']),' → logprob: -13.75118637084961
    8. ')])' → logprob: -13.87618637084961
    9. ')]' → logprob: -14.25118637084961
    10. '])+' → logprob: -14.25118637084961

Token 14: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13000181317329407
    2. ' for' → logprob: -2.8800017833709717
    3. ']' → logprob: -3.0050017833709717
    4. 'i' → logprob: -4.380002021789551
    5. '(i' → logprob: -6.505002021789551
    6. '[i' → logprob: -7.755002021789551
    7. ' ' → logprob: -7.755002021789551
    8. 'f' → logprob: -7.880002021789551
    9. '  ' → logprob: -8.25500202178955
    10. ')' → logprob: -8.25500202178955

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2953195571899414
    2. 'i' → logprob: -1.4203195571899414
    3. ' range' → logprob: -4.420319557189941
    4. 'range' → logprob: -6.420319557189941
    5. ' in' → logprob: -8.045319557189941
    6. ' ' → logprob: -9.545319557189941
    7. '  ' → logprob: -11.170319557189941
    8. 'in' → logprob: -13.045319557189941
    9. '	i' → logprob: -13.670319557189941
    10. ' f' → logprob: -15.545319557189941

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34855732321739197
    2. 'in' → logprob: -1.2235573530197144
    3. ' ' → logprob: -9.473557472229004
    4. 'range' → logprob: -10.973557472229004
    5. 'i' → logprob: -12.348557472229004
    6. 'import' → logprob: -12.598557472229004
    7. '	in' → logprob: -13.223557472229004
    8. ' i' → logprob: -13.598557472229004
    9. '0' → logprob: -13.598557472229004
    10. '  ' → logprob: -14.098557472229004

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408682107925415
    2. ' range' → logprob: -0.9740868210792542
    3. '[' → logprob: -12.34908676147461
    4. '(' → logprob: -12.84908676147461
    5. ' ' → logprob: -13.59908676147461
    6. '(range' → logprob: -13.72408676147461
    7. '	range' → logprob: -15.34908676147461
    8. '0' → logprob: -16.72408676147461
    9. 'Range' → logprob: -17.47408676147461
    10. '{' → logprob: -17.59908676147461

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002483626827597618
    2. '(len' → logprob: -6.00248384475708
    3. ' (' → logprob: -12.502483367919922
    4. '2' → logprob: -13.502483367919922
    5. '(
' → logprob: -14.002483367919922
    6. 'len' → logprob: -14.627483367919922
    7. '3' → logprob: -14.877483367919922
    8. ')' → logprob: -15.252483367919922
    9. '(a' → logprob: -15.377483367919922
    10. '(n' → logprob: -15.752483367919922

Token 19: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022140119690448046
    2. ' ' → logprob: -6.127213954925537
    3. 'len' → logprob: -11.127214431762695
    4. '3' → logprob: -11.877214431762695
    5. '1' → logprob: -13.002214431762695
    6. ' len' → logprob: -13.127214431762695
    7. '4' → logprob: -13.627214431762695
    8. '0' → logprob: -14.877214431762695
    9. '   ' → logprob: -15.002214431762695
    10. '  ' → logprob: -15.377214431762695

Token 20: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008286304771900177
    2. ')' → logprob: -5.008286476135254
    3. ')])' → logprob: -6.508286476135254
    4. ' )' → logprob: -10.508286476135254
    5. '):' → logprob: -11.008286476135254
    6. ')],' → logprob: -11.758286476135254
    7. '),' → logprob: -12.133286476135254
    8. '-' → logprob: -12.633286476135254
    9. '+' → logprob: -12.758286476135254
    10. ')][' → logprob: -13.008286476135254

Token 21: 'c' (ID: 66)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4156971573829651
    2. ',' → logprob: -2.6656970977783203
    3. '\n' → logprob: -2.7906970977783203
    4. '[' → logprob: -3.2906970977783203
    5. '#' → logprob: -3.9156970977783203
    6. 'n' → logprob: -4.04069709777832
    7. 'for' → logprob: -4.16569709777832
    8. '
' → logprob: -4.16569709777832
    9. 'c' → logprob: -4.29069709777832
    10. '' → logprob: -4.66569709777832

Token 22: 'oup' (ID: 9999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4235663115978241
    2. ' =' → logprob: -1.1735663414001465
    3. ',' → logprob: -4.2985663414001465
    4. '=input' → logprob: -5.0485663414001465
    5. '=[]' → logprob: -5.2985663414001465
    6. '=[' → logprob: -5.2985663414001465
    7. '=int' → logprob: -6.2985663414001465
    8. '[' → logprob: -7.0485663414001465
    9. ',c' → logprob: -7.6735663414001465
    10. ',f' → logprob: -8.173565864562988

Token 23: '=[]
' (ID: 63466)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.20381468534469604
    2. 'on' → logprob: -1.9538147449493408
    3. 'n' → logprob: -3.578814744949341
    4. 'o' → logprob: -5.453814506530762
    5. 'ns' → logprob: -5.703814506530762
    6. 's' → logprob: -6.078814506530762
    7. '[' → logprob: -6.453814506530762
    8. '_' → logprob: -7.578814506530762
    9. 'onse' → logprob: -8.203814506530762
    10. '=' → logprob: -8.328814506530762

Token 24: 'As' (ID: 2305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04343735799193382
    2. ' for' → logprob: -3.1684372425079346
    3. '\n' → logprob: -8.293437004089355
    4. '
' → logprob: -9.793437004089355
    5. ' ' → logprob: -10.293437004089355
    6. '[' → logprob: -10.668437004089355
    7. '	for' → logprob: -10.793437004089355
    8. '<|end|>' → logprob: -11.418437004089355
    9. '\' → logprob: -11.543437004089355
    10. '' → logprob: -11.543437004089355

Token 25: '=[]
' (ID: 63466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022546058520674706
    2. '=' → logprob: -4.897546291351318
    3. 'p' → logprob: -4.897546291351318
    4. ' =' → logprob: -5.772546291351318
    5. 'ss' → logprob: -6.147546291351318
    6. ' s' → logprob: -7.647546291351318
    7. 'sert' → logprob: -8.14754581451416
    8. 'pp' → logprob: -8.39754581451416
    9. 'sign' → logprob: -8.77254581451416
    10. 'S' → logprob: -8.77254581451416

Token 26: 'Bs' (ID: 63814)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002639582962729037
    2. ' for' → logprob: -8.250264167785645
    3. '=' → logprob: -13.750264167785645
    4. 'n' → logprob: -14.875264167785645
    5. 'f' → logprob: -15.000264167785645
    6. '	for' → logprob: -15.750264167785645
    7. 'c' → logprob: -15.875264167785645
    8. 'r' → logprob: -15.875264167785645
    9. '[' → logprob: -16.125263214111328
    10. 'while' → logprob: -16.125263214111328

Token 27: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38946136832237244
    2. '=[]' → logprob: -1.1394613981246948
    3. '=[' → logprob: -6.264461517333984
    4. ' =' → logprob: -7.639461517333984
    5. '={}' → logprob: -9.014461517333984
    6. '=[]
' → logprob: -10.889461517333984
    7. '[:]' → logprob: -11.639461517333984
    8. '=[]
' → logprob: -11.639461517333984
    9. '=['' → logprob: -12.014461517333984
    10. '[]' → logprob: -12.139461517333984

Token 28: 'f' (ID: 69)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0055134654976427555
    2. ' for' → logprob: -5.505513668060303
    3. '=' → logprob: -6.630513668060303
    4. '<|end|>' → logprob: -9.505513191223145
    5. ' ' → logprob: -11.380513191223145
    6. ' =' → logprob: -11.380513191223145
    7. 'n' → logprob: -12.380513191223145
    8. '[' → logprob: -12.755513191223145
    9. 'f' → logprob: -13.130513191223145
    10. ')' → logprob: -13.630513191223145

Token 29: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35540226101875305
    2. '.' → logprob: -1.9804022312164307
    3. 'or' → logprob: -2.7304022312164307
    4. ' =' → logprob: -3.1054022312164307
    5. '[' → logprob: -3.9804022312164307
    6. '=input' → logprob: -4.48040246963501
    7. ')' → logprob: -5.35540246963501
    8. '=[]' → logprob: -5.48040246963501
    9. '<|end|>' → logprob: -5.73040246963501
    10. 'for' → logprob: -6.48040246963501

Token 30: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02473626285791397
    2. '().' → logprob: -4.274736404418945
    3. '(' → logprob: -4.774736404418945
    4. '.' → logprob: -7.649736404418945
    5. '[' → logprob: -7.649736404418945
    6. '()[' → logprob: -8.024736404418945
    7. '('' → logprob: -8.649736404418945
    8. '[]' → logprob: -9.649736404418945
    9. ')' → logprob: -9.899736404418945
    10. '<|end|>' → logprob: -10.024736404418945

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008656530641019344
    2. 'strip' → logprob: -4.7586565017700195
    3. 'rstrip' → logprob: -10.25865650177002
    4. ' split' → logprob: -13.00865650177002
    5. 'startswith' → logprob: -13.88365650177002
    6. 'isdigit' → logprob: -14.13365650177002
    7. 'lower' → logprob: -14.25865650177002
    8. 'read' → logprob: -14.38365650177002
    9. 'plit' → logprob: -14.63365650177002
    10. 'spl' → logprob: -14.88365650177002

Token 32: '("' (ID: 568)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.03426068276166916
    2. '("' → logprob: -3.6592607498168945
    3. '()' → logprob: -5.4092607498168945
    4. '(' → logprob: -6.4092607498168945
    5. '('' → logprob: -6.5342607498168945
    6. '"' → logprob: -8.659260749816895
    7. '("")' → logprob: -9.159260749816895
    8. '("="' → logprob: -10.034260749816895
    9. '("\' → logprob: -11.659260749816895
    10. '```' → logprob: -12.409260749816895

Token 33: ' ")
' (ID: 31232)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18526114523410797
    2. '")' → logprob: -2.0602612495422363
    3. '("' → logprob: -3.3102612495422363
    4. ')' → logprob: -5.435261249542236
    5. '(' → logprob: -7.935261249542236
    6. ' ")' → logprob: -8.810260772705078
    7. ''' → logprob: -9.560260772705078
    8. '()' → logprob: -9.560260772705078
    9. 'a' → logprob: -10.185260772705078
    10. ' "' → logprob: -10.310260772705078

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03504253923892975
    2. 'c' → logprob: -3.7850425243377686
    3. ' for' → logprob: -5.285042762756348
    4. 'a' → logprob: -6.160042762756348
    5. 'f' → logprob: -6.535042762756348
    6. 'm' → logprob: -6.910042762756348
    7. 'd' → logprob: -7.535042762756348
    8. 'C' → logprob: -7.785042762756348
    9. 'b' → logprob: -8.285042762756348
    10. 'x' → logprob: -8.785042762756348

Token 35: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03172702714800835
    2. 'i' → logprob: -4.281726837158203
    3. ' _' → logprob: -4.406726837158203
    4. ' ' → logprob: -5.656726837158203
    5. '_' → logprob: -6.531726837158203
    6. ' range' → logprob: -9.031726837158203
    7. '_i' → logprob: -10.406726837158203
    8. '  ' → logprob: -10.531726837158203
    9. ' ' → logprob: -10.531726837158203
    10. ' j' → logprob: -10.906726837158203

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01028058398514986
    2. 'in' → logprob: -4.885280609130859
    3. ' ' → logprob: -6.510280609130859
    4. '  ' → logprob: -7.385280609130859
    5. ' i' → logprob: -8.76028060913086
    6. '_' → logprob: -9.88528060913086
    7. 's' → logprob: -10.13528060913086
    8. 'c' → logprob: -10.26028060913086
    9. '	in' → logprob: -10.63528060913086
    10. ' _' → logprob: -10.88528060913086

Token 37: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6933866143226624
    2. ' f' → logprob: -0.6933866143226624
    3. ' range' → logprob: -8.818387031555176
    4. ' ' → logprob: -10.193387031555176
    5. 'range' → logprob: -10.193387031555176
    6. '  ' → logprob: -12.318387031555176
    7. 'c' → logprob: -12.568387031555176
    8. '   ' → logprob: -13.318387031555176
    9. '    ' → logprob: -13.568387031555176
    10. '	f' → logprob: -14.005887031555176

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003062646137550473
    2. ' :' → logprob: -8.125306129455566
    3. ':c' → logprob: -12.875306129455566
    4. ':
' → logprob: -13.125306129455566
    5. ':**' → logprob: -13.625306129455566
    6. '[:]' → logprob: -14.000306129455566
    7. ':def' → logprob: -14.500306129455566
    8. ':int' → logprob: -14.750306129455566
    9. '[' → logprob: -15.125306129455566
    10. ':list' → logprob: -15.375306129455566

Token 39: '   ' (ID: 271)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.8354870676994324
    2. ' a' → logprob: -0.9604870676994324
    3. 'c' → logprob: -2.835487127304077
    4. '   ' → logprob: -3.460487127304077
    5. ' As' → logprob: -3.710487127304077
    6. 'a' → logprob: -3.710487127304077
    7. ' c' → logprob: -4.835486888885498
    8. ' Bs' → logprob: -4.960486888885498
    9. ' if' → logprob: -5.335486888885498
    10. ' Coup' → logprob: -5.460486888885498

Token 40: ' As' (ID: 1877)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.40656110644340515
    2. 'a' → logprob: -2.1565611362457275
    3. 'As' (adapté à ' As') → logprob: -2.5315611362457275
    4. ' As' → logprob: -2.6565611362457275
    5. 'if' → logprob: -4.031560897827148
    6. ' coup' → logprob: -4.281560897827148
    7. ' a' → logprob: -4.781560897827148
    8. ' if' → logprob: -4.781560897827148
    9. 'C' → logprob: -4.906560897827148
    10. 'A' → logprob: -5.906560897827148

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043710620957426727
    2. '.' → logprob: -7.750437259674072
    3. '.ap' → logprob: -12.625436782836914
    4. '.extend' → logprob: -13.500436782836914
    5. '.app' → logprob: -14.000436782836914
    6. 'append' → logprob: -14.875436782836914
    7. ' .' → logprob: -15.125436782836914
    8. '.add' → logprob: -15.625436782836914
    9. '.Append' → logprob: -16.000436782836914
    10. '.a' → logprob: -18.000436782836914

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014170682057738304
    2. 'int' → logprob: -4.2641706466674805
    3. '(' → logprob: -12.63917064666748
    4. 'each' → logprob: -13.26417064666748
    5. '(each' → logprob: -14.13917064666748
    6. ' int' → logprob: -14.38917064666748
    7. '[int' → logprob: -14.38917064666748
    8. '<int' → logprob: -15.88917064666748
    9. '(float' → logprob: -16.264171600341797
    10. '(in' → logprob: -17.014171600341797

Token 43: '(each' (ID: 152103)
  Prédit: '(each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(each' → logprob: -8.180258191714529e-06
    2. 'each' → logprob: -11.750008583068848
    3. '(e' → logprob: -16.37500762939453
    4. '(' → logprob: -16.62500762939453
    5. 'Each' → logprob: -18.75000762939453
    6. ' each' → logprob: -19.12500762939453
    7. ')' → logprob: -20.87500762939453
    8. '.each' → logprob: -21.12500762939453
    9. '(one' → logprob: -21.12500762939453
    10. ' (' → logprob: -21.37500762939453

Token 44: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003189597511664033
    2. ')' → logprob: -5.753189563751221
    3. '))
' → logprob: -12.753190040588379
    4. ')))' → logprob: -13.128190040588379
    5. '()))' → logprob: -13.253190040588379
    6. ' ))' → logprob: -13.253190040588379
    7. '*))' → logprob: -14.003190040588379
    8. '+' → logprob: -14.378190040588379
    9. '*' → logprob: -14.378190040588379
    10. ''))' → logprob: -15.128190040588379

Token 45: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0026206085458397865
    2. '
' → logprob: -6.502620697021484
    3. ' f' → logprob: -7.252620697021484
    4. ' 
' → logprob: -8.252620697021484
    5. '<|end|>' → logprob: -9.627620697021484
    6. '```' → logprob: -11.127620697021484
    7. '  
' → logprob: -11.252620697021484
    8. 's' → logprob: -11.252620697021484
    9. 'for' → logprob: -11.877620697021484
    10. '\n' → logprob: -12.002620697021484

Token 46: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5633432269096375
    2. '.' → logprob: -1.5633432865142822
    3. '=input' → logprob: -2.5633432865142822
    4. ' =' → logprob: -3.0633432865142822
    5. '=[]' → logprob: -3.4383432865142822
    6. '.split' → logprob: -3.5633432865142822
    7. 'input' → logprob: -4.313343048095703
    8. '()' → logprob: -5.188343048095703
    9. '[]' → logprob: -5.438343048095703
    10. '[' → logprob: -6.063343048095703

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007118358626030385
    2. '()' → logprob: -7.250711917877197
    3. ' ().' → logprob: -13.375711441040039
    4. '(' → logprob: -16.50071144104004
    5. '()).' → logprob: -16.62571144104004
    6. ' ()' → logprob: -17.87571144104004
    7. '()].' → logprob: -17.87571144104004
    8. '().__' → logprob: -18.00071144104004
    9. '()<' → logprob: -18.25071144104004
    10. '().'' → logprob: -18.25071144104004

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.796184723294573e-06
    2. ' split' → logprob: -13.125005722045898
    3. 'strip' → logprob: -13.125005722045898
    4. '(split' → logprob: -14.250005722045898
    5. 'plit' → logprob: -14.500005722045898
    6. 'spl' → logprob: -15.125005722045898
    7. 'rstrip' → logprob: -16.5000057220459
    8. '.split' → logprob: -17.2500057220459
    9. '_split' → logprob: -17.3750057220459
    10. '()' → logprob: -17.3750057220459

Token 49: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.37622562050819397
    2. '("("' → logprob: -1.2512255907058716
    3. '()' → logprob: -4.001225471496582
    4. '(' → logprob: -5.001225471496582
    5. '"' → logprob: -6.751225471496582
    6. '_("' → logprob: -8.126225471496582
    7. '('' → logprob: -8.251225471496582
    8. '("")' → logprob: -8.376225471496582
    9. '("_' → logprob: -9.251225471496582
    10. '<|end|>' → logprob: -9.501225471496582

Token 50: ' ")
' (ID: 31232)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6988478899002075
    2. ' ")' → logprob: -0.8238478899002075
    3. '"' → logprob: -3.573847770690918
    4. ')' → logprob: -3.573847770690918
    5. '(' → logprob: -5.573847770690918
    6. ' "' → logprob: -6.323847770690918
    7. '("' → logprob: -6.948847770690918
    8. ' ")
' → logprob: -7.073847770690918
    9. ' ' → logprob: -8.198847770690918
    10. '()' → logprob: -9.198847770690918

Token 51: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -16.75
    3. 'For' → logprob: -20.75
    4. '	for' → logprob: -22.625
    5. '<|end|>' → logprob: -23.0
    6. '```' → logprob: -23.5
    7. '.for' → logprob: -25.375
    8. '#' → logprob: -26.625
    9. 'from' → logprob: -26.625
    10. '_for' → logprob: -26.75

Token 52: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.08900654315948486
    2. 'each' → logprob: -2.4640064239501953
    3. '(each' → logprob: -9.714006423950195
    4. ' ' → logprob: -12.464006423950195
    5. 'Each' → logprob: -13.589006423950195
    6. ' cada' → logprob: -15.089006423950195
    7. ' ' → logprob: -15.214006423950195
    8. ' every' → logprob: -15.714006423950195
    9. '_each' → logprob: -15.714006423950195
    10. '  ' → logprob: -16.214006423950195

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427338570356369
    2. 'in' → logprob: -2.0177338123321533
    3. ':' → logprob: -11.017733573913574
    4. ' ' → logprob: -11.017733573913574
    5. '  ' → logprob: -11.642733573913574
    6. '   ' → logprob: -12.142733573913574
    7. 'In' → logprob: -12.767733573913574
    8. 'Bs' → logprob: -13.642733573913574
    9. '	in' → logprob: -13.767733573913574
    10. 'B' → logprob: -13.767733573913574

Token 54: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0031777136027812958
    2. ' f' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.128177642822266
    4. '   ' → logprob: -18.753177642822266
    5. '	f' → logprob: -19.503177642822266
    6. '  ' → logprob: -20.003177642822266
    7. 'Bs' → logprob: -20.503177642822266
    8. '    ' → logprob: -20.753177642822266
    9. '(f' → logprob: -20.878177642822266
    10. '$f' → logprob: -20.878177642822266

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029901133850216866
    2. ':
' → logprob: -3.5299010276794434
    3. '   ' → logprob: -9.654901504516602
    4. ':
' → logprob: -10.404901504516602
    5. 'Bs' → logprob: -10.779901504516602
    6. 's' → logprob: -11.279901504516602
    7. ':B' → logprob: -11.654901504516602
    8. ':

' → logprob: -12.029901504516602
    9. ' :' → logprob: -12.779901504516602
    10. 'As' → logprob: -14.029901504516602

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006424267310649157
    2. 'Bs' → logprob: -5.256424427032471
    3. ' Bs' → logprob: -6.756424427032471
    4. '  ' → logprob: -11.631423950195312
    5. '   ' → logprob: -11.881423950195312
    6. '	B' → logprob: -12.631423950195312
    7. 'B' → logprob: -12.881423950195312
    8. '    ' → logprob: -13.381423950195312
    9. ' ' → logprob: -13.756423950195312
    10. '       ' → logprob: -14.131423950195312

Token 57: ' Bs' (ID: 117553)
  Prédit: 'Bs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bs' (adapté à ' Bs') → logprob: -0.011052182875573635
    2. ' Bs' → logprob: -4.511052131652832
    3. '   ' → logprob: -12.761052131652832
    4. ' ' → logprob: -13.761052131652832
    5. '  ' → logprob: -15.386052131652832
    6. 'B' → logprob: -16.01105308532715
    7. 'bs' → logprob: -17.38605308532715
    8. 'Cs' → logprob: -17.51105308532715
    9. '_B' → logprob: -18.38605308532715
    10. '_bs' → logprob: -18.63605308532715

Token 58: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006566775846295059
    2. '.' → logprob: -7.375656604766846
    3. 'append' → logprob: -10.625657081604004
    4. ' .' → logprob: -12.500657081604004
    5. '.app' → logprob: -13.875657081604004
    6. '.extend' → logprob: -14.625657081604004
    7. 'app' → logprob: -15.375657081604004
    8. '.Append' → logprob: -15.625657081604004
    9. 'appen' → logprob: -17.000656127929688
    10. '>.' → logprob: -17.250656127929688

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.0629870858974755e-05
    2. 'int' → logprob: -9.75006103515625
    3. ' (' → logprob: -13.50006103515625
    4. '(' → logprob: -14.50006103515625
    5. '[int' → logprob: -15.75006103515625
    6. ' int' → logprob: -16.50006103515625
    7. '<int' → logprob: -16.62506103515625
    8. '=int' → logprob: -16.75006103515625
    9. '   ' → logprob: -17.87506103515625
    10. '((' → logprob: -18.12506103515625

Token 60: '(each' (ID: 152103)
  Prédit: '(each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(each' → logprob: -6.630610641877865e-06
    2. 'each' → logprob: -12.125006675720215
    3. '(' → logprob: -14.250006675720215
    4. ')' → logprob: -14.625006675720215
    5. '(e' → logprob: -16.6250057220459
    6. 'Each' → logprob: -18.0000057220459
    7. '(one' → logprob: -18.1250057220459
    8. ' (' → logprob: -18.3750057220459
    9. ')(' → logprob: -18.6250057220459
    10. '(equal' → logprob: -18.8750057220459

Token 61: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859725013375282
    2. ')' → logprob: -3.0485973358154297
    3. ')))' → logprob: -12.04859733581543
    4. ' ))' → logprob: -13.42359733581543
    5. '"))' → logprob: -13.92359733581543
    6. ''))' → logprob: -14.17359733581543
    7. '))
' → logprob: -14.92359733581543
    8. '()))' → logprob: -15.67359733581543
    9. '),' → logprob: -16.42359733581543
    10. ' )' → logprob: -16.79859733581543

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007559045334346592
    2. ' for' → logprob: -7.625755786895752
    3. 'f' → logprob: -9.12575626373291
    4. 'n' → logprob: -9.62575626373291
    5. '\n' → logprob: -10.50075626373291
    6. 'm' → logprob: -11.00075626373291
    7. 'c' → logprob: -11.25075626373291
    8. '\' → logprob: -11.75075626373291
    9. '```' → logprob: -12.12575626373291
    10. 's' → logprob: -12.62575626373291

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01865752413868904
    2. ' _' → logprob: -5.018657684326172
    3. ' ' → logprob: -5.143657684326172
    4. ' range' → logprob: -5.643657684326172
    5. '_' → logprob: -6.268657684326172
    6. 'i' → logprob: -8.018657684326172
    7. ' ' → logprob: -10.018657684326172
    8. ' m' → logprob: -10.143657684326172
    9. 'range' → logprob: -10.143657684326172
    10. ' each' → logprob: -10.268657684326172

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47698667645454407
    2. 'in' → logprob: -0.9769866466522217
    3. ' ' → logprob: -6.851986885070801
    4. 'n' → logprob: -6.976986885070801
    5. 'range' → logprob: -7.476986885070801
    6. '  ' → logprob: -9.7269868850708
    7. '	in' → logprob: -9.9769868850708
    8. 's' → logprob: -9.9769868850708
    9. ',' → logprob: -10.6019868850708
    10. '_' → logprob: -10.6019868850708

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005535095697268844
    2. ' range' → logprob: -7.500553607940674
    3. '(range' → logprob: -15.250553131103516
    4. 'Range' → logprob: -17.000553131103516
    5. 'm' → logprob: -17.125553131103516
    6. ' ' → logprob: -17.375553131103516
    7. '   ' → logprob: -18.375553131103516
    8. '	range' → logprob: -18.375553131103516
    9. 'Bs' → logprob: -18.625553131103516
    10. '  ' → logprob: -18.750553131103516

Token 66: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03194007650017738
    2. '(' → logprob: -3.53193998336792
    3. '(a' → logprob: -6.15693998336792
    4. '(b' → logprob: -10.156940460205078
    5. ' (' → logprob: -10.656940460205078
    6. '(n' → logprob: -13.906940460205078
    7. '(
' → logprob: -14.031940460205078
    8. '(len' → logprob: -14.031940460205078
    9. '(int' → logprob: -14.406940460205078
    10. '(s' → logprob: -14.406940460205078

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004675642121583223
    2. ')' → logprob: -5.50467586517334
    3. ' ):' → logprob: -8.12967586517334
    4. ':' → logprob: -8.37967586517334
    5. '+' → logprob: -10.25467586517334
    6. '):
' → logprob: -10.87967586517334
    7. ',' → logprob: -11.87967586517334
    8. ' ' → logprob: -12.87967586517334
    9. '():' → logprob: -13.00467586517334
    10. ' )' → logprob: -13.75467586517334

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5201054811477661
    2. ' f' → logprob: -1.0201054811477661
    3. 'f' → logprob: -3.3951053619384766
    4. ' ' → logprob: -5.895105361938477
    5. 'c' → logprob: -6.770105361938477
    6. ' s' → logprob: -6.770105361938477
    7. 's' → logprob: -6.895105361938477
    8. ' c' → logprob: -7.020105361938477
    9. '<|end|>' → logprob: -7.270105361938477
    10. '    
' → logprob: -7.395105361938477

Token 69: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.4766068458557129
    2. 'c' → logprob: -1.226606845855713
    3. ' f' → logprob: -2.851606845855713
    4. ' coup' → logprob: -4.601606845855713
    5. 'x' → logprob: -5.101606845855713
    6. 's' → logprob: -5.351606845855713
    7. 'cou' → logprob: -5.851606845855713
    8. ' c' → logprob: -6.976606845855713
    9. 'a' → logprob: -7.726606845855713
    10. '   ' → logprob: -7.851606845855713

Token 70: '=input' (ID: 87911)
  Prédit: '=input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.07453034818172455
    2. '=' → logprob: -2.6995303630828857
    3. ' =' → logprob: -5.449530124664307
    4. 'input' → logprob: -8.449530601501465
    5. '_=' → logprob: -10.449530601501465
    6. '=i' → logprob: -11.699530601501465
    7. '=int' → logprob: -12.074530601501465
    8. ',input' → logprob: -12.199530601501465
    9. '=in' → logprob: -12.574530601501465
    10. '=f' → logprob: -12.574530601501465

Token 71: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00034023032640106976
    2. '()' → logprob: -8.000340461730957
    3. ' ().' → logprob: -12.375340461730957
    4. '("").' → logprob: -15.375340461730957
    5. '()
' → logprob: -15.500340461730957
    6. '(' → logprob: -17.12533950805664
    7. '.' → logprob: -17.37533950805664
    8. ' ()' → logprob: -17.50033950805664
    9. '()<' → logprob: -18.00033950805664
    10. '()>' → logprob: -18.25033950805664

Token 72: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7133641196996905e-05
    2. 'strip' → logprob: -10.62502670288086
    3. 'sp' → logprob: -14.00002670288086
    4. 'spl' → logprob: -14.25002670288086
    5. ' split' → logprob: -14.37502670288086
    6. 'rstrip' → logprob: -15.00002670288086
    7. 'plit' → logprob: -15.50002670288086
    8. '(split' → logprob: -16.37502670288086
    9. 's' → logprob: -17.50002670288086
    10. '.split' → logprob: -18.37502670288086

Token 73: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.009454065933823586
    2. '("("' → logprob: -5.009454250335693
    3. '()' → logprob: -6.009454250335693
    4. '(' → logprob: -8.634453773498535
    5. '("")' → logprob: -10.009453773498535
    6. '('' → logprob: -10.259453773498535
    7. '"' → logprob: -11.384453773498535
    8. '```' → logprob: -13.259453773498535
    9. '("_' → logprob: -13.509453773498535
    10. '("\' → logprob: -13.634453773498535

Token 74: ' ")
' (ID: 31232)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5138868689537048
    2. '("' → logprob: -1.1388869285583496
    3. ')' → logprob: -3.2638869285583496
    4. '(' → logprob: -4.13888692855835
    5. '())' → logprob: -4.51388692855835
    6. '"' → logprob: -4.76388692855835
    7. '")' → logprob: -5.01388692855835
    8. ' )' → logprob: -7.63888692855835
    9. '('' → logprob: -7.76388692855835
    10. ' ")' → logprob: -8.513886451721191

Token 75: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19453105330467224
    2. 'a' → logprob: -1.8195310831069946
    3. 'x' → logprob: -5.569530963897705
    4. 'cou' → logprob: -5.694530963897705
    5. 'C' → logprob: -6.319530963897705
    6. 'A' → logprob: -6.944530963897705
    7. 'coupon' → logprob: -7.069530963897705
    8. '<|end|>' → logprob: -7.569530963897705
    9. '[' → logprob: -7.944530963897705
    10. 's' → logprob: -8.194531440734863

Token 76: ' vac' (ID: 7757)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0127028226852417
    2. 'a' → logprob: -4.637702941894531
    3. 'x' → logprob: -6.762702941894531
    4. 'cou' → logprob: -7.262702941894531
    5. 'if' → logprob: -8.137702941894531
    6. 'coupon' → logprob: -8.637702941894531
    7. 'l' → logprob: -9.137702941894531
    8. 'for' → logprob: -9.137702941894531
    9. 't' → logprob: -9.262702941894531
    10. '   ' → logprob: -9.762702941894531

Token 77: '=[]
' (ID: 63466)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7353485226631165
    2. 'h' → logprob: -2.3603484630584717
    3. 'ancy' → logprob: -2.6103484630584717
    4. 'ine' → logprob: -3.4853484630584717
    5. 'c' → logprob: -3.6103484630584717
    6. 'anc' → logprob: -3.7353484630584717
    7. 'aciones' → logprob: -3.9853484630584717
    8. 'ina' → logprob: -4.110348701477051
    9. 's' → logprob: -4.110348701477051
    10. '[]' → logprob: -4.235348701477051

Token 78: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007894663140177727
    2. ' for' → logprob: -5.632894515991211
    3. '   ' → logprob: -6.382894515991211
    4. 'vac' → logprob: -6.382894515991211
    5. 'a' → logprob: -7.382894515991211
    6. 'c' → logprob: -9.007894515991211
    7. 'v' → logprob: -10.007894515991211
    8. '[' → logprob: -10.132894515991211
    9. '<|end|>' → logprob: -10.507894515991211
    10. '	for' → logprob: -11.632894515991211

Token 79: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011926100123673677
    2. 'vac' → logprob: -6.751192569732666
    3. '   ' → logprob: -11.751193046569824
    4. ' for' → logprob: -12.001193046569824
    5. 'v' → logprob: -12.626193046569824
    6. 'c' → logprob: -13.251193046569824
    7. 'vacc' → logprob: -13.626193046569824
    8. 'if' → logprob: -15.001193046569824
    9. '	for' → logprob: -15.126193046569824
    10. 'a' → logprob: -15.376193046569824

Token 80: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.2321980595588684
    2. 'j' → logprob: -2.7321979999542236
    3. ' each' → logprob: -2.7321979999542236
    4. ' j' → logprob: -2.7321979999542236
    5. 'x' → logprob: -5.357198238372803
    6. 'e' → logprob: -5.857198238372803
    7. ' e' → logprob: -6.607198238372803
    8. ' x' → logprob: -6.732198238372803
    9. 'k' → logprob: -8.232197761535645
    10. ' ' → logprob: -8.482197761535645

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10035331547260284
    2. 'in' → logprob: -2.350353240966797
    3. ' ' → logprob: -9.100353240966797
    4. 's' → logprob: -11.725353240966797
    5. '_in' → logprob: -12.100353240966797
    6. '	in' → logprob: -12.225353240966797
    7. 'each' → logprob: -12.350353240966797
    8. '<|end|>' → logprob: -13.100353240966797
    9. '  ' → logprob: -13.225353240966797
    10. ' ' → logprob: -13.850353240966797

Token 82: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00863016489893198
    2. ' f' → logprob: -4.758630275726318
    3. ' ' → logprob: -12.13362979888916
    4. 'range' → logprob: -12.13362979888916
    5. ' range' → logprob: -12.75862979888916
    6. '   ' → logprob: -13.88362979888916
    7. '    ' → logprob: -14.63362979888916
    8. '  ' → logprob: -15.00862979888916
    9. '	f' → logprob: -15.63362979888916
    10. '[' → logprob: -16.758630752563477

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015514736878685653
    2. ':
' → logprob: -9.500155448913574
    3. ' :' → logprob: -9.625155448913574
    4. '   ' → logprob: -12.625155448913574
    5. '.' → logprob: -13.250155448913574
    6. '[:]' → logprob: -13.250155448913574
    7. ':int' → logprob: -13.625155448913574
    8. 's' → logprob: -13.625155448913574
    9. '[' → logprob: -14.000155448913574
    10. ':v' → logprob: -14.375155448913574

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6516252756118774
    2. ' vac' → logprob: -1.2766252756118774
    3. 'vac' → logprob: -2.151625156402588
    4. '    ' → logprob: -2.526625156402588
    5. '       ' → logprob: -6.651625156402588
    6. ' ' → logprob: -7.776625156402588
    7. '  ' → logprob: -8.401625633239746
    8. 'v' → logprob: -8.401625633239746
    9. '    
' → logprob: -8.651625633239746
    10. 'Vac' → logprob: -9.026625633239746

Token 85: ' vac' (ID: 7757)
  Prédit: 'vac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vac' (adapté à ' vac') → logprob: -0.033776864409446716
    2. ' vac' → logprob: -3.4087767601013184
    3. '   ' → logprob: -9.158777236938477
    4. 'vacc' → logprob: -11.658777236938477
    5. ' ' → logprob: -12.283777236938477
    6. '  ' → logprob: -12.783777236938477
    7. 'v' → logprob: -12.908777236938477
    8. 'Vac' → logprob: -13.783777236938477
    9. 'voc' → logprob: -13.908777236938477
    10. '    ' → logprob: -14.033777236938477

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02987903542816639
    2. '.' → logprob: -3.529879093170166
    3. '.app' → logprob: -9.404878616333008
    4. 'append' → logprob: -10.404878616333008
    5. ' .' → logprob: -11.904878616333008
    6. '.ap' → logprob: -13.404878616333008
    7. '.=' → logprob: -13.404878616333008
    8. '=' → logprob: -13.779878616333008
    9. '.Append' → logprob: -14.279878616333008
    10. '.extend' → logprob: -14.654878616333008

Token 87: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004698664881289005
    2. 'int' → logprob: -5.379698753356934
    3. '(each' → logprob: -10.379698753356934
    4. ' int' → logprob: -11.129698753356934
    5. 'each' → logprob: -11.379698753356934
    6. ' (' → logprob: -11.629698753356934
    7. '(' → logprob: -11.754698753356934
    8. '[int' → logprob: -13.629698753356934
    9. '=int' → logprob: -14.254698753356934
    10. '<int' → logprob: -14.254698753356934

Token 88: '(each' (ID: 152103)
  Prédit: '(each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(each' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.750004768371582
    3. 'each' → logprob: -13.875004768371582
    4. '(e' → logprob: -14.000004768371582
    5. ' (' → logprob: -16.8750057220459
    6. ')' → logprob: -17.1250057220459
    7. ')(' → logprob: -17.6250057220459
    8. 'Each' → logprob: -17.8750057220459
    9. '(one' → logprob: -17.8750057220459
    10. '```' → logprob: -18.2500057220459

Token 89: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016111908480525017
    2. ')' → logprob: -4.141111850738525
    3. '()))' → logprob: -10.641112327575684
    4. ')))' → logprob: -10.766112327575684
    5. ' ))' → logprob: -11.016112327575684
    6. '))
' → logprob: -12.016112327575684
    7. ''))' → logprob: -12.891112327575684
    8. '"))' → logprob: -13.266112327575684
    9. '),' → logprob: -13.766112327575684
    10. '   ' → logprob: -14.016112327575684

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08017626404762268
    2. ' ' → logprob: -3.20517635345459
    3. ' if' → logprob: -4.70517635345459
    4. '[' → logprob: -4.83017635345459
    5. ')' → logprob: -5.20517635345459
    6. '<|end|>' → logprob: -5.83017635345459
    7. '  ' → logprob: -6.33017635345459
    8. 'c' → logprob: -6.58017635345459
    9. '    ' → logprob: -6.70517635345459
    10. 'if' → logprob: -6.70517635345459

Token 91: ' coup' (ID: 25465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19243492186069489
    2. 'c' → logprob: -2.0674350261688232
    3. ')' → logprob: -4.317434787750244
    4. ' ' → logprob: -4.567434787750244
    5. '[' → logprob: -5.442434787750244
    6. 'a' → logprob: -5.942434787750244
    7. '(' → logprob: -6.067434787750244
    8. '  ' → logprob: -6.067434787750244
    9. '    ' → logprob: -6.817434787750244
    10. '	c' → logprob: -6.942434787750244

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.613945101387799e-05
    2. '.' → logprob: -10.375085830688477
    3. '.app' → logprob: -10.875085830688477
    4. '[' → logprob: -11.375085830688477
    5. '.s' → logprob: -11.625085830688477
    6. 's' → logprob: -12.250085830688477
    7. 'append' → logprob: -12.875085830688477
    8. '.extend' → logprob: -13.500085830688477
    9. '.insert' → logprob: -13.750085830688477
    10. '.ap' → logprob: -13.750085830688477

Token 93: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0008386960835196078
    2. '(' → logprob: -7.250838756561279
    3. '((' → logprob: -9.000838279724121
    4. '(tuple' → logprob: -12.375838279724121
    5. '(c' → logprob: -14.625838279724121
    6. '([' → logprob: -15.500838279724121
    7. '(s' → logprob: -16.625839233398438
    8. '(value' → logprob: -16.625839233398438
    9. '(int' → logprob: -17.000839233398438
    10. '(a' → logprob: -17.125839233398438

Token 94: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.006862185895442963
    2. 'a' → logprob: -5.256862163543701
    3. 'vac' → logprob: -7.506862163543701
    4. 'acc' → logprob: -8.38186264038086
    5. '[' → logprob: -8.50686264038086
    6. 'act' → logprob: -9.00686264038086
    7. 'acy' → logprob: -9.63186264038086
    8. 'c' → logprob: -10.00686264038086
    9. '[v' → logprob: -10.50686264038086
    10. 'acu' → logprob: -10.63186264038086

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -14.000018119812012
    4. '))' → logprob: -14.375018119812012
    5. ')`' → logprob: -16.500019073486328
    6. '`)' → logprob: -16.625019073486328
    7. '")' → logprob: -17.125019073486328
    8. '')' → logprob: -17.250019073486328
    9. '   ' → logprob: -17.500019073486328
    10. '[' → logprob: -17.500019073486328

Token 96: 'price' (ID: 7629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23786036670207977
    2. 'c' → logprob: -2.9878604412078857
    3. 'max' → logprob: -3.6128604412078857
    4. 'ans' → logprob: -4.237860202789307
    5. 'res' → logprob: -4.237860202789307
    6. 'result' → logprob: -4.362860202789307
    7. 'dp' → logprob: -4.362860202789307
    8. 'd' → logprob: -4.862860202789307
    9. 'sum' → logprob: -4.862860202789307
    10. 's' → logprob: -4.987860202789307

Token 97: '=min' (ID: 149377)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8675385117530823
    2. '=' → logprob: -0.9925385117530823
    3. '=[]' → logprob: -1.6175384521484375
    4. '=[' → logprob: -5.2425384521484375
    5. ' =' → logprob: -5.9925384521484375
    6. '=s' → logprob: -7.1175384521484375
    7. '_s' → logprob: -7.7425384521484375
    8. 'A' → logprob: -7.7425384521484375
    9. '_' → logprob: -7.8675384521484375
    10. '={}' → logprob: -7.8675384521484375

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10730810463428497
    2. '(B' → logprob: -3.1073081493377686
    3. '(a' → logprob: -3.4823081493377686
    4. '(A' → logprob: -3.8573081493377686
    5. '([' → logprob: -6.1073079109191895
    6. '(as' → logprob: -7.2323079109191895
    7. '((' → logprob: -7.2323079109191895
    8. '(sum' → logprob: -8.107308387756348
    9. '(c' → logprob: -8.232308387756348
    10. 'As' → logprob: -8.982308387756348

Token 99: 'As' (ID: 2305)
  Prédit: 'As'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'As' → logprob: -0.6882058382034302
    2. 'a' → logprob: -1.5632058382034302
    3. 'Bs' → logprob: -2.4382057189941406
    4. '[' → logprob: -2.6882057189941406
    5. '(' → logprob: -3.4382057189941406
    6. ')' → logprob: -3.9382057189941406
    7. '(B' → logprob: -4.188205718994141
    8. 'c' → logprob: -4.313205718994141
    9. '[a' → logprob: -4.313205718994141
    10. '(a' → logprob: -4.688205718994141

Token 100: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06625991314649582
    2. '[i' → logprob: -3.6912598609924316
    3. '[' → logprob: -3.9412598609924316
    4. ')+' → logprob: -5.316259860992432
    5. '[a' → logprob: -5.816259860992432
    6. ')-' → logprob: -6.191259860992432
    7. '[B' → logprob: -6.441259860992432
    8. ' )' → logprob: -6.691259860992432
    9. '[b' → logprob: -6.816259860992432
    10. '+' → logprob: -7.066259860992432

Token 101: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004097003838978708
    2. ' min' → logprob: -8.375410079956055
    3. 'max' → logprob: -9.625410079956055
    4. '(min' → logprob: -9.750410079956055
    5. 'Bs' → logprob: -10.000410079956055
    6. '[min' → logprob: -12.500410079956055
    7. '100' → logprob: -13.625410079956055
    8. ' Bs' → logprob: -13.875410079956055
    9. 'abs' → logprob: -14.500410079956055
    10. '0' → logprob: -14.875410079956055

Token 102: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.004081009421497583
    2. '(' → logprob: -5.504080772399902
    3. '(bs' → logprob: -14.379080772399902
    4. '((' → logprob: -14.629080772399902
    5. '(Cs' → logprob: -14.754080772399902
    6. '(A' → logprob: -14.879080772399902
    7. '(b' → logprob: -15.254080772399902
    8. ' (' → logprob: -15.379080772399902
    9. '("("' → logprob: -16.87908172607422
    10. '(
' → logprob: -17.50408172607422

Token 103: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023727134976070374
    2. ')' → logprob: -8.375237464904785
    3. ')s' → logprob: -12.250237464904785
    4. '_s' → logprob: -13.750237464904785
    5. 'S' → logprob: -15.125237464904785
    6. '[' → logprob: -15.500237464904785
    7. '[s' → logprob: -15.500237464904785
    8. '[])' → logprob: -17.00023651123047
    9. ''s' → logprob: -17.12523651123047
    10. ')]' → logprob: -17.25023651123047

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002512071805540472
    2. ')
' → logprob: -8.875250816345215
    3. '+' → logprob: -9.625250816345215
    4. ' )' → logprob: -11.125250816345215
    5. '*' → logprob: -11.875250816345215
    6. '))' → logprob: -12.125250816345215
    7. '[' → logprob: -12.750250816345215
    8. ')+' → logprob: -12.875250816345215
    9. ']' → logprob: -13.500250816345215
    10. '-' → logprob: -13.625250816345215

Token 105: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21954771876335144
    2. '
' → logprob: -2.594547748565674
    3. '\n' → logprob: -3.344547748565674
    4. '+' → logprob: -3.469547748565674
    5. ' for' → logprob: -3.594547748565674
    6. '<|end|>' → logprob: -3.844547748565674
    7. '*' → logprob: -6.094547748565674
    8. ' 
' → logprob: -6.719547748565674
    9. '+
' → logprob: -6.844547748565674
    10. '  
' → logprob: -7.719547748565674

Token 106: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00854329764842987
    2. ' range' → logprob: -5.008543491363525
    3. ' ' → logprob: -7.258543491363525
    4. 'i' → logprob: -7.508543491363525
    5. ' _' → logprob: -8.258543014526367
    6. 'range' → logprob: -8.508543014526367
    7. '_' → logprob: -10.508543014526367
    8. '  ' → logprob: -10.883543014526367
    9. ' c' → logprob: -11.633543014526367
    10. ' m' → logprob: -11.883543014526367

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42942729592323303
    2. 'in' → logprob: -1.0544272661209106
    3. 'c' → logprob: -7.804427146911621
    4. ' ' → logprob: -8.554427146911621
    5. '_' → logprob: -10.679427146911621
    6. '   ' → logprob: -11.054427146911621
    7. '  ' → logprob: -11.179427146911621
    8. 's' → logprob: -11.429427146911621
    9. '_c' → logprob: -11.804427146911621
    10. '_in' → logprob: -11.804427146911621

Token 108: ' coup' (ID: 25465)
  Prédit: ' coup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.07596293836832047
    2. 'c' → logprob: -2.700963020324707
    3. ' range' → logprob: -5.200963020324707
    4. ' coupon' → logprob: -8.700963020324707
    5. 'range' → logprob: -9.200963020324707
    6. ' ' → logprob: -9.325963020324707
    7. '(c' → logprob: -10.075963020324707
    8. 'coupon' → logprob: -10.450963020324707
    9. 'cou' → logprob: -10.950963020324707
    10. '  ' → logprob: -11.325963020324707

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004658206831663847
    2. ':
' → logprob: -5.379658222198486
    3. '[' → logprob: -11.379657745361328
    4. ':
' → logprob: -12.254657745361328
    5. ' :' → logprob: -12.379657745361328
    6. '[:]' → logprob: -12.504657745361328
    7. '[:-' → logprob: -12.629657745361328
    8. ':

' → logprob: -13.629657745361328
    9. '[:' → logprob: -13.754657745361328
    10. 's' → logprob: -13.879657745361328

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10667312145233154
    2. ':' → logprob: -2.356673240661621
    3. ' if' → logprob: -5.481673240661621
    4. '[' → logprob: -6.856673240661621
    5. ':
' → logprob: -7.731673240661621
    6. ' price' → logprob: -8.231673240661621
    7. 'if' → logprob: -9.231673240661621
    8. '    
' → logprob: -9.606673240661621
    9. ',' → logprob: -9.731673240661621
    10. 'price' → logprob: -9.856673240661621

Token 111: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' (adapté à ' price') → logprob: -0.380361407995224
    2. 'a' → logprob: -2.255361318588257
    3. ' price' → logprob: -2.630361318588257
    4. 'if' → logprob: -2.880361318588257
    5. '   ' → logprob: -3.630361318588257
    6. 'x' → logprob: -4.005361557006836
    7. ' a' → logprob: -4.505361557006836
    8. ' if' → logprob: -4.755361557006836
    9. 'c' → logprob: -5.255361557006836
    10. 'p' → logprob: -5.630361557006836

Token 112: '_c' (ID: 1303)
  Prédit: '=min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.043521586805582047
    2. '=' → logprob: -4.043521404266357
    3. '_=' → logprob: -4.793521404266357
    4. ' =' → logprob: -4.918521404266357
    5. '=max' → logprob: -5.293521404266357
    6. 'min' → logprob: -5.793521404266357
    7. 'temp' → logprob: -8.043521881103516
    8. '=int' → logprob: -8.793521881103516
    9. 'each' → logprob: -9.043521881103516
    10. '2' → logprob: -9.043521881103516

Token 113: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10267413407564163
    2. 'alc' → logprob: -2.4776742458343506
    3. 'al' → logprob: -5.6026740074157715
    4. 'alculate' → logprob: -6.1026740074157715
    5. '=max' → logprob: -6.2276740074157715
    6. '=int' → logprob: -6.2276740074157715
    7. 'ost' → logprob: -6.7276740074157715
    8. '=float' → logprob: -7.9776740074157715
    9. '=min' → logprob: -7.9776740074157715
    10. '=current' → logprob: -8.22767448425293

Token 114: 'As' (ID: 2305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.43924713134765625
    2. 'As' → logprob: -1.4392471313476562
    3. 'each' → logprob: -2.3142471313476562
    4. ' min' → logprob: -4.939247131347656
    5. 'Each' → logprob: -5.439247131347656
    6. '(' → logprob: -6.689247131347656
    7. ' each' → logprob: -6.689247131347656
    8. ' As' → logprob: -7.064247131347656
    9. '(min' → logprob: -7.064247131347656
    10. 'a' → logprob: -7.189247131347656

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022786001209169626
    2. 'each' → logprob: -6.127278804779053
    3. '[c' → logprob: -10.377278327941895
    4. ' [' → logprob: -11.002278327941895
    5. ' each' → logprob: -11.002278327941895
    6. '(each' → logprob: -11.377278327941895
    7. '[e' → logprob: -11.877278327941895
    8. 'Each' → logprob: -12.002278327941895
    9. '_each' → logprob: -13.752278327941895
    10. 'c' → logprob: -14.127278327941895

Token 116: 'each' (ID: 21309)
  Prédit: 'each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -4.47757811343763e-05
    2. ' each' → logprob: -10.375044822692871
    3. '(each' → logprob: -11.250044822692871
    4. '   ' → logprob: -15.375044822692871
    5. 'e' → logprob: -15.750044822692871
    6. 'c' → logprob: -17.125043869018555
    7. '[' → logprob: -17.375043869018555
    8. '_each' → logprob: -17.875043869018555
    9. 'Each' → logprob: -18.000043869018555
    10. '.each' → logprob: -18.000043869018555

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.747814349073451e-05
    2. '0' → logprob: -11.125017166137695
    3. '1' → logprob: -13.500017166137695
    4. '[
' → logprob: -14.500017166137695
    5. '(' → logprob: -15.625017166137695
    6. ' ' → logprob: -15.750017166137695
    7. '2' → logprob: -16.375017166137695
    8. '-' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.000017166137695
    10. '3' → logprob: -17.375017166137695

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004279275599401444
    2. '1' → logprob: -8.000428199768066
    3. ' ' → logprob: -9.500428199768066
    4. '[' → logprob: -11.500428199768066
    5. '   ' → logprob: -12.375428199768066
    6. '-' → logprob: -13.500428199768066
    7. '2' → logprob: -13.625428199768066
    8. '(' → logprob: -16.31292724609375
    9. '  ' → logprob: -16.31292724609375
    10. '    ' → logprob: -16.43792724609375

Token 119: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.042454808950424194
    2. ']-' → logprob: -3.792454719543457
    3. ' -' → logprob: -4.417454719543457
    4. ']' → logprob: -5.917454719543457
    5. '1' → logprob: -6.042454719543457
    6. '[' → logprob: -6.417454719543457
    7. '0' → logprob: -8.792454719543457
    8. ' ' → logprob: -9.667454719543457
    9. '()-' → logprob: -10.417454719543457
    10. ' ]' → logprob: -12.667454719543457

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.750005722045898
    4. '۱' → logprob: -18.3125057220459
    5. '１' → logprob: -18.5000057220459
    6. '2' → logprob: -18.5625057220459
    7. '-' → logprob: -18.7500057220459
    8. '  ' → logprob: -18.8750057220459
    9. ']' → logprob: -19.0000057220459
    10. '১' → logprob: -19.3125057220459

Token 121: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.09017914533615112
    2. ']' → logprob: -2.465179204940796
    3. ']-' → logprob: -6.715178966522217
    4. ']*' → logprob: -11.340179443359375
    5. ' ]' → logprob: -11.965179443359375
    6. ']
' → logprob: -13.090179443359375
    7. '+' → logprob: -13.465179443359375
    8. ']+\' → logprob: -13.465179443359375
    9. ']+=' → logprob: -13.715179443359375
    10. '-' → logprob: -14.090179443359375

Token 122: 'Bs' (ID: 63814)
  Prédit: 'Bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bs' → logprob: -0.00038944309926591814
    2. ' Bs' → logprob: -7.875389575958252
    3. '   ' → logprob: -12.250389099121094
    4. '  ' → logprob: -13.625389099121094
    5. '(B' → logprob: -14.250389099121094
    6. ' ' → logprob: -14.375389099121094
    7. 'B' → logprob: -15.125389099121094
    8. '(' → logprob: -15.125389099121094
    9. '     ' → logprob: -15.250389099121094
    10. 'bs' → logprob: -15.375389099121094

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. 'each' → logprob: -13.250001907348633
    3. '(each' → logprob: -16.375001907348633
    4. 'Each' → logprob: -16.750001907348633
    5. '[
' → logprob: -17.500001907348633
    6. ' each' → logprob: -17.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. '[(' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.750001907348633

Token 124: 'each' (ID: 21309)
  Prédit: 'each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -6.408677290892228e-05
    2. ' each' → logprob: -9.7500638961792
    3. '(each' → logprob: -12.2500638961792
    4. '[' → logprob: -13.8750638961792
    5. '   ' → logprob: -18.875064849853516
    6. '(' → logprob: -19.375064849853516
    7. ' ' → logprob: -19.625064849853516
    8. '.each' → logprob: -19.875064849853516
    9. 'Each' → logprob: -20.250064849853516
    10. '1' → logprob: -20.875064849853516

Token 125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021866646129637957
    2. '1' → logprob: -6.1271867752075195
    3. '-' → logprob: -13.87718677520752
    4. ']-' → logprob: -15.62718677520752
    5. '2' → logprob: -15.87718677520752
    6. '[
' → logprob: -16.127185821533203
    7. '```' → logprob: -16.502185821533203
    8. ']' → logprob: -16.627185821533203
    9. ' [' → logprob: -17.502185821533203
    10. '0' → logprob: -17.502185821533203

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. '2' → logprob: -10.875025749206543
    3. '[' → logprob: -12.750025749206543
    4. '0' → logprob: -13.125025749206543
    5. '-' → logprob: -13.875025749206543
    6. ' ' → logprob: -15.250025749206543
    7. '```' → logprob: -15.375025749206543
    8. ']' → logprob: -15.500025749206543
    9. '
' → logprob: -16.12502670288086
    10. ']-' → logprob: -16.37502670288086

Token 127: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4318850338459015
    2. ']-' → logprob: -1.056885004043579
    3. ']' → logprob: -6.181885242462158
    4. ' -' → logprob: -7.431885242462158
    5. '[' → logprob: -8.431884765625
    6. '1' → logprob: -8.681884765625
    7. '2' → logprob: -9.181884765625
    8. '   ' → logprob: -11.931884765625
    9. '()-' → logprob: -12.181884765625
    10. ' ' → logprob: -12.431884765625

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. ']' → logprob: -15.125003814697266
    4. '2' → logprob: -15.750003814697266
    5. '-' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '```' → logprob: -17.375003814697266
    8. '<|end|>' → logprob: -17.437503814697266
    9. 'b' → logprob: -17.812503814697266
    10. '１' → logprob: -18.062503814697266

Token 129: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008051477372646332
    2. '-price' → logprob: -5.38305139541626
    3. '-c' → logprob: -6.50805139541626
    4. ' -' → logprob: -6.75805139541626
    5. '-if' → logprob: -7.50805139541626
    6. '-dose' → logprob: -10.633051872253418
    7. '-
' → logprob: -10.758051872253418
    8. '-code' → logprob: -10.758051872253418
    9. '-sale' → logprob: -10.758051872253418
    10. '-e' → logprob: -11.383051872253418

Token 130: 'each' (ID: 21309)
  Prédit: 'each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.00023417205375153571
    2. ' each' → logprob: -8.375234603881836
    3. '   ' → logprob: -13.500234603881836
    4. 'c' → logprob: -13.625234603881836
    5. '(each' → logprob: -14.000234603881836
    6. 'price' → logprob: -17.125234603881836
    7. 'e' → logprob: -17.250234603881836
    8. 'coupon' → logprob: -17.375234603881836
    9. ' ' → logprob: -17.750234603881836
    10. 'max' → logprob: -18.000234603881836

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003827676991932094
    2. '2' → logprob: -7.875382900238037
    3. '```' → logprob: -14.125382423400879
    4. ' [' → logprob: -14.625382423400879
    5. '[
' → logprob: -14.875382423400879
    6. ' ' → logprob: -15.000382423400879
    7. '][' → logprob: -15.125382423400879
    8. '[-' → logprob: -16.000383377075195
    9. '   ' → logprob: -17.000383377075195
    10. '(' → logprob: -17.250383377075195

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.000008583068848
    4. '[' → logprob: -14.375008583068848
    5. '-' → logprob: -15.375008583068848
    6. '
' → logprob: -15.750008583068848
    7. '  ' → logprob: -15.875008583068848
    8. ']' → logprob: -17.62500762939453
    9. '２' → logprob: -17.68750762939453
    10. '```' → logprob: -17.93750762939453

Token 133: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2903941869735718
    2. ')' → logprob: -1.5403941869735718
    3. ']
' → logprob: -3.6653943061828613
    4. ')
' → logprob: -4.790394306182861
    5. '
' → logprob: -6.415394306182861
    6. '   ' → logprob: -7.540394306182861
    7. ' ' → logprob: -7.915394306182861
    8. '<|end|>' → logprob: -8.040393829345703
    9. 'if' → logprob: -8.165393829345703
    10. 'price' → logprob: -9.290393829345703

Token 134: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41949495673179626
    2. '   ' → logprob: -1.9194949865341187
    3. 'if' → logprob: -2.419494867324829
    4. 'price' → logprob: -2.544494867324829
    5. ' if' → logprob: -3.919494867324829
    6. ' price' → logprob: -5.044495105743408
    7. '\n' → logprob: -6.794495105743408
    8. '    
' → logprob: -7.669495105743408
    9. '	price' → logprob: -8.79449462890625
    10. ')
' → logprob: -9.66949462890625

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005283207632601261
    2. 'price' → logprob: -5.255283355712891
    3. ' if' → logprob: -10.63028335571289
    4. '   ' → logprob: -10.63028335571289
    5. ' price' → logprob: -14.13028335571289
    6. '
' → logprob: -15.50528335571289
    7. ' ' → logprob: -15.75528335571289
    8. '```' → logprob: -18.00528335571289
    9. '	price' → logprob: -18.63028335571289
    10. '	if' → logprob: -18.75528335571289

Token 136: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.02324722334742546
    2. 'price' → logprob: -3.773247241973877
    3. '(price' → logprob: -13.898246765136719
    4. '	price' → logprob: -14.648246765136719
    5. 'Price' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.64824676513672
    7. '   ' → logprob: -17.14824676513672
    8. ' ' → logprob: -17.27324676513672
    9. '_price' → logprob: -17.77324676513672
    10. ' prijs' → logprob: -19.64824676513672

Token 137: '_c' (ID: 1303)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1317550241947174
    2. ' >' → logprob: -2.1317551136016846
    3. '<' → logprob: -5.3817548751831055
    4. ' <' → logprob: -8.506754875183105
    5. '><' → logprob: -12.381754875183105
    6. ' ' → logprob: -13.006754875183105
    7. '>=' → logprob: -13.881754875183105
    8. '   ' → logprob: -14.006754875183105
    9. '">' → logprob: -14.131754875183105
    10. '=' → logprob: -14.756754875183105

Token 138: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02975245751440525
    2. ' <' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.404752731323242
    4. 'price' → logprob: -16.404752731323242
    5. ' price' → logprob: -16.529752731323242
    6. '<int' → logprob: -16.779752731323242
    7. '<
' → logprob: -17.404752731323242
    8. '```' → logprob: -17.404752731323242
    9. '<|end|>' → logprob: -17.404752731323242
    10. ')' → logprob: -17.529752731323242

Token 139: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -2.7610454708337784e-05
    2. ' price' → logprob: -10.500027656555176
    3. '	price' → logprob: -20.25002670288086
    4. '   ' → logprob: -22.25002670288086
    5. '(price' → logprob: -22.62502670288086
    6. 'Price' → logprob: -22.75002670288086
    7. '_price' → logprob: -23.75002670288086
    8. '
' → logprob: -23.75002670288086
    9. '=' → logprob: -24.75002670288086
    10. 'prices' → logprob: -25.25002670288086

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030285518616437912
    2. ':
' → logprob: -3.530285596847534
    3. '   ' → logprob: -8.405285835266113
    4. ' price' → logprob: -9.530285835266113
    5. '	price' → logprob: -9.905285835266113
    6. '):' → logprob: -10.030285835266113
    7. '       ' → logprob: -10.030285835266113
    8. 'price' → logprob: -10.405285835266113
    9. '):
' → logprob: -10.905285835266113
    10. ' :' → logprob: -11.155285835266113

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042207762598991394
    2. ' price' → logprob: -3.542207717895508
    3. 'price' → logprob: -4.792207717895508
    4. '	price' → logprob: -6.167207717895508
    5. '   ' → logprob: -6.292207717895508
    6. '	   ' → logprob: -10.292207717895508
    7. '<|end|>' → logprob: -11.042207717895508
    8. '(price' → logprob: -11.417207717895508
    9. '           ' → logprob: -11.542207717895508
    10. '        
' → logprob: -11.667207717895508

Token 142: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.313892126083374
    2. 'price' (adapté à ' price') → logprob: -1.313892126083374
    3. '       ' → logprob: -7.438892364501953
    4. '   ' → logprob: -10.313892364501953
    5. '	price' → logprob: -11.688892364501953
    6. '           ' → logprob: -14.813892364501953
    7. '_price' → logprob: -16.438892364501953
    8. '    ' → logprob: -17.188892364501953
    9. '.price' → logprob: -17.563892364501953
    10. '        ' → logprob: -17.813892364501953

Token 143: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7954958821064793e-05
    2. ' =' → logprob: -11.250018119812012
    3. '_=' → logprob: -12.750018119812012
    4. 'price' → logprob: -13.875018119812012
    5. '=

' → logprob: -14.750018119812012
    6. '_price' → logprob: -15.000018119812012
    7. '=
' → logprob: -15.625018119812012
    8. ' price' → logprob: -16.750017166137695
    9. '=c' → logprob: -16.875017166137695
    10. '=password' → logprob: -17.000017166137695

Token 144: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -1.306760805164231e-05
    2. ' price' → logprob: -11.25001335144043
    3. '	price' → logprob: -18.87501335144043
    4. '   ' → logprob: -21.25001335144043
    5. '_price' → logprob: -21.25001335144043
    6. 'Price' → logprob: -21.25001335144043
    7. '(price' → logprob: -21.25001335144043
    8. '
' → logprob: -22.50001335144043
    9. 'password' → logprob: -23.00001335144043
    10. '.price' → logprob: -23.12501335144043

Token 145: '_c' (ID: 1303)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005871436558663845
    2. '_c' → logprob: -5.380871295928955
    3. 'price' → logprob: -7.505871295928955
    4. 'r' → logprob: -8.005871772766113
    5. ' print' → logprob: -9.005871772766113
    6. '_price' → logprob: -9.630871772766113
    7. '.print' → logprob: -10.005871772766113
    8. '_print' → logprob: -10.505871772766113
    9. 'c' → logprob: -10.880871772766113
    10. 'int' → logprob: -11.130871772766113

Token 146: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016778295685071498
    2. ' print' → logprob: -8.875167846679688
    3. '
' → logprob: -10.750167846679688
    4. ')' → logprob: -12.125167846679688
    5. '<|end|>' → logprob: -14.875167846679688
    6. '(print' → logprob: -15.625167846679688
    7. ')
' → logprob: -15.875167846679688
    8. '```' → logprob: -16.125167846679688
    9. '.print' → logprob: -16.250167846679688
    10. '#print' → logprob: -16.500167846679688

Token 147: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '```' → logprob: -16.75000762939453
    4. '
' → logprob: -18.00000762939453
    5. '(print' → logprob: -19.62500762939453
    6. '-print' → logprob: -19.75000762939453
    7. '#print' → logprob: -20.12500762939453
    8. '.print' → logprob: -20.87500762939453
    9. 'pr' → logprob: -21.25000762939453
    10. ')' → logprob: -21.37500762939453

Token 148: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.0003460712905507535
    2. '(' → logprob: -8.000346183776855
    3. 'price' → logprob: -11.500346183776855
    4. '()' → logprob: -15.500346183776855
    5. ' (' → logprob: -16.12534523010254
    6. ' price' → logprob: -16.50034523010254
    7. '("' → logprob: -17.75034523010254
    8. '(phone' → logprob: -18.12534523010254
    9. '('' → logprob: -18.25034523010254
    10. '	price' → logprob: -18.62534523010254

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.375
    3. ' )' → logprob: -16.875
    4. ')
' → logprob: -17.625
    5. '`)' → logprob: -18.375
    6. '))' → logprob: -18.375
    7. '')' → logprob: -19.0
    8. ')#' → logprob: -19.625
    9. ')**' → logprob: -19.875
    10. ')}' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 147
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 50.34%
Précision adaptée (1ère position): 54.42%
Précision (top 10): 84.35%
================================================================================
