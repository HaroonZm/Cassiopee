================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import statistics as stats

# ok, getting N, standard stuff
N=int(input())
A = list(map(int, input().split()))
# adjust with index? not sure why but probably needed for something
for i in range(len(A)):
    A[i]=A[i]-i

med = int(stats.median(A)) # get median, floor I guess

results = []
for val in range(med-2, med+3):
    acc = 0
    for x in A:
        acc += abs(x-val)
    results.append(acc)

# Just take the smallest, easy
print(min(results))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' statistics' (ID: 21729)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' stats' (ID: 19708)
  Prédit: ' stat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stat' → logprob: -0.23205514252185822
    2. ' stats' → logprob: -1.7320551872253418
    3. ' st' → logprob: -3.732055187225342
    4. 'stats' → logprob: -6.232055187225342
    5. 'stat' → logprob: -6.232055187225342
    6. ' sts' → logprob: -6.232055187225342
    7. ' statistics' → logprob: -8.732054710388184
    8. ' ' → logprob: -9.482054710388184
    9. 'st' → logprob: -9.732054710388184
    10. 'sts' → logprob: -11.107054710388184

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006753815687261522
    2. '\n' → logprob: -8.125675201416016
    3. '\' → logprob: -8.750675201416016
    4. 'import' → logprob: -10.125675201416016
    5. 'newline' → logprob: -10.375675201416016
    6. '```' → logprob: -10.625675201416016
    7. '.stats' → logprob: -10.875675201416016
    8. '.n' → logprob: -11.375675201416016
    9. ' .' → logprob: -11.875675201416016
    10. '.import' → logprob: -12.000675201416016

Token 5: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015424765879288316
    2. '\n' → logprob: -7.001542568206787
    3. '\' → logprob: -8.876542091369629
    4. '```' → logprob: -9.751542091369629
    5. 'newline' → logprob: -9.876542091369629
    6. '
' → logprob: -9.876542091369629
    7. '' → logprob: -10.001542091369629
    8. 'import' → logprob: -10.251542091369629
    9. '

' → logprob: -10.376542091369629
    10. '.stats' → logprob: -10.626542091369629

Token 6: ' ok' (ID: 4763)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009220697917044163
    2. ' Calculate' → logprob: -5.634220600128174
    3. ' import' → logprob: -6.634220600128174
    4. 'Calculate' → logprob: -7.259220600128174
    5. ' The' → logprob: -7.759220600128174
    6. ' ```' → logprob: -7.884220600128174
    7. ' mean' → logprob: -8.009221076965332
    8. ' statistics' → logprob: -8.259221076965332
    9. ' calculate' → logprob: -8.634221076965332
    10. ' `' → logprob: -8.884221076965332

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01442885771393776
    2. '\n' → logprob: -5.764429092407227
    3. '
' → logprob: -5.889429092407227
    4. '\' → logprob: -6.139429092407227
    5. '#' → logprob: -6.139429092407227
    6. '' → logprob: -7.264429092407227
    7. '<|end|>' → logprob: -7.639429092407227
    8. '
' → logprob: -7.764429092407227
    9. '```' → logprob: -7.764429092407227
    10. '(' → logprob: -8.264429092407227

Token 8: ' getting' (ID: 4811)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2989650368690491
    2. 'stats' → logprob: -2.5489649772644043
    3. ' ' → logprob: -2.6739649772644043
    4. 'import' → logprob: -3.2989649772644043
    5. '.stats' → logprob: -3.7989649772644043
    6. '_' → logprob: -5.048964977264404
    7. ',' → logprob: -5.298964977264404
    8. 'mean' → logprob: -5.423964977264404
    9. '' → logprob: -5.423964977264404
    10. 's' → logprob: -5.798964977264404

Token 9: ' N' (ID: 478)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.787929117679596
    2. 'mean' → logprob: -1.5379290580749512
    3. ' mean' → logprob: -2.662929058074951
    4. 'the' → logprob: -2.912929058074951
    5. '_' → logprob: -3.162929058074951
    6. 'data' → logprob: -3.662929058074951
    7. ' standard' → logprob: -3.787929058074951
    8. ' ' → logprob: -4.162929058074951
    9. ' data' → logprob: -4.287929058074951
    10. '_mean' → logprob: -4.537929058074951

Token 10: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01370503194630146
    2. ')' → logprob: -5.513705253601074
    3. '=' → logprob: -5.888705253601074
    4. 'N' → logprob: -6.263705253601074
    5. ' =' → logprob: -6.888705253601074
    6. '_n' → logprob: -7.263705253601074
    7. '[' → logprob: -8.138705253601074
    8. ' ' → logprob: -8.138705253601074
    9. '```' → logprob: -8.263705253601074
    10. ',' → logprob: -8.388705253601074

Token 11: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0949486717581749
    2. ' =' → logprob: -3.3449487686157227
    3. ' n' → logprob: -3.5949487686157227
    4. ' ,' → logprob: -4.969948768615723
    5. ' N' → logprob: -5.344948768615723
    6. '_' → logprob: -5.594948768615723
    7. ' _' → logprob: -6.344948768615723
    8. 'n' → logprob: -6.469948768615723
    9. ',' → logprob: -6.719948768615723
    10. ' space' → logprob: -6.969948768615723

Token 12: ' stuff' (ID: 9350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.478140264749527
    2. '_de' → logprob: -1.4781402349472046
    3. ' deviation' → logprob: -2.228140354156494
    4. 'de' → logprob: -3.728140354156494
    5. ' _' → logprob: -4.353140354156494
    6. ' ' → logprob: -5.728140354156494
    7. '_d' → logprob: -6.478140354156494
    8. '_dev' → logprob: -6.978140354156494
    9. 'Deviation' → logprob: -7.603140354156494
    10. ' deviations' → logprob: -9.353139877319336

Token 13: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4053519666194916
    2. '_' → logprob: -1.780351996421814
    3. 'N' → logprob: -2.0303518772125244
    4. '_n' → logprob: -4.4053521156311035
    5. '=' → logprob: -4.9053521156311035
    6. '```' → logprob: -5.6553521156311035
    7. ':' → logprob: -6.2803521156311035
    8. ',' → logprob: -6.7803521156311035
    9. '`' → logprob: -6.9053521156311035
    10. '

' → logprob: -7.0303521156311035

Token 14: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3160276412963867
    2. 'N' → logprob: -1.3160276412963867
    3. '
' → logprob: -6.816027641296387
    4. '_' → logprob: -7.441027641296387
    5. '#' → logprob: -8.566027641296387
    6. '

' → logprob: -8.816027641296387
    7. '```' → logprob: -8.816027641296387
    8. '\' → logprob: -9.066027641296387
    9. '`' → logprob: -9.316027641296387
    10. ',' → logprob: -9.691027641296387

Token 15: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11857455968856812
    2. ' ' → logprob: -2.368574619293213
    3. '=' → logprob: -4.618574619293213
    4. '_' → logprob: -5.243574619293213
    5. '_space' → logprob: -6.743574619293213
    6. ' )' → logprob: -7.493574619293213
    7. ' _' → logprob: -7.743574619293213
    8. ')' → logprob: -8.243574142456055
    9. 'space' → logprob: -8.993574142456055
    10. ',' → logprob: -8.993574142456055

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003122247871942818
    2. '('' → logprob: -8.625311851501465
    3. '(input' → logprob: -9.375311851501465
    4. ' (' → logprob: -11.000311851501465
    5. '(N' → logprob: -12.375311851501465
    6. '(
' → logprob: -12.375311851501465
    7. '(user' → logprob: -12.875311851501465
    8. ''' → logprob: -13.000311851501465
    9. '("' → logprob: -13.125311851501465
    10. '()' → logprob: -13.125311851501465

Token 17: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07565950602293015
    2. '()' → logprob: -3.0756595134735107
    3. '('' → logprob: -3.7006595134735107
    4. '("("' → logprob: -7.200659275054932
    5. '())' → logprob: -7.325659275054932
    6. '("")' → logprob: -9.07565975189209
    7. ')' → logprob: -9.20065975189209
    8. '("' → logprob: -9.45065975189209
    9. '(""))' → logprob: -9.70065975189209
    10. '(
' → logprob: -9.70065975189209

Token 18: 'A' (ID: 32)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4601573050022125
    2. ')' → logprob: -1.8351572751998901
    3. '\n' → logprob: -2.5851573944091797
    4. '
' → logprob: -3.0851573944091797
    5. '\' → logprob: -4.33515739440918
    6. 'data' → logprob: -4.83515739440918
    7. '<|end|>' → logprob: -4.83515739440918
    8. '' → logprob: -4.96015739440918
    9. '(' → logprob: -5.21015739440918
    10. ' )' → logprob: -5.33515739440918

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6326406598091125
    2. '.' → logprob: -1.3826406002044678
    3. '=' → logprob: -2.0076406002044678
    4. ' =' → logprob: -2.6326406002044678
    5. '[:]' → logprob: -5.882640838623047
    6. '.append' → logprob: -6.382640838623047
    7. '[]' → logprob: -6.507640838623047
    8. 's' → logprob: -7.007640838623047
    9. '=[]' → logprob: -7.132640838623047
    10. '_' → logprob: -7.257640838623047

Token 20: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2722497880458832
    2. ' list' → logprob: -2.522249698638916
    3. '[' → logprob: -2.772249698638916
    4. '[list' → logprob: -3.147249698638916
    5. '[]' → logprob: -3.397249698638916
    6. ' [' → logprob: -4.397249698638916
    7. '[input' → logprob: -5.647249698638916
    8. ' []' → logprob: -6.022249698638916
    9. '[int' → logprob: -7.397249698638916
    10. 'input' → logprob: -9.147250175476074

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05531912297010422
    2. '(map' → logprob: -3.05531907081604
    3. '(input' → logprob: -5.305319309234619
    4. '(int' → logprob: -7.055319309234619
    5. '(range' → logprob: -7.930319309234619
    6. '()' → logprob: -8.055318832397461
    7. '(stats' → logprob: -9.055318832397461
    8. '(eval' → logprob: -10.930318832397461
    9. '(
' → logprob: -11.930318832397461
    10. '(

' → logprob: -12.055318832397461

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1477404534816742
    2. '(' → logprob: -2.022740364074707
    3. '(input' → logprob: -6.022740364074707
    4. '(str' → logprob: -6.272740364074707
    5. '(lambda' → logprob: -7.647740364074707
    6. '(
' → logprob: -9.522740364074707
    7. '(list' → logprob: -9.897740364074707
    8. '(eval' → logprob: -9.897740364074707
    9. '<|end|>' → logprob: -10.522740364074707
    10. '(float' → logprob: -11.397740364074707

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02441522665321827
    2. ',input' → logprob: -3.8994152545928955
    3. '(' → logprob: -5.899415016174316
    4. ',' → logprob: -6.899415016174316
    5. 'input' → logprob: -10.399415016174316
    6. ')' → logprob: -10.524415016174316
    7. '=input' → logprob: -10.899415016174316
    8. ' (' → logprob: -11.274415016174316
    9. '<|end|>' → logprob: -11.899415016174316
    10. ' input' → logprob: -12.649415016174316

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007616798859089613
    2. ' input' → logprob: -4.882616996765137
    3. '(input' → logprob: -12.257616996765137
    4. ',input' → logprob: -12.257616996765137
    5. ' ' → logprob: -14.882616996765137
    6. '	input' → logprob: -15.257616996765137
    7. '=input' → logprob: -15.882616996765137
    8. '<input' → logprob: -16.25761604309082
    9. ')' → logprob: -16.38261604309082
    10. '   ' → logprob: -16.88261604309082

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.0629870858974755e-05
    2. '()' → logprob: -10.62506103515625
    3. '(' → logprob: -10.87506103515625
    4. ' ().' → logprob: -12.25006103515625
    5. '()))' → logprob: -12.62506103515625
    6. ' .' → logprob: -12.75006103515625
    7. '.' → logprob: -14.00006103515625
    8. '())' → logprob: -14.12506103515625
    9. '(input' → logprob: -14.25006103515625
    10. '(.' → logprob: -14.37506103515625

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005250345566309988
    2. 'strip' → logprob: -7.625524997711182
    3. ' split' → logprob: -10.75052547454834
    4. 'rstrip' → logprob: -11.12552547454834
    5. '(split' → logprob: -14.62552547454834
    6. 'spl' → logprob: -15.12552547454834
    7. '.split' → logprob: -16.750524520874023
    8. ' strip' → logprob: -17.250524520874023
    9. ' ' → logprob: -17.500524520874023
    10. ')' → logprob: -17.750524520874023

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.504839301109314
    2. '())' → logprob: -1.004839301109314
    3. '()' → logprob: -3.7548394203186035
    4. '))' → logprob: -5.7548394203186035
    5. '(' → logprob: -6.5048394203186035
    6. ')' → logprob: -6.6298394203186035
    7. '())))' → logprob: -7.1298394203186035
    8. ')))' → logprob: -10.754838943481445
    9. '()))
' → logprob: -10.879838943481445
    10. '()));' → logprob: -11.004838943481445

Token 28: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3251371681690216
    2. '
' → logprob: -2.200137138366699
    3. 's' → logprob: -3.700137138366699
    4. ')
' → logprob: -3.825137138366699
    5. 'stats' → logprob: -3.825137138366699
    6. 'print' → logprob: -3.950137138366699
    7. '\n' → logprob: -4.575137138366699
    8. '[' → logprob: -4.950137138366699
    9. '#' → logprob: -5.200137138366699
    10. '.' → logprob: -5.200137138366699

Token 29: ' adjust' (ID: 10266)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5068718791007996
    2. 'mean' → logprob: -1.6318719387054443
    3. 's' → logprob: -2.3818719387054443
    4. ' mean' → logprob: -4.006871700286865
    5. ' m' → logprob: -4.381871700286865
    6. 'std' → logprob: -4.631871700286865
    7. 'print' → logprob: -4.881871700286865
    8. 'x' → logprob: -4.881871700286865
    9. 'v' → logprob: -5.256871700286865
    10. 'mode' → logprob: -5.381871700286865

Token 30: ' with' (ID: 483)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.31969577074050903
    2. '(' → logprob: -2.1946957111358643
    3. '(A' → logprob: -3.0696957111358643
    4. 's' → logprob: -3.1946957111358643
    5. 'A' → logprob: -3.4446957111358643
    6. '_' → logprob: -4.194695949554443
    7. 'd' → logprob: -4.694695949554443
    8. 'for' → logprob: -5.944695949554443
    9. '()' → logprob: -6.194695949554443
    10. 'ing' → logprob: -6.569695949554443

Token 31: ' index' (ID: 3472)
  Prédit: ' stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stats' → logprob: -0.8316122889518738
    2. 'stats' → logprob: -1.3316123485565186
    3. ' ' → logprob: -2.3316123485565186
    4. '"' → logprob: -3.2066123485565186
    5. 'A' → logprob: -3.3316123485565186
    6. ' statistics' → logprob: -3.8316123485565186
    7. ' A' → logprob: -3.9566123485565186
    8. '(stats' → logprob: -4.2066121101379395
    9. '[' → logprob: -4.3316121101379395
    10. ' "' → logprob: -4.9566121101379395

Token 32: '?' (ID: 30)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11550556868314743
    2. '(' → logprob: -2.6155054569244385
    3. 'ed' → logprob: -4.740505695343018
    4. '[' → logprob: -5.115505695343018
    5. 'for' → logprob: -5.115505695343018
    6. '_' → logprob: -5.615505695343018
    7. ' ' → logprob: -5.990505695343018
    8. 'A' → logprob: -6.615505695343018
    9. ' for' → logprob: -6.865505695343018
    10. '()' → logprob: -6.865505695343018

Token 33: ' not' (ID: 625)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6033374071121216
    2. '[' → logprob: -0.9783374071121216
    3. '?' → logprob: -3.728337287902832
    4. ' ' → logprob: -4.353337287902832
    5. '_' → logprob: -4.478337287902832
    6. '(' → logprob: -5.103337287902832
    7. 'A' → logprob: -5.853337287902832
    8. '```' → logprob: -5.853337287902832
    9. ')' → logprob: -6.103337287902832
    10. '[i' → logprob: -6.728337287902832

Token 34: ' sure' (ID: 3239)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' why' (ID: 4436)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7340044379234314
    2. '(' → logprob: -0.8590044379234314
    3. 'A' → logprob: -3.484004497528076
    4. '_' → logprob: -4.234004497528076
    5. ',' → logprob: -4.984004497528076
    6. '[' → logprob: -5.109004497528076
    7. 'stats' → logprob: -5.234004497528076
    8. ')' → logprob: -5.484004497528076
    9. 'for' → logprob: -5.609004497528076
    10. ' ' → logprob: -5.609004497528076

Token 36: ' but' (ID: 889)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4830740690231323
    2. ',' → logprob: -2.233074188232422
    3. 'A' → logprob: -2.233074188232422
    4. ' ' → logprob: -2.608074188232422
    5. '.' → logprob: -3.483074188232422
    6. '[' → logprob: -4.483074188232422
    7. '<|end|>' → logprob: -4.483074188232422
    8. '_' → logprob: -4.608074188232422
    9. '?' → logprob: -5.358074188232422
    10. ':' → logprob: -5.483074188232422

Token 37: ' probably' (ID: 7038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2618170976638794
    2. ' A' → logprob: -2.38681697845459
    3. ' stats' → logprob: -2.88681697845459
    4. 'stats' → logprob: -3.38681697845459
    5. 'A' → logprob: -3.76181697845459
    6. ' N' → logprob: -4.88681697845459
    7. '<|end|>' → logprob: -6.38681697845459
    8. '```' → logprob: -6.63681697845459
    9. ' for' → logprob: -6.76181697845459
    10. 's' → logprob: -6.88681697845459

Token 38: ' needed' (ID: 6118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6885531544685364
    2. 'A' → logprob: -1.9385530948638916
    3. ' A' → logprob: -2.1885530948638916
    4. ',' → logprob: -3.0635530948638916
    5. 's' → logprob: -3.0635530948638916
    6. '<|end|>' → logprob: -3.1885530948638916
    7. 'stats' → logprob: -3.4385530948638916
    8. ' ,' → logprob: -4.063553333282471
    9. '<|end|>' → logprob: -4.188553333282471
    10. ' stats' → logprob: -4.813553333282471

Token 39: ' for' (ID: 395)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21213185787200928
    2. 'for' → logprob: -2.462131977081299
    3. 's' → logprob: -3.087131977081299
    4. ' for' → logprob: -3.712131977081299
    5. ' ' → logprob: -4.337131977081299
    6. ' A' → logprob: -4.712131977081299
    7. '<|end|>' → logprob: -6.337131977081299
    8. '.' → logprob: -6.462131977081299
    9. '_' → logprob: -6.587131977081299
    10. ',' → logprob: -6.587131977081299

Token 40: ' something' (ID: 3543)
  Prédit: ' stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stats' → logprob: -1.1144251823425293
    2. ' this' → logprob: -2.1144251823425293
    3. ' variance' → logprob: -2.4894251823425293
    4. ' the' → logprob: -2.4894251823425293
    5. ' statistics' → logprob: -2.8644251823425293
    6. ' range' → logprob: -2.9894251823425293
    7. ' i' → logprob: -3.1144251823425293
    8. ' standard' → logprob: -3.8644251823425293
    9. 'stats' → logprob: -3.8644251823425293
    10. ' some' → logprob: -3.9894251823425293

Token 41: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.36198005080223083
    2. 's' → logprob: -2.2369799613952637
    3. ' ' → logprob: -2.4869799613952637
    4. '_' → logprob: -3.2369799613952637
    5. 'i' → logprob: -4.111979961395264
    6. '.' → logprob: -4.236979961395264
    7. 'for' → logprob: -4.986979961395264
    8. '<|end|>' → logprob: -5.111979961395264
    9. ':' → logprob: -5.236979961395264
    10. ' A' → logprob: -5.361979961395264

Token 42: 'for' (ID: 1938)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2515254616737366
    2. 'for' → logprob: -2.126525402069092
    3. '_' → logprob: -3.626525402069092
    4. ' for' → logprob: -3.751525402069092
    5. ' ' → logprob: -4.126525402069092
    6. 'i' → logprob: -4.376525402069092
    7. ' A' → logprob: -4.626525402069092
    8. 's' → logprob: -5.001525402069092
    9. '<|end|>' → logprob: -6.501525402069092
    10. 'N' → logprob: -6.751525402069092

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009962779469788074
    2. ' _' → logprob: -5.134962558746338
    3. ' ' → logprob: -5.634962558746338
    4. '_' → logprob: -8.134963035583496
    5. 'i' → logprob: -8.884963035583496
    6. ' range' → logprob: -11.259963035583496
    7. ' ' → logprob: -12.134963035583496
    8. ' ‌' → logprob: -13.884963035583496
    9. ' in' → logprob: -14.009963035583496
    10. '  ' → logprob: -14.134963035583496

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026901140809059143
    2. 'in' → logprob: -3.7769012451171875
    3. ' ' → logprob: -5.6519012451171875
    4. '  ' → logprob: -10.151901245117188
    5. ' i' → logprob: -10.276901245117188
    6. 'n' → logprob: -11.026901245117188
    7. ' n' → logprob: -11.276901245117188
    8. '<|end|>' → logprob: -12.401901245117188
    9. '_' → logprob: -12.526901245117188
    10. ')' → logprob: -12.776901245117188

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0004886920796707273
    2. 'range' → logprob: -7.625488758087158
    3. '	range' → logprob: -15.12548828125
    4. '(range' → logprob: -15.75048828125
    5. ' xrange' → logprob: -16.25048828125
    6. ' ' → logprob: -16.37548828125
    7. '.range' → logprob: -18.37548828125
    8. '_range' → logprob: -18.62548828125
    9. ' rang' → logprob: -18.87548828125
    10. 'Range' → logprob: -19.50048828125

Token 46: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20241223275661469
    2. '(N' → logprob: -1.7024122476577759
    3. ' (' → logprob: -7.577412128448486
    4. '(len' → logprob: -7.827412128448486
    5. '(n' → logprob: -9.577412605285645
    6. '(
' → logprob: -12.327412605285645
    7. '(i' → logprob: -12.702412605285645
    8. '(s' → logprob: -13.077412605285645
    9. '()' → logprob: -13.327412605285645
    10. ' ' → logprob: -13.327412605285645

Token 47: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018242420628666878
    2. '(' → logprob: -4.018242359161377
    3. 'A' → logprob: -10.018242835998535
    4. '(N' → logprob: -10.143242835998535
    5. '(a' → logprob: -13.268242835998535
    6. ')' → logprob: -13.768242835998535
    7. ' (' → logprob: -13.768242835998535
    8. '(s' → logprob: -14.268242835998535
    9. ' A' → logprob: -14.518242835998535
    10. '(B' → logprob: -14.643242835998535

Token 48: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.03461068868637085
    2. '):' → logprob: -3.5346107482910156
    3. ')' → logprob: -6.034610748291016
    4. '))' → logprob: -6.784610748291016
    5. ')):
' → logprob: -7.409610748291016
    6. '-' → logprob: -8.909610748291016
    7. ' ' → logprob: -9.409610748291016
    8. '():' → logprob: -9.409610748291016
    9. '()))' → logprob: -9.659610748291016
    10. ' ):' → logprob: -9.659610748291016

Token 49: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4598754048347473
    2. '   ' → logprob: -1.8348753452301025
    3. ' A' → logprob: -2.0848753452301025
    4. 'A' → logprob: -3.5848753452301025
    5. '    ' → logprob: -3.7098753452301025
    6. '<|end|>' → logprob: -4.084875583648682
    7. ':' → logprob: -5.209875583648682
    8. ')' → logprob: -6.459875583648682
    9. '  ' → logprob: -6.834875583648682
    10. '```' → logprob: -7.084875583648682

Token 50: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3526304364204407
    2. 'A' (adapté à ' A') → logprob: -1.227630376815796
    3. '   ' → logprob: -5.602630615234375
    4. ' ' → logprob: -8.102630615234375
    5. '    ' → logprob: -9.102630615234375
    6. '	A' → logprob: -11.352630615234375
    7. '  ' → logprob: -11.477630615234375
    8. ' if' → logprob: -11.727630615234375
    9. ')' → logprob: -11.852630615234375
    10. 'i' → logprob: -12.477630615234375

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03818654641509056
    2. '[' → logprob: -3.288186550140381
    3. '[A' → logprob: -9.163186073303223
    4. ' [' → logprob: -11.038186073303223
    5. '[:]' → logprob: -11.913186073303223
    6. '[I' → logprob: -12.538186073303223
    7. '\[' → logprob: -12.788186073303223
    8. '[-' → logprob: -13.163186073303223
    9. '[a' → logprob: -13.413186073303223
    10. '```' → logprob: -13.913186073303223

Token 52: ']=' (ID: 9539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047011688351631165
    2. '-' → logprob: -3.672011613845825
    3. '-=' → logprob: -4.922011852264404
    4. '+=' → logprob: -5.547011852264404
    5. '=' → logprob: -6.047011852264404
    6. ')+' → logprob: -6.422011852264404
    7. ' -=' → logprob: -6.547011852264404
    8. ')-' → logprob: -6.672011852264404
    9. ' )' → logprob: -7.547011852264404
    10. '+' → logprob: -7.547011852264404

Token 53: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.052574895322322845
    2. ' A' → logprob: -3.052574872970581
    3. 'i' → logprob: -5.67757511138916
    4. ' i' → logprob: -8.55257511138916
    5. '(A' → logprob: -9.42757511138916
    6. 'stats' → logprob: -9.42757511138916
    7. 'int' → logprob: -10.05257511138916
    8. ' stats' → logprob: -10.30257511138916
    9. '   ' → logprob: -10.42757511138916
    10. '(i' → logprob: -11.30257511138916

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011413122527301311
    2. '[' → logprob: -4.511413097381592
    3. '[I' → logprob: -9.38641357421875
    4. ' [' → logprob: -9.51141357421875
    5. ')' → logprob: -9.51141357421875
    6. '[A' → logprob: -10.51141357421875
    7. '```' → logprob: -11.26141357421875
    8. ' ' → logprob: -11.38641357421875
    9. 'i' → logprob: -11.63641357421875
    10. '[
' → logprob: -12.07391357421875

Token 55: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19403289258480072
    2. ']-' → logprob: -3.069032907485962
    3. 'i' → logprob: -3.194032907485962
    4. '-' → logprob: -3.194032907485962
    5. '[i' → logprob: -3.194032907485962
    6. ')' → logprob: -5.944032669067383
    7. ']+' → logprob: -6.194032669067383
    8. '-i' → logprob: -7.819032669067383
    9. ')-' → logprob: -8.444032669067383
    10. ' ]' → logprob: -8.694032669067383

Token 56: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34745532274246216
    2. '1' → logprob: -1.8474552631378174
    3. ' i' → logprob: -2.2224552631378174
    4. '(i' → logprob: -4.0974555015563965
    5. ' (' → logprob: -4.7224555015563965
    6. '(' → logprob: -6.5974555015563965
    7. ' ' → logprob: -7.4724555015563965
    8. '	i' → logprob: -11.159955024719238
    9. '(N' → logprob: -11.472455024719238
    10. '_i' → logprob: -11.909955024719238

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03547881916165352
    2. '<|end|>' → logprob: -4.410478591918945
    3. '\n' → logprob: -4.785478591918945
    4. '
' → logprob: -5.285478591918945
    5. '  
' → logprob: -6.035478591918945
    6. ' 
' → logprob: -6.410478591918945
    7. '```' → logprob: -6.910478591918945
    8. '#' → logprob: -7.035478591918945
    9. '*' → logprob: -7.410478591918945
    10. 'newline' → logprob: -7.410478591918945

Token 58: 'med' (ID: 3217)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mean' → logprob: -1.0863463878631592
    2. '
' → logprob: -1.3363463878631592
    3. 'print' → logprob: -1.7113463878631592
    4. '#' → logprob: -2.586346387863159
    5. 's' → logprob: -3.461346387863159
    6. 'median' → logprob: -4.211346626281738
    7. 'stats' → logprob: -4.336346626281738
    8. '\n' → logprob: -4.336346626281738
    9. 'A' → logprob: -4.711346626281738
    10. '  
' → logprob: -4.836346626281738

Token 59: ' =' (ID: 314)
  Prédit: 'ian'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.011938151903450489
    2. '=' → logprob: -4.886938095092773
    3. ' =' → logprob: -5.886938095092773
    4. 'i' → logprob: -7.386938095092773
    5. '_' → logprob: -7.886938095092773
    6. 'ians' → logprob: -9.386938095092773
    7. 'an' → logprob: -9.636938095092773
    8. '```' → logprob: -9.636938095092773
    9. 'ean' → logprob: -10.011938095092773
    10. '_i' → logprob: -10.511938095092773

Token 60: ' int' (ID: 677)
  Prédit: 'stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stats' → logprob: -0.5759992599487305
    2. ' stats' → logprob: -0.8259992599487305
    3. 'stat' → logprob: -10.95099925994873
    4. ' statistics' → logprob: -11.32599925994873
    5. ' stat' → logprob: -11.95099925994873
    6. '(stats' → logprob: -11.95099925994873
    7. 'statistics' → logprob: -12.70099925994873
    8. '	stats' → logprob: -12.95099925994873
    9. '   ' → logprob: -13.45099925994873
    10. 'int' → logprob: -13.57599925994873

Token 61: '(stats' (ID: 112194)
  Prédit: '(stats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stats' → logprob: -0.005720693152397871
    2. '(' → logprob: -5.380720615386963
    3. '(A' → logprob: -7.130720615386963
    4. '(stat' → logprob: -8.630721092224121
    5. 'stats' → logprob: -10.255721092224121
    6. '(round' → logprob: -10.255721092224121
    7. '(.' → logprob: -11.630721092224121
    8. '((' → logprob: -11.755721092224121
    9. '()' → logprob: -12.255721092224121
    10. '(st' → logprob: -12.380721092224121

Token 62: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -3.2378600735682994e-05
    2. '.' → logprob: -11.375032424926758
    3. '.med' → logprob: -11.875032424926758
    4. '.mean' → logprob: -12.250032424926758
    5. ' .' → logprob: -12.750032424926758
    6. '.statistics' → logprob: -13.000032424926758
    7. '.st' → logprob: -13.375032424926758
    8. 'median' → logprob: -14.000032424926758
    9. ').' → logprob: -14.375032424926758
    10. '.stat' → logprob: -14.750032424926758

Token 63: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -8.458980300929397e-05
    2. 'ed' → logprob: -10.25008487701416
    3. 'ean' → logprob: -10.87508487701416
    4. 'edians' → logprob: -11.00008487701416
    5. 'e' → logprob: -11.50008487701416
    6. 'edia' → logprob: -12.87508487701416
    7. 'edi' → logprob: -14.75008487701416
    8. 'd' → logprob: -14.87508487701416
    9. 'edium' → logprob: -17.000083923339844
    10. 'edan' → logprob: -17.125083923339844

Token 64: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.6934557505883276e-05
    2. ')' → logprob: -10.625057220458984
    3. '(' → logprob: -11.500057220458984
    4. '_low' → logprob: -11.625057220458984
    5. 'A' → logprob: -12.375057220458984
    6. '(a' → logprob: -13.375057220458984
    7. ')(' → logprob: -13.625057220458984
    8. '```' → logprob: -13.750057220458984
    9. '_lower' → logprob: -14.375057220458984
    10. ' (' → logprob: -14.375057220458984

Token 65: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01613231934607029
    2. ')' → logprob: -4.141132354736328
    3. '()))' → logprob: -9.766132354736328
    4. '))
' → logprob: -11.266132354736328
    5. ')))' → logprob: -11.516132354736328
    6. '())' → logprob: -11.891132354736328
    7. ' ))' → logprob: -12.641132354736328
    8. '(' → logprob: -13.016132354736328
    9. '()' → logprob: -13.141132354736328
    10. '))

' → logprob: -13.641132354736328

Token 66: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' get' (ID: 717)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4593793451786041
    2. 'ans' → logprob: -2.3343794345855713
    3. 's' → logprob: -2.8343794345855713
    4. '
' → logprob: -2.9593794345855713
    5. '#' → logprob: -3.4593794345855713
    6. 'diff' → logprob: -4.209379196166992
    7. 'x' → logprob: -4.584379196166992
    8. 'min' → logprob: -4.709379196166992
    9. 'sum' → logprob: -4.834379196166992
    10. ' ans' → logprob: -4.834379196166992

Token 68: ' median' (ID: 31473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.661270022392273
    2. ' the' → logprob: -1.536270022392273
    3. 'the' → logprob: -2.6612701416015625
    4. 'median' → logprob: -2.6612701416015625
    5. '(m' → logprob: -2.7862701416015625
    6. 'med' → logprob: -3.9112701416015625
    7. ' median' → logprob: -4.5362701416015625
    8. ' next' → logprob: -5.2862701416015625
    9. ' a' → logprob: -5.6612701416015625
    10. ' med' → logprob: -5.9112701416015625

Token 69: ',' (ID: 11)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.171783208847046
    2. '(' → logprob: -1.671783208847046
    3. '()' → logprob: -1.796783208847046
    4. 'print' → logprob: -1.921783208847046
    5. 's' → logprob: -3.171783208847046
    6. 'd' → logprob: -4.046783447265625
    7. 'sum' → logprob: -4.546783447265625
    8. 'cost' → logprob: -4.671783447265625
    9. 'ans' → logprob: -4.796783447265625
    10. '()
' → logprob: -4.921783447265625

Token 70: ' floor' (ID: 8350)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9377920627593994
    2. 'diff' → logprob: -1.5627920627593994
    3. 'ans' → logprob: -2.0627920627593994
    4. 'mean' → logprob: -3.1877920627593994
    5. 'd' → logprob: -3.8127920627593994
    6. 'res' → logprob: -3.9377920627593994
    7. 'adj' → logprob: -3.9377920627593994
    8. '#' → logprob: -4.31279182434082
    9. ' cost' → logprob: -4.56279182434082
    10. 'offset' → logprob: -4.56279182434082

Token 71: ' I' (ID: 357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40386295318603516
    2. '()' → logprob: -1.2788629531860352
    3. '
' → logprob: -4.153862953186035
    4. ')' → logprob: -4.278862953186035
    5. '()
' → logprob: -5.278862953186035
    6. '(A' → logprob: -5.778862953186035
    7. '\n' → logprob: -6.028862953186035
    8. '(
' → logprob: -6.153862953186035
    9. ',' → logprob: -6.278862953186035
    10. 'print' → logprob: -6.403862953186035

Token 72: ' guess' (ID: 11915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '

' (ID: 279)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7456154823303223
    2. 'd' → logprob: -2.3706154823303223
    3. 's' → logprob: -2.6206154823303223
    4. 'ans' → logprob: -2.8706154823303223
    5. 'print' → logprob: -3.1206154823303223
    6. 'cost' → logprob: -3.7456154823303223
    7. 'm' → logprob: -3.8706154823303223
    8. 'D' → logprob: -3.9956154823303223
    9. 'mean' → logprob: -4.120615482330322
    10. 'sum' → logprob: -4.120615482330322

Token 74: 'results' (ID: 16570)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7233105301856995
    2. 'cost' → logprob: -1.3483104705810547
    3. 'print' → logprob: -1.9733104705810547
    4. 'ans' → logprob: -3.0983104705810547
    5. 'total' → logprob: -4.098310470581055
    6. 'res' → logprob: -4.223310470581055
    7. 's' → logprob: -5.348310470581055
    8. 'sum' → logprob: -5.348310470581055
    9. 'offset' → logprob: -5.473310470581055
    10. 'd' → logprob: -5.598310470581055

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07094466686248779
    2. '=' → logprob: -2.6959447860717773
    3. '_' → logprob: -7.320944786071777
    4. 's' → logprob: -8.695944786071777
    5. '=[]' → logprob: -9.445944786071777
    6. ' ' → logprob: -9.445944786071777
    7. ')' → logprob: -12.945944786071777
    8. '_=' → logprob: -13.070944786071777
    9. '=[]
' → logprob: -13.320944786071777
    10. ' +=' → logprob: -13.320944786071777

Token 76: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12304282188415527
    2. 'sum' → logprob: -2.3730428218841553
    3. 'abs' → logprob: -4.248043060302734
    4. '[]' → logprob: -4.998043060302734
    5. '[' → logprob: -7.748043060302734
    6. ' sum' → logprob: -8.248043060302734
    7. ' ' → logprob: -8.373043060302734
    8. '[min' → logprob: -8.873043060302734
    9. '(sum' → logprob: -9.498043060302734
    10. '[max' → logprob: -9.748043060302734

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006191504653543234
    2. 'total' → logprob: -7.875618934631348
    3. 'sum' → logprob: -9.250618934631348
    4. 'diff' → logprob: -9.625618934631348
    5. 'cost' → logprob: -10.500618934631348
    6. 's' → logprob: -10.625618934631348
    7. ' for' → logprob: -11.625618934631348
    8. 'res' → logprob: -12.250618934631348
    9. 'result' → logprob: -13.125618934631348
    10. 'results' → logprob: -13.375618934631348

Token 78: ' val' (ID: 1459)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4989497661590576
    2. ' x' → logprob: -1.4989497661590576
    3. ' a' → logprob: -1.9989497661590576
    4. ' ' → logprob: -4.873950004577637
    5. ' d' → logprob: -5.373950004577637
    6. ' val' → logprob: -5.373950004577637
    7. 'i' → logprob: -5.623950004577637
    8. 'a' → logprob: -5.748950004577637
    9. ' _' → logprob: -6.248950004577637
    10. 'x' → logprob: -6.248950004577637

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867423325777054
    2. 'in' → logprob: -3.0486743450164795
    3. ' ' → logprob: -9.423674583435059
    4. 's' → logprob: -13.548674583435059
    5. '	in' → logprob: -14.048674583435059
    6. '   ' → logprob: -14.298674583435059
    7. '  ' → logprob: -14.423674583435059
    8. ',' → logprob: -14.548674583435059
    9. '_in' → logprob: -14.673674583435059
    10. ')' → logprob: -15.798674583435059

Token 80: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0021874953527003527
    2. ' A' → logprob: -6.127187728881836
    3. 'range' → logprob: -14.002187728881836
    4. '[A' → logprob: -14.502187728881836
    5. ' ' → logprob: -14.877187728881836
    6. ' range' → logprob: -15.627187728881836
    7. '[' → logprob: -15.752187728881836
    8. '   ' → logprob: -15.877187728881836
    9. '	A' → logprob: -16.002187728881836
    10. '(A' → logprob: -16.127187728881836

Token 81: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0010578181827440858
    2. '(' → logprob: -6.8760576248168945
    3. '(min' → logprob: -11.376057624816895
    4. ' (' → logprob: -12.126057624816895
    5. '(me' → logprob: -12.626057624816895
    6. ' med' → logprob: -12.876057624816895
    7. '(-' → logprob: -14.126057624816895
    8. '((' → logprob: -14.626057624816895
    9. '(max' → logprob: -15.001057624816895
    10. 'med' → logprob: -15.876057624816895

Token 82: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0055307806469500065
    2. '(ed' → logprob: -5.380530834197998
    3. '(m' → logprob: -8.00553035736084
    4. '(' → logprob: -8.50553035736084
    5. 'med' → logprob: -8.63053035736084
    6. 'e' → logprob: -9.50553035736084
    7. '-' → logprob: -10.63053035736084
    8. '(-' → logprob: -10.88053035736084
    9. '[' → logprob: -11.00553035736084
    10. 'in' → logprob: -11.13053035736084

Token 83: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20145456492900848
    2. ' -' → logprob: -1.701454520225525
    3. ',' → logprob: -10.576454162597656
    4. ' ' → logprob: -11.451454162597656
    5. '+' → logprob: -13.076454162597656
    6. ' ,' → logprob: -13.826454162597656
    7. ')' → logprob: -14.701454162597656
    8. '  ' → logprob: -15.451454162597656
    9. ' +' → logprob: -15.701454162597656
    10. ',-' → logprob: -15.701454162597656

Token 84: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8884420990943909
    2. '10' → logprob: -1.638442039489746
    3. '5' → logprob: -1.638442039489746
    4. '2' → logprob: -2.888442039489746
    5. '3' → logprob: -3.138442039489746
    6. '100' → logprob: -3.138442039489746
    7. '4' → logprob: -4.138442039489746
    8. '200' → logprob: -4.513442039489746
    9. '20' → logprob: -4.888442039489746
    10. '400' → logprob: -5.138442039489746

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067154900170862675
    2. ' ,' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.506715774536133
    4. ',m' → logprob: -17.756715774536133
    5. ',
' → logprob: -17.756715774536133
    6. ',val' → logprob: -18.131715774536133
    7. '3' → logprob: -18.756715774536133
    8. ',len' → logprob: -19.006715774536133
    9. '‌,' → logprob: -19.131715774536133
    10. '6' → logprob: -19.256715774536133

Token 86: ' med' (ID: 1475)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.006009852513670921
    2. ' med' → logprob: -5.131010055541992
    3. ' ' → logprob: -10.131010055541992
    4. 'medi' → logprob: -11.256010055541992
    5. '   ' → logprob: -11.881010055541992
    6. '  ' → logprob: -12.381010055541992
    7. 'mediate' → logprob: -12.506010055541992
    8. 'median' → logprob: -12.506010055541992
    9. '+' → logprob: -12.881010055541992
    10. 'mad' → logprob: -13.756010055541992

Token 87: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008051026379689574
    2. ' +' → logprob: -7.125804901123047
    3. '3' → logprob: -14.875804901123047
    4. ' ' → logprob: -17.000804901123047
    5. ',' → logprob: -17.125804901123047
    6. '()+' → logprob: -17.375804901123047
    7. '+
' → logprob: -17.625804901123047
    8. '2' → logprob: -18.250804901123047
    9. '＋' → logprob: -18.375804901123047
    10. ')+' → logprob: -18.500804901123047

Token 88: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.482821431243792e-05
    2. ' ' → logprob: -9.50008487701416
    3. '4' → logprob: -11.87508487701416
    4. '2' → logprob: -13.00008487701416
    5. '5' → logprob: -14.50008487701416
    6. '   ' → logprob: -16.187583923339844
    7. '  ' → logprob: -17.250083923339844
    8. '```' → logprob: -17.250083923339844
    9. '1' → logprob: -17.875083923339844
    10. '+' → logprob: -17.875083923339844

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06291312724351883
    2. ':' → logprob: -2.812913179397583
    3. ')' → logprob: -7.062912940979004
    4. '+' → logprob: -10.562912940979004
    5. '):
' → logprob: -10.687912940979004
    6. ' ):' → logprob: -11.062912940979004
    7. ' :' → logprob: -11.187912940979004
    8. '1' → logprob: -12.937912940979004
    9. ':)' → logprob: -12.937912940979004
    10. '+:' → logprob: -13.062912940979004

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007024149876087904
    2. ':' → logprob: -5.50702428817749
    3. ' results' → logprob: -6.75702428817749
    4. '<|end|>' → logprob: -7.13202428817749
    5. '    
' → logprob: -8.257023811340332
    6. '	results' → logprob: -8.757023811340332
    7. 'results' → logprob: -8.882023811340332
    8. '<|end|>' → logprob: -9.382023811340332
    9. ' ' → logprob: -9.507023811340332
    10. ' :' → logprob: -10.257023811340332

Token 91: ' acc' (ID: 1259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23492005467414856
    2. 'res' → logprob: -2.984920024871826
    3. 'cost' → logprob: -3.109920024871826
    4. 's' → logprob: -3.734920024871826
    5. 'sum' → logprob: -4.234920024871826
    6. 'total' → logprob: -4.234920024871826
    7. 'diff' → logprob: -4.359920024871826
    8. ' s' → logprob: -4.484920024871826
    9. ' res' → logprob: -4.859920024871826
    10. ' cost' → logprob: -5.234920024871826

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16134339570999146
    2. ' =' → logprob: -2.2863433361053467
    3. 'um' → logprob: -3.1613433361053467
    4. 'umulate' → logprob: -6.411343574523926
    5. 'umulator' → logprob: -6.786343574523926
    6. 'uracy' → logprob: -7.286343574523926
    7. 'umul' → logprob: -7.536343574523926
    8. 'u' → logprob: -8.661343574523926
    9. 'umulative' → logprob: -8.661343574523926
    10. 'ul' → logprob: -8.911343574523926

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06412939727306366
    2. ' ' → logprob: -2.81412935256958
    3. 'sum' → logprob: -6.93912935256958
    4. ' sum' → logprob: -7.18912935256958
    5. 'abs' → logprob: -8.064129829406738
    6. ' abs' → logprob: -9.314129829406738
    7. '   ' → logprob: -11.689129829406738
    8. '1' → logprob: -11.939129829406738
    9. 's' → logprob: -12.564129829406738
    10. '  ' → logprob: -13.564129829406738

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00870805699378252
    2. 'sum' → logprob: -4.7587080001831055
    3. ' ' → logprob: -9.508708000183105
    4. ' sum' → logprob: -11.133708000183105
    5. 's' → logprob: -13.508708000183105
    6. 'abs' → logprob: -14.383708000183105
    7. 'int' → logprob: -14.633708000183105
    8. '1' → logprob: -14.633708000183105
    9. '(sum' → logprob: -15.008708000183105
    10. 'max' → logprob: -15.508708000183105

Token 95: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08943174034357071
    2. '
' → logprob: -2.8394317626953125
    3. '<|end|>' → logprob: -4.0894317626953125
    4. ' for' → logprob: -5.4644317626953125
    5. 'for' → logprob: -5.8394317626953125
    6. ' ' → logprob: -6.8394317626953125
    7. ':' → logprob: -7.7144317626953125
    8. '\n' → logprob: -7.8394317626953125
    9. '  ' → logprob: -7.8394317626953125
    10. '<|end|>' → logprob: -8.214431762695312

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006299942615441978
    2. ' for' → logprob: -7.625629901885986
    3. '   ' → logprob: -8.875630378723145
    4. '
' → logprob: -13.375630378723145
    5. ' ' → logprob: -14.750630378723145
    6. '	for' → logprob: -15.125630378723145
    7. '    
' → logprob: -17.125629425048828
    8. '  ' → logprob: -17.500629425048828
    9. 'or' → logprob: -18.625629425048828
    10. '```' → logprob: -20.000629425048828

Token 98: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22808204591274261
    2. 'x' → logprob: -2.6030819416046143
    3. ' a' → logprob: -3.1030819416046143
    4. 'i' → logprob: -3.2280819416046143
    5. 'v' → logprob: -4.353082180023193
    6. ' i' → logprob: -5.103082180023193
    7. ' x' → logprob: -5.228082180023193
    8. 'num' → logprob: -5.353082180023193
    9. 'j' → logprob: -5.478082180023193
    10. 'elem' → logprob: -5.853082180023193

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005727794487029314
    2. ',' → logprob: -5.505727767944336
    3. 'in' → logprob: -6.630727767944336
    4. 'A' → logprob: -8.380727767944336
    5. 'a' → logprob: -10.630727767944336
    6. ',A' → logprob: -10.630727767944336
    7. ' A' → logprob: -11.505727767944336
    8. '   ' → logprob: -11.630727767944336
    9. ' ' → logprob: -12.005727767944336
    10. ' ,' → logprob: -12.130727767944336

Token 100: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009142052149400115
    2. ' A' → logprob: -7.000914096832275
    3. 'range' → logprob: -13.125914573669434
    4. ' range' → logprob: -15.250914573669434
    5. ' ' → logprob: -15.500914573669434
    6. '   ' → logprob: -16.750913619995117
    7. '[' → logprob: -16.875913619995117
    8. ')' → logprob: -17.000913619995117
    9. '(A' → logprob: -18.000913619995117
    10. 'a' → logprob: -18.125913619995117

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014223800040781498
    2. ':
' → logprob: -4.264223575592041
    3. '   ' → logprob: -10.1392240524292
    4. '       ' → logprob: -11.8892240524292
    5. ':

' → logprob: -12.6392240524292
    6. '):' → logprob: -13.2642240524292
    7. ':
' → logprob: -13.2642240524292
    8. '):
' → logprob: -13.2642240524292
    9. '[' → logprob: -13.6392240524292
    10. ')' → logprob: -13.6392240524292

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018899753922596574
    2. '<|end|>' → logprob: -9.750188827514648
    3. ' acc' → logprob: -10.125188827514648
    4. '   ' → logprob: -10.375188827514648
    5. ',' → logprob: -11.125188827514648
    6. '        
' → logprob: -11.375188827514648
    7. '      ' → logprob: -11.625188827514648
    8. '(acc' → logprob: -12.625188827514648
    9. '           ' → logprob: -12.750188827514648
    10. '     ' → logprob: -13.125188827514648

Token 103: ' acc' (ID: 1259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15844455361366272
    2. '           ' → logprob: -2.65844464302063
    3. ' acc' → logprob: -2.65844464302063
    4. 'acc' (adapté à ' acc') → logprob: -5.408444404602051
    5. '   ' → logprob: -6.533444404602051
    6. '
' → logprob: -9.03344440460205
    7. '      ' → logprob: -9.65844440460205
    8. '	acc' → logprob: -9.65844440460205
    9. '               ' → logprob: -9.90844440460205
    10. '        ' → logprob: -9.90844440460205

Token 104: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.143501877784729
    2. ' +=' → logprob: -2.0185017585754395
    3. '   ' → logprob: -7.3935017585754395
    4. '+=(' → logprob: -8.768502235412598
    5. '+' → logprob: -10.393502235412598
    6. ']+=' → logprob: -11.018502235412598
    7. '+='' → logprob: -12.393502235412598
    8. '+="' → logprob: -13.393502235412598
    9. 'abs' → logprob: -14.268502235412598
    10. '    ' → logprob: -14.643502235412598

Token 105: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04717693850398064
    2. ' abs' → logprob: -3.7971768379211426
    3. '(abs' → logprob: -3.7971768379211426
    4. '(x' → logprob: -6.797176837921143
    5. ' (' → logprob: -9.4221773147583
    6. '   ' → logprob: -11.2971773147583
    7. ' ' → logprob: -13.5471773147583
    8. 'x' → logprob: -14.6721773147583
    9. '.abs' → logprob: -14.7971773147583
    10. '_abs' → logprob: -15.2971773147583

Token 106: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018308086320757866
    2. '(val' → logprob: -4.018308162689209
    3. '(' → logprob: -8.76830768585205
    4. 'val' → logprob: -13.26830768585205
    5. 'x' → logprob: -14.39330768585205
    6. ' val' → logprob: -15.14330768585205
    7. ',val' → logprob: -18.018308639526367
    8. ' (' → logprob: -18.143308639526367
    9. '(value' → logprob: -18.143308639526367
    10. '((' → logprob: -18.393308639526367

Token 107: '-val' (ID: 105810)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5890848636627197
    2. '-val' → logprob: -0.8390848636627197
    3. '-' → logprob: -4.339084625244141
    4. '-Val' → logprob: -12.58908462524414
    5. ' ' → logprob: -12.71408462524414
    6. '   ' → logprob: -13.33908462524414
    7. ' val' → logprob: -13.58908462524414
    8. 'val' → logprob: -14.46408462524414
    9. '  ' → logprob: -15.33908462524414
    10. '-x' → logprob: -15.46408462524414

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -10.750027656555176
    3. '))' → logprob: -12.500027656555176
    4. ' )' → logprob: -13.750027656555176
    5. ')
' → logprob: -14.875027656555176
    6. ')

' → logprob: -15.500027656555176
    7. ')`' → logprob: -15.625027656555176
    8. '   ' → logprob: -16.12502670288086
    9. ')#' → logprob: -16.87502670288086
    10. '())' → logprob: -16.87502670288086

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18626530468463898
    2. 'results' → logprob: -1.9362653493881226
    3. ' results' → logprob: -3.686265230178833
    4. '
' → logprob: -8.686264991760254
    5. '	results' → logprob: -8.686264991760254
    6. '    
' → logprob: -8.936264991760254
    7. ')' → logprob: -9.311264991760254
    8. '(results' → logprob: -10.811264991760254
    9. '.results' → logprob: -11.436264991760254
    10. '```' → logprob: -11.811264991760254

Token 110: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.3145036995410919
    2. ' results' → logprob: -1.3145036697387695
    3. '
' → logprob: -7.0645036697387695
    4. '   ' → logprob: -7.9395036697387695
    5. '	results' → logprob: -10.93950366973877
    6. '(results' → logprob: -12.31450366973877
    7. '.results' → logprob: -12.93950366973877
    8. '    
' → logprob: -13.43950366973877
    9. ' ' → logprob: -13.68950366973877
    10. '
' → logprob: -13.93950366973877

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009132515988312662
    2. '.' → logprob: -7.000913143157959
    3. '.app' → logprob: -14.125913619995117
    4. ' .' → logprob: -14.750913619995117
    5. '.ap' → logprob: -14.875913619995117
    6. '.push' → logprob: -16.000913619995117
    7. 'append' → logprob: -16.500913619995117
    8. '.Append' → logprob: -16.625913619995117
    9. '.extend' → logprob: -17.125913619995117
    10. ').' → logprob: -18.000913619995117

Token 112: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -5.5577775128767826e-06
    2. 'acc' → logprob: -13.250005722045898
    3. '(' → logprob: -13.375005722045898
    4. '((' → logprob: -13.500005722045898
    5. '(ac' → logprob: -14.500005722045898
    6. '(abs' → logprob: -15.625005722045898
    7. ' acc' → logprob: -19.0000057220459
    8. '(a' → logprob: -19.1250057220459
    9. '	acc' → logprob: -19.5000057220459
    10. ' (' → logprob: -19.6250057220459

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -14.000005722045898
    4. '))' → logprob: -16.5000057220459
    5. ')return' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.8750057220459
    7. ')`' → logprob: -18.2500057220459
    8. ')
' → logprob: -18.2500057220459
    9. ')

' → logprob: -18.3750057220459
    10. ')#' → logprob: -19.0000057220459

Token 114: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5597102396423e-05
    2. 'min' → logprob: -10.500035285949707
    3. 'best' → logprob: -12.750035285949707
    4. 'results' → logprob: -13.375035285949707
    5. 'result' → logprob: -14.125035285949707
    6. '#print' → logprob: -14.625035285949707
    7. '#' → logprob: -14.875035285949707
    8. 'ans' → logprob: -14.875035285949707
    9. 'answer' → logprob: -15.000035285949707
    10. ' print' → logprob: -15.125035285949707

Token 115: ' Just' (ID: 6214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006807420286349952
    2. 'min' → logprob: -8.375680923461914
    3. 'best' → logprob: -8.750680923461914
    4. ' print' → logprob: -9.125680923461914
    5. 'ans' → logprob: -10.000680923461914
    6. 'results' → logprob: -10.125680923461914
    7. 'answer' → logprob: -10.625680923461914
    8. 'res' → logprob: -10.875680923461914
    9. 'result' → logprob: -10.875680923461914
    10. 'minimum' → logprob: -11.625680923461914

Token 116: ' take' (ID: 2304)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.375000953674316
    3. '#print' → logprob: -17.0
    4. '#' → logprob: -17.5
    5. 'prin' → logprob: -17.625
    6. 'for' → logprob: -18.125
    7. '
' → logprob: -18.375
    8. 'pr' → logprob: -18.5
    9. '```' → logprob: -19.875
    10. 'prints' → logprob: -20.5

Token 117: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006825128570199013
    2. 'print' → logprob: -5.006824970245361
    3. 'results' → logprob: -9.75682544708252
    4. 'str' → logprob: -10.25682544708252
    5. ' min' → logprob: -11.00682544708252
    6. '(min' → logprob: -16.256824493408203
    7. '=min' → logprob: -17.131824493408203
    8. ' print' → logprob: -17.506824493408203
    9. 'minimum' → logprob: -17.756824493408203
    10. 'result' → logprob: -18.381824493408203

Token 118: ' smallest' (ID: 42173)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0003037650021724403
    2. 'results' → logprob: -8.375304222106934
    3. ' min' → logprob: -9.875304222106934
    4. 'print' → logprob: -11.250304222106934
    5. 'str' → logprob: -11.875304222106934
    6. 'minimum' → logprob: -14.375304222106934
    7. '(min' → logprob: -15.000304222106934
    8. 'result' → logprob: -15.625304222106934
    9. '[min' → logprob: -15.750304222106934
    10. ' results' → logprob: -16.375303268432617

Token 119: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003660938236862421
    2. 'result' → logprob: -8.2503662109375
    3. 'answer' → logprob: -10.1253662109375
    4. 'results' → logprob: -10.3753662109375
    5. ' print' → logprob: -10.6253662109375
    6. 'res' → logprob: -12.6253662109375
    7. 'ans' → logprob: -12.8753662109375
    8. '
' → logprob: -13.8753662109375
    9. 'output' → logprob: -14.5003662109375
    10. '```' → logprob: -14.8753662109375

Token 120: ' easy' (ID: 4224)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.9153885558771435e-06
    2. 'min' → logprob: -13.375005722045898
    3. ' print' → logprob: -13.500005722045898
    4. 'result' → logprob: -13.875005722045898
    5. '
' → logprob: -14.125005722045898
    6. 'answer' → logprob: -15.000005722045898
    7. 'ans' → logprob: -15.000005722045898
    8. '```' → logprob: -15.500005722045898
    9. '#print' → logprob: -16.0000057220459
    10. 'best' → logprob: -16.1250057220459

Token 121: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.117345684382599e-05
    2. ' print' → logprob: -11.375020980834961
    3. '
' → logprob: -12.500020980834961
    4. 'result' → logprob: -12.875020980834961
    5. '```' → logprob: -13.000020980834961
    6. 'answer' → logprob: -14.750020980834961
    7. 'results' → logprob: -15.500020980834961
    8. 'min' → logprob: -15.500020980834961
    9. 'ans' → logprob: -16.62502098083496
    10. '#print' → logprob: -17.12502098083496

Token 122: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -15.000000953674316
    3. '```' → logprob: -15.125000953674316
    4. 'min' → logprob: -16.25
    5. 'result' → logprob: -16.375
    6. '
' → logprob: -17.125
    7. 'answer' → logprob: -17.625
    8. '#print' → logprob: -18.0
    9. 'ans' → logprob: -18.625
    10. 'return' → logprob: -19.25

Token 123: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -9.615255839889869e-05
    2. '(' → logprob: -9.250096321105957
    3. 'min' → logprob: -17.50009536743164
    4. '(sorted' → logprob: -18.50009536743164
    5. ' (' → logprob: -19.00009536743164
    6. '(max' → logprob: -19.87509536743164
    7. ' min' → logprob: -20.00009536743164
    8. '=min' → logprob: -20.50009536743164
    9. '(
' → logprob: -20.62509536743164
    10. '(round' → logprob: -21.50009536743164

Token 124: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'results' → logprob: -17.000001907348633
    4. ' (' → logprob: -17.000001907348633
    5. ' results' → logprob: -19.625001907348633
    6. '(res' → logprob: -19.875001907348633
    7. '	results' → logprob: -20.125001907348633
    8. '(result' → logprob: -20.250001907348633
    9. ')' → logprob: -21.000001907348633
    10. '(values' → logprob: -21.250001907348633

Token 125: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16022604703903198
    2. ')' → logprob: -1.9102261066436768
    3. ')))' → logprob: -13.660225868225098
    4. ' )' → logprob: -16.035226821899414
    5. '())' → logprob: -16.035226821899414
    6. ')
' → logprob: -16.160226821899414
    7. '))
' → logprob: -16.160226821899414
    8. ' ))' → logprob: -16.535226821899414
    9. ')}' → logprob: -16.785226821899414
    10. '()))' → logprob: -16.910226821899414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 78
Précision stricte (1ère position): 31.71%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 63.41%
================================================================================
