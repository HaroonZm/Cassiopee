================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir deux entiers séparés par un espace, ce qui représente la hauteur (H) et la largeur (W) de la grille
# input() prend tout ce qui est entré par l'utilisateur au clavier, et .split() divise cette chaîne autour des espaces pour obtenir une liste de deux éléments
# map(int, ...) applique la fonction int à chaque élément de cette liste, transformant les chaînes de caractères en entiers
# Les deux entiers sont ensuite respectivement stockés dans les variables H et W
H, W = map(int, input().split())

# Créer une liste vide 'a' qui va contenir les lignes de la grille
a = []

# Utiliser une boucle for pour parcourir chaque ligne de la grille. La variable 'i' prend les valeurs de 0 jusqu'à H-1 inclus
for i in range(H):
    # Pour chaque itération, lire une ligne d'entrée contenant W entiers séparés par des espaces
    # input() obtient la chaîne, .split() la divise autour des espaces
    # map(int, ...) convertit chaque valeur en entier
    # list(...) transforme le résultat en une liste d'entiers
    # Cette liste de W entiers est ajoutée à la liste 'a', qui devient une liste de listes (matrice)
    a.append(list(map(int, input().split())))

# Créer une liste vide 'move' qui va enregistrer les mouvements effectués
move = []

# Parcourir chaque case de la matrice 'a' à l'aide de deux boucles imbriquées
# La première boucle parcourt les lignes avec l'indice 'i', de 0 à H-1
for i in range(H):
    # La seconde boucle parcourt les colonnes avec l'indice 'j', de 0 à W-1
    for j in range(W):
        # Vérifier si la valeur actuelle a[i][j] est impaire
        # Le nombre est impair si le reste de la division par 2 (modulo) est égal à 1
        if a[i][j] % 2 == 1:
            # Si la colonne actuelle n'est pas la dernière colonne (colonne d'indice W-1)
            if j < W-1:
                # Ajouter à la liste 'move' le mouvement sous forme de liste [i, j, i, j+1],
                # c'est-à-dire un déplacement d'une pièce de (i, j) à (i, j+1)
                move.append([i, j, i, j+1])
                # Incrémenter la valeur de la case à droite (a[i][j+1]) de 1
                # Cela simule le transfert de l'objet impair vers la case de droite
                a[i][j+1] += 1
            # Si nous sommes dans la dernière colonne et que nous ne sommes pas à la dernière ligne
            elif i < H-1:
                # Ajouter à la liste 'move' un mouvement vers la case du dessous ([i, j, i+1, j])
                move.append([i, j, i+1, j])
                # Incrémenter la valeur de la case du dessous (a[i+1][j]) de 1
                a[i+1][j] += 1
        # Si la case a[i][j] est paire ou qu'aucun déplacement n'est possible, rien n'est fait

# Afficher le nombre total de mouvements réalisés
# len(move) donne la longueur de la liste 'move', soit le nombre de déplacements enregistrés
print(len(move))

# Parcourir tous les mouvements enregistrés dans la liste 'move'
# Pour chaque mouvement, décomposer les coordonnées stockées dans la liste en quatre variables : x, y, x2, y2
for x, y, x2, y2 in move:
    # Ajouter 1 à chaque coordonnée pour convertir de l'indexation à partir de 0 (commune en Python)
    # vers l'indexation à partir de 1 (souvent demandée dans les problèmes d'entrée/sortie ou pour être plus lisible)
    # Afficher les quatre valeurs correspondantes à ce déplacement
    print(x+1, y+1, x2+1, y2+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10969100892543793
    2. ' ' → logprob: -2.8596909046173096
    3. ':' → logprob: -4.234691143035889
    4. '```' → logprob: -4.984691143035889
    5. ' à' → logprob: -5.484691143035889
    6. ''' → logprob: -5.484691143035889
    7. ' d' → logprob: -6.109691143035889
    8. ' de' → logprob: -6.359691143035889
    9. ' a' → logprob: -6.609691143035889
    10. 's' → logprob: -6.609691143035889

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004316418431699276
    2. ' l' → logprob: -5.754316329956055
    3. 'user' → logprob: -7.129316329956055
    4. 'util' → logprob: -8.379316329956055
    5. '#' → logprob: -10.129316329956055
    6. 'un' → logprob: -10.879316329956055
    7. 'la' → logprob: -11.379316329956055
    8. 'le' → logprob: -12.004316329956055
    9. ' user' → logprob: -12.004316329956055
    10. ' ' → logprob: -12.629316329956055

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029748797416687
    2. ''utilisateur' → logprob: -0.9279748797416687
    3. ' utilisateur' → logprob: -2.5529749393463135
    4. 'u' → logprob: -3.0529749393463135
    5. '’utilisateur' → logprob: -3.8029749393463135
    6. 'a' → logprob: -5.302974700927734
    7. '_util' → logprob: -6.552974700927734
    8. 'user' → logprob: -7.427974700927734
    9. ''' → logprob: -7.552974700927734
    10. ' user' → logprob: -8.427974700927734

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9538620114326477
    2. ' ' → logprob: -1.703861951828003
    3. 's' → logprob: -1.953861951828003
    4. 'input' → logprob: -2.453861951828003
    5. 'name' → logprob: -3.578861951828003
    6. '=' → logprob: -3.953861951828003
    7. ' =' → logprob: -4.203862190246582
    8. '=input' → logprob: -4.453862190246582
    9. ',' → logprob: -4.703862190246582
    10. '#' → logprob: -4.828862190246582

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05577504262328148
    2. ' saisir' → logprob: -3.6807749271392822
    3. 'entr' → logprob: -3.9307749271392822
    4. 'r' → logprob: -5.055775165557861
    5. ' entrer' → logprob: -7.055775165557861
    6. '```' → logprob: -7.305775165557861
    7. 'entrée' → logprob: -8.180774688720703
    8. 'contin' → logprob: -8.680774688720703
    9. '#' → logprob: -9.055774688720703
    10. 'ent' → logprob: -9.180774688720703

Token 8: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2564012110233307
    2. '_' → logprob: -1.5064011812210083
    3. ''' → logprob: -6.631401062011719
    4. 'u' → logprob: -6.881401062011719
    5. 's' → logprob: -7.631401062011719
    6. '`' → logprob: -8.756401062011719
    7. ' un' → logprob: -8.881401062011719
    8. ' ' → logprob: -8.881401062011719
    9. '```' → logprob: -9.256401062011719
    10. '#' → logprob: -9.256401062011719

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48528656363487244
    2. ' espaces' → logprob: -1.1102865934371948
    3. 's' → logprob: -3.8602864742279053
    4. ' mots' → logprob: -4.485286712646484
    5. ' espace' → logprob: -5.860286712646484
    6. '_' → logprob: -6.110286712646484
    7. 'r' → logprob: -6.485286712646484
    8. 'n' → logprob: -6.735286712646484
    9. ' lignes' → logprob: -6.735286712646484
    10. ' ' → logprob: -6.735286712646484

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013255871832370758
    2. 'i' → logprob: -4.763256072998047
    3. 'ières' → logprob: -6.388256072998047
    4. 'r' → logprob: -7.013256072998047
    5. 'rs' → logprob: -7.013256072998047
    6. '```' → logprob: -7.388256072998047
    7. 'ié' → logprob: -8.513256072998047
    8. 'ier' → logprob: -9.763256072998047
    9. 'ri' → logprob: -9.888256072998047
    10. 'î' → logprob: -10.138256072998047

Token 11: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3497207462787628
    2. 'a' → logprob: -1.8497207164764404
    3. '\n' → logprob: -2.3497207164764404
    4. 'x' → logprob: -3.4747207164764404
    5. '\' → logprob: -4.9747209548950195
    6. 'e' → logprob: -6.9747209548950195
    7. 'ent' → logprob: -7.3497209548950195
    8. '#' → logprob: -7.4747209548950195
    9. '```' → logprob: -7.8497209548950195
    10. 'nombre' → logprob: -8.09972095489502

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002006791764870286
    2. 'é' → logprob: -6.252007007598877
    3. '```' → logprob: -10.627006530761719
    4. 'es' → logprob: -10.752006530761719
    5. 'er' → logprob: -11.252006530761719
    6. 'ès' → logprob: -11.877006530761719
    7. 'ément' → logprob: -12.627006530761719
    8. 'ées' → logprob: -12.627006530761719
    9. '#' → logprob: -13.502006530761719
    10. 's' → logprob: -14.002006530761719

Token 13: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.428678423166275
    2. 's' → logprob: -1.9286783933639526
    3. 'par' → logprob: -2.428678512573242
    4. ' par' → logprob: -2.678678512573242
    5. 'e' → logprob: -3.678678512573242
    6. ' ' → logprob: -4.553678512573242
    7. '_' → logprob: -6.303678512573242
    8. 'space' → logprob: -6.928678512573242
    9. '```' → logprob: -7.053678512573242
    10. ' d' → logprob: -7.053678512573242

Token 14: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.45945125818252563
    2. 'une' → logprob: -1.4594511985778809
    3. ' un' → logprob: -2.209451198577881
    4. ''un' → logprob: -4.959451198577881
    5. ' une' → logprob: -5.209451198577881
    6. 'space' → logprob: -5.709451198577881
    7. '```' → logprob: -6.459451198577881
    8. 'es' → logprob: -6.584451198577881
    9. ' ' → logprob: -6.959451198577881
    10. 'a' → logprob: -6.959451198577881

Token 15: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.1814437061548233
    2. ' espace' → logprob: -2.181443691253662
    3. ''espace' → logprob: -3.306443691253662
    4. 'esp' → logprob: -4.556443691253662
    5. 'space' → logprob: -6.056443691253662
    6. 'e' → logprob: -7.306443691253662
    7. '```' → logprob: -7.431443691253662
    8. '’espace' → logprob: -7.556443691253662
    9. ''esp' → logprob: -7.806443691253662
    10. ',' → logprob: -8.30644416809082

Token 16: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7605418562889099
    2. 'input' → logprob: -2.0105419158935547
    3. 'i' → logprob: -2.1355419158935547
    4. 'e' → logprob: -2.1355419158935547
    5. 'u' → logprob: -3.0105419158935547
    6. 'x' → logprob: -3.0105419158935547
    7. 'user' → logprob: -3.5105419158935547
    8. 'a' → logprob: -5.135541915893555
    9. 'v' → logprob: -5.135541915893555
    10. 'ent' → logprob: -5.135541915893555

Token 17: ' ce' (ID: 2357)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8523726463317871
    2. ' ' → logprob: -1.227372646331787
    3. 'x' → logprob: -3.227372646331787
    4. 'e' → logprob: -3.352372646331787
    5. ' input' → logprob: -3.352372646331787
    6. 'n' → logprob: -3.352372646331787
    7. 'i' → logprob: -3.602372646331787
    8. 's' → logprob: -3.852372646331787
    9. 'a' → logprob: -4.102372646331787
    10. ' i' → logprob: -4.352372646331787

Token 18: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5745574831962585
    2. 'n' → logprob: -1.5745575428009033
    3. 's' → logprob: -1.5745575428009033
    4. 'u' → logprob: -5.574557304382324
    5. ''' → logprob: -5.824557304382324
    6. ' n' → logprob: -6.074557304382324
    7. 'ux' → logprob: -6.324557304382324
    8. '=' → logprob: -6.449557304382324
    9. 'x' → logprob: -6.449557304382324
    10. ' =' → logprob: -6.824557304382324

Token 19: ' représente' (ID: 88912)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43369561433792114
    2. 's' → logprob: -1.6836955547332764
    3. ''' → logprob: -2.1836955547332764
    4. ' sera' → logprob: -4.6836957931518555
    5. ' permet' → logprob: -5.1836957931518555
    6. '"' → logprob: -5.4336957931518555
    7. 'n' → logprob: -5.5586957931518555
    8. ' '' → logprob: -5.6836957931518555
    9. '_' → logprob: -5.8086957931518555
    10. 'space' → logprob: -6.0586957931518555

Token 20: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9821999073028564
    2. ' le' → logprob: -2.4821999073028564
    3. ' ' → logprob: -2.6071999073028564
    4. ' deux' → logprob: -2.7321999073028564
    5. 'le' → logprob: -2.8571999073028564
    6. ' une' → logprob: -2.9821999073028564
    7. ' l' → logprob: -3.3571999073028564
    8. ' les' → logprob: -3.3571999073028564
    9. ' un' → logprob: -3.3571999073028564
    10. 'l' → logprob: -3.6071999073028564

Token 21: ' hauteur' (ID: 72987)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0069416761398315
    2. ' nombre' → logprob: -1.0069416761398315
    3. 'nombre' → logprob: -2.506941795349121
    4. 'n' → logprob: -2.631941795349121
    5. ' nombres' → logprob: -3.381941795349121
    6. ' premier' → logprob: -3.631941795349121
    7. 'a' → logprob: -4.631941795349121
    8. ' ' → logprob: -4.631941795349121
    9. ' n' → logprob: -5.756941795349121
    10. 'de' → logprob: -6.131941795349121

Token 22: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10236749798059464
    2. 's' → logprob: -2.977367401123047
    3. ',' → logprob: -3.977367401123047
    4. '_' → logprob: -5.227367401123047
    5. ' ,' → logprob: -5.227367401123047
    6. ''' → logprob: -5.352367401123047
    7. ':' → logprob: -6.602367401123047
    8. '.' → logprob: -6.727367401123047
    9. 'e' → logprob: -6.852367401123047
    10. ' :' → logprob: -6.977367401123047

Token 23: 'H' (ID: 39)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022819919511675835
    2. ' )' → logprob: -3.897819995880127
    3. ' ' → logprob: -7.272819995880127
    4. 's' → logprob: -7.772819995880127
    5. 'd' → logprob: -8.397819519042969
    6. ',' → logprob: -8.397819519042969
    7. ' de' → logprob: -8.522819519042969
    8. ' d' → logprob: -9.022819519042969
    9. 'de' → logprob: -9.522819519042969
    10. ')d' → logprob: -9.647819519042969

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13655586540699005
    2. ' )' → logprob: -2.1365559101104736
    3. 'e' → logprob: -5.6365556716918945
    4. ',' → logprob: -6.2615556716918945
    5. ' ' → logprob: -6.3865556716918945
    6. 's' → logprob: -6.7615556716918945
    7. 'a' → logprob: -8.511555671691895
    8. ' ,' → logprob: -8.636555671691895
    9. '_' → logprob: -9.011555671691895
    10. '),' → logprob: -9.136555671691895

Token 25: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29559916257858276
    2. ',' → logprob: -1.7955992221832275
    3. ' ,' → logprob: -3.5455992221832275
    4. 's' → logprob: -3.9205992221832275
    5. ')' → logprob: -4.420598983764648
    6. '_' → logprob: -4.920598983764648
    7. ' )' → logprob: -4.920598983764648
    8. 'e' → logprob: -5.545598983764648
    9. '.' → logprob: -6.045598983764648
    10. '=' → logprob: -6.420598983764648

Token 26: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5259296298027039
    2. 'la' → logprob: -1.0259296894073486
    3. 'l' → logprob: -3.5259296894073486
    4. ' l' → logprob: -4.6509294509887695
    5. ' largeur' → logprob: -5.0259294509887695
    6. 'large' → logprob: -6.6509294509887695
    7. 'le' → logprob: -7.2759294509887695
    8. 'larg' → logprob: -7.5259294509887695
    9. ' ' → logprob: -7.6509294509887695
    10. 'lar' → logprob: -8.27592945098877

Token 27: ' largeur' (ID: 180807)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32010775804519653
    2. 'large' → logprob: -1.3201076984405518
    3. ' largeur' → logprob: -6.945107936859131
    4. 'L' → logprob: -7.070107936859131
    5. '```' → logprob: -7.070107936859131
    6. 'larg' → logprob: -7.445107936859131
    7. '`' → logprob: -7.570107936859131
    8. ''' → logprob: -7.820107936859131
    9. 'Large' → logprob: -7.820107936859131
    10. 'lar' → logprob: -8.070107460021973

Token 28: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34278592467308044
    2. 's' → logprob: -2.3427858352661133
    3. ',' → logprob: -2.4677858352661133
    4. '.' → logprob: -3.4677858352661133
    5. ' ,' → logprob: -4.217785835266113
    6. ')' → logprob: -4.467785835266113
    7. ' de' → logprob: -4.967785835266113
    8. '_' → logprob: -4.967785835266113
    9. ' =' → logprob: -5.342785835266113
    10. ' )' → logprob: -5.467785835266113

Token 29: 'W' (ID: 54)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06104816496372223
    2. ' )' → logprob: -3.0610482692718506
    3. ' ' → logprob: -5.0610480308532715
    4. 'd' → logprob: -5.9360480308532715
    5. '(' → logprob: -6.5610480308532715
    6. '_' → logprob: -6.8110480308532715
    7. ',' → logprob: -8.31104850769043
    8. 's' → logprob: -8.81104850769043
    9. ' d' → logprob: -9.06104850769043
    10. ')d' → logprob: -9.68604850769043

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013603554107248783
    2. '):' → logprob: -7.7513604164123535
    3. '#' → logprob: -8.126359939575195
    4. ',' → logprob: -8.251359939575195
    5. ':' → logprob: -9.001359939575195
    6. ' )' → logprob: -9.626359939575195
    7. '')' → logprob: -10.001359939575195
    8. '_' → logprob: -10.751359939575195
    9. ')#' → logprob: -10.876359939575195
    10. 's' → logprob: -11.501359939575195

Token 31: ' de' (ID: 334)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0657671689987183
    2. 'i' → logprob: -1.1907671689987183
    3. 'x' → logprob: -2.065767288208008
    4. 'n' → logprob: -2.940767288208008
    5. 'H' → logprob: -3.190767288208008
    6. 'e' → logprob: -3.190767288208008
    7. ' ' → logprob: -3.690767288208008
    8. '_' → logprob: -4.190767288208008
    9. '#' → logprob: -4.815767288208008
    10. 'v' → logprob: -4.940767288208008

Token 32: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12992006540298462
    2. ''' → logprob: -2.37992000579834
    3. 'l' → logprob: -3.87992000579834
    4. ' ' → logprob: -6.12992000579834
    5. 'u' → logprob: -6.50492000579834
    6. ' l' → logprob: -6.62992000579834
    7. '"' → logprob: -6.87992000579834
    8. '`' → logprob: -7.87992000579834
    9. ' la' → logprob: -8.12992000579834
    10. '_' → logprob: -8.25492000579834

Token 33: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001707540825009346
    2. ''' → logprob: -7.626707553863525
    3. ' \' → logprob: -8.751707077026367
    4. ' ' → logprob: -8.751707077026367
    5. 'n' → logprob: -9.126707077026367
    6. 'm' → logprob: -9.501707077026367
    7. 'l' → logprob: -9.751707077026367
    8. '\' → logprob: -9.751707077026367
    9. '  ' → logprob: -9.751707077026367
    10. '\n' → logprob: -10.001707077026367

Token 34: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2088969945907593
    2. 'h' → logprob: -1.4588969945907593
    3. 'H' → logprob: -1.7088969945907593
    4. 'e' → logprob: -2.833897113800049
    5. 'x' → logprob: -2.833897113800049
    6. '#' → logprob: -2.833897113800049
    7. 'n' → logprob: -3.333897113800049
    8. ' ' → logprob: -4.208897113800049
    9. 'v' → logprob: -4.583897113800049
    10. 't' → logprob: -4.708897113800049

Token 35: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.31237247586250305
    2. 'h' → logprob: -1.5623724460601807
    3. '#' → logprob: -4.18737268447876
    4. '\' → logprob: -4.81237268447876
    5. 'i' → logprob: -4.93737268447876
    6. 'x' → logprob: -5.18737268447876
    7. 'n' → logprob: -5.18737268447876
    8. '\n' → logprob: -5.81237268447876
    9. 'e' → logprob: -5.93737268447876
    10. 'u' → logprob: -6.56237268447876

Token 36: ' input' (ID: 3422)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.684510350227356
    2. 'h' → logprob: -1.809510350227356
    3. 'i' → logprob: -1.934510350227356
    4. '#' → logprob: -3.1845102310180664
    5. 'e' → logprob: -3.3095102310180664
    6. 'u' → logprob: -3.4345102310180664
    7. ' ' → logprob: -3.5595102310180664
    8. 'n' → logprob: -4.309510231018066
    9. 's' → logprob: -5.309510231018066
    10. 'x' → logprob: -5.434510231018066

Token 37: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4403245449066162
    2. ' ' → logprob: -1.5653245449066162
    3. 's' → logprob: -3.315324544906616
    4. ' =' → logprob: -3.565324544906616
    5. '_' → logprob: -4.565324783325195
    6. 'h' → logprob: -4.565324783325195
    7. 'x' → logprob: -5.065324783325195
    8. ':' → logprob: -5.065324783325195
    9. 'i' → logprob: -5.065324783325195
    10. 'e' → logprob: -5.315324783325195

Token 38: ' prend' (ID: 37463)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5961731672286987
    2. 'H' → logprob: -2.0961732864379883
    3. 'e' → logprob: -2.4711732864379883
    4. ' ' → logprob: -2.4711732864379883
    5. 'x' → logprob: -3.0961732864379883
    6. 'i' → logprob: -3.7211732864379883
    7. 'u' → logprob: -4.346173286437988
    8. '#' → logprob: -4.346173286437988
    9. 't' → logprob: -4.971173286437988
    10. 'n' → logprob: -5.096173286437988

Token 39: ' tout' (ID: 5501)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7659516334533691
    2. ' ' → logprob: -1.7659516334533691
    3. ' la' → logprob: -2.390951633453369
    4. ' l' → logprob: -2.390951633453369
    5. ' un' → logprob: -2.515951633453369
    6. ' en' → logprob: -3.890951633453369
    7. 'l' → logprob: -4.015951633453369
    8. 's' → logprob: -4.390951633453369
    9. 'ent' → logprob: -4.890951633453369
    10. 'une' → logprob: -5.015951633453369

Token 40: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5092747807502747
    2. '(' → logprob: -1.8842747211456299
    3. 's' → logprob: -2.75927472114563
    4. ''' → logprob: -3.25927472114563
    5. '"' → logprob: -3.75927472114563
    6. ',' → logprob: -3.75927472114563
    7. ')' → logprob: -4.009274959564209
    8. ' (' → logprob: -4.134274959564209
    9. '#' → logprob: -4.384274959564209
    10. '_' → logprob: -5.134274959564209

Token 41: ' qui' (ID: 2780)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5519939661026001
    2. ' qui' → logprob: -1.6769939661026
    3. 'qui' → logprob: -1.8019939661026
    4. 's' → logprob: -3.6769938468933105
    5. 'n' → logprob: -3.9269938468933105
    6. 'que' → logprob: -4.3019938468933105
    7. '#' → logprob: -5.5519938468933105
    8. ' qu' → logprob: -5.8019938468933105
    9. 'u' → logprob: -6.1769938468933105
    10. 'l' → logprob: -7.1769938468933105

Token 42: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5565625429153442
    2. ' est' → logprob: -1.0565625429153442
    3. 'est' → logprob: -3.5565624237060547
    4. '_' → logprob: -4.056562423706055
    5. ' a' → logprob: -4.806562423706055
    6. 'n' → logprob: -5.431562423706055
    7. 'es' → logprob: -5.806562423706055
    8. ' ' → logprob: -5.931562423706055
    9. ' s' → logprob: -6.056562423706055
    10. 'l' → logprob: -6.306562423706055

Token 43: ' entr' (ID: 7072)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7157049179077148
    2. ' sa' → logprob: -0.9657049179077148
    3. ' entr' → logprob: -2.715704917907715
    4. 'entr' → logprob: -3.590704917907715
    5. 'sa' → logprob: -4.215704917907715
    6. 'r' → logprob: -4.840704917907715
    7. 'entrée' → logprob: -5.590704917907715
    8. ' sais' → logprob: -5.840704917907715
    9. 'l' → logprob: -6.715704917907715
    10. 'f' → logprob: -7.090704917907715

Token 44: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.017232678830623627
    2. 'ée' → logprob: -4.142232894897461
    3. 'er' → logprob: -7.017232894897461
    4. 'ées' → logprob: -8.892232894897461
    5. 'e' → logprob: -9.267232894897461
    6. 'és' → logprob: -10.517232894897461
    7. 'ed' → logprob: -11.267232894897461
    8. 'y' → logprob: -12.517232894897461
    9. ' é' → logprob: -12.517232894897461
    10. '```' → logprob: -12.767232894897461

Token 45: ' par' (ID: 686)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8050081133842468
    2. 'h' → logprob: -1.0550081729888916
    3. 'u' → logprob: -3.1800081729888916
    4. '#' → logprob: -3.1800081729888916
    5. ' ' → logprob: -3.3050081729888916
    6. 'e' → logprob: -4.0550079345703125
    7. 'x' → logprob: -4.3050079345703125
    8. 'i' → logprob: -4.5550079345703125
    9. 'n' → logprob: -4.5550079345703125
    10. 't' → logprob: -5.4300079345703125

Token 46: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.28242266178131104
    2. ' l' → logprob: -1.407422661781311
    3. '	l' → logprob: -6.9074225425720215
    4. 'util' → logprob: -9.78242301940918
    5. ' utilisateur' → logprob: -10.28242301940918
    6. ''utilisateur' → logprob: -10.65742301940918
    7. 'user' → logprob: -10.65742301940918
    8. ' lâ' → logprob: -10.65742301940918
    9. 'u' → logprob: -10.90742301940918
    10. ' ' → logprob: -10.90742301940918

Token 47: ''utilisateur' (ID: 140803)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7907667756080627
    2. ''utilisateur' → logprob: -1.165766716003418
    3. ''u' → logprob: -2.165766716003418
    4. 'u' → logprob: -2.165766716003418
    5. ''util' → logprob: -5.790766716003418
    6. '')' → logprob: -7.415766716003418
    7. 'a' → logprob: -7.790766716003418
    8. ''us' → logprob: -8.165766716003418
    9. ''user' → logprob: -8.415766716003418
    10. '’utilisateur' → logprob: -8.665766716003418

Token 48: ' au' (ID: 2791)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.531574547290802
    2. 'h' → logprob: -1.2815744876861572
    3. '#' → logprob: -3.0315744876861572
    4. 'u' → logprob: -3.7815744876861572
    5. 'e' → logprob: -4.406574726104736
    6. 'x' → logprob: -4.531574726104736
    7. 'i' → logprob: -5.031574726104736
    8. 'n' → logprob: -5.531574726104736
    9. 't' → logprob: -5.531574726104736
    10. 'en' → logprob: -5.781574726104736

Token 49: ' clavier' (ID: 187878)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.7400094866752625
    2. ' clavier' → logprob: -0.7400094866752625
    3. 'format' → logprob: -4.365009307861328
    4. 'keyboard' → logprob: -4.990009307861328
    5. 't' → logprob: -5.115009307861328
    6. 'n' → logprob: -6.115009307861328
    7. 'niveau' → logprob: -6.115009307861328
    8. 'input' → logprob: -6.240009307861328
    9. 'pass' → logprob: -6.365009307861328
    10. 'c' → logprob: -6.490009307861328

Token 50: ',' (ID: 11)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.44411495327949524
    2. 'h' → logprob: -1.5691149234771729
    3. '#' → logprob: -2.819114923477173
    4. 'u' → logprob: -3.069114923477173
    5. 'x' → logprob: -4.944115161895752
    6. 'e' → logprob: -4.944115161895752
    7. 'i' → logprob: -5.444115161895752
    8. 'n' → logprob: -5.694115161895752
    9. 't' → logprob: -5.694115161895752
    10. ' ' → logprob: -6.069115161895752

Token 51: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6350765228271484
    2. 'u' → logprob: -1.7600765228271484
    3. 'H' → logprob: -1.8850765228271484
    4. 'e' → logprob: -2.3850765228271484
    5. 'h' → logprob: -2.5100765228271484
    6. '#' → logprob: -2.8850765228271484
    7. 'i' → logprob: -3.6350765228271484
    8. 'ent' → logprob: -3.7600765228271484
    9. 't' → logprob: -3.8850765228271484
    10. 's' → logprob: -4.010076522827148

Token 52: ' .' (ID: 887)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8370574116706848
    2. 'split' → logprob: -2.08705735206604
    3. ' stock' → logprob: -2.71205735206604
    4. ' retourne' → logprob: -2.96205735206604
    5. 's' → logprob: -3.33705735206604
    6. ' transforme' → logprob: -3.58705735206604
    7. 'convert' → logprob: -3.71205735206604
    8. ' le' → logprob: -3.71205735206604
    9. ' split' → logprob: -3.96205735206604
    10. 'stock' → logprob: -4.087057590484619

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12431735545396805
    2. 's' → logprob: -2.2493174076080322
    3. 'strip' → logprob: -4.874317169189453
    4. 'spl' → logprob: -5.624317169189453
    5. 'sp' → logprob: -8.749317169189453
    6. 'rstrip' → logprob: -11.249317169189453
    7. '```' → logprob: -12.874317169189453
    8. ' split' → logprob: -13.624317169189453
    9. 'replace' → logprob: -13.624317169189453
    10. '.' → logprob: -14.124317169189453

Token 54: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03216139227151871
    2. '()' → logprob: -3.9071614742279053
    3. '('' → logprob: -4.532161235809326
    4. '("("' → logprob: -7.782161235809326
    5. '(
' → logprob: -9.157161712646484
    6. '("' → logprob: -9.407161712646484
    7. ''' → logprob: -9.907161712646484
    8. '(`' → logprob: -11.282161712646484
    9. '().' → logprob: -11.532161712646484
    10. 'u' → logprob: -11.657161712646484

Token 55: ' div' (ID: 4223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4190293252468109
    2. '()' → logprob: -1.1690293550491333
    3. '[' → logprob: -4.794029235839844
    4. ''' → logprob: -5.169029235839844
    5. ')' → logprob: -5.544029235839844
    6. '('' → logprob: -5.919029235839844
    7. '.' → logprob: -6.669029235839844
    8. ' (' → logprob: -6.669029235839844
    9. '().' → logprob: -7.169029235839844
    10. ',' → logprob: -7.294029235839844

Token 56: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.09950403869152069
    2. 'i' → logprob: -3.349503993988037
    3. 'ide' → logprob: -3.849503993988037
    4. '```' → logprob: -4.724503993988037
    5. '#' → logprob: -5.474503993988037
    6. 'u' → logprob: -6.287003993988037
    7. 'iser' → logprob: -6.412003993988037
    8. 'e' → logprob: -6.474503993988037
    9. '1' → logprob: -6.474503993988037
    10. '`' → logprob: -6.849503993988037

Token 57: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13171729445457458
    2. '()' → logprob: -2.3817172050476074
    3. ' ' → logprob: -4.506717205047607
    4. ' (' → logprob: -5.756717205047607
    5. '('' → logprob: -5.756717205047607
    6. 'u' → logprob: -6.006717205047607
    7. ')' → logprob: -6.256717205047607
    8. 'l' → logprob: -6.506717205047607
    9. 's' → logprob: -7.006717205047607
    10. 'input' → logprob: -7.256717205047607

Token 58: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4571478068828583
    2. ' chaîne' → logprob: -1.2071478366851807
    3. ' ligne' → logprob: -4.082147598266602
    4. 'chaine' → logprob: -4.332147598266602
    5. ' chaine' → logprob: -4.457147598266602
    6. 's' → logprob: -4.957147598266602
    7. 'entrée' → logprob: -5.832147598266602
    8. ' )' → logprob: -6.082147598266602
    9. ' string' → logprob: -6.207147598266602
    10. 'ligne' → logprob: -6.457147598266602

Token 59: ' autour' (ID: 39420)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.697540283203125
    2. 'h' → logprob: -0.697540283203125
    3. ',' → logprob: -7.072540283203125
    4. '#' → logprob: -7.072540283203125
    5. 'e' → logprob: -8.072540283203125
    6. 'u' → logprob: -8.197540283203125
    7. '[' → logprob: -8.197540283203125
    8. ':' → logprob: -8.447540283203125
    9. 'x' → logprob: -8.447540283203125
    10. '```' → logprob: -8.697540283203125

Token 60: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.477216362953186
    2. ''' → logprob: -1.602216362953186
    3. '()' → logprob: -1.727216362953186
    4. '(' → logprob: -2.6022162437438965
    5. 'par' → logprob: -2.8522162437438965
    6. 's' → logprob: -3.2272162437438965
    7. '('' → logprob: -3.3522162437438965
    8. ' de' → logprob: -3.7272162437438965
    9. 'au' → logprob: -3.9772162437438965
    10. 'de' → logprob: -3.9772162437438965

Token 61: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6420724987983704
    2. ' espaces' → logprob: -0.8920724987983704
    3. 'es' → logprob: -3.2670724391937256
    4. ''esp' → logprob: -4.392072677612305
    5. ' ' → logprob: -5.267072677612305
    6. ''' → logprob: -5.767072677612305
    7. 'spaces' → logprob: -6.142072677612305
    8. ''espace' → logprob: -7.017072677612305
    9. ' '' → logprob: -7.142072677612305
    10. '"' → logprob: -7.517072677612305

Token 62: ' pour' (ID: 1930)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1431492418050766
    2. 'h' → logprob: -2.0181491374969482
    3. '#' → logprob: -8.643149375915527
    4. ' H' → logprob: -9.518149375915527
    5. '```' → logprob: -9.893149375915527
    6. 'x' → logprob: -10.268149375915527
    7. 'a' → logprob: -10.768149375915527
    8. 'u' → logprob: -11.018149375915527
    9. '`' → logprob: -11.143149375915527
    10. 'n' → logprob: -11.143149375915527

Token 63: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.9095033407211304
    2. ' récupérer' → logprob: -1.9095033407211304
    3. 'r' → logprob: -2.03450345993042
    4. 'ob' → logprob: -2.15950345993042
    5. 'extra' → logprob: -3.15950345993042
    6. ' extra' → logprob: -3.78450345993042
    7. ' créer' → logprob: -3.90950345993042
    8. ' recevoir' → logprob: -4.28450345993042
    9. 'assign' → logprob: -4.65950345993042
    10. ' ' → logprob: -4.90950345993042

Token 64: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3267382383346558
    2. 'l' → logprob: -1.4517382383346558
    3. 'les' → logprob: -1.8267382383346558
    4. 'H' → logprob: -2.5767383575439453
    5. ' H' → logprob: -2.8267383575439453
    6. 'une' → logprob: -3.3267383575439453
    7. 'de' → logprob: -3.4517383575439453
    8. ' la' → logprob: -3.5767383575439453
    9. 'h' → logprob: -3.9517383575439453
    10. 's' → logprob: -4.326738357543945

Token 65: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.740050733089447
    2. 'liste' → logprob: -0.990050733089447
    3. 's' → logprob: -3.740050792694092
    4. '[' → logprob: -3.740050792694092
    5. ' liste' → logprob: -3.990050792694092
    6. 'l' → logprob: -4.115050792694092
    7. 'n' → logprob: -4.240050792694092
    8. '['' → logprob: -4.740050792694092
    9. '[]' → logprob: -4.990050792694092
    10. 'entrée' → logprob: -5.615050792694092

Token 66: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.20287364721298218
    2. 'h' → logprob: -1.702873706817627
    3. '#' → logprob: -7.952873706817627
    4. '```' → logprob: -8.327873229980469
    5. 'x' → logprob: -8.702873229980469
    6. ' H' → logprob: -8.827873229980469
    7. '`' → logprob: -9.077873229980469
    8. '[' → logprob: -9.702873229980469
    9. 'n' → logprob: -9.952873229980469
    10. 'u' → logprob: -10.077873229980469

Token 67: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.7081005573272705
    2. 'chain' → logprob: -1.8331005573272705
    3. 'strings' → logprob: -2.3331005573272705
    4. 'ent' → logprob: -2.3331005573272705
    5. 'm' → logprob: -2.4581005573272705
    6. 'car' → logprob: -2.5831005573272705
    7. 'n' → logprob: -2.9581005573272705
    8. 'tokens' → logprob: -2.9581005573272705
    9. 'chaine' → logprob: -3.0831005573272705
    10. 'l' → logprob: -3.0831005573272705

Token 68: ' éléments' (ID: 57375)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.14152389764785767
    2. 'n' → logprob: -2.516523838043213
    3. ' ' → logprob: -4.266523838043213
    4. 'int' → logprob: -4.891523838043213
    5. 'inte' → logprob: -5.266523838043213
    6. ' ent' → logprob: -5.391523838043213
    7. 'enti' → logprob: -5.391523838043213
    8. ' =' → logprob: -6.391523838043213
    9. 't' → logprob: -6.516523838043213
    10. 'm' → logprob: -7.016523838043213

Token 69: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.044211603701114655
    2. 'h' → logprob: -3.1692116260528564
    3. 'x' → logprob: -8.044211387634277
    4. ' H' → logprob: -8.544211387634277
    5. '#' → logprob: -8.794211387634277
    6. '```' → logprob: -9.169211387634277
    7. 'a' → logprob: -9.544211387634277
    8. 'n' → logprob: -9.669211387634277
    9. '[' → logprob: -9.794211387634277
    10. '`' → logprob: -10.169211387634277

Token 70: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.12888671457767487
    2. 'h' → logprob: -2.1288866996765137
    3. 'x' → logprob: -8.003887176513672
    4. '```' → logprob: -8.003887176513672
    5. ' H' → logprob: -8.003887176513672
    6. 'a' → logprob: -8.878887176513672
    7. 'u' → logprob: -9.253887176513672
    8. 'n' → logprob: -9.253887176513672
    9. '[' → logprob: -9.378887176513672
    10. '#' → logprob: -9.503887176513672

Token 71: ' map' (ID: 4014)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03490038588643074
    2. 'h' → logprob: -3.409900426864624
    3. '#' → logprob: -7.409900188446045
    4. ' H' → logprob: -8.034900665283203
    5. '```' → logprob: -9.534900665283203
    6. 'x' → logprob: -9.659900665283203
    7. 'a' → logprob: -10.409900665283203
    8. 'u' → logprob: -11.159900665283203
    9. ' ' → logprob: -11.159900665283203
    10. '`' → logprob: -11.159900665283203

Token 72: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1026359423995018
    2. '(int' → logprob: -2.3526358604431152
    3. '(lambda' → logprob: -6.352635860443115
    4. '(
' → logprob: -7.602635860443115
    5. '(str' → logprob: -9.102636337280273
    6. 'int' → logprob: -10.727636337280273
    7. '<int' → logprob: -11.352636337280273
    8. '[int' → logprob: -11.727636337280273
    9. '(

' → logprob: -12.227636337280273
    10. '(i' → logprob: -12.352636337280273

Token 73: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020451019518077374
    2. ',' → logprob: -6.627045154571533
    3. '(input' → logprob: -8.502044677734375
    4. ' )' → logprob: -9.002044677734375
    5. ',)' → logprob: -9.752044677734375
    6. ',input' → logprob: -9.752044677734375
    7. ')#' → logprob: -10.002044677734375
    8. '),' → logprob: -10.127044677734375
    9. ')`' → logprob: -10.252044677734375
    10. '))' → logprob: -10.377044677734375

Token 74: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3695843517780304
    2. 'input' → logprob: -1.244584321975708
    3. ')' → logprob: -3.994584321975708
    4. ' )' → logprob: -6.119584560394287
    5. '(input' → logprob: -9.119584083557129
    6. ' user' → logprob: -9.994584083557129
    7. 'user' → logprob: -10.369584083557129
    8. ' ' → logprob: -10.869584083557129
    9. '=input' → logprob: -11.369584083557129
    10. '<input' → logprob: -11.494584083557129

Token 75: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45150226354599
    2. ')' → logprob: -1.2015023231506348
    3. '(H' → logprob: -3.5765023231506348
    4. ' )' → logprob: -4.451502323150635
    5. '(
' → logprob: -4.951502323150635
    6. '()' → logprob: -5.076502323150635
    7. '(*' → logprob: -6.451502323150635
    8. ' H' → logprob: -6.701502323150635
    9. ' (' → logprob: -6.826502323150635
    10. 'H' → logprob: -7.076502323150635

Token 76: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7033531665802002
    2. ' int' → logprob: -1.5783531665802002
    3. ' la' → logprob: -2.3283531665802
    4. 'lambda' → logprob: -2.9533531665802
    5. '(int' → logprob: -2.9533531665802
    6. '(lambda' → logprob: -3.2033531665802
    7. ' lambda' → logprob: -3.5783531665802
    8. 'la' → logprob: -4.203352928161621
    9. '```' → logprob: -6.203352928161621
    10. ')' → logprob: -6.328352928161621

Token 77: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.30404940247535706
    2. 'fonction' → logprob: -2.429049491882324
    3. 'input' → logprob: -3.304049491882324
    4. ' input' → logprob: -3.429049491882324
    5. ' int' → logprob: -3.554049491882324
    6. 's' → logprob: -4.054049491882324
    7. ' function' → logprob: -4.429049491882324
    8. 'lambda' → logprob: -5.054049491882324
    9. 'entrée' → logprob: -5.054049491882324
    10. 'str' → logprob: -5.429049491882324

Token 78: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6299470663070679
    2. ' int' → logprob: -1.7549470663070679
    3. 'int' → logprob: -1.8799470663070679
    4. '(' → logprob: -2.2549471855163574
    5. '(lambda' → logprob: -3.6299471855163574
    6. '(
' → logprob: -5.504947185516357
    7. 'lambda' → logprob: -6.879947185516357
    8. '=int' → logprob: -6.879947185516357
    9. '<int' → logprob: -7.379947185516357
    10. '(str' → logprob: -7.504947185516357

Token 79: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010745127685368061
    2. '(H' → logprob: -5.510745048522949
    3. ')' → logprob: -6.135745048522949
    4. ',' → logprob: -6.760745048522949
    5. '()' → logprob: -7.010745048522949
    6. '(
' → logprob: -7.260745048522949
    7. '(h' → logprob: -8.63574504852295
    8. ' (' → logprob: -8.76074504852295
    9. 'H' → logprob: -8.88574504852295
    10. 's' → logprob: -8.88574504852295

Token 80: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8927827477455139
    2. ' input' → logprob: -1.1427826881408691
    3. 'l' → logprob: -2.142782688140869
    4. ' l' → logprob: -2.642782688140869
    5. 'la' → logprob: -3.017782688140869
    6. ' la' → logprob: -3.642782688140869
    7. ' chaque' → logprob: -6.017782688140869
    8. 's' → logprob: -7.142782688140869
    9. 'part' → logprob: -7.142782688140869
    10. ' ' → logprob: -7.142782688140869

Token 81: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.005991724319756031
    2. ' élément' → logprob: -5.1309919357299805
    3. ')' → logprob: -11.00599193572998
    4. 'él' → logprob: -11.13099193572998
    5. 'element' → logprob: -11.50599193572998
    6. ' éléments' → logprob: -12.25599193572998
    7. ' element' → logprob: -12.38099193572998
    8. 'é' → logprob: -12.75599193572998
    9. ' ' → logprob: -13.00599193572998
    10. ' él' → logprob: -13.63099193572998

Token 82: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6883786916732788
    2. ')' → logprob: -1.6883786916732788
    3. ',' → logprob: -1.8133786916732788
    4. ' ' → logprob: -2.9383788108825684
    5. ' (' → logprob: -3.1883788108825684
    6. ':' → logprob: -4.563378810882568
    7. 'H' → logprob: -5.188378810882568
    8. '(
' → logprob: -5.188378810882568
    9. 's' → logprob: -5.688378810882568
    10. ' )' → logprob: -5.688378810882568

Token 83: ' cette' (ID: 7696)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7756307721138
    2. 'l' → logprob: -1.5256307125091553
    3. ' input' → logprob: -1.9006307125091553
    4. 'la' → logprob: -2.2756307125091553
    5. ' l' → logprob: -3.1506307125091553
    6. ' la' → logprob: -3.6506307125091553
    7. '...' → logprob: -8.275630950927734
    8. 'split' → logprob: -8.275630950927734
    9. 'list' → logprob: -8.900630950927734
    10. 'spl' → logprob: -9.400630950927734

Token 84: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.20261414349079132
    2. ' liste' → logprob: -1.702614188194275
    3. 'list' → logprob: -7.0776143074035645
    4. 'chaine' → logprob: -9.702613830566406
    5. 'entrée' → logprob: -9.827613830566406
    6. '#' → logprob: -10.827613830566406
    7. 'ligne' → logprob: -10.827613830566406
    8. 'Liste' → logprob: -10.952613830566406
    9. 's' → logprob: -11.077613830566406
    10. ' ' → logprob: -11.077613830566406

Token 85: ',' (ID: 11)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05267124995589256
    2. 'h' → logprob: -3.552671194076538
    3. ',' → logprob: -5.052671432495117
    4. ' H' → logprob: -5.552671432495117
    5. ':' → logprob: -5.802671432495117
    6. ' ' → logprob: -6.677671432495117
    7. ')' → logprob: -6.677671432495117
    8. '[' → logprob: -7.177671432495117
    9. 'ha' → logprob: -7.302671432495117
    10. 'a' → logprob: -7.427671432495117

Token 86: ' transform' (ID: 7118)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.020939122885465622
    2. ' H' → logprob: -4.395939350128174
    3. 'h' → logprob: -5.145939350128174
    4. ')' → logprob: -6.520939350128174
    5. '(' → logprob: -9.020938873291016
    6. ' (' → logprob: -9.145938873291016
    7. ':' → logprob: -9.395938873291016
    8. 'he' → logprob: -9.520938873291016
    9. ' )' → logprob: -9.645938873291016
    10. ' :' → logprob: -9.770938873291016

Token 87: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0004094619944225997
    2. 'er' → logprob: -8.375409126281738
    3. 'ant' → logprob: -9.125409126281738
    4. 'a' → logprob: -11.500409126281738
    5. 'é' → logprob: -11.625409126281738
    6. '```' → logprob: -11.625409126281738
    7. '#' → logprob: -11.750409126281738
    8. 'ent' → logprob: -12.000409126281738
    9. 'es' → logprob: -12.250409126281738
    10. 'е' → logprob: -12.750409126281738

Token 88: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.389638751745224
    2. 'la' → logprob: -2.514638662338257
    3. ' H' → logprob: -2.764638662338257
    4. ' les' → logprob: -2.764638662338257
    5. ' ' → logprob: -3.514638662338257
    6. 'H' → logprob: -4.264638900756836
    7. ' l' → logprob: -4.389638900756836
    8. ')' → logprob: -4.514638900756836
    9. 'l' → logprob: -4.639638900756836
    10. ' en' → logprob: -5.264638900756836

Token 89: ' chaînes' (ID: 179904)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6182769536972046
    2. ' ' → logprob: -1.1182769536972046
    3. ' éléments' → logprob: -2.618277072906494
    4. 's' → logprob: -4.868277072906494
    5. 'ent' → logprob: -4.868277072906494
    6. ' chaînes' → logprob: -4.868277072906494
    7. ' ent' → logprob: -5.743277072906494
    8. ' valeurs' → logprob: -5.868277072906494
    9. ' deux' → logprob: -5.868277072906494
    10. 'entrée' → logprob: -6.243277072906494

Token 90: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7256054282188416
    2. ' ' → logprob: -1.6006054878234863
    3. ' (' → logprob: -2.3506054878234863
    4. ')' → logprob: -3.1006054878234863
    5. 's' → logprob: -3.2256054878234863
    6. '[' → logprob: -3.6006054878234863
    7. ',' → logprob: -3.7256054878234863
    8. ' H' → logprob: -3.8506054878234863
    9. 'a' → logprob: -4.975605487823486
    10. 'H' → logprob: -4.975605487823486

Token 91: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5133494734764099
    2. ' caractères' → logprob: -1.0133495330810547
    3. ' la' → logprob: -4.388349533081055
    4. 'la' → logprob: -4.638349533081055
    5. ' caract' → logprob: -5.513349533081055
    6. ' car' → logprob: -5.888349533081055
    7. 'l' → logprob: -6.513349533081055
    8. 'texte' → logprob: -6.638349533081055
    9. ' caracteres' → logprob: -6.763349533081055
    10. 'chaine' → logprob: -6.888349533081055

Token 92: ' en' (ID: 469)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.084466814994812
    2. ',' → logprob: -1.959466814994812
    3. 'h' → logprob: -2.2094669342041016
    4. ')' → logprob: -2.4594669342041016
    5. ' ' → logprob: -2.4594669342041016
    6. ' H' → logprob: -2.5844669342041016
    7. '(' → logprob: -3.2094669342041016
    8. ':' → logprob: -3.3344669342041016
    9. ' :' → logprob: -4.084466934204102
    10. 'a' → logprob: -4.334466934204102

Token 93: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5949833393096924
    2. ' int' → logprob: -1.9699833393096924
    3. ' nombres' → logprob: -1.9699833393096924
    4. 'ent' → logprob: -2.0949833393096924
    5. ' ' → logprob: -4.719983100891113
    6. ' des' → logprob: -4.844983100891113
    7. ' deux' → logprob: -5.094983100891113
    8. 'int' → logprob: -5.219983100891113
    9. 'n' → logprob: -5.469983100891113
    10. ' entier' → logprob: -5.594983100891113

Token 94: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11484126001596451
    2. 'iers' → logprob: -2.2398412227630615
    3. 'ières' → logprob: -6.614841461181641
    4. 'ié' → logprob: -7.989841461181641
    5. '```' → logprob: -8.73984146118164
    6. '#' → logprob: -10.73984146118164
    7. '   ' → logprob: -10.73984146118164
    8. 'ière' → logprob: -10.86484146118164
    9. 'î' → logprob: -11.11484146118164
    10. '­i' → logprob: -11.48984146118164

Token 95: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06466211378574371
    2. 'h' → logprob: -2.814662218093872
    3. ':' → logprob: -7.564661979675293
    4. '#' → logprob: -7.564661979675293
    5. ',' → logprob: -7.564661979675293
    6. ' H' → logprob: -8.189661979675293
    7. 'x' → logprob: -8.689661979675293
    8. '```' → logprob: -9.189661979675293
    9. ' ' → logprob: -9.439661979675293
    10. 'a' → logprob: -9.564661979675293

Token 96: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.018409790471196175
    2. 'h' → logprob: -4.018409729003906
    3. ' H' → logprob: -8.768409729003906
    4. '#' → logprob: -9.768409729003906
    5. 'a' → logprob: -11.518409729003906
    6. '```' → logprob: -12.018409729003906
    7. 'x' → logprob: -12.393409729003906
    8. ' ' → logprob: -12.393409729003906
    9. ':' → logprob: -13.018409729003906
    10. ' 
' → logprob: -13.143409729003906

Token 97: ' Les' (ID: 7029)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06955476105213165
    2. ' H' → logprob: -2.8195548057556152
    3. 'h' → logprob: -4.944554805755615
    4. ' h' → logprob: -8.694554328918457
    5. '#' → logprob: -9.569554328918457
    6. ' ' → logprob: -9.944554328918457
    7. ' 
' → logprob: -10.694554328918457
    8. 'a' → logprob: -10.819554328918457
    9. ' (' → logprob: -11.069554328918457
    10. 's' → logprob: -11.569554328918457

Token 98: ' deux' (ID: 10301)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.3635236918926239
    2. 'H' → logprob: -1.2385237216949463
    3. ' h' → logprob: -4.988523483276367
    4. 'h' → logprob: -5.863523483276367
    5. ' ' → logprob: -6.238523483276367
    6. 'ha' → logprob: -7.238523483276367
    7. ' ent' → logprob: -7.488523483276367
    8. ' hauteur' → logprob: -7.738523483276367
    9. ' #' → logprob: -8.488523483276367
    10. '#' → logprob: -8.488523483276367

Token 99: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.313137412071228
    2. '_' → logprob: -2.3131375312805176
    3. ' H' → logprob: -3.4381375312805176
    4. ' )' → logprob: -3.5631375312805176
    5. ' espaces' → logprob: -3.9381375312805176
    6. ' ent' → logprob: -4.063137531280518
    7. ' ,' → logprob: -4.188137531280518
    8. ')' → logprob: -4.563137531280518
    9. 's' → logprob: -5.188137531280518
    10. 'n' → logprob: -5.313137531280518

Token 100: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.05182664841413498
    2. 'i' → logprob: -4.551826477050781
    3. 'ier' → logprob: -4.801826477050781
    4. 'ières' → logprob: -4.801826477050781
    5. 'ière' → logprob: -4.926826477050781
    6. 't' → logprob: -5.051826477050781
    7. 'e' → logprob: -5.801826477050781
    8. '#' → logprob: -6.301826477050781
    9. 'r' → logprob: -6.551826477050781
    10. 's' → logprob: -6.926826477050781

Token 101: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8012749552726746
    2. ' ' → logprob: -1.5512750148773193
    3. ' H' → logprob: -2.4262750148773193
    4. ',' → logprob: -2.4262750148773193
    5. ' ,' → logprob: -2.8012750148773193
    6. ' )' → logprob: -3.5512750148773193
    7. ')' → logprob: -4.05127477645874
    8. ' =' → logprob: -4.30127477645874
    9. '_' → logprob: -5.05127477645874
    10. ' sont' → logprob: -5.05127477645874

Token 102: ' ensuite' (ID: 39713)
  Prédit: ' assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assign' → logprob: -0.7424941658973694
    2. ' attrib' → logprob: -2.3674941062927246
    3. ' assigned' → logprob: -2.6174941062927246
    4. ' ' → logprob: -2.6174941062927246
    5. ' affect' → logprob: -2.8674941062927246
    6. ' récup' → logprob: -3.2424941062927246
    7. ',' → logprob: -3.3674941062927246
    8. ' stock' → logprob: -3.4924941062927246
    9. ' r' → logprob: -3.9924941062927246
    10. ' a' → logprob: -4.367494106292725

Token 103: ' respect' (ID: 5618)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' affect' → logprob: -1.023205280303955
    2. ' assign' → logprob: -1.148205280303955
    3. ' attrib' → logprob: -1.648205280303955
    4. 'assign' → logprob: -3.023205280303955
    5. ' stock' → logprob: -3.523205280303955
    6. ' assigned' → logprob: -4.398205280303955
    7. ',' → logprob: -4.648205280303955
    8. '=' → logprob: -4.773205280303955
    9. ' =' → logprob: -4.898205280303955
    10. 'r' → logprob: -5.898205280303955

Token 104: 'ivement' (ID: 37978)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.30548912286758423
    2. 'u' → logprob: -1.4304890632629395
    3. 'é' → logprob: -5.3054890632629395
    4. 'ent' → logprob: -5.3054890632629395
    5. 'ant' → logprob: -5.6804890632629395
    6. 'itu' → logprob: -6.0554890632629395
    7. 'ées' → logprob: -6.0554890632629395
    8. 'uis' → logprob: -6.1804890632629395
    9. 'érés' → logprob: -8.055489540100098
    10. 'us' → logprob: -8.180489540100098

Token 105: ' stock' (ID: 6546)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' affect' → logprob: -1.3410271406173706
    2. ' attrib' → logprob: -1.4660271406173706
    3. ' assigned' → logprob: -1.9660271406173706
    4. ' =' → logprob: -1.9660271406173706
    5. ' assign' → logprob: -2.21602725982666
    6. '=' → logprob: -3.34102725982666
    7. ',' → logprob: -3.71602725982666
    8. 'assign' → logprob: -4.09102725982666
    9. 's' → logprob: -5.21602725982666
    10. 'assigned' → logprob: -5.34102725982666

Token 106: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10023266077041626
    2. 'é' → logprob: -2.3502326011657715
    3. 'ées' → logprob: -11.47523307800293
    4. 'ée' → logprob: -12.10023307800293
    5. ' és' → logprob: -13.10023307800293
    6. 'ès' → logprob: -13.10023307800293
    7. 'es' → logprob: -13.47523307800293
    8. 'u' → logprob: -13.47523307800293
    9. ' é' → logprob: -14.10023307800293
    10. 'e' → logprob: -14.60023307800293

Token 107: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11430548131465912
    2. ' ' → logprob: -3.4893054962158203
    3. '(' → logprob: -3.8643054962158203
    4. ' ,' → logprob: -3.9893054962158203
    5. ' (' → logprob: -4.11430549621582
    6. ' H' → logprob: -5.11430549621582
    7. ')' → logprob: -5.11430549621582
    8. 'H' → logprob: -5.73930549621582
    9. '[' → logprob: -6.98930549621582
    10. '_' → logprob: -6.98930549621582

Token 108: ' les' (ID: 1341)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.18368752300739288
    2. 'H' → logprob: -1.8086875677108765
    3. ' ' → logprob: -6.433687686920166
    4. ' h' → logprob: -7.058687686920166
    5. 'h' → logprob: -7.308687686920166
    6. ' la' → logprob: -8.433687210083008
    7. 'l' → logprob: -8.683687210083008
    8. ' l' → logprob: -9.558687210083008
    9. ' ' → logprob: -9.558687210083008
    10. ' hauteur' → logprob: -9.558687210083008

Token 109: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.07890443503856659
    2. 'H' → logprob: -3.203904390335083
    3. 'variables' → logprob: -4.078904628753662
    4. ' H' → logprob: -4.453904628753662
    5. ' variable' → logprob: -6.203904628753662
    6. ' ' → logprob: -6.703904628753662
    7. ' hauteur' → logprob: -6.953904628753662
    8. ' espaces' → logprob: -7.453904628753662
    9. 'ha' → logprob: -7.578904628753662
    10. 'h' → logprob: -8.328904151916504

Token 110: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.10107958316802979
    2. 'H' → logprob: -2.3510794639587402
    3. ' ' → logprob: -8.226079940795898
    4. 'a' → logprob: -9.226079940795898
    5. ' h' → logprob: -9.476079940795898
    6. ' (' → logprob: -9.476079940795898
    7. 'h' → logprob: -9.601079940795898
    8. ',' → logprob: -9.976079940795898
    9. ' ,' → logprob: -9.976079940795898
    10. ' a' → logprob: -10.226079940795898

Token 111: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010437761375214905
    2. ' ,' → logprob: -9.250103950500488
    3. ',W' → logprob: -12.125103950500488
    4. ',w' → logprob: -14.625103950500488
    5. ',\
' → logprob: -14.625103950500488
    6. ',
' → logprob: -14.875103950500488
    7. ',H' → logprob: -15.500103950500488
    8. '‌,' → logprob: -15.625103950500488
    9. ',

' → logprob: -16.000104904174805
    10. '`,' → logprob: -16.500104904174805

Token 112: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.11081450432538986
    2. 'W' → logprob: -2.6108145713806152
    3. ' ' → logprob: -3.4858145713806152
    4. ' ' → logprob: -8.235814094543457
    5. '_' → logprob: -9.235814094543457
    6. ' ,' → logprob: -9.610814094543457
    7. '`' → logprob: -9.985814094543457
    8. '  ' → logprob: -10.110814094543457
    9. ',' → logprob: -10.110814094543457
    10. ''' → logprob: -10.235814094543457

Token 113: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.374227425316349e-05
    2. '#' → logprob: -10.500073432922363
    3. ' H' → logprob: -10.750073432922363
    4. ' 
' → logprob: -11.875073432922363
    5. '  
' → logprob: -12.250073432922363
    6. ',' → logprob: -12.500073432922363
    7. 'h' → logprob: -13.500073432922363
    8. '```' → logprob: -13.750073432922363
    9. 'x' → logprob: -14.000073432922363
    10. '   
' → logprob: -14.250073432922363

Token 114: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0921942703134846e-05
    2. ' H' → logprob: -12.12501049041748
    3. '#' → logprob: -12.50001049041748
    4. 'h' → logprob: -15.00001049041748
    5. 'x' → logprob: -15.37501049041748
    6. '```' → logprob: -15.37501049041748
    7. 'a' → logprob: -15.87501049041748
    8. 'n' → logprob: -16.000011444091797
    9. '[' → logprob: -16.125011444091797
    10. ' 
' → logprob: -16.250011444091797

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.518582762917504e-05
    2. ' ,' → logprob: -9.50008487701416
    3. ' ' → logprob: -12.25008487701416
    4. ',
' → logprob: -12.62508487701416
    5. ')' → logprob: -14.12508487701416
    6. '<|end|>' → logprob: -14.62508487701416
    7. ',W' → logprob: -15.37508487701416
    8. ',

' → logprob: -15.50008487701416
    9. ',H' → logprob: -15.87508487701416
    10. '.' → logprob: -16.375085830688477

Token 116: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.036311469972133636
    2. 'W' → logprob: -4.036311626434326
    3. ' ' → logprob: -4.036311626434326
    4. '<|end|>' → logprob: -8.286311149597168
    5. ' ' → logprob: -9.911311149597168
    6. '  ' → logprob: -10.911311149597168
    7. ')' → logprob: -12.411311149597168
    8. '```' → logprob: -13.161311149597168
    9. 's' → logprob: -13.786311149597168
    10. '  
' → logprob: -13.786311149597168

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011139309965074062
    2. '=' → logprob: -4.511139392852783
    3. ',' → logprob: -9.511138916015625
    4. ' ' → logprob: -11.761138916015625
    5. '<|end|>' → logprob: -12.636138916015625
    6. ' ,' → logprob: -13.261138916015625
    7. ' =
' → logprob: -13.761138916015625
    8. ')' → logprob: -13.761138916015625
    9. ' ' → logprob: -14.511138916015625
    10. '=input' → logprob: -14.511138916015625

Token 118: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1002068892121315
    2. 'map' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.725207328796387
    4. '	map' → logprob: -16.47520637512207
    5. ' ' → logprob: -17.35020637512207
    6. '(map' → logprob: -17.85020637512207
    7. 'm' → logprob: -18.85020637512207
    8. ' list' → logprob: -19.10020637512207
    9. 'input' → logprob: -19.72520637512207
    10. ' input' → logprob: -19.72520637512207

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3872203230857849
    2. '(' → logprob: -1.1372203826904297
    3. '(lambda' → logprob: -8.76222038269043
    4. '(input' → logprob: -9.38722038269043
    5. ' (' → logprob: -9.76222038269043
    6. '(str' → logprob: -10.63722038269043
    7. '(
' → logprob: -11.76222038269043
    8. '<int' → logprob: -11.88722038269043
    9. '(in' → logprob: -12.26222038269043
    10. '[int' → logprob: -12.88722038269043

Token 120: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023901117965579033
    2. '(' → logprob: -3.8989012241363525
    3. ')' → logprob: -6.148900985717773
    4. ' (' → logprob: -7.148900985717773
    5. 'input' → logprob: -7.898900985717773
    6. ' input' → logprob: -11.148900985717773
    7. ' )' → logprob: -11.398900985717773
    8. '(user' → logprob: -11.523900985717773
    9. ',input' → logprob: -11.773900985717773
    10. '[input' → logprob: -11.898900985717773

Token 121: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029758822172880173
    2. ' input' → logprob: -3.529758930206299
    3. '(input' → logprob: -11.90475845336914
    4. ')' → logprob: -13.52975845336914
    5. '=input' → logprob: -16.65475845336914
    6. ' ' → logprob: -16.90475845336914
    7. '	input' → logprob: -17.15475845336914
    8. '<input' → logprob: -17.27975845336914
    9. ' )' → logprob: -17.65475845336914
    10. ',input' → logprob: -17.65475845336914

Token 122: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9717045426368713
    2. '().' → logprob: -1.0967044830322266
    3. '())' → logprob: -1.3467044830322266
    4. '('' → logprob: -3.8467044830322266
    5. '(' → logprob: -5.971704483032227
    6. '("' → logprob: -6.346704483032227
    7. ')' → logprob: -6.846704483032227
    8. '()).' → logprob: -9.346704483032227
    9. '()`' → logprob: -9.471704483032227
    10. '("("' → logprob: -9.471704483032227

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2723104848410003e-05
    2. 'strip' → logprob: -11.000022888183594
    3. ' split' → logprob: -12.125022888183594
    4. '(split' → logprob: -15.250022888183594
    5. ')' → logprob: -16.125022888183594
    6. 'rstrip' → logprob: -16.125022888183594
    7. 'spl' → logprob: -17.000022888183594
    8. '_split' → logprob: -19.500022888183594
    9. '```' → logprob: -19.500022888183594
    10. 's' → logprob: -19.875022888183594

Token 124: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0372731015086174
    2. '()' → logprob: -3.5372731685638428
    3. ')' → logprob: -5.912272930145264
    4. '(' → logprob: -6.037272930145264
    5. '()))' → logprob: -6.787272930145264
    6. '('' → logprob: -6.787272930145264
    7. '))' → logprob: -9.662273406982422
    8. ' ())' → logprob: -10.537273406982422
    9. '("' → logprob: -10.912273406982422
    10. '())
' → logprob: -11.162273406982422

Token 125: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1272609978914261
    2. '
' → logprob: -3.12726092338562
    3. '#' → logprob: -3.87726092338562
    4. '<|end|>' → logprob: -4.002261161804199
    5. '\n' → logprob: -4.752261161804199
    6. ' ' → logprob: -5.127261161804199
    7. ':
' → logprob: -5.252261161804199
    8. '  
' → logprob: -5.627261161804199
    9. '\' → logprob: -5.877261161804199
    10. '[' → logprob: -6.127261161804199

Token 126: ' Cr' (ID: 5790)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6170003414154053
    2. 'grid' → logprob: -1.3670003414154053
    3. '#' → logprob: -2.7420003414154053
    4. 'gr' → logprob: -3.3670003414154053
    5. ' grille' → logprob: -3.3670003414154053
    6. ' ' → logprob: -3.7420003414154053
    7. 'for' → logprob: -4.117000579833984
    8. ' for' → logprob: -4.242000579833984
    9. ' #' → logprob: -4.617000579833984
    10. 'g' → logprob: -5.367000579833984

Token 127: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.3624919652938843
    2. 'ée' → logprob: -2.112492084503174
    3. 'e' → logprob: -2.237492084503174
    4. 'é' → logprob: -2.612492084503174
    5. '#' → logprob: -6.612492084503174
    6. 'ea' → logprob: -6.987492084503174
    7. 'eer' → logprob: -7.612492084503174
    8. 'ee' → logprob: -9.237491607666016
    9. 'eat' → logprob: -10.237491607666016
    10. 'éal' → logprob: -10.487491607666016

Token 128: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03919485583901405
    2. ' une' → logprob: -5.0391950607299805
    3. ' grid' → logprob: -5.1641950607299805
    4. ' la' → logprob: -5.5391950607299805
    5. 'grid' → logprob: -5.9141950607299805
    6. '[' → logprob: -5.9141950607299805
    7. ' a' → logprob: -6.0391950607299805
    8. '_' → logprob: -6.0391950607299805
    9. '[]' → logprob: -6.1641950607299805
    10. ' grille' → logprob: -6.2891950607299805

Token 129: ' liste' (ID: 31719)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.07872618734836578
    2. ' grille' → logprob: -2.828726291656494
    3. 'liste' → logprob: -4.453726291656494
    4. ' liste' → logprob: -5.578726291656494
    5. ' ' → logprob: -7.953726291656494
    6. 'mat' → logprob: -8.453725814819336
    7. '#' → logprob: -8.953725814819336
    8. 'list' → logprob: -9.203725814819336
    9. ' matr' → logprob: -9.453725814819336
    10. '_gr' → logprob: -9.578725814819336

Token 130: ' vide' (ID: 21835)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9396429061889648
    2. '_gr' → logprob: -1.6896429061889648
    3. '[]' → logprob: -2.689642906188965
    4. 'gr' → logprob: -2.689642906188965
    5. '[' → logprob: -2.939642906188965
    6. '_grid' → logprob: -2.939642906188965
    7. 'grid' → logprob: -3.439642906188965
    8. ' grille' → logprob: -3.939642906188965
    9. '=[]' → logprob: -4.064642906188965
    10. ' =' → logprob: -4.314642906188965

Token 131: ' '' (ID: 461)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8276247382164001
    2. 'gr' → logprob: -1.327624797821045
    3. ' grille' → logprob: -1.452624797821045
    4. ' grid' → logprob: -3.077624797821045
    5. '[]' → logprob: -5.327624797821045
    6. 'g' → logprob: -5.577624797821045
    7. '[][]' → logprob: -6.702624797821045
    8. 'matrix' → logprob: -7.077624797821045
    9. 'l' → logprob: -7.202624797821045
    10. 's' → logprob: -7.327624797821045

Token 132: 'a' (ID: 64)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.27375951409339905
    2. 'grid' → logprob: -1.5237594842910767
    3. ' grille' → logprob: -4.273759365081787
    4. ' grid' → logprob: -5.023759365081787
    5. 'matrix' → logprob: -8.273759841918945
    6. 'board' → logprob: -8.648759841918945
    7. 'mat' → logprob: -9.273759841918945
    8. 'rows' → logprob: -9.523759841918945
    9. '```' → logprob: -9.648759841918945
    10. ' gr' → logprob: -9.898759841918945

Token 133: ''' (ID: 6)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.1260530650615692
    2. 'rr' → logprob: -2.7510530948638916
    3. ')' → logprob: -4.3760528564453125
    4. 'a' → logprob: -4.3760528564453125
    5. 'r' → logprob: -4.5010528564453125
    6. '')' → logprob: -5.3760528564453125
    7. ''' → logprob: -5.5010528564453125
    8. '_' → logprob: -6.2510528564453125
    9. ' ')' → logprob: -6.5010528564453125
    10. ' =' → logprob: -7.0010528564453125

Token 134: ' qui' (ID: 2780)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016150381416082382
    2. ' =' → logprob: -4.51615047454834
    3. '=' → logprob: -5.89115047454834
    4. ' a' → logprob: -6.64115047454834
    5. '[]' → logprob: -7.39115047454834
    6. '=[]' → logprob: -8.64115047454834
    7. '_a' → logprob: -8.89115047454834
    8. '[' → logprob: -11.01615047454834
    9. '=a' → logprob: -11.01615047454834
    10. ',a' → logprob: -11.89115047454834

Token 135: ' va' (ID: 3423)
  Prédit: ' va'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.6055524945259094
    2. ' cont' → logprob: -1.8555524349212646
    3. 'cont' → logprob: -2.1055524349212646
    4. ' accueill' → logprob: -2.3555524349212646
    5. ' accue' → logprob: -4.605552673339844
    6. ' serv' → logprob: -4.605552673339844
    7. 'represent' → logprob: -4.855552673339844
    8. 'stock' → logprob: -4.855552673339844
    9. ' stock' → logprob: -5.355552673339844
    10. 'va' → logprob: -5.355552673339844

Token 136: ' conten' (ID: 23523)
  Prédit: ' accueillir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accueillir' → logprob: -0.6538813710212708
    2. 'acc' → logprob: -1.528881311416626
    3. ' conten' → logprob: -2.403881311416626
    4. 'conten' → logprob: -2.903881311416626
    5. ' servir' → logprob: -3.903881311416626
    6. ' stock' → logprob: -4.153881549835205
    7. '[]' → logprob: -4.153881549835205
    8. 'con' → logprob: -4.153881549835205
    9. ' recevoir' → logprob: -4.653881549835205
    10. 'stock' → logprob: -5.028881549835205

Token 137: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.021311333402991295
    2. 'er' → logprob: -4.021311283111572
    3. 'r' → logprob: -5.896311283111572
    4. 'rer' → logprob: -8.39631175994873
    5. 'uer' → logprob: -9.52131175994873
    6. 'ur' → logprob: -10.52131175994873
    7. 'eur' → logprob: -10.77131175994873
    8. 'u' → logprob: -11.52131175994873
    9. 'ner' → logprob: -11.77131175994873
    10. 'irer' → logprob: -12.02131175994873

Token 138: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8217887282371521
    2. ' les' → logprob: -1.8217887878417969
    3. 'a' → logprob: -1.9467887878417969
    4. ' la' → logprob: -2.196788787841797
    5. '[' → logprob: -3.071788787841797
    6. 'les' → logprob: -3.196788787841797
    7. '_' → logprob: -4.696788787841797
    8. ' []' → logprob: -4.821788787841797
    9. '=[]' → logprob: -5.196788787841797
    10. 'la' → logprob: -5.321788787841797

Token 139: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.45086798071861267
    2. 'l' → logprob: -1.950868010520935
    3. 'gr' → logprob: -1.950868010520935
    4. ' listes' → logprob: -3.9508678913116455
    5. '_' → logprob: -4.325868129730225
    6. 'a' → logprob: -4.700868129730225
    7. '_l' → logprob: -4.825868129730225
    8. ' rows' → logprob: -6.075868129730225
    9. 'list' → logprob: -6.325868129730225
    10. ' grille' → logprob: -6.450868129730225

Token 140: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014556096866726875
    2. ' a' → logprob: -4.889555931091309
    3. '[]' → logprob: -5.264555931091309
    4. '[' → logprob: -7.514555931091309
    5. ' de' → logprob: -8.139555931091309
    6. '_a' → logprob: -8.889555931091309
    7. '[a' → logprob: -9.014555931091309
    8. '<|end|>' → logprob: -9.139555931091309
    9. '=[]' → logprob: -9.139555931091309
    10. ',' → logprob: -9.889555931091309

Token 141: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18029433488845825
    2. ' la' → logprob: -1.9302942752838135
    3. 'a' → logprob: -4.055294513702393
    4. 'gr' → logprob: -6.805294513702393
    5. 'l' → logprob: -7.180294513702393
    6. '#' → logprob: -8.555294036865234
    7. ' a' → logprob: -9.055294036865234
    8. 'code' → logprob: -9.305294036865234
    9. 'the' → logprob: -9.805294036865234
    10. ' grille' → logprob: -10.305294036865234

Token 142: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0895102322101593
    2. ' grille' → logprob: -2.464510202407837
    3. '#' → logprob: -8.589509963989258
    4. ' gr' → logprob: -8.964509963989258
    5. 'a' → logprob: -9.339509963989258
    6. 'grid' → logprob: -9.839509963989258
    7. 'mat' → logprob: -10.589509963989258
    8. '```' → logprob: -11.339509963989258
    9. 'liste' → logprob: -11.839509963989258
    10. '_gr' → logprob: -11.964509963989258

Token 143: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012761499965563416
    2. '
' → logprob: -9.250127792358398
    3. ' a' → logprob: -10.500127792358398
    4. ' 
' → logprob: -14.000127792358398
    5. '[a' → logprob: -14.250127792358398
    6. '  
' → logprob: -14.500127792358398
    7. ''a' → logprob: -14.500127792358398
    8. '#a' → logprob: -15.250127792358398
    9. ',a' → logprob: -15.250127792358398
    10. '\n' → logprob: -15.375127792358398

Token 144: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.1689596148207784e-05
    2. ' a' → logprob: -9.875051498413086
    3. '_a' → logprob: -17.125051498413086
    4. '
' → logprob: -17.375051498413086
    5. '	a' → logprob: -17.500051498413086
    6. 'A' → logprob: -17.500051498413086
    7. '```' → logprob: -18.000051498413086
    8. '#a' → logprob: -18.375051498413086
    9. '<|end|>' → logprob: -18.875051498413086
    10. ' 
' → logprob: -18.875051498413086

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002836599946022
    2. '=' → logprob: -2.350283622741699
    3. '=[]' → logprob: -9.6002836227417
    4. '.' → logprob: -13.4752836227417
    5. '.append' → logprob: -13.4752836227417
    6. ' =[' → logprob: -13.7252836227417
    7. '=[]
' → logprob: -13.8502836227417
    8. ' ' → logprob: -13.9752836227417
    9. '[]' → logprob: -14.4752836227417
    10. '=[' → logprob: -14.7252836227417

Token 146: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008651330135762691
    2. ' []' → logprob: -4.758651256561279
    3. '[' → logprob: -10.258651733398438
    4. '[]
' → logprob: -13.758651733398438
    5. ' [' → logprob: -15.133651733398438
    6. '[]}' → logprob: -16.008651733398438
    7. '[]

' → logprob: -16.133651733398438
    8. '[][]' → logprob: -16.258651733398438
    9. ' ' → logprob: -17.133651733398438
    10. '[]"' → logprob: -17.383651733398438

Token 147: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008872798644006252
    2. ' for' → logprob: -7.125887393951416
    3. '
' → logprob: -9.500886917114258
    4. '#' → logprob: -12.500886917114258
    5. '\n' → logprob: -13.375886917114258
    6. 'f' → logprob: -14.375886917114258
    7. ' 
' → logprob: -14.375886917114258
    8. 'n' → logprob: -14.500886917114258
    9. '\' → logprob: -15.250886917114258
    10. 'r' → logprob: -15.750886917114258

Token 148: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.77627644513268e-06
    2. ' for' → logprob: -11.875008583068848
    3. 'For' → logprob: -13.750008583068848
    4. 'Pour' → logprob: -14.500008583068848
    5. 'pour' → logprob: -16.625009536743164
    6. '#' → logprob: -17.125009536743164
    7. 'fo' → logprob: -17.125009536743164
    8. 'F' → logprob: -18.000009536743164
    9. 'f' → logprob: -18.625009536743164
    10. 'range' → logprob: -18.875009536743164

Token 149: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.002935148775577545
    2. 'er' → logprob: -6.75293493270874
    3. 'ser' → logprob: -6.87793493270874
    4. 'isateur' → logprob: -8.002935409545898
    5. '#' → logprob: -8.252935409545898
    6. 'isation' → logprob: -9.502935409545898
    7. 's' → logprob: -11.002935409545898
    8. 'isez' → logprob: -11.127935409545898
    9. 'isant' → logprob: -11.627935409545898
    10. 'ise' → logprob: -11.752935409545898

Token 150: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8248460292816162
    2. ' for' → logprob: -0.9498460292816162
    3. ' range' → logprob: -2.074846029281616
    4. 'range' → logprob: -3.324846029281616
    5. ' une' → logprob: -4.699846267700195
    6. ' a' → logprob: -6.074846267700195
    7. ' un' → logprob: -6.949846267700195
    8. '_' → logprob: -7.199846267700195
    9. 'a' → logprob: -9.574846267700195
    10. ' ' → logprob: -9.699846267700195

Token 151: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09302327036857605
    2. ' for' → logprob: -2.7180233001708984
    3. 'range' → logprob: -4.343023300170898
    4. ' range' → logprob: -5.218023300170898
    5. ' boucle' → logprob: -5.718023300170898
    6. 'bou' → logprob: -7.093023300170898
    7. ' ' → logprob: -9.843023300170898
    8. 'pour' → logprob: -10.218023300170898
    9. '_' → logprob: -10.593023300170898
    10. 'f' → logprob: -10.593023300170898

Token 152: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20142999291419983
    2. 'for' → logprob: -1.7014299631118774
    3. ' pour' → logprob: -11.451430320739746
    4. 'pour' → logprob: -13.076430320739746
    5. ' ' → logprob: -13.576430320739746
    6. ' `' → logprob: -14.326430320739746
    7. 'range' → logprob: -14.826430320739746
    8. ' range' → logprob: -14.951430320739746
    9. ' 
' → logprob: -15.576430320739746
    10. '
' → logprob: -15.701430320739746

Token 153: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012662919238209724
    2. ' _' → logprob: -4.887662887573242
    3. ' ' → logprob: -5.512662887573242
    4. ' range' → logprob: -7.637662887573242
    5. '_' → logprob: -8.262662887573242
    6. ' ‌' → logprob: -9.512662887573242
    7. 'i' → logprob: -9.887662887573242
    8. ' ' → logprob: -10.012662887573242
    9. ' for' → logprob: -10.137662887573242
    10. ' I' → logprob: -10.887662887573242

Token 154: ' parcour' (ID: 130642)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.16725751757621765
    2. '_' → logprob: -2.54225754737854
    3. ' i' → logprob: -2.66725754737854
    4. ' range' → logprob: -5.542257308959961
    5. ' ' → logprob: -6.667257308959961
    6. ' ' → logprob: -7.417257308959961
    7. 'i' → logprob: -10.417257308959961
    8. ' r' → logprob: -10.667257308959961
    9. ' ‌' → logprob: -10.667257308959961
    10. 'range' → logprob: -12.417257308959961

Token 155: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0161366555839777
    2. 'i' → logprob: -5.141136646270752
    3. 'r' → logprob: -5.141136646270752
    4. ' i' → logprob: -6.766136646270752
    5. 'er' → logprob: -7.016136646270752
    6. ' ' → logprob: -7.266136646270752
    7. 'range' → logprob: -7.891136646270752
    8. '_' → logprob: -8.14113712310791
    9. ' range' → logprob: -8.39113712310791
    10. '	range' → logprob: -8.51613712310791

Token 156: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.034616678953170776
    2. '_' → logprob: -3.659616708755493
    3. 'range' → logprob: -5.159616470336914
    4. ' _' → logprob: -6.034616470336914
    5. ' ' → logprob: -9.784616470336914
    6. ' ' → logprob: -9.909616470336914
    7. '_range' → logprob: -10.659616470336914
    8. '	range' → logprob: -12.659616470336914
    9. ' la' → logprob: -12.909616470336914
    10. ' i' → logprob: -13.159616470336914

Token 157: ' ligne' (ID: 19583)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.1754109859466553
    2. ' range' → logprob: -1.4254109859466553
    3. '_' → logprob: -1.5504109859466553
    4. ' i' → logprob: -1.8004109859466553
    5. ' ' → logprob: -2.6754109859466553
    6. 'range' → logprob: -6.050411224365234
    7. ' ' → logprob: -6.425411224365234
    8. 'i' → logprob: -8.050411224365234
    9. ' ligne' → logprob: -9.300411224365234
    10. ' rang' → logprob: -9.800411224365234

Token 158: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4677864909172058
    2. ' for' → logprob: -1.7177865505218506
    3. 'range' → logprob: -2.2177865505218506
    4. 'for' → logprob: -3.7177865505218506
    5. ' ' → logprob: -4.0927863121032715
    6. ' in' → logprob: -4.5927863121032715
    7. '_' → logprob: -4.8427863121032715
    8. ' i' → logprob: -5.0927863121032715
    9. ' _' → logprob: -5.5927863121032715
    10. ' 
' → logprob: -5.9677863121032715

Token 159: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326815485954285
    2. 'range' → logprob: -1.3132681846618652
    3. '_' → logprob: -12.563267707824707
    4. ' la' → logprob: -14.313267707824707
    5. 'a' → logprob: -14.438267707824707
    6. '_range' → logprob: -15.188267707824707
    7. 'r' → logprob: -15.313267707824707
    8. 'la' → logprob: -15.438267707824707
    9. '	range' → logprob: -15.438267707824707
    10. ' gamme' → logprob: -15.563267707824707

Token 160: ' grille' (ID: 99153)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7022431492805481
    2. 'range' → logprob: -0.7022431492805481
    3. ' grille' → logprob: -5.202243328094482
    4. ' gamme' → logprob: -6.202243328094482
    5. ' plage' → logprob: -6.702243328094482
    6. 'a' → logprob: -9.452242851257324
    7. 'gr' → logprob: -9.577242851257324
    8. 'r' → logprob: -10.202242851257324
    9. ' a' → logprob: -10.577242851257324
    10. 'rang' → logprob: -11.077242851257324

Token 161: '.' (ID: 13)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.803059458732605
    2. 'for' → logprob: -1.178059458732605
    3. ' 
' → logprob: -1.803059458732605
    4. '
' → logprob: -2.8030595779418945
    5. ':' → logprob: -5.1780595779418945
    6. '  
' → logprob: -5.4280595779418945
    7. '\n' → logprob: -5.9280595779418945
    8. ':
' → logprob: -6.9280595779418945
    9. ' in' → logprob: -7.1780595779418945
    10. ' :
' → logprob: -7.1780595779418945

Token 162: ' La' (ID: 3038)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4269748628139496
    2. ' for' → logprob: -1.551974892616272
    3. '
' → logprob: -2.5519747734069824
    4. 'for' → logprob: -3.5519747734069824
    5. '  
' → logprob: -3.6769747734069824
    6. '\n' → logprob: -5.926974773406982
    7. ' ' → logprob: -7.051974773406982
    8. '' → logprob: -9.67697525024414
    9. '   
' → logprob: -10.42697525024414
    10. ' 

' → logprob: -10.80197525024414

Token 163: ' variable' (ID: 11076)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02374805137515068
    2. 'range' → logprob: -3.7737481594085693
    3. '_' → logprob: -8.148748397827148
    4. ' for' → logprob: -9.023748397827148
    5. 'for' → logprob: -10.523748397827148
    6. ' ' → logprob: -10.773748397827148
    7. 'r' → logprob: -11.023748397827148
    8. ' ' → logprob: -11.648748397827148
    9. ' r' → logprob: -12.648748397827148
    10. ' _' → logprob: -12.648748397827148

Token 164: ' '' (ID: 461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20487305521965027
    2. ' _' → logprob: -2.4548730850219727
    3. ' i' → logprob: -2.4548730850219727
    4. 'i' → logprob: -4.329873085021973
    5. ' ' → logprob: -8.204873085021973
    6. ' ' → logprob: -10.329873085021973
    7. '_i' → logprob: -11.079873085021973
    8. ' range' → logprob: -12.704873085021973
    9. '`' → logprob: -13.329873085021973
    10. ' ‌' → logprob: -13.704873085021973

Token 165: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07969522476196289
    2. 'i' → logprob: -2.579695224761963
    3. '_i' → logprob: -7.454695224761963
    4. ' i' → logprob: -8.829694747924805
    5. ' _' → logprob: -9.454694747924805
    6. '`' → logprob: -14.329694747924805
    7. ' ' → logprob: -14.829694747924805
    8. '	i' → logprob: -15.454694747924805
    9. '_=' → logprob: -16.079694747924805
    10. '_
' → logprob: -16.579694747924805

Token 166: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15076318383216858
    2. 'n' → logprob: -2.4007632732391357
    3. 'in' → logprob: -3.5257632732391357
    4. ''' → logprob: -4.900763034820557
    5. ')' → logprob: -5.400763034820557
    6. 'range' → logprob: -6.025763034820557
    7. ' '' → logprob: -6.400763034820557
    8. ' ' → logprob: -6.650763034820557
    9. ' n' → logprob: -6.900763034820557
    10. ' i' → logprob: -7.775763034820557

Token 167: ' prend' (ID: 37463)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02167070284485817
    2. 'in' → logprob: -3.8966708183288574
    3. ' ' → logprob: -7.396670818328857
    4. ' for' → logprob: -8.8966703414917
    5. 'range' → logprob: -9.6466703414917
    6. ' range' → logprob: -9.7716703414917
    7. '_' → logprob: -10.1466703414917
    8. ' en' → logprob: -10.3966703414917
    9. 'n' → logprob: -10.5216703414917
    10. ' i' → logprob: -10.8966703414917

Token 168: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.46179917454719543
    2. ' ' → logprob: -1.211799144744873
    3. '_' → logprob: -3.211799144744873
    4. ' range' → logprob: -3.586799144744873
    5. ' ' → logprob: -6.211799144744873
    6. 'r' → logprob: -7.836799144744873
    7. '1' → logprob: -8.461799621582031
    8. ' _' → logprob: -8.711799621582031
    9. '  ' → logprob: -8.836799621582031
    10. 'n' → logprob: -9.086799621582031

Token 169: ' valeurs' (ID: 73668)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5305483341217041
    2. 'range' → logprob: -0.9055483341217041
    3. '_' → logprob: -5.280548095703125
    4. 'val' → logprob: -6.780548095703125
    5. ' valeurs' → logprob: -7.780548095703125
    6. ' values' → logprob: -8.405548095703125
    7. 'values' → logprob: -8.530548095703125
    8. ' ' → logprob: -9.280548095703125
    9. 'ranges' → logprob: -9.905548095703125
    10. 'r' → logprob: -10.030548095703125

Token 170: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6395512819290161
    2. ' de' → logprob: -1.5145512819290161
    3. 'range' → logprob: -1.5145512819290161
    4. 'de' → logprob: -3.8895511627197266
    5. ' ' → logprob: -5.139551162719727
    6. ' dans' → logprob: -6.514551162719727
    7. '0' → logprob: -6.764551162719727
    8. '_' → logprob: -7.264551162719727
    9. '(range' → logprob: -7.889551162719727
    10. 'dans' → logprob: -8.139551162719727

Token 171: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023263417184352875
    2. 'range' → logprob: -3.773263454437256
    3. '0' → logprob: -11.023262977600098
    4. ' ' → logprob: -13.523262977600098
    5. ' rang' → logprob: -15.773262977600098
    6. '	range' → logprob: -17.523263931274414
    7. 'rang' → logprob: -17.773263931274414
    8. ' rango' → logprob: -17.773263931274414
    9. '_range' → logprob: -17.898263931274414
    10. '(range' → logprob: -18.023263931274414

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7256714105606079
    2. 'range' → logprob: -0.9756714105606079
    3. ' range' → logprob: -1.975671410560608
    4. ' ' → logprob: -7.850671291351318
    5. '1' → logprob: -12.850671768188477
    6. 'rang' → logprob: -14.975671768188477
    7. '	range' → logprob: -15.475671768188477
    8. '_range' → logprob: -15.975671768188477
    9. ' rang' → logprob: -16.350671768188477
    10. '_' → logprob: -16.350671768188477

Token 173: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08256733417510986
    2. ' ' → logprob: -3.2075672149658203
    3. 'à' → logprob: -3.3325672149658203
    4. ' to' → logprob: -6.95756721496582
    5. ' jusqu' → logprob: -7.70756721496582
    6. ',' → logprob: -7.83256721496582
    7. ' À' → logprob: -8.58256721496582
    8. 'range' → logprob: -8.70756721496582
    9. ' ' → logprob: -8.83256721496582
    10. 'to' → logprob: -8.95756721496582

Token 174: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.3683420717716217
    2. '(' → logprob: -1.6183420419692993
    3. 'à' → logprob: -2.493342161178589
    4. ' à' → logprob: -4.24334192276001
    5. '’à' → logprob: -4.74334192276001
    6. 'a' → logprob: -6.74334192276001
    7. '(H' → logprob: -6.99334192276001
    8. 'e' → logprob: -7.49334192276001
    9. '()' → logprob: -8.243342399597168
    10. 'au' → logprob: -8.368342399597168

Token 175: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5760137438774109
    2. ' H' → logprob: -0.8260137438774109
    3. ' range' → logprob: -9.701013565063477
    4. 'range' → logprob: -11.576013565063477
    5. ' ' → logprob: -13.326013565063477
    6. '(H' → logprob: -14.451013565063477
    7. '	H' → logprob: -14.576013565063477
    8. ' ' → logprob: -14.701013565063477
    9. ' (' → logprob: -15.701013565063477
    10. '<H' → logprob: -16.201013565063477

Token 176: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6375735998153687
    2. ' :' → logprob: -0.7625735998153687
    3. ' :
' → logprob: -6.387573719024658
    4. ' ' → logprob: -7.012573719024658
    5. ':
' → logprob: -7.137573719024658
    6. 'for' → logprob: -8.3875732421875
    7. '):' → logprob: -8.3875732421875
    8. ' for' → logprob: -8.7625732421875
    9. ')' → logprob: -8.8875732421875
    10. 'range' → logprob: -9.1375732421875

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '-' → logprob: -17.000804901123047
    4. ')' → logprob: -17.375804901123047
    5. '2' → logprob: -18.000804901123047
    6. '```' → logprob: -18.250804901123047
    7. ' ' → logprob: -18.875804901123047
    8. '  ' → logprob: -18.938304901123047
    9. ' -' → logprob: -19.063304901123047
    10. ',' → logprob: -19.500804901123047

Token 178: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6652556657791138
    2. 'for' → logprob: -2.040255546569824
    3. ' for' → logprob: -2.040255546569824
    4. '
' → logprob: -2.290255546569824
    5. ' 
' → logprob: -2.915255546569824
    6. ':
' → logprob: -3.665255546569824
    7. ' :' → logprob: -4.040255546569824
    8. ' :
' → logprob: -4.165255546569824
    9. '  
' → logprob: -5.415255546569824
    10. '\n' → logprob: -5.665255546569824

Token 179: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8208791613578796
    2. 'for' → logprob: -1.5708792209625244
    3. ' for' → logprob: -1.6958792209625244
    4. '
' → logprob: -2.1958792209625244
    5. ':
' → logprob: -3.6958792209625244
    6. ' :
' → logprob: -4.570878982543945
    7. ' 
' → logprob: -4.820878982543945
    8. ',' → logprob: -5.570878982543945
    9. '  
' → logprob: -5.570878982543945
    10. ' :' → logprob: -5.570878982543945

Token 180: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3278108537197113
    2. '
' → logprob: -1.8278108835220337
    3. ' for' → logprob: -2.202810764312744
    4. ' 
' → logprob: -5.202810764312744
    5. ':' → logprob: -6.327810764312744
    6. '  
' → logprob: -8.452811241149902
    7. '\n' → logprob: -8.702811241149902
    8. ':
' → logprob: -8.827811241149902
    9. '' → logprob: -8.952811241149902
    10. 'i' → logprob: -9.327811241149902

Token 181: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05514596030116081
    2. ' ' → logprob: -2.9301459789276123
    3. 'i' → logprob: -8.430146217346191
    4. ' ' → logprob: -10.680146217346191
    5. ' ‌' → logprob: -11.305146217346191
    6. '  ' → logprob: -12.680146217346191
    7. ' _' → logprob: -12.680146217346191
    8. '	i' → logprob: -13.430146217346191
    9. '_' → logprob: -14.305146217346191
    10. ' ' → logprob: -14.430146217346191

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009787493385374546
    2. 'in' → logprob: -4.634787559509277
    3. ' ' → logprob: -10.509787559509277
    4. ' ' → logprob: -13.509787559509277
    5. ' i' → logprob: -14.134787559509277
    6. '	in' → logprob: -14.384787559509277
    7. 'n' → logprob: -14.634787559509277
    8. 'range' → logprob: -15.634787559509277
    9. '  ' → logprob: -15.759787559509277
    10. ')' → logprob: -16.00978660583496

Token 183: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00671584764495492
    2. 'range' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.631715774536133
    4. '	range' → logprob: -16.256715774536133
    5. '(range' → logprob: -16.756715774536133
    6. ' rang' → logprob: -17.131715774536133
    7. ' xrange' → logprob: -18.006715774536133
    8. ' rango' → logprob: -18.631715774536133
    9. ' ' → logprob: -19.131715774536133
    10. ' in' → logprob: -19.506715774536133

Token 184: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.12695299088954926
    2. '(' → logprob: -2.126952886581421
    3. '(
' → logprob: -10.626953125
    4. ' (' → logprob: -14.626953125
    5. '((' → logprob: -16.751953125
    6. '(int' → logprob: -17.001953125
    7. '(i' → logprob: -17.126953125
    8. '(I' → logprob: -17.251953125
    9. '(W' → logprob: -17.751953125
    10. '(

' → logprob: -17.876953125

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012678056373260915
    2. ')' → logprob: -9.875126838684082
    3. ':' → logprob: -10.375126838684082
    4. ' ):' → logprob: -10.625126838684082
    5. '):
' → logprob: -10.875126838684082
    6. '+' → logprob: -15.375126838684082
    7. '():' → logprob: -15.750126838684082
    8. '):
' → logprob: -16.375125885009766
    9. ' :' → logprob: -16.750125885009766
    10. ']:' → logprob: -16.875125885009766

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10555698722600937
    2. ' a' → logprob: -3.1055569648742676
    3. 'a' → logprob: -3.9805569648742676
    4. '    
' → logprob: -4.230556964874268
    5. ' 
' → logprob: -4.230556964874268
    6. '     
' → logprob: -6.105556964874268
    7. ' ' → logprob: -6.480556964874268
    8. '    ' → logprob: -6.605556964874268
    9. '  
' → logprob: -7.730556964874268
    10. '   
' → logprob: -7.980556964874268

Token 187: ' #' (ID: 1069)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2471122145652771
    2. 'a' → logprob: -2.247112274169922
    3. ' ' → logprob: -2.872112274169922
    4. ' line' → logprob: -4.122112274169922
    5. ' 
' → logprob: -4.622112274169922
    6. '    ' → logprob: -4.997112274169922
    7. '     
' → logprob: -5.122112274169922
    8. ' ligne' → logprob: -5.622112274169922
    9. ' ' → logprob: -5.747112274169922
    10. '   ' → logprob: -5.747112274169922

Token 188: ' Pour' (ID: 13931)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6090947389602661
    2. ' row' → logprob: -1.7340947389602661
    3. 'line' → logprob: -2.1090946197509766
    4. 'row' → logprob: -2.6090946197509766
    5. ' ligne' → logprob: -2.9840946197509766
    6. 'ligne' → logprob: -3.4840946197509766
    7. 'a' → logprob: -6.484094619750977
    8. 'l' → logprob: -7.734094619750977
    9. 's' → logprob: -7.859094619750977
    10. ' a' → logprob: -8.109094619750977

Token 189: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5936594009399414
    2. '    ' → logprob: -1.2186594009399414
    3. ' ' → logprob: -2.9686594009399414
    4. ' a' → logprob: -3.0936594009399414
    5. '   ' → logprob: -4.218659400939941
    6. 'a' → logprob: -4.468659400939941
    7. ' input' → logprob: -4.843659400939941
    8. ' i' → logprob: -5.593659400939941
    9. ' saisir' → logprob: -5.593659400939941
    10. '_' → logprob: -5.718659400939941

Token 190: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06825019419193268
    2. ' ligne' → logprob: -3.6932501792907715
    3. '    ' → logprob: -3.9432501792907715
    4. '   ' → logprob: -4.5682501792907715
    5. ' range' → logprob: -5.5682501792907715
    6. ' line' → logprob: -6.0682501792907715
    7. ' i' → logprob: -7.0682501792907715
    8. ' ' → logprob: -7.3182501792907715
    9. '  ' → logprob: -7.4432501792907715
    10. 'ligne' → logprob: -7.5682501792907715

Token 191: 'ération' (ID: 24977)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2015596181154251
    2. 'er' → logprob: -1.9515596628189087
    3. 'ère' → logprob: -4.326559543609619
    4. 'ération' → logprob: -5.326559543609619
    5. 'érer' → logprob: -5.576559543609619
    6. ' ' → logprob: -5.951559543609619
    7. '  ' → logprob: -6.326559543609619
    8. 'érieur' → logprob: -6.451559543609619
    9. 're' → logprob: -6.701559543609619
    10. 'érieure' → logprob: -6.701559543609619

Token 192: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5926837921142578
    2. ',' → logprob: -1.3426837921142578
    3. ' ,' → logprob: -2.342683792114258
    4. '    ' → logprob: -3.342683792114258
    5. 'a' → logprob: -3.967683792114258
    6. ' ' → logprob: -4.467683792114258
    7. ':' → logprob: -4.842683792114258
    8. ' a' → logprob: -5.342683792114258
    9. '     
' → logprob: -5.592683792114258
    10. ' :' → logprob: -5.717683792114258

Token 193: ' lire' (ID: 46082)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2677665054798126
    2. ' line' → logprob: -1.8927664756774902
    3. 'a' → logprob: -2.8927664756774902
    4. ' ligne' → logprob: -4.26776647567749
    5. ' row' → logprob: -5.39276647567749
    6. '    ' → logprob: -5.64276647567749
    7. '   ' → logprob: -6.39276647567749
    8. ' ' → logprob: -6.39276647567749
    9. ' lignes' → logprob: -7.26776647567749
    10. 'line' → logprob: -7.39276647567749

Token 194: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12788346409797668
    2. ' ' → logprob: -3.0028834342956543
    3. ' une' → logprob: -4.377883434295654
    4. '   ' → logprob: -4.377883434295654
    5. ' a' → logprob: -4.502883434295654
    6. 'a' → logprob: -4.877883434295654
    7. '    ' → logprob: -5.127883434295654
    8. ' la' → logprob: -5.127883434295654
    9. '(' → logprob: -5.502883434295654
    10. ' input' → logprob: -5.627883434295654

Token 195: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.21857164800167084
    2. 'ligne' → logprob: -2.468571662902832
    3. ' input' → logprob: -3.343571662902832
    4. ' ' → logprob: -3.593571662902832
    5. ' chaîne' → logprob: -4.093571662902832
    6. '()' → logprob: -4.718571662902832
    7. 'input' → logprob: -5.218571662902832
    8. ' nouvelle' → logprob: -5.468571662902832
    9. 'chaine' → logprob: -5.718571662902832
    10. ' chaine' → logprob: -5.968571662902832

Token 196: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008467652834951878
    2. '    ' → logprob: -6.258467674255371
    3. ' de' → logprob: -6.383467674255371
    4. '    
' → logprob: -6.383467674255371
    5. 'a' → logprob: -6.883467674255371
    6. ',' → logprob: -7.133467674255371
    7. '()' → logprob: -7.633467674255371
    8. ' =' → logprob: -8.383467674255371
    9. ':' → logprob: -8.883467674255371
    10. ' a' → logprob: -9.008467674255371

Token 197: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.7723826766014099
    2. 'e' → logprob: -1.2723827362060547
    3. 'a' → logprob: -1.8973827362060547
    4. ' input' → logprob: -3.3973827362060547
    5. 'es' → logprob: -4.022382736206055
    6. ''' → logprob: -4.522382736206055
    7. ''a' → logprob: -4.522382736206055
    8. 'entrée' → logprob: -4.647382736206055
    9. ''utilisateur' → logprob: -5.022382736206055
    10. 'input' → logprob: -5.522382736206055

Token 198: ' contenant' (ID: 131049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13328306376934052
    2. 'a' → logprob: -2.8832831382751465
    3. '()' → logprob: -3.1332831382751465
    4. ',' → logprob: -4.7582831382751465
    5. '    ' → logprob: -4.8832831382751465
    6. ' =' → logprob: -5.5082831382751465
    7. '    
' → logprob: -6.5082831382751465
    8. ' a' → logprob: -7.2582831382751465
    9. '=' → logprob: -7.8832831382751465
    10. 's' → logprob: -7.8832831382751465

Token 199: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.6738499402999878
    2. 'W' → logprob: -0.9238499402999878
    3. ' une' → logprob: -3.4238500595092773
    4. 'input' → logprob: -3.9238500595092773
    5. ' la' → logprob: -4.673850059509277
    6. ' input' → logprob: -4.673850059509277
    7. 'une' → logprob: -5.298850059509277
    8. 'a' → logprob: -5.923850059509277
    9. ' un' → logprob: -6.173850059509277
    10. 'str' → logprob: -6.423850059509277

Token 200: ' ent' (ID: 1121)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.34609660506248474
    2. ' caracteres' → logprob: -1.5960966348648071
    3. ' characters' → logprob: -3.9710965156555176
    4. ' caract' → logprob: -4.221096515655518
    5. ')' → logprob: -4.596096515655518
    6. 'car' → logprob: -4.721096515655518
    7. ' espaces' → logprob: -4.971096515655518
    8. ' ' → logprob: -5.721096515655518
    9. '()' → logprob: -5.721096515655518
    10. ' )' → logprob: -5.846096515655518

Token 201: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.008357948623597622
    2. 'ières' → logprob: -5.758358001708984
    3. 't' → logprob: -6.383358001708984
    4. 'er' → logprob: -6.633358001708984
    5. 'ier' → logprob: -7.008358001708984
    6. '   ' → logprob: -7.008358001708984
    7. 'r' → logprob: -9.008358001708984
    8. 'i' → logprob: -9.758358001708984
    9. 'ieres' → logprob: -10.258358001708984
    10. 're' → logprob: -10.633358001708984

Token 202: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09595326334238052
    2. 'a' → logprob: -2.5959532260894775
    3. ' a' → logprob: -4.720953464508057
    4. ',' → logprob: -5.345953464508057
    5. '    ' → logprob: -6.345953464508057
    6. ' ,' → logprob: -7.970953464508057
    7. '   ' → logprob: -7.970953464508057
    8. '	a' → logprob: -8.345952987670898
    9. '    
' → logprob: -8.845952987670898
    10. 's' → logprob: -9.595952987670898

Token 203: 'és' (ID: 1756)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5736116170883179
    2. 'és' → logprob: -0.9486116170883179
    3. 'par' → logprob: -3.5736117362976074
    4. 'é' → logprob: -3.9486117362976074
    5. 'ée' → logprob: -6.948611736297607
    6. 'e' → logprob: -8.44861125946045
    7. 'es' → logprob: -8.44861125946045
    8. 'ées' → logprob: -8.44861125946045
    9. '_par' → logprob: -9.82361125946045
    10. ' by' → logprob: -10.19861125946045

Token 204: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5239640474319458
    2. 'par' → logprob: -0.8989640474319458
    3. '(par' → logprob: -8.523963928222656
    4. '<|end|>' → logprob: -9.023963928222656
    5. 'es' → logprob: -9.273963928222656
    6. '_par' → logprob: -9.398963928222656
    7. '	par' → logprob: -9.898963928222656
    8. ' ' → logprob: -9.898963928222656
    9. '   ' → logprob: -10.023963928222656
    10. 'by' → logprob: -10.648963928222656

Token 205: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7650824189186096
    2. ' espaces' → logprob: -1.7650823593139648
    3. 'des' → logprob: -2.265082359313965
    4. ' un' → logprob: -3.015082359313965
    5. ''espace' → logprob: -3.140082359313965
    6. 'un' → logprob: -3.265082359313965
    7. 'es' → logprob: -3.515082359313965
    8. ' espace' → logprob: -3.515082359313965
    9. ' ' → logprob: -3.890082359313965
    10. ''' → logprob: -4.390082359313965

Token 206: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.11246942728757858
    2. 'es' → logprob: -3.112469434738159
    3. ' espace' → logprob: -3.612469434738159
    4. 'esp' → logprob: -3.612469434738159
    5. 'space' → logprob: -5.98746919631958
    6. 'spaces' → logprob: -6.36246919631958
    7. ''espace' → logprob: -6.61246919631958
    8. ' ' → logprob: -7.61246919631958
    9. ' espacios' → logprob: -7.98746919631958
    10. ''esp' → logprob: -8.487469673156738

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020380595698952675
    2. 'a' → logprob: -4.89538049697876
    3. '    
' → logprob: -5.02038049697876
    4. ',' → logprob: -6.02038049697876
    5. '    ' → logprob: -6.39538049697876
    6. ' a' → logprob: -7.02038049697876
    7. ' ,' → logprob: -7.77038049697876
    8. '     
' → logprob: -8.645380973815918
    9. '   
' → logprob: -9.395380973815918
    10. '  ' → logprob: -9.645380973815918

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026761337649077177
    2. '    
' → logprob: -6.627676010131836
    3. 'a' → logprob: -6.752676010131836
    4. ',' → logprob: -10.002676010131836
    5. '    ' → logprob: -10.502676010131836
    6. ' a' → logprob: -10.502676010131836
    7. '   ' → logprob: -10.627676010131836
    8. ':' → logprob: -11.252676010131836
    9. '	a' → logprob: -12.002676010131836
    10. '   
' → logprob: -12.002676010131836

Token 209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0610397532582283
    2. 'a' → logprob: -3.311039686203003
    3. ' a' → logprob: -3.936039686203003
    4. '    ' → logprob: -7.311039924621582
    5. '    
' → logprob: -7.436039924621582
    6. ' line' → logprob: -7.436039924621582
    7. ' ligne' → logprob: -7.561039924621582
    8. ' lines' → logprob: -8.561039924621582
    9. ' lignes' → logprob: -9.061039924621582
    10. '   ' → logprob: -9.186039924621582

Token 210: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04228227585554123
    2. 'a' → logprob: -3.7922823429107666
    3. ' line' → logprob: -4.9172821044921875
    4. ' a' → logprob: -5.4172821044921875
    5. ' ligne' → logprob: -6.0422821044921875
    6. 'line' → logprob: -6.0422821044921875
    7. 'ligne' → logprob: -6.9172821044921875
    8. '   ' → logprob: -8.167282104492188
    9. ' lignes' → logprob: -8.292282104492188
    10. '    ' → logprob: -8.417282104492188

Token 211: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3869018256664276
    2. '()' → logprob: -1.13690185546875
    3. '(' → logprob: -11.26190185546875
    4. '()
' → logprob: -12.88690185546875
    5. '()).' → logprob: -12.88690185546875
    6. '.' → logprob: -13.13690185546875
    7. '())' → logprob: -13.13690185546875
    8. '()[' → logprob: -13.38690185546875
    9. ' ()' → logprob: -13.76190185546875
    10. '()]' → logprob: -14.13690185546875

Token 212: ' obt' (ID: 5564)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.3462543487548828
    2. '_' → logprob: -1.5962543487548828
    3. '()' → logprob: -1.7212543487548828
    4. '_l' → logprob: -2.346254348754883
    5. ')' → logprob: -2.596254348754883
    6. '_lines' → logprob: -2.971254348754883
    7. '().' → logprob: -3.846254348754883
    8. '.' → logprob: -4.096254348754883
    9. ',' → logprob: -4.346254348754883
    10. '_values' → logprob: -4.596254348754883

Token 213: 'ient' (ID: 773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5376541018486023
    2. 'ient' → logprob: -1.662654161453247
    3. '()' → logprob: -2.037654161453247
    4. 'u' → logprob: -3.912654161453247
    5. 'ent' → logprob: -4.037653923034668
    6. 'er' → logprob: -4.162653923034668
    7. ' ' → logprob: -5.287653923034668
    8. 'enir' → logprob: -5.287653923034668
    9. 'enant' → logprob: -5.537653923034668
    10. 'endre' → logprob: -5.537653923034668

Token 214: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7695944309234619
    2. '().' → logprob: -1.394594430923462
    3. ' une' → logprob: -2.019594430923462
    4. ' la' → logprob: -2.769594430923462
    5. '   ' → logprob: -3.019594430923462
    6. 'a' → logprob: -5.019594192504883
    7. '    ' → logprob: -5.144594192504883
    8. ' ' → logprob: -5.269594192504883
    9. ' =' → logprob: -5.519594192504883
    10. ' les' → logprob: -5.644594192504883

Token 215: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7462797164916992
    2. 'liste' → logprob: -2.246279716491699
    3. 'ligne' → logprob: -2.371279716491699
    4. 'a' → logprob: -2.496279716491699
    5. 'string' → logprob: -3.496279716491699
    6. 'val' → logprob: -3.746279716491699
    7. 'l' → logprob: -3.746279716491699
    8. ' chaîne' → logprob: -3.871279716491699
    9. ' ligne' → logprob: -4.121279716491699
    10. 'list' → logprob: -4.246279716491699

Token 216: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38560137152671814
    2. '()' → logprob: -2.010601282119751
    3. ' de' → logprob: -2.885601282119751
    4. '().' → logprob: -3.135601282119751
    5. 'a' → logprob: -3.510601282119751
    6. ' =' → logprob: -5.01060152053833
    7. 'de' → logprob: -5.13560152053833
    8. '    ' → logprob: -5.13560152053833
    9. ',' → logprob: -5.26060152053833
    10. ' a' → logprob: -5.51060152053833

Token 217: ' .' (ID: 887)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13326574862003326
    2. ' line' → logprob: -2.758265733718872
    3. 'line' → logprob: -4.383265972137451
    4. ' ligne' → logprob: -4.758265972137451
    5. ' a' → logprob: -5.133265972137451
    6. 'a' → logprob: -5.383265972137451
    7. '    ' → logprob: -5.383265972137451
    8. ' row' → logprob: -5.508265972137451
    9. 'b' → logprob: -5.758265972137451
    10. ' values' → logprob: -6.133265972137451

Token 218: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005557744298130274
    2. 'strip' → logprob: -7.500555992126465
    3. ' split' → logprob: -13.125555992126465
    4. 'rstrip' → logprob: -14.250555992126465
    5. 'spl' → logprob: -17.00055503845215
    6. '(split' → logprob: -17.87555503845215
    7. 'plit' → logprob: -18.75055503845215
    8. '_split' → logprob: -19.12555503845215
    9. 'replace' → logprob: -19.75055503845215
    10. 's' → logprob: -19.75055503845215

Token 219: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004049322451464832
    2. '(' → logprob: -8.000405311584473
    3. '('' → logprob: -10.625405311584473
    4. '(),' → logprob: -10.625405311584473
    5. ' ()' → logprob: -12.000405311584473
    6. '()[' → logprob: -12.500405311584473
    7. '().' → logprob: -12.875405311584473
    8. '()]' → logprob: -13.500405311584473
    9. '())' → logprob: -13.500405311584473
    10. '()>' → logprob: -13.625405311584473

Token 220: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01819724030792713
    2. '   ' → logprob: -4.393197059631348
    3. '().' → logprob: -5.518197059631348
    4. ',' → logprob: -8.143197059631348
    5. '(),' → logprob: -8.393197059631348
    6. '())' → logprob: -8.768197059631348
    7. ')' → logprob: -8.893197059631348
    8. '    ' → logprob: -9.143197059631348
    9. '()
' → logprob: -9.268197059631348
    10. '(' → logprob: -9.393197059631348

Token 221: ' div' (ID: 4223)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00531451590359211
    2. '.split' → logprob: -5.380314350128174
    3. ' split' → logprob: -8.005314826965332
    4. 'div' → logprob: -8.630314826965332
    5. 'spl' → logprob: -9.380314826965332
    6. 's' → logprob: -11.005314826965332
    7. 'sc' → logprob: -11.255314826965332
    8. 'divide' → logprob: -11.630314826965332
    9. 'sé' → logprob: -11.755314826965332
    10. ' .' → logprob: -12.005314826965332

Token 222: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0021971215028315783
    2. 'ide' → logprob: -6.502197265625
    3. '()' → logprob: -8.502197265625
    4. '   ' → logprob: -9.377197265625
    5. '```' → logprob: -9.752197265625
    6. '
' → logprob: -9.877197265625
    7. '#' → logprob: -10.002197265625
    8. '(' → logprob: -10.627197265625
    9. '[' → logprob: -10.627197265625
    10. '>' → logprob: -11.252197265625

Token 223: ' autour' (ID: 39420)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2709592580795288
    2. '   ' → logprob: -1.6459592580795288
    3. 'a' → logprob: -3.3959593772888184
    4. '(),' → logprob: -5.770959377288818
    5. ',' → logprob: -6.145959377288818
    6. '[' → logprob: -6.520959377288818
    7. ')' → logprob: -6.770959377288818
    8. ' a' → logprob: -7.270959377288818
    9. '=' → logprob: -8.02095890045166
    10. '()
' → logprob: -8.27095890045166

Token 224: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6087491512298584
    2. ' des' → logprob: -0.8587491512298584
    3. '   ' → logprob: -3.9837491512298584
    4. '()' → logprob: -5.2337493896484375
    5. '('' → logprob: -5.2337493896484375
    6. '['' → logprob: -6.9837493896484375
    7. 'par' → logprob: -6.9837493896484375
    8. ' par' → logprob: -7.7337493896484375
    9. 'd' → logprob: -9.108749389648438
    10. '    ' → logprob: -9.608749389648438

Token 225: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.025092998519539833
    2. 'spaces' → logprob: -4.400093078613281
    3. ' espaces' → logprob: -4.775093078613281
    4. ''esp' → logprob: -5.775093078613281
    5. 'es' → logprob: -7.150093078613281
    6. ''espace' → logprob: -9.525093078613281
    7. ''' → logprob: -10.900093078613281
    8. 'space' → logprob: -11.025093078613281
    9. '’esp' → logprob: -11.025093078613281
    10. 'sp' → logprob: -11.275093078613281

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07701654732227325
    2. 'a' → logprob: -2.827016592025757
    3. ',' → logprob: -4.452016353607178
    4. ' a' → logprob: -6.577016353607178
    5. ')' → logprob: -7.327016353607178
    6. ' ,' → logprob: -8.327016830444336
    7. '    
' → logprob: -8.452016830444336
    8. '()' → logprob: -8.827016830444336
    9. ' =' → logprob: -8.952016830444336
    10. '    ' → logprob: -9.702016830444336

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01976238377392292
    2. 'a' → logprob: -4.0197625160217285
    3. ',' → logprob: -7.1447625160217285
    4. ' a' → logprob: -7.5197625160217285
    5. '    
' → logprob: -8.76976203918457
    6. '    ' → logprob: -10.39476203918457
    7. '       ' → logprob: -10.89476203918457
    8. '  ' → logprob: -11.01976203918457
    9. ' ,' → logprob: -11.14476203918457
    10. '   ' → logprob: -12.01976203918457

Token 228: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4735342264175415
    2. 'a' → logprob: -1.0985342264175415
    3. ' a' → logprob: -3.598534107208252
    4. 'line' → logprob: -5.223534107208252
    5. 'ligne' → logprob: -5.598534107208252
    6. ' line' → logprob: -5.848534107208252
    7. ' ligne' → logprob: -6.723534107208252
    8. 'l' → logprob: -7.098534107208252
    9. '    
' → logprob: -7.723534107208252
    10. ' ' → logprob: -7.848534107208252

Token 229: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6171147227287292
    2. ' a' → logprob: -1.617114782333374
    3. ' line' → logprob: -2.492114782333374
    4. '   ' → logprob: -2.867114782333374
    5. 'line' → logprob: -3.242114782333374
    6. 'map' → logprob: -3.742114782333374
    7. ' row' → logprob: -3.867114782333374
    8. 'row' → logprob: -4.242114543914795
    9. ' map' → logprob: -4.242114543914795
    10. 'ligne' → logprob: -6.242114543914795

Token 230: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031966082751750946
    2. '(' → logprob: -5.753196716308594
    3. 'int' → logprob: -12.128196716308594
    4. '<int' → logprob: -12.378196716308594
    5. '(
' → logprob: -12.628196716308594
    6. '=int' → logprob: -13.003196716308594
    7. ' (' → logprob: -13.628196716308594
    8. '[int' → logprob: -13.878196716308594
    9. ',int' → logprob: -14.003196716308594
    10. ' int' → logprob: -16.003196716308594

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010437761375214905
    2. ',input' → logprob: -10.250103950500488
    3. ' ,' → logprob: -10.625103950500488
    4. ',a' → logprob: -11.250103950500488
    5. ',map' → logprob: -11.250103950500488
    6. ',int' → logprob: -12.375103950500488
    7. 'a' → logprob: -12.500103950500488
    8. ')' → logprob: -12.500103950500488
    9. '(' → logprob: -13.125103950500488
    10. ',...' → logprob: -13.875103950500488

Token 232: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0314675569534302
    2. '...)' → logprob: -1.1564675569534302
    3. 'input' → logprob: -1.5314675569534302
    4. ')' → logprob: -2.2814674377441406
    5. '...' → logprob: -4.906467437744141
    6. ' ...)' → logprob: -6.281467437744141
    7. ' )' → logprob: -7.656467437744141
    8. ')...' → logprob: -8.15646743774414
    9. ' ...' → logprob: -8.53146743774414
    10. ' a' → logprob: -9.53146743774414

Token 233: ' convert' (ID: 8452)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5349341034889221
    2. ' a' → logprob: -1.2849340438842773
    3. ' =' → logprob: -2.9099340438842773
    4. ')' → logprob: -3.6599340438842773
    5. '   ' → logprob: -4.159934043884277
    6. '=' → logprob: -4.284934043884277
    7. ',' → logprob: -4.534934043884277
    8. '(' → logprob: -5.909934043884277
    9. '(a' → logprob: -6.159934043884277
    10. '_a' → logprob: -6.784934043884277

Token 234: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.17679625749588013
    2. '(int' → logprob: -2.0517961978912354
    3. '(' → logprob: -4.1767964363098145
    4. '=int' → logprob: -5.3017964363098145
    5. 'e' → logprob: -5.8017964363098145
    6. 'int' → logprob: -5.9267964363098145
    7. '(it' → logprob: -6.3017964363098145
    8. 'i' → logprob: -7.0517964363098145
    9. ')' → logprob: -7.0517964363098145
    10. 'ir' → logprob: -7.1767964363098145

Token 235: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5764280557632446
    2. 'int' → logprob: -1.2014280557632446
    3. ' les' → logprob: -2.951427936553955
    4. 'les' → logprob: -3.826427936553955
    5. '   ' → logprob: -4.076427936553955
    6. ' int' → logprob: -4.326427936553955
    7. ' chaque' → logprob: -4.451427936553955
    8. ')' → logprob: -4.701427936553955
    9. ' la' → logprob: -6.076427936553955
    10. 'la' → logprob: -6.201427936553955

Token 236: ' valeur' (ID: 41664)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2739790678024292
    2. 'int' → logprob: -1.5239790678024292
    3. 'élé' → logprob: -5.148979187011719
    4. '(' → logprob: -5.398979187011719
    5. ' int' → logprob: -5.523979187011719
    6. ')' → logprob: -5.773979187011719
    7. 'ent' → logprob: -6.398979187011719
    8. ',int' → logprob: -7.523979187011719
    9. '()' → logprob: -7.898979187011719
    10. ' (' → logprob: -8.148979187011719

Token 237: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.1163731813430786
    2. ')' → logprob: -1.3663731813430786
    3. ',' → logprob: -1.7413731813430786
    4. '(' → logprob: -1.9913731813430786
    5. '   ' → logprob: -3.616373062133789
    6. 'a' → logprob: -3.616373062133789
    7. 'int' → logprob: -4.241373062133789
    8. ',int' → logprob: -4.741373062133789
    9. ' des' → logprob: -5.991373062133789
    10. ' en' → logprob: -6.241373062133789

Token 238: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.57616126537323
    2. ' int' → logprob: -0.82616126537323
    3. 'ent' → logprob: -9.20116138458252
    4. ' entier' → logprob: -10.45116138458252
    5. ' integers' → logprob: -10.70116138458252
    6. ' ent' → logprob: -10.95116138458252
    7. ' ' → logprob: -11.20116138458252
    8. 'inte' → logprob: -11.32616138458252
    9. '(int' → logprob: -11.95116138458252
    10. 'ints' → logprob: -12.70116138458252

Token 239: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030262155458331108
    2. 'a' → logprob: -4.030261993408203
    3. ' a' → logprob: -4.780261993408203
    4. ',' → logprob: -6.030261993408203
    5. ')' → logprob: -7.280261993408203
    6. '    
' → logprob: -9.030261993408203
    7. ' ,' → logprob: -9.530261993408203
    8. '    ' → logprob: -9.905261993408203
    9. ' line' → logprob: -9.905261993408203
    10. '	a' → logprob: -10.155261993408203

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030546266585588455
    2. 'a' → logprob: -3.780546188354492
    3. ' a' → logprob: -5.280546188354492
    4. '    
' → logprob: -7.280546188354492
    5. '	a' → logprob: -7.780546188354492
    6. ' line' → logprob: -8.030546188354492
    7. ' ligne' → logprob: -9.155546188354492
    8. ',' → logprob: -9.405546188354492
    9. '   ' → logprob: -9.405546188354492
    10. ':' → logprob: -9.530546188354492

Token 241: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7030487060546875
    2. 'line' → logprob: -1.3280487060546875
    3. ' line' → logprob: -2.0780487060546875
    4. 'a' → logprob: -2.8280487060546875
    5. 'row' → logprob: -3.9530487060546875
    6. ' row' → logprob: -4.3280487060546875
    7. ' a' → logprob: -4.4530487060546875
    8. 'ligne' → logprob: -5.0780487060546875
    9. ' ligne' → logprob: -5.8280487060546875
    10. '    
' → logprob: -6.7030487060546875

Token 242: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7955487966537476
    2. 'a' → logprob: -1.7955487966537476
    3. ' line' → logprob: -1.9205487966537476
    4. 'row' → logprob: -2.045548915863037
    5. ' row' → logprob: -2.795548915863037
    6. ' a' → logprob: -4.295548915863037
    7. 'ligne' → logprob: -4.295548915863037
    8. '   ' → logprob: -4.420548915863037
    9. ' ligne' → logprob: -5.420548915863037
    10. 'values' → logprob: -7.795548915863037

Token 243: '(...)' (ID: 96375)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07931175082921982
    2. '(' → logprob: -2.5793118476867676
    3. '(int' → logprob: -8.20431137084961
    4. '(
' → logprob: -9.82931137084961
    5. '(list' → logprob: -10.45431137084961
    6. '()' → logprob: -10.95431137084961
    7. ',map' → logprob: -11.07931137084961
    8. '(m' → logprob: -11.45431137084961
    9. 'map' → logprob: -12.07931137084961
    10. '(convert' → logprob: -13.07931137084961

Token 244: ' transforme' (ID: 184109)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05791360139846802
    2. ' =' → logprob: -3.8079135417938232
    3. '.append' → logprob: -4.182913780212402
    4. '=' → logprob: -4.682913780212402
    5. ' a' → logprob: -5.807913780212402
    6. '   ' → logprob: -6.432913780212402
    7. ')' → logprob: -6.682913780212402
    8. '()' → logprob: -7.182913780212402
    9. 'append' → logprob: -7.432913780212402
    10. '_a' → logprob: -8.182913780212402

Token 245: ' le' (ID: 505)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31712883710861206
    2. '(map' → logprob: -1.3171288967132568
    3. 'la' → logprob: -5.942128658294678
    4. 'int' → logprob: -7.817128658294678
    5. ' map' → logprob: -8.567129135131836
    6. '(' → logprob: -8.692129135131836
    7. '   ' → logprob: -8.817129135131836
    8. 'le' → logprob: -9.317129135131836
    9. ' la' → logprob: -10.067129135131836
    10. ',map' → logprob: -10.442129135131836

Token 246: ' résultat' (ID: 62556)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0023039355874061584
    2. ' map' → logprob: -6.5023040771484375
    3. 'list' → logprob: -7.7523040771484375
    4. '(map' → logprob: -8.627304077148438
    5. 'result' → logprob: -9.627304077148438
    6. 'mapped' → logprob: -10.252304077148438
    7. 'ma' → logprob: -11.252304077148438
    8. 'a' → logprob: -11.377304077148438
    9. ' list' → logprob: -11.627304077148438
    10. ')' → logprob: -11.877304077148438

Token 247: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.680398166179657
    2. '(map' → logprob: -1.4303982257843018
    3. '(' → logprob: -1.8053982257843018
    4. 'en' → logprob: -2.8053982257843018
    5. ')' → logprob: -4.930397987365723
    6. '(list' → logprob: -5.180397987365723
    7. '   ' → logprob: -5.305397987365723
    8. 'int' → logprob: -6.055397987365723
    9. '(
' → logprob: -6.180397987365723
    10. 'map' → logprob: -7.180397987365723

Token 248: ' une' (ID: 2463)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.12934675812721252
    2. ' list' → logprob: -3.0043468475341797
    3. ' une' → logprob: -3.3793468475341797
    4. 'liste' → logprob: -3.8793468475341797
    5. 'list' → logprob: -5.12934684753418
    6. ' a' → logprob: -5.12934684753418
    7. 'a' → logprob: -6.00434684753418
    8. 'une' → logprob: -6.75434684753418
    9. '[]' → logprob: -7.50434684753418
    10. ' ' → logprob: -8.00434684753418

Token 249: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5703616142272949
    2. 'liste' → logprob: -1.070361614227295
    3. 'list' → logprob: -2.570361614227295
    4. ' list' → logprob: -4.195361614227295
    5. '[]' → logprob: -9.195362091064453
    6. '[' → logprob: -10.070362091064453
    7. 'a' → logprob: -11.320362091064453
    8. 'lista' → logprob: -11.570362091064453
    9. ' Liste' → logprob: -11.695362091064453
    10. 'Liste' → logprob: -11.945362091064453

Token 250: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3361527919769287
    2. 'a' → logprob: -1.3361527919769287
    3. ' a' → logprob: -4.086153030395508
    4. '(a' → logprob: -6.086153030395508
    5. 'row' → logprob: -6.961153030395508
    6. 'line' → logprob: -7.211153030395508
    7. ' line' → logprob: -7.461153030395508
    8. ' =' → logprob: -8.086153030395508
    9. ' row' → logprob: -8.461153030395508
    10. ' ligne' → logprob: -8.586153030395508

Token 251: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6373631954193115
    2. '(int' → logprob: -1.3873631954193115
    3. ')' → logprob: -2.6373631954193115
    4. 'inte' → logprob: -3.3873631954193115
    5. '[int' → logprob: -3.6373631954193115
    6. ' integers' → logprob: -3.6373631954193115
    7. 'ent' → logprob: -4.262363433837891
    8. 'ints' → logprob: -4.262363433837891
    9. ' int' → logprob: -4.762363433837891
    10. 'ents' → logprob: -4.887363433837891

Token 252: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -7.183501293184236e-05
    2. 'i' → logprob: -10.50007152557373
    3. 'ières' → logprob: -10.87507152557373
    4. 'ier' → logprob: -11.25007152557373
    5. 't' → logprob: -12.75007152557373
    6. 'ers' → logprob: -12.87507152557373
    7. '   ' → logprob: -13.75007152557373
    8. '```' → logprob: -13.87507152557373
    9. 'a' → logprob: -14.00007152557373
    10. 'I' → logprob: -14.12507152557373

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018440400017425418
    2. 'a' → logprob: -6.7518439292907715
    3. ' a' → logprob: -7.6268439292907715
    4. ' line' → logprob: -9.25184440612793
    5. ' ligne' → logprob: -10.37684440612793
    6. '    
' → logprob: -11.37684440612793
    7. 'line' → logprob: -11.50184440612793
    8. '(a' → logprob: -12.37684440612793
    9. '  ' → logprob: -12.50184440612793
    10. '       ' → logprob: -12.50184440612793

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021268262062221766
    2. 'a' → logprob: -6.252126693725586
    3. '    
' → logprob: -9.377126693725586
    4. '   ' → logprob: -10.502126693725586
    5. ' a' → logprob: -10.627126693725586
    6. ' line' → logprob: -11.002126693725586
    7. ' ligne' → logprob: -11.252126693725586
    8. 'line' → logprob: -11.752126693725586
    9. '       ' → logprob: -12.377126693725586
    10. 'ligne' → logprob: -12.502126693725586

Token 255: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0253692865371704
    2. 'a' → logprob: -1.1503692865371704
    3. 'line' → logprob: -1.2753692865371704
    4. ' line' → logprob: -3.900369167327881
    5. 'row' → logprob: -4.650369167327881
    6. 'ligne' → logprob: -4.900369167327881
    7. ' a' → logprob: -5.025369167327881
    8. ' ligne' → logprob: -7.525369167327881
    9. ' row' → logprob: -7.650369167327881
    10. ' ' → logprob: -8.400369644165039

Token 256: ' Cette' (ID: 27383)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5887061357498169
    2. 'line' → logprob: -1.338706135749817
    3. 'row' → logprob: -2.5887060165405273
    4. 'ligne' → logprob: -2.5887060165405273
    5. ' line' → logprob: -4.338706016540527
    6. ' a' → logprob: -5.213706016540527
    7. '   ' → logprob: -5.213706016540527
    8. ' ligne' → logprob: -5.588706016540527
    9. ' row' → logprob: -5.588706016540527
    10. 'l' → logprob: -7.713706016540527

Token 257: ' liste' (ID: 31719)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.1462152004241943
    2. 'ligne' → logprob: -1.3962152004241943
    3. ' a' → logprob: -2.2712152004241943
    4. ' =' → logprob: -2.3962152004241943
    5. 'a' → logprob: -2.5212152004241943
    6. '_' → logprob: -2.7712152004241943
    7. 'l' → logprob: -3.2712152004241943
    8. ' line' → logprob: -4.396215438842773
    9. '_line' → logprob: -4.646215438842773
    10. '_l' → logprob: -4.771215438842773

Token 258: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29804685711860657
    2. 'a' → logprob: -2.298046827316284
    3. '.append' → logprob: -2.798046827316284
    4. '_a' → logprob: -3.298046827316284
    5. ')' → logprob: -4.423047065734863
    6. '_' → logprob: -4.548047065734863
    7. '   ' → logprob: -4.923047065734863
    8. ' a' → logprob: -5.423047065734863
    9. '_line' → logprob: -5.423047065734863
    10. 's' → logprob: -5.673047065734863

Token 259: ' W' (ID: 486)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -1.135022759437561
    2. 'ent' → logprob: -1.760022759437561
    3. 'int' → logprob: -1.760022759437561
    4. ' W' → logprob: -2.0100226402282715
    5. 'W' → logprob: -3.2600226402282715
    6. 'a' → logprob: -3.3850226402282715
    7. ' valeurs' → logprob: -3.6350226402282715
    8. ' a' → logprob: -3.7600226402282715
    9. 'inte' → logprob: -4.0100226402282715
    10. ' int' → logprob: -4.1350226402282715

Token 260: ' ent' (ID: 1121)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3957100510597229
    2. ' ent' → logprob: -1.8957099914550781
    3. 'a' → logprob: -2.270709991455078
    4. ' integers' → logprob: -4.020709991455078
    5. 'ent' → logprob: -4.395709991455078
    6. ')' → logprob: -4.645709991455078
    7. '_ent' → logprob: -5.020709991455078
    8. 's' → logprob: -5.395709991455078
    9. ' valeurs' → logprob: -5.520709991455078
    10. '_' → logprob: -5.895709991455078

Token 261: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00014561474381480366
    2. '   ' → logprob: -9.00014591217041
    3. 'ers' → logprob: -11.87514591217041
    4. 'ières' → logprob: -12.50014591217041
    5. 'ier' → logprob: -13.00014591217041
    6. '       ' → logprob: -13.37514591217041
    7. 't' → logprob: -13.50014591217041
    8. 'gers' → logprob: -13.62514591217041
    9. 'i' → logprob: -13.75014591217041
    10. '     ' → logprob: -14.62514591217041

Token 262: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8997609615325928
    2. ' est' → logprob: -1.7747609615325928
    3. ' =' → logprob: -2.0247609615325928
    4. ')' → logprob: -2.3997609615325928
    5. 'a' → logprob: -2.7747609615325928
    6. 'ligne' → logprob: -3.2747609615325928
    7. ' ligne' → logprob: -3.7747609615325928
    8. ' line' → logprob: -4.149761199951172
    9. ',' → logprob: -4.274761199951172
    10. ' a' → logprob: -4.774761199951172

Token 263: ' ajout' (ID: 64605)
  Prédit: ' appended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appended' → logprob: -1.1548384428024292
    2. ' ajout' → logprob: -1.2798384428024292
    3. '   ' → logprob: -2.1548385620117188
    4. '.append' → logprob: -2.6548385620117188
    5. ' a' → logprob: -2.7798385620117188
    6. ' append' → logprob: -3.0298385620117188
    7. ' stock' → logprob: -3.9048385620117188
    8. ' ajouté' → logprob: -4.029838562011719
    9. '    ' → logprob: -4.154838562011719
    10. 'append' → logprob: -4.654838562011719

Token 264: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003276818199083209
    2. ' e' → logprob: -7.378276824951172
    3. '.append' → logprob: -7.503276824951172
    4. 'er' → logprob: -7.628276824951172
    5. 'ée' → logprob: -7.878276824951172
    6. '   ' → logprob: -8.003276824951172
    7. ' a' → logprob: -8.378276824951172
    8. ' ' → logprob: -9.003276824951172
    9. 'ue' → logprob: -9.003276824951172
    10. '_' → logprob: -9.378276824951172

Token 265: ' à' (ID: 1221)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7343533039093018
    2. ' à' → logprob: -0.8593533039093018
    3. '   ' → logprob: -2.4843533039093018
    4. 'a' → logprob: -5.359353065490723
    5. ')' → logprob: -5.859353065490723
    6. ' au' → logprob: -6.609353065490723
    7. ',' → logprob: -7.234353065490723
    8. '.append' → logprob: -7.609353065490723
    9. '    ' → logprob: -7.734353065490723
    10. ' ' → logprob: -7.734353065490723

Token 266: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326404213905334
    2. ' a' → logprob: -1.313264012336731
    3. ' ' → logprob: -13.313263893127441
    4. ' ' → logprob: -15.063263893127441
    5. '	a' → logprob: -15.438263893127441
    6. ' la' → logprob: -15.938263893127441
    7. '_a' → logprob: -16.563264846801758
    8. ' the' → logprob: -16.563264846801758
    9. '   ' → logprob: -18.438264846801758
    10. ''a' → logprob: -19.063264846801758

Token 267: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024826733861118555
    2. ' a' → logprob: -6.002482891082764
    3. 'liste' → logprob: -12.252482414245605
    4. ' liste' → logprob: -14.002482414245605
    5. 'b' → logprob: -14.752482414245605
    6. '#a' → logprob: -15.002482414245605
    7. '_a' → logprob: -15.627482414245605
    8. '	a' → logprob: -16.127483367919922
    9. ''a' → logprob: -16.627483367919922
    10. 'append' → logprob: -16.877483367919922

Token 268: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47423774003982544
    2. ' a' → logprob: -0.9742377400398254
    3. '   ' → logprob: -9.099237442016602
    4. '	a' → logprob: -10.599237442016602
    5. '.append' → logprob: -11.599237442016602
    6. '_a' → logprob: -12.474237442016602
    7. '.' → logprob: -13.099237442016602
    8. 'e' → logprob: -14.224237442016602
    9. ' ' → logprob: -14.349237442016602
    10. ')' → logprob: -14.349237442016602

Token 269: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024756586644798517
    2. ' a' → logprob: -6.002475738525391
    3. '(a' → logprob: -17.87747573852539
    4. ')a' → logprob: -19.37747573852539
    5. ''a' → logprob: -19.50247573852539
    6. '	a' → logprob: -19.50247573852539
    7. '   ' → logprob: -19.62747573852539
    8. ' ' → logprob: -19.87747573852539
    9. ')' → logprob: -20.25247573852539
    10. '_a' → logprob: -21.00247573852539

Token 270: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0282642841339111
    2. '   ' → logprob: -1.0282642841339111
    3. '.append' → logprob: -1.2782642841339111
    4. 'a' → logprob: -6.278264045715332
    5. '.' → logprob: -6.278264045715332
    6. ').' → logprob: -6.403264045715332
    7. ')
' → logprob: -8.528264045715332
    8. ')a' → logprob: -8.653264045715332
    9. '[a' → logprob: -9.528264045715332
    10. ' a' → logprob: -9.903264045715332

Token 271: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008787579834461212
    2. 'a' → logprob: -4.883787631988525
    3. ' a' → logprob: -7.383787631988525
    4. '    
' → logprob: -7.883787631988525
    5. '    ' → logprob: -10.133787155151367
    6. ')' → logprob: -10.133787155151367
    7. '       ' → logprob: -10.883787155151367
    8. '(a' → logprob: -11.383787155151367
    9. '[a' → logprob: -11.383787155151367
    10. '  ' → logprob: -11.508787155151367

Token 272: ' devient' (ID: 63488)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000824156915768981
    2. '.' → logprob: -7.125823974609375
    3. ' .' → logprob: -11.125823974609375
    4. 'append' → logprob: -13.125823974609375
    5. '.setdefault' → logprob: -13.750823974609375
    6. '.insert' → logprob: -14.875823974609375
    7. ' append' → logprob: -15.125823974609375
    8. '   ' → logprob: -15.250823974609375
    9. '_append' → logprob: -15.250823974609375
    10. '.extend' → logprob: -15.375823974609375

Token 273: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7183387279510498
    2. '   ' → logprob: -1.4683387279510498
    3. '.append' → logprob: -1.7183387279510498
    4. 'a' → logprob: -2.34333872795105
    5. ' une' → logprob: -5.718338966369629
    6. ' append' → logprob: -7.343338966369629
    7. 'une' → logprob: -7.468338966369629
    8. ' la' → logprob: -7.593338966369629
    9. '    ' → logprob: -7.968338966369629
    10. '[a' → logprob: -8.093338966369629

Token 274: ' liste' (ID: 31719)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6973274946212769
    2. ' liste' → logprob: -2.0723276138305664
    3. 'ligne' → logprob: -2.3223276138305664
    4. '   ' → logprob: -2.9473276138305664
    5. ' grille' → logprob: -2.9473276138305664
    6. ' ' → logprob: -3.1973276138305664
    7. 'liste' → logprob: -3.3223276138305664
    8. ' nouvelle' → logprob: -3.6973276138305664
    9. 'a' → logprob: -4.197327613830566
    10. 'gr' → logprob: -4.197327613830566

Token 275: ' de' (ID: 334)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0070674666203558445
    2. '   ' → logprob: -5.632067680358887
    3. '.' → logprob: -6.007067680358887
    4. 'append' → logprob: -8.132067680358887
    5. 'de' → logprob: -8.257067680358887
    6. 'a' → logprob: -8.507067680358887
    7. '[' → logprob: -9.757067680358887
    8. '[]' → logprob: -9.882067680358887
    9. ' de' → logprob: -10.007067680358887
    10. ' append' → logprob: -11.382067680358887

Token 276: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02084420621395111
    2. ' listes' → logprob: -4.520843982696533
    3. 'lists' → logprob: -5.145843982696533
    4. 'a' → logprob: -6.270843982696533
    5. 'liste' → logprob: -6.895843982696533
    6. 'l' → logprob: -7.895843982696533
    7. ' list' → logprob: -8.270844459533691
    8. '   ' → logprob: -8.895844459533691
    9. ' ' → logprob: -9.645844459533691
    10. 'la' → logprob: -10.145844459533691

Token 277: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031279250979423523
    2. 'a' → logprob: -5.8781280517578125
    3. ' a' → logprob: -8.753128051757812
    4. '    
' → logprob: -9.878128051757812
    5. '.' → logprob: -10.503128051757812
    6. '       ' → logprob: -10.753128051757812
    7. '  ' → logprob: -11.128128051757812
    8. ',' → logprob: -11.878128051757812
    9. '.append' → logprob: -12.003128051757812
    10. '
' → logprob: -12.128128051757812

Token 278: 'mat' (ID: 8872)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40493524074554443
    2. 'a' → logprob: -1.5299352407455444
    3. ' a' → logprob: -3.029935359954834
    4. '   ' → logprob: -4.029935359954834
    5. ' )' → logprob: -4.279935359954834
    6. '[a' → logprob: -4.904935359954834
    7. ')a' → logprob: -5.154935359954834
    8. ' de' → logprob: -5.654935359954834
    9. '[])' → logprob: -6.154935359954834
    10. ' lists' → logprob: -6.279935359954834

Token 279: 'rice' (ID: 44478)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.7959616780281067
    2. 'rices' → logprob: -0.7959616780281067
    3. 'ière' → logprob: -2.795961618423462
    4. 'rice' → logprob: -4.420961856842041
    5. 'i' → logprob: -4.545961856842041
    6. 'ieres' → logprob: -5.045961856842041
    7. 'ri' → logprob: -6.545961856842041
    8. 'r' → logprob: -7.045961856842041
    9. 'iques' → logprob: -7.295961856842041
    10. '[i' → logprob: -7.420961856842041

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029369717463850975
    2. '   ' → logprob: -4.279369831085205
    3. ').' → logprob: -4.779369831085205
    4. ' )' → logprob: -6.029369831085205
    5. 'a' → logprob: -6.404369831085205
    6. ')a' → logprob: -7.404369831085205
    7. '.append' → logprob: -7.529369831085205
    8. ')
' → logprob: -8.029369354248047
    9. '[a' → logprob: -8.029369354248047
    10. ' a' → logprob: -8.279369354248047

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011224505578866228
    2. 'a' → logprob: -9.500112533569336
    3. '    
' → logprob: -10.500112533569336
    4. '   ' → logprob: -12.500112533569336
    5. '
' → logprob: -12.750112533569336
    6. '       ' → logprob: -14.125112533569336
    7. ' a' → logprob: -14.125112533569336
    8. '  ' → logprob: -14.750112533569336
    9. '```' → logprob: -15.000112533569336
    10. '    ' → logprob: -15.250112533569336

Token 282: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05275765806436539
    2. 'a' (adapté à ' a') → logprob: -3.052757740020752
    3. ' a' → logprob: -5.552757740020752
    4. '   ' → logprob: -8.677757263183594
    5. '    
' → logprob: -10.052757263183594
    6. 'line' → logprob: -11.177757263183594
    7. ' line' → logprob: -11.552757263183594
    8. '	a' → logprob: -11.677757263183594
    9. ' ' → logprob: -11.927757263183594
    10. '       ' → logprob: -11.927757263183594

Token 283: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005545823951251805
    2. '.' → logprob: -7.50055456161499
    3. '.app' → logprob: -14.250555038452148
    4. ' .' → logprob: -14.875555038452148
    5. '.ap' → logprob: -15.375555038452148
    6. ').' → logprob: -15.625555038452148
    7. '.Append' → logprob: -16.62555503845215
    8. '​.' → logprob: -17.50055503845215
    9. '   ' → logprob: -17.62555503845215
    10. '.add' → logprob: -17.87555503845215

Token 284: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0012165444204583764
    2. '(' → logprob: -6.751216411590576
    3. ' (' → logprob: -10.126216888427734
    4. 'list' → logprob: -12.751216888427734
    5. '(map' → logprob: -13.376216888427734
    6. '(
' → logprob: -14.501216888427734
    7. '(int' → logprob: -14.501216888427734
    8. ' list' → logprob: -15.001216888427734
    9. '=list' → logprob: -16.251216888427734
    10. '(lst' → logprob: -16.376216888427734

Token 285: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006302738096565008
    2. '(int' → logprob: -5.256302833557129
    3. '(' → logprob: -6.881302833557129
    4. 'map' → logprob: -10.631302833557129
    5. ' (' → logprob: -11.506302833557129
    6. '(input' → logprob: -12.631302833557129
    7. ')' → logprob: -13.256302833557129
    8. '(
' → logprob: -14.256302833557129
    9. ' map' → logprob: -14.506302833557129
    10. '<int' → logprob: -14.756302833557129

Token 286: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03430676460266113
    2. '(' → logprob: -3.409306764602661
    3. '<int' → logprob: -8.159306526184082
    4. 'int' → logprob: -8.659306526184082
    5. ',int' → logprob: -9.534306526184082
    6. '[int' → logprob: -9.909306526184082
    7. ' (' → logprob: -10.409306526184082
    8. ')' → logprob: -10.784306526184082
    9. '=int' → logprob: -11.659306526184082
    10. ' int' → logprob: -11.784306526184082

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2021186351776123
    2. ',input' → logprob: -1.7021186351776123
    3. '(input' → logprob: -7.327118873596191
    4. '(' → logprob: -10.452118873596191
    5. ' ,' → logprob: -11.202118873596191
    6. ',(' → logprob: -13.577118873596191
    7. '(),' → logprob: -13.577118873596191
    8. 'input' → logprob: -13.952118873596191
    9. ',int' → logprob: -14.202118873596191
    10. '   ' → logprob: -14.577118873596191

Token 288: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002477200934663415
    2. ' input' → logprob: -6.002477169036865
    3. ' ' → logprob: -14.002477645874023
    4. '(input' → logprob: -15.002477645874023
    5. '   ' → logprob: -15.752477645874023
    6. ',input' → logprob: -16.252477645874023
    7. '	input' → logprob: -17.002477645874023
    8. '  ' → logprob: -17.502477645874023
    9. '<input' → logprob: -17.752477645874023
    10. '=input' → logprob: -18.002477645874023

Token 289: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.253090865968261e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -15.500009536743164
    4. '(' → logprob: -17.125009536743164
    5. '()).' → logprob: -17.625009536743164
    6. '().'' → logprob: -18.000009536743164
    7. '().__' → logprob: -19.250009536743164
    8. '()
' → logprob: -19.250009536743164
    9. '>().' → logprob: -19.625009536743164
    10. '.' → logprob: -19.750009536743164

Token 290: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.125
    3. ')' → logprob: -16.25
    4. 'strip' → logprob: -16.875
    5. '(split' → logprob: -18.125
    6. 'spl' → logprob: -18.375
    7. 'rstrip' → logprob: -19.25
    8. '.split' → logprob: -20.125
    9. '))' → logprob: -20.375
    10. 'plit' → logprob: -20.625

Token 291: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.12828345596790314
    2. '()' → logprob: -3.0032835006713867
    3. '()))' → logprob: -3.1282835006713867
    4. '())' → logprob: -3.8782835006713867
    5. ')))' → logprob: -5.128283500671387
    6. '(' → logprob: -8.878283500671387
    7. '())))
' → logprob: -8.878283500671387
    8. ')' → logprob: -10.128283500671387
    9. '()));' → logprob: -11.628283500671387
    10. '))))' → logprob: -12.128283500671387

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193196535110474
    2. '))' → logprob: -1.50193190574646
    3. ')))' → logprob: -13.626932144165039
    4. ' )' → logprob: -14.626932144165039
    5. '())' → logprob: -14.751932144165039
    6. ')
' → logprob: -14.876932144165039
    7. '))
' → logprob: -15.501932144165039
    8. '   ' → logprob: -16.00193214416504
    9. ' ))' → logprob: -16.25193214416504
    10. '()))' → logprob: -17.00193214416504

Token 293: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41931357979774475
    2. '#' → logprob: -1.2943135499954224
    3. '
' → logprob: -3.794313669204712
    4. 'max' → logprob: -4.669313430786133
    5. '\n' → logprob: -4.794313430786133
    6. 'n' → logprob: -4.919313430786133
    7. 'result' → logprob: -5.794313430786133
    8. 'print' → logprob: -5.919313430786133
    9. '  
' → logprob: -6.294313430786133
    10. 's' → logprob: -6.544313430786133

Token 294: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.827689528465271
    2. '#' → logprob: -1.202689528465271
    3. 'max' → logprob: -2.0776896476745605
    4. 'total' → logprob: -3.0776896476745605
    5. 'result' → logprob: -3.7026896476745605
    6. 'sum' → logprob: -3.8276896476745605
    7. 's' → logprob: -4.2026896476745605
    8. 'count' → logprob: -4.8276896476745605
    9. ' for' → logprob: -5.2026896476745605
    10. ' #' → logprob: -6.0776896476745605

Token 295: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.0949011817574501
    2. '#' → logprob: -2.9699010848999023
    3. 'e' → logprob: -3.5949010848999023
    4. 'é' → logprob: -5.594901084899902
    5. 'eer' → logprob: -5.969901084899902
    6. 'ép' → logprob: -6.219901084899902
    7. 'er' → logprob: -6.969901084899902
    8. 'iter' → logprob: -7.344901084899902
    9. 'ée' → logprob: -7.344901084899902
    10. 'édit' → logprob: -8.219901084899902

Token 296: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2322710156440735
    2. ' un' → logprob: -2.9822709560394287
    3. 'une' → logprob: -3.2322709560394287
    4. ' ' → logprob: -3.2322709560394287
    5. '#' → logprob: -3.6072709560394287
    6. ' a' → logprob: -3.7322709560394287
    7. 'a' → logprob: -4.482271194458008
    8. ' la' → logprob: -5.357271194458008
    9. ' #' → logprob: -5.982271194458008
    10. '<|end|>' → logprob: -6.607271194458008

Token 297: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.163393497467041
    2. '#' → logprob: -1.413393497467041
    3. 'for' → logprob: -1.538393497467041
    4. 'result' → logprob: -2.663393497467041
    5. 'gr' → logprob: -3.288393497467041
    6. 'mat' → logprob: -3.413393497467041
    7. 'variable' → logprob: -4.413393497467041
    8. 'matrix' → logprob: -4.663393497467041
    9. 'nou' → logprob: -4.663393497467041
    10. 'list' → logprob: -5.038393497467041

Token 298: ' vide' (ID: 21835)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7411412596702576
    2. 'dp' → logprob: -1.8661413192749023
    3. 'res' → logprob: -2.2411413192749023
    4. ' result' → logprob: -2.9911413192749023
    5. 's' → logprob: -3.2411413192749023
    6. 'ans' → logprob: -3.9911413192749023
    7. 'b' → logprob: -4.116141319274902
    8. 'max' → logprob: -4.116141319274902
    9. 'sum' → logprob: -4.366141319274902
    10. 'answer' → logprob: -4.491141319274902

Token 299: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9162304401397705
    2. 'result' → logprob: -1.0412304401397705
    3. 'ans' → logprob: -2.9162304401397705
    4. 'res' → logprob: -3.1662304401397705
    5. 'max' → logprob: -3.4162304401397705
    6. 'results' → logprob: -3.7912304401397705
    7. 'dp' → logprob: -3.9162304401397705
    8. 'answer' → logprob: -4.416230201721191
    9. 'sum' → logprob: -4.541230201721191
    10. 's' → logprob: -5.041230201721191

Token 300: 'move' (ID: 16366)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.093124270439148
    2. 'result' → logprob: -1.593124270439148
    3. 'ans' → logprob: -1.968124270439148
    4. 'res' → logprob: -2.3431243896484375
    5. 'dp' → logprob: -3.2181243896484375
    6. 's' → logprob: -3.5931243896484375
    7. 'visited' → logprob: -3.5931243896484375
    8. 'row' → logprob: -3.8431243896484375
    9. 'max' → logprob: -4.2181243896484375
    10. 'sum' → logprob: -4.3431243896484375

Token 301: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014079707907512784
    2. '_s' → logprob: -7.626408100128174
    3. '_counts' → logprob: -8.376407623291016
    4. ' =' → logprob: -8.501407623291016
    5. ')' → logprob: -9.001407623291016
    6. '_possible' → logprob: -9.251407623291016
    7. '_candidates' → logprob: -10.501407623291016
    8. '_options' → logprob: -10.501407623291016
    9. '_list' → logprob: -10.626407623291016
    10. '_count' → logprob: -10.751407623291016

Token 302: ' qui' (ID: 2780)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.22069959342479706
    2. '=' → logprob: -1.7206995487213135
    3. ' =' → logprob: -4.095699787139893
    4. '=[]' → logprob: -6.720699787139893
    5. '[]' → logprob: -7.220699787139893
    6. ' move' → logprob: -7.845699787139893
    7. 'moves' → logprob: -10.095699310302734
    8. '_move' → logprob: -10.345699310302734
    9. '(move' → logprob: -10.970699310302734
    10. '	move' → logprob: -11.845699310302734

Token 303: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02025957964360714
    2. 's' → logprob: -5.020259380340576
    3. 'cont' → logprob: -5.020259380340576
    4. '=[]' → logprob: -5.395259380340576
    5. ' =' → logprob: -7.145259380340576
    6. 'a' → logprob: -7.395259380340576
    7. 'va' → logprob: -7.770259380340576
    8. 'serv' → logprob: -9.395259857177734
    9. 'represent' → logprob: -9.770259857177734
    10. ' va' → logprob: -9.770259857177734

Token 304: ' enregistr' (ID: 76845)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -1.0915675163269043
    2. '[]' → logprob: -1.3415675163269043
    3. '=[]' → logprob: -2.4665675163269043
    4. 'conten' → logprob: -2.4665675163269043
    5. 'cont' → logprob: -3.0915675163269043
    6. 'con' → logprob: -3.4665675163269043
    7. '=' → logprob: -3.5915675163269043
    8. 'store' → logprob: -3.8415675163269043
    9. 'contain' → logprob: -4.466567516326904
    10. 's' → logprob: -4.591567516326904

Token 305: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008296353742480278
    2. 'r' → logprob: -5.633296489715576
    3. 's' → logprob: -6.383296489715576
    4. '[]' → logprob: -7.258296489715576
    5. '_' → logprob: -7.508296489715576
    6. 'ent' → logprob: -8.383296012878418
    7. ' =' → logprob: -8.383296012878418
    8. '_moves' → logprob: -8.383296012878418
    9. 'es' → logprob: -8.633296012878418
    10. ' les' → logprob: -9.383296012878418

Token 306: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.022201698273420334
    2. 'les' → logprob: -4.8972015380859375
    3. '[' → logprob: -5.2722015380859375
    4. ' []' → logprob: -5.2722015380859375
    5. ' les' → logprob: -6.6472015380859375
    6. 'des' → logprob: -6.7722015380859375
    7. '[(' → logprob: -7.6472015380859375
    8. ' ' → logprob: -8.772201538085938
    9. 'le' → logprob: -8.897201538085938
    10. 'la' → logprob: -9.022201538085938

Token 307: ' mouvements' (ID: 119420)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0229172706604004
    2. 'c' → logprob: -1.3979172706604004
    3. 'moves' → logprob: -2.2729172706604004
    4. ' déplacements' → logprob: -2.2729172706604004
    5. ' mouvements' → logprob: -2.8979172706604004
    6. 'positions' → logprob: -3.3979172706604004
    7. 'cou' → logprob: -3.5229172706604004
    8. 'actions' → logprob: -3.7729172706604004
    9. 'dé' → logprob: -3.8979172706604004
    10. 'mov' → logprob: -5.0229172706604

Token 308: ' effectu' (ID: 100880)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.004992751870304346
    2. '=' → logprob: -6.004992961883545
    3. 'moves' → logprob: -7.004992961883545
    4. '[]' → logprob: -7.254992961883545
    5. ' =' → logprob: -7.504992961883545
    6. ' move' → logprob: -8.254992485046387
    7. '=[]' → logprob: -9.879992485046387
    8. '(move' → logprob: -11.254992485046387
    9. '.move' → logprob: -12.004992485046387
    10. '_move' → logprob: -12.379992485046387

Token 309: 'és' (ID: 1756)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5799434185028076
    2. '[' → logprob: -2.3299434185028076
    3. ' =' → logprob: -2.4549434185028076
    4. '=' → logprob: -2.8299434185028076
    5. 's' → logprob: -2.8299434185028076
    6. 'és' → logprob: -2.8299434185028076
    7. '_' → logprob: -3.7049434185028076
    8. 'ations' → logprob: -3.9549434185028076
    9. '=[]' → logprob: -5.079943656921387
    10. ']' → logprob: -5.954943656921387

Token 310: '
' (ID: 198)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0003832445072475821
    2. ' move' → logprob: -8.375383377075195
    3. 'moves' → logprob: -9.375383377075195
    4. '[]' → logprob: -10.500383377075195
    5. '
' → logprob: -11.125383377075195
    6. ' =' → logprob: -11.875383377075195
    7. '(move' → logprob: -12.250383377075195
    8. '.move' → logprob: -12.375383377075195
    9. '=' → logprob: -13.250383377075195
    10. '	move' → logprob: -13.375383377075195

Token 311: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -2.5776860184123507e-06
    2. 'moves' → logprob: -13.37500286102295
    3. ' move' → logprob: -14.00000286102295
    4. 'm' → logprob: -16.375001907348633
    5. '	move' → logprob: -17.375001907348633
    6. '(move' → logprob: -17.875001907348633
    7. '.move' → logprob: -18.000001907348633
    8. '
' → logprob: -18.500001907348633
    9. 'mov' → logprob: -19.000001907348633
    10. '_move' → logprob: -20.125001907348633

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14012718200683594
    2. ' =' → logprob: -2.390127182006836
    3. 's' → logprob: -3.265127182006836
    4. '=[]' → logprob: -7.015127182006836
    5. '[:]' → logprob: -11.015127182006836
    6. '[]' → logprob: -11.390127182006836
    7. '_' → logprob: -11.890127182006836
    8. '=s' → logprob: -13.265127182006836
    9. ',' → logprob: -13.640127182006836
    10. '[' → logprob: -13.765127182006836

Token 313: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.75000286102295
    3. ' []' → logprob: -13.75000286102295
    4. '[]
' → logprob: -15.00000286102295
    5. '[]}' → logprob: -16.250001907348633
    6. '[]"' → logprob: -17.375001907348633
    7. '[]

' → logprob: -18.000001907348633
    8. '[])' → logprob: -18.750001907348633
    9. '[],' → logprob: -18.875001907348633
    10. '{}' → logprob: -19.125001907348633

Token 314: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008696119301021099
    2. ' for' → logprob: -5.25869607925415
    3. '#' → logprob: -6.25869607925415
    4. '
' → logprob: -7.25869607925415
    5. '\n' → logprob: -7.50869607925415
    6. 'n' → logprob: -8.883696556091309
    7. ' 
' → logprob: -10.133696556091309
    8. '\' → logprob: -10.633696556091309
    9. 'f' → logprob: -10.758696556091309
    10. '  
' → logprob: -11.258696556091309

Token 315: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7252845029579476e-05
    2. '#' → logprob: -10.625027656555176
    3. 'def' → logprob: -13.625027656555176
    4. ' for' → logprob: -13.750027656555176
    5. 'For' → logprob: -15.625027656555176
    6. 'from' → logprob: -16.62502670288086
    7. 'if' → logprob: -17.12502670288086
    8. 'f' → logprob: -17.25002670288086
    9. '```' → logprob: -17.37502670288086
    10. 'fo' → logprob: -17.50002670288086

Token 316: 'our' (ID: 401)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05540359392762184
    2. 'our' → logprob: -3.180403709411621
    3. ' for' → logprob: -4.805403709411621
    4. 'or' → logprob: -6.680403709411621
    5. 'ours' → logprob: -6.680403709411621
    6. 'o' → logprob: -8.055403709411621
    7. 'ourt' → logprob: -8.305403709411621
    8. 'orrer' → logprob: -8.305403709411621
    9. 'er' → logprob: -8.555403709411621
    10. 'ur' → logprob: -8.680403709411621

Token 317: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006894512567669153
    2. 'for' → logprob: -6.006894588470459
    3. 'our' → logprob: -6.631894588470459
    4. 'r' → logprob: -7.256894588470459
    5. 'rer' → logprob: -7.381894588470459
    6. 'ir' → logprob: -7.631894588470459
    7. '#' → logprob: -8.0068941116333
    8. 'eur' → logprob: -8.8818941116333
    9. 'e' → logprob: -9.0068941116333
    10. 're' → logprob: -9.1318941116333

Token 318: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15673495829105377
    2. 'range' → logprob: -2.0317349433898926
    3. '(' → logprob: -5.031734943389893
    4. '(H' → logprob: -6.031734943389893
    5. '(range' → logprob: -6.406734943389893
    6. 'H' → logprob: -6.656734943389893
    7. ' H' → logprob: -7.156734943389893
    8. ' ' → logprob: -7.906734943389893
    9. ' i' → logprob: -8.28173542022705
    10. 'for' → logprob: -8.53173542022705

Token 319: ' case' (ID: 1890)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.322284996509552
    2. ' i' → logprob: -1.3222849369049072
    3. ' range' → logprob: -5.322285175323486
    4. 'range' → logprob: -5.572285175323486
    5. 'for' → logprob: -9.072284698486328
    6. ' for' → logprob: -9.822284698486328
    7. 'r' → logprob: -9.822284698486328
    8. 'H' → logprob: -11.197284698486328
    9. 'ligne' → logprob: -11.197284698486328
    10. 'I' → logprob: -11.947284698486328

Token 320: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1671711802482605
    2. 'for' → logprob: -2.2921712398529053
    3. '_' → logprob: -4.292171001434326
    4. ' ' → logprob: -4.792171001434326
    5. ' in' → logprob: -5.292171001434326
    6. '   ' → logprob: -5.417171001434326
    7. ' i' → logprob: -5.417171001434326
    8. ' (' → logprob: -5.667171001434326
    9. '(' → logprob: -5.667171001434326
    10. ' de' → logprob: -6.417171001434326

Token 321: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01452403049916029
    2. 'range' → logprob: -4.264523983001709
    3. ' la' → logprob: -8.014524459838867
    4. ' a' → logprob: -10.889524459838867
    5. 'a' → logprob: -11.639524459838867
    6. ' the' → logprob: -14.014524459838867
    7. ' for' → logprob: -14.139524459838867
    8. 'for' → logprob: -14.764524459838867
    9. 'la' → logprob: -15.639524459838867
    10. '(range' → logprob: -16.514524459838867

Token 322: ' matr' (ID: 25095)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.10555335134267807
    2. 'range' → logprob: -2.730553388595581
    3. 'a' → logprob: -3.855553388595581
    4. ' grille' → logprob: -4.355553150177002
    5. 'for' → logprob: -7.480553150177002
    6. 'grid' → logprob: -8.60555362701416
    7. ' range' → logprob: -9.10555362701416
    8. ' a' → logprob: -10.10555362701416
    9. ' gr' → logprob: -10.48055362701416
    10. 'pl' → logprob: -11.35555362701416

Token 323: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.026381002739071846
    2. 'rice' → logprob: -3.651381015777588
    3. 'ic' → logprob: -10.15138053894043
    4. 'ière' → logprob: -11.27638053894043
    5. 'ix' → logprob: -11.77638053894043
    6. 'atrice' → logprob: -11.90138053894043
    7. 'ices' → logprob: -13.02638053894043
    8. 'i' → logprob: -13.27638053894043
    9. 'rices' → logprob: -13.40138053894043
    10. 'r' → logprob: -13.52638053894043

Token 324: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02350483275949955
    2. ' for' → logprob: -3.7735047340393066
    3. '
' → logprob: -8.273505210876465
    4. ' 
' → logprob: -13.398505210876465
    5. '\n' → logprob: -14.773505210876465
    6. ',' → logprob: -14.898505210876465
    7. ':' → logprob: -14.898505210876465
    8. '   ' → logprob: -15.023505210876465
    9. 'n' → logprob: -15.648505210876465
    10. '  
' → logprob: -15.773505210876465

Token 325: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0032399820629507303
    2. ' a' → logprob: -6.00324010848999
    3. 'range' → logprob: -8.128239631652832
    4. 'for' → logprob: -8.253239631652832
    5. ' range' → logprob: -8.878239631652832
    6. ' for' → logprob: -9.628239631652832
    7. 'H' → logprob: -13.628239631652832
    8. ')' → logprob: -14.503239631652832
    9. '`' → logprob: -15.003239631652832
    10. ']' → logprob: -15.253239631652832

Token 326: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43122705817222595
    2. 'for' → logprob: -1.8062270879745483
    3. ' for' → logprob: -2.056226968765259
    4. ':
' → logprob: -3.056226968765259
    5. ',' → logprob: -4.931227207183838
    6. ')' → logprob: -6.556227207183838
    7. ' :
' → logprob: -7.306227207183838
    8. ' :' → logprob: -8.30622673034668
    9. '   ' → logprob: -8.43122673034668
    10. '.' → logprob: -8.43122673034668

Token 327: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01528481487184763
    2. '
' → logprob: -4.765285015106201
    3. ' for' → logprob: -5.015285015106201
    4. '   ' → logprob: -12.390284538269043
    5. ':' → logprob: -13.015284538269043
    6. ':
' → logprob: -13.265284538269043
    7. ' 
' → logprob: -13.890284538269043
    8. '\n' → logprob: -14.140284538269043
    9. '  
' → logprob: -14.140284538269043
    10. '	for' → logprob: -15.140284538269043

Token 328: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25475552678108215
    2. ' range' → logprob: -2.0047554969787598
    3. 'for' → logprob: -2.8797554969787598
    4. 'l' → logprob: -4.12975549697876
    5. ' l' → logprob: -4.75475549697876
    6. ' for' → logprob: -5.75475549697876
    7. 'i' → logprob: -6.00475549697876
    8. 'ranges' → logprob: -7.50475549697876
    9. 'x' → logprob: -7.62975549697876
    10. 'len' → logprob: -8.379755973815918

Token 329: ''aide' (ID: 75684)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05069388821721077
    2. ' range' → logprob: -3.175693988800049
    3. 'for' → logprob: -5.175693988800049
    4. 'ange' → logprob: -6.675693988800049
    5. 'a' → logprob: -8.30069351196289
    6. ' for' → logprob: -8.80069351196289
    7. 'rang' → logprob: -9.92569351196289
    8. '(range' → logprob: -10.17569351196289
    9. 'ranges' → logprob: -10.42569351196289
    10. 'e' → logprob: -10.55069351196289

Token 330: ' de' (ID: 334)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.2631409764289856
    2. 'de' → logprob: -2.138140916824341
    3. ' de' → logprob: -2.638140916824341
    4. 'for' → logprob: -4.13814115524292
    5. ' for' → logprob: -4.88814115524292
    6. ' d' → logprob: -5.51314115524292
    7. ' des' → logprob: -5.51314115524292
    8. ' nested' → logprob: -5.51314115524292
    9. ' two' → logprob: -5.63814115524292
    10. 'nested' → logprob: -6.76314115524292

Token 331: ' deux' (ID: 10301)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017382415011525154
    2. 'for' → logprob: -4.267382621765137
    3. 'nested' → logprob: -6.142382621765137
    4. ' range' → logprob: -7.017382621765137
    5. 'two' → logprob: -9.267382621765137
    6. ' nested' → logprob: -10.392382621765137
    7. '2' → logprob: -11.142382621765137
    8. ' deux' → logprob: -11.642382621765137
    9. ' for' → logprob: -11.642382621765137
    10. 'ranges' → logprob: -12.517382621765137

Token 332: ' bou' (ID: 17573)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2996898591518402
    2. ' for' → logprob: -1.4246898889541626
    3. ' bou' → logprob: -4.049689769744873
    4. 'bou' → logprob: -8.049690246582031
    5. ' espaces' → logprob: -8.174690246582031
    6. ' nested' → logprob: -8.674690246582031
    7. ' ' → logprob: -10.049690246582031
    8. ' loops' → logprob: -10.174690246582031
    9. '
' → logprob: -10.549690246582031
    10. ' ' → logprob: -10.799690246582031

Token 333: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.013352339155972004
    2. 'x' → logprob: -4.513352394104004
    3. 'xes' → logprob: -6.263352394104004
    4. 'cle' → logprob: -8.513352394104004
    5. 'c' → logprob: -10.013352394104004
    6. 'bles' → logprob: -10.138352394104004
    7. 'cl' → logprob: -10.388352394104004
    8. 'for' → logprob: -10.638352394104004
    9. 'les' → logprob: -11.513352394104004
    10. 'ches' → logprob: -11.638352394104004

Token 334: ' imb' (ID: 63592)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31326937675476074
    2. 'for' → logprob: -1.3132693767547607
    3. '
' → logprob: -12.43826961517334
    4. ' ' → logprob: -13.43826961517334
    5. ' pour' → logprob: -14.68826961517334
    6. ' 
' → logprob: -14.68826961517334
    7. 'n' → logprob: -15.31326961517334
    8. '	for' → logprob: -15.68826961517334
    9. ' ' → logprob: -15.81326961517334
    10. 's' → logprob: -16.313268661499023

Token 335: 'ri' (ID: 872)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22598744928836823
    2. 'ri' → logprob: -2.600987434387207
    3. 'quées' → logprob: -2.850987434387207
    4. 'r' → logprob: -3.600987434387207
    5. 'arqu' → logprob: -4.225987434387207
    6. 'our' → logprob: -4.350987434387207
    7. 'ou' → logprob: -5.475987434387207
    8. 'd' → logprob: -6.725987434387207
    9. 'iqu' → logprob: -6.725987434387207
    10. 'ar' → logprob: -6.975987434387207

Token 336: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.02072114124894142
    2. 'c' → logprob: -5.270720958709717
    3. 'r' → logprob: -5.395720958709717
    4. 'nées' → logprob: -5.645720958709717
    5. 't' → logprob: -6.395720958709717
    6. 'for' → logprob: -6.520720958709717
    7. 'ées' → logprob: -6.645720958709717
    8. 'd' → logprob: -7.020720958709717
    9. 'qués' → logprob: -7.520720958709717
    10. 'iqu' → logprob: -8.270721435546875

Token 337: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01295950636267662
    2. '
' → logprob: -4.5129594802856445
    3. ' for' → logprob: -6.2629594802856445
    4. '  
' → logprob: -13.137959480285645
    5. ' 
' → logprob: -13.887959480285645
    6. '\n' → logprob: -14.012959480285645
    7. '```' → logprob: -16.38796043395996
    8. '	for' → logprob: -16.51296043395996
    9. '
' → logprob: -16.51296043395996
    10. '

' → logprob: -16.63796043395996

Token 338: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -13.750000953674316
    3. '
' → logprob: -18.875001907348633
    4. '```' → logprob: -21.750001907348633
    5. '   ' → logprob: -22.625001907348633
    6. '	for' → logprob: -23.625001907348633
    7. '    
' → logprob: -24.875001907348633
    8. ' 
' → logprob: -25.875001907348633
    9. 'fo' → logprob: -26.000001907348633
    10. '  
' → logprob: -26.000001907348633

Token 339: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015024791937321424
    2. ' for' → logprob: -6.501502513885498
    3. '
' → logprob: -16.126502990722656
    4. ' 
' → logprob: -21.126502990722656
    5. '	for' → logprob: -22.501502990722656
    6. '```' → logprob: -22.751502990722656
    7. '   ' → logprob: -23.001502990722656
    8. ' ' → logprob: -23.251502990722656
    9. '  
' → logprob: -24.501502990722656
    10. '

' → logprob: -24.626502990722656

Token 340: ' première' (ID: 23423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3870088458061218
    2. 'for' → logprob: -1.1370089054107666
    3. ' range' → logprob: -9.387008666992188
    4. ' ' → logprob: -10.387008666992188
    5. 'r' → logprob: -11.762008666992188
    6. ' i' → logprob: -12.262008666992188
    7. 'range' → logprob: -12.262008666992188
    8. ' ' → logprob: -13.137008666992188
    9. 'i' → logprob: -13.637008666992188
    10. 'n' → logprob: -13.887008666992188

Token 341: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2520613968372345
    2. 'for' → logprob: -1.502061367034912
    3. ' range' → logprob: -9.62706184387207
    4. ' ' → logprob: -10.75206184387207
    5. ' boucle' → logprob: -11.62706184387207
    6. 'range' → logprob: -11.75206184387207
    7. ' ' → logprob: -11.87706184387207
    8. ' space' → logprob: -12.37706184387207
    9. 'space' → logprob: -12.87706184387207
    10. ' espace' → logprob: -13.00206184387207

Token 342: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07892250269651413
    2. 'for' → logprob: -2.5789225101470947
    3. ' range' → logprob: -10.578922271728516
    4. ' continue' → logprob: -12.453922271728516
    5. ' pour' → logprob: -13.453922271728516
    6. 'range' → logprob: -14.078922271728516
    7. ' i' → logprob: -15.703922271728516
    8. ' ' → logprob: -15.828922271728516
    9. ' ' → logprob: -15.828922271728516
    10. 's' → logprob: -15.953922271728516

Token 343: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0011841575615108013
    2. 'our' → logprob: -7.376183986663818
    3. 'oure' → logprob: -7.626183986663818
    4. 'ours' → logprob: -9.751184463500977
    5. '#' → logprob: -12.001184463500977
    6. 'ourse' → logprob: -12.501184463500977
    7. 'or' → logprob: -14.626184463500977
    8. '_' → logprob: -15.376184463500977
    9. 'er' → logprob: -15.501184463500977
    10. 'ou' → logprob: -15.626184463500977

Token 344: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38688287138938904
    2. 'range' → logprob: -1.1368829011917114
    3. 'H' → logprob: -12.386882781982422
    4. 'for' → logprob: -13.011882781982422
    5. ' H' → logprob: -13.261882781982422
    6. ' for' → logprob: -13.386882781982422
    7. '(range' → logprob: -13.886882781982422
    8. ' la' → logprob: -14.136882781982422
    9. 'i' → logprob: -15.761882781982422
    10. ' i' → logprob: -16.761882781982422

Token 345: ' lignes' (ID: 81687)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.033721890300512314
    2. 'range' → logprob: -3.408721923828125
    3. 'r' → logprob: -10.033721923828125
    4. ' H' → logprob: -11.158721923828125
    5. ' rang' → logprob: -12.283721923828125
    6. 'H' → logprob: -12.533721923828125
    7. ' r' → logprob: -12.658721923828125
    8. 'i' → logprob: -13.533721923828125
    9. ' i' → logprob: -13.658721923828125
    10. 'rang' → logprob: -13.658721923828125

Token 346: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25207409262657166
    2. ' for' → logprob: -1.502074122428894
    3. ' range' → logprob: -9.377074241638184
    4. 'range' → logprob: -9.877074241638184
    5. ',' → logprob: -12.877074241638184
    6. '(range' → logprob: -12.877074241638184
    7. '
' → logprob: -13.752074241638184
    8. ':' → logprob: -14.627074241638184
    9. '```' → logprob: -14.752074241638184
    10. '   ' → logprob: -15.127074241638184

Token 347: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12097996473312378
    2. ' range' → logprob: -2.3709800243377686
    3. 'i' → logprob: -3.9959800243377686
    4. ' i' → logprob: -6.7459797859191895
    5. 'for' → logprob: -7.2459797859191895
    6. '_' → logprob: -8.370980262756348
    7. 'r' → logprob: -10.745980262756348
    8. ' for' → logprob: -10.995980262756348
    9. ' ' → logprob: -13.370980262756348
    10. 'd' → logprob: -13.620980262756348

Token 348: ''ind' (ID: 82245)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.031189538538455963
    2. 'ange' → logprob: -3.531189441680908
    3. 'a' → logprob: -7.531189441680908
    4. 'for' → logprob: -7.531189441680908
    5. ' range' → logprob: -8.281189918518066
    6. 'e' → logprob: -10.531189918518066
    7. 'i' → logprob: -10.781189918518066
    8. 'n' → logprob: -10.781189918518066
    9. 'r' → logprob: -11.281189918518066
    10. 'or' → logprob: -11.656189918518066

Token 349: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0019555140752345324
    2. 'ent' → logprob: -6.501955509185791
    3. 'ice' → logprob: -7.751955509185791
    4. 'for' → logprob: -11.25195598602295
    5. 'ices' → logprob: -11.87695598602295
    6. 'entation' → logprob: -13.25195598602295
    7. 'e' → logprob: -14.75195598602295
    8. 'es' → logprob: -15.50195598602295
    9. 'ext' → logprob: -15.75195598602295
    10. 'exp' → logprob: -15.87695598602295

Token 350: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06802023947238922
    2. ' i' → logprob: -2.8180203437805176
    3. ' range' → logprob: -5.318020343780518
    4. 'range' → logprob: -6.818020343780518
    5. 'for' → logprob: -11.06801986694336
    6. ' for' → logprob: -11.31801986694336
    7. 'r' → logprob: -12.56801986694336
    8. '0' → logprob: -13.81801986694336
    9. 'y' → logprob: -13.94301986694336
    10. '_' → logprob: -13.94301986694336

Token 351: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004711874935310334
    2. 'y' → logprob: -8.375471115112305
    3. ' i' → logprob: -9.000471115112305
    4. 'r' → logprob: -9.500471115112305
    5. 'x' → logprob: -10.625471115112305
    6. 'j' → logprob: -11.000471115112305
    7. 'row' → logprob: -14.500471115112305
    8. ')' → logprob: -15.125471115112305
    9. '	i' → logprob: -15.750471115112305
    10. 'h' → logprob: -16.125471115112305

Token 352: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9278691411018372
    2. 'for' → logprob: -0.9278691411018372
    3. ' for' → logprob: -2.1778690814971924
    4. '   ' → logprob: -3.1778690814971924
    5. ' in' → logprob: -4.1778693199157715
    6. ',' → logprob: -4.5528693199157715
    7. '):' → logprob: -4.5528693199157715
    8. ':' → logprob: -4.6778693199157715
    9. 'in' → logprob: -5.9278693199157715
    10. '):
' → logprob: -6.1778693199157715

Token 353: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8352304100990295
    2. 'for' → logprob: -0.9602304100990295
    3. 'range' → logprob: -2.3352303504943848
    4. ' range' → logprob: -2.9602303504943848
    5. '   ' → logprob: -3.9602303504943848
    6. ' i' → logprob: -4.710230350494385
    7. 'i' → logprob: -5.210230350494385
    8. ' la' → logprob: -8.585230827331543
    9. '0' → logprob: -8.585230827331543
    10. ')' → logprob: -8.710230827331543

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028660334646701813
    2. 'range' → logprob: -8.750287055969238
    3. ' range' → logprob: -9.125287055969238
    4. ' ' → logprob: -10.875287055969238
    5. 'i' → logprob: -15.125287055969238
    6. ' i' → logprob: -17.125286102294922
    7. '1' → logprob: -17.250286102294922
    8. 'for' → logprob: -18.875286102294922
    9. 'H' → logprob: -19.500286102294922
    10. '	range' → logprob: -20.000286102294922

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.500016212463379
    3. 'range' → logprob: -12.375016212463379
    4. ' range' → logprob: -13.250016212463379
    5. 'for' → logprob: -17.375015258789062
    6. '1' → logprob: -17.625015258789062
    7. 'H' → logprob: -18.125015258789062
    8. ' for' → logprob: -20.250015258789062
    9. '2' → logprob: -20.375015258789062
    10. 'i' → logprob: -20.500015258789062

Token 356: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05530581250786781
    2. ' to' → logprob: -3.3053057193756104
    3. ' ' → logprob: -4.8053059577941895
    4. 'à' → logprob: -6.0553059577941895
    5. ' jusqu' → logprob: -6.3053059577941895
    6. 'to' → logprob: -6.6803059577941895
    7. ',' → logprob: -6.6803059577941895
    8. ')' → logprob: -7.5553059577941895
    9. '   ' → logprob: -8.180305480957031
    10. ' for' → logprob: -8.305305480957031

Token 357: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014171971939504147
    2. ' H' → logprob: -4.264172077178955
    3. ' range' → logprob: -12.514171600341797
    4. 'range' → logprob: -12.889171600341797
    5. ' ' → logprob: -14.139171600341797
    6. 'W' → logprob: -14.264171600341797
    7. '0' → logprob: -14.639171600341797
    8. '(H' → logprob: -15.264171600341797
    9. '   ' → logprob: -15.889171600341797
    10. '	H' → logprob: -16.389171600341797

Token 358: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08998207747936249
    2. ' -' → logprob: -2.464982032775879
    3. '):' → logprob: -7.339982032775879
    4. '   ' → logprob: -8.214982032775879
    5. ')' → logprob: -9.464982032775879
    6. '):
' → logprob: -11.339982032775879
    7. ':' → logprob: -11.589982032775879
    8. ' ' → logprob: -11.589982032775879
    9. '1' → logprob: -12.839982032775879
    10. '  ' → logprob: -12.964982032775879

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.97024549683556e-05
    2. ' ' → logprob: -9.750080108642578
    3. '2' → logprob: -11.375080108642578
    4. '-' → logprob: -11.625080108642578
    5. 'W' → logprob: -15.375080108642578
    6. '   ' → logprob: -15.875080108642578
    7. 'H' → logprob: -16.000080108642578
    8. '
' → logprob: -16.125080108642578
    9. ' -' → logprob: -16.500080108642578
    10. '```' → logprob: -17.000080108642578

Token 360: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05679044499993324
    2. ' for' → logprob: -2.931790351867676
    3. '
' → logprob: -6.556790351867676
    4. ':' → logprob: -8.181790351867676
    5. '   ' → logprob: -8.681790351867676
    6. ':
' → logprob: -11.556790351867676
    7. '  
' → logprob: -11.681790351867676
    8. '```' → logprob: -11.681790351867676
    9. '    
' → logprob: -13.181790351867676
    10. ' 
' → logprob: -13.181790351867676

Token 361: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011050296947360039
    2. ' for' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.3860502243042
    4. 'i' → logprob: -14.1360502243042
    5. '```' → logprob: -16.136051177978516
    6. ',' → logprob: -17.261051177978516
    7. ':' → logprob: -18.386051177978516
    8. '	for' → logprob: -18.636051177978516
    9. ' i' → logprob: -19.011051177978516
    10. '
' → logprob: -19.261051177978516

Token 362: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759442448616028
    2. 'i' → logprob: -0.8259442448616028
    3. '	i' → logprob: -13.325943946838379
    4. ' ' → logprob: -14.075943946838379
    5. ' ' → logprob: -14.200943946838379
    6. 'j' → logprob: -14.325943946838379
    7. ' j' → logprob: -14.575943946838379
    8. '0' → logprob: -15.325943946838379
    9. '   ' → logprob: -16.200944900512695
    10. ')' → logprob: -16.325944900512695

Token 363: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03809186443686485
    2. 'in' → logprob: -3.2880918979644775
    3. '+' → logprob: -10.788091659545898
    4. ' ' → logprob: -11.288091659545898
    5. '   ' → logprob: -11.413091659545898
    6. ',' → logprob: -13.788091659545898
    7. ')' → logprob: -13.913091659545898
    8. '	in' → logprob: -14.413091659545898
    9. '  ' → logprob: -14.538091659545898
    10. 'import' → logprob: -14.663091659545898

Token 364: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740796685218811
    2. ' range' → logprob: -0.9740796685218811
    3. ' ' → logprob: -14.224080085754395
    4. ')' → logprob: -14.474080085754395
    5. '(range' → logprob: -14.599080085754395
    6. '   ' → logprob: -14.724080085754395
    7. '	range' → logprob: -15.349080085754395
    8. '0' → logprob: -15.599080085754395
    9. '  ' → logprob: -16.724079132080078
    10. ' in' → logprob: -16.849079132080078

Token 365: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00031627772841602564
    2. '(' → logprob: -8.500316619873047
    3. 'H' → logprob: -9.125316619873047
    4. ')' → logprob: -12.875316619873047
    5. '(W' → logprob: -14.625316619873047
    6. '   ' → logprob: -15.125316619873047
    7. ' (' → logprob: -15.500316619873047
    8. '(
' → logprob: -15.625316619873047
    9. ' H' → logprob: -16.625316619873047
    10. '((' → logprob: -16.875316619873047

Token 366: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03816484659910202
    2. '):
' → logprob: -3.2881648540496826
    3. '-' → logprob: -9.913165092468262
    4. ' ):' → logprob: -10.413165092468262
    5. '   ' → logprob: -10.913165092468262
    6. ')' → logprob: -11.663165092468262
    7. ':' → logprob: -11.913165092468262
    8. '):
' → logprob: -12.163165092468262
    9. ' -' → logprob: -12.913165092468262
    10. '+' → logprob: -13.288165092468262

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01120578870177269
    2. ' for' → logprob: -4.761205673217773
    3. 'for' → logprob: -6.011205673217773
    4. ':' → logprob: -9.011205673217773
    5. '	for' → logprob: -11.886205673217773
    6. '   ' → logprob: -12.636205673217773
    7. ' :' → logprob: -13.761205673217773
    8. '    
' → logprob: -14.261205673217773
    9. ')' → logprob: -14.636205673217773
    10. ' ' → logprob: -14.886205673217773

Token 368: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23675324022769928
    2. ' for' → logprob: -1.736753225326538
    3. '   ' → logprob: -3.361753225326538
    4. '    ' → logprob: -10.611753463745117
    5. ' ' → logprob: -11.736753463745117
    6. ':' → logprob: -12.611753463745117
    7. '	for' → logprob: -12.736753463745117
    8. '       ' → logprob: -12.861753463745117
    9. '    
' → logprob: -13.236753463745117
    10. 'range' → logprob: -13.986753463745117

Token 369: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006590793840587139
    2. '   ' → logprob: -5.756590843200684
    3. ' for' → logprob: -5.756590843200684
    4. 'j' → logprob: -8.381590843200684
    5. ' j' → logprob: -11.381590843200684
    6. 'range' → logprob: -12.381590843200684
    7. ' ' → logprob: -15.506590843200684
    8. '    ' → logprob: -15.756590843200684
    9. ' range' → logprob: -16.131589889526367
    10. '  ' → logprob: -16.631589889526367

Token 370: ' seconde' (ID: 66204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0728457048535347
    2. 'range' → logprob: -3.197845697402954
    3. ' for' → logprob: -3.697845697402954
    4. ' range' → logprob: -5.447845935821533
    5. '   ' → logprob: -9.197845458984375
    6. '1' → logprob: -9.197845458984375
    7. ' ' → logprob: -10.072845458984375
    8. 'inner' → logprob: -11.197845458984375
    9. 'W' → logprob: -11.322845458984375
    10. ')' → logprob: -11.822845458984375

Token 371: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6246795058250427
    2. ' for' → logprob: -0.8746795058250427
    3. ' range' → logprob: -3.1246795654296875
    4. 'range' → logprob: -5.7496795654296875
    5. ' loop' → logprob: -8.624679565429688
    6. ' j' → logprob: -8.874679565429688
    7. ' in' → logprob: -9.499679565429688
    8. ' ' → logprob: -10.999679565429688
    9. 'in' → logprob: -12.249679565429688
    10. '  ' → logprob: -12.499679565429688

Token 372: ' parc' (ID: 22138)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15962707996368408
    2. ' for' → logprob: -2.5346269607543945
    3. 'in' → logprob: -3.1596269607543945
    4. 'for' → logprob: -3.6596269607543945
    5. ' range' → logprob: -10.284626960754395
    6. '   ' → logprob: -11.534626960754395
    7. 'range' → logprob: -11.659626960754395
    8. ' ' → logprob: -12.159626960754395
    9. ' i' → logprob: -13.159626960754395
    10. ',' → logprob: -13.659626960754395

Token 373: 'ourt' (ID: 38600)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9001034498214722
    2. 'er' → logprob: -1.1501034498214722
    3. 'for' → logprob: -2.0251035690307617
    4. 're' → logprob: -2.5251035690307617
    5. 'orre' → logprob: -5.025103569030762
    6. 'ert' → logprob: -5.025103569030762
    7. 'ro' → logprob: -5.025103569030762
    8. 'r' → logprob: -5.275103569030762
    9. 'ourt' → logprob: -5.275103569030762
    10. 'or' → logprob: -5.525103569030762

Token 374: ' les' (ID: 1341)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.1702117621898651
    2. ' W' → logprob: -1.9202117919921875
    3. '(W' → logprob: -4.6702117919921875
    4. 'range' → logprob: -8.170211791992188
    5. '   ' → logprob: -9.045211791992188
    6. '1' → logprob: -9.795211791992188
    7. '(' → logprob: -9.795211791992188
    8. ' range' → logprob: -10.670211791992188
    9. '	W' → logprob: -11.420211791992188
    10. ' (' → logprob: -11.670211791992188

Token 375: ' colon' (ID: 20947)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013432084815576673
    2. 'range' → logprob: -7.001343250274658
    3. ' W' → logprob: -8.0013427734375
    4. ' range' → logprob: -9.7513427734375
    5. '(W' → logprob: -10.2513427734375
    6. '   ' → logprob: -13.8763427734375
    7. 'cols' → logprob: -14.3763427734375
    8. '1' → logprob: -15.1263427734375
    9. 'col' → logprob: -15.5013427734375
    10. '0' → logprob: -15.6263427734375

Token 376: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.07719720155000687
    2. 'onnes' → logprob: -3.077197313308716
    3. 'm' → logprob: -4.702197074890137
    4. 'gne' → logprob: -5.827197074890137
    5. 'ne' → logprob: -5.827197074890137
    6. 's' → logprob: -6.327197074890137
    7. 'mn' → logprob: -6.452197074890137
    8. '=' → logprob: -6.702197074890137
    9. 'umn' → logprob: -6.702197074890137
    10. 't' → logprob: -6.827197074890137

Token 377: ' avec' (ID: 3937)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16422611474990845
    2. 'for' → logprob: -1.9142260551452637
    3. ' in' → logprob: -6.414226055145264
    4. '   ' → logprob: -6.789226055145264
    5. '(' → logprob: -7.039226055145264
    6. 'range' → logprob: -9.789226531982422
    7. ',' → logprob: -10.039226531982422
    8. '(i' → logprob: -10.164226531982422
    9. ' with' → logprob: -10.289226531982422
    10. 'in' → logprob: -10.414226531982422

Token 378: ' l' (ID: 305)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38770022988319397
    2. 'range' → logprob: -1.1377002000808716
    3. ' W' → logprob: -7.137700080871582
    4. 'W' → logprob: -10.637700080871582
    5. '(range' → logprob: -11.762700080871582
    6. 'for' → logprob: -13.762700080871582
    7. '(W' → logprob: -14.262700080871582
    8. ' for' → logprob: -15.262700080871582
    9. ' in' → logprob: -15.762700080871582
    10. 'Range' → logprob: -16.7627010345459

Token 379: ''ind' (ID: 82245)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5657400488853455
    2. 'range' → logprob: -1.1907401084899902
    3. ' W' → logprob: -2.3157401084899902
    4. 'i' → logprob: -4.56574010848999
    5. ' i' → logprob: -5.31574010848999
    6. '   ' → logprob: -5.56574010848999
    7. 'W' → logprob: -6.19074010848999
    8. 'for' → logprob: -6.44074010848999
    9. 'a' → logprob: -6.44074010848999
    10. ' in' → logprob: -6.44074010848999

Token 380: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.19134536385536194
    2. 'ices' → logprob: -1.9413453340530396
    3. 'ce' → logprob: -3.566345453262329
    4. 'ex' → logprob: -6.69134521484375
    5. 'i' → logprob: -7.31634521484375
    6. 'ces' → logprob: -7.94134521484375
    7. '   ' → logprob: -10.19134521484375
    8. 'e' → logprob: -10.94134521484375
    9. 'ic' → logprob: -11.19134521484375
    10. 'ece' → logprob: -11.81634521484375

Token 381: ' '' (ID: 461)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.09565385431051254
    2. 'j' → logprob: -2.720653772354126
    3. ' for' → logprob: -4.595654010772705
    4. 'for' → logprob: -5.220654010772705
    5. ' ' → logprob: -5.470654010772705
    6. ' in' → logprob: -5.720654010772705
    7. ' (' → logprob: -7.345654010772705
    8. ' i' → logprob: -7.595654010772705
    9. '(j' → logprob: -8.095653533935547
    10. '(' → logprob: -8.095653533935547

Token 382: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006718452088534832
    2. ' j' → logprob: -5.006718635559082
    3. '0' → logprob: -13.881718635559082
    4. 'i' → logprob: -14.006718635559082
    5. ' range' → logprob: -14.006718635559082
    6. 'range' → logprob: -14.631718635559082
    7. '   ' → logprob: -17.006717681884766
    8. '
' → logprob: -17.381717681884766
    9. '	j' → logprob: -17.381717681884766
    10. ' ' → logprob: -17.631717681884766

Token 383: '',' (ID: 787)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058303676545619965
    2. 'in' → logprob: -3.3083035945892334
    3. '+' → logprob: -4.0583038330078125
    4. ')' → logprob: -6.5583038330078125
    5. '   ' → logprob: -7.0583038330078125
    6. ' +' → logprob: -8.683303833007812
    7. ',' → logprob: -9.058303833007812
    8. ' ' → logprob: -9.683303833007812
    9. 'for' → logprob: -10.808303833007812
    10. '):' → logprob: -10.808303833007812

Token 384: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10069281607866287
    2. 'range' → logprob: -2.3506927490234375
    3. ' in' → logprob: -8.100692749023438
    4. ' for' → logprob: -9.100692749023438
    5. 'for' → logprob: -9.725692749023438
    6. '0' → logprob: -12.100692749023438
    7. 'in' → logprob: -12.725692749023438
    8. ' W' → logprob: -13.600692749023438
    9. ' j' → logprob: -14.225692749023438
    10. ' ' → logprob: -15.350692749023438

Token 385: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.407448410987854
    2. 'range' → logprob: -1.782448410987854
    3. '0' → logprob: -2.4074482917785645
    4. ' W' → logprob: -3.1574482917785645
    5. 'W' → logprob: -3.6574482917785645
    6. '(W' → logprob: -5.2824482917785645
    7. '1' → logprob: -6.2824482917785645
    8. '(' → logprob: -7.5324482917785645
    9. ' ' → logprob: -7.9074482917785645
    10. '(range' → logprob: -8.907448768615723

Token 386: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20211297273635864
    2. ' range' → logprob: -1.7021129131317139
    3. '0' → logprob: -7.327113151550293
    4. '1' → logprob: -11.327113151550293
    5. 'W' → logprob: -11.327113151550293
    6. ' W' → logprob: -11.327113151550293
    7. '(range' → logprob: -12.827113151550293
    8. '(W' → logprob: -12.952113151550293
    9. ' ' → logprob: -15.327113151550293
    10. '(' → logprob: -15.702113151550293

Token 387: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39957523345947266
    2. '+' → logprob: -1.5245752334594727
    3. 'in' → logprob: -2.7745752334594727
    4. '(' → logprob: -3.8995752334594727
    5. 'range' → logprob: -4.149575233459473
    6. ' range' → logprob: -5.274575233459473
    7. '(W' → logprob: -6.024575233459473
    8. ' for' → logprob: -6.774575233459473
    9. 'for' → logprob: -6.899575233459473
    10. ' +' → logprob: -7.024575233459473

Token 388: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.5467432141304016
    2. ' W' → logprob: -0.9217432141304016
    3. ' range' → logprob: -4.171743392944336
    4. 'range' → logprob: -4.921743392944336
    5. '1' → logprob: -7.921743392944336
    6. '(W' → logprob: -8.671743392944336
    7. '0' → logprob: -9.796743392944336
    8. '   ' → logprob: -11.171743392944336
    9. ' ' → logprob: -11.171743392944336
    10. '	W' → logprob: -12.796743392944336

Token 389: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23203642666339874
    2. '):
' → logprob: -1.6070364713668823
    3. '-' → logprob: -5.357036590576172
    4. '+' → logprob: -6.732036590576172
    5. '   ' → logprob: -8.107036590576172
    6. 'for' → logprob: -8.732036590576172
    7. ' -' → logprob: -9.607036590576172
    8. '):
' → logprob: -9.982036590576172
    9. ':' → logprob: -10.357036590576172
    10. '(' → logprob: -11.232036590576172

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.182190554682165e-05
    2. 'W' → logprob: -10.875061988830566
    3. 'range' → logprob: -10.875061988830566
    4. '(W' → logprob: -11.875061988830566
    5. '(' → logprob: -12.000061988830566
    6. ' ' → logprob: -12.125061988830566
    7. ')' → logprob: -13.625061988830566
    8. '2' → logprob: -14.000061988830566
    9. ' range' → logprob: -14.000061988830566
    10. ' W' → logprob: -14.250061988830566

Token 391: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4968647062778473
    2. '   ' → logprob: -0.9968646764755249
    3. ' for' → logprob: -4.4968647956848145
    4. 'for' → logprob: -4.9968647956848145
    5. ':
' → logprob: -5.8718647956848145
    6. '       ' → logprob: -6.6218647956848145
    7. ' :' → logprob: -8.121864318847656
    8. '    ' → logprob: -10.246864318847656
    9. ' ' → logprob: -10.621864318847656
    10. '  ' → logprob: -10.746864318847656

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08987344801425934
    2. ' for' → logprob: -3.4648735523223877
    3. 'for' → logprob: -3.7148735523223877
    4. ':' → logprob: -4.089873313903809
    5. '       ' → logprob: -4.339873313903809
    6. '    
' → logprob: -8.964873313903809
    7. ':
' → logprob: -9.089873313903809
    8. ' ' → logprob: -9.589873313903809
    9. '    ' → logprob: -9.714873313903809
    10. '```' → logprob: -10.339873313903809

Token 393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20177581906318665
    2. '   ' → logprob: -1.9517757892608643
    3. ' for' → logprob: -3.2017757892608643
    4. '       ' → logprob: -12.326775550842285
    5. '	for' → logprob: -12.826775550842285
    6. '```' → logprob: -13.451775550842285
    7. ' ' → logprob: -14.201775550842285
    8. '
' → logprob: -15.076775550842285
    9. '   ' → logprob: -15.201775550842285
    10. '    
' → logprob: -15.576775550842285

Token 394: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07889771461486816
    2. 'j' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.078897476196289
    4. '    ' → logprob: -13.828897476196289
    5. ')' → logprob: -14.703897476196289
    6. ' in' → logprob: -14.828897476196289
    7. '	j' → logprob: -15.953897476196289
    8. ' ' → logprob: -16.20389747619629
    9. ' range' → logprob: -16.70389747619629
    10. '(j' → logprob: -17.07889747619629

Token 395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05491737648844719
    2. 'in' → logprob: -2.929917335510254
    3. ' ' → logprob: -10.929917335510254
    4. '    ' → logprob: -11.804917335510254
    5. '   ' → logprob: -12.679917335510254
    6. '	in' → logprob: -12.804917335510254
    7. '+' → logprob: -13.429917335510254
    8. '  ' → logprob: -14.554917335510254
    9. 'In' → logprob: -15.179917335510254
    10. '1' → logprob: -15.304917335510254

Token 396: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868781626224518
    2. 'range' → logprob: -1.1368781328201294
    3. '(range' → logprob: -12.13687801361084
    4. ' ' → logprob: -14.26187801361084
    5. '	range' → logprob: -15.13687801361084
    6. ' in' → logprob: -15.13687801361084
    7. '   ' → logprob: -15.38687801361084
    8. '    ' → logprob: -15.76187801361084
    9. ')' → logprob: -16.261878967285156
    10. ' W' → logprob: -16.761878967285156

Token 397: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0010104191023856401
    2. '(' → logprob: -7.001010417938232
    3. ' (' → logprob: -9.62601089477539
    4. 'W' → logprob: -11.00101089477539
    5. ')' → logprob: -11.87601089477539
    6. ' W' → logprob: -12.37601089477539
    7. '(H' → logprob: -13.62601089477539
    8. ' range' → logprob: -13.75101089477539
    9. 'range' → logprob: -13.87601089477539
    10. '(range' → logprob: -14.37601089477539

Token 398: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005831626243889332
    2. '):
' → logprob: -5.755831718444824
    3. '-' → logprob: -6.255831718444824
    4. ')' → logprob: -8.380831718444824
    5. ' ):' → logprob: -8.380831718444824
    6. ':' → logprob: -9.380831718444824
    7. '+' → logprob: -9.630831718444824
    8. '   ' → logprob: -9.755831718444824
    9. ' -' → logprob: -9.755831718444824
    10. '       ' → logprob: -13.505831718444824

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005153350532054901
    2. '        
' → logprob: -6.630153179168701
    3. ' if' → logprob: -7.005153179168701
    4. ':' → logprob: -7.130153179168701
    5. '   ' → logprob: -7.380153179168701
    6. 'if' → logprob: -8.00515365600586
    7. '    ' → logprob: -8.13015365600586
    8. ' ' → logprob: -8.38015365600586
    9. ' :' → logprob: -8.50515365600586
    10. '        ' → logprob: -9.25515365600586

Token 400: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.683815062046051
    2. 'if' → logprob: -1.0588150024414062
    3. '           ' → logprob: -2.3088150024414062
    4. '       ' → logprob: -3.0588150024414062
    5. '        ' → logprob: -6.683815002441406
    6. '   ' → logprob: -8.433815002441406
    7. ' ' → logprob: -9.058815002441406
    8. '            ' → logprob: -9.308815002441406
    9. '            
' → logprob: -9.433815002441406
    10. '        
' → logprob: -9.558815002441406

Token 401: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023779943585395813
    2. ' if' → logprob: -3.77377986907959
    3. 'val' → logprob: -8.77377986907959
    4. 'while' → logprob: -8.77377986907959
    5. '       ' → logprob: -9.39877986907959
    6. '   ' → logprob: -9.52377986907959
    7. 'x' → logprob: -11.27377986907959
    8. 'value' → logprob: -11.27377986907959
    9. '#' → logprob: -11.27377986907959
    10. 'v' → logprob: -11.52377986907959

Token 402: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2115677148103714
    2. '           ' → logprob: -1.961567759513855
    3. 'ifier' → logprob: -3.8365676403045654
    4. ' if' → logprob: -4.7115678787231445
    5. 'ifie' → logprob: -4.8365678787231445
    6. '               ' → logprob: -5.4615678787231445
    7. 'ifiez' → logprob: -5.4615678787231445
    8. 'er' → logprob: -6.7115678787231445
    9. 'f' → logprob: -7.9615678787231445
    10. '       ' → logprob: -8.211567878723145

Token 403: ' si' (ID: 1784)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.560739278793335
    2. 'a' → logprob: -1.310739278793335
    3. ' if' → logprob: -1.935739278793335
    4. 'if' → logprob: -4.185739517211914
    5. '   ' → logprob: -9.810739517211914
    6. '    ' → logprob: -12.560739517211914
    7. ' ' → logprob: -13.435739517211914
    8. '       ' → logprob: -14.185739517211914
    9. '           ' → logprob: -14.310739517211914
    10. ' ' → logprob: -14.435739517211914

Token 404: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6431160569190979
    2. ' a' → logprob: -0.7681160569190979
    3. 'j' → logprob: -5.143115997314453
    4. ' j' → logprob: -5.393115997314453
    5. '(a' → logprob: -10.643115997314453
    6. ' ' → logprob: -10.768115997314453
    7. ' (' → logprob: -11.893115997314453
    8. '   ' → logprob: -12.268115997314453
    9. '	a' → logprob: -12.393115997314453
    10. ' not' → logprob: -12.893115997314453

Token 405: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01969880796968937
    2. 'j' → logprob: -4.519698619842529
    3. ' a' → logprob: -4.769698619842529
    4. ' j' → logprob: -9.019699096679688
    5. '0' → logprob: -13.269699096679688
    6. ' ' → logprob: -13.707199096679688
    7. '(a' → logprob: -13.832199096679688
    8. '	a' → logprob: -14.519699096679688
    9. '_j' → logprob: -14.832199096679688
    10. ' not' → logprob: -14.832199096679688

Token 406: ' actuelle' (ID: 104951)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.754184901714325
    2. ' a' → logprob: -0.879184901714325
    3. ' >' → logprob: -2.8791849613189697
    4. '>' → logprob: -3.1291849613189697
    5. '[' → logprob: -5.129184722900391
    6. '[a' → logprob: -5.379184722900391
    7. '[i' → logprob: -7.129184722900391
    8. ' ' → logprob: -7.629184722900391
    9. '[]' → logprob: -7.879184722900391
    10. '   ' → logprob: -7.879184722900391

Token 407: ' a' (ID: 261)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8248991370201111
    2. '>' → logprob: -1.8248991966247559
    3. ' a' → logprob: -1.9498991966247559
    4. 'a' → logprob: -2.199899196624756
    5. '[' → logprob: -2.824899196624756
    6. '[i' → logprob: -3.324899196624756
    7. ' ' → logprob: -4.324899196624756
    8. '   ' → logprob: -4.574899196624756
    9. ' !=' → logprob: -4.699899196624756
    10. '[a' → logprob: -4.949899196624756

Token 408: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[j' → logprob: -13.25000286102295
    3. '[' → logprob: -14.87500286102295
    4. 'a' → logprob: -15.25000286102295
    5. '[a' → logprob: -16.125001907348633
    6. ' [' → logprob: -16.250001907348633
    7. '(i' → logprob: -18.750001907348633
    8. '[I' → logprob: -19.125001907348633
    9. 'i' → logprob: -19.500001907348633
    10. '[
' → logprob: -20.125001907348633

Token 409: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.035348907113075256
    2. '[i' → logprob: -3.535348892211914
    3. '[j' → logprob: -5.535348892211914
    4. ']' → logprob: -6.535348892211914
    5. ' ][' → logprob: -9.660348892211914
    6. '[' → logprob: -9.910348892211914
    7. ']>' → logprob: -10.160348892211914
    8. '   ' → logprob: -12.035348892211914
    9. '[I' → logprob: -12.285348892211914
    10. '"][' → logprob: -12.410348892211914

Token 410: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -14.000000953674316
    3. '][' → logprob: -15.500000953674316
    4. 'i' → logprob: -15.625000953674316
    5. ']' → logprob: -17.500001907348633
    6. '[j' → logprob: -18.375001907348633
    7. '	j' → logprob: -18.500001907348633
    8. '
' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 411: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007237432990223169
    2. ']>' → logprob: -5.132237434387207
    3. ' ]' → logprob: -7.257237434387207
    4. '>' → logprob: -7.632237434387207
    5. ']>=' → logprob: -10.132237434387207
    6. ' >' → logprob: -10.257237434387207
    7. '   ' → logprob: -11.632237434387207
    8. ']!=' → logprob: -11.882237434387207
    9. ' ' → logprob: -12.007237434387207
    10. '%' → logprob: -12.257237434387207

Token 412: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2534884810447693
    2. '>' → logprob: -1.503488540649414
    3. ' >=' → logprob: -7.503488540649414
    4. ' ' → logprob: -7.753488540649414
    5. '%' → logprob: -8.628488540649414
    6. ' !=' → logprob: -9.003488540649414
    7. ' %' → logprob: -9.628488540649414
    8. '>=' → logprob: -9.628488540649414
    9. '   ' → logprob: -10.128488540649414
    10. '!=' → logprob: -10.753488540649414

Token 413: ' imp' (ID: 3282)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09624259918928146
    2. '1' → logprob: -3.471242666244507
    3. '0' → logprob: -4.096242427825928
    4. ' >' → logprob: -4.471242427825928
    5. '>=' → logprob: -4.596242427825928
    6. 'greater' → logprob: -4.846242427825928
    7. 'not' → logprob: -5.596242427825928
    8. 'sup' → logprob: -5.971242427825928
    9. ' ' → logprob: -6.471242427825928
    10. ' supérieur' → logprob: -6.846242427825928

Token 414: 'aire' (ID: 8189)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.5960547924041748
    2. 'aire' → logprob: -1.0960547924041748
    3. 'ar' → logprob: -2.846054792404175
    4. 'a' → logprob: -3.471054792404175
    5. '%' → logprob: -3.846054792404175
    6. 'ari' → logprob: -6.471055030822754
    7. 'are' → logprob: -7.596055030822754
    8. 'ai' → logprob: -7.971055030822754
    9. 'airs' → logprob: -8.221055030822754
    10. '   ' → logprob: -8.471055030822754

Token 415: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060117486864328384
    2. '           ' → logprob: -5.756011962890625
    3. ':' → logprob: -6.006011962890625
    4. ' if' → logprob: -9.131011962890625
    5. ' :' → logprob: -9.756011962890625
    6. 'if' → logprob: -9.756011962890625
    7. ':
' → logprob: -10.131011962890625
    8. '        ' → logprob: -10.381011962890625
    9. '        
' → logprob: -10.506011962890625
    10. ',' → logprob: -11.256011962890625

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1870121955871582
    2. ':' → logprob: -2.062012195587158
    3. '           ' → logprob: -3.937012195587158
    4. ' :' → logprob: -4.562012195587158
    5. ':
' → logprob: -5.937012195587158
    6. '        ' → logprob: -6.062012195587158
    7. '   ' → logprob: -6.437012195587158
    8. ' if' → logprob: -6.562012195587158
    9. '        
' → logprob: -6.687012195587158
    10. ' :
' → logprob: -6.812012195587158

Token 417: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04173098877072334
    2. 'if' → logprob: -3.7917308807373047
    3. ' if' → logprob: -4.041730880737305
    4. '           ' → logprob: -7.291730880737305
    5. '        ' → logprob: -9.916730880737305
    6. '        
' → logprob: -11.916730880737305
    7. '   ' → logprob: -12.166730880737305
    8. '      ' → logprob: -13.291730880737305
    9. ' ' → logprob: -14.291730880737305
    10. '	if' → logprob: -14.291730880737305

Token 418: ' Le' (ID: 2018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8277102708816528
    2. 'if' → logprob: -0.8277102708816528
    3. ' if' → logprob: -2.0777101516723633
    4. '           ' → logprob: -7.327710151672363
    5. '   ' → logprob: -11.327710151672363
    6. '        ' → logprob: -11.577710151672363
    7. '	if' → logprob: -13.327710151672363
    8. '        
' → logprob: -13.702710151672363
    9. 'If' → logprob: -13.827710151672363
    10. '      ' → logprob: -13.952710151672363

Token 419: ' nombre' (ID: 9733)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5830680131912231
    2. ' if' → logprob: -0.8330680131912231
    3. ' a' → logprob: -5.583067893981934
    4. 'a' → logprob: -5.708067893981934
    5. ' ' → logprob: -11.208067893981934
    6. '    ' → logprob: -12.958067893981934
    7. '   ' → logprob: -13.333067893981934
    8. ' ' → logprob: -14.208067893981934
    9. 'i' → logprob: -14.333067893981934
    10. 's' → logprob: -14.583067893981934

Token 420: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25304892659187317
    2. '%' → logprob: -1.5030488967895508
    3. ' ' → logprob: -7.628048896789551
    4. ' a' → logprob: -8.75304889678955
    5. ' %
' → logprob: -9.12804889678955
    6. 'a' → logprob: -9.25304889678955
    7. ' %=' → logprob: -9.87804889678955
    8. ' =' → logprob: -10.25304889678955
    9. 's' → logprob: -10.25304889678955
    10. '[' → logprob: -10.62804889678955

Token 421: ' impair' (ID: 64113)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1521788090467453
    2. 'a' → logprob: -2.1521787643432617
    3. '%' → logprob: -3.7771787643432617
    4. ' %' → logprob: -6.277178764343262
    5. ' ' → logprob: -9.527178764343262
    6. ' odd' → logprob: -10.027178764343262
    7. ' ' → logprob: -11.027178764343262
    8. '>' → logprob: -12.152178764343262
    9. '(a' → logprob: -12.527178764343262
    10. ' mod' → logprob: -12.777178764343262

Token 422: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7996706962585449
    2. 'if' → logprob: -1.049670696258545
    3. ':' → logprob: -1.799670696258545
    4. '   ' → logprob: -4.174670696258545
    5. ' :' → logprob: -5.174670696258545
    6. '           ' → logprob: -5.674670696258545
    7. '       ' → logprob: -5.924670696258545
    8. ' %' → logprob: -6.299670696258545
    9. '%' → logprob: -6.424670696258545
    10. ' and' → logprob: -6.924670696258545

Token 423: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326520442962646
    2. ' a' → logprob: -1.3132652044296265
    3. '(a' → logprob: -13.063264846801758
    4. ' ' → logprob: -14.563264846801758
    5. ' ' → logprob: -14.813264846801758
    6. '	a' → logprob: -15.188264846801758
    7. '   ' → logprob: -15.813264846801758
    8. ' (' → logprob: -15.938264846801758
    9. '_a' → logprob: -16.688264846801758
    10. '(' → logprob: -17.688264846801758

Token 424: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0059310514479875565
    2. ' a' → logprob: -5.1309309005737305
    3. '(a' → logprob: -14.38093090057373
    4. ' ' → logprob: -14.38093090057373
    5. '```' → logprob: -14.63093090057373
    6. '%' → logprob: -15.38093090057373
    7. '   ' → logprob: -15.63093090057373
    8. ' (' → logprob: -17.130931854248047
    9. '	a' → logprob: -17.255931854248047
    10. ' ' → logprob: -17.380931854248047

Token 425: ' de' (ID: 334)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.662912905216217
    2. ' de' → logprob: -1.5379128456115723
    3. ' ==' → logprob: -2.5379128456115723
    4. '=' → logprob: -3.1629128456115723
    5. ' !=' → logprob: -3.2879128456115723
    6. '==' → logprob: -3.6629128456115723
    7. ' ' → logprob: -3.6629128456115723
    8. '!=' → logprob: -3.9129128456115723
    9. 'a' → logprob: -4.412912845611572
    10. ' a' → logprob: -5.037912845611572

Token 426: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22544991970062256
    2. ' a' → logprob: -1.6004499197006226
    3. ' ' → logprob: -11.350449562072754
    4. ' la' → logprob: -11.600449562072754
    5. '(a' → logprob: -12.100449562072754
    6. 'div' → logprob: -12.725449562072754
    7. 'la' → logprob: -13.350449562072754
    8. ' division' → logprob: -13.350449562072754
    9. 'l' → logprob: -13.725449562072754
    10. ' l' → logprob: -14.475449562072754

Token 427: ' division' (ID: 21629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5119961500167847
    2. ' division' → logprob: -1.7619961500167847
    3. 'division' → logprob: -2.011996269226074
    4. ' a' → logprob: -2.761996269226074
    5. 'div' → logprob: -3.511996269226074
    6. '%' → logprob: -6.636996269226074
    7. ' ' → logprob: -7.886996269226074
    8. '2' → logprob: -8.761996269226074
    9. '1' → logprob: -8.761996269226074
    10. ' div' → logprob: -9.761996269226074

Token 428: ' par' (ID: 686)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7980426549911499
    2. ' a' → logprob: -0.9230426549911499
    3. ' de' → logprob: -2.0480427742004395
    4. '%' → logprob: -4.2980427742004395
    5. ' par' → logprob: -5.5480427742004395
    6. ' ' → logprob: -6.4230427742004395
    7. ' à' → logprob: -6.9230427742004395
    8. 'de' → logprob: -7.2980427742004395
    9. 'par' → logprob: -7.2980427742004395
    10. ')' → logprob: -7.5480427742004395

Token 429: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04859236627817154
    2. ' ' → logprob: -3.0485923290252686
    3. '```' → logprob: -12.798592567443848
    4. ' ' → logprob: -14.423592567443848
    5. '1' → logprob: -15.048592567443848
    6. ' deux' → logprob: -15.048592567443848
    7. ' 
' → logprob: -15.298592567443848
    8. '
' → logprob: -15.298592567443848
    9. '   ' → logprob: -15.923592567443848
    10. ',' → logprob: -16.54859161376953

Token 430: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00280558317899704
    2. ' ' → logprob: -5.877805709838867
    3. '```' → logprob: -14.752805709838867
    4. '
' → logprob: -15.877805709838867
    5. '1' → logprob: -16.627805709838867
    6. '   ' → logprob: -17.252805709838867
    7. ' ' → logprob: -17.502805709838867
    8. '10' → logprob: -17.752805709838867
    9. '  ' → logprob: -17.752805709838867
    10. '

' → logprob: -18.127805709838867

Token 431: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2017399072647095
    2. ' !=' → logprob: -1.3267399072647095
    3. ' est' → logprob: -1.4517399072647095
    4. '!=' → logprob: -2.32673978805542
    5. '==' → logprob: -2.45173978805542
    6. ' ' → logprob: -5.57673978805542
    7. ' n' → logprob: -6.07673978805542
    8. '=' → logprob: -6.07673978805542
    9. 'est' → logprob: -6.20173978805542
    10. ' is' → logprob: -6.32673978805542

Token 432: 'mod' (ID: 4847)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0959422588348389
    2. 'a' → logprob: -1.8459422588348389
    3. ' ' → logprob: -2.095942258834839
    4. ' a' → logprob: -2.345942258834839
    5. ')' → logprob: -2.470942258834839
    6. '1' → logprob: -2.595942258834839
    7. ' ==' → logprob: -2.845942258834839
    8. ' )' → logprob: -3.345942258834839
    9. '!=' → logprob: -3.720942258834839
    10. '%' → logprob: -5.470942497253418

Token 433: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3413863778114319
    2. ' ' → logprob: -2.091386318206787
    3. ' )' → logprob: -2.091386318206787
    4. '2' → logprob: -3.716386318206787
    5. ' ==' → logprob: -4.591386318206787
    6. 'ulo' → logprob: -6.216386318206787
    7. '   ' → logprob: -6.966386318206787
    8. '1' → logprob: -7.466386318206787
    9. 'a' → logprob: -7.591386318206787
    10. '=' → logprob: -7.591386318206787

Token 434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12870530784130096
    2. ' )' → logprob: -2.1287052631378174
    3. '2' → logprob: -7.2537055015563965
    4. ' ' → logprob: -8.003705024719238
    5. '1' → logprob: -8.253705024719238
    6. ' ==' → logprob: -8.503705024719238
    7. ')==' → logprob: -9.253705024719238
    8. 'a' → logprob: -10.003705024719238
    9. ' !=' → logprob: -10.003705024719238
    10. '==' → logprob: -11.128705024719238

Token 435: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7855626940727234
    2. '!=' → logprob: -0.7855626940727234
    3. ' ==' → logprob: -3.160562753677368
    4. '==' → logprob: -3.660562753677368
    5. ' est' → logprob: -4.660562515258789
    6. '=' → logprob: -5.660562515258789
    7. ' ' → logprob: -6.410562515258789
    8. ')' → logprob: -6.660562515258789
    9. '1' → logprob: -7.410562515258789
    10. 'a' → logprob: -7.535562515258789

Token 436: ' égal' (ID: 15059)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47426533699035645
    2. ' ' → logprob: -0.9742653369903564
    3. ' ==' → logprob: -9.599265098571777
    4. ' !=' → logprob: -9.849265098571777
    5. '!=' → logprob: -10.849265098571777
    6. '=' → logprob: -11.224265098571777
    7. '==' → logprob: -11.224265098571777
    8. ' =' → logprob: -11.474265098571777
    9. '```' → logprob: -13.099265098571777
    10. ' not' → logprob: -13.224265098571777

Token 437: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038409456610679626
    2. ' ' → logprob: -3.288409471511841
    3. ' à' → logprob: -8.538409233093262
    4. ' =' → logprob: -10.288409233093262
    5. 'à' → logprob: -10.288409233093262
    6. '=' → logprob: -10.413409233093262
    7. ' ==' → logprob: -10.913409233093262
    8. 'to' → logprob: -11.413409233093262
    9. '==' → logprob: -11.538409233093262
    10. '   ' → logprob: -11.788409233093262

Token 438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020542239770293236
    2. ' ' → logprob: -3.8955421447753906
    3. '```' → logprob: -15.64554214477539
    4. ' ' → logprob: -16.52054214477539
    5. '=' → logprob: -17.89554214477539
    6. '!=' → logprob: -18.14554214477539
    7. '`' → logprob: -18.14554214477539
    8. '0' → logprob: -18.14554214477539
    9. ' =' → logprob: -19.02054214477539
    10. ' !=' → logprob: -19.39554214477539

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '0' → logprob: -17.750085830688477
    4. '```' → logprob: -17.875085830688477
    5. '!=' → logprob: -19.000085830688477
    6. '=' → logprob: -19.750085830688477
    7. '
' → logprob: -20.125085830688477
    8. '`' → logprob: -20.250085830688477
    9. '!' → logprob: -20.375085830688477
    10. '==' → logprob: -20.500085830688477

Token 440: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004929834394715726
    2. '           ' → logprob: -8.125493049621582
    3. ' if' → logprob: -8.750493049621582
    4. 'if' → logprob: -11.125493049621582
    5. ':' → logprob: -11.375493049621582
    6. ',' → logprob: -12.500493049621582
    7. '        
' → logprob: -12.625493049621582
    8. ' :' → logprob: -13.500493049621582
    9. '   ' → logprob: -13.875493049621582
    10. '        ' → logprob: -14.875493049621582

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045783669338561594
    2. '           ' → logprob: -8.500457763671875
    3. ' if' → logprob: -8.500457763671875
    4. 'if' → logprob: -10.125457763671875
    5. '        
' → logprob: -12.375457763671875
    6. ':' → logprob: -13.625457763671875
    7. '   ' → logprob: -13.625457763671875
    8. ',' → logprob: -13.625457763671875
    9. '        ' → logprob: -14.125457763671875
    10. '      ' → logprob: -14.500457763671875

Token 442: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03945514187216759
    2. '           ' → logprob: -4.164454936981201
    3. 'if' (adapté à ' if') → logprob: -4.289454936981201
    4. ' if' → logprob: -4.664454936981201
    5. '        ' → logprob: -12.16445541381836
    6. '   ' → logprob: -12.78945541381836
    7. '        
' → logprob: -14.16445541381836
    8. ' ' → logprob: -14.28945541381836
    9. '      ' → logprob: -14.53945541381836
    10. '               ' → logprob: -14.66445541381836

Token 443: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.023251881822943687
    2. 'a' → logprob: -3.77325177192688
    3. '(a' → logprob: -12.8982515335083
    4. ' (' → logprob: -13.3982515335083
    5. ' ' → logprob: -13.6482515335083
    6. '	a' → logprob: -14.1482515335083
    7. '   ' → logprob: -15.2732515335083
    8. ' ' → logprob: -15.2732515335083
    9. '    ' → logprob: -17.773252487182617
    10. '(' → logprob: -18.398252487182617

Token 444: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.500006675720215
    3. ' [' → logprob: -13.500006675720215
    4. '[a' → logprob: -14.375006675720215
    5. '[j' → logprob: -15.125006675720215
    6. '[I' → logprob: -16.3750057220459
    7. '[
' → logprob: -17.2500057220459
    8. 'a' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 445: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06930074840784073
    2. '[j' → logprob: -2.819300651550293
    3. '][' → logprob: -4.944300651550293
    4. '[' → logprob: -9.069300651550293
    5. ' [' → logprob: -10.444300651550293
    6. '[a' → logprob: -11.444300651550293
    7. ')[' → logprob: -12.069300651550293
    8. ']' → logprob: -12.069300651550293
    9. ' ][' → logprob: -12.194300651550293
    10. '   ' → logprob: -12.694300651550293

Token 446: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4849443838757e-06
    2. ' j' → logprob: -12.500004768371582
    3. '[j' → logprob: -14.750004768371582
    4. '][' → logprob: -16.500003814697266
    5. '	j' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.000003814697266
    7. ']' → logprob: -17.375003814697266
    8. '```' → logprob: -17.750003814697266
    9. ',j' → logprob: -17.875003814697266
    10. ' ' → logprob: -18.625003814697266

Token 447: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005543697625398636
    2. ']%' → logprob: -5.3805437088012695
    3. '%' → logprob: -7.0055437088012695
    4. ' ]' → logprob: -11.63054370880127
    5. ')' → logprob: -12.13054370880127
    6. ']
' → logprob: -14.38054370880127
    7. ' %' → logprob: -14.63054370880127
    8. ')%' → logprob: -15.50554370880127
    9. '])' → logprob: -15.50554370880127
    10. '}' → logprob: -16.130542755126953

Token 448: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6326702833175659
    2. '%' → logprob: -0.7576702833175659
    3. ' ' → logprob: -10.132670402526855
    4. '1' → logprob: -11.382670402526855
    5. ' ' → logprob: -11.382670402526855
    6. ' %
' → logprob: -13.382670402526855
    7. ')' → logprob: -13.757670402526855
    8. '   ' → logprob: -13.882670402526855
    9. '```' → logprob: -14.132670402526855
    10. '%
' → logprob: -14.257670402526855

Token 449: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132631182670593
    2. ' ' → logprob: -1.313263177871704
    3. '1' → logprob: -13.938262939453125
    4. '```' → logprob: -15.313262939453125
    5. ' 
' → logprob: -16.938262939453125
    6. '  ' → logprob: -17.063262939453125
    7. '
' → logprob: -17.063262939453125
    8. '   ' → logprob: -17.563262939453125
    9. '<|end|>' → logprob: -17.688262939453125
    10. '=' → logprob: -17.938262939453125

Token 450: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.625
    4. '
' → logprob: -21.125
    5. '   ' → logprob: -21.5
    6. '1' → logprob: -21.875
    7. '==' → logprob: -22.25
    8. '

' → logprob: -23.375
    9. '>' → logprob: -23.5
    10. '۲' → logprob: -23.75

Token 451: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16260561347007751
    2. ' ==' → logprob: -1.9126056432724
    3. '=' → logprob: -6.4126057624816895
    4. '!=' → logprob: -7.4126057624816895
    5. ' !=' → logprob: -9.412605285644531
    6. ':' → logprob: -10.912605285644531
    7. ' =' → logprob: -11.162605285644531
    8. '1' → logprob: -11.537605285644531
    9. ')==' → logprob: -12.662605285644531
    10. '==
' → logprob: -13.037605285644531

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '0' → logprob: -20.12510871887207
    4. '   ' → logprob: -21.12510871887207
    5. '```' → logprob: -22.12510871887207
    6. '１' → logprob: -22.56260871887207
    7. '' → logprob: -22.75010871887207
    8. '۱' → logprob: -23.00010871887207
    9. '
' → logprob: -23.00010871887207
    10. '१' → logprob: -23.18760871887207

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '0' → logprob: -18.62500762939453
    4. '   ' → logprob: -19.62500762939453
    5. '```' → logprob: -19.75000762939453
    6. '' → logprob: -20.62500762939453
    7. '１' → logprob: -21.00000762939453
    8. '
' → logprob: -21.50000762939453
    9. '  ' → logprob: -22.06250762939453
    10. '`' → logprob: -22.06250762939453

Token 454: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007436376181431115
    2. ' :' → logprob: -8.000743865966797
    3. ' and' → logprob: -8.000743865966797
    4. ':
' → logprob: -9.750743865966797
    5. '):' → logprob: -12.375743865966797
    6. ',' → logprob: -12.750743865966797
    7. '   ' → logprob: -12.875743865966797
    8. '       ' → logprob: -13.375743865966797
    9. 'and' → logprob: -14.125743865966797
    10. '           ' → logprob: -14.375743865966797

Token 455: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9203751683235168
    2. '           ' → logprob: -1.420375108718872
    3. ' 
' → logprob: -2.045375108718872
    4. ' :' → logprob: -2.795375108718872
    5. '            
' → logprob: -2.795375108718872
    6. '        
' → logprob: -3.670375108718872
    7. '         
' → logprob: -4.170375347137451
    8. '       ' → logprob: -4.295375347137451
    9. ':' → logprob: -4.295375347137451
    10. '        ' → logprob: -4.545375347137451

Token 456: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40772873163223267
    2. ' if' → logprob: -1.157728672027588
    3. '               ' → logprob: -3.907728672027588
    4. '           ' → logprob: -8.157729148864746
    5. '   ' → logprob: -9.782729148864746
    6. '            ' → logprob: -10.032729148864746
    7. '#' (adapté à ' #') → logprob: -10.157729148864746
    8. '                ' → logprob: -10.282729148864746
    9. 'next' → logprob: -10.782729148864746
    10. '                
' → logprob: -11.032729148864746

Token 457: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03848929703235626
    2. ' if' → logprob: -3.41348934173584
    3. '           ' → logprob: -5.91348934173584
    4. '#' → logprob: -6.91348934173584
    5. '               ' → logprob: -7.03848934173584
    6. 'next' → logprob: -9.91348934173584
    7. '   ' → logprob: -10.16348934173584
    8. 'ni' → logprob: -10.41348934173584
    9. 'x' → logprob: -10.78848934173584
    10. 'pass' → logprob: -11.16348934173584

Token 458: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0620550736784935
    2. ' j' → logprob: -2.8120551109313965
    3. 'a' → logprob: -9.562054634094238
    4. ' a' → logprob: -12.187054634094238
    5. '(j' → logprob: -12.312054634094238
    6. '   ' → logprob: -12.812054634094238
    7. ' ' → logprob: -12.812054634094238
    8. '[j' → logprob: -14.937054634094238
    9. '	j' → logprob: -14.937054634094238
    10. ' (' → logprob: -15.687054634094238

Token 459: ' colonne' (ID: 148275)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05664999037981033
    2. ' j' → logprob: -2.931649923324585
    3. 'a' → logprob: -6.681650161743164
    4. 'W' → logprob: -8.431650161743164
    5. ' a' → logprob: -9.056650161743164
    6. 'i' → logprob: -9.806650161743164
    7. ' W' → logprob: -9.931650161743164
    8. '   ' → logprob: -10.806650161743164
    9. ' ' → logprob: -11.681650161743164
    10. 'J' → logprob: -11.806650161743164

Token 460: ' actuelle' (ID: 104951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.48114287853240967
    2. ' !=' → logprob: -1.3561428785324097
    3. ' j' → logprob: -2.856142997741699
    4. '<' → logprob: -3.481142997741699
    5. 'j' → logprob: -3.981142997741699
    6. '!=' → logprob: -4.481142997741699
    7. '[j' → logprob: -5.856142997741699
    8. '+' → logprob: -7.231142997741699
    9. ' ' → logprob: -7.356142997741699
    10. '+j' → logprob: -7.606142997741699

Token 461: ' n' (ID: 297)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9743283987045288
    2. ' !=' → logprob: -1.2243283987045288
    3. '!=' → logprob: -1.3493283987045288
    4. ' <' → logprob: -2.8493285179138184
    5. '+' → logprob: -4.599328517913818
    6. ' +' → logprob: -7.599328517913818
    7. '<n' → logprob: -8.59932804107666
    8. ' ' → logprob: -8.84932804107666
    9. '==' → logprob: -9.59932804107666
    10. '[' → logprob: -10.22432804107666

Token 462: ''est' (ID: 6616)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.016202449798584
    2. '<' → logprob: -1.266202449798584
    3. ' ==' → logprob: -1.516202449798584
    4. '+' → logprob: -2.891202449798584
    5. ' <' → logprob: -3.266202449798584
    6. '=' → logprob: -3.766202449798584
    7. '!=' → logprob: -5.016202449798584
    8. ' !=' → logprob: -6.016202449798584
    9. ' ' → logprob: -6.391202449798584
    10. 'o' → logprob: -7.391202449798584

Token 463: ' pas' (ID: 2173)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04987778142094612
    2. ' W' → logprob: -3.049877882003784
    3. '<W' → logprob: -7.674877643585205
    4. '(W' → logprob: -7.799877643585205
    5. 'j' → logprob: -7.924877643585205
    6. ' not' → logprob: -11.174878120422363
    7. '=W' → logprob: -11.549878120422363
    8. ' (' → logprob: -11.674878120422363
    9. 'not' → logprob: -11.924878120422363
    10. '<' → logprob: -12.799878120422363

Token 464: ' la' (ID: 557)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.008828941732645035
    2. ' W' → logprob: -4.758829116821289
    3. '(W' → logprob: -8.883829116821289
    4. 'j' → logprob: -9.633829116821289
    5. '<W' → logprob: -12.133829116821289
    6. ' (' → logprob: -12.633829116821289
    7. '=W' → logprob: -14.133829116821289
    8. '	W' → logprob: -15.133829116821289
    9. '(' → logprob: -15.258829116821289
    10. ' j' → logprob: -15.508829116821289

Token 465: ' dernière' (ID: 39497)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.003399432636797428
    2. ' W' → logprob: -5.75339937210083
    3. '(W' → logprob: -9.003399848937988
    4. 'last' → logprob: -9.878399848937988
    5. '0' → logprob: -11.128399848937988
    6. '<W' → logprob: -11.753399848937988
    7. ' last' → logprob: -11.878399848937988
    8. ' (' → logprob: -12.128399848937988
    9. 'j' → logprob: -12.503399848937988
    10. '   ' → logprob: -13.003399848937988

Token 466: ' colonne' (ID: 148275)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20440129935741425
    2. 'and' → logprob: -2.3294012546539307
    3. ':' → logprob: -2.7044012546539307
    4. '           ' → logprob: -4.70440149307251
    5. ':
' → logprob: -5.32940149307251
    6. ' :' → logprob: -5.95440149307251
    7. '               ' → logprob: -6.70440149307251
    8. ' :
' → logprob: -6.95440149307251
    9. '   ' → logprob: -7.45440149307251
    10. '       ' → logprob: -7.82940149307251

Token 467: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23632235825061798
    2. '           ' → logprob: -2.6113224029541016
    3. ':' → logprob: -2.8613224029541016
    4. 'and' → logprob: -3.1113224029541016
    5. '               ' → logprob: -3.4863224029541016
    6. ':
' → logprob: -6.611322402954102
    7. ' :' → logprob: -6.861322402954102
    8. ',' → logprob: -6.986322402954102
    9. '            ' → logprob: -7.611322402954102
    10. '       ' → logprob: -8.486322402954102

Token 468: 'col' (ID: 1798)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16023559868335724
    2. ' j' → logprob: -1.9102356433868408
    3. 'W' → logprob: -12.285235404968262
    4. ' W' → logprob: -13.410235404968262
    5. '   ' → logprob: -13.660235404968262
    6. ')' → logprob: -13.785235404968262
    7. '           ' → logprob: -14.410235404968262
    8. '(j' → logprob: -14.660235404968262
    9. ' )' → logprob: -14.785235404968262
    10. ' ' → logprob: -15.285235404968262

Token 469: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.0007929548737592995
    2. 'onnes' → logprob: -7.250792980194092
    3. 'umn' → logprob: -10.875792503356934
    4. 'on' → logprob: -11.125792503356934
    5. ' !=' → logprob: -11.250792503356934
    6. 'onn' → logprob: -11.875792503356934
    7. '<' → logprob: -12.125792503356934
    8. 'une' → logprob: -12.250792503356934
    9. '   ' → logprob: -12.250792503356934
    10. '!=' → logprob: -12.250792503356934

Token 470: ' d' (ID: 272)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6220425367355347
    2. ' <' → logprob: -0.9970425367355347
    3. ')' → logprob: -3.122042655944824
    4. ' !=' → logprob: -3.372042655944824
    5. '!=' → logprob: -4.622042655944824
    6. '   ' → logprob: -5.622042655944824
    7. ')<' → logprob: -7.747042655944824
    8. ' ' → logprob: -8.122042655944824
    9. 'j' → logprob: -8.372042655944824
    10. '       ' → logprob: -8.622042655944824

Token 471: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21316680312156677
    2. 'i' → logprob: -2.2131667137145996
    3. ''' → logprob: -3.4631667137145996
    4. ' e' → logprob: -4.7131667137146
    5. 'u' → logprob: -4.8381667137146
    6. ''i' → logprob: -4.9631667137146
    7. ''é' → logprob: -5.4631667137146
    8. ''e' → logprob: -5.9631667137146
    9. 'efined' → logprob: -6.0881667137146
    10. '```' → logprob: -6.4631667137146

Token 472: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.039304547011852264
    2. 'ex' → logprob: -3.289304494857788
    3. 'e' → logprob: -6.914304733276367
    4. 'ices' → logprob: -8.914304733276367
    5. 'i' → logprob: -9.664304733276367
    6. 'ce' → logprob: -11.164304733276367
    7. 'exe' → logprob: -11.414304733276367
    8. '```' → logprob: -11.414304733276367
    9. 'ic' → logprob: -11.539304733276367
    10. 'is' → logprob: -12.414304733276367

Token 473: ' W' (ID: 486)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18066786229610443
    2. ' j' → logprob: -2.3056678771972656
    3. 'W' → logprob: -2.9306678771972656
    4. ' W' → logprob: -4.680667877197266
    5. ' <' → logprob: -6.180667877197266
    6. '<' → logprob: -8.430667877197266
    7. ')' → logprob: -8.680667877197266
    8. '<W' → logprob: -9.180667877197266
    9. '   ' → logprob: -9.430667877197266
    10. ',' → logprob: -9.930667877197266

Token 474: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10023234039545059
    2. ' -' → logprob: -2.3502323627471924
    3. ')' → logprob: -11.600232124328613
    4. ' ' → logprob: -11.975232124328613
    5. '   ' → logprob: -12.850232124328613
    6. '1' → logprob: -13.100232124328613
    7. ')-' → logprob: -14.100232124328613
    8. '[' → logprob: -14.350232124328613
    9. 's' → logprob: -14.475232124328613
    10. 'moins' → logprob: -14.850232124328613

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011999329581158236
    2. '-' → logprob: -9.250120162963867
    3. ' ' → logprob: -11.125120162963867
    4. '2' → logprob: -12.000120162963867
    5. ' -' → logprob: -13.375120162963867
    6. '   ' → logprob: -14.500120162963867
    7. '```' → logprob: -14.875120162963867
    8. '           ' → logprob: -16.000120162963867
    9. '
' → logprob: -16.375120162963867
    10. ')' → logprob: -16.625120162963867

Token 476: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2779666483402252
    2. ' and' → logprob: -1.7779666185379028
    3. '):
' → logprob: -3.6529667377471924
    4. ')' → logprob: -4.152966499328613
    5. ':' → logprob: -4.402966499328613
    6. 'and' → logprob: -4.527966499328613
    7. '           ' → logprob: -5.402966499328613
    8. ' ):' → logprob: -6.152966499328613
    9. '),' → logprob: -7.027966499328613
    10. ',' → logprob: -7.402966499328613

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8025355935096741
    2. ':' → logprob: -1.0525355339050293
    3. '               ' → logprob: -1.8025355339050293
    4. ' and' → logprob: -4.177535533905029
    5. ':
' → logprob: -4.927535533905029
    6. ' :' → logprob: -5.427535533905029
    7. '       ' → logprob: -5.427535533905029
    8. ',' → logprob: -5.802535533905029
    9. '            ' → logprob: -7.302535533905029
    10. '                
' → logprob: -7.302535533905029

Token 478: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23464490473270416
    2. '           ' → logprob: -1.859644889831543
    3. ' if' → logprob: -3.984644889831543
    4. 'if' (adapté à ' if') → logprob: -4.234644889831543
    5. '       ' → logprob: -5.234644889831543
    6. '                
' → logprob: -5.234644889831543
    7. '            ' → logprob: -6.234644889831543
    8. ' :' → logprob: -6.609644889831543
    9. ':' → logprob: -6.984644889831543
    10. '                ' → logprob: -7.109644889831543

Token 479: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25193214416503906
    2. 'j' → logprob: -1.501932144165039
    3. '   ' → logprob: -13.501932144165039
    4. ' ' → logprob: -14.376932144165039
    5. '	j' → logprob: -14.626932144165039
    6. '    ' → logprob: -15.126932144165039
    7. ' ' → logprob: -15.751932144165039
    8. '(j' → logprob: -16.25193214416504
    9. 'a' → logprob: -17.25193214416504
    10. '[j' → logprob: -17.37693214416504

Token 480: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4484787881374359
    2. '<' → logprob: -1.0734788179397583
    3. ' !=' → logprob: -4.073478698730469
    4. '!=' → logprob: -6.573478698730469
    5. '+' → logprob: -7.073478698730469
    6. ' ' → logprob: -8.698478698730469
    7. ' +' → logprob: -9.698478698730469
    8. '<W' → logprob: -10.823478698730469
    9. '<len' → logprob: -11.448478698730469
    10. '[' → logprob: -11.698478698730469

Token 481: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014165629632771015
    2. ' W' → logprob: -4.26416540145874
    3. '   ' → logprob: -13.264165878295898
    4. '	W' → logprob: -15.889165878295898
    5. ' ' → logprob: -16.1391658782959
    6. '(W' → logprob: -17.0141658782959
    7. '<W' → logprob: -17.5141658782959
    8. '  ' → logprob: -17.6391658782959
    9. '    ' → logprob: -18.3891658782959
    10. '       ' → logprob: -18.7641658782959

Token 482: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02975071594119072
    2. ' -' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.77975082397461
    4. '   ' → logprob: -16.90475082397461
    5. '1' → logprob: -17.27975082397461
    6. '–' → logprob: -17.77975082397461
    7. '−' → logprob: -17.77975082397461
    8. ' ' → logprob: -18.27975082397461
    9. '()-' → logprob: -18.52975082397461
    10. ':' → logprob: -18.52975082397461

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.6250057220459
    4. '2' → logprob: -16.7500057220459
    5. '-' → logprob: -17.7500057220459
    6. '```' → logprob: -17.8750057220459
    7. '۱' → logprob: -18.6250057220459
    8. '１' → logprob: -18.8750057220459
    9. '<|end|>' → logprob: -18.9375057220459
    10. '১' → logprob: -19.3750057220459

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019135259091854095
    2. ':
' → logprob: -4.019135475158691
    3. ' :' → logprob: -7.644135475158691
    4. '           ' → logprob: -8.394135475158691
    5. '               ' → logprob: -8.894135475158691
    6. ' and' → logprob: -9.144135475158691
    7. ' :
' → logprob: -10.644135475158691
    8. '       ' → logprob: -12.644135475158691
    9. 'and' → logprob: -13.144135475158691
    10. ',' → logprob: -13.144135475158691

Token 485: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15471151471138
    2. ':' → logprob: -2.7797114849090576
    3. '           ' → logprob: -3.4047114849090576
    4. ' :' → logprob: -3.5297114849090576
    5. ' a' → logprob: -4.779711723327637
    6. 'a' → logprob: -5.029711723327637
    7. '                
' → logprob: -7.154711723327637
    8. ' and' → logprob: -7.904711723327637
    9. '            ' → logprob: -7.904711723327637
    10. ' ' → logprob: -7.904711723327637

Token 486: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1784568876028061
    2. ' a' → logprob: -2.3034567832946777
    3. '               ' → logprob: -3.1784567832946777
    4. '                   ' → logprob: -4.678456783294678
    5. '                ' → logprob: -5.553456783294678
    6. '                
' → logprob: -5.803456783294678
    7. ' 
' → logprob: -6.803456783294678
    8. '           ' → logprob: -6.928456783294678
    9. '                    
' → logprob: -7.053456783294678
    10. 'move' → logprob: -7.428456783294678

Token 487: ' Ajouter' (ID: 165754)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0038830959238111973
    2. 'move' → logprob: -5.878882884979248
    3. '               ' → logprob: -7.503882884979248
    4. ' a' → logprob: -9.128883361816406
    5. '#' → logprob: -9.253883361816406
    6. '                   ' → logprob: -9.378883361816406
    7. '   ' → logprob: -9.878883361816406
    8. 'amount' → logprob: -10.003883361816406
    9. '           ' → logprob: -10.128883361816406
    10. 'if' → logprob: -10.503883361816406

Token 488: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7357267141342163
    2. ' (' → logprob: -1.6107267141342163
    3. '(j' → logprob: -1.8607267141342163
    4. '((' → logprob: -2.610726833343506
    5. '(i' → logprob: -3.360726833343506
    6. '('' → logprob: -3.735726833343506
    7. '(move' → logprob: -4.360726833343506
    8. ' ((' → logprob: -5.610726833343506
    9. '   ' → logprob: -5.860726833343506
    10. '("' → logprob: -6.110726833343506

Token 489: ' la' (ID: 557)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.06250960379838943
    2. ' move' → logprob: -2.812509536743164
    3. '   ' → logprob: -8.437509536743164
    4. '(move' → logprob: -8.937509536743164
    5. '[(' → logprob: -8.937509536743164
    6. ' [(' → logprob: -10.312509536743164
    7. ' (' → logprob: -12.437509536743164
    8. ' ' → logprob: -12.687509536743164
    9. '       ' → logprob: -12.687509536743164
    10. '('' → logprob: -12.937509536743164

Token 490: ' liste' (ID: 31719)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -8.41866585687967e-06
    2. ' move' → logprob: -11.750008583068848
    3. 'a' → logprob: -15.625008583068848
    4. '   ' → logprob: -15.750008583068848
    5. '(move' → logprob: -16.37500762939453
    6. 'moves' → logprob: -16.87500762939453
    7. 'm' → logprob: -17.50000762939453
    8. 'mov' → logprob: -18.12500762939453
    9. '[(' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.12500762939453

Token 491: ' '' (ID: 461)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5575689077377319
    2. ' move' → logprob: -1.057568907737732
    3. '(move' → logprob: -3.4325690269470215
    4. '('' → logprob: -3.9325690269470215
    5. '("' → logprob: -4.6825690269470215
    6. ' (' → logprob: -5.0575690269470215
    7. '   ' → logprob: -5.4325690269470215
    8. ' ("' → logprob: -5.8075690269470215
    9. ' ('' → logprob: -6.4325690269470215
    10. '(' → logprob: -6.5575690269470215

Token 492: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -6.384836888173595e-05
    2. ' move' → logprob: -9.7500638961792
    3. '(move' → logprob: -12.3750638961792
    4. '   ' → logprob: -14.1250638961792
    5. '[(' → logprob: -16.125062942504883
    6. ''m' → logprob: -16.500062942504883
    7. '('' → logprob: -16.625062942504883
    8. 'moves' → logprob: -16.875062942504883
    9. ' ' → logprob: -17.000062942504883
    10. '	move' → logprob: -17.875062942504883

Token 493: ''' (ID: 6)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1645476371049881
    2. '(move' → logprob: -1.9145476818084717
    3. '                   ' → logprob: -6.664547443389893
    4. '               ' → logprob: -6.914547443389893
    5. '(' → logprob: -7.414547443389893
    6. '   ' → logprob: -7.914547443389893
    7. '.move' → logprob: -8.41454792022705
    8. '((' → logprob: -8.66454792022705
    9. ',' → logprob: -8.91454792022705
    10. 'append' → logprob: -9.16454792022705

Token 494: ' le' (ID: 505)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20051325857639313
    2. '(move' → logprob: -2.5755133628845215
    3. '((' → logprob: -3.3255133628845215
    4. '[(' → logprob: -3.9505133628845215
    5. ' (' → logprob: -4.0755133628845215
    6. '                   ' → logprob: -4.5755133628845215
    7. '   ' → logprob: -4.9505133628845215
    8. '               ' → logprob: -5.0755133628845215
    9. '(' → logprob: -5.3255133628845215
    10. '('' → logprob: -6.5755133628845215

Token 495: ' mouvement' (ID: 62236)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02643684484064579
    2. '[i' → logprob: -3.9014368057250977
    3. '((' → logprob: -6.026436805725098
    4. ' (' → logprob: -6.401436805725098
    5. '(j' → logprob: -6.901436805725098
    6. '(' → logprob: -8.026436805725098
    7. '[(' → logprob: -8.151436805725098
    8. '(f' → logprob: -9.776436805725098
    9. '   ' → logprob: -10.026436805725098
    10. '[j' → logprob: -10.526436805725098

Token 496: ' sous' (ID: 14487)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5924416780471802
    2. ' (' → logprob: -1.0924416780471802
    3. '(' → logprob: -2.8424415588378906
    4. '((' → logprob: -3.9674415588378906
    5. '[i' → logprob: -4.592441558837891
    6. '(j' → logprob: -4.717441558837891
    7. '[(' → logprob: -5.217441558837891
    8. '   ' → logprob: -5.467441558837891
    9. '                   ' → logprob: -6.717441558837891
    10. '(f' → logprob: -6.967441558837891

Token 497: ' forme' (ID: 27450)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.804975152015686
    2. '[j' → logprob: -1.304975152015686
    3. '(' → logprob: -2.0549750328063965
    4. ' (' → logprob: -2.4299750328063965
    5. '[' → logprob: -3.6799750328063965
    6. '('' → logprob: -4.1799750328063965
    7. '("' → logprob: -5.6799750328063965
    8. ''' → logprob: -5.8049750328063965
    9. '[(' → logprob: -5.8049750328063965
    10. '[i' → logprob: -5.9299750328063965

Token 498: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6417693495750427
    2. '("' → logprob: -1.5167694091796875
    3. ' (' → logprob: -3.0167694091796875
    4. '[' → logprob: -3.1417694091796875
    5. ' de' → logprob: -3.5167694091796875
    6. '('' → logprob: -3.6417694091796875
    7. 'de' → logprob: -3.7667694091796875
    8. '   ' → logprob: -3.8917694091796875
    9. '["' → logprob: -4.7667694091796875
    10. '(de' → logprob: -5.1417694091796875

Token 499: ' liste' (ID: 31719)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07346704602241516
    2. '[i' → logprob: -2.9484670162200928
    3. '(j' → logprob: -4.823467254638672
    4. '(f' → logprob: -5.198467254638672
    5. 'f' → logprob: -6.323467254638672
    6. ' (' → logprob: -6.573467254638672
    7. '[j' → logprob: -7.448467254638672
    8. '(' → logprob: -7.573467254638672
    9. '(str' → logprob: -8.698467254638672
    10. '("{}' → logprob: -8.698467254638672

Token 500: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024192029377445579
    2. ' [' → logprob: -8.750242233276367
    3. '[a' → logprob: -10.250242233276367
    4. '[j' → logprob: -10.375242233276367
    5. '[' → logprob: -11.375242233276367
    6. '([' → logprob: -13.125242233276367
    7. '   ' → logprob: -13.250242233276367
    8. '[(' → logprob: -14.625242233276367
    9. '[I' → logprob: -14.625242233276367
    10. '[[' → logprob: -15.000242233276367

Token 501: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9146995327901095e-05
    2. ' i' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.125019073486328
    4. '(i' → logprob: -15.250019073486328
    5. '1' → logprob: -16.250019073486328
    6. '[i' → logprob: -17.250019073486328
    7. '	i' → logprob: -17.500019073486328
    8. '{i' → logprob: -17.750019073486328
    9. ''i' → logprob: -19.375019073486328
    10. ',i' → logprob: -19.500019073486328

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08948986232280731
    2. ',j' → logprob: -2.7144899368286133
    3. ' ,' → logprob: -3.9644899368286133
    4. '[' → logprob: -8.964489936828613
    5. '+' → logprob: -9.714489936828613
    6. '][' → logprob: -9.839489936828613
    7. '[j' → logprob: -9.839489936828613
    8. ',i' → logprob: -10.714489936828613
    9. 'j' → logprob: -10.839489936828613
    10. ' j' → logprob: -11.839489936828613

Token 503: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002036595979006961
    2. ' j' → logprob: -8.500204086303711
    3. '	j' → logprob: -15.750204086303711
    4. '   ' → logprob: -17.25020408630371
    5. ',j' → logprob: -17.75020408630371
    6. '$j' → logprob: -18.87520408630371
    7. '    ' → logprob: -19.00020408630371
    8. '_j' → logprob: -19.87520408630371
    9. '  ' → logprob: -20.37520408630371
    10. ' ' → logprob: -20.62520408630371

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005301589146256447
    2. ' ,' → logprob: -5.505301475524902
    3. '+' → logprob: -6.880301475524902
    4. ',i' → logprob: -8.880301475524902
    5. ',j' → logprob: -10.880301475524902
    6. ' +' → logprob: -11.505301475524902
    7. ']' → logprob: -12.630301475524902
    8. '[' → logprob: -12.755301475524902
    9. '],' → logprob: -13.130301475524902
    10. '   ' → logprob: -13.380301475524902

Token 505: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002477200934663415
    2. ' i' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.127477645874023
    4. ' ' → logprob: -15.502477645874023
    5. '  ' → logprob: -15.877477645874023
    6. '1' → logprob: -16.127477645874023
    7. '	i' → logprob: -16.377477645874023
    8. '    ' → logprob: -16.877477645874023
    9. ''i' → logprob: -16.877477645874023
    10. ',i' → logprob: -17.752477645874023

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012793805450201035
    2. ',j' → logprob: -4.762794017791748
    3. ' ,' → logprob: -5.512794017791748
    4. ',i' → logprob: -9.26279354095459
    5. '[' → logprob: -11.26279354095459
    6. '[j' → logprob: -12.01279354095459
    7. ' ' → logprob: -12.38779354095459
    8. '   ' → logprob: -12.38779354095459
    9. '][' → logprob: -12.38779354095459
    10. ']' → logprob: -13.38779354095459

Token 507: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014165983535349369
    2. ' j' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.889165878295898
    4. '   ' → logprob: -14.264165878295898
    5. '(j' → logprob: -15.014165878295898
    6. '    ' → logprob: -15.389165878295898
    7. '	j' → logprob: -15.764165878295898
    8. ',j' → logprob: -15.889165878295898
    9. '  ' → logprob: -16.0141658782959
    10. ' (' → logprob: -17.6391658782959

Token 508: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02054702304303646
    2. ' +' → logprob: -3.8955469131469727
    3. ',' → logprob: -13.270546913146973
    4. '1' → logprob: -13.520546913146973
    5. ' ,' → logprob: -14.145546913146973
    6. ']' → logprob: -14.895546913146973
    7. '+,' → logprob: -15.270546913146973
    8. ' plus' → logprob: -15.520546913146973
    9. '+]' → logprob: -15.770546913146973
    10. '   ' → logprob: -16.02054786682129

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. ']' → logprob: -15.000052452087402
    4. '+' → logprob: -16.375051498413086
    5. ' ]' → logprob: -17.000051498413086
    6. '   ' → logprob: -18.000051498413086
    7. '```' → logprob: -18.000051498413086
    8. '[' → logprob: -19.250051498413086
    9. '`' → logprob: -19.750051498413086
    10. ' +' → logprob: -19.750051498413086

Token 510: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026812130585312843
    2. ',' → logprob: -3.9018120765686035
    3. '               ' → logprob: -5.4018120765686035
    4. ' ]' → logprob: -7.1518120765686035
    5. '           ' → logprob: -7.6518120765686035
    6. ']
' → logprob: -7.9018120765686035
    7. ' ,' → logprob: -10.401812553405762
    8. '                   ' → logprob: -10.901812553405762
    9. '       ' → logprob: -12.026812553405762
    10. '   ' → logprob: -12.026812553405762

Token 511: '               ' (ID: 506)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31721097230911255
    2. '[' → logprob: -1.9422109127044678
    3. ' [' → logprob: -2.6922109127044678
    4. ' i' → logprob: -3.8172109127044678
    5. '               ' → logprob: -4.567211151123047
    6. ''' → logprob: -5.567211151123047
    7. '"' → logprob: -5.817211151123047
    8. ',' → logprob: -5.942211151123047
    9. ' ,' → logprob: -5.942211151123047
    10. '['' → logprob: -6.067211151123047

Token 512: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1551145315170288
    2. ' ]' → logprob: -1.7801145315170288
    3. ' ,' → logprob: -1.9051145315170288
    4. ' i' → logprob: -2.4051146507263184
    5. '                ' → logprob: -3.0301146507263184
    6. 'i' → logprob: -3.1551146507263184
    7. ']' → logprob: -3.2801146507263184
    8. '               ' → logprob: -3.2801146507263184
    9. ',' → logprob: -3.5301146507263184
    10. '[' → logprob: -4.155114650726318

Token 513: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12392617762088776
    2. ' )' → logprob: -3.2489261627197266
    3. ' ,' → logprob: -3.6239261627197266
    4. ''' → logprob: -3.9989261627197266
    5. '               ' → logprob: -4.748926162719727
    6. ')' → logprob: -4.873926162719727
    7. '                ' → logprob: -5.373926162719727
    8. ' ]' → logprob: -5.748926162719727
    9. ' 
' → logprob: -6.248926162719727
    10. ',' → logprob: -6.623926162719727

Token 514: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5723061561584473
    2. '[' → logprob: -1.9473061561584473
    3. 'ont' → logprob: -1.9473061561584473
    4. '    ' → logprob: -2.4473061561584473
    5. '   ' → logprob: -3.0723061561584473
    6. 'es' → logprob: -3.1973061561584473
    7. '       ' → logprob: -3.3223061561584473
    8. ' a' → logprob: -3.5723061561584473
    9. '     ' → logprob: -3.5723061561584473
    10. ' ' → logprob: -3.6973061561584473

Token 515: '-à' (ID: 56297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3824650049209595
    2. '-à' → logprob: -1.6324650049209595
    3. ' [' → logprob: -2.88246488571167
    4. 'à' → logprob: -3.50746488571167
    5. ' à' → logprob: -4.75746488571167
    6. '   ' → logprob: -5.25746488571167
    7. '[i' → logprob: -5.38246488571167
    8. '  ' → logprob: -6.00746488571167
    9. 'a' → logprob: -6.63246488571167
    10. '    ' → logprob: -6.88246488571167

Token 516: '-dire' (ID: 76064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01972697302699089
    2. '[i' → logprob: -4.769726753234863
    3. '[
' → logprob: -5.644726753234863
    4. 'à' → logprob: -6.394726753234863
    5. '-à' → logprob: -6.894726753234863
    6. ' [' → logprob: -7.144726753234863
    7. 'liste' → logprob: -7.144726753234863
    8. '[j' → logprob: -7.644726753234863
    9. 'f' → logprob: -7.894726753234863
    10. 'i' → logprob: -8.144726753234863

Token 517: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4745216965675354
    2. ' i' → logprob: -0.9745216965675354
    3. '[i' → logprob: -7.974521636962891
    4. '(i' → logprob: -10.47452163696289
    5. ' ' → logprob: -11.09952163696289
    6. ' [' → logprob: -11.34952163696289
    7. ' (' → logprob: -11.59952163696289
    8. '   ' → logprob: -12.47452163696289
    9. '           ' → logprob: -12.47452163696289
    10. ''i' → logprob: -12.47452163696289

Token 518: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.0493007898330688
    2. ' déplacement' → logprob: -1.0493007898330688
    3. '1' → logprob: -3.1743006706237793
    4. 'm' → logprob: -3.2993006706237793
    5. 'd' → logprob: -3.4243006706237793
    6. ' mouvement' → logprob: -3.5493006706237793
    7. 'pas' → logprob: -3.9243006706237793
    8. 'c' → logprob: -4.049300670623779
    9. 'move' → logprob: -4.424300670623779
    10. 'trans' → logprob: -4.799300670623779

Token 519: ' d' (ID: 272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.28570157289505005
    2. ' [' → logprob: -1.7857015132904053
    3. ',' → logprob: -3.4107015132904053
    4. '[' → logprob: -3.6607015132904053
    5. ' de' → logprob: -4.785701751708984
    6. ' ,' → logprob: -4.910701751708984
    7. ' from' → logprob: -6.410701751708984
    8. '   ' → logprob: -6.785701751708984
    9. 'from' → logprob: -6.785701751708984
    10. ' ' → logprob: -7.035701751708984

Token 520: ''une' (ID: 13337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42405733466148376
    2. ' i' → logprob: -1.1740573644638062
    3. 'a' → logprob: -4.299057483673096
    4. ' ' → logprob: -4.549057483673096
    5. ' la' → logprob: -5.674057483673096
    6. '[i' → logprob: -5.924057483673096
    7. '1' → logprob: -6.049057483673096
    8. 'l' → logprob: -6.674057483673096
    9. '(i' → logprob: -6.799057483673096
    10. ' a' → logprob: -7.674057483673096

Token 521: ' pièce' (ID: 56132)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.16687634587287903
    2. ' case' → logprob: -2.0418763160705566
    3. ' ' → logprob: -4.791876316070557
    4. ' cellule' → logprob: -5.166876316070557
    5. 'ligne' → logprob: -6.166876316070557
    6. 'cell' → logprob: -6.541876316070557
    7. '   ' → logprob: -7.541876316070557
    8. 'i' → logprob: -7.541876316070557
    9. ',' → logprob: -7.666876316070557
    10. ' i' → logprob: -7.791876316070557

Token 522: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8166680932044983
    2. '[i' → logprob: -1.1916680335998535
    3. ' ,' → logprob: -1.6916680335998535
    4. '[' → logprob: -4.0666680335998535
    5. ' vers' → logprob: -4.5666680335998535
    6. '(i' → logprob: -4.5666680335998535
    7. ' de' → logprob: -4.9416680335998535
    8. '   ' → logprob: -5.4416680335998535
    9. ' d' → logprob: -5.6916680335998535
    10. ' à' → logprob: -5.8166680335998535

Token 523: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03405895456671715
    2. ' i' → logprob: -3.4090590476989746
    3. '[i' → logprob: -7.909059047698975
    4. '(i' → logprob: -10.284058570861816
    5. ' (' → logprob: -12.034058570861816
    6. ' ' → logprob: -13.284058570861816
    7. '	i' → logprob: -14.159058570861816
    8. ',' → logprob: -14.534058570861816
    9. ' [' → logprob: -14.784058570861816
    10. '[' → logprob: -14.784058570861816

Token 524: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019305398454889655
    2. ' i' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.876930236816406
    4. '	i' → logprob: -14.501930236816406
    5. '[i' → logprob: -15.876930236816406
    6. ' ' → logprob: -15.876930236816406
    7. ')i' → logprob: -16.501930236816406
    8. '    ' → logprob: -16.751930236816406
    9. ')' → logprob: -17.001930236816406
    10. '  ' → logprob: -18.001930236816406

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009367027319967747
    2. ',j' → logprob: -4.759366989135742
    3. ' ,' → logprob: -7.259366989135742
    4. ' ' → logprob: -11.384366989135742
    5. '   ' → logprob: -11.759366989135742
    6. ',i' → logprob: -12.009366989135742
    7. '[' → logprob: -12.259366989135742
    8. '[j' → logprob: -12.759366989135742
    9. ')' → logprob: -12.884366989135742
    10. '',' → logprob: -13.134366989135742

Token 526: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10022488981485367
    2. ' j' → logprob: -2.3502249717712402
    3. ' ' → logprob: -12.100224494934082
    4. ',j' → logprob: -12.100224494934082
    5. '	j' → logprob: -12.725224494934082
    6. '<|end|>' → logprob: -12.975224494934082
    7. '   ' → logprob: -14.475224494934082
    8. ',' → logprob: -15.100224494934082
    9. '    ' → logprob: -15.350224494934082
    10. ' ' → logprob: -15.475224494934082

Token 527: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2038816660642624
    2. ')' → logprob: -1.8288816213607788
    3. ' ,' → logprob: -3.9538817405700684
    4. ' vers' → logprob: -5.828881740570068
    5. ' )' → logprob: -7.328881740570068
    6. ',i' → logprob: -8.07888126373291
    7. ',j' → logprob: -8.45388126373291
    8. '[i' → logprob: -8.57888126373291
    9. '   ' → logprob: -9.82888126373291
    10. '[' → logprob: -10.07888126373291

Token 528: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030403124168515205
    2. ' ,' → logprob: -3.6554031372070312
    3. ' vers' → logprob: -5.905403137207031
    4. ')' → logprob: -7.280403137207031
    5. '   ' → logprob: -8.405403137207031
    6. '<|end|>' → logprob: -9.655403137207031
    7. '[' → logprob: -9.905403137207031
    8. ']' → logprob: -10.155403137207031
    9. '```' → logprob: -10.155403137207031
    10. ' à' → logprob: -10.405403137207031

Token 529: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4288581907749176
    2. 'i' → logprob: -1.3038581609725952
    3. '(i' → logprob: -3.0538582801818848
    4. ' (' → logprob: -3.5538582801818848
    5. '[i' → logprob: -6.678858280181885
    6. ' ' → logprob: -9.428857803344727
    7. '(' → logprob: -10.428857803344727
    8. ',i' → logprob: -10.678857803344727
    9. ',' → logprob: -10.928857803344727
    10. '{i' → logprob: -11.553857803344727

Token 530: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31331729888916016
    2. 'i' → logprob: -1.3133172988891602
    3. ' ' → logprob: -10.31331729888916
    4. 'j' → logprob: -12.18831729888916
    5. ')' → logprob: -12.18831729888916
    6. ',' → logprob: -12.68831729888916
    7. ' j' → logprob: -12.81331729888916
    8. '   ' → logprob: -13.31331729888916
    9. '	i' → logprob: -13.56331729888916
    10. ',i' → logprob: -13.81331729888916

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011737978784367442
    2. ' ,' → logprob: -7.501173973083496
    3. ',j' → logprob: -7.501173973083496
    4. ')' → logprob: -10.001173973083496
    5. ' ' → logprob: -11.376173973083496
    6. '   ' → logprob: -12.751173973083496
    7. ' j' → logprob: -12.876173973083496
    8. 'j' → logprob: -13.126173973083496
    9. '<|end|>' → logprob: -14.001173973083496
    10. '[j' → logprob: -14.001173973083496

Token 532: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.575975775718689
    2. ' j' → logprob: -0.825975775718689
    3. '(j' → logprob: -10.70097541809082
    4. ' (' → logprob: -12.07597541809082
    5. ' ' → logprob: -12.57597541809082
    6. ')' → logprob: -13.57597541809082
    7. '[j' → logprob: -13.70097541809082
    8. ' ' → logprob: -14.45097541809082
    9. ',j' → logprob: -14.95097541809082
    10. '```' → logprob: -15.20097541809082

Token 533: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003230948466807604
    2. ' +' → logprob: -5.753231048583984
    3. '1' → logprob: -10.253231048583984
    4. '   ' → logprob: -11.378231048583984
    5. ')' → logprob: -12.503231048583984
    6. ')+' → logprob: -13.503231048583984
    7. ' ' → logprob: -15.003231048583984
    8. 'plus' → logprob: -15.503231048583984
    9. ' plus' → logprob: -15.628231048583984
    10. '+
' → logprob: -15.628231048583984

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015245062531903386
    2. ' ' → logprob: -6.876524448394775
    3. '+' → logprob: -7.626524448394775
    4. ' +' → logprob: -12.501524925231934
    5. ')' → logprob: -15.251524925231934
    6. '   ' → logprob: -16.751523971557617
    7. ' )' → logprob: -17.439023971557617
    8. '```' → logprob: -17.626523971557617
    9. '+)' → logprob: -18.001523971557617
    10. '2' → logprob: -18.314023971557617

Token 535: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4294898509979248
    2. ')' → logprob: -1.3044898509979248
    3. '               ' → logprob: -3.179489850997925
    4. ')]' → logprob: -4.179490089416504
    5. '           ' → logprob: -4.304490089416504
    6. ' ]' → logprob: -5.554490089416504
    7. '])' → logprob: -6.429490089416504
    8. ',' → logprob: -7.054490089416504
    9. ']
' → logprob: -8.054490089416504
    10. '   ' → logprob: -9.054490089416504

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007268090266734362
    2. '           ' → logprob: -5.632267951965332
    3. ' move' → logprob: -6.007267951965332
    4. 'move' → logprob: -6.882267951965332
    5. '[' → logprob: -9.757267951965332
    6. '                   ' → logprob: -10.382267951965332
    7. '(move' → logprob: -10.382267951965332
    8. '```' → logprob: -11.132267951965332
    9. '       ' → logprob: -11.382267951965332
    10. '	move' → logprob: -12.007267951965332

Token 537: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -0.5186543464660645
    2. '               ' → logprob: -1.0186543464660645
    3. ' move' → logprob: -3.1436543464660645
    4. '                   ' → logprob: -8.143653869628906
    5. '           ' → logprob: -9.143653869628906
    6. '   ' → logprob: -10.143653869628906
    7. '	move' → logprob: -11.018653869628906
    8. '(move' → logprob: -12.268653869628906
    9. '                ' → logprob: -12.393653869628906
    10. '       ' → logprob: -12.518653869628906

Token 538: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.625036239624023
    4. '.extend' → logprob: -16.125036239624023
    5. '.app' → logprob: -18.500036239624023
    6. '.ap' → logprob: -18.750036239624023
    7. '+.' → logprob: -19.000036239624023
    8. 'append' → logprob: -19.375036239624023
    9. ').' → logprob: -19.625036239624023
    10. '.push' → logprob: -19.750036239624023

Token 539: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -4.56102097814437e-05
    2. '[i' → logprob: -10.000045776367188
    3. '(' → logprob: -16.500045776367188
    4. '[' → logprob: -16.750045776367188
    5. ' [' → logprob: -18.500045776367188
    6. ' ([' → logprob: -18.750045776367188
    7. '(i' → logprob: -18.875045776367188
    8. '((' → logprob: -19.125045776367188
    9. '   ' → logprob: -19.750045776367188
    10. '[I' → logprob: -20.250045776367188

Token 540: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1041145626222715e-05
    2. ' i' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.000011444091797
    4. '	i' → logprob: -17.750011444091797
    5. '{i' → logprob: -19.875011444091797
    6. '           ' → logprob: -20.250011444091797
    7. '       ' → logprob: -20.250011444091797
    8. ',i' → logprob: -20.250011444091797
    9. '_i' → logprob: -21.250011444091797
    10. '               ' → logprob: -21.250011444091797

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010329312644898891
    2. ',j' → logprob: -4.760329246520996
    3. ' ,' → logprob: -6.385329246520996
    4. ',i' → logprob: -11.385329246520996
    5. '   ' → logprob: -12.635329246520996
    6. ' ' → logprob: -12.885329246520996
    7. ',
' → logprob: -13.135329246520996
    8. '<|end|>' → logprob: -13.385329246520996
    9. '	' → logprob: -14.385329246520996
    10. ',m' → logprob: -14.635329246520996

Token 542: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00861681904643774
    2. ' j' → logprob: -4.758616924285889
    3. '	j' → logprob: -13.25861644744873
    4. '<|end|>' → logprob: -15.25861644744873
    5. '   ' → logprob: -16.258617401123047
    6. ' ' → logprob: -16.383617401123047
    7. '$j' → logprob: -17.133617401123047
    8. ',j' → logprob: -17.383617401123047
    9. '[j' → logprob: -17.758617401123047
    10. '    ' → logprob: -17.758617401123047

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001421068562194705
    2. ' ,' → logprob: -6.626420974731445
    3. ',i' → logprob: -9.751420974731445
    4. ',
' → logprob: -11.251420974731445
    5. '+' → logprob: -11.626420974731445
    6. '   ' → logprob: -12.126420974731445
    7. '    ' → logprob: -13.501420974731445
    8. ' ' → logprob: -13.626420974731445
    9. ',j' → logprob: -13.751420974731445
    10. '  ' → logprob: -14.251420974731445

Token 544: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018160710111260414
    2. ' i' → logprob: -4.018160820007324
    3. '	i' → logprob: -11.643160820007324
    4. '   ' → logprob: -13.393160820007324
    5. ' ' → logprob: -15.393160820007324
    6. '    ' → logprob: -16.143159866333008
    7. '  ' → logprob: -17.518159866333008
    8. '           ' → logprob: -17.518159866333008
    9. ',i' → logprob: -17.893159866333008
    10. '       ' → logprob: -18.018159866333008

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012183323269709945
    2. ' ,' → logprob: -6.751218318939209
    3. ',j' → logprob: -10.001218795776367
    4. 'j' → logprob: -13.501218795776367
    5. ' j' → logprob: -14.501218795776367
    6. ' ' → logprob: -15.001218795776367
    7. ',
' → logprob: -16.376218795776367
    8. '[' → logprob: -16.501218795776367
    9. '   ' → logprob: -16.626218795776367
    10. 's' → logprob: -17.126218795776367

Token 546: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006715370807796717
    2. ' j' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.381715774536133
    4. ' ' → logprob: -18.881715774536133
    5. '(j' → logprob: -19.381715774536133
    6. '    ' → logprob: -19.381715774536133
    7. '	j' → logprob: -19.881715774536133
    8. '  ' → logprob: -21.256715774536133
    9. '[j' → logprob: -21.256715774536133
    10. '$j' → logprob: -21.631715774536133

Token 547: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005238856188952923
    2. ' +' → logprob: -5.255239009857178
    3. '1' → logprob: -12.50523853302002
    4. '+j' → logprob: -15.00523853302002
    5. '+
' → logprob: -15.25523853302002
    6. ',' → logprob: -15.50523853302002
    7. '   ' → logprob: -15.50523853302002
    8. ' ' → logprob: -16.630239486694336
    9. '[' → logprob: -16.630239486694336
    10. '＋' → logprob: -17.505239486694336

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.000009536743164
    3. '+' → logprob: -12.625009536743164
    4. '   ' → logprob: -15.625009536743164
    5. '```' → logprob: -18.000009536743164
    6. '  ' → logprob: -18.750009536743164
    7. '           ' → logprob: -19.000009536743164
    8. '    ' → logprob: -19.125009536743164
    9. ' +' → logprob: -19.250009536743164
    10. '{' → logprob: -19.250009536743164

Token 549: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011016466654837132
    2. '])
' → logprob: -4.886016368865967
    3. ' ])' → logprob: -6.386016368865967
    4. '           ' → logprob: -6.761016368865967
    5. '               ' → logprob: -8.261016845703125
    6. '       ' → logprob: -9.761016845703125
    7. ')' → logprob: -9.761016845703125
    8. '   ' → logprob: -10.386016845703125
    9. ',' → logprob: -10.511016845703125
    10. ']' → logprob: -10.636016845703125

Token 550: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01076517254114151
    2. ' a' → logprob: -5.385765075683594
    3. '           ' → logprob: -6.510765075683594
    4. '               ' → logprob: -6.510765075683594
    5. '            
' → logprob: -6.760765075683594
    6. '                
' → logprob: -7.135765075683594
    7. ' 
' → logprob: -7.760765075683594
    8. '             
' → logprob: -8.635765075683594
    9. '            ' → logprob: -9.385765075683594
    10. '                   ' → logprob: -9.510765075683594

Token 551: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007869228720664978
    2. ' a' → logprob: -5.132869243621826
    3. '               ' → logprob: -7.007869243621826
    4. '                   ' → logprob: -7.132869243621826
    5. '                ' → logprob: -9.132868766784668
    6. ' ' → logprob: -10.632868766784668
    7. '   ' → logprob: -10.757868766784668
    8. '           ' → logprob: -10.882868766784668
    9. ' ' → logprob: -11.132868766784668
    10. '	a' → logprob: -11.382868766784668

Token 552: ' In' (ID: 730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.277553620748222e-05
    2. ' a' → logprob: -10.375062942504883
    3. '               ' → logprob: -10.750062942504883
    4. '                   ' → logprob: -11.750062942504883
    5. '           ' → logprob: -13.375062942504883
    6. '   ' → logprob: -14.250062942504883
    7. '                       ' → logprob: -18.250062942504883
    8. ' ' → logprob: -18.500062942504883
    9. '                ' → logprob: -18.750062942504883
    10. '       ' → logprob: -18.750062942504883

Token 553: 'cr' (ID: 798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008544483222067356
    2. 'crement' → logprob: -5.008544445037842
    3. ' a' → logprob: -7.008544445037842
    4. 'cr' → logprob: -7.633544445037842
    5. 'cre' → logprob: -8.758544921875
    6. '   ' → logprob: -9.883544921875
    7. '[a' → logprob: -10.008544921875
    8. 'c' → logprob: -10.133544921875
    9. '[' → logprob: -10.633544921875
    10. ' decrement' → logprob: -10.883544921875

Token 554: 'ément' (ID: 17645)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005454904865473509
    2. '                   ' → logprob: -5.505455017089844
    3. '               ' → logprob: -7.255455017089844
    4. ' a' → logprob: -8.255455017089844
    5. '                       ' → logprob: -8.505455017089844
    6. '                ' → logprob: -9.755455017089844
    7. '   ' → logprob: -9.880455017089844
    8. '           ' → logprob: -10.505455017089844
    9. 'é' → logprob: -11.005455017089844
    10. 'ément' → logprob: -11.630455017089844

Token 555: 'er' (ID: 259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3997277617454529
    2. 'er' → logprob: -1.3997278213500977
    3. ' a' → logprob: -2.7747278213500977
    4. '                   ' → logprob: -4.524727821350098
    5. '               ' → logprob: -4.774727821350098
    6. '           ' → logprob: -7.524727821350098
    7. '   ' → logprob: -8.774727821350098
    8. '                ' → logprob: -8.899727821350098
    9. '(a' → logprob: -9.524727821350098
    10. '                       ' → logprob: -10.024727821350098

Token 556: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011796315666288137
    2. ' a' → logprob: -6.7511796951293945
    3. '   ' → logprob: -12.251179695129395
    4. '                   ' → logprob: -12.751179695129395
    5. '               ' → logprob: -13.751179695129395
    6. '           ' → logprob: -14.501179695129395
    7. '	a' → logprob: -16.001178741455078
    8. '1' → logprob: -16.876178741455078
    9. '                       ' → logprob: -17.376178741455078
    10. '       ' → logprob: -18.251178741455078

Token 557: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00026765360962599516
    2. ' a' → logprob: -8.37526798248291
    3. 'j' → logprob: -11.12526798248291
    4. 'value' → logprob: -11.37526798248291
    5. 'i' → logprob: -12.25026798248291
    6. ' value' → logprob: -12.87526798248291
    7. '   ' → logprob: -13.87526798248291
    8. '[j' → logprob: -14.87526798248291
    9. ' j' → logprob: -14.87526798248291
    10. '1' → logprob: -15.12526798248291

Token 558: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02013702318072319
    2. '[i' → logprob: -4.020136833190918
    3. ' a' → logprob: -6.520136833190918
    4. '   ' → logprob: -9.020136833190918
    5. 'i' → logprob: -9.145136833190918
    6. '[a' → logprob: -9.395136833190918
    7. '               ' → logprob: -10.645136833190918
    8. ' ' → logprob: -10.645136833190918
    9. '[' → logprob: -10.770136833190918
    10. '           ' → logprob: -10.895136833190918

Token 559: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.468279752880335e-05
    2. ' a' → logprob: -10.250064849853516
    3. 'i' → logprob: -10.500064849853516
    4. '[i' → logprob: -14.375064849853516
    5. '   ' → logprob: -15.000064849853516
    6. ')' → logprob: -16.125064849853516
    7. '```' → logprob: -16.250064849853516
    8. ''a' → logprob: -16.500064849853516
    9. '#a' → logprob: -16.875064849853516
    10. '[' → logprob: -16.875064849853516

Token 560: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00272594066336751
    2. 'i' → logprob: -6.252726078033447
    3. ' a' → logprob: -8.002725601196289
    4. '[i' → logprob: -8.252725601196289
    5. 'case' → logprob: -9.502725601196289
    6. 'j' → logprob: -10.627725601196289
    7. ' case' → logprob: -11.127725601196289
    8. 'cell' → logprob: -11.502725601196289
    9. ' i' → logprob: -11.502725601196289
    10. '1' → logprob: -11.627725601196289

Token 561: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4758100211620331
    2. 'a' → logprob: -0.9758100509643555
    3. 'i' → logprob: -6.9758100509643555
    4. ' a' → logprob: -7.6008100509643555
    5. '   ' → logprob: -8.600810050964355
    6. ' [' → logprob: -10.350810050964355
    7. '[a' → logprob: -10.600810050964355
    8. '[' → logprob: -10.975810050964355
    9. ' i' → logprob: -11.100810050964355
    10. '           ' → logprob: -11.225810050964355

Token 562: ' droite' (ID: 61428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.059432532638311386
    2. '[i' → logprob: -2.9344325065612793
    3. 'a' → logprob: -5.434432506561279
    4. ' i' → logprob: -9.059432983398438
    5. '(i' → logprob: -11.059432983398438
    6. '```' → logprob: -11.059432983398438
    7. '   ' → logprob: -11.809432983398438
    8. ' [' → logprob: -12.059432983398438
    9. '	i' → logprob: -12.934432983398438
    10. '
' → logprob: -13.309432983398438

Token 563: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004951239563524723
    2. '[j' → logprob: -5.754951477050781
    3. '[' → logprob: -6.879951477050781
    4. 'a' → logprob: -7.379951477050781
    5. '[a' → logprob: -10.254951477050781
    6. '][' → logprob: -10.754951477050781
    7. ' [' → logprob: -10.879951477050781
    8. '```' → logprob: -11.379951477050781
    9. ' a' → logprob: -12.004951477050781
    10. '   ' → logprob: -12.004951477050781

Token 564: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001317871210630983
    2. ' i' → logprob: -9.125131607055664
    3. '[i' → logprob: -11.125131607055664
    4. 'a' → logprob: -12.250131607055664
    5. '   ' → logprob: -12.875131607055664
    6. '```' → logprob: -15.375131607055664
    7. '	i' → logprob: -15.750131607055664
    8. ')' → logprob: -16.250131607055664
    9. ')i' → logprob: -16.500131607055664
    10. '][' → logprob: -17.000131607055664

Token 565: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015359314857050776
    2. '][' → logprob: -6.501535892486572
    3. ' [' → logprob: -11.12653636932373
    4. 'i' → logprob: -11.75153636932373
    5. '[' → logprob: -12.37653636932373
    6. '[I' → logprob: -13.37653636932373
    7. ')[' → logprob: -13.62653636932373
    8. '   ' → logprob: -14.00153636932373
    9. ' ][' → logprob: -14.25153636932373
    10. '[a' → logprob: -14.37653636932373

Token 566: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00047416388406418264
    2. '[j' → logprob: -7.750473976135254
    3. '[i' → logprob: -10.625473976135254
    4. ']' → logprob: -11.500473976135254
    5. ' ][' → logprob: -11.875473976135254
    6. '   ' → logprob: -13.750473976135254
    7. '[' → logprob: -14.750473976135254
    8. ',j' → logprob: -15.250473976135254
    9. 'j' → logprob: -16.62547492980957
    10. '       ' → logprob: -16.87547492980957

Token 567: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.77627644513268e-06
    2. ' j' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '[j' → logprob: -15.125008583068848
    5. '
' → logprob: -18.500009536743164
    6. '	j' → logprob: -18.875009536743164
    7. '(j' → logprob: -19.000009536743164
    8. ' ' → logprob: -19.375009536743164
    9. ']' → logprob: -19.625009536743164
    10. '       ' → logprob: -19.750009536743164

Token 568: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020183324813842773
    2. ']' → logprob: -6.377018451690674
    3. '+' → logprob: -8.877017974853516
    4. '[j' → logprob: -9.127017974853516
    5. ' ][' → logprob: -10.502017974853516
    6. '])' → logprob: -11.002017974853516
    7. ']+' → logprob: -11.252017974853516
    8. '   ' → logprob: -12.502017974853516
    9. ']+=' → logprob: -12.877017974853516
    10. '[' → logprob: -14.127017974853516

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -10.375059127807617
    3. ']' → logprob: -11.000059127807617
    4. '+' → logprob: -11.750059127807617
    5. '   ' → logprob: -13.125059127807617
    6. ']+' → logprob: -14.750059127807617
    7. '])' → logprob: -15.375059127807617
    8. '```' → logprob: -16.125059127807617
    9. '  ' → logprob: -16.750059127807617
    10. '    ' → logprob: -17.125059127807617

Token 570: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002656512660905719
    2. ']+=' → logprob: -6.37765645980835
    3. '])' → logprob: -7.00265645980835
    4. ']+' → logprob: -10.502656936645508
    5. ')' → logprob: -11.377656936645508
    6. ' ]' → logprob: -13.002656936645508
    7. '   ' → logprob: -13.502656936645508
    8. '']' → logprob: -14.752656936645508
    9. '           ' → logprob: -15.377656936645508
    10. '+=' → logprob: -15.502656936645508

Token 571: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07048339396715164
    2. '+=' → logprob: -2.695483446121216
    3. ']+=' → logprob: -8.195483207702637
    4. '[' → logprob: -9.320483207702637
    5. '               ' → logprob: -9.695483207702637
    6. '+' → logprob: -10.445483207702637
    7. '                ' → logprob: -11.195483207702637
    8. ' ' → logprob: -11.695483207702637
    9. '           ' → logprob: -11.820483207702637
    10. '[i' → logprob: -12.070483207702637

Token 572: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -17.12504005432129
    4. '   ' → logprob: -17.37504005432129
    5. 'a' → logprob: -19.00004005432129
    6. '+' → logprob: -19.62504005432129
    7. '`' → logprob: -19.75004005432129
    8. '    ' → logprob: -20.12504005432129
    9. ' ' → logprob: -20.25004005432129
    10. '  ' → logprob: -20.37504005432129

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'a' → logprob: -19.625001907348633
    4. 'un' → logprob: -20.125001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '+' → logprob: -21.750001907348633
    7. '１' → logprob: -21.750001907348633
    8. '```' → logprob: -22.000001907348633
    9. '
' → logprob: -23.000001907348633
    10. '  ' → logprob: -23.125001907348633

Token 574: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046440932899713516
    2. '           ' → logprob: -4.046441078186035
    3. '<|end|>' → logprob: -5.046441078186035
    4. ' 
' → logprob: -5.296441078186035
    5. ' a' → logprob: -5.421441078186035
    6. '                
' → logprob: -5.921441078186035
    7. '
' → logprob: -6.421441078186035
    8. '  
' → logprob: -6.546441078186035
    9. 'a' → logprob: -6.546441078186035
    10. '            
' → logprob: -7.171441078186035

Token 575: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008981361985206604
    2. ' a' → logprob: -5.508981227874756
    3. 'a' → logprob: -5.883981227874756
    4. '           ' → logprob: -7.633981227874756
    5. '                
' → logprob: -7.633981227874756
    6. '                ' → logprob: -7.883981227874756
    7. '<|end|>' → logprob: -8.758981704711914
    8. '                   ' → logprob: -8.758981704711914
    9. '+' → logprob: -9.258981704711914
    10. '              ' → logprob: -9.383981704711914

Token 576: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22763819992542267
    2. ' a' → logprob: -1.8526382446289062
    3. '               ' → logprob: -3.1026382446289062
    4. '                   ' → logprob: -6.977638244628906
    5. '           ' → logprob: -8.227638244628906
    6. '```' → logprob: -8.477638244628906
    7. '1' → logprob: -9.102638244628906
    8. '                ' → logprob: -9.227638244628906
    9. ' ' → logprob: -10.602638244628906
    10. '   ' → logprob: -10.727638244628906

Token 577: ' Cela' (ID: 44403)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44962599873542786
    2. ' a' → logprob: -1.0746259689331055
    3. '               ' → logprob: -3.9496259689331055
    4. '                ' → logprob: -7.3246259689331055
    5. ' 
' → logprob: -8.199625968933105
    6. '                
' → logprob: -8.324625968933105
    7. '                   ' → logprob: -9.449625968933105
    8. ')' → logprob: -10.199625968933105
    9. '           ' → logprob: -10.324625968933105
    10. ' ' → logprob: -10.449625968933105

Token 578: ' sim' (ID: 1845)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.37509632110595703
    2. 'a' → logprob: -1.375096321105957
    3. ' +=' → logprob: -3.625096321105957
    4. 'increment' → logprob: -4.750096321105957
    5. ' incre' → logprob: -5.000096321105957
    6. ' augmente' → logprob: -5.625096321105957
    7. '
' → logprob: -6.125096321105957
    8. ' increment' → logprob: -6.250096321105957
    9. 'increments' → logprob: -6.625096321105957
    10. '+=' → logprob: -6.625096321105957

Token 579: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.01866980642080307
    2. 'pl' → logprob: -4.393669605255127
    3. 'ple' → logprob: -5.643669605255127
    4. 'p' → logprob: -6.518669605255127
    5. 'plement' → logprob: -8.643670082092285
    6. '#' → logprob: -9.143670082092285
    7. 'inue' → logprob: -9.268670082092285
    8. 'ulte' → logprob: -9.393670082092285
    9. 'ulé' → logprob: -9.393670082092285
    10. 'm' → logprob: -9.643670082092285

Token 580: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4493110477924347
    2. 'a' → logprob: -1.3243110179901123
    3. ' l' → logprob: -3.0743110179901123
    4. ' un' → logprob: -3.5743110179901123
    5. 'l' → logprob: -4.324311256408691
    6. ' le' → logprob: -5.574311256408691
    7. ' une' → logprob: -6.699311256408691
    8. 'un' → logprob: -7.449311256408691
    9. 'une' → logprob: -7.574311256408691
    10. ' la' → logprob: -7.699311256408691

Token 581: ' transfert' (ID: 127549)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07463402301073074
    2. 'dé' → logprob: -3.449634075164795
    3. 'trans' → logprob: -3.574634075164795
    4. ' a' → logprob: -5.324634075164795
    5. ' transfert' → logprob: -6.199634075164795
    6. ' déplacement' → logprob: -6.324634075164795
    7. 'pass' → logprob: -6.824634075164795
    8. 'transfer' → logprob: -7.074634075164795
    9. 'd' → logprob: -7.824634075164795
    10. 'transport' → logprob: -8.574633598327637

Token 582: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17950814962387085
    2. ' a' → logprob: -2.3045082092285156
    3. ' d' → logprob: -2.9295082092285156
    4. ' of' → logprob: -5.429508209228516
    5. 'a' → logprob: -6.554508209228516
    6. 'de' → logprob: -6.679508209228516
    7. 'd' → logprob: -6.804508209228516
    8. ' ' → logprob: -7.179508209228516
    9. '               ' → logprob: -7.679508209228516
    10. '   ' → logprob: -7.804508209228516

Token 583: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.651583731174469
    2. '1' → logprob: -1.0265836715698242
    3. ' a' → logprob: -2.401583671569824
    4. 'a' → logprob: -3.526583671569824
    5. ' pieces' → logprob: -8.526583671569824
    6. 'pieces' → logprob: -9.526583671569824
    7. ' la' → logprob: -10.151583671569824
    8. ' one' → logprob: -10.651583671569824
    9. '   ' → logprob: -11.026583671569824
    10. ' une' → logprob: -11.026583671569824

Token 584: ''objet' (ID: 124566)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05678661912679672
    2. ' a' → logprob: -2.93178653717041
    3. '1' → logprob: -6.55678653717041
    4. ''a' → logprob: -8.93178653717041
    5. ' ' → logprob: -9.30678653717041
    6. ' piece' → logprob: -10.05678653717041
    7. 'piece' → logprob: -10.30678653717041
    8. '   ' → logprob: -10.68178653717041
    9. ' '' → logprob: -10.68178653717041
    10. 'i' → logprob: -11.18178653717041

Token 585: ' impair' (ID: 64113)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7961455583572388
    2. '               ' → logprob: -1.1711455583572388
    3. 'a' → logprob: -2.046145439147949
    4. ' de' → logprob: -3.796145439147949
    5. ' from' → logprob: -3.796145439147949
    6. 'from' → logprob: -3.796145439147949
    7. ' à' → logprob: -4.296145439147949
    8. '                   ' → logprob: -4.671145439147949
    9. '           ' → logprob: -5.671145439147949
    10. ')' → logprob: -5.671145439147949

Token 586: ' vers' (ID: 3640)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10364450514316559
    2. 'a' → logprob: -3.228644609451294
    3. ' a' → logprob: -3.728644609451294
    4. '           ' → logprob: -3.853644609451294
    5. '                   ' → logprob: -5.478644371032715
    6. '                
' → logprob: -5.853644371032715
    7. '   ' → logprob: -6.228644371032715
    8. '
' → logprob: -6.353644371032715
    9. '                ' → logprob: -7.603644371032715
    10. '            
' → logprob: -8.103644371032715

Token 587: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.321762353181839
    2. ' a' → logprob: -1.3217623233795166
    3. ' la' → logprob: -5.696762561798096
    4. ' the' → logprob: -6.696762561798096
    5. '1' → logprob: -6.821762561798096
    6. 'l' → logprob: -7.696762561798096
    7. ' ' → logprob: -7.696762561798096
    8. ' l' → logprob: -7.821762561798096
    9. 'la' → logprob: -8.071762084960938
    10. ')' → logprob: -8.321762084960938

Token 588: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.6254715919494629
    2. 'case' → logprob: -1.375471591949463
    3. 'a' → logprob: -3.000471591949463
    4. ' j' → logprob: -3.125471591949463
    5. ' droite' → logprob: -3.125471591949463
    6. 'j' → logprob: -3.375471591949463
    7. ' a' → logprob: -4.875471591949463
    8. 'col' → logprob: -4.875471591949463
    9. 'dro' → logprob: -5.500471591949463
    10. 'c' → logprob: -5.625471591949463

Token 589: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007574541959911585
    2. 'a' → logprob: -7.875757217407227
    3. '[j' → logprob: -9.250757217407227
    4. '   ' → logprob: -9.250757217407227
    5. ' [' → logprob: -9.625757217407227
    6. '[' → logprob: -9.875757217407227
    7. '[a' → logprob: -10.375757217407227
    8. ' à' → logprob: -11.500757217407227
    9. 'à' → logprob: -11.875757217407227
    10. 'i' → logprob: -12.125757217407227

Token 590: ' droite' (ID: 61428)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6664774417877197
    2. 'a' → logprob: -1.7914774417877197
    3. ' droite' → logprob: -2.4164774417877197
    4. 'i' → logprob: -2.6664774417877197
    5. ' la' → logprob: -3.0414774417877197
    6. 'j' → logprob: -3.0414774417877197
    7. '[i' → logprob: -3.9164774417877197
    8. '[j' → logprob: -4.291477203369141
    9. ' j' → logprob: -4.666477203369141
    10. 'l' → logprob: -5.041477203369141

Token 591: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026039114221930504
    2. 'a' → logprob: -4.276039123535156
    3. '                
' → logprob: -5.276039123535156
    4. ' a' → logprob: -5.651039123535156
    5. ' 
' → logprob: -6.526039123535156
    6. '           ' → logprob: -7.776039123535156
    7. '
' → logprob: -7.776039123535156
    8. '                   ' → logprob: -8.401039123535156
    9. '                ' → logprob: -8.901039123535156
    10. '  
' → logprob: -9.401039123535156

Token 592: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20468975603580475
    2. 'a' → logprob: -2.0796897411346436
    3. ' a' → logprob: -2.8296897411346436
    4. '                
' → logprob: -7.454689979553223
    5. '                   ' → logprob: -8.954689979553223
    6. '           ' → logprob: -8.954689979553223
    7. '                ' → logprob: -9.329689979553223
    8. ' 
' → logprob: -9.954689979553223
    9. '   ' → logprob: -10.329689979553223
    10. '              ' → logprob: -10.954689979553223

Token 593: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.045521289110183716
    2. ' a' → logprob: -3.6705212593078613
    3. '               ' → logprob: -4.045521259307861
    4. '                   ' → logprob: -7.420521259307861
    5. '                ' → logprob: -7.795521259307861
    6. '   ' → logprob: -8.92052173614502
    7. '	a' → logprob: -9.04552173614502
    8. '           ' → logprob: -9.17052173614502
    9. '                
' → logprob: -10.04552173614502
    10. ')' → logprob: -10.67052173614502

Token 594: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. ' [' → logprob: -14.87500286102295
    4. '[I' → logprob: -15.12500286102295
    5. '[a' → logprob: -16.875001907348633
    6. '```' → logprob: -17.000001907348633
    7. '[j' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.875001907348633
    9. '][' → logprob: -18.125001907348633
    10. 'i' → logprob: -18.250001907348633

Token 595: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005937820533290505
    2. '[j' → logprob: -7.875593662261963
    3. '[i' → logprob: -8.625594139099121
    4. ']' → logprob: -11.125594139099121
    5. ' ][' → logprob: -12.000594139099121
    6. '[' → logprob: -12.250594139099121
    7. '   ' → logprob: -13.125594139099121
    8. ',j' → logprob: -13.500594139099121
    9. '}[' → logprob: -13.625594139099121
    10. '"][' → logprob: -14.500594139099121

Token 596: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3782830137643032e-05
    2. '[j' → logprob: -11.75001335144043
    3. ' j' → logprob: -12.25001335144043
    4. '   ' → logprob: -14.12501335144043
    5. ' ' → logprob: -16.62501335144043
    6. '	j' → logprob: -16.87501335144043
    7. ',j' → logprob: -17.00001335144043
    8. '][' → logprob: -17.75001335144043
    9. '$j' → logprob: -17.75001335144043
    10. '(j' → logprob: -17.87501335144043

Token 597: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.043928150087594986
    2. '[j' → logprob: -3.1689281463623047
    3. ']' → logprob: -7.293928146362305
    4. 'j' → logprob: -9.043928146362305
    5. ' ][' → logprob: -10.418928146362305
    6. '+' → logprob: -10.918928146362305
    7. '[' → logprob: -11.043928146362305
    8. ''][' → logprob: -11.168928146362305
    9. ',j' → logprob: -11.293928146362305
    10. '   ' → logprob: -11.668928146362305

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.049755782238208e-05
    2. ' ' → logprob: -10.87505054473877
    3. '+' → logprob: -11.00005054473877
    4. '           ' → logprob: -12.37505054473877
    5. '                   ' → logprob: -12.50005054473877
    6. '               ' → logprob: -12.75005054473877
    7. '   ' → logprob: -12.87505054473877
    8. '       ' → logprob: -15.75005054473877
    9. '  ' → logprob: -16.000049591064453
    10. '```' → logprob: -16.000049591064453

Token 599: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014218159019947052
    2. ']+=' → logprob: -4.264218330383301
    3. ' ]' → logprob: -10.3892183303833
    4. ']+' → logprob: -11.3892183303833
    5. '+=' → logprob: -12.0142183303833
    6. ')' → logprob: -12.6392183303833
    7. ' +=' → logprob: -13.3892183303833
    8. '+]' → logprob: -14.5142183303833
    9. ']=' → logprob: -15.0142183303833
    10. '+' → logprob: -15.2642183303833

Token 600: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006162816658616066
    2. ' +=' → logprob: -5.131162643432617
    3. ']+=' → logprob: -8.881162643432617
    4. '+' → logprob: -9.756162643432617
    5. '=' → logprob: -10.256162643432617
    6. '+='' → logprob: -13.756162643432617
    7. ')' → logprob: -14.881162643432617
    8. '+="' → logprob: -15.756162643432617
    9. '+=(' → logprob: -15.881162643432617
    10. ')+' → logprob: -16.381162643432617

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.125059127807617
    4. '<|end|>' → logprob: -21.125059127807617
    5. '  ' → logprob: -21.250059127807617
    6. '```' → logprob: -21.625059127807617
    7. '    ' → logprob: -22.750059127807617
    8. '
' → logprob: -23.000059127807617
    9. 'a' → logprob: -23.250059127807617
    10. '       ' → logprob: -23.375059127807617

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. 'a' → logprob: -20.125
    4. '   ' → logprob: -23.625
    5. '１' → logprob: -24.125
    6. '
' → logprob: -24.5
    7. '```' → logprob: -24.875
    8. '۱' → logprob: -25.5
    9. '  ' → logprob: -26.125
    10. '१' → logprob: -26.125

Token 603: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011917540803551674
    2. '           ' → logprob: -4.886917591094971
    3. '                
' → logprob: -6.011917591094971
    4. 'a' → logprob: -7.761917591094971
    5. '<|end|>' → logprob: -7.886917591094971
    6. '            
' → logprob: -8.136917114257812
    7. '  
' → logprob: -8.636917114257812
    8. '              ' → logprob: -9.261917114257812
    9. '                   ' → logprob: -9.386917114257812
    10. ' a' → logprob: -9.511917114257812

Token 604: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06402720510959625
    2. 'a' → logprob: -3.1890273094177246
    3. '           ' → logprob: -4.689027309417725
    4. ' a' → logprob: -4.689027309417725
    5. '                
' → logprob: -6.689027309417725
    6. '                ' → logprob: -7.939027309417725
    7. '                   ' → logprob: -8.439026832580566
    8. '              ' → logprob: -9.064026832580566
    9. '            
' → logprob: -9.564026832580566
    10. '<|end|>' → logprob: -9.814026832580566

Token 605: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14322559535503387
    2. '           ' → logprob: -2.14322566986084
    3. 'a' → logprob: -4.39322566986084
    4. ' a' → logprob: -7.14322566986084
    5. '            ' → logprob: -7.26822566986084
    6. '                
' → logprob: -7.39322566986084
    7. 'else' → logprob: -7.64322566986084
    8. '            
' → logprob: -8.26822566986084
    9. ' else' → logprob: -8.39322566986084
    10. '       ' → logprob: -8.89322566986084

Token 606: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.028442073613405228
    2. 'elif' → logprob: -3.778442144393921
    3. ' else' → logprob: -5.278441905975342
    4. ' elif' → logprob: -9.6534423828125
    5. '           ' → logprob: -11.6534423828125
    6. '       ' → logprob: -11.7784423828125
    7. 'el' → logprob: -14.0284423828125
    8. '   ' → logprob: -14.1534423828125
    9. '	else' → logprob: -15.2784423828125
    10. '               ' → logprob: -15.9034423828125

Token 607: ' nous' (ID: 6176)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.075034737586975
    2. 'j' → logprob: -1.450034737586975
    3. ' j' → logprob: -1.700034737586975
    4. 'i' → logprob: -1.700034737586975
    5. ' not' → logprob: -3.2000346183776855
    6. 'else' → logprob: -4.7000346183776855
    7. 'not' → logprob: -4.8250346183776855
    8. 'elif' → logprob: -8.200035095214844
    9. ' else' → logprob: -8.325035095214844
    10. '   ' → logprob: -9.200035095214844

Token 608: ' sommes' (ID: 32024)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8948791027069092
    2. ' else' → logprob: -1.1448791027069092
    3. ' <' → logprob: -1.5198791027069092
    4. ' j' → logprob: -4.394879341125488
    5. ' continue' → logprob: -4.394879341125488
    6. '<' → logprob: -5.019879341125488
    7. 'elif' → logprob: -5.394879341125488
    8. ' n' → logprob: -5.394879341125488
    9. ' elif' → logprob: -5.644879341125488
    10. ' ==' → logprob: -6.269879341125488

Token 609: ' dans' (ID: 2671)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.836269199848175
    2. 'else' → logprob: -0.961269199848175
    3. ' else' → logprob: -1.8362691402435303
    4. 'not' → logprob: -4.211269378662109
    5. ' ailleurs' → logprob: -5.961269378662109
    6. ' in' → logprob: -6.461269378662109
    7. ' dans' → logprob: -6.711269378662109
    8. 'dans' → logprob: -6.961269378662109
    9. 'elif' → logprob: -7.086269378662109
    10. ' elif' → logprob: -7.336269378662109

Token 610: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1880042552947998
    2. ' j' → logprob: -1.8130042552947998
    3. ' la' → logprob: -2.1880042552948
    4. 'l' → logprob: -2.4380042552948
    5. ' the' → logprob: -2.5630042552948
    6. 'else' → logprob: -2.5630042552948
    7. ' i' → logprob: -3.4380042552948
    8. 'i' → logprob: -3.6880042552948
    9. 'la' → logprob: -3.8130042552948
    10. ' l' → logprob: -3.9380042552948

Token 611: ' dernière' (ID: 39497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.625015377998352
    2. 'last' → logprob: -1.000015377998352
    3. 'dern' → logprob: -3.0000152587890625
    4. ' last' → logprob: -4.0000152587890625
    5. ' else' → logprob: -4.3750152587890625
    6. 'der' → logprob: -4.6250152587890625
    7. 'elif' → logprob: -5.7500152587890625
    8. ' dernière' → logprob: -7.1250152587890625
    9. 'range' → logprob: -7.5000152587890625
    10. ' dernier' → logprob: -7.7500152587890625

Token 612: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.31333044171333313
    2. 'ligne' → logprob: -1.9383304119110107
    3. ' colonne' → logprob: -2.1883304119110107
    4. ' ligne' → logprob: -4.43833065032959
    5. ' col' → logprob: -8.43833065032959
    6. 'else' → logprob: -8.68833065032959
    7. 'colon' → logprob: -9.18833065032959
    8. '   ' → logprob: -9.31333065032959
    9. ' ' → logprob: -9.43833065032959
    10. 'elif' → logprob: -9.43833065032959

Token 613: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029220271855592728
    2. 'and' → logprob: -3.6542203426361084
    3. ' et' → logprob: -6.904220104217529
    4. ':' → logprob: -7.029220104217529
    5. ':
' → logprob: -8.654220581054688
    6. ' else' → logprob: -8.904220581054688
    7. 'elif' → logprob: -9.029220581054688
    8. 'else' → logprob: -9.279220581054688
    9. ' elif' → logprob: -9.404220581054688
    10. 'et' → logprob: -9.404220581054688

Token 614: ' que' (ID: 661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24183526635169983
    2. ' i' → logprob: -1.7418352365493774
    3. ' not' → logprob: -3.866835355758667
    4. 'not' → logprob: -4.241835117340088
    5. 'j' → logprob: -5.741835117340088
    6. '   ' → logprob: -7.866835117340088
    7. ' j' → logprob: -8.491835594177246
    8. '(i' → logprob: -8.866835594177246
    9. ' pas' → logprob: -8.991835594177246
    10. 'pas' → logprob: -9.116835594177246

Token 615: ' nous' (ID: 6176)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011050417087972164
    2. ' i' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.5110502243042
    4. 'j' → logprob: -14.0110502243042
    5. 'not' → logprob: -15.7610502243042
    6. ' not' → logprob: -16.136051177978516
    7. '	i' → logprob: -16.386051177978516
    8. ' ' → logprob: -17.011051177978516
    9. '(i' → logprob: -17.136051177978516
    10. '  ' → logprob: -18.011051177978516

Token 616: ' ne' (ID: 453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28060486912727356
    2. ' i' → logprob: -2.655604839324951
    3. ' <' → logprob: -3.030604839324951
    4. 'j' → logprob: -3.030604839324951
    5. 'n' → logprob: -3.405604839324951
    6. '<' → logprob: -4.155604839324951
    7. ' j' → logprob: -5.030604839324951
    8. '           ' → logprob: -5.280604839324951
    9. '<i' → logprob: -5.780604839324951
    10. '(i' → logprob: -6.405604839324951

Token 617: ' sommes' (ID: 32024)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9381638169288635
    2. 'i' → logprob: -1.0631637573242188
    3. ' are' → logprob: -2.5631637573242188
    4. 'n' → logprob: -2.9381637573242188
    5. 'j' → logprob: -3.5631637573242188
    6. ' pas' → logprob: -3.9381637573242188
    7. ' i' → logprob: -4.063163757324219
    8. 'êtes' → logprob: -4.813163757324219
    9. ' have' → logprob: -5.063163757324219
    10. ' sommes' → logprob: -5.313163757324219

Token 618: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.030437931418418884
    2. ' pas' → logprob: -3.53043794631958
    3. 'not' → logprob: -8.030437469482422
    4. ' not' → logprob: -8.905437469482422
    5. 'dans' → logprob: -9.405437469482422
    6. '           ' → logprob: -9.655437469482422
    7. '_pas' → logprob: -10.655437469482422
    8. 'Pas' → logprob: -11.530437469482422
    9. 'p' → logprob: -12.030437469482422
    10. 'plus' → logprob: -12.405437469482422

Token 619: ' à' (ID: 1221)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.1502244770526886
    2. 'pas' → logprob: -2.775224447250366
    3. 'à' → logprob: -3.275224447250366
    4. 'i' → logprob: -4.525224685668945
    5. '   ' → logprob: -5.150224685668945
    6. 'sur' → logprob: -5.275224685668945
    7. 'in' → logprob: -5.650224685668945
    8. ' à' → logprob: -5.900224685668945
    9. 'at' → logprob: -6.275224685668945
    10. ' dans' → logprob: -6.400224685668945

Token 620: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.011343590915203094
    2. ' la' → logprob: -4.636343479156494
    3. 'l' → logprob: -6.761343479156494
    4. 'H' → logprob: -8.886343955993652
    5. 'the' → logprob: -8.886343955993652
    6. 'last' → logprob: -10.011343955993652
    7. 'ligne' → logprob: -11.011343955993652
    8. 'range' → logprob: -11.261343955993652
    9. '<|end|>' → logprob: -11.261343955993652
    10. '#' → logprob: -11.511343955993652

Token 621: ' dernière' (ID: 39497)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6241439580917358
    2. 'dern' → logprob: -1.2491439580917358
    3. 'der' → logprob: -1.7491439580917358
    4. 'Dern' → logprob: -6.124144077301025
    5. ' dernière' → logprob: -6.624144077301025
    6. ' derni' → logprob: -10.624143600463867
    7. ' last' → logprob: -10.874143600463867
    8. ' dernier' → logprob: -12.249143600463867
    9. '_der' → logprob: -12.374143600463867
    10. 'ligne' → logprob: -12.624143600463867

Token 622: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.01853407919406891
    2. ' ligne' → logprob: -4.018534183502197
    3. 'lig' → logprob: -8.518533706665039
    4. 'line' → logprob: -9.643533706665039
    5. 'l' → logprob: -9.768533706665039
    6. 'row' → logprob: -10.893533706665039
    7. 'lin' → logprob: -11.268533706665039
    8. '#' → logprob: -11.893533706665039
    9. '   ' → logprob: -12.143533706665039
    10. 'i' → logprob: -12.393533706665039

Token 623: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.035254716873169
    2. '           ' → logprob: -1.160254716873169
    3. ':' → logprob: -1.660254716873169
    4. ' and' → logprob: -2.535254716873169
    5. '               ' → logprob: -3.535254716873169
    6. ' if' → logprob: -4.28525447845459
    7. '<|end|>' → logprob: -5.91025447845459
    8. ':
' → logprob: -6.03525447845459
    9. ' ,' → logprob: -6.03525447845459
    10. ' :' → logprob: -6.16025447845459

Token 624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06590262055397034
    2. '               ' → logprob: -3.6909027099609375
    3. ' and' → logprob: -4.0659027099609375
    4. ':' → logprob: -4.4409027099609375
    5. '       ' → logprob: -6.0659027099609375
    6. ':
' → logprob: -6.1909027099609375
    7. ' if' → logprob: -6.8159027099609375
    8. '   ' → logprob: -6.9409027099609375
    9. ' :' → logprob: -7.0659027099609375
    10. ' elif' → logprob: -7.1909027099609375

Token 625: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1367255598306656
    2. '           ' → logprob: -2.511725664138794
    3. 'elif' (adapté à ' elif') → logprob: -4.261725425720215
    4. '       ' → logprob: -4.386725425720215
    5. ' elif' → logprob: -5.011725425720215
    6. '```' → logprob: -5.636725425720215
    7. '   ' → logprob: -5.886725425720215
    8. 'else' → logprob: -6.011725425720215
    9. ' else' → logprob: -6.386725425720215
    10. ' and' → logprob: -6.636725425720215

Token 626: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4741314947605133
    2. 'i' → logprob: -0.9741314649581909
    3. '   ' → logprob: -10.09913158416748
    4. 'j' → logprob: -11.97413158416748
    5. ' j' → logprob: -13.22413158416748
    6. ' ' → logprob: -13.34913158416748
    7. '	i' → logprob: -13.34913158416748
    8. ' ' → logprob: -14.34913158416748
    9. '  ' → logprob: -14.84913158416748
    10. '(i' → logprob: -14.97413158416748

Token 627: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5759400725364685
    2. ' <' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.700940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '<int' → logprob: -16.200939178466797
    6. '<n' → logprob: -16.700939178466797
    7. '<len' → logprob: -17.325939178466797
    8. '+' → logprob: -17.450939178466797
    9. ' <
' → logprob: -17.450939178466797
    10. '<num' → logprob: -17.825939178466797

Token 628: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00861468818038702
    2. ' H' → logprob: -4.758614540100098
    3. ' ' → logprob: -15.883614540100098
    4. '   ' → logprob: -16.758615493774414
    5. '(H' → logprob: -18.008615493774414
    6. 'W' → logprob: -20.133615493774414
    7. '	H' → logprob: -20.133615493774414
    8. 'I' → logprob: -20.258615493774414
    9. '  ' → logprob: -20.383615493774414
    10. 'K' → logprob: -20.633615493774414

Token 629: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001114106344175525
    2. ' -' → logprob: -9.12511157989502
    3. '+' → logprob: -13.12511157989502
    4. '1' → logprob: -14.75011157989502
    5. '()-' → logprob: -19.000110626220703
    6. '−' → logprob: -19.625110626220703
    7. '-
' → logprob: -19.750110626220703
    8. '   ' → logprob: -19.875110626220703
    9. ' ' → logprob: -20.125110626220703
    10. '–' → logprob: -20.625110626220703

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '-' → logprob: -10.750021934509277
    3. ' ' → logprob: -15.000021934509277
    4. '   ' → logprob: -17.50002098083496
    5. '```' → logprob: -19.50002098083496
    6. '１' → logprob: -20.62502098083496
    7. '>' → logprob: -20.75002098083496
    8. '
' → logprob: -21.00002098083496
    9. '+' → logprob: -21.00002098083496
    10. '2' → logprob: -21.12502098083496

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6335970163345337
    2. ':
' → logprob: -0.7585970163345337
    3. '               ' → logprob: -8.383597373962402
    4. ' :' → logprob: -8.633597373962402
    5. '           ' → logprob: -8.883597373962402
    6. ' and' → logprob: -9.133597373962402
    7. '       ' → logprob: -9.133597373962402
    8. ' :
' → logprob: -9.133597373962402
    9. '   ' → logprob: -9.758597373962402
    10. ':

' → logprob: -10.383597373962402

Token 632: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002819544170051813
    2. '[' → logprob: -9.500282287597656
    3. '       ' → logprob: -9.875282287597656
    4. '           ' → logprob: -10.375282287597656
    5. '```' → logprob: -10.375282287597656
    6. '                
' → logprob: -11.000282287597656
    7. '	           ' → logprob: -11.625282287597656
    8. ',' → logprob: -11.750282287597656
    9. ':' → logprob: -11.875282287597656
    10. '   ' → logprob: -12.000282287597656

Token 633: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0076737068593502045
    2. 'move' → logprob: -5.007673740386963
    3. ' move' → logprob: -7.507673740386963
    4. '           ' → logprob: -8.632673263549805
    5. '#' (adapté à ' #') → logprob: -9.007673263549805
    6. '[' → logprob: -10.632673263549805
    7. '                ' → logprob: -10.882673263549805
    8. '```' → logprob: -11.257673263549805
    9. '   ' → logprob: -11.507673263549805
    10. '       ' → logprob: -11.757673263549805

Token 634: ' Ajouter' (ID: 165754)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.005893126595765352
    2. '               ' → logprob: -5.255893230438232
    3. ' move' → logprob: -7.505893230438232
    4. '           ' → logprob: -9.255892753601074
    5. '#' → logprob: -11.630892753601074
    6. '                   ' → logprob: -13.130892753601074
    7. '	move' → logprob: -13.380892753601074
    8. '   ' → logprob: -14.255892753601074
    9. '              ' → logprob: -15.505892753601074
    10. '                ' → logprob: -15.755892753601074

Token 635: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001617035741219297
    2. '([' → logprob: -8.750162124633789
    3. '(i' → logprob: -13.250162124633789
    4. ' [' → logprob: -13.625162124633789
    5. '[I' → logprob: -15.750162124633789
    6. '[' → logprob: -16.62516212463379
    7. '[a' → logprob: -18.00016212463379
    8. '[
' → logprob: -18.25016212463379
    9. 'move' → logprob: -19.25016212463379
    10. '[j' → logprob: -19.25016212463379

Token 636: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34050270915031433
    2. 'move' → logprob: -1.3405027389526367
    3. '[i' → logprob: -3.8405027389526367
    4. '[m' → logprob: -5.340502738952637
    5. ' move' → logprob: -8.340502738952637
    6. '(move' → logprob: -8.590502738952637
    7. ' [' → logprob: -9.340502738952637
    8. '[a' → logprob: -9.715502738952637
    9. '[j' → logprob: -12.465502738952637
    10. '[l' → logprob: -12.840502738952637

Token 637: ' liste' (ID: 31719)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.014416756108403206
    2. 'list' → logprob: -4.264416694641113
    3. 'liste' → logprob: -9.139416694641113
    4. '[' → logprob: -9.264416694641113
    5. 'append' → logprob: -10.139416694641113
    6. ' move' → logprob: -11.764416694641113
    7. '(move' → logprob: -13.514416694641113
    8. '[i' → logprob: -13.764416694641113
    9. '[m' → logprob: -14.764416694641113
    10. '.append' → logprob: -15.389416694641113

Token 638: ' '' (ID: 461)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00675314012914896
    2. '([' → logprob: -5.006752967834473
    3. '(i' → logprob: -10.631752967834473
    4. 'move' → logprob: -11.381752967834473
    5. ' [' → logprob: -13.506752967834473
    6. '[' → logprob: -14.381752967834473
    7. '[I' → logprob: -16.63175392150879
    8. '   ' → logprob: -16.88175392150879
    9. '[[' → logprob: -17.50675392150879
    10. ' move' → logprob: -17.88175392150879

Token 639: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -4.961759259458631e-06
    2. '[i' → logprob: -12.625004768371582
    3. ' move' → logprob: -13.500004768371582
    4. '(move' → logprob: -15.750004768371582
    5. '[' → logprob: -16.1250057220459
    6. '[m' → logprob: -18.0000057220459
    7. '	move' → logprob: -18.3750057220459
    8. 'm' → logprob: -18.6250057220459
    9. '.move' → logprob: -19.1250057220459
    10. 'mov' → logprob: -19.6250057220459

Token 640: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012750492431223392
    2. '.append' → logprob: -4.512750625610352
    3. '([' → logprob: -6.387750625610352
    4. '[[' → logprob: -12.012750625610352
    5. ' [' → logprob: -12.262750625610352
    6. '(i' → logprob: -12.512750625610352
    7. '=[' → logprob: -13.512750625610352
    8. '   ' → logprob: -13.637750625610352
    9. 'append' → logprob: -14.262750625610352
    10. '[j' → logprob: -14.887750625610352

Token 641: ' un' (ID: 537)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01105206273496151
    2. '([' → logprob: -4.511052131652832
    3. '(i' → logprob: -13.261052131652832
    4. ' [' → logprob: -13.261052131652832
    5. '[' → logprob: -14.886052131652832
    6. '=[' → logprob: -15.761052131652832
    7. '[I' → logprob: -15.886052131652832
    8. '[a' → logprob: -16.636051177978516
    9. '[j' → logprob: -17.761051177978516
    10. '[[' → logprob: -17.886051177978516

Token 642: ' mouvement' (ID: 62236)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. ' [' → logprob: -11.125016212463379
    3. '[' → logprob: -14.375016212463379
    4. '[m' → logprob: -14.750016212463379
    5. 'move' → logprob: -16.000017166137695
    6. '[I' → logprob: -16.250017166137695
    7. '([' → logprob: -16.375017166137695
    8. '[j' → logprob: -16.375017166137695
    9. '[a' → logprob: -16.625017166137695
    10. '[
' → logprob: -17.250017166137695

Token 643: ' vers' (ID: 3640)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.227250610711053e-05
    2. '([' → logprob: -10.125041961669922
    3. ' [' → logprob: -13.250041961669922
    4. '(i' → logprob: -15.375041961669922
    5. '[' → logprob: -16.375041961669922
    6. '[a' → logprob: -17.000041961669922
    7. '[j' → logprob: -17.000041961669922
    8. '=[' → logprob: -17.500041961669922
    9. '[I' → logprob: -17.875041961669922
    10. '[
' → logprob: -19.625041961669922

Token 644: ' la' (ID: 557)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. ' [' → logprob: -12.750006675720215
    3. '[' → logprob: -13.250006675720215
    4. '(i' → logprob: -14.000006675720215
    5. '[
' → logprob: -15.000006675720215
    6. 'i' → logprob: -15.125006675720215
    7. '[l' → logprob: -16.0000057220459
    8. '```' → logprob: -16.3750057220459
    9. '([' → logprob: -16.5000057220459
    10. '\[' → logprob: -17.2500057220459

Token 645: ' case' (ID: 1890)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7835754988482222e-05
    2. 'i' → logprob: -11.125018119812012
    3. '(i' → logprob: -13.750018119812012
    4. '[' → logprob: -14.000018119812012
    5. ' [' → logprob: -14.000018119812012
    6. '[
' → logprob: -15.875018119812012
    7. '{i' → logprob: -17.125017166137695
    8. 'ligne' → logprob: -17.750017166137695
    9. '[j' → logprob: -18.000017166137695
    10. '[next' → logprob: -18.000017166137695

Token 646: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.250020027160645
    3. ' [' → logprob: -12.125020027160645
    4. '[
' → logprob: -14.500020027160645
    5. '(i' → logprob: -14.625020027160645
    6. 'i' → logprob: -14.875020027160645
    7. '   ' → logprob: -15.625020027160645
    8. '[next' → logprob: -15.875020027160645
    9. '[(' → logprob: -16.12502098083496
    10. '[j' → logprob: -17.75002098083496

Token 647: ' dessous' (ID: 120954)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.699530839920044
    2. '[i' → logprob: -0.699530839920044
    3. '(i' → logprob: -5.074530601501465
    4. '[' → logprob: -10.199530601501465
    5. '[(' → logprob: -11.199530601501465
    6. '```' → logprob: -11.324530601501465
    7. ' i' → logprob: -12.074530601501465
    8. '   ' → logprob: -12.074530601501465
    9. 'bas' → logprob: -12.199530601501465
    10. '`' → logprob: -12.574530601501465

Token 648: ' ([' (ID: 31338)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.750005722045898
    3. ' [' → logprob: -13.250005722045898
    4. '```' → logprob: -14.750005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '(i' → logprob: -15.375005722045898
    7. '[
' → logprob: -16.1250057220459
    8. '([' → logprob: -16.7500057220459
    9. 'i' → logprob: -17.0000057220459
    10. '=[' → logprob: -17.2500057220459

Token 649: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.981667537620524e-06
    2. ' i' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '[i' → logprob: -19.000001907348633
    5. '	i' → logprob: -21.250001907348633
    6. '(i' → logprob: -21.375001907348633
    7. ',i' → logprob: -22.000001907348633
    8. ',' → logprob: -22.125001907348633
    9. '{i' → logprob: -22.625001907348633
    10. '```' → logprob: -22.750001907348633

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003252342576161027
    2. ' ,' → logprob: -6.2532525062561035
    3. '+' → logprob: -6.8782525062561035
    4. ',i' → logprob: -8.503252029418945
    5. ',j' → logprob: -9.878252029418945
    6. '   ' → logprob: -11.128252029418945
    7. ' +' → logprob: -11.503252029418945
    8. ',
' → logprob: -12.253252029418945
    9. '+,' → logprob: -13.253252029418945
    10. 'i' → logprob: -13.378252029418945

Token 651: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014661833643913269
    2. 'i' → logprob: -4.51466178894043
    3. ' j' → logprob: -5.63966178894043
    4. ' i' → logprob: -10.63966178894043
    5. '   ' → logprob: -10.88966178894043
    6. ',' → logprob: -11.88966178894043
    7. ',j' → logprob: -12.76466178894043
    8. ' ' → logprob: -14.88966178894043
    9. '    ' → logprob: -15.13966178894043
    10. '  ' → logprob: -15.63966178894043

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001604367163963616
    2. '+' → logprob: -6.8766045570373535
    3. ' ,' → logprob: -8.001604080200195
    4. ',i' → logprob: -8.501604080200195
    5. ' +' → logprob: -11.501604080200195
    6. '+,' → logprob: -11.501604080200195
    7. '   ' → logprob: -12.126604080200195
    8. '[i' → logprob: -12.751604080200195
    9. '+i' → logprob: -13.751604080200195
    10. '],' → logprob: -14.251604080200195

Token 653: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804688900709152
    2. ' i' → logprob: -3.2880468368530273
    3. '   ' → logprob: -12.413046836853027
    4. '    ' → logprob: -14.913046836853027
    5. '(i' → logprob: -15.163046836853027
    6. ' ' → logprob: -15.538046836853027
    7. ',' → logprob: -16.163047790527344
    8. '[i' → logprob: -16.163047790527344
    9. ' ' → logprob: -16.163047790527344
    10. '  ' → logprob: -16.413047790527344

Token 654: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007542393868789077
    2. ' +' → logprob: -7.500754356384277
    3. '+,' → logprob: -9.250754356384277
    4. '1' → logprob: -9.625754356384277
    5. '+j' → logprob: -11.125754356384277
    6. ',' → logprob: -11.125754356384277
    7. ',j' → logprob: -12.375754356384277
    8. ' j' → logprob: -13.125754356384277
    9. 'j' → logprob: -13.250754356384277
    10. '+
' → logprob: -14.625754356384277

Token 655: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024548539659008384
    2. ' ' → logprob: -8.375245094299316
    3. 'j' → logprob: -11.375245094299316
    4. ' j' → logprob: -13.500245094299316
    5. ',' → logprob: -13.875245094299316
    6. '   ' → logprob: -14.500245094299316
    7. '`' → logprob: -15.500245094299316
    8. ',j' → logprob: -15.875245094299316
    9. '+' → logprob: -16.125246047973633
    10. '```' → logprob: -16.750246047973633

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006844374001957476
    2. '+' → logprob: -8.00068473815918
    3. ' ,' → logprob: -8.37568473815918
    4. ',j' → logprob: -9.12568473815918
    5. ' +' → logprob: -12.25068473815918
    6. '   ' → logprob: -12.62568473815918
    7. '       ' → logprob: -15.50068473815918
    8. 'j' → logprob: -15.75068473815918
    9. '][' → logprob: -15.75068473815918
    10. '1' → logprob: -15.87568473815918

Token 657: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020543284714221954
    2. ' j' → logprob: -3.895543336868286
    3. '   ' → logprob: -14.145543098449707
    4. ',j' → logprob: -15.645543098449707
    5. '	j' → logprob: -16.395544052124023
    6. ' ' → logprob: -16.395544052124023
    7. ',' → logprob: -16.645544052124023
    8. '    ' → logprob: -16.645544052124023
    9. '(j' → logprob: -16.895544052124023
    10. '```' → logprob: -17.520544052124023

Token 658: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023426689207553864
    2. '])
' → logprob: -3.7734267711639404
    3. '])
' → logprob: -10.02342700958252
    4. ',' → logprob: -10.14842700958252
    5. ' ])' → logprob: -10.14842700958252
    6. '   ' → logprob: -11.64842700958252
    7. ']):' → logprob: -11.89842700958252
    8. ''])' → logprob: -12.39842700958252
    9. '               ' → logprob: -12.39842700958252
    10. '           ' → logprob: -12.64842700958252

Token 659: '               ' (ID: 506)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.25590571761131287
    2. '               ' → logprob: -1.5059057474136353
    3. ' move' → logprob: -5.755905628204346
    4. '.move' → logprob: -8.505906105041504
    5. '           ' → logprob: -8.630906105041504
    6. '[' → logprob: -8.880906105041504
    7. '(move' → logprob: -9.005906105041504
    8. '                   ' → logprob: -9.130906105041504
    9. '.append' → logprob: -11.255906105041504
    10. '```' → logprob: -11.630906105041504

Token 660: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -0.00104150187689811
    2. '               ' → logprob: -7.001041412353516
    3. ' move' → logprob: -9.001041412353516
    4. '                   ' → logprob: -12.501041412353516
    5. '           ' → logprob: -13.876041412353516
    6. '(move' → logprob: -13.876041412353516
    7. '[' → logprob: -14.501041412353516
    8. '	move' → logprob: -15.126041412353516
    9. '.move' → logprob: -15.751041412353516
    10. '                ' → logprob: -16.376041412353516

Token 661: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -9.750059127807617
    3. '.app' → logprob: -14.500059127807617
    4. ' .' → logprob: -15.875059127807617
    5. 'append' → logprob: -16.625059127807617
    6. '.add' → logprob: -16.750059127807617
    7. ').' → logprob: -16.875059127807617
    8. '.extend' → logprob: -17.375059127807617
    9. '.Append' → logprob: -17.500059127807617
    10. '.setdefault' → logprob: -18.000059127807617

Token 662: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.005234121344983578
    2. '[i' → logprob: -5.255234241485596
    3. '(i' → logprob: -15.255233764648438
    4. ' [' → logprob: -17.630233764648438
    5. '   ' → logprob: -18.255233764648438
    6. '=[' → logprob: -18.255233764648438
    7. '[' → logprob: -18.380233764648438
    8. ' ([' → logprob: -18.505233764648438
    9. '(' → logprob: -19.005233764648438
    10. '([
' → logprob: -19.505233764648438

Token 663: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.128163257315464e-07
    2. ' i' → logprob: -15.625
    3. '[i' → logprob: -17.125
    4. '   ' → logprob: -20.75
    5. '(i' → logprob: -21.0
    6. '{i' → logprob: -21.625
    7. '	i' → logprob: -21.75
    8. ''i' → logprob: -22.375
    9. '```' → logprob: -23.375
    10. ')i' → logprob: -23.75

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.057743949990254e-05
    2. ',j' → logprob: -11.375020980834961
    3. ' ,' → logprob: -11.750020980834961
    4. ',i' → logprob: -14.125020980834961
    5. '',' → logprob: -16.12502098083496
    6. ',
' → logprob: -16.25002098083496
    7. '[' → logprob: -16.75002098083496
    8. 'i' → logprob: -16.87502098083496
    9. '   ' → logprob: -17.12502098083496
    10. '‌,' → logprob: -17.37502098083496

Token 665: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009114635176956654
    2. ' j' → logprob: -7.000911235809326
    3. '	j' → logprob: -17.125911712646484
    4. ',j' → logprob: -18.750911712646484
    5. '   ' → logprob: -18.875911712646484
    6. '$j' → logprob: -20.000911712646484
    7. ' ' → logprob: -20.875911712646484
    8. '[j' → logprob: -21.000911712646484
    9. '    ' → logprob: -21.375911712646484
    10. '  ' → logprob: -21.500911712646484

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012594614236149937
    2. ' ,' → logprob: -9.375125885009766
    3. ',i' → logprob: -10.125125885009766
    4. ',
' → logprob: -15.375125885009766
    5. '   ' → logprob: -15.625125885009766
    6. '+' → logprob: -16.125125885009766
    7. ',j' → logprob: -16.375125885009766
    8. '‌,' → logprob: -16.500125885009766
    9. '       ' → logprob: -16.750125885009766
    10. '           ' → logprob: -17.000125885009766

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024758970830589533
    2. ' i' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. '(i' → logprob: -16.75247573852539
    5. ' ' → logprob: -17.00247573852539
    6. '{i' → logprob: -17.62747573852539
    7. '[i' → logprob: -18.12747573852539
    8. '	i' → logprob: -19.00247573852539
    9. ' ' → logprob: -19.25247573852539
    10. '    ' → logprob: -19.37747573852539

Token 668: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001375089050270617
    2. ' +' → logprob: -9.000137329101562
    3. ',' → logprob: -11.625137329101562
    4. '+,' → logprob: -12.625137329101562
    5. '1' → logprob: -13.500137329101562
    6. '+
' → logprob: -15.625137329101562
    7. '   ' → logprob: -16.625137329101562
    8. ' ,' → logprob: -17.375137329101562
    9. '＋' → logprob: -17.375137329101562
    10. 'plus' → logprob: -17.375137329101562

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '+' → logprob: -16.37500762939453
    4. '   ' → logprob: -18.62500762939453
    5. '```' → logprob: -21.25000762939453
    6. '１' → logprob: -21.75000762939453
    7. '  ' → logprob: -21.75000762939453
    8. '
' → logprob: -21.75000762939453
    9. '۱' → logprob: -22.25000762939453
    10. 'j' → logprob: -22.37500762939453

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001843485952122137
    2. ' ,' → logprob: -9.125184059143066
    3. ',j' → logprob: -9.500184059143066
    4. '           ' → logprob: -15.750184059143066
    5. '[' → logprob: -15.875184059143066
    6. '       ' → logprob: -16.250185012817383
    7. '   ' → logprob: -16.875185012817383
    8. 'j' → logprob: -17.750185012817383
    9. ' ' → logprob: -17.875185012817383
    10. ',
' → logprob: -18.000185012817383

Token 671: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01814994215965271
    2. ' j' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.893150329589844
    4. ' ' → logprob: -17.518150329589844
    5. '	j' → logprob: -17.643150329589844
    6. '    ' → logprob: -18.768150329589844
    7. ',j' → logprob: -19.393150329589844
    8. '_j' → logprob: -19.643150329589844
    9. '  ' → logprob: -19.768150329589844
    10. '$j' → logprob: -20.018150329589844

Token 672: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008622374385595322
    2. '])
' → logprob: -4.758622169494629
    3. '])
' → logprob: -12.883622169494629
    4. ' ])' → logprob: -13.508622169494629
    5. ')' → logprob: -14.133622169494629
    6. ''])' → logprob: -14.383622169494629
    7. ')])' → logprob: -14.633622169494629
    8. '           ' → logprob: -14.633622169494629
    9. '       ' → logprob: -15.008622169494629
    10. ']' → logprob: -15.008622169494629

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3151209354400635
    2. 'a' → logprob: -1.3151209354400635
    3. '           ' → logprob: -6.940120697021484
    4. ' a' → logprob: -7.440120697021484
    5. '                   ' → logprob: -8.815120697021484
    6. '```' → logprob: -9.940120697021484
    7. '   ' → logprob: -10.315120697021484
    8. '	a' → logprob: -10.440120697021484
    9. '                
' → logprob: -11.690120697021484
    10. '                ' → logprob: -11.940120697021484

Token 674: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012916464766021818
    2. '                   ' → logprob: -9.875128746032715
    3. '   ' → logprob: -10.375128746032715
    4. ' a' → logprob: -10.625128746032715
    5. '               ' → logprob: -11.250128746032715
    6. '           ' → logprob: -12.000128746032715
    7. '       ' → logprob: -13.250128746032715
    8. '	a' → logprob: -13.875128746032715
    9. '                       ' → logprob: -15.875128746032715
    10. '                ' → logprob: -17.12512969970703

Token 675: ' In' (ID: 730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4736459888808895e-05
    2. '               ' → logprob: -11.875014305114746
    3. ' a' → logprob: -12.500014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '                   ' → logprob: -13.625014305114746
    6. '           ' → logprob: -13.625014305114746
    7. '       ' → logprob: -16.250015258789062
    8. '                       ' → logprob: -17.625015258789062
    9. '                ' → logprob: -18.125015258789062
    10. 'move' → logprob: -18.250015258789062

Token 676: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.6711261868476868
    2. 'a' → logprob: -1.171126127243042
    3. 'crement' → logprob: -2.171126127243042
    4. 'c' → logprob: -3.421126127243042
    5. 'cre' → logprob: -3.546126127243042
    6. '[i' → logprob: -6.671126365661621
    7. '[a' → logprob: -7.546126365661621
    8. 'CREMENT' → logprob: -7.921126365661621
    9. '[' → logprob: -8.171126365661621
    10. '
' → logprob: -8.421126365661621

Token 677: 'ément' (ID: 17645)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7832879424095154
    2. 'cr' → logprob: -1.1582880020141602
    3. 'crement' → logprob: -1.7832880020141602
    4. 'cre' → logprob: -3.90828800201416
    5. '[' → logprob: -4.28328800201416
    6. '   ' → logprob: -5.15828800201416
    7. '[i' → logprob: -5.28328800201416
    8. 'c' → logprob: -5.40828800201416
    9. '[a' → logprob: -5.65828800201416
    10. 'er' → logprob: -6.78328800201416

Token 678: 'er' (ID: 259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016849361127242446
    2. 'er' → logprob: -6.50168514251709
    3. ' a' → logprob: -9.50168514251709
    4. '               ' → logprob: -10.37668514251709
    5. '[a' → logprob: -10.50168514251709
    6. '                   ' → logprob: -11.12668514251709
    7. '_a' → logprob: -11.37668514251709
    8. '           ' → logprob: -11.50168514251709
    9. '   ' → logprob: -12.87668514251709
    10. '(a' → logprob: -13.25168514251709

Token 679: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033581978641450405
    2. ' a' → logprob: -8.000335693359375
    3. '(a' → logprob: -15.500335693359375
    4. '   ' → logprob: -17.125335693359375
    5. '[a' → logprob: -18.125335693359375
    6. '	a' → logprob: -18.250335693359375
    7. '```' → logprob: -19.500335693359375
    8. '#a' → logprob: -20.000335693359375
    9. '           ' → logprob: -20.375335693359375
    10. '       ' → logprob: -20.500335693359375

Token 680: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019626514986157417
    2. 'value' → logprob: -6.626962661743164
    3. 'val' → logprob: -7.376962661743164
    4. ' a' → logprob: -11.626962661743164
    5. ' valeur' → logprob: -13.876962661743164
    6. ' value' → logprob: -14.376962661743164
    7. '
' → logprob: -14.626962661743164
    8. '[a' → logprob: -16.876962661743164
    9. '   ' → logprob: -17.376962661743164
    10. '#' → logprob: -17.626962661743164

Token 681: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005169005133211613
    2. 'de' → logprob: -6.005168914794922
    3. ' de' → logprob: -6.630168914794922
    4. ' a' → logprob: -6.630168914794922
    5. '   ' → logprob: -10.380168914794922
    6. '[a' → logprob: -12.130168914794922
    7. '               ' → logprob: -12.255168914794922
    8. '                   ' → logprob: -13.130168914794922
    9. '           ' → logprob: -13.880168914794922
    10. 'à' → logprob: -14.130168914794922

Token 682: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011021859245374799
    2. ' a' → logprob: -9.125110626220703
    3. 'la' → logprob: -14.500110626220703
    4. '   ' → logprob: -14.750110626220703
    5. '```' → logprob: -15.375110626220703
    6. '	a' → logprob: -17.000110626220703
    7. ' ' → logprob: -17.125110626220703
    8. ' la' → logprob: -17.250110626220703
    9. 'the' → logprob: -17.375110626220703
    10. '  ' → logprob: -17.750110626220703

Token 683: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011033779446734115
    2. 'case' → logprob: -9.250110626220703
    3. '[i' → logprob: -11.500110626220703
    4. ' a' → logprob: -12.875110626220703
    5. ' case' → logprob: -13.750110626220703
    6. 'i' → logprob: -15.125110626220703
    7. '
' → logprob: -16.375110626220703
    8. '   ' → logprob: -17.000110626220703
    9. ' ' → logprob: -17.750110626220703
    10. '```' → logprob: -18.000110626220703

Token 684: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.507972572464496e-05
    2. 'a' → logprob: -9.62509536743164
    3. 'i' → logprob: -10.50009536743164
    4. '```' → logprob: -14.12509536743164
    5. '   ' → logprob: -15.25009536743164
    6. '(i' → logprob: -16.12509536743164
    7. '[a' → logprob: -16.37509536743164
    8. ' [' → logprob: -17.12509536743164
    9. 'à' → logprob: -17.62509536743164
    10. ' i' → logprob: -18.00009536743164

Token 685: ' dessous' (ID: 120954)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.502511203289032
    2. 'i' → logprob: -1.0025112628936768
    3. 'a' → logprob: -3.6275112628936768
    4. '
' → logprob: -8.127511024475098
    5. '(i' → logprob: -8.127511024475098
    6. ' dessous' → logprob: -8.627511024475098
    7. '```' → logprob: -8.752511024475098
    8. ' i' → logprob: -9.127511024475098
    9. '   ' → logprob: -9.877511024475098
    10. '[a' → logprob: -10.002511024475098

Token 686: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03389855846762657
    2. '[i' → logprob: -3.4088985919952393
    3. ' a' → logprob: -9.78389835357666
    4. 'i' → logprob: -9.90889835357666
    5. '               ' → logprob: -10.28389835357666
    6. '   ' → logprob: -10.28389835357666
    7. '                   ' → logprob: -10.65889835357666
    8. '```' → logprob: -10.65889835357666
    9. '           ' → logprob: -11.40889835357666
    10. '       ' → logprob: -12.28389835357666

Token 687: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00071553117595613
    2. 'i' → logprob: -7.250715732574463
    3. ' a' → logprob: -12.750715255737305
    4. '   ' → logprob: -13.125715255737305
    5. '[i' → logprob: -14.375715255737305
    6. '           ' → logprob: -16.750715255737305
    7. '               ' → logprob: -17.375715255737305
    8. '```' → logprob: -17.500715255737305
    9. '       ' → logprob: -17.625715255737305
    10. '    ' → logprob: -17.625715255737305

Token 688: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018158724531531334
    2. 'i' → logprob: -4.018158912658691
    3. '
' → logprob: -12.393158912658691
    4. '```' → logprob: -13.268158912658691
    5. ' i' → logprob: -14.143158912658691
    6. '   ' → logprob: -14.143158912658691
    7. ' [' → logprob: -14.893158912658691
    8. '[
' → logprob: -15.268158912658691
    9. '][' → logprob: -15.768158912658691
    10. '(i' → logprob: -15.893158912658691

Token 689: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.281485836254433e-05
    2. '][' → logprob: -9.875092506408691
    3. ' +' → logprob: -10.125092506408691
    4. '+
' → logprob: -14.750092506408691
    5. '+j' → logprob: -15.625092506408691
    6. '[j' → logprob: -15.750092506408691
    7. '[' → logprob: -15.750092506408691
    8. '＋' → logprob: -16.375093460083008
    9. '```' → logprob: -16.500093460083008
    10. '+[' → logprob: -16.500093460083008

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. '+' → logprob: -10.125051498413086
    3. ' ' → logprob: -11.750051498413086
    4. '   ' → logprob: -13.250051498413086
    5. 'j' → logprob: -13.875051498413086
    6. 'i' → logprob: -14.375051498413086
    7. '```' → logprob: -15.000051498413086
    8. '`' → logprob: -18.125051498413086
    9. '
' → logprob: -18.125051498413086
    10. ' +' → logprob: -18.375051498413086

Token 691: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001357136876322329
    2. ']' → logprob: -6.626357078552246
    3. '[j' → logprob: -11.001357078552246
    4. ' ][' → logprob: -11.751357078552246
    5. '[' → logprob: -13.501357078552246
    6. '+' → logprob: -13.876357078552246
    7. '   ' → logprob: -14.126357078552246
    8. '[i' → logprob: -14.251357078552246
    9. ',j' → logprob: -14.376357078552246
    10. '])' → logprob: -14.501357078552246

Token 692: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.822646693966817e-06
    2. ' j' → logprob: -12.000007629394531
    3. '][' → logprob: -14.125007629394531
    4. '   ' → logprob: -15.375007629394531
    5. ']' → logprob: -15.750007629394531
    6. '
' → logprob: -16.12500762939453
    7. '[j' → logprob: -16.50000762939453
    8. '```' → logprob: -16.75000762939453
    9. '	j' → logprob: -16.75000762939453
    10. ' ' → logprob: -17.00000762939453

Token 693: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03898472338914871
    2. ']' → logprob: -3.288984775543213
    3. ')' → logprob: -7.663984775543213
    4. ']+=' → logprob: -8.538984298706055
    5. ']+' → logprob: -9.163984298706055
    6. ''])' → logprob: -9.913984298706055
    7. '])+' → logprob: -10.163984298706055
    8. '+' → logprob: -10.413984298706055
    9. '`)' → logprob: -11.288984298706055
    10. ' ])' → logprob: -11.788984298706055

Token 694: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4580315351486206
    2. ' +=' → logprob: -1.0830315351486206
    3. ']+=' → logprob: -3.58303165435791
    4. '               ' → logprob: -7.58303165435791
    5. '           ' → logprob: -8.70803165435791
    6. '                   ' → logprob: -8.83303165435791
    7. ']' → logprob: -8.95803165435791
    8. '            ' → logprob: -10.33303165435791
    9. '```' → logprob: -10.33303165435791
    10. '[' → logprob: -10.58303165435791

Token 695: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.000204086303711
    4. '```' → logprob: -15.250204086303711
    5. '+' → logprob: -16.87520408630371
    6. '`' → logprob: -17.62520408630371
    7. '  ' → logprob: -18.37520408630371
    8. '    ' → logprob: -18.62520408630371
    9. 'a' → logprob: -18.75020408630371
    10. '１' → logprob: -18.93770408630371

Token 696: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.25
    4. '+' → logprob: -20.375
    5. '<|end|>' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. '１' → logprob: -22.25
    8. '১' → logprob: -22.75
    9. '۱' → logprob: -22.8125
    10. '`' → logprob: -22.875

Token 697: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46202224493026733
    2. 'a' → logprob: -1.587022304534912
    3. ' a' → logprob: -1.962022304534912
    4. '           ' → logprob: -4.712022304534912
    5. '[a' → logprob: -5.212022304534912
    6. '                   ' → logprob: -5.587022304534912
    7. '
' → logprob: -6.087022304534912
    8. '[i' → logprob: -6.587022304534912
    9. '   ' → logprob: -7.462022304534912
    10. '                
' → logprob: -7.837022304534912

Token 698: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09104017913341522
    2. '               ' → logprob: -2.4660401344299316
    3. ' a' → logprob: -6.466040134429932
    4. '           ' → logprob: -8.21604061126709
    5. '                   ' → logprob: -8.96604061126709
    6. '   ' → logprob: -10.09104061126709
    7. '                
' → logprob: -10.21604061126709
    8. '```' → logprob: -11.09104061126709
    9. '       ' → logprob: -11.59104061126709
    10. '	a' → logprob: -11.96604061126709

Token 699: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.012071380391716957
    2. ' a' → logprob: -4.51207160949707
    3. '               ' → logprob: -7.01207160949707
    4. '                   ' → logprob: -9.63707160949707
    5. '           ' → logprob: -10.26207160949707
    6. '   ' → logprob: -10.88707160949707
    7. '	a' → logprob: -14.13707160949707
    8. '       ' → logprob: -14.26207160949707
    9. '                ' → logprob: -14.63707160949707
    10. ' ' → logprob: -14.88707160949707

Token 700: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -12.87500286102295
    3. ' [' → logprob: -18.000001907348633
    4. '```' → logprob: -18.875001907348633
    5. '[I' → logprob: -19.250001907348633
    6. ' i' → logprob: -19.375001907348633
    7. '(i' → logprob: -19.625001907348633
    8. '[' → logprob: -19.875001907348633
    9. '+i' → logprob: -20.000001907348633
    10. '
' → logprob: -20.500001907348633

Token 701: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006684751133434474
    2. '[i' → logprob: -7.750668525695801
    3. '][' → logprob: -8.6256685256958
    4. '+i' → logprob: -10.0006685256958
    5. ' +' → logprob: -11.6256685256958
    6. '+[' → logprob: -13.7506685256958
    7. '```' → logprob: -13.8756685256958
    8. '[' → logprob: -14.6256685256958
    9. '   ' → logprob: -15.0006685256958
    10. '1' → logprob: -15.2506685256958

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. 'j' → logprob: -10.750027656555176
    3. '+' → logprob: -12.500027656555176
    4. ' ' → logprob: -13.500027656555176
    5. 'i' → logprob: -13.625027656555176
    6. '   ' → logprob: -16.750028610229492
    7. '
' → logprob: -17.125028610229492
    8. '[j' → logprob: -17.375028610229492
    9. '[i' → logprob: -17.625028610229492
    10. '```' → logprob: -18.250028610229492

Token 703: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000573167169932276
    2. '[i' → logprob: -7.75057315826416
    3. '[j' → logprob: -9.62557315826416
    4. ']' → logprob: -9.75057315826416
    5. ' ][' → logprob: -11.50057315826416
    6. '[' → logprob: -12.75057315826416
    7. '   ' → logprob: -13.00057315826416
    8. '"][' → logprob: -14.50057315826416
    9. '```' → logprob: -14.75057315826416
    10. '}[' → logprob: -14.87557315826416

Token 704: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.107425062713446e-06
    2. ' j' → logprob: -11.875006675720215
    3. '	j' → logprob: -16.75000762939453
    4. '   ' → logprob: -16.87500762939453
    5. '[j' → logprob: -17.62500762939453
    6. ' ' → logprob: -18.37500762939453
    7. '$j' → logprob: -18.75000762939453
    8. '```' → logprob: -18.75000762939453
    9. '_j' → logprob: -19.87500762939453
    10. ',j' → logprob: -20.00000762939453

Token 705: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5788319110870361
    2. ']+=' → logprob: -0.8288319110870361
    3. '+=' → logprob: -5.953831672668457
    4. ']+' → logprob: -9.078831672668457
    5. '+' → logprob: -9.328831672668457
    6. ' +=' → logprob: -9.703831672668457
    7. ' ]' → logprob: -11.203831672668457
    8. '+]' → logprob: -12.828831672668457
    9. '[' → logprob: -12.953831672668457
    10. ')' → logprob: -13.078831672668457

Token 706: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004100842867046595
    2. ' +=' → logprob: -5.504100799560547
    3. ']+=' → logprob: -11.004100799560547
    4. '+' → logprob: -12.129100799560547
    5. '+='' → logprob: -15.504100799560547
    6. '+="' → logprob: -16.379100799560547
    7. '=' → logprob: -16.504100799560547
    8. '+=(' → logprob: -16.629100799560547
    9. '```' → logprob: -17.254100799560547
    10. ')' → logprob: -18.629100799560547

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '<|end|>' → logprob: -21.125001907348633
    6. '`' → logprob: -21.500001907348633
    7. '+' → logprob: -22.000001907348633
    8. '۱' → logprob: -22.125001907348633
    9. '１' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.500001907348633

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.25
    4. '<|end|>' → logprob: -20.625
    5. '+' → logprob: -20.875
    6. '１' → logprob: -21.75
    7. '   ' → logprob: -21.75
    8. '۱' → logprob: -21.875
    9. '১' → logprob: -22.625
    10. '१' → logprob: -23.0

Token 709: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39618948101997375
    2. '               ' → logprob: -1.2711894512176514
    3. 'a' → logprob: -3.1461894512176514
    4. ' a' → logprob: -6.6461896896362305
    5. '       ' → logprob: -7.0211896896362305
    6. '#' → logprob: -7.5211896896362305
    7. '            ' → logprob: -8.64618968963623
    8. '            
' → logprob: -8.64618968963623
    9. '                
' → logprob: -8.89618968963623
    10. '                   ' → logprob: -8.89618968963623

Token 711: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 712: ' Si' (ID: 7832)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5663021802902222
    2. '#' → logprob: -1.4413021802902222
    3. '<|end|>' → logprob: -2.8163022994995117
    4. 'else' → logprob: -3.4413022994995117
    5. '       ' → logprob: -3.6913022994995117
    6. '        ' → logprob: -4.316302299499512
    7. '           ' → logprob: -4.316302299499512
    8. 'continue' → logprob: -4.566302299499512
    9. ' a' → logprob: -5.191302299499512
    10. '```' → logprob: -5.441302299499512

Token 713: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3327971398830414
    2. 'a' → logprob: -1.5827971696853638
    3. ' ' → logprob: -2.957797050476074
    4. ' not' → logprob: -4.082797050476074
    5. '<|end|>' → logprob: -6.082797050476074
    6. 'not' → logprob: -6.332797050476074
    7. '    ' → logprob: -6.582797050476074
    8. ' j' → logprob: -6.582797050476074
    9. ' True' → logprob: -7.957797050476074
    10. 'j' → logprob: -7.957797050476074

Token 714: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8285313844680786
    2. ' ' → logprob: -1.5785313844680786
    3. ' a' → logprob: -1.8285313844680786
    4. ' j' → logprob: -2.953531265258789
    5. 'j' → logprob: -3.078531265258789
    6. ' else' → logprob: -3.328531265258789
    7. 'else' → logprob: -4.078531265258789
    8. '<|end|>' → logprob: -4.578531265258789
    9. 's' → logprob: -4.703531265258789
    10. '[' → logprob: -5.453531265258789

Token 715: ' a' (ID: 261)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7719115018844604
    2. 'else' → logprob: -1.1469115018844604
    3. '[' → logprob: -2.14691162109375
    4. '[i' → logprob: -2.64691162109375
    5. '[a' → logprob: -4.77191162109375
    6. '   ' → logprob: -4.89691162109375
    7. '       ' → logprob: -5.52191162109375
    8. ' a' → logprob: -6.52191162109375
    9. '[j' → logprob: -6.52191162109375
    10. ' ' → logprob: -6.52191162109375

Token 716: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010580805974313989
    2. '[j' → logprob: -9.500105857849121
    3. 'a' → logprob: -11.500105857849121
    4. 'else' → logprob: -11.750105857849121
    5. '[' → logprob: -11.875105857849121
    6. 'i' → logprob: -13.250105857849121
    7. '[a' → logprob: -13.250105857849121
    8. ' [' → logprob: -14.500105857849121
    9. 'elif' → logprob: -15.250105857849121
    10. '```' → logprob: -15.375105857849121

Token 717: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010687739122658968
    2. '[j' → logprob: -6.876068592071533
    3. ']' → logprob: -10.876069068908691
    4. '[i' → logprob: -11.501069068908691
    5. ' ][' → logprob: -12.501069068908691
    6. '[' → logprob: -13.376069068908691
    7. '   ' → logprob: -14.126069068908691
    8. ']][' → logprob: -15.376069068908691
    9. 'j' → logprob: -15.876069068908691
    10. '```' → logprob: -16.251068115234375

Token 718: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00024548539659008384
    2. '[j' → logprob: -8.375245094299316
    3. '][' → logprob: -11.375245094299316
    4. ' j' → logprob: -13.625245094299316
    5. ']' → logprob: -14.625245094299316
    6. '
' → logprob: -14.875245094299316
    7. '```' → logprob: -15.000245094299316
    8. 'a' → logprob: -15.375245094299316
    9. '   ' → logprob: -15.625245094299316
    10. '	j' → logprob: -15.625245094299316

Token 719: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5589770078659058
    2. '][' → logprob: -0.9339770078659058
    3. '[j' → logprob: -4.683977127075195
    4. ']%' → logprob: -4.683977127075195
    5. '%' → logprob: -4.808977127075195
    6. '[i' → logprob: -6.183977127075195
    7. ' ][' → logprob: -6.183977127075195
    8. '   ' → logprob: -7.058977127075195
    9. 'else' → logprob: -7.183977127075195
    10. '       ' → logprob: -7.433977127075195

Token 720: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7087907791137695
    2. ' %' → logprob: -1.3337907791137695
    3. '=' → logprob: -2.3337907791137695
    4. ' %=' → logprob: -2.9587907791137695
    5. ' +=' → logprob: -3.3337907791137695
    6. ' =' → logprob: -4.7087907791137695
    7. ' -=' → logprob: -4.8337907791137695
    8. ' ' → logprob: -4.8337907791137695
    9. '[' → logprob: -5.0837907791137695
    10. ' ==' → logprob: -5.2087907791137695

Token 721: ' paire' (ID: 148856)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.13234657049179077
    2. 'pair' → logprob: -2.5073466300964355
    3. ' even' → logprob: -3.8823466300964355
    4. ' paire' → logprob: -4.7573466300964355
    5. 'not' → logprob: -5.5073466300964355
    6. ' ' → logprob: -5.8823466300964355
    7. 'p' → logprob: -6.2573466300964355
    8. '_even' → logprob: -7.0073466300964355
    9. 'pari' → logprob: -7.1323466300964355
    10. ' not' → logprob: -7.2573466300964355

Token 722: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09719861298799515
    2. ' continue' → logprob: -3.097198724746704
    3. '<|end|>' → logprob: -4.472198486328125
    4. '           ' → logprob: -4.597198486328125
    5. '       ' → logprob: -4.847198486328125
    6. ' :' → logprob: -5.347198486328125
    7. '   ' → logprob: -5.472198486328125
    8. ',' → logprob: -6.472198486328125
    9. 'continue' → logprob: -6.597198486328125
    10. ' ' → logprob: -6.847198486328125

Token 723: ' qu' (ID: 474)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7085133194923401
    2. ' else' → logprob: -1.8335132598876953
    3. 'else' → logprob: -2.0835132598876953
    4. 'continue' → logprob: -2.3335132598876953
    5. '       ' → logprob: -3.3335132598876953
    6. '   ' → logprob: -3.5835132598876953
    7. ' not' → logprob: -4.333513259887695
    8. ' False' → logprob: -4.458513259887695
    9. 'False' → logprob: -4.458513259887695
    10. 'not' → logprob: -5.083513259887695

Token 724: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8310338258743286
    2. '           ' → logprob: -1.8310338258743286
    3. '       ' → logprob: -2.081033706665039
    4. 'else' → logprob: -2.206033706665039
    5. 'a' → logprob: -2.456033706665039
    6. 'e' → logprob: -3.581033706665039
    7. 'i' → logprob: -3.581033706665039
    8. ' a' → logprob: -3.581033706665039
    9. '```' → logprob: -3.581033706665039
    10. 'u' → logprob: -3.956033706665039

Token 725: 'auc' (ID: 11816)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.790808379650116
    2. 'a' → logprob: -2.0408084392547607
    3. ' a' → logprob: -2.1658084392547607
    4. 'j' → logprob: -2.5408084392547607
    5. 'False' → logprob: -2.5408084392547607
    6. ' (' → logprob: -2.9158084392547607
    7. ' False' → logprob: -3.1658084392547607
    8. ' not' → logprob: -3.6658084392547607
    9. 'not' → logprob: -4.540808200836182
    10. '(a' → logprob: -6.040808200836182

Token 726: 'un' (ID: 373)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4182170629501343
    2. 'else' → logprob: -2.043217182159424
    3. ' else' → logprob: -2.543217182159424
    4. '<|end|>' → logprob: -2.918217182159424
    5. '       ' → logprob: -4.043217182159424
    6. ' ' → logprob: -4.793217182159424
    7. ' ' → logprob: -4.918217182159424
    8. '   ' → logprob: -5.043217182159424
    9. '```' → logprob: -5.168217182159424
    10. ' a' → logprob: -5.168217182159424

Token 727: ' déplacement' (ID: 138449)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.2192628383636475
    2. ' déplacement' → logprob: -1.8442628383636475
    3. ' mouvement' → logprob: -1.9692628383636475
    4. ' ' → logprob: -2.7192628383636475
    5. 'n' → logprob: -2.8442628383636475
    6. ' move' → logprob: -2.9692628383636475
    7. 'm' → logprob: -3.0942628383636475
    8. 'else' → logprob: -3.0942628383636475
    9. ' action' → logprob: -3.3442628383636475
    10. '    ' → logprob: -3.4692628383636475

Token 728: ' n' (ID: 297)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9855977892875671
    2. ' n' → logprob: -1.485597848892212
    3. '           ' → logprob: -2.485597848892212
    4. 'n' → logprob: -2.485597848892212
    5. '   ' → logprob: -2.860597848892212
    6. '<|end|>' → logprob: -3.235597848892212
    7. 'continue' → logprob: -3.485597848892212
    8. ' continues' → logprob: -3.610597848892212
    9. '       ' → logprob: -3.735597848892212
    10. ' ' → logprob: -4.110597610473633

Token 729: ''est' (ID: 6616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2983081340789795
    2. '           ' → logprob: -1.7983081340789795
    3. 'else' → logprob: -1.9233081340789795
    4. '       ' → logprob: -2.1733081340789795
    5. ' n' → logprob: -2.1733081340789795
    6. ' else' → logprob: -2.6733081340789795
    7. '   ' → logprob: -3.4233081340789795
    8. '<|end|>' → logprob: -3.9233081340789795
    9. 's' → logprob: -4.298308372497559
    10. ' est' → logprob: -5.048308372497559

Token 730: ' possible' (ID: 4149)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.4802764356136322
    2. 'effect' → logprob: -1.4802764654159546
    3. 'n' → logprob: -3.480276346206665
    4. ' effectué' → logprob: -3.480276346206665
    5. 'fait' → logprob: -3.605276346206665
    6. ' nécessaire' → logprob: -3.855276346206665
    7. 'ré' → logprob: -4.230276584625244
    8. 'necess' → logprob: -4.730276584625244
    9. 'necessary' → logprob: -5.355276584625244
    10. 'needed' → logprob: -5.480276584625244

Token 731: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0855804979801178
    2. ' continue' → logprob: -3.335580587387085
    3. '           ' → logprob: -4.210580348968506
    4. ' :' → logprob: -4.710580348968506
    5. ' ' → logprob: -5.085580348968506
    6. '<|end|>' → logprob: -5.210580348968506
    7. 'continue' → logprob: -5.960580348968506
    8. '       ' → logprob: -6.460580348968506
    9. ',' → logprob: -7.085580348968506
    10. '   ' → logprob: -7.210580348968506

Token 732: ' rien' (ID: 23082)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.046547893434762955
    2. 'continue' → logprob: -3.1715478897094727
    3. ' pass' → logprob: -6.421547889709473
    4. '	continue' → logprob: -7.171547889709473
    5. 'pass' → logprob: -7.171547889709473
    6. '           ' → logprob: -9.171547889709473
    7. '_continue' → logprob: -9.421547889709473
    8. ' continues' → logprob: -9.796547889709473
    9. '               ' → logprob: -9.921547889709473
    10. '            ' → logprob: -10.421547889709473

Token 733: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.284232497215271
    2. 'continue' → logprob: -2.6592326164245605
    3. ' continue' → logprob: -2.9092326164245605
    4. ' continues' → logprob: -3.5342326164245605
    5. '   ' → logprob: -3.7842326164245605
    6. '       ' → logprob: -4.2842326164245605
    7. ' n' → logprob: -4.5342326164245605
    8. '<|end|>' → logprob: -4.6592326164245605
    9. 'n' → logprob: -5.0342326164245605
    10. '            
' → logprob: -5.4092326164245605

Token 734: ''est' (ID: 6616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.459699034690857
    2. '   ' → logprob: -1.584699034690857
    3. '           ' → logprob: -2.4596991539001465
    4. 'f' → logprob: -2.5846991539001465
    5. 'else' → logprob: -2.8346991539001465
    6. 'continue' → logprob: -2.8346991539001465
    7. 'do' → logprob: -2.9596991539001465
    8. '#' → logprob: -3.0846991539001465
    9. 'fait' → logprob: -3.2096991539001465
    10. 'est' → logprob: -4.2096991539001465

Token 735: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.021936876699328423
    2. 'f' → logprob: -4.771936893463135
    3. ' fait' → logprob: -5.271936893463135
    4. 'faite' → logprob: -5.521936893463135
    5. 'à' → logprob: -5.771936893463135
    6. ' effectué' → logprob: -8.146936416625977
    7. 'fa' → logprob: -8.896936416625977
    8. 'faire' → logprob: -9.146936416625977
    9. 'else' → logprob: -9.271936416625977
    10. 'effect' → logprob: -9.271936416625977

Token 736: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 737: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. '#' → logprob: -12.875003814697266
    3. 'for' → logprob: -14.375003814697266
    4. ' print' → logprob: -14.500003814697266
    5. '#print' → logprob: -17.625003814697266
    6. 'p' → logprob: -18.875003814697266
    7. 'pr' → logprob: -19.500003814697266
    8. 'n' → logprob: -19.875003814697266
    9. 'pass' → logprob: -20.125003814697266
    10. '```' → logprob: -21.375003814697266

Token 739: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.02680179849267006
    2. '#' → logprob: -3.651801824569702
    3. 'cher' → logprob: -8.151802062988281
    4. 'f' → logprob: -10.026802062988281
    5. '   ' → logprob: -10.026802062988281
    6. 'ichage' → logprob: -10.651802062988281
    7. 'iche' → logprob: -10.901802062988281
    8. '```' → logprob: -11.151802062988281
    9. '\' → logprob: -11.401802062988281
    10. '

' → logprob: -11.901802062988281

Token 740: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.949026571121067e-05
    2. '(len' → logprob: -9.250099182128906
    3. 'print' → logprob: -12.750099182128906
    4. ' len' → logprob: -14.750099182128906
    5. '[len' → logprob: -17.750099182128906
    6. '
' → logprob: -21.000099182128906
    7. 'le' → logprob: -21.125099182128906
    8. '=len' → logprob: -21.125099182128906
    9. ',len' → logprob: -21.375099182128906
    10. '	len' → logprob: -21.750099182128906

Token 741: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016194197814911604
    2. 'nombre' → logprob: -9.375162124633789
    3. 'n' → logprob: -10.375162124633789
    4. ' len' → logprob: -10.500162124633789
    5. '(len' → logprob: -11.125162124633789
    6. 's' → logprob: -13.875162124633789
    7. 'l' → logprob: -14.500162124633789
    8. ' nombre' → logprob: -14.750162124633789
    9. 'total' → logprob: -14.875162124633789
    10. '   ' → logprob: -15.000162124633789

Token 742: ' total' (ID: 3609)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.027985919266939163
    2. 'len' → logprob: -4.0279860496521
    3. '(' → logprob: -4.6529860496521
    4. 'of' → logprob: -8.652985572814941
    5. '(
' → logprob: -9.652985572814941
    6. 'print' → logprob: -11.527985572814941
    7. '=len' → logprob: -13.652985572814941
    8. '()' → logprob: -13.777985572814941
    9. ' len' → logprob: -14.527985572814941
    10. '(move' → logprob: -14.777985572814941

Token 743: ' de' (ID: 334)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5773605108261108
    2. '(' → logprob: -0.8273605108261108
    3. 'len' → logprob: -7.0773606300354
    4. '(
' → logprob: -7.7023606300354
    5. '(move' → logprob: -9.327360153198242
    6. '()' → logprob: -11.452360153198242
    7. ' (' → logprob: -11.827360153198242
    8. '("' → logprob: -12.702360153198242
    9. '=len' → logprob: -13.202360153198242
    10. 'de' → logprob: -13.327360153198242

Token 744: ' mouvements' (ID: 119420)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.23746155202388763
    2. 'move' → logprob: -2.237461566925049
    3. 'moves' → logprob: -2.987461566925049
    4. ' len' → logprob: -3.112461566925049
    5. ' move' → logprob: -4.737461566925049
    6. ' moves' → logprob: -7.362461566925049
    7. 'mov' → logprob: -8.36246109008789
    8. '(len' → logprob: -9.73746109008789
    9. 'm' → logprob: -10.73746109008789
    10. ' mouvements' → logprob: -11.36246109008789

Token 745: ' réalisés' (ID: 164788)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.875000953674316
    3. '
' → logprob: -16.500001907348633
    4. ' print' → logprob: -16.625001907348633
    5. 'len' → logprob: -17.625001907348633
    6. '``' → logprob: -19.250001907348633
    7. '`
' → logprob: -19.875001907348633
    8. '
' → logprob: -20.125001907348633
    9. ')
' → logprob: -20.875001907348633
    10. '#print' → logprob: -21.250001907348633

Token 746: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.0
    3. '
' → logprob: -17.625
    4. ' print' → logprob: -18.5
    5. 'len' → logprob: -19.5
    6. '``' → logprob: -20.375
    7. '
' → logprob: -21.5
    8. '#print' → logprob: -22.125
    9. '`
' → logprob: -22.375
    10. '  
' → logprob: -23.125

Token 747: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. ' print' → logprob: -17.0
    4. '``' → logprob: -20.5
    5. 'len' → logprob: -22.125
    6. 'Print' → logprob: -23.125
    7. '#print' → logprob: -24.5
    8. '
' → logprob: -24.875
    9. '`' → logprob: -25.0
    10. '(print' → logprob: -25.125

Token 748: ' len' (ID: 4631)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '```' → logprob: -17.75
    4. 'len' → logprob: -23.25
    5. '``' → logprob: -23.5
    6. '#print' → logprob: -24.375
    7. '
' → logprob: -25.125
    8. '	print' → logprob: -25.75
    9. 'Print' → logprob: -25.75
    10. '`' → logprob: -26.0

Token 749: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.0009155054576694965
    2. '(' → logprob: -7.00091552734375
    3. '(m' → logprob: -13.00091552734375
    4. 'move' → logprob: -13.50091552734375
    5. ' (' → logprob: -15.50091552734375
    6. '(
' → logprob: -16.12591552734375
    7. '()' → logprob: -17.25091552734375
    8. ' move' → logprob: -18.75091552734375
    9. '(movie' → logprob: -18.75091552734375
    10. '(M' → logprob: -19.37591552734375

Token 750: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16912341117858887
    2. '())' → logprob: -1.9191234111785889
    3. '()' → logprob: -4.794123649597168
    4. ')
' → logprob: -8.419123649597168
    5. ' )' → logprob: -9.169123649597168
    6. '())
' → logprob: -9.294123649597168
    7. '()
' → logprob: -9.669123649597168
    8. ')#' → logprob: -10.044123649597168
    9. '))' → logprob: -10.919123649597168
    10. '(),' → logprob: -11.794123649597168

Token 751: ' donne' (ID: 30004)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004540294758044183
    2. ')' → logprob: -8.62545394897461
    3. '
' → logprob: -8.87545394897461
    4. ')
' → logprob: -9.25045394897461
    5. ' print' → logprob: -10.37545394897461
    6. ',' → logprob: -13.12545394897461
    7. '(print' → logprob: -13.62545394897461
    8. '```' → logprob: -13.62545394897461
    9. '()
' → logprob: -14.62545394897461
    10. '#print' → logprob: -14.75045394897461

Token 752: ' la' (ID: 557)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3901488482952118
    2. 'len' → logprob: -1.5151488780975342
    3. ' len' → logprob: -2.515148878097534
    4. '()' → logprob: -4.140148639678955
    5. '(' → logprob: -5.140148639678955
    6. ')' → logprob: -8.015149116516113
    7. ' (' → logprob: -9.015149116516113
    8. 'le' → logprob: -10.265149116516113
    9. '=len' → logprob: -10.390149116516113
    10. ' le' → logprob: -10.640149116516113

Token 753: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11483743041753769
    2. ' len' → logprob: -2.739837408065796
    3. '(len' → logprob: -3.739837408065796
    4. 'move' → logprob: -4.739837646484375
    5. ' move' → logprob: -5.239837646484375
    6. 'total' → logprob: -6.489837646484375
    7. 'nombre' → logprob: -6.989837646484375
    8. ' total' → logprob: -7.239837646484375
    9. 'length' → logprob: -7.364837646484375
    10. ' )' → logprob: -7.739837646484375

Token 754: ' de' (ID: 334)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.10027287900447845
    2. '(' → logprob: -2.3502728939056396
    3. ' (' → logprob: -10.100273132324219
    4. '(
' → logprob: -11.475273132324219
    5. '(len' → logprob: -12.350273132324219
    6. '()' → logprob: -12.600273132324219
    7. '(print' → logprob: -13.225273132324219
    8. 'move' → logprob: -13.725273132324219
    9. '(m' → logprob: -13.975273132324219
    10. '(range' → logprob: -14.600273132324219

Token 755: ' la' (ID: 557)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.008396602235734463
    2. '(move' → logprob: -5.258396625518799
    3. ' move' → logprob: -5.758396625518799
    4. '(' → logprob: -13.50839614868164
    5. '	move' → logprob: -15.63339614868164
    6. '(
' → logprob: -16.50839614868164
    7. 'mov' → logprob: -17.13339614868164
    8. '_move' → logprob: -17.50839614868164
    9. '.move' → logprob: -17.63339614868164
    10. '(m' → logprob: -18.13339614868164

Token 756: ' liste' (ID: 31719)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.31392163038253784
    2. '(move' → logprob: -1.3139216899871826
    3. '(' → logprob: -7.5639214515686035
    4. ' move' → logprob: -9.063921928405762
    5. '(
' → logprob: -11.063921928405762
    6. '(m' → logprob: -11.938921928405762
    7. 'mov' → logprob: -14.438921928405762
    8. '	move' → logprob: -14.438921928405762
    9. 'list' → logprob: -14.813921928405762
    10. ' (' → logprob: -15.563921928405762

Token 757: ' '' (ID: 461)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.0538155697286129
    2. '(print' → logprob: -3.6788156032562256
    3. '(' → logprob: -3.8038156032562256
    4. 'print' → logprob: -6.0538153648376465
    5. '()' → logprob: -6.1788153648376465
    6. '(len' → logprob: -8.178815841674805
    7. '(
' → logprob: -9.803815841674805
    8. 'move' → logprob: -9.928815841674805
    9. '(m' → logprob: -12.053815841674805
    10. '(range' → logprob: -12.178815841674805

Token 758: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0001450187264708802
    2. '(move' → logprob: -9.250144958496094
    3. ' move' → logprob: -10.250144958496094
    4. ')' → logprob: -11.250144958496094
    5. '(' → logprob: -15.375144958496094
    6. '	move' → logprob: -16.625144958496094
    7. 'moves' → logprob: -17.000144958496094
    8. 'mov' → logprob: -17.250144958496094
    9. '.move' → logprob: -17.250144958496094
    10. '_move' → logprob: -18.250144958496094

Token 759: '',' (ID: 787)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005752322264015675
    2. '()' → logprob: -5.880752086639404
    3. '()
' → logprob: -6.505752086639404
    4. '(' → logprob: -6.755752086639404
    5. ')' → logprob: -9.005752563476562
    6. '(print' → logprob: -9.130752563476562
    7. '(
' → logprob: -11.255752563476562
    8. ' print' → logprob: -11.880752563476562
    9. ')
' → logprob: -11.880752563476562
    10. ',' → logprob: -12.005752563476562

Token 760: ' soit' (ID: 17293)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007023676764219999
    2. 'len' → logprob: -5.007023811340332
    3. ')' → logprob: -9.007023811340332
    4. ' print' → logprob: -9.007023811340332
    5. ' len' → logprob: -10.007023811340332
    6. '   ' → logprob: -12.132023811340332
    7. 'end' → logprob: -12.257023811340332
    8. '(len' → logprob: -12.257023811340332
    9. '#' → logprob: -13.507023811340332
    10. '```' → logprob: -14.382023811340332

Token 761: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519565224647522
    2. ' len' → logprob: -1.5019564628601074
    3. '(len' → logprob: -10.626956939697266
    4. '=len' → logprob: -13.376956939697266
    5. '   ' → logprob: -14.626956939697266
    6. 'le' → logprob: -14.751956939697266
    7. '	len' → logprob: -15.626956939697266
    8. ' le' → logprob: -15.626956939697266
    9. '[len' → logprob: -15.751956939697266
    10. ' ' → logprob: -15.876956939697266

Token 762: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02155987173318863
    2. ' len' → logprob: -4.271559715270996
    3. 'nombre' → logprob: -5.146559715270996
    4. ' nombre' → logprob: -6.521559715270996
    5. 'total' → logprob: -10.896559715270996
    6. ' number' → logprob: -11.271559715270996
    7. '(len' → logprob: -11.396559715270996
    8. ' total' → logprob: -11.396559715270996
    9. 'number' → logprob: -11.896559715270996
    10. '=len' → logprob: -12.146559715270996

Token 763: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0767846331000328
    2. '(len' → logprob: -3.076784610748291
    3. '(move' → logprob: -3.701784610748291
    4. '(
' → logprob: -5.826784610748291
    5. '()' → logprob: -9.32678508758545
    6. '(print' → logprob: -9.95178508758545
    7. '(

' → logprob: -11.32678508758545
    8. 'len' → logprob: -11.32678508758545
    9. ' (' → logprob: -12.07678508758545
    10. 'move' → logprob: -12.82678508758545

Token 764: ' déplacements' (ID: 193957)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.007927183993160725
    2. ' move' → logprob: -5.632927417755127
    3. 'moves' → logprob: -5.632927417755127
    4. '(move' → logprob: -8.007926940917969
    5. 'mov' → logprob: -8.257926940917969
    6. 'm' → logprob: -9.132926940917969
    7. '
' → logprob: -10.882926940917969
    8. ' mouvements' → logprob: -12.007926940917969
    9. ' moves' → logprob: -12.382926940917969
    10. '	move' → logprob: -12.507926940917969

Token 765: ' enregistr' (ID: 76845)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -14.00000286102295
    3. '```' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.87500286102295
    5. '(print' → logprob: -15.25000286102295
    6. ' print' → logprob: -15.50000286102295
    7. '()
' → logprob: -15.87500286102295
    8. ')' → logprob: -16.000003814697266
    9. '(' → logprob: -16.250003814697266
    10. '#print' → logprob: -17.250003814697266

Token 766: 'és' (ID: 1756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.645531415939331
    2. '(' → logprob: -1.145531415939331
    3. '()' → logprob: -2.520531415939331
    4. ')' → logprob: -3.270531415939331
    5. '(print' → logprob: -3.645531415939331
    6. '(move' → logprob: -5.27053165435791
    7. '(
' → logprob: -6.02053165435791
    8. '()
' → logprob: -6.64553165435791
    9. '('' → logprob: -7.02053165435791
    10. ',' → logprob: -7.14553165435791

Token 767: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '
' → logprob: -16.25
    4. ' print' → logprob: -17.625
    5. '``' → logprob: -19.875
    6. '#print' → logprob: -20.625
    7. '(print' → logprob: -20.625
    8. ')
' → logprob: -20.75
    9. '`
' → logprob: -21.0
    10. 'prin' → logprob: -21.125

Token 768: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -18.625
    4. '
' → logprob: -22.75
    5. '``' → logprob: -22.75
    6. '   ' → logprob: -24.625
    7. 'for' → logprob: -24.75
    8. '#print' → logprob: -25.0
    9. '#' → logprob: -25.375
    10. '`' → logprob: -25.75

Token 769: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0024849306792020798
    2. '(' → logprob: -6.0024847984313965
    3. ' (' → logprob: -11.877485275268555
    4. '()' → logprob: -13.252485275268555
    5. 'len' → logprob: -15.002485275268555
    6. ' len' → logprob: -16.627485275268555
    7. '(length' → logprob: -16.877485275268555
    8. '('' → logprob: -18.252485275268555
    9. '((' → logprob: -18.377485275268555
    10. '(
' → logprob: -18.502485275268555

Token 770: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.0007229181355796754
    2. '(' → logprob: -7.250722885131836
    3. ' (' → logprob: -11.875722885131836
    4. '(m' → logprob: -12.625722885131836
    5. ')' → logprob: -12.875722885131836
    6. 'move' → logprob: -17.250722885131836
    7. '(
' → logprob: -17.500722885131836
    8. '(space' → logprob: -17.875722885131836
    9. '(

' → logprob: -18.250722885131836
    10. ' move' → logprob: -18.375722885131836

Token 771: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020509003661572933
    2. '))' → logprob: -8.500205039978027
    3. ')
' → logprob: -14.000205039978027
    4. ' )' → logprob: -14.750205039978027
    5. '())' → logprob: -15.375205039978027
    6. '()' → logprob: -16.375205993652344
    7. ')))' → logprob: -17.750205993652344
    8. ')`' → logprob: -17.875205993652344
    9. ')#' → logprob: -18.250205993652344
    10. ')")' → logprob: -18.625205993652344

Token 772: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. ' for' → logprob: -11.750008583068848
    3. '#' → logprob: -15.125008583068848
    4. ')' → logprob: -16.125009536743164
    5. '
' → logprob: -16.250009536743164
    6. '```' → logprob: -16.625009536743164
    7. 'i' → logprob: -17.250009536743164
    8. 'f' → logprob: -17.250009536743164
    9. 'For' → logprob: -17.375009536743164
    10. '  
' → logprob: -17.875009536743164

Token 773: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.25
    3. '```' → logprob: -20.25
    4. 'For' → logprob: -21.625
    5. '	for' → logprob: -21.875
    6. '
' → logprob: -22.0
    7. '#' → logprob: -23.125
    8. '``' → logprob: -23.375
    9. '   ' → logprob: -24.25
    10. 'print' → logprob: -24.625

Token 774: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.03297532722353935
    2. 'orrer' → logprob: -3.657975435256958
    3. 'for' → logprob: -5.907975196838379
    4. 'or' → logprob: -5.907975196838379
    5. 'orer' → logprob: -7.157975196838379
    6. '#' → logprob: -8.657975196838379
    7. 'ours' → logprob: -9.782975196838379
    8. 'er' → logprob: -9.907975196838379
    9. ' for' → logprob: -10.032975196838379
    10. 'ourt' → logprob: -10.782975196838379

Token 775: 'ir' (ID: 380)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.20269960165023804
    2. 'orer' → logprob: -2.577699661254883
    3. 'for' → logprob: -3.202699661254883
    4. 'er' → logprob: -3.702699661254883
    5. 'orrer' → logprob: -3.702699661254883
    6. 'or' → logprob: -4.952699661254883
    7. 'rer' → logprob: -5.202699661254883
    8. 'urer' → logprob: -6.202699661254883
    9. '#' → logprob: -6.827699661254883
    10. 'ur' → logprob: -7.327699661254883

Token 776: ' tous' (ID: 10688)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.25203877687454224
    2. '(move' → logprob: -1.5020387172698975
    3. ' move' → logprob: -9.502038955688477
    4. 'range' → logprob: -10.877038955688477
    5. '(m' → logprob: -11.627038955688477
    6. 'for' → logprob: -12.627038955688477
    7. '(
' → logprob: -14.002038955688477
    8. '(range' → logprob: -14.127038955688477
    9. '(' → logprob: -14.127038955688477
    10. '	move' → logprob: -14.377038955688477

Token 777: ' les' (ID: 1341)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.07923675328493118
    2. 'move' → logprob: -2.5792367458343506
    3. '(m' → logprob: -8.20423698425293
    4. ' move' → logprob: -9.95423698425293
    5. '(' → logprob: -10.70423698425293
    6. '(range' → logprob: -14.07923698425293
    7. 'm' → logprob: -14.82923698425293
    8. 'mov' → logprob: -14.95423698425293
    9. '(
' → logprob: -14.95423698425293
    10. ' (' → logprob: -15.07923698425293

Token 778: ' mouvements' (ID: 119420)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5832120180130005
    2. 'm' → logprob: -0.8332120180130005
    3. 'mov' → logprob: -5.583211898803711
    4. 'moves' → logprob: -6.208211898803711
    5. 'mv' → logprob: -6.833211898803711
    6. 'range' → logprob: -8.708211898803711
    7. 'movement' → logprob: -9.083211898803711
    8. ' move' → logprob: -9.708211898803711
    9. 'step' → logprob: -11.833211898803711
    10. ' m' → logprob: -11.958211898803711

Token 779: ' enregistr' (ID: 76845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001544321421533823
    2. ' for' → logprob: -8.875154495239258
    3. '(move' → logprob: -12.250154495239258
    4. '
' → logprob: -12.375154495239258
    5. 'move' → logprob: -12.750154495239258
    6. ':' → logprob: -14.250154495239258
    7. ':
' → logprob: -14.375154495239258
    8. 'in' → logprob: -14.375154495239258
    9. 'while' → logprob: -15.250154495239258
    10. 'from' → logprob: -16.000154495239258

Token 780: 'és' (ID: 1756)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.16456077992916107
    2. 'for' → logprob: -1.9145607948303223
    3. 'ée' → logprob: -5.664560794830322
    4. ' for' → logprob: -8.539560317993164
    5. 'ur' → logprob: -8.914560317993164
    6. 'ées' → logprob: -9.164560317993164
    7. '#' → logprob: -9.289560317993164
    8. 'ange' → logprob: -9.914560317993164
    9. 'range' → logprob: -10.164560317993164
    10. 'ee' → logprob: -10.164560317993164

Token 781: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.0
    3. '
' → logprob: -19.75
    4. '```' → logprob: -23.75
    5. '	for' → logprob: -24.25
    6. '   ' → logprob: -25.25
    7. '#' → logprob: -25.25
    8. 'fo' → logprob: -25.5
    9. 'from' → logprob: -25.875
    10. '\
' → logprob: -25.875

Token 782: ' la' (ID: 557)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -6.2729995988775045e-06
    2. ' move' → logprob: -12.000006675720215
    3. 'range' → logprob: -18.5000057220459
    4. '(move' → logprob: -20.8750057220459
    5. '   ' → logprob: -21.5000057220459
    6. '	move' → logprob: -21.6250057220459
    7. 'mov' → logprob: -23.7500057220459
    8. '.move' → logprob: -23.8750057220459
    9. ' ' → logprob: -24.0000057220459
    10. '
' → logprob: -24.6250057220459

Token 783: ' liste' (ID: 31719)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -6.704273118884885e-07
    2. ' move' → logprob: -14.375000953674316
    3. 'for' → logprob: -16.875
    4. 'range' → logprob: -18.125
    5. 'mov' → logprob: -18.25
    6. '
' → logprob: -19.375
    7. '   ' → logprob: -20.375
    8. '	move' → logprob: -20.75
    9. 'mo' → logprob: -21.0
    10. 'm' → logprob: -21.0

Token 784: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029939545318484306
    2. 'move' → logprob: -3.529939651489258
    3. ' for' → logprob: -8.654939651489258
    4. ' move' → logprob: -11.279939651489258
    5. '(move' → logprob: -13.529939651489258
    6. 'range' → logprob: -14.654939651489258
    7. '
' → logprob: -15.154939651489258
    8. '   ' → logprob: -18.154939651489258
    9. ':' → logprob: -18.279939651489258
    10. 'in' → logprob: -18.904939651489258

Token 785: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.9361264946837764e-07
    2. ' move' → logprob: -15.75
    3. '(move' → logprob: -19.25
    4. '   ' → logprob: -20.25
    5. '	move' → logprob: -21.125
    6. ' ' → logprob: -22.0
    7. '.move' → logprob: -22.25
    8. '  ' → logprob: -22.5
    9. 'range' → logprob: -22.5
    10. 'for' → logprob: -22.625

Token 786: ''
' (ID: 2207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03958187997341156
    2. ':' → logprob: -3.539581775665283
    3. ':
' → logprob: -4.664581775665283
    4. ' for' → logprob: -8.039582252502441
    5. '
' → logprob: -11.039582252502441
    6. '   ' → logprob: -11.664582252502441
    7. ',' → logprob: -12.539582252502441
    8. '.for' → logprob: -12.539582252502441
    9. '):
' → logprob: -13.664582252502441
    10. ')' → logprob: -13.914582252502441

Token 787: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.25
    3. '	for' → logprob: -26.125
    4. '   ' → logprob: -27.25
    5. '
' → logprob: -27.875
    6. '```' → logprob: -28.125
    7. '    
' → logprob: -29.0
    8. 'fo' → logprob: -29.25
    9. '[' → logprob: -29.375
    10. '#' → logprob: -29.625

Token 788: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -23.5
    3. '	for' → logprob: -27.5
    4. '   ' → logprob: -28.0
    5. 'fo' → logprob: -30.5
    6. '```' → logprob: -30.625
    7. '
' → logprob: -32.25
    8. 'For' → logprob: -32.25
    9. 'foreach' → logprob: -32.5
    10. 'from' → logprob: -32.625

Token 789: ' chaque' (ID: 21194)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1711607128381729
    2. 'mv' → logprob: -2.0461606979370117
    3. 'move' → logprob: -4.046160697937012
    4. ' m' → logprob: -5.421160697937012
    5. 'mov' → logprob: -6.046160697937012
    6. ' mv' → logprob: -6.171160697937012
    7. ' move' → logprob: -6.921160697937012
    8. 'mu' → logprob: -9.421160697937012
    9. 'd' → logprob: -9.546160697937012
    10. 'k' → logprob: -9.921160697937012

Token 790: ' mouvement' (ID: 62236)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12012827396392822
    2. 'mv' → logprob: -2.9951281547546387
    3. ' m' → logprob: -3.1201281547546387
    4. 'move' → logprob: -4.620128154754639
    5. ' move' → logprob: -5.995128154754639
    6. ' mv' → logprob: -6.120128154754639
    7. 'mov' → logprob: -6.370128154754639
    8. 'i' → logprob: -6.495128154754639
    9. ' i' → logprob: -7.995128154754639
    10. 'l' → logprob: -8.620128631591797

Token 791: ',' (ID: 11)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.665353000164032
    2. ' in' → logprob: -1.1653530597686768
    3. 'in' → logprob: -2.0403530597686768
    4. 'move' → logprob: -3.4153530597686768
    5. ' m' → logprob: -5.165352821350098
    6. 'mov' → logprob: -6.540352821350098
    7. ' move' → logprob: -6.665352821350098
    8. 'for' → logprob: -7.165352821350098
    9. 'as' → logprob: -7.915352821350098
    10. ':' → logprob: -7.915352821350098

Token 792: ' dé' (ID: 2393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016577722504734993
    2. ' for' → logprob: -4.39157772064209
    3. '   ' → logprob: -5.64157772064209
    4. 'm' → logprob: -8.14157772064209
    5. 'i' → logprob: -9.14157772064209
    6. 'move' → logprob: -9.51657772064209
    7. 'x' → logprob: -11.14157772064209
    8. 'print' → logprob: -11.64157772064209
    9. 'mov' → logprob: -11.76657772064209
    10. ' i' → logprob: -12.64157772064209

Token 793: 'composer' (ID: 165799)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06394971162080765
    2. 'placer' → logprob: -3.1889498233795166
    3. 'f' → logprob: -4.0639495849609375
    4. ' for' → logprob: -6.0639495849609375
    5. 'place' → logprob: -7.6889495849609375
    6. 'placement' → logprob: -8.313949584960938
    7. 'pla' → logprob: -9.188949584960938
    8. 'fin' → logprob: -9.438949584960938
    9. 'pl' → logprob: -9.563949584960938
    10. '   ' → logprob: -9.688949584960938

Token 794: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09517543762922287
    2. 'move' → logprob: -2.7201755046844482
    3. 'x' → logprob: -3.9701755046844482
    4. 'm' → logprob: -6.720175266265869
    5. '(i' → logprob: -6.845175266265869
    6. 'u' → logprob: -7.220175266265869
    7. 's' → logprob: -7.595175266265869
    8. 'start' → logprob: -8.220175743103027
    9. 'pos' → logprob: -8.345175743103027
    10. 't' → logprob: -8.595175743103027

Token 795: ' coordonnées' (ID: 181895)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8677516579627991
    2. 'i' → logprob: -1.2427515983581543
    3. 'm' → logprob: -1.3677515983581543
    4. 'mi' → logprob: -4.367751598358154
    5. 'move' → logprob: -4.867751598358154
    6. 'l' → logprob: -5.492751598358154
    7. 'r' → logprob: -6.117751598358154
    8. 'li' → logprob: -6.492751598358154
    9. '(i' → logprob: -6.617751598358154
    10. 's' → logprob: -6.742751598358154

Token 796: ' stock' (ID: 6546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07395805418491364
    2. 'x' → logprob: -2.948958158493042
    3. ' for' → logprob: -4.698957920074463
    4. 'i' → logprob: -5.448957920074463
    5. 'move' → logprob: -5.448957920074463
    6. 'r' → logprob: -7.448957920074463
    7. 'u' → logprob: -8.698958396911621
    8. 's' → logprob: -9.198958396911621
    9. 'm' → logprob: -9.323958396911621
    10. ' move' → logprob: -10.198958396911621

Token 797: 'ées' (ID: 5161)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4437999427318573
    2. '=i' → logprob: -2.5687999725341797
    3. 'in' → logprob: -2.6937999725341797
    4. ' in' → logprob: -2.8187999725341797
    5. '   ' → logprob: -3.0687999725341797
    6. ' i' → logprob: -3.5687999725341797
    7. '(i' → logprob: -4.19379997253418
    8. 'dans' → logprob: -4.19379997253418
    9. ' dans' → logprob: -4.56879997253418
    10. ' en' → logprob: -4.69379997253418

Token 798: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9059113264083862
    2. 'for' → logprob: -0.9059113264083862
    3. ' in' → logprob: -2.905911445617676
    4. 'i' → logprob: -3.155911445617676
    5. '(i' → logprob: -3.280911445617676
    6. 'move' → logprob: -4.155911445617676
    7. 'into' → logprob: -4.530911445617676
    8. 'x' → logprob: -4.780911445617676
    9. 'as' → logprob: -5.655911445617676
    10. 'm' → logprob: -5.655911445617676

Token 799: ' la' (ID: 557)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.23262609541416168
    2. 'm' → logprob: -1.6076260805130005
    3. 'mv' → logprob: -5.107625961303711
    4. 'mov' → logprob: -7.607625961303711
    5. 'step' → logprob: -9.107625961303711
    6. 'x' → logprob: -9.232625961303711
    7. ' move' → logprob: -9.232625961303711
    8. 'movement' → logprob: -9.482625961303711
    9. 'mo' → logprob: -10.107625961303711
    10. 'moves' → logprob: -10.232625961303711

Token 800: ' liste' (ID: 31719)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.08200519531965256
    2. 'for' → logprob: -2.582005262374878
    3. 'm' → logprob: -5.832005023956299
    4. 'mov' → logprob: -9.457005500793457
    5. ' move' → logprob: -10.207005500793457
    6. 'movement' → logprob: -11.457005500793457
    7. 'range' → logprob: -11.582005500793457
    8. ' for' → logprob: -11.707005500793457
    9. 'mv' → logprob: -12.207005500793457
    10. 'moves' → logprob: -12.457005500793457

Token 801: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18935352563858032
    2. 'move' → logprob: -2.1893534660339355
    3. 'x' → logprob: -3.4393534660339355
    4. ' for' → logprob: -4.4393534660339355
    5. 'i' → logprob: -5.0643534660339355
    6. 'm' → logprob: -5.8143534660339355
    7. 'r' → logprob: -6.0643534660339355
    8. ' move' → logprob: -6.6893534660339355
    9. 'in' → logprob: -6.8143534660339355
    10. 's' → logprob: -7.9393534660339355

Token 802: ' quatre' (ID: 41209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05484583601355553
    2. 'i' → logprob: -3.5548458099365234
    3. 'r' → logprob: -4.304845809936523
    4. 's' → logprob: -5.679845809936523
    5. 'move' → logprob: -5.804845809936523
    6. 'l' → logprob: -6.804845809936523
    7. 'u' → logprob: -7.054845809936523
    8. 'si' → logprob: -7.304845809936523
    9. 'start' → logprob: -7.679845809936523
    10. 'm' → logprob: -7.804845809936523

Token 803: ' variables' (ID: 13955)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0193432569503784
    2. 'i' → logprob: -1.1443432569503784
    3. 'for' → logprob: -1.1443432569503784
    4. 'r' → logprob: -7.019343376159668
    5. 'v' → logprob: -7.769343376159668
    6. 'm' → logprob: -8.269343376159668
    7. ' for' → logprob: -9.144343376159668
    8. ' i' → logprob: -9.144343376159668
    9. 'l' → logprob: -9.269343376159668
    10. 'k' → logprob: -9.644343376159668

Token 804: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000652389950118959
    2. 'i' → logprob: -7.625652313232422
    3. ' for' → logprob: -8.875652313232422
    4. 'x' → logprob: -10.875652313232422
    5. 'r' → logprob: -13.000652313232422
    6. '   ' → logprob: -13.375652313232422
    7. 'l' → logprob: -15.375652313232422
    8. 'u' → logprob: -15.500652313232422
    9. '(i' → logprob: -15.875652313232422
    10. '       ' → logprob: -16.000652313232422

Token 805: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02445909008383751
    2. 'r' → logprob: -4.024458885192871
    3. 'si' → logprob: -5.524458885192871
    4. 's' → logprob: -6.399458885192871
    5. 'i' → logprob: -8.274458885192871
    6. 'from' → logprob: -8.524458885192871
    7. 'y' → logprob: -10.149458885192871
    8. 'p' → logprob: -10.649458885192871
    9. 'sx' → logprob: -10.649458885192871
    10. 'a' → logprob: -11.024458885192871

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26491671800613403
    2. '1' → logprob: -1.5149166584014893
    3. ',y' → logprob: -4.889916896820068
    4. 'i' → logprob: -5.889916896820068
    5. '0' → logprob: -6.764916896820068
    6. '_start' → logprob: -7.389916896820068
    7. ' ,' → logprob: -8.76491641998291
    8. '_from' → logprob: -9.13991641998291
    9. '_,' → logprob: -9.26491641998291
    10. '_i' → logprob: -9.26491641998291

Token 807: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. 'x' → logprob: -17.750123977661133
    4. 'i' → logprob: -20.375123977661133
    5. '	y' → logprob: -20.625123977661133
    6. '   ' → logprob: -21.125123977661133
    7. 'Y' → logprob: -21.125123977661133
    8. ',y' → logprob: -21.250123977661133
    9. 'yi' → logprob: -21.750123977661133
    10. '
' → logprob: -21.750123977661133

Token 808: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004519008100032806
    2. 'y' → logprob: -5.879518985748291
    3. ',y' → logprob: -7.254518985748291
    4. 'x' → logprob: -8.25451946258545
    5. ' ,' → logprob: -8.37951946258545
    6. '_,' → logprob: -8.62951946258545
    7. 'z' → logprob: -8.75451946258545
    8. '1' → logprob: -9.37951946258545
    9. ',x' → logprob: -10.87951946258545
    10. ' y' → logprob: -11.12951946258545

Token 809: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11800763756036758
    2. 'z' → logprob: -2.9930076599121094
    3. 'X' → logprob: -3.9930076599121094
    4. 'sx' → logprob: -3.9930076599121094
    5. 'nx' → logprob: -4.493007659912109
    6. 'u' → logprob: -5.868007659912109
    7. 's' → logprob: -5.868007659912109
    8. 'px' → logprob: -6.368007659912109
    9. 'xx' → logprob: -6.493007659912109
    10. 'tx' → logprob: -6.868007659912109

Token 810: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010369308292865753
    2. '2' → logprob: -4.760369300842285
    3. ',' → logprob: -6.760369300842285
    4. 's' → logprob: -8.135369300842285
    5. '_from' → logprob: -8.635369300842285
    6. '0' → logprob: -10.010369300842285
    7. 'from' → logprob: -10.135369300842285
    8. '_start' → logprob: -11.385369300842285
    9. '_' → logprob: -12.385369300842285
    10. 'a' → logprob: -13.135369300842285

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7954958821064793e-05
    2. ',y' → logprob: -11.125018119812012
    3. ' ,' → logprob: -12.875018119812012
    4. '1' → logprob: -15.000018119812012
    5. '_,' → logprob: -16.000017166137695
    6. ',
' → logprob: -16.875017166137695
    7. ',x' → logprob: -17.500017166137695
    8. 'y' → logprob: -17.625017166137695
    9. '4' → logprob: -18.375017166137695
    10. '=' → logprob: -18.375017166137695

Token 812: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007106438861228526
    2. ' y' → logprob: -7.250710487365723
    3. 'x' → logprob: -15.375710487365723
    4. 'Y' → logprob: -15.375710487365723
    5. 'z' → logprob: -16.12571144104004
    6. '   ' → logprob: -18.37571144104004
    7. '	y' → logprob: -18.87571144104004
    8. 'yj' → logprob: -19.62571144104004
    9. ',y' → logprob: -20.12571144104004
    10. '  ' → logprob: -20.25071144104004

Token 813: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04318803921341896
    2. '1' → logprob: -3.1681880950927734
    3. '2' → logprob: -10.168188095092773
    4. ',x' → logprob: -10.168188095092773
    5. 'for' → logprob: -10.293188095092773
    6. ' ,' → logprob: -10.418188095092773
    7. ',y' → logprob: -11.293188095092773
    8. '4' → logprob: -11.793188095092773
    9. ',m' → logprob: -11.793188095092773
    10. '_,' → logprob: -12.168188095092773

Token 814: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012198820477351546
    2. ' for' → logprob: -6.751219749450684
    3. '
' → logprob: -10.626219749450684
    4. '   ' → logprob: -11.001219749450684
    5. 'x' → logprob: -13.001219749450684
    6. ',' → logprob: -13.001219749450684
    7. '    
' → logprob: -13.251219749450684
    8. '```' → logprob: -13.626219749450684
    9. ' 
' → logprob: -15.626219749450684
    10. 'in' → logprob: -15.876219749450684

Token 815: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.074907287256792e-05
    2. ' for' → logprob: -9.75006103515625
    3. '
' → logprob: -13.62506103515625
    4. '```' → logprob: -13.75006103515625
    5. '   ' → logprob: -16.62506103515625
    6. '    
' → logprob: -17.50006103515625
    7. 'x' → logprob: -18.12506103515625
    8. '  
' → logprob: -18.25006103515625
    9. '	for' → logprob: -18.87506103515625
    10. 'in' → logprob: -20.12506103515625

Token 816: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00272058742120862
    2. ' x' → logprob: -6.127720355987549
    3. 'move' → logprob: -7.627720355987549
    4. ' move' → logprob: -10.377720832824707
    5. 'i' → logprob: -11.502720832824707
    6. '(x' → logprob: -12.002720832824707
    7. 'm' → logprob: -14.252720832824707
    8. ' i' → logprob: -16.12771987915039
    9. '[x' → logprob: -16.37771987915039
    10. '(move' → logprob: -16.62771987915039

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003589416155591607
    2. ',y' → logprob: -8.125358581542969
    3. ' ,' → logprob: -9.750358581542969
    4. ',x' → logprob: -12.875358581542969
    5. 'in' → logprob: -14.250358581542969
    6. ' in' → logprob: -14.625358581542969
    7. ',i' → logprob: -14.875358581542969
    8. ',j' → logprob: -15.625358581542969
    9. ',n' → logprob: -16.37535858154297
    10. ',v' → logprob: -17.00035858154297

Token 818: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.615255839889869e-05
    2. ' y' → logprob: -9.250096321105957
    3. 'x' → logprob: -19.12509536743164
    4. ',y' → logprob: -22.37509536743164
    5. '
' → logprob: -22.75009536743164
    6. ' ' → logprob: -23.00009536743164
    7. '	y' → logprob: -23.12509536743164
    8. '

' → logprob: -23.37509536743164
    9. '    ' → logprob: -23.75009536743164
    10. '  ' → logprob: -24.12509536743164

Token 819: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024096666311379522
    2. ',x' → logprob: -8.37524127960205
    3. ' ,' → logprob: -12.25024127960205
    4. ',z' → logprob: -12.37524127960205
    5. 'x' → logprob: -14.75024127960205
    6. '_,' → logprob: -15.00024127960205
    7. '1' → logprob: -15.87524127960205
    8. ',y' → logprob: -16.125240325927734
    9. ',w' → logprob: -16.625240325927734
    10. ',_' → logprob: -16.750240325927734

Token 820: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.469590491382405e-05
    2. 'X' → logprob: -10.00007438659668
    3. ' x' → logprob: -10.87507438659668
    4. 'z' → logprob: -11.87507438659668
    5. 'dx' → logprob: -13.87507438659668
    6. 'xx' → logprob: -14.37507438659668
    7. 'xp' → logprob: -14.37507438659668
    8. 'tx' → logprob: -15.12507438659668
    9. 'sx' → logprob: -15.12507438659668
    10. 'nx' → logprob: -15.62507438659668

Token 821: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04938659816980362
    2. '2' → logprob: -3.049386501312256
    3. ' ,' → logprob: -7.174386501312256
    4. ',x' → logprob: -11.174386978149414
    5. '_,' → logprob: -11.674386978149414
    6. '1' → logprob: -12.299386978149414
    7. ' ' → logprob: -13.799386978149414
    8. '+' → logprob: -14.174386978149414
    9. '```' → logprob: -14.299386978149414
    10. 'w' → logprob: -14.549386978149414

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',y' → logprob: -14.000003814697266
    4. ',x' → logprob: -17.750003814697266
    5. '_,' → logprob: -18.250003814697266
    6. ' in' → logprob: -19.000003814697266
    7. ',v' → logprob: -19.625003814697266
    8. ',user' → logprob: -19.625003814697266
    9. ',w' → logprob: -20.000003814697266
    10. '‌,' → logprob: -20.000003814697266

Token 823: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002659847668837756
    2. ' y' → logprob: -8.250266075134277
    3. 'x' → logprob: -12.375266075134277
    4. 'w' → logprob: -15.250266075134277
    5. 'z' → logprob: -16.25026512145996
    6. 's' → logprob: -18.75026512145996
    7. ' ' → logprob: -19.50026512145996
    8. '   ' → logprob: -19.62526512145996
    9. 'j' → logprob: -19.87526512145996
    10. 'Y' → logprob: -20.12526512145996

Token 824: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16143691539764404
    2. ',' → logprob: -1.911436915397644
    3. ' in' → logprob: -7.036437034606934
    4. 'in' → logprob: -9.036437034606934
    5. '+' → logprob: -10.036437034606934
    6. '₂' → logprob: -10.161437034606934
    7. '<|end|>' → logprob: -10.661437034606934
    8. ' ,' → logprob: -10.911437034606934
    9. '```' → logprob: -10.911437034606934
    10. '.' → logprob: -11.286437034606934

Token 825: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231688022613525
    2. ' in' → logprob: -0.8981688022613525
    3. '	in' → logprob: -10.523168563842773
    4. ',' → logprob: -11.398168563842773
    5. '   ' → logprob: -13.023168563842773
    6. '_in' → logprob: -14.023168563842773
    7. ' ' → logprob: -14.273168563842773
    8. '  ' → logprob: -14.273168563842773
    9. 'In' → logprob: -14.648168563842773
    10. ':' → logprob: -14.648168563842773

Token 826: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.676292231422849e-05
    2. ' move' → logprob: -11.000017166137695
    3. '(move' → logprob: -19.250017166137695
    4. '	move' → logprob: -20.625017166137695
    5. 'mov' → logprob: -21.875017166137695
    6. '   ' → logprob: -21.875017166137695
    7. '
' → logprob: -21.875017166137695
    8. 'range' → logprob: -22.625017166137695
    9. 'mo' → logprob: -22.750017166137695
    10. 'Move' → logprob: -22.875017166137695

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000633566698525101
    2. ':
' → logprob: -7.375633716583252
    3. 'print' → logprob: -12.750633239746094
    4. ' :' → logprob: -13.500633239746094
    5. ',' → logprob: -14.000633239746094
    6. '):' → logprob: -14.375633239746094
    7. ' print' → logprob: -14.625633239746094
    8. '   ' → logprob: -14.875633239746094
    9. ':
' → logprob: -16.375633239746094
    10. '.print' → logprob: -16.500633239746094

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011746286181733012
    2. ' print' → logprob: -6.876174449920654
    3. 'print' → logprob: -9.001174926757812
    4. '       ' → logprob: -11.126174926757812
    5. '	print' → logprob: -13.501174926757812
    6. '   ' → logprob: -13.501174926757812
    7. '```' → logprob: -14.126174926757812
    8. ',' → logprob: -16.376174926757812
    9. '<|end|>' → logprob: -16.501174926757812
    10. '.print' → logprob: -17.126174926757812

Token 829: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24621930718421936
    2. '   ' → logprob: -1.996219277381897
    3. ' print' → logprob: -2.4962193965911865
    4. '	print' → logprob: -12.496219635009766
    5. '       ' → logprob: -14.371219635009766
    6. '```' → logprob: -14.371219635009766
    7. '.print' → logprob: -15.371219635009766
    8. '   ' → logprob: -16.621219635009766
    9. '    ' → logprob: -16.871219635009766
    10. '#print' → logprob: -17.121219635009766

Token 830: ' Ajouter' (ID: 165754)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. '	print' → logprob: -22.3750057220459
    5. 'printf' → logprob: -23.1250057220459
    6. '```' → logprob: -23.5000057220459
    7. 'pr' → logprob: -24.5000057220459
    8. '#print' → logprob: -24.7500057220459
    9. 'Print' → logprob: -25.0000057220459
    10. '
' → logprob: -25.2500057220459

Token 831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030667785555124283
    2. ' ' → logprob: -3.530667781829834
    3. '   ' → logprob: -7.155667781829834
    4. ' a' → logprob: -10.280668258666992
    5. '    ' → logprob: -10.655668258666992
    6. ' +' → logprob: -11.030668258666992
    7. '"' → logprob: -11.155668258666992
    8. '(' → logprob: -11.280668258666992
    9. ' x' → logprob: -12.280668258666992
    10. ' "' → logprob: -12.655668258666992

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004947714623995125
    2. ' ' → logprob: -7.625494956970215
    3. '   ' → logprob: -12.250494956970215
    4. '+' → logprob: -14.000494956970215
    5. ' +' → logprob: -14.000494956970215
    6. 'print' → logprob: -15.625494956970215
    7. '    ' → logprob: -16.5004940032959
    8. ' print' → logprob: -16.7504940032959
    9. '  ' → logprob: -17.3754940032959
    10. ' +=' → logprob: -18.6254940032959

Token 833: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060144659131765366
    2. ')' → logprob: -3.8101446628570557
    3. '   ' → logprob: -3.8101446628570557
    4. ' ,' → logprob: -5.435144424438477
    5. '(x' → logprob: -5.810144424438477
    6. '(' → logprob: -6.310144424438477
    7. '<|end|>' → logprob: -6.435144424438477
    8. 'print' → logprob: -7.060144424438477
    9. ',x' → logprob: -7.560144424438477
    10. '}' → logprob: -8.060144424438477

Token 834: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012601125054061413
    2. 'print' → logprob: -4.637600898742676
    3. ' x' → logprob: -5.887600898742676
    4. '(x' → logprob: -11.012600898742676
    5. ' print' → logprob: -11.137600898742676
    6. ')' → logprob: -11.137600898742676
    7. '   ' → logprob: -11.762600898742676
    8. ' ' → logprob: -11.887600898742676
    9. '```' → logprob: -13.637600898742676
    10. '`' → logprob: -14.012600898742676

Token 835: ' coord' (ID: 25819)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027535242959856987
    2. '<|end|>' → logprob: -4.652535438537598
    3. ' x' → logprob: -5.277535438537598
    4. 'print' → logprob: -5.277535438537598
    5. ')' → logprob: -5.402535438537598
    6. '(x' → logprob: -6.527535438537598
    7. ' ' → logprob: -7.527535438537598
    8. ',' → logprob: -8.277535438537598
    9. ' ,' → logprob: -8.902535438537598
    10. ' )' → logprob: -8.902535438537598

Token 836: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.5301961898803711
    2. 'onnées' → logprob: -1.405196189880371
    3. 'x' → logprob: -2.405196189880371
    4. 'on' → logprob: -3.530196189880371
    5. 'ès' → logprob: -4.280196189880371
    6. '   ' → logprob: -5.280196189880371
    7. 'es' → logprob: -5.530196189880371
    8. 'onné' → logprob: -5.780196189880371
    9. '(x' → logprob: -6.030196189880371
    10. 'onne' → logprob: -6.280196189880371

Token 837: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04458652436733246
    2. '   ' → logprob: -3.544586420059204
    3. ' ,' → logprob: -5.044586658477783
    4. ')' → logprob: -5.544586658477783
    5. 'print' → logprob: -6.294586658477783
    6. ',x' → logprob: -7.294586658477783
    7. '(' → logprob: -7.544586658477783
    8. '{' → logprob: -8.044586181640625
    9. '(x' → logprob: -8.169586181640625
    10. '+' → logprob: -9.169586181640625

Token 838: ' convertir' (ID: 79223)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5784268975257874
    2. 'aff' → logprob: -1.5784268379211426
    3. 'l' → logprob: -1.9534268379211426
    4. 'pass' → logprob: -3.5784268379211426
    5. '#' → logprob: -3.8284268379211426
    6. '   ' → logprob: -4.578426837921143
    7. ' l' → logprob: -5.328426837921143
    8. ' print' → logprob: -5.578426837921143
    9. ' les' → logprob: -5.578426837921143
    10. 'les' → logprob: -5.703426837921143

Token 839: ' de' (ID: 334)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0017633438110352
    2. 'x' → logprob: -1.2517633438110352
    3. 'les' → logprob: -1.7517633438110352
    4. '(x' → logprob: -2.501763343811035
    5. ' en' → logprob: -3.376763343811035
    6. ' x' → logprob: -3.876763343811035
    7. ' ' → logprob: -5.376763343811035
    8. ' la' → logprob: -6.001763343811035
    9. '   ' → logprob: -6.126763343811035
    10. 'en' → logprob: -6.126763343811035

Token 840: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6754547953605652
    2. '0' → logprob: -0.8004547953605652
    3. '1' → logprob: -3.55045485496521
    4. 'coordinates' → logprob: -6.050454616546631
    5. ' zéro' → logprob: -6.050454616546631
    6. ' zero' → logprob: -6.425454616546631
    7. 'x' → logprob: -6.425454616546631
    8. ' coordinates' → logprob: -7.550454616546631
    9. '```' → logprob: -7.550454616546631
    10. ' coordonnées' → logprob: -7.675454616546631

Token 841: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011139309965074062
    2. ' ' → logprob: -5.011139392852783
    3. 'z' → logprob: -6.511139392852783
    4. 'index' → logprob: -6.886139392852783
    5. '1' → logprob: -7.261139392852783
    6. 'indice' → logprob: -8.261138916015625
    7. 'i' → logprob: -8.761138916015625
    8. 'indices' → logprob: -8.886138916015625
    9. ' zéro' → logprob: -9.261138916015625
    10. ' index' → logprob: -9.386138916015625

Token 842: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1157190352678299
    2. 'index' → logprob: -2.8657190799713135
    3. 'indice' → logprob: -2.9907190799713135
    4. 'indices' → logprob: -6.365718841552734
    5. 'z' → logprob: -8.740718841552734
    6. 'origine' → logprob: -10.240718841552734
    7. 'base' → logprob: -10.365718841552734
    8. '#' → logprob: -10.615718841552734
    9. 'zero' → logprob: -10.990718841552734
    10. '1' → logprob: -11.115718841552734

Token 843: 'ation' (ID: 387)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2974866032600403
    2. 'é' → logprob: -2.7974865436553955
    3. 'ation' → logprob: -2.9224865436553955
    4. '[' → logprob: -3.4224865436553955
    5. ' ' → logprob: -3.9224865436553955
    6. ' basé' → logprob: -4.172486782073975
    7. '+' → logprob: -4.672486782073975
    8. ' de' → logprob: -4.672486782073975
    9. '-based' → logprob: -4.797486782073975
    10. 'x' → logprob: -5.297486782073975

Token 844: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21158383786678314
    2. '[' → logprob: -3.0865838527679443
    3. '(x' → logprob: -3.7115838527679443
    4. 'à' → logprob: -4.336583614349365
    5. '[i' → logprob: -4.336583614349365
    6. ' ' → logprob: -4.461583614349365
    7. ',' → logprob: -4.586583614349365
    8. 'from' → logprob: -4.711583614349365
    9. ' en' → logprob: -5.086583614349365
    10. ' à' → logprob: -5.086583614349365

Token 845: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3686061501502991
    2. '1' → logprob: -1.3686060905456543
    3. 'l' → logprob: -3.3686060905456543
    4. 'la' → logprob: -4.243606090545654
    5. ' partir' → logprob: -6.743606090545654
    6. 'part' → logprob: -7.493606090545654
    7. '#' → logprob: -7.743606090545654
    8. ' la' → logprob: -7.993606090545654
    9. 'zero' → logprob: -8.118606567382812
    10. ' ' → logprob: -8.368606567382812

Token 846: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.06317044049501419
    2. ' de' → logprob: -2.8131704330444336
    3. '0' → logprob: -6.938170433044434
    4. 'd' → logprob: -8.438170433044434
    5. '1' → logprob: -11.688170433044434
    6. '#' → logprob: -12.438170433044434
    7. '_de' → logprob: -13.688170433044434
    8. 'du' → logprob: -15.188170433044434
    9. 'def' → logprob: -15.188170433044434
    10. 'z' → logprob: -15.313170433044434

Token 847: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.375003814697266
    4. ' zéro' → logprob: -16.000003814697266
    5. 'zero' → logprob: -17.375003814697266
    6. ' zero' → logprob: -19.000003814697266
    7. '```' → logprob: -19.750003814697266
    8. 'z' → logprob: -20.000003814697266
    9. '
' → logprob: -20.500003814697266
    10. '۰' → logprob: -20.625003814697266

Token 848: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. '1' → logprob: -9.000123023986816
    3. 'zero' → logprob: -16.875123977661133
    4. ' zéro' → logprob: -17.375123977661133
    5. ' ' → logprob: -18.375123977661133
    6. '```' → logprob: -19.875123977661133
    7. 'z' → logprob: -19.875123977661133
    8. '
' → logprob: -21.125123977661133
    9. '۰' → logprob: -21.500123977661133
    10. '０' → logprob: -21.625123977661133

Token 849: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08084344863891602
    2. '   ' → logprob: -2.955843448638916
    3. 'print' → logprob: -4.330843448638916
    4. ' ,' → logprob: -5.205843448638916
    5. ')' → logprob: -5.330843448638916
    6. '<|end|>' → logprob: -7.330843448638916
    7. '    
' → logprob: -7.955843448638916
    8. ',
' → logprob: -8.455842971801758
    9. ' print' → logprob: -8.580842971801758
    10. ';' → logprob: -8.830842971801758

Token 850: 'comm' (ID: 2280)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1155964806675911
    2. ')' → logprob: -3.2405965328216553
    3. '1' → logprob: -3.4905965328216553
    4. 'x' → logprob: -3.8655965328216553
    5. ' ' → logprob: -4.740596294403076
    6. ' x' → logprob: -5.115596294403076
    7. ' )' → logprob: -5.740596294403076
    8. '(x' → logprob: -8.990596771240234
    9. ' zéro' → logprob: -9.740596771240234
    10. '```' → logprob: -9.865596771240234

Token 851: 'une' (ID: 2561)
  Prédit: 'ence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.8353099226951599
    2. 'encé' → logprob: -0.9603099226951599
    3. 'e' → logprob: -2.5853099822998047
    4. 'enç' → logprob: -3.4603099822998047
    5. 'anç' → logprob: -3.8353099822998047
    6. 'ent' → logprob: -4.460309982299805
    7. 'encement' → logprob: -4.835309982299805
    8. 'en' → logprob: -5.085309982299805
    9. 'é' → logprob: -5.085309982299805
    10. 'ant' → logprob: -5.460309982299805

Token 852: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9179592132568359
    2. ' à' → logprob: -1.417959213256836
    3. ',' → logprob: -1.917959213256836
    4. ' dans' → logprob: -2.917959213256836
    5. ' en' → logprob: -3.042959213256836
    6. 'dans' → logprob: -3.292959213256836
    7. ' aux' → logprob: -3.542959213256836
    8. 'à' → logprob: -4.292959213256836
    9. ' in' → logprob: -5.292959213256836
    10. ' au' → logprob: -5.292959213256836

Token 853: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.08028969168663025
    2. 'python' → logprob: -2.830289602279663
    3. 'program' → logprob: -4.955289840698242
    4. ' Python' → logprob: -5.080289840698242
    5. ' programmation' → logprob: -5.955289840698242
    6. 'print' → logprob: -7.205289840698242
    7. '0' → logprob: -7.580289840698242
    8. 'programm' → logprob: -8.205289840698242
    9. 'range' → logprob: -8.580289840698242
    10. '#' → logprob: -8.705289840698242

Token 854: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021236150059849024
    2. ',' → logprob: -6.502123832702637
    3. '   ' → logprob: -7.752123832702637
    4. ' )' → logprob: -8.877123832702637
    5. ' ,' → logprob: -11.127123832702637
    6. '),' → logprob: -11.377123832702637
    7. ')
' → logprob: -11.877123832702637
    8. '+' → logprob: -12.877123832702637
    9. ' to' → logprob: -13.002123832702637
    10. ')+' → logprob: -13.002123832702637

Token 855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009364430792629719
    2. ':' → logprob: -5.509364604949951
    3. ',' → logprob: -5.884364604949951
    4. ' print' → logprob: -6.759364604949951
    5. 'print' → logprob: -7.384364604949951
    6. ')' → logprob: -8.384364128112793
    7. '    
' → logprob: -8.884364128112793
    8. '       ' → logprob: -9.384364128112793
    9. ' ,' → logprob: -9.509364128112793
    10. '    ' → logprob: -10.259364128112793

Token 856: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09011367708444595
    2. 'print' → logprob: -2.965113639831543
    3. ' print' → logprob: -3.590113639831543
    4. ')' → logprob: -5.215113639831543
    5. '    ' → logprob: -7.590113639831543
    6. ' x' → logprob: -8.090113639831543
    7. '    
' → logprob: -8.465113639831543
    8. ',' → logprob: -8.715113639831543
    9. 'x' → logprob: -8.840113639831543
    10. ' )' → logprob: -9.465113639831543

Token 857: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3717442452907562
    2. ' print' → logprob: -1.3717442750930786
    3. 'print' → logprob: -2.871744155883789
    4. '    ' → logprob: -9.246744155883789
    5. ' x' → logprob: -10.621744155883789
    6. '	print' → logprob: -10.996744155883789
    7. '   ' → logprob: -11.121744155883789
    8. ')' → logprob: -11.371744155883789
    9. ',' → logprob: -11.371744155883789
    10. '```' → logprob: -12.371744155883789

Token 858: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04080911725759506
    2. 'l' → logprob: -4.165809154510498
    3. ' une' → logprob: -4.665809154510498
    4. ' ' → logprob: -5.415809154510498
    5. ' l' → logprob: -5.790809154510498
    6. 'une' → logprob: -6.040809154510498
    7. 'la' → logprob: -6.290809154510498
    8. ' des' → logprob: -6.915809154510498
    9. 'des' → logprob: -7.665809154510498
    10. ' la' → logprob: -7.915809154510498

Token 859: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1132138967514038
    2. '1' → logprob: -1.6132138967514038
    3. 'a' → logprob: -2.1132140159606934
    4. ''espace' → logprob: -2.3632140159606934
    5. ''' → logprob: -2.6132140159606934
    6. ''utilisateur' → logprob: -3.2382140159606934
    7. 'x' → logprob: -3.7382140159606934
    8. 'es' → logprob: -3.9882140159606934
    9. ''ordre' → logprob: -4.613214015960693
    10. ' ' → logprob: -4.738214015960693

Token 860: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024288296699523926
    2. 'index' → logprob: -3.7742881774902344
    3. '#' → logprob: -8.524288177490234
    4. 'indice' → logprob: -8.649288177490234
    5. 'indices' → logprob: -8.899288177490234
    6. ' ' → logprob: -8.899288177490234
    7. ' index' → logprob: -9.399288177490234
    8. ''utilisateur' → logprob: -10.399288177490234
    9. '```' → logprob: -10.399288177490234
    10. 'une' → logprob: -10.649288177490234

Token 861: 'ation' (ID: 387)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8996636271476746
    2. '+' → logprob: -1.0246636867523193
    3. ' +' → logprob: -2.0246636867523193
    4. 'ation' → logprob: -2.6496636867523193
    5. '0' → logprob: -4.77466344833374
    6. '   ' → logprob: -5.39966344833374
    7. ' ' → logprob: -5.39966344833374
    8. 'é' → logprob: -5.89966344833374
    9. 'x' → logprob: -6.39966344833374
    10. '+x' → logprob: -6.39966344833374

Token 862: ' à' (ID: 1221)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0621529817581177
    2. '+' → logprob: -1.1871529817581177
    3. '1' → logprob: -1.8121529817581177
    4. ' à' → logprob: -2.187152862548828
    5. ' ' → logprob: -3.187152862548828
    6. ' en' → logprob: -4.937152862548828
    7. ' plus' → logprob: -5.187152862548828
    8. '   ' → logprob: -5.562152862548828
    9. ' des' → logprob: -5.687152862548828
    10. ' de' → logprob: -5.937152862548828

Token 863: ' partir' (ID: 12100)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006376196397468448
    2. ' ' → logprob: -7.375637531280518
    3. ' partir' → logprob: -12.250638008117676
    4. '0' → logprob: -12.625638008117676
    5. '#' → logprob: -13.625638008117676
    6. 'from' → logprob: -14.875638008117676
    7. 'l' → logprob: -15.125638008117676
    8. 'un' → logprob: -15.125638008117676
    9. '+' → logprob: -16.00063705444336
    10. '```' → logprob: -16.12563705444336

Token 864: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.76849365234375
    2. 'de' → logprob: -0.76849365234375
    3. '1' → logprob: -2.64349365234375
    4. '=' → logprob: -6.89349365234375
    5. 'd' → logprob: -8.26849365234375
    6. '   ' → logprob: -9.14349365234375
    7. '0' → logprob: -10.64349365234375
    8. '(' → logprob: -11.01849365234375
    9. '#' → logprob: -11.26849365234375
    10. ' =' → logprob: -11.51849365234375

Token 865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'un' → logprob: -15.750066757202148
    4. '0' → logprob: -15.875066757202148
    5. '   ' → logprob: -17.37506675720215
    6. '
' → logprob: -18.37506675720215
    7. '  ' → logprob: -19.12506675720215
    8. '```' → logprob: -19.50006675720215
    9. ' ' → logprob: -19.62506675720215
    10. '１' → logprob: -19.87506675720215

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'un' → logprob: -16.000001907348633
    4. '0' → logprob: -16.375001907348633
    5. '(' → logprob: -17.625001907348633
    6. '```' → logprob: -18.250001907348633
    7. '`' → logprob: -20.125001907348633
    8. '１' → logprob: -20.250001907348633
    9. '
' → logprob: -20.625001907348633
    10. '[' → logprob: -20.625001907348633

Token 867: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3196771740913391
    2. 'print' → logprob: -1.5696771144866943
    3. ',' → logprob: -2.8196771144866943
    4. ' print' → logprob: -5.194677352905273
    5. ' ,' → logprob: -8.444677352905273
    6. ')' → logprob: -10.444677352905273
    7. '
' → logprob: -10.819677352905273
    8. '    
' → logprob: -11.069677352905273
    9. '```' → logprob: -11.194677352905273
    10. ',
' → logprob: -11.444677352905273

Token 868: 'sou' (ID: 153109)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.2872002124786377
    2. 'comme' → logprob: -1.9122002124786377
    3. ' utilisée' → logprob: -1.9122002124786377
    4. 'util' → logprob: -2.2872002124786377
    5. 'trad' → logprob: -2.6622002124786377
    6. 'pour' → logprob: -3.1622002124786377
    7. ' convention' → logprob: -3.2872002124786377
    8. 'comm' → logprob: -3.7872002124786377
    9. 'typ' → logprob: -3.7872002124786377
    10. 'print' → logprob: -4.037199974060059

Token 869: 'vent' (ID: 818)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009851470589637756
    2. 's' → logprob: -5.259851455688477
    3. 'stract' → logprob: -7.384851455688477
    4. '#' → logprob: -7.509851455688477
    5. 'p' → logprob: -7.509851455688477
    6. 'st' → logprob: -7.759851455688477
    7. 'vent' → logprob: -8.009851455688477
    8. 'stra' → logprob: -8.009851455688477
    9. 'str' → logprob: -8.384851455688477
    10. 'x' → logprob: -8.384851455688477

Token 870: ' demand' (ID: 8492)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5975199937820435
    2. ' demand' → logprob: -1.8475199937820435
    3. ' utilisée' → logprob: -1.8475199937820435
    4. 'pour' → logprob: -2.722519874572754
    5. 'dans' → logprob: -3.347519874572754
    6. 'used' → logprob: -4.972519874572754
    7. 'plus' → logprob: -5.597519874572754
    8. '```' → logprob: -5.847519874572754
    9. ' pour' → logprob: -6.097519874572754
    10. '   ' → logprob: -6.222519874572754

Token 871: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2820645570755005
    2. ',' → logprob: -2.032064437866211
    3. 'e' → logprob: -2.282064437866211
    4. '   ' → logprob: -2.657064437866211
    5. ' de' → logprob: -2.657064437866211
    6. ' ' → logprob: -2.782064437866211
    7. ')' → logprob: -2.907064437866211
    8. '+' → logprob: -3.032064437866211
    9. 'ée' → logprob: -3.032064437866211
    10. ' par' → logprob: -3.532064437866211

Token 872: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.387130618095398
    2. ',' → logprob: -1.512130618095398
    3. 'dans' → logprob: -1.512130618095398
    4. ' dans' → logprob: -2.0121307373046875
    5. ' pour' → logprob: -2.5121307373046875
    6. 'pour' → logprob: -3.2621307373046875
    7. ' par' → logprob: -4.3871307373046875
    8. '   ' → logprob: -4.6371307373046875
    9. ' in' → logprob: -4.7621307373046875
    10. ' en' → logprob: -5.1371307373046875

Token 873: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8487507700920105
    2. 'les' → logprob: -1.4737508296966553
    3. 'le' → logprob: -2.0987508296966553
    4. 'l' → logprob: -2.3487508296966553
    5. 'print' → logprob: -2.3487508296966553
    6. 'the' → logprob: -5.223750591278076
    7. ' la' → logprob: -5.223750591278076
    8. ')' → logprob: -5.348750591278076
    9. 'range' → logprob: -5.348750591278076
    10. ' les' → logprob: -5.973750591278076

Token 874: ' problèmes' (ID: 49822)
  Prédit: ' instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instructions' → logprob: -0.6539546251296997
    2. 'instructions' → logprob: -1.4039546251296997
    3. 'print' → logprob: -2.52895450592041
    4. 'pro' → logprob: -3.27895450592041
    5. ' problèmes' → logprob: -3.40395450592041
    6. ' print' → logprob: -4.15395450592041
    7. ')' → logprob: -4.52895450592041
    8. ' compét' → logprob: -5.40395450592041
    9. 'én' → logprob: -5.40395450592041
    10. ' concours' → logprob: -5.52895450592041

Token 875: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3668450117111206
    2. ',' → logprob: -1.6168450117111206
    3. ' de' → logprob: -3.61684513092041
    4. ' ,' → logprob: -3.74184513092041
    5. ' en' → logprob: -3.99184513092041
    6. ' pour' → logprob: -4.49184513092041
    7. ' )' → logprob: -4.86684513092041
    8. ' for' → logprob: -5.24184513092041
    9. 'print' → logprob: -6.61684513092041
    10. 'pour' → logprob: -6.61684513092041

Token 876: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.49527040123939514
    2. 'entrée' → logprob: -1.2452703714370728
    3. 'e' → logprob: -3.3702704906463623
    4. 'i' → logprob: -4.245270252227783
    5. ' entrée' → logprob: -4.245270252227783
    6. 'input' → logprob: -4.495270252227783
    7. ' input' → logprob: -4.745270252227783
    8. 'es' → logprob: -5.745270252227783
    9. ''aff' → logprob: -5.995270252227783
    10. '’entrée' → logprob: -5.995270252227783

Token 877: '/s' (ID: 5031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08842925727367401
    2. '+' → logprob: -3.3384292125701904
    3. ')' → logprob: -3.7134292125701904
    4. ' ,' → logprob: -5.2134294509887695
    5. ' +' → logprob: -5.4634294509887695
    6. 's' → logprob: -5.5884294509887695
    7. ' et' → logprob: -6.2134294509887695
    8. 'print' → logprob: -6.7134294509887695
    9. '1' → logprob: -6.8384294509887695
    10. '<|end|>' → logprob: -6.9634294509887695

Token 878: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.0026334458962082863
    2. 'or' → logprob: -6.377633571624756
    3. '#' → logprob: -7.377633571624756
    4. '>' → logprob: -10.252633094787598
    5. '```' → logprob: -10.252633094787598
    6. 'orti' → logprob: -10.502633094787598
    7. 'o' → logprob: -10.627633094787598
    8. 'orte' → logprob: -10.627633094787598
    9. '+' → logprob: -10.627633094787598
    10. 'orts' → logprob: -10.627633094787598

Token 879: 'ie' (ID: 396)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.046447306871414185
    2. 'es' → logprob: -4.296447277069092
    3. 'e' → logprob: -4.421447277069092
    4. ' +' → logprob: -5.421447277069092
    5. ',' → logprob: -5.671447277069092
    6. '1' → logprob: -5.796447277069092
    7. 'print' → logprob: -6.421447277069092
    8. 'x' → logprob: -6.546447277069092
    9. '   ' → logprob: -6.546447277069092
    10. 'ie' → logprob: -7.546447277069092

Token 880: ' ou' (ID: 2031)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30230143666267395
    2. '):
' → logprob: -1.5523014068603516
    3. ')' → logprob: -3.0523014068603516
    4. ':' → logprob: -7.552301406860352
    5. '   ' → logprob: -7.677301406860352
    6. 'print' → logprob: -7.927301406860352
    7. ')
' → logprob: -8.427301406860352
    8. ',' → logprob: -8.677301406860352
    9. '):
' → logprob: -10.302301406860352
    10. ':
' → logprob: -10.427301406860352

Token 881: ' pour' (ID: 1930)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.022166132926941
    2. 'sort' → logprob: -1.022166132926941
    3. 'la' → logprob: -2.0221662521362305
    4. ' sortie' → logprob: -2.8971662521362305
    5. ' la' → logprob: -3.3971662521362305
    6. ' de' → logprob: -4.0221662521362305
    7. ' compétition' → logprob: -4.8971662521362305
    8. 'dans' → logprob: -5.1471662521362305
    9. 'output' → logprob: -5.1471662521362305
    10. 'comp' → logprob: -5.1471662521362305

Token 882: ' être' (ID: 9104)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17904578149318695
    2. ' l' → logprob: -2.4290456771850586
    3. 'aff' → logprob: -2.6790456771850586
    4. 'print' → logprob: -6.304045677185059
    5. ' afficher' → logprob: -6.304045677185059
    6. 'la' → logprob: -6.929045677185059
    7. 'x' → logprob: -7.304045677185059
    8. ' la' → logprob: -8.179045677185059
    9. 'i' → logprob: -8.179045677185059
    10. '_aff' → logprob: -8.429045677185059

Token 883: ' plus' (ID: 2932)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8034921288490295
    2. ' print' → logprob: -1.0534920692443848
    3. 'aff' → logprob: -2.4284920692443848
    4. ' affich' → logprob: -3.0534920692443848
    5. ')' → logprob: -4.428492069244385
    6. '   ' → logprob: -4.428492069244385
    7. ' ' → logprob: -4.553492069244385
    8. ' imprim' → logprob: -4.553492069244385
    9. 'format' → logprob: -6.178492069244385
    10. '```' → logprob: -6.553492069244385

Token 884: ' lis' (ID: 20784)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06601611524820328
    2. ',' → logprob: -4.19101619720459
    3. '<|end|>' → logprob: -4.44101619720459
    4. 's' → logprob: -4.56601619720459
    5. ' +' → logprob: -4.94101619720459
    6. ')' → logprob: -5.19101619720459
    7. '1' → logprob: -5.44101619720459
    8. 'x' → logprob: -5.69101619720459
    9. '```' → logprob: -7.06601619720459
    10. ' ' → logprob: -7.06601619720459

Token 885: 'ible' (ID: 1430)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13059891760349274
    2. 'te' → logprob: -2.755599021911621
    3. '+' → logprob: -3.005599021911621
    4. 'té' → logprob: -6.255599021911621
    5. 'gn' → logprob: -6.505599021911621
    6. 'gne' → logprob: -7.005599021911621
    7. 'e' → logprob: -7.255599021911621
    8. ')' → logprob: -7.505599021911621
    9. 'g' → logprob: -7.505599021911621
    10. '+t' → logprob: -8.005599021911621

Token 886: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08124678581953049
    2. '):' → logprob: -3.081246852874756
    3. '):
' → logprob: -4.206246852874756
    4. ')
' → logprob: -4.956246852874756
    5. '   ' → logprob: -5.706246852874756
    6. ':' → logprob: -5.956246852874756
    7. ',' → logprob: -5.956246852874756
    8. 'print' → logprob: -7.331246852874756
    9. ':
' → logprob: -7.956246852874756
    10. '
' → logprob: -8.831246376037598

Token 887: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03191317617893219
    2. 'print' → logprob: -3.5319132804870605
    3. ' print' → logprob: -6.1569132804870605
    4. '	print' → logprob: -10.406912803649902
    5. '    
' → logprob: -12.906912803649902
    6. '       ' → logprob: -13.031912803649902
    7. '   ' → logprob: -13.281912803649902
    8. '```' → logprob: -13.406912803649902
    9. '  ' → logprob: -13.781912803649902
    10. '    ' → logprob: -14.281912803649902

Token 888: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038179997354745865
    2. 'print' → logprob: -3.288180112838745
    3. ' print' → logprob: -8.913180351257324
    4. '	print' → logprob: -13.288180351257324
    5. '       ' → logprob: -13.538180351257324
    6. '   ' → logprob: -14.538180351257324
    7. '```' → logprob: -15.913180351257324
    8. '    ' → logprob: -16.538179397583008
    9. '  ' → logprob: -16.788179397583008
    10. '    
' → logprob: -17.788179397583008

Token 889: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4979267418384552
    2. 'print' → logprob: -0.9979267120361328
    3. ' print' → logprob: -3.747926712036133
    4. '	print' → logprob: -14.122926712036133
    5. '```' → logprob: -16.497926712036133
    6. '
' → logprob: -16.872926712036133
    7. '       ' → logprob: -16.997926712036133
    8. '   ' → logprob: -17.122926712036133
    9. ' ' → logprob: -17.622926712036133
    10. '  ' → logprob: -17.622926712036133

Token 890: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.6855053305625916
    2. 'er' → logprob: -1.5605053901672363
    3. 'ich' → logprob: -2.0605053901672363
    4. 'print' → logprob: -2.9355053901672363
    5. '   ' → logprob: -3.5605053901672363
    6. 'iche' → logprob: -3.9355053901672363
    7. 'int' → logprob: -4.310505390167236
    8. '()' → logprob: -4.435505390167236
    9. 'ichage' → logprob: -5.310505390167236
    10. 'ort' → logprob: -5.560505390167236

Token 891: ' les' (ID: 1341)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04476618766784668
    2. 'print' → logprob: -3.2947661876678467
    3. 'x' → logprob: -5.544766426086426
    4. '(' → logprob: -6.669766426086426
    5. '(f' → logprob: -6.794766426086426
    6. '   ' → logprob: -9.169766426086426
    7. 'f' → logprob: -9.294766426086426
    8. ' x' → logprob: -9.419766426086426
    9. ' print' → logprob: -9.794766426086426
    10. '(print' → logprob: -10.044766426086426

Token 892: ' quatre' (ID: 41209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004091224167495966
    2. ' x' → logprob: -5.504091262817383
    3. '(x' → logprob: -11.504091262817383
    4. '{x' → logprob: -13.004091262817383
    5. '{}' → logprob: -15.129091262817383
    6. 'f' → logprob: -16.254091262817383
    7. 'print' → logprob: -16.504091262817383
    8. ' ' → logprob: -18.879091262817383
    9. ',x' → logprob: -19.504091262817383
    10. '   ' → logprob: -19.754091262817383

Token 893: ' valeurs' (ID: 73668)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03164433687925339
    2. 'x' → logprob: -4.156644344329834
    3. ' x' → logprob: -4.906644344329834
    4. 'print' → logprob: -5.156644344329834
    5. '(' → logprob: -6.781644344329834
    6. ' print' → logprob: -7.531644344329834
    7. ',' → logprob: -8.281643867492676
    8. ' ' → logprob: -9.031643867492676
    9. '+' → logprob: -10.156643867492676
    10. ')' → logprob: -10.156643867492676

Token 894: ' correspond' (ID: 11095)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02581644430756569
    2. '(x' → logprob: -4.025816440582275
    3. ' print' → logprob: -5.650816440582275
    4. '(' → logprob: -5.775816440582275
    5. '   ' → logprob: -8.150816917419434
    6. '(print' → logprob: -8.400816917419434
    7. '()' → logprob: -8.525816917419434
    8. ',' → logprob: -9.025816917419434
    9. '{}' → logprob: -10.275816917419434
    10. 'x' → logprob: -10.400816917419434

Token 895: 'antes' (ID: 5193)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.03077102266252041
    2. '   ' → logprob: -4.155771255493164
    3. 'print' → logprob: -4.280771255493164
    4. 'ants' → logprob: -7.905771255493164
    5. ' à' → logprob: -9.155771255493164
    6. 'a' → logprob: -9.530771255493164
    7. 'ent' → logprob: -9.655771255493164
    8. 'x' → logprob: -10.280771255493164
    9. 'à' → logprob: -10.655771255493164
    10. 'ante' → logprob: -11.030771255493164

Token 896: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007496473845094442
    2. ' print' → logprob: -5.507496356964111
    3. '   ' → logprob: -5.882496356964111
    4. ',' → logprob: -8.25749683380127
    5. '{' → logprob: -8.63249683380127
    6. ')' → logprob: -9.63249683380127
    7. '(' → logprob: -10.00749683380127
    8. '(print' → logprob: -10.75749683380127
    9. '(x' → logprob: -11.13249683380127
    10. '()' → logprob: -11.75749683380127

Token 897: ' ce' (ID: 2357)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023035584017634392
    2. ' x' → logprob: -3.8980355262756348
    3. '(x' → logprob: -6.023035526275635
    4. '{x' → logprob: -9.898036003112793
    5. 'f' → logprob: -11.398036003112793
    6. ' ' → logprob: -13.398036003112793
    7. '{}' → logprob: -13.523036003112793
    8. '   ' → logprob: -13.773036003112793
    9. ' (' → logprob: -13.898036003112793
    10. ' f' → logprob: -14.398036003112793

Token 898: ' déplacement' (ID: 138449)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5420677661895752
    2. 'x' → logprob: -1.1670677661895752
    3. '+' → logprob: -3.042067766189575
    4. '(x' → logprob: -4.292067527770996
    5. 's' → logprob: -4.667067527770996
    6. ',' → logprob: -4.667067527770996
    7. ' print' → logprob: -5.042067527770996
    8. '{x' → logprob: -5.667067527770996
    9. ' move' → logprob: -5.792067527770996
    10. ')' → logprob: -5.792067527770996

Token 899: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21496768295764923
    2. '   ' → logprob: -2.089967727661133
    3. ' print' → logprob: -2.714967727661133
    4. ',' → logprob: -6.089967727661133
    5. ')' → logprob: -7.464967727661133
    6. '(' → logprob: -8.339967727661133
    7. ' ,' → logprob: -9.214967727661133
    8. '{' → logprob: -9.839967727661133
    9. '
' → logprob: -9.839967727661133
    10. ':' → logprob: -9.964967727661133

Token 900: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3902098536491394
    2. '   ' → logprob: -1.1402099132537842
    3. ' print' → logprob: -5.890209674835205
    4. '```' → logprob: -7.890209674835205
    5. '    
' → logprob: -9.765210151672363
    6. '{' → logprob: -10.640210151672363
    7. '	print' → logprob: -10.890210151672363
    8. '<|end|>' → logprob: -11.015210151672363
    9. '
' → logprob: -11.140210151672363
    10. '       ' → logprob: -11.390210151672363

Token 901: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.041105594485998154
    2. '   ' → logprob: -3.2911055088043213
    3. ' print' → logprob: -5.7911057472229
    4. '	print' → logprob: -12.666105270385742
    5. '```' → logprob: -14.041105270385742
    6. '       ' → logprob: -15.916105270385742
    7. '  ' → logprob: -16.041105270385742
    8. '.print' → logprob: -16.041105270385742
    9. '    ' → logprob: -16.166105270385742
    10. ' ' → logprob: -16.541105270385742

Token 902: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00025645215646363795
    2. '(' → logprob: -8.625256538391113
    3. 'x' → logprob: -9.625256538391113
    4. '(f' → logprob: -12.000256538391113
    5. ' x' → logprob: -12.500256538391113
    6. ' (' → logprob: -14.375256538391113
    7. '{x' → logprob: -15.000256538391113
    8. '(i' → logprob: -16.750255584716797
    9. 'f' → logprob: -17.125255584716797
    10. '(
' → logprob: -17.500255584716797

Token 903: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020560692995786667
    2. ' +' → logprob: -3.8955607414245605
    3. ',' → logprob: -11.020560264587402
    4. ' ,' → logprob: -13.520560264587402
    5. '+,' → logprob: -15.145560264587402
    6. ' ' → logprob: -15.395560264587402
    7. '1' → logprob: -15.645560264587402
    8. '+
' → logprob: -16.14556121826172
    9. '＋' → logprob: -16.64556121826172
    10. ')' → logprob: -16.89556121826172

Token 904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. ',' → logprob: -20.750011444091797
    4. '```' → logprob: -20.750011444091797
    5. '0' → logprob: -21.000011444091797
    6. '<|end|>' → logprob: -21.125011444091797
    7. '   ' → logprob: -21.500011444091797
    8. ')' → logprob: -22.250011444091797
    9. '
' → logprob: -22.625011444091797
    10. '2' → logprob: -22.875011444091797

Token 905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011249757371842861
    2. ',y' → logprob: -6.876124858856201
    3. ' ,' → logprob: -9.37612533569336
    4. 'y' → logprob: -12.25112533569336
    5. ' y' → logprob: -13.12612533569336
    6. ',
' → logprob: -14.37612533569336
    7. ',end' → logprob: -16.37612533569336
    8. ')' → logprob: -17.12612533569336
    9. ',x' → logprob: -18.25112533569336
    10. ' ,
' → logprob: -18.87612533569336

Token 906: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004306692280806601
    2. ' y' → logprob: -7.750430583953857
    3. '	y' → logprob: -19.125431060791016
    4. '(y' → logprob: -19.500431060791016
    5. ')y' → logprob: -19.875431060791016
    6. ',y' → logprob: -21.125431060791016
    7. '<|end|>' → logprob: -21.250431060791016
    8. '‘y' → logprob: -21.500431060791016
    9. ''y' → logprob: -22.000431060791016
    10. '.y' → logprob: -22.750431060791016

Token 907: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1517960956552997e-05
    2. ' +' → logprob: -11.375011444091797
    3. '1' → logprob: -17.125011444091797
    4. '+
' → logprob: -17.375011444091797
    5. '＋' → logprob: -18.875011444091797
    6. '<|end|>' → logprob: -18.875011444091797
    7. '+,' → logprob: -19.375011444091797
    8. ')+' → logprob: -19.500011444091797
    9. '+x' → logprob: -19.875011444091797
    10. '+)' → logprob: -20.500011444091797

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '+' → logprob: -19.25
    4. '2' → logprob: -21.125
    5. '```' → logprob: -21.5
    6. '<|end|>' → logprob: -21.875
    7. '   ' → logprob: -22.25
    8. '১' → logprob: -22.75
    9. '۱' → logprob: -23.125
    10. '१' → logprob: -23.125

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012151175178587437
    2. ',x' → logprob: -7.251214981079102
    3. 'x' → logprob: -7.876214981079102
    4. ' ,' → logprob: -9.001214981079102
    5. ',end' → logprob: -14.251214981079102
    6. ' x' → logprob: -14.376214981079102
    7. '+' → logprob: -14.626214981079102
    8. ')' → logprob: -15.501214981079102
    9. '```' → logprob: -16.8762149810791
    10. 'end' → logprob: -17.0012149810791

Token 910: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -20.375158309936523
    4. '(x' → logprob: -21.125158309936523
    5. '{x' → logprob: -21.875158309936523
    6. '"x' → logprob: -22.500158309936523
    7. '$x' → logprob: -22.625158309936523
    8. ')x' → logprob: -22.750158309936523
    9. '   ' → logprob: -24.500158309936523
    10. ''x' → logprob: -24.625158309936523

Token 911: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004080420359969139
    2. '2' → logprob: -5.504080295562744
    3. ' +' → logprob: -13.629080772399902
    4. '+
' → logprob: -14.254080772399902
    5. '```' → logprob: -16.754079818725586
    6. ''+' → logprob: -17.379079818725586
    7. ')+' → logprob: -17.504079818725586
    8. '1' → logprob: -18.004079818725586
    9. '++' → logprob: -18.629079818725586
    10. '[' → logprob: -19.004079818725586

Token 912: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.088346359931165e-07
    2. ' +' → logprob: -14.000000953674316
    3. '+
' → logprob: -19.0
    4. '＋' → logprob: -21.875
    5. '()+' → logprob: -22.0
    6. ')+' → logprob: -22.875
    7. '1' → logprob: -23.375
    8. '+xml' → logprob: -23.75
    9. '```' → logprob: -24.0
    10. ',' → logprob: -24.5

Token 913: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '+' → logprob: -16.875
    4. '<|end|>' → logprob: -18.25
    5. '```' → logprob: -19.0
    6. '2' → logprob: -20.25
    7. '0' → logprob: -20.25
    8. '   ' → logprob: -22.125
    9. '-' → logprob: -22.25
    10. '۱' → logprob: -22.25

Token 914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. ',y' → logprob: -10.375059127807617
    3. ' ,' → logprob: -11.000059127807617
    4. 'y' → logprob: -12.125059127807617
    5. ')' → logprob: -12.750059127807617
    6. ' y' → logprob: -12.875059127807617
    7. '+' → logprob: -17.500059127807617
    8. 'x' → logprob: -19.000059127807617
    9. '4' → logprob: -19.125059127807617
    10. '1' → logprob: -19.375059127807617

Token 915: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.5491004129871726e-05
    2. ' y' → logprob: -10.000045776367188
    3. 'x' → logprob: -17.625045776367188
    4. '	y' → logprob: -19.875045776367188
    5. '   ' → logprob: -20.625045776367188
    6. '(y' → logprob: -21.125045776367188
    7. ' ' → logprob: -21.375045776367188
    8. 'z' → logprob: -22.875045776367188
    9. '  ' → logprob: -23.375045776367188
    10. '    ' → logprob: -23.500045776367188

Token 916: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022006903309375048
    2. '1' → logprob: -6.127200603485107
    3. '2' → logprob: -11.627201080322266
    4. ' +' → logprob: -12.377201080322266
    5. '+
' → logprob: -13.627201080322266
    6. '+)' → logprob: -14.502201080322266
    7. '<|end|>' → logprob: -14.502201080322266
    8. '```' → logprob: -16.127201080322266
    9. '+</' → logprob: -16.877201080322266
    10. '+=' → logprob: -17.627201080322266

Token 917: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9361264946837764e-07
    2. ' +' → logprob: -16.625
    3. ')+' → logprob: -19.875
    4. '1' → logprob: -20.125
    5. ')' → logprob: -20.375
    6. '+
' → logprob: -20.875
    7. '+)' → logprob: -21.375
    8. '```' → logprob: -21.625
    9. '＋' → logprob: -22.125
    10. '()+' → logprob: -22.75

Token 918: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -19.125
    4. '0' → logprob: -19.25
    5. '<|end|>' → logprob: -19.875
    6. '-' → logprob: -20.375
    7. '2' → logprob: -20.5
    8. ')' → logprob: -22.125
    9. '+' → logprob: -22.875
    10. '   ' → logprob: -23.25

Token 919: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -17.5
    4. ')`' → logprob: -18.75
    5. ')}' → logprob: -19.0
    6. '))' → logprob: -19.5
    7. '),' → logprob: -19.625
    8. ')#' → logprob: -20.5
    9. '）' → logprob: -21.0
    10. ',)' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 917
Tokens correctement prédits (1ère position, stricte): 245
Tokens correctement prédits (1ère position, avec adaptation): 251
Tokens correctement prédits (top 10): 540
Précision stricte (1ère position): 26.72%
Précision adaptée (1ère position): 27.37%
Précision (top 10): 58.89%
================================================================================
