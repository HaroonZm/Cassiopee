================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce, lru_cache, cmp_to_key
from itertools import permutations, product, chain, combinations, accumulate
from operator import or_, itemgetter
from collections import defaultdict
import sys

def read_input():
    extract = lambda s: list(map(int, sys.stdin.readline().split()))
    N, M = extract("")
    v = []
    for _ in range(M):
        a, b = extract("")
        cs = extract("")
        mask = sum(1 << (e-1) for e in cs)
        v.append((a, mask))
    return N, v

def proc():
    N, v = read_input()
    S = 1 << N
    INF = float('inf')
    dp = [INF]*S
    dp[0] = 0
    # Build possible transitions as cross product to highlight over-complexity
    all_flags = [f for _, f in v]
    all_costs = [a for a, _ in v]
    indices = range(len(v))
    for subset in (n for n in range(S)):
        avail = zip(all_costs, all_flags)
        updates = ((subset | flag, dp[subset] + cost) for cost, flag in avail)
        for idx, (to, nxt_cost) in enumerate(updates):
            dp[to] = min(dp[to], nxt_cost)
    return -1 if dp[-1]==INF else dp[-1]

print(proc())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025124039500951767
    2. '.' → logprob: -4.0251240730285645
    3. '\' → logprob: -6.4001240730285645
    4. '```' → logprob: -6.5251240730285645
    5. ',' → logprob: -6.6501240730285645
    6. ' (' → logprob: -7.5251240730285645
    7. '(lambda' → logprob: -7.7751240730285645
    8. '[' → logprob: -8.400123596191406
    9. '\(' → logprob: -8.400123596191406
    10. ' ' → logprob: -8.400123596191406

Token 5: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.7226052284240723
    2. ' partial' → logprob: -0.8476052284240723
    3. 'operator' → logprob: -3.3476052284240723
    4. ' operator' → logprob: -3.4726052284240723
    5. 'wrap' → logprob: -4.972605228424072
    6. '```' → logprob: -5.597605228424072
    7. 'cmp' → logprob: -5.722605228424072
    8. ' cmp' → logprob: -5.972605228424072
    9. '.partial' → logprob: -6.972605228424072
    10. ' ' → logprob: -7.222605228424072

Token 6: 'ru' (ID: 1942)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.3916865289211273
    2. 'amb' → logprob: -1.1416865587234497
    3. 'map' → logprob: -6.39168643951416
    4. 'am' → logprob: -6.89168643951416
    5. 'a' → logprob: -7.01668643951416
    6. 'lambda' → logprob: -8.14168643951416
    7. 'ru' → logprob: -8.76668643951416
    8. 'ist' → logprob: -8.89168643951416
    9. 'en' → logprob: -9.01668643951416
    10. 'filter' → logprob: -9.14168643951416

Token 7: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0031979158520698547
    2. 'cache' → logprob: -5.753198146820068
    3. '_cached' → logprob: -11.75319766998291
    4. '_c' → logprob: -12.87819766998291
    5. 'cached' → logprob: -12.87819766998291
    6. 'c' → logprob: -13.00319766998291
    7. '-cache' → logprob: -13.50319766998291
    8. '_CACHE' → logprob: -14.37819766998291
    9. '_counter' → logprob: -14.75319766998291
    10. 'Cache' → logprob: -14.87819766998291

Token 8: ',' (ID: 11)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.1997682750225067
    2. '(' → logprob: -1.949768304824829
    3. 'def' → logprob: -3.574768304824829
    4. '\' → logprob: -5.57476806640625
    5. ' ' → logprob: -6.57476806640625
    6. ',' → logprob: -6.82476806640625
    7. '#' → logprob: -7.32476806640625
    8. '```' → logprob: -7.32476806640625
    9. 'd' → logprob: -7.69976806640625
    10. '`' → logprob: -7.94976806640625

Token 9: ' cmp' (ID: 57822)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.7127698063850403
    2. ' partial' → logprob: -1.3377697467803955
    3. ' wraps' → logprob: -1.7127697467803955
    4. 'wrap' → logprob: -3.4627697467803955
    5. ' singled' → logprob: -3.9627697467803955
    6. 'cached' → logprob: -5.462769985198975
    7. ' total' → logprob: -5.837769985198975
    8. ' cached' → logprob: -5.962769985198975
    9. 'total' → logprob: -6.462769985198975
    10. ' cmp' → logprob: -6.587769985198975

Token 10: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0003687053394969553
    2. '_' → logprob: -8.75036907196045
    3. 'To' → logprob: -9.37536907196045
    4. 'to' → logprob: -9.50036907196045
    5. '_TO' → logprob: -10.25036907196045
    6. '_from' → logprob: -12.62536907196045
    7. '_tol' → logprob: -13.25036907196045
    8. '```' → logprob: -13.37536907196045
    9. '_for' → logprob: -13.50036907196045
    10. '_To' → logprob: -13.62536907196045

Token 11: '_key' (ID: 6724)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.816325306892395
    2. 'll' → logprob: -1.941325306892395
    3. 'key' → logprob: -2.0663251876831055
    4. 'ken' → logprob: -2.4413251876831055
    5. 'lt' → logprob: -2.8163251876831055
    6. 'ol' → logprob: -3.4413251876831055
    7. 'x' → logprob: -3.5663251876831055
    8. 'k' → logprob: -3.5663251876831055
    9. 'ther' → logprob: -3.6913251876831055
    10. 'ller' → logprob: -3.8163251876831055

Token 12: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7998720407485962
    2. ',' → logprob: -0.9248720407485962
    3. ' ' → logprob: -3.1748719215393066
    4. '\' → logprob: -3.6748719215393066
    5. '(' → logprob: -3.7998719215393066
    6. '<|end|>' → logprob: -3.9248719215393066
    7. '```' → logprob: -4.549871921539307
    8. 'import' → logprob: -4.924871921539307
    9. ')' → logprob: -5.424871921539307
    10. 'def' → logprob: -5.549871921539307

Token 13: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14176446199417114
    2. '.' → logprob: -2.8917644023895264
    3. '(
' → logprob: -3.5167644023895264
    4. ',' → logprob: -3.8917644023895264
    5. '\' → logprob: -4.7667646408081055
    6. '```' → logprob: -4.7667646408081055
    7. 'import' → logprob: -6.2667646408081055
    8. '<|end|>' → logprob: -6.5167646408081055
    9. 'def' → logprob: -6.8917646408081055
    10. '
' → logprob: -7.1417646408081055

Token 14: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5041003823280334
    2. ' collections' → logprob: -1.5041003227233887
    3. ' math' → logprob: -2.5041003227233887
    4. 'operator' → logprob: -3.3791003227233887
    5. ' itertools' → logprob: -3.5041003227233887
    6. ' typing' → logprob: -4.504100322723389
    7. 'collections' → logprob: -4.504100322723389
    8. 'math' → logprob: -5.754100322723389
    9. ' os' → logprob: -6.879100322723389
    10. ' heap' → logprob: -8.254100799560547

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0233257245272398
    2. 'import' → logprob: -3.7733256816864014
    3. ' ' → logprob: -9.77332592010498
    4. '	import' → logprob: -11.52332592010498
    5. '<|end|>' → logprob: -12.64832592010498
    6. '_import' → logprob: -12.89832592010498
    7. '.' → logprob: -13.27332592010498
    8. ' im' → logprob: -13.64832592010498
    9. '.import' → logprob: -13.89832592010498
    10. ' importar' → logprob: -14.14832592010498

Token 16: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2416867017745972
    2. 'per' → logprob: -1.4916867017745972
    3. 'group' → logprob: -1.4916867017745972
    4. 'product' → logprob: -2.4916868209838867
    5. ' permutations' → logprob: -2.9916868209838867
    6. 'chain' → logprob: -3.2416868209838867
    7. ' group' → logprob: -3.4916868209838867
    8. 'count' → logprob: -3.8666868209838867
    9. 'acc' → logprob: -4.616686820983887
    10. ' chain' → logprob: -4.991686820983887

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5036643743515015
    2. '\' → logprob: -1.2536643743515015
    3. '(
' → logprob: -3.378664493560791
    4. '\n' → logprob: -3.628664493560791
    5. '.' → logprob: -4.628664493560791
    6. ',' → logprob: -4.628664493560791
    7. '```' → logprob: -5.003664493560791
    8. 'def' → logprob: -5.003664493560791
    9. '\(' → logprob: -5.378664493560791
    10. '[' → logprob: -5.503664493560791

Token 18: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3731873333454132
    2. 'product' → logprob: -1.3731873035430908
    3. ' combinations' → logprob: -3.623187303543091
    4. ' product' → logprob: -3.873187303543091
    5. 'chain' → logprob: -5.24818754196167
    6. 'group' → logprob: -6.49818754196167
    7. 'cycle' → logprob: -6.99818754196167
    8. 'acc' → logprob: -7.24818754196167
    9. 'is' → logprob: -7.49818754196167
    10. ' chain' → logprob: -7.62318754196167

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039580393582582474
    2. ',
' → logprob: -4.664580345153809
    3. '<|end|>' → logprob: -5.039580345153809
    4. '
' → logprob: -5.164580345153809
    5. '\n' → logprob: -5.539580345153809
    6. '\' → logprob: -5.664580345153809
    7. 'import' → logprob: -6.164580345153809
    8. ' ,' → logprob: -6.664580345153809
    9. 'def' → logprob: -6.664580345153809
    10. ',

' → logprob: -7.039580345153809

Token 20: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1379907727241516
    2. ' combinations' → logprob: -2.387990713119507
    3. 'chain' → logprob: -4.137990951538086
    4. 'cycle' → logprob: -5.387990951538086
    5. ' chain' → logprob: -5.637990951538086
    6. 'acc' → logprob: -5.637990951538086
    7. 'group' → logprob: -5.887990951538086
    8. ' accumulate' → logprob: -6.012990951538086
    9. '```' → logprob: -7.012990951538086
    10. ' group' → logprob: -7.012990951538086

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042554084211587906
    2. '<|end|>' → logprob: -4.417553901672363
    3. 'import' → logprob: -4.792553901672363
    4. ',
' → logprob: -4.917553901672363
    5. '\n' → logprob: -5.542553901672363
    6. '\' → logprob: -6.042553901672363
    7. '
' → logprob: -6.292553901672363
    8. 'def' → logprob: -6.792553901672363
    9. ')' → logprob: -7.292553901672363
    10. '```' → logprob: -7.417553901672363

Token 22: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.022007660940289497
    2. ' combinations' → logprob: -4.897007465362549
    3. 'is' → logprob: -5.397007465362549
    4. 'group' → logprob: -5.897007465362549
    5. 'cycle' → logprob: -6.647007465362549
    6. 'acc' → logprob: -6.772007465362549
    7. 'compress' → logprob: -7.022007465362549
    8. '```' → logprob: -7.147007465362549
    9. ' is' → logprob: -7.272007465362549
    10. 'zip' → logprob: -7.397007465362549

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2214440405368805
    2. '<|end|>' → logprob: -2.4714441299438477
    3. 'import' → logprob: -2.9714441299438477
    4. ',
' → logprob: -4.346444129943848
    5. '
' → logprob: -4.346444129943848
    6. '\n' → logprob: -4.971444129943848
    7. '\' → logprob: -5.346444129943848
    8. ' ' → logprob: -5.471444129943848
    9. ',

' → logprob: -6.221444129943848
    10. '.' → logprob: -6.346444129943848

Token 24: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8609724044799805
    2. 'com' → logprob: -1.4859724044799805
    3. 'group' → logprob: -2.1109724044799805
    4. ' group' → logprob: -2.3609724044799805
    5. ' accumulate' → logprob: -3.3609724044799805
    6. ' is' → logprob: -3.9859724044799805
    7. 'filter' → logprob: -4.1109724044799805
    8. 'cycle' → logprob: -4.2359724044799805
    9. 'is' → logprob: -4.3609724044799805
    10. 'tee' → logprob: -4.7359724044799805

Token 25: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09244915097951889
    2. '<|end|>' → logprob: -3.217449188232422
    3. ' ' → logprob: -4.092449188232422
    4. 'import' → logprob: -4.967449188232422
    5. '\' → logprob: -5.092449188232422
    6. ',
' → logprob: -5.467449188232422
    7. ')' → logprob: -5.967449188232422
    8. '\n' → logprob: -5.967449188232422
    9. ' ,' → logprob: -5.967449188232422
    10. '(' → logprob: -6.967449188232422

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5219004154205322
    2. 'import' → logprob: -1.8969004154205322
    3. ',' → logprob: -2.5219004154205322
    4. '

' → logprob: -3.0219004154205322
    5. '#' → logprob: -3.6469004154205322
    6. '\n' → logprob: -3.7719004154205322
    7. '\' → logprob: -4.271900177001953
    8. '```' → logprob: -4.521900177001953
    9. ',
' → logprob: -4.771900177001953
    10. 'def' → logprob: -5.021900177001953

Token 27: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.48040640354156494
    2. 'math' → logprob: -1.355406403541565
    3. ' operator' → logprob: -3.1054062843322754
    4. ' collections' → logprob: -3.2304062843322754
    5. 'collections' → logprob: -3.7304062843322754
    6. 'operator' → logprob: -4.355406284332275
    7. ' typing' → logprob: -7.480406284332275
    8. 'heap' → logprob: -7.730406284332275
    9. ' heap' → logprob: -7.855406284332275
    10. ' ' → logprob: -8.355406761169434

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11351776868104935
    2. 'import' → logprob: -2.2385177612304688
    3. ' as' → logprob: -8.113517761230469
    4. '<|end|>' → logprob: -8.738517761230469
    5. ',' → logprob: -9.113517761230469
    6. ' ' → logprob: -9.613517761230469
    7. '.' → logprob: -11.238517761230469
    8. ' ,' → logprob: -11.238517761230469
    9. '	import' → logprob: -11.363517761230469
    10. '_import' → logprob: -11.863517761230469

Token 29: ' or' (ID: 503)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.27417972683906555
    2. ' add' → logprob: -1.6491796970367432
    3. ' mul' → logprob: -4.149179935455322
    4. ' ' → logprob: -4.274179935455322
    5. 'item' → logprob: -5.149179935455322
    6. ' method' → logprob: -5.274179935455322
    7. ' attr' → logprob: -5.774179935455322
    8. ' import' → logprob: -6.274179935455322
    9. 'add' → logprob: -7.024179935455322
    10. 'mul' → logprob: -8.649179458618164

Token 30: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.049755782238208e-05
    2. '_,' → logprob: -11.25005054473877
    3. '__' → logprob: -11.62505054473877
    4. '_|' → logprob: -11.87505054473877
    5. '_
' → logprob: -12.25005054473877
    6. '_\' → logprob: -12.62505054473877
    7. '_operator' → logprob: -12.75005054473877
    8. '_

' → logprob: -13.25005054473877
    9. '_r' → logprob: -13.50005054473877
    10. '```' → logprob: -14.12505054473877

Token 31: ' item' (ID: 2169)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.28335314989089966
    2. 'add' → logprob: -2.283353090286255
    3. ' and' → logprob: -2.408353090286255
    4. 'item' → logprob: -3.408353090286255
    5. ' add' → logprob: -5.283353328704834
    6. 'xor' → logprob: -5.283353328704834
    7. ' item' → logprob: -5.908353328704834
    8. '```' → logprob: -6.033353328704834
    9. 'mul' → logprob: -6.158353328704834
    10. 'getitem' → logprob: -7.283353328704834

Token 32: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.05559768155217171
    2. 'get' → logprob: -2.9305977821350098
    3. 'getitem' → logprob: -8.055597305297852
    4. 'g' → logprob: -8.430597305297852
    5. 'gett' → logprob: -8.930597305297852
    6. '```' → logprob: -11.680597305297852
    7. '#get' → logprob: -11.930597305297852
    8. '|get' → logprob: -12.180597305297852
    9. 'ge' → logprob: -12.555597305297852
    10. '_get' → logprob: -12.555597305297852

Token 33: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05385543778538704
    2. ',
' → logprob: -3.8038554191589355
    3. '.' → logprob: -4.8038554191589355
    4. '\' → logprob: -5.0538554191589355
    5. ')' → logprob: -6.0538554191589355
    6. '(' → logprob: -6.0538554191589355
    7. 'import' → logprob: -6.1788554191589355
    8. ' ' → logprob: -6.8038554191589355
    9. ',

' → logprob: -6.8038554191589355
    10. '<|end|>' → logprob: -6.9288554191589355

Token 34: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3399449288845062
    2. 'import' → logprob: -2.214944839477539
    3. ',
' → logprob: -3.339944839477539
    4. '\' → logprob: -3.589944839477539
    5. 'def' → logprob: -3.589944839477539
    6. '
' → logprob: -3.839944839477539
    7. '#' → logprob: -4.464944839477539
    8. '\n' → logprob: -4.589944839477539
    9. ',

' → logprob: -4.964944839477539
    10. '' → logprob: -5.089944839477539

Token 35: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9646012187004089
    2. 'math' → logprob: -1.4646012783050537
    3. 'collections' → logprob: -1.7146012783050537
    4. ' collections' → logprob: -1.8396012783050537
    5. ' functools' → logprob: -3.5896012783050537
    6. 'os' → logprob: -5.589601039886475
    7. ' heap' → logprob: -5.714601039886475
    8. 'heap' → logprob: -5.964601039886475
    9. ' typing' → logprob: -5.964601039886475
    10. ' os' → logprob: -6.089601039886475

Token 36: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16097141802310944
    2. 'import' → logprob: -1.9109714031219482
    3. '.' → logprob: -8.535971641540527
    4. '```' → logprob: -8.535971641540527
    5. ' ' → logprob: -8.785971641540527
    6. '<|end|>' → logprob: -9.410971641540527
    7. '	import' → logprob: -10.660971641540527
    8. ' ```' → logprob: -10.785971641540527
    9. '_import' → logprob: -11.285971641540527
    10. ' ' → logprob: -11.535971641540527

Token 37: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.025543872267007828
    2. ' deque' → logprob: -4.150543689727783
    3. ' Counter' → logprob: -5.400543689727783
    4. ' named' → logprob: -6.275543689727783
    5. 'deque' → logprob: -6.525543689727783
    6. 'default' → logprob: -7.275543689727783
    7. ' abc' → logprob: -7.525543689727783
    8. 'named' → logprob: -8.775544166564941
    9. 'Counter' → logprob: -9.400544166564941
    10. 'abc' → logprob: -10.025544166564941

Token 38: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3329813778400421
    2. '

' → logprob: -1.9579813480377197
    3. 'import' → logprob: -3.0829813480377197
    4. '
' → logprob: -3.0829813480377197
    5. ',

' → logprob: -4.082981586456299
    6. ',
' → logprob: -4.582981586456299
    7. ' 

' → logprob: -4.957981586456299
    8. 'from' → logprob: -5.582981586456299
    9. '```' → logprob: -6.082981586456299
    10. ' ,' → logprob: -6.582981586456299

Token 39: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.1903313398361206
    2. 'import' → logprob: -1.3153313398361206
    3. 'def' → logprob: -1.5653313398361206
    4. '
' → logprob: -2.56533145904541
    5. ',' → logprob: -2.81533145904541
    6. 'from' → logprob: -4.06533145904541
    7. ',

' → logprob: -4.31533145904541
    8. 'class' → logprob: -4.69033145904541
    9. '```' → logprob: -4.94033145904541
    10. ',
' → logprob: -4.94033145904541

Token 40: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.9225615859031677
    2. ' math' → logprob: -1.1725616455078125
    3. ' re' → logprob: -2.4225616455078125
    4. ' ' → logprob: -2.5475616455078125
    5. ' sys' → logprob: -2.5475616455078125
    6. ' itertools' → logprob: -3.4225616455078125
    7. ' functools' → logprob: -4.7975616455078125
    8. ' numpy' → logprob: -5.6725616455078125
    9. ' json' → logprob: -6.4225616455078125
    10. ' collections' → logprob: -7.1725616455078125

Token 41: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0184760093688965
    2. ',' → logprob: -1.5184760093688965
    3. '
' → logprob: -2.0184760093688965
    4. '<|end|>' → logprob: -2.0184760093688965
    5. '

' → logprob: -2.6434760093688965
    6. 'def' → logprob: -3.5184760093688965
    7. '\n' → logprob: -4.0184760093688965
    8. '<|end|>' → logprob: -4.2684760093688965
    9. '#' → logprob: -5.2684760093688965
    10. 'from' → logprob: -6.0184760093688965

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.072797492146492
    2. 'd' → logprob: -3.6977975368499756
    3. '
' → logprob: -4.3227972984313965
    4. 'import' → logprob: -4.6977972984313965
    5. '#' → logprob: -5.0727972984313965
    6. '\' → logprob: -5.4477972984313965
    7. 'class' → logprob: -5.8227972984313965
    8. '```' → logprob: -6.0727972984313965
    9. '@' → logprob: -7.0727972984313965
    10. '_' → logprob: -7.3227972984313965

Token 43: ' read' (ID: 1729)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8573542237281799
    2. ' ' → logprob: -1.9823541641235352
    3. ' solve' → logprob: -2.107354164123535
    4. ' calculate' → logprob: -2.857354164123535
    5. ' main' → logprob: -2.857354164123535
    6. ' compute' → logprob: -3.732354164123535
    7. ' max' → logprob: -3.857354164123535
    8. ' factor' → logprob: -3.982354164123535
    9. ' fibonacci' → logprob: -4.482354164123535
    10. ' space' → logprob: -4.482354164123535

Token 44: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3082553446292877
    2. '_' → logprob: -2.183255434036255
    3. '()' → logprob: -2.433255434036255
    4. '_line' → logprob: -3.183255434036255
    5. '():' → logprob: -4.183255195617676
    6. '_input' → logprob: -5.433255195617676
    7. '_data' → logprob: -7.308255195617676
    8. '```' → logprob: -7.808255195617676
    9. '_token' → logprob: -8.183255195617676
    10. '_space' → logprob: -8.183255195617676

Token 45: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005022532772272825
    2. '(' → logprob: -5.5050225257873535
    3. '()' → logprob: -7.1300225257873535
    4. ' ():' → logprob: -9.255023002624512
    5. '_' → logprob: -10.880023002624512
    6. '():
' → logprob: -11.380023002624512
    7. ' ()' → logprob: -13.380023002624512
    8. ':' → logprob: -13.505023002624512
    9. '(prompt' → logprob: -13.505023002624512
    10. '```' → logprob: -13.880023002624512

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10155517607927322
    2. '()' → logprob: -3.976555109024048
    3. '\n' → logprob: -3.976555109024048
    4. '():' → logprob: -4.101555347442627
    5. '    
' → logprob: -4.851555347442627
    6. '    ' → logprob: -5.351555347442627
    7. '
' → logprob: -5.476555347442627
    8. '(' → logprob: -5.726555347442627
    9. '\' → logprob: -5.851555347442627
    10. ' return' → logprob: -6.101555347442627

Token 47: ' extract' (ID: 13424)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23551997542381287
    2. '   ' → logprob: -1.9855200052261353
    3. 'return' → logprob: -2.9855198860168457
    4. ' line' → logprob: -4.610519886016846
    5. ' lines' → logprob: -5.985519886016846
    6. ' sys' → logprob: -6.110519886016846
    7. ' data' → logprob: -6.235519886016846
    8. 'data' → logprob: -6.235519886016846
    9. ' input' → logprob: -6.360519886016846
    10. '    ' → logprob: -8.110520362854004

Token 48: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1581897735595703
    2. 'or' → logprob: -1.5331897735595703
    3. ' =' → logprob: -1.5331897735595703
    4. '_line' → logprob: -2.1581897735595703
    5. '_data' → logprob: -3.5331897735595703
    6. '(' → logprob: -3.6581897735595703
    7. '()' → logprob: -3.6581897735595703
    8. '=' → logprob: -4.15818977355957
    9. 'ed' → logprob: -4.40818977355957
    10. 's' → logprob: -5.40818977355957

Token 49: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5343127846717834
    2. ' lambda' → logprob: -1.2843127250671387
    3. 'lambda' → logprob: -2.6593127250671387
    4. 'sys' → logprob: -2.9093127250671387
    5. ' ' → logprob: -6.159312725067139
    6. '(lambda' → logprob: -6.284312725067139
    7. ' []' → logprob: -6.409312725067139
    8. '[]' → logprob: -6.659312725067139
    9. ' list' → logprob: -7.159312725067139
    10. '   ' → logprob: -7.534312725067139

Token 50: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.803178608417511
    2. ' sys' → logprob: -0.803178608417511
    3. ' x' → logprob: -3.053178548812866
    4. 'line' → logprob: -3.428178548812866
    5. ' s' → logprob: -5.428178787231445
    6. 'x' → logprob: -5.428178787231445
    7. 'sys' → logprob: -5.428178787231445
    8. ' list' → logprob: -5.803178787231445
    9. 's' → logprob: -5.803178787231445
    10. ' lines' → logprob: -7.178178787231445

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001279641641303897
    2. ' :' → logprob: -7.376279830932617
    3. ':s' → logprob: -8.251279830932617
    4. ':int' → logprob: -9.251279830932617
    5. 's' → logprob: -9.251279830932617
    6. ' s' → logprob: -9.626279830932617
    7. ':list' → logprob: -9.626279830932617
    8. 'int' → logprob: -10.251279830932617
    9. '[' → logprob: -11.751279830932617
    10. '[int' → logprob: -12.501279830932617

Token 52: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6036404967308044
    2. ' int' → logprob: -1.7286405563354492
    3. ' tuple' → logprob: -2.353640556335449
    4. ' map' → logprob: -2.728640556335449
    5. 'int' → logprob: -3.353640556335449
    6. 'list' → logprob: -3.603640556335449
    7. ' [' → logprob: -4.353640556335449
    8. ' s' → logprob: -4.478640556335449
    9. 'tuple' → logprob: -5.103640556335449
    10. '[int' → logprob: -5.228640556335449

Token 53: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008209457155317068
    2. '(' → logprob: -7.125821113586426
    3. '(int' → logprob: -11.625821113586426
    4. '(filter' → logprob: -12.250821113586426
    5. '(eval' → logprob: -14.250821113586426
    6. '(s' → logprob: -14.500821113586426
    7. '(chain' → logprob: -14.750821113586426
    8. '	map' → logprob: -15.375821113586426
    9. '(range' → logprob: -15.500821113586426
    10. 'map' → logprob: -15.750821113586426

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001991298486245796
    2. 'int' → logprob: -9.500199317932129
    3. '(' → logprob: -9.625199317932129
    4. '(str' → logprob: -10.000199317932129
    5. ',int' → logprob: -12.875199317932129
    6. '<int' → logprob: -13.125199317932129
    7. ' int' → logprob: -13.125199317932129
    8. '=int' → logprob: -13.625199317932129
    9. '(float' → logprob: -13.625199317932129
    10. '(lambda' → logprob: -14.125199317932129

Token 55: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5446242094039917
    2. ',' → logprob: -0.9196242094039917
    3. 's' → logprob: -5.044624328613281
    4. '(' → logprob: -5.044624328613281
    5. ',s' → logprob: -5.044624328613281
    6. '))' → logprob: -6.919624328613281
    7. ')' → logprob: -7.544624328613281
    8. ' ,' → logprob: -8.919624328613281
    9. ')(' → logprob: -9.544624328613281
    10. ' s' → logprob: -10.044624328613281

Token 56: ' sys' (ID: 12228)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3868902921676636
    2. 's' → logprob: -1.1368902921676636
    3. ' filter' → logprob: -12.136890411376953
    4. 'filter' → logprob: -12.261890411376953
    5. '(s' → logprob: -12.511890411376953
    6. ' ' → logprob: -13.136890411376953
    7. '	s' → logprob: -13.261890411376953
    8. '   ' → logprob: -14.386890411376953
    9. ')' → logprob: -15.136890411376953
    10. ')s' → logprob: -15.636890411376953

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002602629829198122
    2. '.argv' → logprob: -8.500260353088379
    3. '.' → logprob: -10.125260353088379
    4. '.stdout' → logprob: -11.750260353088379
    5. '.readline' → logprob: -12.000260353088379
    6. '.std' → logprob: -13.750260353088379
    7. 'stdin' → logprob: -15.125260353088379
    8. '.max' → logprob: -15.125260353088379
    9. '.stderr' → logprob: -15.375260353088379
    10. '.input' → logprob: -15.500260353088379

Token 58: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005847262218594551
    2. '.read' → logprob: -7.750584602355957
    3. '.stdin' → logprob: -9.250584602355957
    4. '.' → logprob: -10.250584602355957
    5. '.readlines' → logprob: -10.875584602355957
    6. '.buffer' → logprob: -13.500584602355957
    7. ' .' → logprob: -13.625584602355957
    8. '.argv' → logprob: -14.750584602355957
    9. ').' → logprob: -15.500584602355957
    10. '.strptime' → logprob: -16.125585556030273

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.190178904333152e-05
    2. '()' → logprob: -11.000031471252441
    3. '()))' → logprob: -11.750031471252441
    4. ' ().' → logprob: -12.875031471252441
    5. '())' → logprob: -13.375031471252441
    6. '(' → logprob: -14.000031471252441
    7. 's' → logprob: -14.125031471252441
    8. '(s' → logprob: -14.375031471252441
    9. '))' → logprob: -15.625031471252441
    10. '()
' → logprob: -15.875031471252441

Token 60: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00655870558694005
    2. 'split' → logprob: -5.506558895111084
    3. 'rstrip' → logprob: -6.006558895111084
    4. 'read' → logprob: -11.381558418273926
    5. ' strip' → logprob: -12.756558418273926
    6. '(strip' → logprob: -16.131559371948242
    7. ' split' → logprob: -16.506559371948242
    8. 'str' → logprob: -16.881559371948242
    9. '_strip' → logprob: -17.256559371948242
    10. '-strip' → logprob: -17.756559371948242

Token 61: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04559930041432381
    2. ')' → logprob: -3.1705992221832275
    3. ')))' → logprob: -6.920599460601807
    4. '()))' → logprob: -7.045599460601807
    5. '(' → logprob: -7.295599460601807
    6. '())' → logprob: -10.545598983764648
    7. '()' → logprob: -10.920598983764648
    8. ''))' → logprob: -12.920598983764648
    9. ' ))' → logprob: -13.045598983764648
    10. '))
' → logprob: -13.170598983764648

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7394330501556396
    2. ')' → logprob: -1.4894330501556396
    3. '   ' → logprob: -2.4894330501556396
    4. '' → logprob: -2.7394330501556396
    5. 'return' → logprob: -3.6144330501556396
    6. '    
' → logprob: -4.114433288574219
    7. '`' → logprob: -4.239433288574219
    8. ' return' → logprob: -4.239433288574219
    9. ',' → logprob: -4.239433288574219
    10. ',
' → logprob: -4.989433288574219

Token 63: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2581249177455902
    2. 'return' → logprob: -1.7581249475479126
    3. 'def' → logprob: -3.883124828338623
    4. ' ' → logprob: -4.633124828338623
    5. ' return' → logprob: -4.758124828338623
    6. ')' → logprob: -5.508124828338623
    7. '	return' → logprob: -5.508124828338623
    8. '
' → logprob: -6.008124828338623
    9. '    
' → logprob: -6.633124828338623
    10. '  ' → logprob: -7.758124828338623

Token 64: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4440746009349823
    2. ',' → logprob: -1.0690746307373047
    3. '=' → logprob: -4.319074630737305
    4. ' ,' → logprob: -6.444074630737305
    5. ')' → logprob: -8.819074630737305
    6. ' =
' → logprob: -8.944074630737305
    7. '  ' → logprob: -11.694074630737305
    8. '_' → logprob: -11.944074630737305
    9. '<|end|>' → logprob: -11.944074630737305
    10. '.' → logprob: -12.069074630737305

Token 65: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7879757285118103
    2. 'K' → logprob: -0.9129757285118103
    3. 'Q' → logprob: -2.287975788116455
    4. 'A' → logprob: -4.412975788116455
    5. ' M' → logprob: -4.912975788116455
    6. ' K' → logprob: -5.037975788116455
    7. 'T' → logprob: -5.537975788116455
    8. 'S' → logprob: -6.537975788116455
    9. 'D' → logprob: -6.662975788116455
    10. 'a' → logprob: -6.912975788116455

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10713344067335129
    2. '=' → logprob: -2.357133388519287
    3. ',' → logprob: -4.982133388519287
    4. ' ,' → logprob: -11.107133865356445
    5. '<|end|>' → logprob: -11.357133865356445
    6. ')' → logprob: -12.107133865356445
    7. ' =
' → logprob: -12.482133865356445
    8. ' ' → logprob: -13.107133865356445
    9. ' =)' → logprob: -14.107133865356445
    10. ')=' → logprob: -14.232133865356445

Token 67: ' extract' (ID: 13424)
  Prédit: ' extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.023282403126358986
    2. 'extract' → logprob: -3.773282289505005
    3. ' map' → logprob: -10.773282051086426
    4. ' read' → logprob: -11.648282051086426
    5. ' ' → logprob: -13.398282051086426
    6. 'ex' → logprob: -13.648282051086426
    7. ' ex' → logprob: -13.898282051086426
    8. 'map' → logprob: -14.148282051086426
    9. ' extracted' → logprob: -14.273282051086426
    10. 'read' → logprob: -14.273282051086426

Token 68: '("")
' (ID: 66729)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007656084839254618
    2. '(' → logprob: -4.882656097412109
    3. '()(' → logprob: -11.25765609741211
    4. ' ()' → logprob: -12.00765609741211
    5. '()[' → logprob: -12.13265609741211
    6. '(),' → logprob: -12.25765609741211
    7. '()
' → logprob: -12.38265609741211
    8. '()<' → logprob: -12.38265609741211
    9. '())' → logprob: -13.00765609741211
    10. '()`' → logprob: -13.25765609741211

Token 69: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006490361411124468
    2. ')' → logprob: -5.381490230560303
    3. '()
' → logprob: -6.381490230560303
    4. '())' → logprob: -9.631490707397461
    5. '(' → logprob: -10.506490707397461
    6. '()\' → logprob: -10.756490707397461
    7. '
' → logprob: -11.256490707397461
    8. ' ' → logprob: -11.881490707397461
    9. ' ()' → logprob: -12.131490707397461
    10. '#' → logprob: -12.381490707397461

Token 70: ' v' (ID: 323)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.352465957403183
    2. ')' → logprob: -1.2274659872055054
    3. '(' → logprob: -6.352466106414795
    4. '()
' → logprob: -7.352466106414795
    5. '\n' → logprob: -7.602466106414795
    6. '   ' → logprob: -8.852465629577637
    7. ' ' → logprob: -8.852465629577637
    8. ',' → logprob: -9.227465629577637
    9. '
' → logprob: -9.227465629577637
    10. ' ()' → logprob: -9.227465629577637

Token 71: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.30208173394203186
    2. ',' → logprob: -2.302081823348999
    3. '=' → logprob: -2.677081823348999
    4. 'a' → logprob: -3.677081823348999
    5. 'alid' → logprob: -3.802081823348999
    6. ' =' → logprob: -3.927081823348999
    7. 'als' → logprob: -4.30208158493042
    8. 'alue' → logprob: -5.67708158493042
    9. ',a' → logprob: -6.55208158493042
    10. 'alu' → logprob: -7.17708158493042

Token 72: ' []
' (ID: 8911)
  Prédit: ' extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.6401374340057373
    2. 'extract' → logprob: -0.8901374340057373
    3. ' [' → logprob: -3.7651374340057373
    4. ' []' → logprob: -4.015137672424316
    5. '[' → logprob: -4.140137672424316
    6. '[]' → logprob: -5.890137672424316
    7. ' ' → logprob: -7.265137672424316
    8. ' list' → logprob: -7.515137672424316
    9. 'list' → logprob: -7.515137672424316
    10. 'read' → logprob: -9.140137672424316

Token 73: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10122568160295486
    2. ' for' → logprob: -2.6012256145477295
    3. '(' → logprob: -4.226225852966309
    4. '	for' → logprob: -5.601225852966309
    5. '   ' → logprob: -7.476225852966309
    6. ' ' → logprob: -7.476225852966309
    7. '' → logprob: -7.726225852966309
    8. '\' → logprob: -8.101225852966309
    9. ',' → logprob: -8.351225852966309
    10. '_' → logprob: -8.476225852966309

Token 74: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10023266077041626
    2. ' for' → logprob: -2.3502326011657715
    3. 'v' → logprob: -11.22523307800293
    4. ' v' → logprob: -12.47523307800293
    5. '	for' → logprob: -12.47523307800293
    6. '_' → logprob: -13.22523307800293
    7. '   ' → logprob: -13.60023307800293
    8. '[' → logprob: -14.10023307800293
    9. ' ' → logprob: -14.60023307800293
    10. '_for' → logprob: -14.97523307800293

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03807293251156807
    2. ' _' → logprob: -3.2880728244781494
    3. '_i' → logprob: -11.03807258605957
    4. ' i' → logprob: -11.41307258605957
    5. 'i' → logprob: -12.78807258605957
    6. ' ' → logprob: -14.28807258605957
    7. ' ' → logprob: -14.78807258605957
    8. 'range' → logprob: -15.91307258605957
    9. '_range' → logprob: -16.03807258605957
    10. ' in' → logprob: -16.41307258605957

Token 76: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7208863496780396
    2. ' in' → logprob: -1.2208863496780396
    3. ' range' → logprob: -1.8458863496780396
    4. 'in' → logprob: -2.84588623046875
    5. 'v' → logprob: -6.22088623046875
    6. '_' → logprob: -8.72088623046875
    7. ' ' → logprob: -8.72088623046875
    8. ' v' → logprob: -8.84588623046875
    9. '```' → logprob: -10.09588623046875
    10. 'extract' → logprob: -10.22088623046875

Token 77: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004070778959430754
    2. ' range' → logprob: -7.8754072189331055
    3. 'extract' → logprob: -11.125407218933105
    4. 'v' → logprob: -12.000407218933105
    5. 'ange' → logprob: -13.625407218933105
    6. '	range' → logprob: -13.625407218933105
    7. '(range' → logprob: -13.875407218933105
    8. 'read' → logprob: -14.250407218933105
    9. 'input' → logprob: -15.000407218933105
    10. '```' → logprob: -15.250407218933105

Token 78: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005550591740757227
    2. '(' → logprob: -7.625555038452148
    3. 'N' → logprob: -10.000555038452148
    4. '(M' → logprob: -10.875555038452148
    5. ' N' → logprob: -14.125555038452148
    6. ' (' → logprob: -14.250555038452148
    7. '(n' → logprob: -14.875555038452148
    8. '	N' → logprob: -15.250555038452148
    9. '(
' → logprob: -15.375555038452148
    10. '(int' → logprob: -15.750555038452148

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004126369021832943
    2. '):
' → logprob: -6.12912654876709
    3. ' ):' → logprob: -6.75412654876709
    4. ')' → logprob: -7.25412654876709
    5. ':' → logprob: -10.25412654876709
    6. '   ' → logprob: -11.62912654876709
    7. ' )' → logprob: -12.12912654876709
    8. ' ):
' → logprob: -12.50412654876709
    9. '):
' → logprob: -12.62912654876709
    10. ' ' → logprob: -13.25412654876709

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07740023732185364
    2. '       ' → logprob: -3.5774002075195312
    3. ' v' → logprob: -3.5774002075195312
    4. 'v' → logprob: -4.577400207519531
    5. '    ' → logprob: -5.452400207519531
    6. ' 
' → logprob: -6.452400207519531
    7. '    
' → logprob: -7.077400207519531
    8. ' ' → logprob: -7.702400207519531
    9. '
' → logprob: -8.452400207519531
    10. ' s' → logprob: -8.577400207519531

Token 81: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04063435643911362
    2. ' v' → logprob: -4.1656341552734375
    3. 'extract' → logprob: -4.2906341552734375
    4. 'a' (adapté à ' a') → logprob: -5.4156341552734375
    5. ' extract' → logprob: -6.2906341552734375
    6. 'vv' → logprob: -7.2906341552734375
    7. '   ' → logprob: -7.7906341552734375
    8. 'x' → logprob: -7.9156341552734375
    9. 'arr' → logprob: -8.040634155273438
    10. ' a' → logprob: -8.290634155273438

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02275792323052883
    2. ',b' → logprob: -4.3977580070495605
    3. ' ,' → logprob: -4.6477580070495605
    4. 'b' → logprob: -7.8977580070495605
    5. ' =' → logprob: -9.272757530212402
    6. ',v' → logprob: -9.522757530212402
    7. ',a' → logprob: -10.522757530212402
    8. '.append' → logprob: -11.897757530212402
    9. ',n' → logprob: -12.147757530212402
    10. '_,' → logprob: -12.147757530212402

Token 83: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016041172668337822
    2. ' b' → logprob: -4.141041278839111
    3. '_' → logprob: -12.766040802001953
    4. '_b' → logprob: -13.266040802001953
    5. ',b' → logprob: -14.266040802001953
    6. 's' → logprob: -14.766040802001953
    7. '>b' → logprob: -15.266040802001953
    8. '	b' → logprob: -16.016040802001953
    9. '_=' → logprob: -16.016040802001953
    10. ' ' → logprob: -16.016040802001953

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933742761611938
    2. ' =' → logprob: -0.6933742761611938
    3. ',' → logprob: -8.443374633789062
    4. ' ' → logprob: -12.193374633789062
    5. ')' → logprob: -12.693374633789062
    6. '   ' → logprob: -14.943374633789062
    7. ')=' → logprob: -14.943374633789062
    8. '_' → logprob: -15.193374633789062
    9. ' ,' → logprob: -15.443374633789062
    10. '  ' → logprob: -15.568374633789062

Token 85: ' extract' (ID: 13424)
  Prédit: ' extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.02708226628601551
    2. 'extract' → logprob: -3.6520822048187256
    3. ' map' → logprob: -7.277082443237305
    4. ' read' → logprob: -10.027082443237305
    5. 'map' → logprob: -10.777082443237305
    6. ' list' → logprob: -11.902082443237305
    7. ' ' → logprob: -12.652082443237305
    8. 'read' → logprob: -12.652082443237305
    9. ' extracted' → logprob: -12.652082443237305
    10. 'ex' → logprob: -13.714582443237305

Token 86: '("")
' (ID: 66729)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.0008134396048262715
    2. '(' → logprob: -8.000813484191895
    3. '("' → logprob: -8.625813484191895
    4. '(""' → logprob: -9.000813484191895
    5. '("")
' → logprob: -9.500813484191895
    6. '(""))' → logprob: -10.750813484191895
    7. '("");' → logprob: -11.000813484191895
    8. '()' → logprob: -11.125813484191895
    9. '("("' → logprob: -11.250813484191895
    10. '('' → logprob: -11.625813484191895

Token 87: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6584854125976562
    2. '       ' → logprob: -1.4084854125976562
    3. '<|end|>' → logprob: -2.7834854125976562
    4. ',' → logprob: -3.2834854125976562
    5. '   ' → logprob: -3.4084854125976562
    6. 'v' → logprob: -3.5334854125976562
    7. '
' → logprob: -3.5334854125976562
    8. '()' → logprob: -4.658485412597656
    9. 'a' → logprob: -4.908485412597656
    10. '    ' → logprob: -5.533485412597656

Token 88: ' cs' (ID: 14980)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47411397099494934
    2. 'v' → logprob: -0.974113941192627
    3. '   ' → logprob: -10.724114418029785
    4. '	v' → logprob: -11.599114418029785
    5. '       ' → logprob: -13.474114418029785
    6. 'a' → logprob: -13.849114418029785
    7. ',v' → logprob: -14.599114418029785
    8. '
' → logprob: -14.849114418029785
    9. '```' → logprob: -14.849114418029785
    10. ' a' → logprob: -14.974114418029785

Token 89: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5480965971946716
    2. 'v' → logprob: -1.2980966567993164
    3. '.append' → logprob: -2.1730966567993164
    4. ' =' → logprob: -4.423096656799316
    5. '=v' → logprob: -5.048096656799316
    6. '=' → logprob: -5.548096656799316
    7. ',v' → logprob: -6.298096656799316
    8. '.v' → logprob: -6.798096656799316
    9. 't' → logprob: -7.048096656799316
    10. 'a' → logprob: -7.048096656799316

Token 90: ' extract' (ID: 13424)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.3624608516693115
    2. ' extract' → logprob: -1.6124608516693115
    3. 'list' → logprob: -1.6124608516693115
    4. 'read' → logprob: -2.4874608516693115
    5. 'extract' → logprob: -2.8624608516693115
    6. ' [' → logprob: -2.9874608516693115
    7. ' read' → logprob: -3.6124608516693115
    8. '[' → logprob: -3.7374608516693115
    9. ' tuple' → logprob: -4.237461090087891
    10. 'set' → logprob: -4.362461090087891

Token 91: '("")
' (ID: 66729)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.001892222324386239
    2. '("("' → logprob: -7.25189208984375
    3. '(' → logprob: -7.62689208984375
    4. '("")
' → logprob: -7.75189208984375
    5. '(""' → logprob: -9.37689208984375
    6. '("' → logprob: -9.37689208984375
    7. '()' → logprob: -10.87689208984375
    8. '(""))' → logprob: -10.87689208984375
    9. '("");' → logprob: -11.00189208984375
    10. '("(' → logprob: -11.25189208984375

Token 92: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2741541862487793
    2. '(' → logprob: -1.8991541862487793
    3. '()
' → logprob: -3.6491541862487793
    4. '("")' → logprob: -4.274154186248779
    5. '"' → logprob: -4.399154186248779
    6. '("\' → logprob: -4.774154186248779
    7. '[' → logprob: -4.899154186248779
    8. '("' → logprob: -5.149154186248779
    9. '   ' → logprob: -6.024154186248779
    10. '()\' → logprob: -6.274154186248779

Token 93: ' mask' (ID: 10910)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20761029422283173
    2. ')' → logprob: -2.8326103687286377
    3. '()' → logprob: -3.2076103687286377
    4. '[' → logprob: -3.5826103687286377
    5. 'if' → logprob: -4.457610130310059
    6. '
' → logprob: -4.957610130310059
    7. '   ' → logprob: -5.207610130310059
    8. '(v' → logprob: -5.207610130310059
    9. '()
' → logprob: -5.582610130310059
    10. ' if' → logprob: -5.957610130310059

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8425474762916565
    2. '|' → logprob: -1.4675474166870117
    3. '=' → logprob: -1.7175474166870117
    4. ' |=' → logprob: -1.8425474166870117
    5. ' ' → logprob: -7.217547416687012
    6. '[' → logprob: -9.342547416687012
    7. 's' → logprob: -10.217547416687012
    8. '   ' → logprob: -10.467547416687012
    9. '  ' → logprob: -11.217547416687012
    10. ')' → logprob: -11.217547416687012

Token 95: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06881066411733627
    2. ' ' → logprob: -3.0688107013702393
    3. ' sum' → logprob: -4.69381046295166
    4. 'sum' → logprob: -5.06881046295166
    5. '(' → logprob: -6.06881046295166
    6. '1' → logprob: -6.56881046295166
    7. ' (' → logprob: -7.69381046295166
    8. '(sum' → logprob: -8.56881046295166
    9. 'or' → logprob: -9.44381046295166
    10. ' or' → logprob: -10.19381046295166

Token 96: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007232589181512594
    2. '([' → logprob: -5.507232666015625
    3. '((' → logprob: -5.882232666015625
    4. '(cs' → logprob: -8.632232666015625
    5. '([(' → logprob: -9.007232666015625
    6. '(c' → logprob: -11.132232666015625
    7. '(a' → logprob: -11.632232666015625
    8. '(map' → logprob: -12.132232666015625
    9. '(x' → logprob: -12.382232666015625
    10. '(pow' → logprob: -12.507232666015625

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13480880856513977
    2. '(' → logprob: -2.2598087787628174
    3. '[' → logprob: -4.2598090171813965
    4. '2' → logprob: -5.0098090171813965
    5. '[(' → logprob: -8.509808540344238
    6. 'cs' → logprob: -8.884808540344238
    7. ' ' → logprob: -9.009808540344238
    8. '(cs' → logprob: -9.134808540344238
    9. '([' → logprob: -9.384808540344238
    10. ')' → logprob: -9.509808540344238

Token 98: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0077819605357944965
    2. ' <<' → logprob: -4.882781982421875
    3. '<<(' → logprob: -8.757781982421875
    4. '<' → logprob: -11.132781982421875
    5. '<<<' → logprob: -12.882781982421875
    6. '<<<<' → logprob: -15.382781982421875
    7. '&lt' → logprob: -15.507781982421875
    8. '<<"' → logprob: -16.007781982421875
    9. '   ' → logprob: -16.132781982421875
    10. '<n' → logprob: -16.382781982421875

Token 99: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9727870225906372
    2. '(c' → logprob: -1.0977870225906372
    3. '(x' → logprob: -1.9727870225906372
    4. 'x' → logprob: -2.2227869033813477
    5. '(ci' → logprob: -4.222786903381348
    6. '(cs' → logprob: -5.097786903381348
    7. '(i' → logprob: -5.597786903381348
    8. 'ci' → logprob: -5.722786903381348
    9. 'cs' → logprob: -5.847786903381348
    10. 'i' → logprob: -6.347786903381348

Token 100: 'e' (ID: 68)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28763362765312195
    2. 'x' → logprob: -1.4126336574554443
    3. '(c' → logprob: -6.162633419036865
    4. 'ci' → logprob: -6.412633419036865
    5. '(x' → logprob: -6.787633419036865
    6. 'i' → logprob: -7.162633419036865
    7. 'a' → logprob: -9.037633895874023
    8. 'k' → logprob: -9.037633895874023
    9. 'cs' → logprob: -9.412633895874023
    10. 'int' → logprob: -9.787633895874023

Token 101: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2523612678050995
    2. ' -' → logprob: -1.5023612976074219
    3. 'x' → logprob: -9.252361297607422
    4. 'a' → logprob: -10.002361297607422
    5. 's' → logprob: -10.127361297607422
    6. 'd' → logprob: -10.127361297607422
    7. 'b' → logprob: -10.252361297607422
    8. 'r' → logprob: -10.502361297607422
    9. 'cs' → logprob: -10.502361297607422
    10. ' for' → logprob: -10.752361297607422

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '2' → logprob: -15.875045776367188
    5. '```' → logprob: -17.125045776367188
    6. '  ' → logprob: -18.000045776367188
    7. '0' → logprob: -18.625045776367188
    8. '１' → logprob: -18.687545776367188
    9. 'a' → logprob: -18.812545776367188
    10. '3' → logprob: -19.125045776367188

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02529934048652649
    2. ' for' → logprob: -3.900299310684204
    3. 'for' → logprob: -6.025299549102783
    4. ' )' → logprob: -6.150299549102783
    5. ' ' → logprob: -8.650299072265625
    6. '   ' → logprob: -12.150299072265625
    7. ' if' → logprob: -13.025299072265625
    8. '[' → logprob: -13.275299072265625
    9. '))' → logprob: -13.275299072265625
    10. '  ' → logprob: -13.525299072265625

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1604018211364746
    2. 'for' → logprob: -1.9104018211364746
    3. ' ' → logprob: -9.285402297973633
    4. ')' → logprob: -9.535402297973633
    5. '	for' → logprob: -12.285402297973633
    6. ' if' → logprob: -13.035402297973633
    7. '   ' → logprob: -13.660402297973633
    8. 'if' → logprob: -13.910402297973633
    9. ' )' → logprob: -14.410402297973633
    10. '```' → logprob: -14.535402297973633

Token 105: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.07889970391988754
    2. 'e' → logprob: -2.578899621963501
    3. '	e' → logprob: -12.078899383544922
    4. ' cs' → logprob: -13.328899383544922
    5. 'cs' → logprob: -13.703899383544922
    6. ')e' → logprob: -14.578899383544922
    7. ' ' → logprob: -15.203899383544922
    8. ' in' → logprob: -15.453899383544922
    9. ',e' → logprob: -15.828899383544922
    10. '[e' → logprob: -16.203899383544922

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012518247589468956
    2. 'in' → logprob: -4.387518405914307
    3. 'cs' → logprob: -12.637517929077148
    4. ' ' → logprob: -13.387517929077148
    5. ' cs' → logprob: -13.387517929077148
    6. 's' → logprob: -14.387517929077148
    7. ',' → logprob: -15.387517929077148
    8. 'In' → logprob: -15.512517929077148
    9. '<|end|>' → logprob: -15.762517929077148
    10. 'c' → logprob: -15.825017929077148

Token 107: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.3485569953918457
    2. ' cs' → logprob: -1.2235569953918457
    3. '	cs' → logprob: -10.598556518554688
    4. '[' → logprob: -10.723556518554688
    5. '(cs' → logprob: -10.723556518554688
    6. 'c' → logprob: -11.098556518554688
    7. '   ' → logprob: -11.598556518554688
    8. 'a' → logprob: -12.598556518554688
    9. ' [' → logprob: -12.723556518554688
    10. ' range' → logprob: -13.098556518554688

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.437580406665802
    2. ')
' → logprob: -1.0625803470611572
    3. '       ' → logprob: -5.687580585479736
    4. ' )' → logprob: -6.187580585479736
    5. ' )
' → logprob: -6.187580585479736
    6. ' if' → logprob: -7.562580585479736
    7. ')
' → logprob: -8.062580108642578
    8. '   ' → logprob: -8.187580108642578
    9. '           ' → logprob: -8.937580108642578
    10. 'if' → logprob: -10.687580108642578

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021494273096323013
    2. '   ' → logprob: -7.12714958190918
    3. 'v' → logprob: -7.25214958190918
    4. ')' → logprob: -7.50214958190918
    5. ',' → logprob: -10.25214958190918
    6. '<|end|>' → logprob: -11.12714958190918
    7. ')
' → logprob: -11.62714958190918
    8. ' v' → logprob: -12.50214958190918
    9. '           ' → logprob: -12.50214958190918
    10. ' ' → logprob: -13.00214958190918

Token 110: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5489169955253601
    2. '       ' → logprob: -1.2989170551300049
    3. ' v' → logprob: -1.9239170551300049
    4. '   ' → logprob: -5.673916816711426
    5. ' if' → logprob: -10.798916816711426
    6. 'a' → logprob: -11.173916816711426
    7. '	v' → logprob: -11.673916816711426
    8. ' a' → logprob: -11.798916816711426
    9. 'mask' → logprob: -11.986416816711426
    10. 'b' → logprob: -12.173916816711426

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011112666688859463
    2. '.' → logprob: -4.511112689971924
    3. '.app' → logprob: -10.261112213134766
    4. '.ap' → logprob: -10.761112213134766
    5. ' .' → logprob: -12.761112213134766
    6. '.setdefault' → logprob: -13.761112213134766
    7. '.extend' → logprob: -13.761112213134766
    8. ').' → logprob: -13.886112213134766
    9. '.push' → logprob: -14.261112213134766
    10. '].' → logprob: -14.761112213134766

Token 112: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0020421291701495647
    2. '(((' → logprob: -6.252042293548584
    3. '(' → logprob: -9.252041816711426
    4. '(a' → logprob: -12.002041816711426
    5. '([' → logprob: -12.127041816711426
    6. ' ((' → logprob: -12.752041816711426
    7. '   ' → logprob: -13.877041816711426
    8. '(([' → logprob: -14.252041816711426
    9. '([(' → logprob: -15.127041816711426
    10. '((((' → logprob: -15.252041816711426

Token 113: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0032168070320039988
    2. '(a' → logprob: -6.628216743469238
    3. 'mask' → logprob: -6.753216743469238
    4. ' a' → logprob: -7.503216743469238
    5. '   ' → logprob: -10.003216743469238
    6. 'b' → logprob: -10.378216743469238
    7. '(mask' → logprob: -10.753216743469238
    8. ' mask' → logprob: -11.128216743469238
    9. ' (' → logprob: -11.503216743469238
    10. ')a' → logprob: -11.503216743469238

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1929028332233429
    2. '-' → logprob: -2.1929028034210205
    3. ' -' → logprob: -3.3179028034210205
    4. ',b' → logprob: -4.0679030418396
    5. ' ,' → logprob: -4.5679030418396
    6. ',v' → logprob: -9.942902565002441
    7. ' ' → logprob: -10.692902565002441
    8. '-,' → logprob: -11.442902565002441
    9. ',m' → logprob: -12.130402565002441
    10. ' -,' → logprob: -12.192902565002441

Token 115: ' mask' (ID: 10910)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06212363764643669
    2. ' b' → logprob: -2.8121235370635986
    3. 'mask' → logprob: -9.06212329864502
    4. ' mask' → logprob: -10.18712329864502
    5. ' ' → logprob: -14.06212329864502
    6. ')b' → logprob: -15.37462329864502
    7. '   ' → logprob: -15.49962329864502
    8. '	b' → logprob: -15.87462329864502
    9. '(mask' → logprob: -16.312124252319336
    10. ' ' → logprob: -16.374624252319336

Token 116: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08924218267202377
    2. ',' → logprob: -2.5892422199249268
    3. ')' → logprob: -4.714241981506348
    4. ' ))' → logprob: -6.964241981506348
    5. ' ,' → logprob: -9.089241981506348
    6. ',b' → logprob: -9.589241981506348
    7. '))
' → logprob: -9.589241981506348
    8. ' )' → logprob: -9.964241981506348
    9. '),' → logprob: -11.214241981506348
    10. ' ' → logprob: -11.464241981506348

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14075225591659546
    2. '<|end|>' → logprob: -2.2657523155212402
    3. ')' → logprob: -4.01575231552124
    4. '
' → logprob: -5.51575231552124
    5. ',' → logprob: -5.89075231552124
    6. ' ' → logprob: -7.76575231552124
    7. ' return' → logprob: -8.015751838684082
    8. 'return' → logprob: -8.140751838684082
    9. '<|end|>' → logprob: -8.140751838684082
    10. '    
' → logprob: -8.265751838684082

Token 118: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003828340908512473
    2. '<|end|>' → logprob: -6.253828525543213
    3. 'return' (adapté à ' return') → logprob: -7.128828525543213
    4. ' return' → logprob: -7.503828525543213
    5. ')' → logprob: -8.003828048706055
    6. ' ' → logprob: -9.378828048706055
    7. '       ' → logprob: -10.878828048706055
    8. '
' → logprob: -11.128828048706055
    9. '	return' → logprob: -11.378828048706055
    10. '    
' → logprob: -11.378828048706055

Token 119: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033403540146537125
    2. ' N' → logprob: -8.375333786010742
    3. 'v' → logprob: -9.500333786010742
    4. '(N' → logprob: -10.625333786010742
    5. ' ' → logprob: -14.125333786010742
    6. '	N' → logprob: -14.250333786010742
    7. ' (' → logprob: -14.375333786010742
    8. '  ' → logprob: -14.875333786010742
    9. '   ' → logprob: -14.875333786010742
    10. 'n' → logprob: -14.875333786010742

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007597190560773015
    2. ',M' → logprob: -7.875759601593018
    3. ',v' → logprob: -8.250760078430176
    4. ',m' → logprob: -9.750760078430176
    5. '<|end|>' → logprob: -10.250760078430176
    6. ' ,' → logprob: -11.750760078430176
    7. ',N' → logprob: -11.750760078430176
    8. ',
' → logprob: -12.625760078430176
    9. ',n' → logprob: -13.250760078430176
    10. '<|end|>' → logprob: -13.875760078430176

Token 121: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03740401938557625
    2. 'M' → logprob: -3.4124040603637695
    3. ' v' → logprob: -5.7874040603637695
    4. ' M' → logprob: -7.2874040603637695
    5. 'm' → logprob: -14.78740406036377
    6. '```' → logprob: -15.53740406036377
    7. '	v' → logprob: -16.162403106689453
    8. 'V' → logprob: -16.287403106689453
    9. ' ' → logprob: -16.537403106689453
    10. 'mask' → logprob: -16.974903106689453

Token 122: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' proc' (ID: 14550)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.13452020287513733
    2. ' main' → logprob: -2.8845202922821045
    3. ' dp' → logprob: -4.259520053863525
    4. 'solve' → logprob: -4.509520053863525
    5. ' max' → logprob: -4.634520053863525
    6. ' bit' → logprob: -4.759520053863525
    7. ' count' → logprob: -5.384520053863525
    8. ' process' → logprob: -6.259520053863525
    9. ' dfs' → logprob: -6.259520053863525
    10. ' combine' → logprob: -6.384520053863525

Token 125: '():
' (ID: 8595)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.00047595196519978344
    2. 'essor' → logprob: -8.500475883483887
    3. 'essing' → logprob: -8.500475883483887
    4. ' ess' → logprob: -11.625475883483887
    5. 'ress' → logprob: -11.625475883483887
    6. '_v' → logprob: -12.125475883483887
    7. 'sess' → logprob: -12.125475883483887
    8. '_' → logprob: -12.250475883483887
    9. '```' → logprob: -12.375475883483887
    10. '(' → logprob: -12.625475883483887

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04733725264668465
    2. ' pass' → logprob: -3.797337293624878
    3. '    ' → logprob: -4.297337055206299
    4. 'n' → logprob: -6.172337055206299
    5. ' n' → logprob: -6.422337055206299
    6. '<|end|>' → logprob: -6.422337055206299
    7. 'pass' → logprob: -7.047337055206299
    8. ' N' → logprob: -7.172337055206299
    9. '    
' → logprob: -7.422337055206299
    10. 'N' → logprob: -7.922337055206299

Token 127: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00563236977905035
    2. 'n' → logprob: -6.255632400512695
    3. '   ' → logprob: -6.255632400512695
    4. ' N' → logprob: -6.380632400512695
    5. 'def' → logprob: -10.755632400512695
    6. ' ' → logprob: -11.380632400512695
    7. '#' → logprob: -12.005632400512695
    8. '  ' → logprob: -12.255632400512695
    9. '    ' → logprob: -12.255632400512695
    10. 'pass' → logprob: -12.505632400512695

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000578292878344655
    2. ',v' → logprob: -7.6255784034729
    3. ' ,' → logprob: -10.125577926635742
    4. 'v' → logprob: -10.125577926635742
    5. ',
' → logprob: -12.875577926635742
    6. ' v' → logprob: -13.125577926635742
    7. '=' → logprob: -13.625577926635742
    8. 'def' → logprob: -14.500577926635742
    9. '```' → logprob: -15.125577926635742
    10. ',M' → logprob: -15.250577926635742

Token 129: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33244702219963074
    2. ' v' → logprob: -1.3324470520019531
    3. 'read' → logprob: -4.082447052001953
    4. ' read' → logprob: -6.207447052001953
    5. 'proc' → logprob: -9.457447052001953
    6. ' proc' → logprob: -11.457447052001953
    7. '_v' → logprob: -12.332447052001953
    8. '<|end|>' → logprob: -12.832447052001953
    9. '*v' → logprob: -13.082447052001953
    10. ' ' → logprob: -13.082447052001953

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. '=v' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.450940132141113
    5. '   ' → logprob: -16.07594108581543
    6. ',' → logprob: -16.32594108581543
    7. ')' → logprob: -17.07594108581543
    8. 'v' → logprob: -17.20094108581543
    9. '=

' → logprob: -17.70094108581543
    10. '＝' → logprob: -18.07594108581543

Token 131: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10021097958087921
    2. ' read' → logprob: -2.3502109050750732
    3. '   ' → logprob: -13.100211143493652
    4. ' ' → logprob: -14.350211143493652
    5. '
' → logprob: -14.975211143493652
    6. '	read' → logprob: -15.100211143493652
    7. '  ' → logprob: -15.725211143493652
    8. '(read' → logprob: -15.850211143493652
    9. 'v' → logprob: -16.100210189819336
    10. '    ' → logprob: -16.100210189819336

Token 132: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.000122608442325145
    2. 'input' → logprob: -9.500123023986816
    3. '_' → logprob: -10.000123023986816
    4. '(' → logprob: -14.875123023986816
    5. 'Input' → logprob: -15.375123023986816
    6. '```' → logprob: -15.375123023986816
    7. '_inputs' → logprob: -15.500123023986816
    8. 'v' → logprob: -15.625123023986816
    9. '_
' → logprob: -15.625123023986816
    10. '_output' → logprob: -15.625123023986816

Token 133: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011060908436775208
    2. '()
' → logprob: -4.51106071472168
    3. '()

' → logprob: -11.88606071472168
    4. '()
' → logprob: -12.38606071472168
    5. '():' → logprob: -14.38606071472168
    6. 'def' → logprob: -14.63606071472168
    7. '()`' → logprob: -14.88606071472168
    8. '()\' → logprob: -15.38606071472168
    9. ' ()' → logprob: -15.63606071472168
    10. '()"' → logprob: -16.26106071472168

Token 134: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8430156111717224
    2. '   ' → logprob: -1.2180156707763672
    3. 'dp' → logprob: -1.4680156707763672
    4. ' mask' → logprob: -4.593015670776367
    5. ' res' → logprob: -4.843015670776367
    6. 'mask' → logprob: -5.093015670776367
    7. ' result' → logprob: -5.343015670776367
    8. ' ans' → logprob: -5.593015670776367
    9. 'result' → logprob: -6.093015670776367
    10. 'res' → logprob: -7.218015670776367

Token 135: ' S' (ID: 336)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023483170196413994
    2. ' dp' → logprob: -4.5234832763671875
    3. 'v' → logprob: -6.0234832763671875
    4. 'INF' → logprob: -6.5234832763671875
    5. 'f' → logprob: -7.0234832763671875
    6. 'ans' → logprob: -7.1484832763671875
    7. 'from' → logprob: -7.1484832763671875
    8. 'res' → logprob: -7.6484832763671875
    9. 'max' → logprob: -7.6484832763671875
    10. 'full' → logprob: -7.6484832763671875

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1143505647778511
    2. '=' → logprob: -2.2393505573272705
    3. 'ize' → logprob: -7.98935079574585
    4. 'um' → logprob: -8.114350318908691
    5. '   ' → logprob: -8.614350318908691
    6. ',' → logprob: -8.614350318908691
    7. ' ' → logprob: -9.364350318908691
    8. '_' → logprob: -10.239350318908691
    9. 'IZE' → logprob: -10.239350318908691
    10. 'et' → logprob: -10.551850318908691

Token 137: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6299797296524048
    2. '1' → logprob: -1.1299797296524048
    3. ' (' → logprob: -2.8799796104431152
    4. '0' → logprob: -3.1299796104431152
    5. ' ' → logprob: -4.129979610443115
    6. '[' → logprob: -4.879979610443115
    7. 'set' → logprob: -4.879979610443115
    8. '[]' → logprob: -5.379979610443115
    9. '{}' → logprob: -6.004979610443115
    10. '{' → logprob: -6.629979610443115

Token 138: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5380409359931946
    2. '1' → logprob: -0.9130409359931946
    3. '[' → logprob: -5.413041114807129
    4. 'sum' → logprob: -5.413041114807129
    5. '{' → logprob: -6.538041114807129
    6. 'set' → logprob: -6.538041114807129
    7. '0' → logprob: -7.163041114807129
    8. '2' → logprob: -7.788041114807129
    9. '[]' → logprob: -8.163041114807129
    10. '{}' → logprob: -8.413041114807129

Token 139: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20144638419151306
    2. ' <<' → logprob: -1.7014464139938354
    3. '<' → logprob: -11.201446533203125
    4. '0' → logprob: -11.451446533203125
    5. '
' → logprob: -12.826446533203125
    6. '<<(' → logprob: -13.201446533203125
    7. ' <<=' → logprob: -13.826446533203125
    8. '<<<' → logprob: -14.201446533203125
    9. ' <' → logprob: -14.451446533203125
    10. ' ' → logprob: -14.451446533203125

Token 140: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00975927896797657
    2. ' N' → logprob: -4.634759426116943
    3. '(N' → logprob: -13.634758949279785
    4. '	N' → logprob: -14.134758949279785
    5. ' ' → logprob: -15.259758949279785
    6. '   ' → logprob: -15.259758949279785
    7. ' (' → logprob: -15.384758949279785
    8. '20' → logprob: -15.509758949279785
    9. '(' → logprob: -15.634758949279785
    10. 'len' → logprob: -16.6347599029541

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21499855816364288
    2. '<|end|>' → logprob: -3.089998483657837
    3. ')' → logprob: -3.339998483657837
    4. ' ' → logprob: -3.589998483657837
    5. 'dp' → logprob: -3.714998483657837
    6. ',' → logprob: -4.714998722076416
    7. ' for' → logprob: -4.714998722076416
    8. 'for' → logprob: -5.089998722076416
    9. ' 
' → logprob: -5.339998722076416
    10. ' dp' → logprob: -5.714998722076416

Token 142: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4147574305534363
    2. ' dp' → logprob: -1.414757490158081
    3. '   ' → logprob: -2.914757490158081
    4. ')' → logprob: -4.164757251739502
    5. '
' → logprob: -4.414757251739502
    6. '    ' → logprob: -5.914757251739502
    7. '    
' → logprob: -6.539757251739502
    8. ',' → logprob: -6.664757251739502
    9. '_dp' → logprob: -6.664757251739502
    10. ' ' → logprob: -7.414757251739502

Token 143: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03949032723903656
    2. ' dp' → logprob: -3.414490222930908
    3. '   ' → logprob: -7.039490222930908
    4. 'INF' (adapté à ' INF') → logprob: -7.164490222930908
    5. 'dist' → logprob: -7.289490222930908
    6. 'DP' → logprob: -8.039490699768066
    7. 'cost' → logprob: -8.039490699768066
    8. 'f' → logprob: -8.039490699768066
    9. 'd' → logprob: -8.414490699768066
    10. 'ans' → logprob: -8.539490699768066

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254212647676468
    2. '=' → logprob: -1.6004213094711304
    3. ' ' → logprob: -12.850420951843262
    4. '=int' → logprob: -13.100420951843262
    5. ',' → logprob: -13.350420951843262
    6. ')' → logprob: -14.100420951843262
    7. '_' → logprob: -15.100420951843262
    8. '    ' → logprob: -15.850420951843262
    9. '-' → logprob: -16.225421905517578
    10. ' ' → logprob: -16.225421905517578

Token 145: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5367364883422852
    2. '10' → logprob: -1.0367364883422852
    3. ' float' → logprob: -3.161736488342285
    4. 'float' → logprob: -4.036736488342285
    5. 'int' → logprob: -8.411736488342285
    6. '1' → logprob: -8.411736488342285
    7. ' int' → logprob: -8.411736488342285
    8. '100' → logprob: -11.036736488342285
    9. ' sys' → logprob: -11.661736488342285
    10. '999' → logprob: -12.161736488342285

Token 146: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007111206650733948
    2. '("' → logprob: -7.250710964202881
    3. '('-' → logprob: -14.250711441040039
    4. '(' → logprob: -14.625711441040039
    5. 'inf' → logprob: -16.25071144104004
    6. ''in' → logprob: -17.12571144104004
    7. ' ('' → logprob: -18.12571144104004
    8. '('+' → logprob: -18.25071144104004
    9. '32' → logprob: -19.00071144104004
    10. '("-' → logprob: -19.12571144104004

Token 147: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.023397350683808327
    2. ''in' → logprob: -3.898397445678711
    3. ''' → logprob: -6.523397445678711
    4. '"' → logprob: -6.648397445678711
    5. '')' → logprob: -10.523397445678711
    6. 'in' → logprob: -11.648397445678711
    7. ''ex' → logprob: -12.148397445678711
    8. ')' → logprob: -12.273397445678711
    9. '('' → logprob: -12.773397445678711
    10. ' inf' → logprob: -12.898397445678711

Token 148: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02131238579750061
    2. ')
' → logprob: -3.8963124752044678
    3. ' )' → logprob: -7.396312236785889
    4. ' )
' → logprob: -9.521312713623047
    5. ')
' → logprob: -9.896312713623047
    6. '')' → logprob: -10.896312713623047
    7. ')

' → logprob: -12.646312713623047
    8. '
' → logprob: -12.771312713623047
    9. ');' → logprob: -12.771312713623047
    10. '')
' → logprob: -12.771312713623047

Token 149: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11911734938621521
    2. ' dp' → logprob: -2.869117259979248
    3. '   ' → logprob: -3.119117259979248
    4. '
' → logprob: -5.369117259979248
    5. 'dist' → logprob: -5.994117259979248
    6. '    
' → logprob: -7.244117259979248
    7. ')' → logprob: -7.494117259979248
    8. '_dp' → logprob: -7.744117259979248
    9. '	dp' → logprob: -7.994117259979248
    10. ',' → logprob: -8.244117736816406

Token 150: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.020107463002204895
    2. 'dist' → logprob: -4.270107269287109
    3. ' dp' → logprob: -5.520107269287109
    4. 'cost' → logprob: -7.020107269287109
    5. ' dist' → logprob: -8.52010726928711
    6. 'DP' → logprob: -8.64510726928711
    7. 'ans' → logprob: -8.89510726928711
    8. '   ' → logprob: -9.14510726928711
    9. 'd' → logprob: -9.27010726928711
    10. 'res' → logprob: -10.02010726928711

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056875079870224
    2. '=' → logprob: -3.89556884765625
    3. '[' → logprob: -10.89556884765625
    4. ' ' → logprob: -12.52056884765625
    5. ']' → logprob: -13.52056884765625
    6. ' =[' → logprob: -13.89556884765625
    7. ')' → logprob: -14.52056884765625
    8. '=[' → logprob: -14.64556884765625
    9. '   ' → logprob: -15.02056884765625
    10. '  ' → logprob: -15.27056884765625

Token 152: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06207546219229698
    2. ' [' → logprob: -2.81207537651062
    3. 'default' → logprob: -10.3120756149292
    4. '{' → logprob: -10.4370756149292
    5. '[-' → logprob: -10.8120756149292
    6. '[S' → logprob: -11.9370756149292
    7. '[s' → logprob: -12.3120756149292
    8. ' defaultdict' → logprob: -12.9370756149292
    9. '[a' → logprob: -13.8120756149292
    10. ' [-' → logprob: -13.9370756149292

Token 153: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.004640999715775251
    2. ' INF' → logprob: -5.754641056060791
    3. 'inf' → logprob: -7.754641056060791
    4. '0' → logprob: -7.754641056060791
    5. '-INF' → logprob: -8.254640579223633
    6. '[' → logprob: -9.254640579223633
    7. '-' → logprob: -9.629640579223633
    8. '_INF' → logprob: -10.254640579223633
    9. '-inf' → logprob: -10.504640579223633
    10. 'False' → logprob: -10.754640579223633

Token 154: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016069859266281128
    2. ']*' → logprob: -6.6266069412231445
    3. ' for' → logprob: -9.126606941223145
    4. ']*(' → logprob: -9.501606941223145
    5. ' ]' → logprob: -9.626606941223145
    6. 'for' → logprob: -10.876606941223145
    7. ')' → logprob: -12.251606941223145
    8. ']+' → logprob: -12.876606941223145
    9. ')]' → logprob: -12.876606941223145
    10. '[' → logprob: -14.126606941223145

Token 155: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10037229210138321
    2. '(S' → logprob: -2.350372314453125
    3. ' S' → logprob: -9.475372314453125
    4. '(' → logprob: -9.475372314453125
    5. ' (' → logprob: -12.100372314453125
    6. '_S' → logprob: -13.975372314453125
    7. ' ' → logprob: -14.225372314453125
    8. '   ' → logprob: -14.225372314453125
    9. '	S' → logprob: -14.475372314453125
    10. '[S' → logprob: -14.475372314453125

Token 156: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12888546288013458
    2. '
' → logprob: -2.128885507583618
    3. 'for' → logprob: -7.503885269165039
    4. '0' → logprob: -8.128885269165039
    5. ' dp' → logprob: -8.378885269165039
    6. '[' → logprob: -8.628885269165039
    7. '    
' → logprob: -9.128885269165039
    8. '\' → logprob: -9.378885269165039
    9. '  
' → logprob: -9.753885269165039
    10. '(dp' → logprob: -9.753885269165039

Token 157: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.041675303131341934
    2. ' dp' → logprob: -3.291675329208374
    3. '
' → logprob: -5.916675090789795
    4. '   ' → logprob: -7.791675090789795
    5. '	dp' → logprob: -8.041675567626953
    6. '<|end|>' → logprob: -9.791675567626953
    7. '_dp' → logprob: -9.916675567626953
    8. '(dp' → logprob: -10.041675567626953
    9. '[' → logprob: -11.291675567626953
    10. '0' → logprob: -11.291675567626953

Token 158: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -4.127333340875339e-06
    2. ' dp' → logprob: -12.500003814697266
    3. '0' → logprob: -14.875003814697266
    4. '	dp' → logprob: -18.500003814697266
    5. '_dp' → logprob: -20.000003814697266
    6. '(dp' → logprob: -20.000003814697266
    7. '[' → logprob: -20.625003814697266
    8. '   ' → logprob: -21.250003814697266
    9. ' ' → logprob: -21.375003814697266
    10. 'dc' → logprob: -21.500003814697266

Token 159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '0' → logprob: -11.875007629394531
    3. '[
' → logprob: -16.00000762939453
    4. ' [' → logprob: -16.50000762939453
    5. ' ' → logprob: -16.87500762939453
    6. '[S' → logprob: -17.12500762939453
    7. '```' → logprob: -18.37500762939453
    8. '[-' → logprob: -18.37500762939453
    9. '=' → logprob: -18.75000762939453
    10. ')' → logprob: -18.75000762939453

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -14.687505722045898
    4. '   ' → logprob: -14.750005722045898
    5. '(' → logprob: -15.000005722045898
    6. ')' → logprob: -15.187505722045898
    7. '000' → logprob: -15.625005722045898
    8. '[' → logprob: -16.2500057220459
    9. '00' → logprob: -16.4375057220459
    10. '```' → logprob: -16.6250057220459

Token 161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004895264864899218
    2. ' ]' → logprob: -7.750489711761475
    3. ']=' → logprob: -9.750489234924316
    4. ']
' → logprob: -15.500489234924316
    5. '=' → logprob: -16.375490188598633
    6. '[' → logprob: -16.500490188598633
    7. '`]' → logprob: -16.500490188598633
    8. ')]' → logprob: -17.500490188598633
    9. ')' → logprob: -17.625490188598633
    10. '']' → logprob: -18.000490188598633

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740799069404602
    2. '=' → logprob: -0.9740799069404602
    3. ' ' → logprob: -14.474080085754395
    4. ',' → logprob: -14.474080085754395
    5. '<|end|>' → logprob: -14.474080085754395
    6. '[' → logprob: -15.099080085754395
    7. ']=' → logprob: -15.349080085754395
    8. '.' → logprob: -15.974080085754395
    9. '0' → logprob: -15.974080085754395
    10. ')=' → logprob: -16.099079132080078

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. '  ' → logprob: -17.750019073486328
    5. '00' → logprob: -18.375019073486328
    6. '۰' → logprob: -18.375019073486328
    7. '```' → logprob: -18.750019073486328
    8. '[' → logprob: -19.312519073486328
    9. '000' → logprob: -19.375019073486328
    10. '    ' → logprob: -19.687519073486328

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -16.375003814697266
    4. '1' → logprob: -16.625003814697266
    5. '00' → logprob: -17.562503814697266
    6. '   ' → logprob: -17.750003814697266
    7. '-' → logprob: -18.000003814697266
    8. '[' → logprob: -18.125003814697266
    9. '000' → logprob: -18.437503814697266
    10. '  ' → logprob: -18.625003814697266

Token 165: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6860358119010925
    2. '<|end|>' → logprob: -1.4360358715057373
    3. '   ' → logprob: -1.5610358715057373
    4. ' for' → logprob: -4.436035633087158
    5. '    
' → logprob: -4.436035633087158
    6. 'for' → logprob: -4.936035633087158
    7. '\n' → logprob: -5.311035633087158
    8. '' → logprob: -6.186035633087158
    9. '<|end|>' → logprob: -6.186035633087158
    10. '  
' → logprob: -6.436035633087158

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44611677527427673
    2. 'for' → logprob: -1.6961168050765991
    3. ' for' → logprob: -1.8211168050765991
    4. '<|end|>' → logprob: -4.321116924285889
    5. '    
' → logprob: -8.07111644744873
    6. '	for' → logprob: -8.07111644744873
    7. ' ' → logprob: -8.94611644744873
    8. '
' → logprob: -9.07111644744873
    9. '  
' → logprob: -9.57111644744873
    10. ')' → logprob: -9.57111644744873

Token 167: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009573166607879102
    2. ' for' → logprob: -7.000957489013672
    3. '   ' → logprob: -10.000957489013672
    4. '	for' → logprob: -16.125957489013672
    5. 'v' → logprob: -16.250957489013672
    6. ')' → logprob: -16.375957489013672
    7. 'from' → logprob: -16.875957489013672
    8. '```' → logprob: -17.250957489013672
    9. ' ' → logprob: -18.750957489013672
    10. 'or' → logprob: -19.125957489013672

Token 168: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01486996654421091
    2. ' for' → logprob: -4.2648701667785645
    3. '   ' → logprob: -7.2648701667785645
    4. 'from' → logprob: -12.639869689941406
    5. 'def' → logprob: -14.139869689941406
    6. 'v' → logprob: -14.264869689941406
    7. '```' → logprob: -14.889869689941406
    8. ' ' → logprob: -15.139869689941406
    9. 'or' → logprob: -15.264869689941406
    10. 'return' → logprob: -15.764869689941406

Token 169: ' possible' (ID: 4149)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5730875730514526
    2. 'for' → logprob: -0.9480875730514526
    3. 'v' → logprob: -3.448087692260742
    4. 'graph' → logprob: -5.698087692260742
    5. ' a' → logprob: -6.073087692260742
    6. ' graph' → logprob: -6.198087692260742
    7. ' v' → logprob: -6.198087692260742
    8. 'dp' → logprob: -6.948087692260742
    9. 'adj' → logprob: -7.073087692260742
    10. ' adjacency' → logprob: -7.073087692260742

Token 170: ' transitions' (ID: 59824)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.7999143004417419
    2. ' transitions' → logprob: -1.2999143600463867
    3. 'edges' → logprob: -2.6749143600463867
    4. ' edges' → logprob: -2.6749143600463867
    5. 'moves' → logprob: -3.9249143600463867
    6. 'steps' → logprob: -4.049914360046387
    7. 'states' → logprob: -4.424914360046387
    8. ' subsets' → logprob: -4.549914360046387
    9. 'm' → logprob: -4.924914360046387
    10. ' next' → logprob: -5.049914360046387

Token 171: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' cross' (ID: 8088)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12644919753074646
    2. 'default' → logprob: -3.2514491081237793
    3. ' a' → logprob: -3.8764491081237793
    4. ' []' → logprob: -4.001449108123779
    5. '[(' → logprob: -4.626449108123779
    6. ' defaultdict' → logprob: -4.876449108123779
    7. 'a' → logprob: -5.626449108123779
    8. 'for' → logprob: -6.251449108123779
    9. 'dict' → logprob: -6.501449108123779
    10. 'v' → logprob: -6.501449108123779

Token 173: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.7092304229736328
    2. 'product' → logprob: -1.4592304229736328
    3. ' products' → logprob: -2.959230422973633
    4. ' edges' → logprob: -2.959230422973633
    5. 'products' → logprob: -3.459230422973633
    6. '_product' → logprob: -4.334230422973633
    7. 's' → logprob: -4.834230422973633
    8. 'pairs' → logprob: -4.834230422973633
    9. 'v' → logprob: -5.084230422973633
    10. ' references' → logprob: -5.209230422973633

Token 174: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7122519612312317
    2. '(v' → logprob: -1.462251901626587
    3. ' for' → logprob: -1.837251901626587
    4. '(' → logprob: -3.212251901626587
    5. ',' → logprob: -3.837251901626587
    6. 'for' → logprob: -3.962251901626587
    7. '(range' → logprob: -4.587252140045166
    8. ' of' → logprob: -4.962252140045166
    9. ' with' → logprob: -5.587252140045166
    10. 'v' → logprob: -6.212252140045166

Token 175: ' highlight' (ID: 15940)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -1.708906888961792
    2. 'generate' → logprob: -2.333906888961792
    3. 'for' → logprob: -2.583906888961792
    4. 'v' → logprob: -2.583906888961792
    5. ' combine' → logprob: -3.208906888961792
    6. 'chain' → logprob: -3.333906888961792
    7. ' v' → logprob: -3.458906888961792
    8. ' chain' → logprob: -3.583906888961792
    9. 'dp' → logprob: -3.958906888961792
    10. '[(' → logprob: -3.958906888961792

Token 176: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2179617881774902
    2. ' the' → logprob: -1.8429617881774902
    3. ' for' → logprob: -1.9679617881774902
    4. ' all' → logprob: -2.2179617881774902
    5. '   ' → logprob: -2.7179617881774902
    6. 'v' → logprob: -2.8429617881774902
    7. 'all' → logprob: -3.2179617881774902
    8. 'the' → logprob: -3.5929617881774902
    9. 'ranges' → logprob: -4.34296178817749
    10. 'range' → logprob: -4.59296178817749

Token 177: '-com' (ID: 18251)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2039097547531128
    2. 'all' → logprob: -1.5789097547531128
    3. ' v' → logprob: -1.5789097547531128
    4. ' all' → logprob: -2.0789098739624023
    5. 'com' → logprob: -3.8289098739624023
    6. ' subsets' → logprob: -3.8289098739624023
    7. ' combinations' → logprob: -3.9539098739624023
    8. ' the' → logprob: -4.078909873962402
    9. ' elements' → logprob: -4.203909873962402
    10. 'the' → logprob: -4.953909873962402

Token 178: 'plex' (ID: 12081)
  Prédit: 'binations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.08134184777736664
    2. 'pute' → logprob: -3.5813417434692383
    3. 'it' → logprob: -4.081341743469238
    4. 'plete' → logprob: -4.456341743469238
    5. 'putation' → logprob: -4.831341743469238
    6. 'bination' → logprob: -5.581341743469238
    7. 'b' → logprob: -6.081341743469238
    8. 'p' → logprob: -6.331341743469238
    9. 'ent' → logprob: -6.456341743469238
    10. 'put' → logprob: -6.706341743469238

Token 179: 'ity' (ID: 536)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.972296953201294
    2. 'ex' → logprob: -1.972296953201294
    3. 'binations' → logprob: -2.222296953201294
    4. 'ity' → logprob: -2.347296953201294
    5. 'bination' → logprob: -2.722296953201294
    6. 'x' → logprob: -2.972296953201294
    7. 'ication' → logprob: -3.097296953201294
    8. 'lication' → logprob: -3.222296953201294
    9. 'ness' → logprob: -3.472296953201294
    10. '<|end|>' → logprob: -3.472296953201294

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1579943597316742
    2. '<|end|>' → logprob: -2.282994270324707
    3. ' for' → logprob: -3.657994270324707
    4. ',' → logprob: -4.907994270324707
    5. 'for' → logprob: -5.907994270324707
    6. '
' → logprob: -6.157994270324707
    7. '    
' → logprob: -6.282994270324707
    8. '<|end|>' → logprob: -6.782994270324707
    9. 'v' → logprob: -6.907994270324707
    10. '  
' → logprob: -8.032994270324707

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26567891240119934
    2. ' for' → logprob: -1.640678882598877
    3. 'for' → logprob: -3.265678882598877
    4. 'v' → logprob: -7.390678882598877
    5. '<|end|>' → logprob: -7.765678882598877
    6. '    
' → logprob: -10.140679359436035
    7. '```' → logprob: -10.265679359436035
    8. '	for' → logprob: -10.640679359436035
    9. 'from' → logprob: -10.765679359436035
    10. ',' → logprob: -10.890679359436035

Token 182: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022414222359657288
    2. '   ' → logprob: -4.522414207458496
    3. ' for' → logprob: -4.522414207458496
    4. 'trans' → logprob: -8.897414207458496
    5. 'pairs' → logprob: -9.147414207458496
    6. 'from' → logprob: -10.022414207458496
    7. '#' → logprob: -10.772414207458496
    8. 'ranges' → logprob: -11.272414207458496
    9. 'v' → logprob: -11.397414207458496
    10. ' pairs' → logprob: -11.772414207458496

Token 183: '_flags' (ID: 33898)
  Prédit: '_masks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_masks' → logprob: -1.117007851600647
    2. '_trans' → logprob: -1.742007851600647
    3. '_sets' → logprob: -2.6170077323913574
    4. '_sub' → logprob: -2.6170077323913574
    5. '_states' → logprob: -2.7420077323913574
    6. ' =' → logprob: -2.9920077323913574
    7. '_com' → logprob: -3.1170077323913574
    8. '=' → logprob: -3.2420077323913574
    9. '_pairs' → logprob: -4.242007732391357
    10. 'trans' → logprob: -4.367007732391357

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868865668773651
    2. '=' → logprob: -1.1368865966796875
    3. 's' → logprob: -11.886886596679688
    4. ',' → logprob: -12.261886596679688
    5. '   ' → logprob: -13.886886596679688
    6. ' ' → logprob: -14.511886596679688
    7. ')' → logprob: -14.886886596679688
    8. 'product' → logprob: -14.886886596679688
    9. '=list' → logprob: -15.261886596679688
    10. 'es' → logprob: -15.699386596679688

Token 185: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7330840229988098
    2. 'range' → logprob: -1.983083963394165
    3. 'chain' → logprob: -2.733083963394165
    4. 'list' → logprob: -2.858083963394165
    5. '(range' → logprob: -2.858083963394165
    6. 'product' → logprob: -2.983083963394165
    7. '[v' → logprob: -2.983083963394165
    8. '(chain' → logprob: -4.108084201812744
    9. '[(' → logprob: -4.358084201812744
    10. '(product' → logprob: -4.608084201812744

Token 186: 'f' (ID: 69)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3660564422607422
    2. 'mask' → logprob: -1.7410564422607422
    3. '0' → logprob: -2.116056442260742
    4. 'i' → logprob: -2.241056442260742
    5. 'range' → logprob: -2.366056442260742
    6. 'v' → logprob: -2.741056442260742
    7. '1' → logprob: -3.241056442260742
    8. 'e' → logprob: -3.366056442260742
    9. '(i' → logprob: -3.991056442260742
    10. 'b' → logprob: -4.241056442260742

Token 187: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6263560652732849
    2. 'for' → logprob: -1.0013561248779297
    3. 'or' → logprob: -2.3763561248779297
    4. ']' → logprob: -6.62635612487793
    5. '(' → logprob: -6.75135612487793
    6. '<<' → logprob: -7.62635612487793
    7. ')' → logprob: -7.87635612487793
    8. 'in' → logprob: -8.12635612487793
    9. ' in' → logprob: -8.12635612487793
    10. ' or' → logprob: -8.37635612487793

Token 188: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -1.18141508102417
    2. 'range' → logprob: -1.18141508102417
    3. 'f' → logprob: -2.30641508102417
    4. 'a' → logprob: -2.43141508102417
    5. ' range' → logprob: -2.68141508102417
    6. 'r' → logprob: -3.30641508102417
    7. ',' → logprob: -3.80641508102417
    8. 'mask' → logprob: -4.55641508102417
    9. 'i' → logprob: -4.68141508102417
    10. ' _,' → logprob: -4.80641508102417

Token 189: ' f' (ID: 285)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5631349086761475
    2. 'f' → logprob: -1.9381349086761475
    3. 'flags' → logprob: -1.9381349086761475
    4. 'm' → logprob: -2.5631349086761475
    5. 'flag' → logprob: -3.3131349086761475
    6. ' mask' → logprob: -4.063135147094727
    7. ' flags' → logprob: -5.313135147094727
    8. ' f' → logprob: -6.063135147094727
    9. 'bit' → logprob: -6.813135147094727
    10. 'ms' → logprob: -7.063135147094727

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287374019622803
    2. 'in' → logprob: -1.0537374019622803
    3. ')' → logprob: -11.30373764038086
    4. ']' → logprob: -11.30373764038086
    5. ' ' → logprob: -13.05373764038086
    6. ',' → logprob: -13.42873764038086
    7. 'import' → logprob: -13.67873764038086
    8. 'v' → logprob: -13.92873764038086
    9. '_in' → logprob: -13.92873764038086
    10. '
' → logprob: -14.17873764038086

Token 191: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014169861562550068
    2. ' v' → logprob: -4.264169692993164
    3. '(v' → logprob: -12.889169692993164
    4. '[v' → logprob: -13.389169692993164
    5. ')v' → logprob: -14.139169692993164
    6. ']' → logprob: -14.514169692993164
    7. ',v' → logprob: -14.639169692993164
    8. ')' → logprob: -16.264169692993164
    9. '	v' → logprob: -16.389169692993164
    10. '_v' → logprob: -16.764169692993164

Token 192: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021641829516738653
    2. ' ]' → logprob: -6.377164363861084
    3. ' if' → logprob: -8.627163887023926
    4. ']
' → logprob: -9.252163887023926
    5. 'if' → logprob: -9.377163887023926
    6. '   ' → logprob: -9.627163887023926
    7. 'for' → logprob: -11.752163887023926
    8. ' for' → logprob: -12.627163887023926
    9. ' in' → logprob: -12.627163887023926
    10. ']

' → logprob: -12.877163887023926

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17227515578269958
    2. 'for' → logprob: -2.6722750663757324
    3. ' for' → logprob: -2.7972750663757324
    4. '
' → logprob: -3.6722750663757324
    5. '<|end|>' → logprob: -6.797275066375732
    6. '    
' → logprob: -7.047275066375732
    7. ',' → logprob: -8.79727554321289
    8. 'all' → logprob: -9.29727554321289
    9. ')' → logprob: -9.42227554321289
    10. 'product' → logprob: -9.79727554321289

Token 194: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.420405775308609
    2. 'for' → logprob: -1.1704057455062866
    3. '   ' → logprob: -3.420405864715576
    4. 'all' (adapté à ' all') → logprob: -10.295405387878418
    5. '	for' → logprob: -10.295405387878418
    6. ' all' → logprob: -10.545405387878418
    7. 'dp' → logprob: -10.545405387878418
    8. ' ' → logprob: -10.670405387878418
    9. '
' → logprob: -10.795405387878418
    10. ',' → logprob: -10.795405387878418

Token 195: '_cost' (ID: 36820)
  Prédit: '_flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.009224125184118748
    2. '_masks' → logprob: -5.259223937988281
    3. 'flags' → logprob: -5.884223937988281
    4. '_com' → logprob: -7.759223937988281
    5. '_mask' → logprob: -8.759223937988281
    6. '_sets' → logprob: -9.509223937988281
    7. 'com' → logprob: -9.884223937988281
    8. '_bits' → logprob: -10.009223937988281
    9. '_options' → logprob: -10.134223937988281
    10. '_flag' → logprob: -10.259223937988281

Token 196: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000924561289139092
    2. ' =' → logprob: -7.375924587249756
    3. '=' → logprob: -8.125924110412598
    4. ' s' → logprob: -13.875924110412598
    5. '=s' → logprob: -14.500924110412598
    6. '=[]' → logprob: -15.125924110412598
    7. ',' → logprob: -15.250924110412598
    8. 'es' → logprob: -16.125925064086914
    9. '   ' → logprob: -17.500925064086914
    10. ' ' → logprob: -17.500925064086914

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018295204266905785
    2. '=' → logprob: -4.0182952880859375
    3. ',' → logprob: -8.893295288085938
    4. ' ,' → logprob: -13.018295288085938
    5. ' ' → logprob: -13.643295288085938
    6. ' =[' → logprob: -13.643295288085938
    7. '=[]' → logprob: -13.643295288085938
    8. '=[' → logprob: -13.893295288085938
    9. '   ' → logprob: -14.643295288085938
    10. '[' → logprob: -15.393295288085938

Token 198: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.28627994656562805
    2. '[' → logprob: -1.6612799167633057
    3. '[a' → logprob: -3.2862799167633057
    4. '[_' → logprob: -5.161280155181885
    5. '[e' → logprob: -5.286280155181885
    6. '[f' → logprob: -5.536280155181885
    7. '[i' → logprob: -6.036280155181885
    8. ' [_' → logprob: -6.411280155181885
    9. '_' → logprob: -6.786280155181885
    10. '[item' → logprob: -8.161279678344727

Token 199: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4294150769710541
    2. '_' → logprob: -1.4294151067733765
    3. '_]' → logprob: -2.679414987564087
    4. '_)' → logprob: -4.304415225982666
    5. 'f' → logprob: -4.804415225982666
    6. 'c' → logprob: -5.304415225982666
    7. 'e' → logprob: -5.429415225982666
    8. ' a' → logprob: -6.304415225982666
    9. '0' → logprob: -6.554415225982666
    10. 'x' → logprob: -6.804415225982666

Token 200: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005938516929745674
    2. 'for' → logprob: -5.130938529968262
    3. ',' → logprob: -12.630938529968262
    4. '[' → logprob: -12.880938529968262
    5. ' ' → logprob: -13.005938529968262
    6. '
' → logprob: -14.255938529968262
    7. '	for' → logprob: -15.130938529968262
    8. 'def' → logprob: -15.255938529968262
    9. ' 
' → logprob: -15.505938529968262
    10. ' ' → logprob: -16.755937576293945

Token 201: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3258657455444336
    2. '_,' → logprob: -1.4508657455444336
    3. '_' → logprob: -3.2008657455444336
    4. ' a' → logprob: -6.700865745544434
    5. ',' → logprob: -6.950865745544434
    6. '_a' → logprob: -8.075865745544434
    7. ' _,' → logprob: -8.325865745544434
    8. '(a' → logprob: -9.325865745544434
    9. ' _' → logprob: -9.700865745544434
    10. ',a' → logprob: -10.200865745544434

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027288071811199188
    2. ',_' → logprob: -4.02728796005249
    3. '_' → logprob: -5.02728796005249
    4. 'a' → logprob: -6.65228796005249
    5. '_,' → logprob: -8.027288436889648
    6. ',a' → logprob: -8.402288436889648
    7. ' in' → logprob: -8.777288436889648
    8. ',b' → logprob: -9.027288436889648
    9. ',f' → logprob: -9.277288436889648
    10. ' ,' → logprob: -9.402288436889648

Token 203: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004154618363827467
    2. 'f' → logprob: -6.129154682159424
    3. 'v' → logprob: -7.129154682159424
    4. '_f' → logprob: -7.504154682159424
    5. ' _' → logprob: -7.879154682159424
    6. ' f' → logprob: -8.629154205322266
    7. ' v' → logprob: -10.129154205322266
    8. '_v' → logprob: -11.629154205322266
    9. '_=' → logprob: -13.004154205322266
    10. 'b' → logprob: -13.379154205322266

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5232911109924316
    2. 'in' → logprob: -0.8982911109924316
    3. ',' → logprob: -9.023290634155273
    4. 'v' → logprob: -10.648290634155273
    5. ' ' → logprob: -11.773290634155273
    6. ',v' → logprob: -12.148290634155273
    7. 'f' → logprob: -12.648290634155273
    8. 'n' → logprob: -13.148290634155273
    9. ')' → logprob: -14.023290634155273
    10. ']' → logprob: -14.148290634155273

Token 205: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004620472434908152
    2. ' v' → logprob: -5.379620552062988
    3. '	v' → logprob: -16.754619598388672
    4. ')v' → logprob: -16.879619598388672
    5. ' ' → logprob: -17.254619598388672
    6. '[v' → logprob: -17.629619598388672
    7. '(v' → logprob: -17.879619598388672
    8. '   ' → logprob: -18.129619598388672
    9. '    ' → logprob: -19.129619598388672
    10. '
' → logprob: -19.254619598388672

Token 206: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014049944002181292
    2. ' ]' → logprob: -7.501404762268066
    3. '   ' → logprob: -8.251404762268066
    4. ')' → logprob: -8.376404762268066
    5. '
' → logprob: -9.001404762268066
    6. '<|end|>' → logprob: -9.126404762268066
    7. ']
' → logprob: -9.751404762268066
    8. '<|end|>' → logprob: -10.376404762268066
    9. ')]' → logprob: -11.876404762268066
    10. ']

' → logprob: -12.126404762268066

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06267286837100983
    2. 'for' → logprob: -3.3126728534698486
    3. ' for' → logprob: -3.8126728534698486
    4. '<|end|>' → logprob: -6.562673091888428
    5. '    
' → logprob: -7.687673091888428
    6. '
' → logprob: -8.68767261505127
    7. '	for' → logprob: -9.43767261505127
    8. ')' → logprob: -10.18767261505127
    9. ',' → logprob: -10.81267261505127
    10. '    ' → logprob: -11.31267261505127

Token 208: ' indices' (ID: 30378)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23912379145622253
    2. 'for' → logprob: -1.864123821258545
    3. '   ' → logprob: -2.864123821258545
    4. '
' → logprob: -8.489123344421387
    5. '    
' → logprob: -8.864123344421387
    6. ' 
' → logprob: -9.489123344421387
    7. ' product' → logprob: -9.864123344421387
    8. ' ' → logprob: -10.364123344421387
    9. '	for' → logprob: -10.864123344421387
    10. ',' → logprob: -11.114123344421387

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048651520162820816
    2. '=' → logprob: -3.0486514568328857
    3. ',' → logprob: -9.673651695251465
    4. ' =
' → logprob: -14.923651695251465
    5. ' =[' → logprob: -14.923651695251465
    6. ' ,' → logprob: -15.173651695251465
    7. '=[]' → logprob: -16.54865074157715
    8. ' ' → logprob: -16.79865074157715
    9. ' =
' → logprob: -17.29865074157715
    10. ' ' → logprob: -17.29865074157715

Token 210: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18372611701488495
    2. ' range' → logprob: -1.8087260723114014
    3. 'list' → logprob: -6.0587263107299805
    4. ' list' → logprob: -6.6837263107299805
    5. '[' → logprob: -8.30872631072998
    6. 'product' → logprob: -9.93372631072998
    7. ' [' → logprob: -10.68372631072998
    8. ' product' → logprob: -10.93372631072998
    9. '(range' → logprob: -11.05872631072998
    10. 'per' → logprob: -11.93372631072998

Token 211: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00027968952781520784
    2. '(M' → logprob: -8.500279426574707
    3. 'len' → logprob: -9.500279426574707
    4. '(' → logprob: -13.750279426574707
    5. ' len' → logprob: -15.750279426574707
    6. '(m' → logprob: -17.000280380249023
    7. '(S' → logprob: -17.250280380249023
    8. '=len' → logprob: -17.625280380249023
    9. '   ' → logprob: -17.750280380249023
    10. '(N' → logprob: -17.875280380249023

Token 212: '(v' (ID: 6932)
  Prédit: '(all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.5759716033935547
    2. '(v' → logprob: -0.8259716033935547
    3. '(' → logprob: -11.700971603393555
    4. '(a' → logprob: -11.825971603393555
    5. 'all' → logprob: -12.075971603393555
    6. 'v' → logprob: -12.075971603393555
    7. '(dp' → logprob: -14.575971603393555
    8. ' v' → logprob: -14.825971603393555
    9. ' all' → logprob: -14.825971603393555
    10. '(V' → logprob: -15.200971603393555

Token 213: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.875008583068848
    3. ' )' → logprob: -13.750008583068848
    4. '))' → logprob: -15.000008583068848
    5. ')

' → logprob: -15.750008583068848
    6. '   ' → logprob: -16.000009536743164
    7. ')}' → logprob: -16.875009536743164
    8. ' ' → logprob: -17.750009536743164
    9. ')))' → logprob: -18.125009536743164
    10. ')]' → logprob: -18.125009536743164

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8326807022094727
    2. ' for' → logprob: -1.3326807022094727
    3. 'for' → logprob: -1.7076807022094727
    4. '<|end|>' → logprob: -2.4576807022094727
    5. '
' → logprob: -4.457680702209473
    6. ')' → logprob: -4.582680702209473
    7. ' ' → logprob: -6.207680702209473
    8. ' 
' → logprob: -6.207680702209473
    9. '    
' → logprob: -6.332680702209473
    10. '  
' → logprob: -6.707680702209473

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8362978100776672
    2. 'for' (adapté à ' for') → logprob: -0.9612978100776672
    3. '   ' → logprob: -1.7112977504730225
    4. '    
' → logprob: -6.586297988891602
    5. '
' → logprob: -7.586297988891602
    6. ' 
' → logprob: -7.836297988891602
    7. 'product' → logprob: -8.211297988891602
    8. ' ' → logprob: -8.836297988891602
    9. ')' → logprob: -8.836297988891602
    10. '```' → logprob: -8.961297988891602

Token 216: ' subset' (ID: 58845)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9356759190559387
    2. 'i' → logprob: -1.685675859451294
    3. 'length' → logprob: -2.810675859451294
    4. ' i' → logprob: -2.935675859451294
    5. ' subset' → logprob: -2.935675859451294
    6. ' r' → logprob: -3.560675859451294
    7. 'subset' → logprob: -3.685675859451294
    8. 'idx' → logprob: -3.685675859451294
    9. 'r' → logprob: -3.810675859451294
    10. ' idx' → logprob: -4.060676097869873

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031796174589544535
    2. 'in' → logprob: -6.128179550170898
    3. '_size' → logprob: -7.628179550170898
    4. 's' → logprob: -8.878179550170898
    5. 'size' → logprob: -9.503179550170898
    6. '_subset' → logprob: -10.128179550170898
    7. '_indices' → logprob: -10.253179550170898
    8. '_in' → logprob: -10.503179550170898
    9. 'subset' → logprob: -10.503179550170898
    10. '_' → logprob: -10.628179550170898

Token 218: ' (' (ID: 350)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8899592161178589
    2. 'com' → logprob: -1.1399592161178589
    3. 'indices' → logprob: -2.1399593353271484
    4. ' product' → logprob: -3.2649593353271484
    5. ' combinations' → logprob: -3.5149593353271484
    6. 'chain' → logprob: -3.6399593353271484
    7. 'range' → logprob: -4.139959335327148
    8. '   ' → logprob: -4.389959335327148
    9. 'powers' → logprob: -4.514959335327148
    10. ' indices' → logprob: -5.139959335327148

Token 219: 'n' (ID: 77)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7883877158164978
    2. 'product' → logprob: -0.7883877158164978
    3. 'chain' → logprob: -3.1633877754211426
    4. 'range' → logprob: -3.5383877754211426
    5. 'indices' → logprob: -4.788387775421143
    6. 'comb' → logprob: -5.538387775421143
    7. 'per' → logprob: -5.913387775421143
    8. 'powers' → logprob: -6.163387775421143
    9. '   ' → logprob: -7.288387775421143
    10. ' combinations' → logprob: -7.788387775421143

Token 220: ' for' (ID: 395)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2265634834766388
    2. '(indices' → logprob: -1.7265634536743164
    3. ' indices' → logprob: -4.726563453674316
    4. 'subset' → logprob: -5.726563453674316
    5. 'com' → logprob: -6.351563453674316
    6. 'per' → logprob: -6.601563453674316
    7. 'range' → logprob: -6.726563453674316
    8. 'ices' → logprob: -6.851563453674316
    9. 'comb' → logprob: -7.101563453674316
    10. 'product' → logprob: -7.101563453674316

Token 221: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15230974555015564
    2. 'n' → logprob: -2.0273096561431885
    3. ' range' → logprob: -4.902309894561768
    4. 'range' → logprob: -7.027309894561768
    5. 'indices' → logprob: -7.652309894561768
    6. ' indices' → logprob: -7.777309894561768
    7. ' ' → logprob: -9.58980941772461
    8. 'subset' → logprob: -10.52730941772461
    9. ' subset' → logprob: -10.58980941772461
    10. ')' → logprob: -10.65230941772461

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12103531509637833
    2. ' range' → logprob: -2.99603533744812
    3. 'in' → logprob: -3.12103533744812
    4. 'range' → logprob: -3.99603533744812
    5. 'subset' → logprob: -7.621035099029541
    6. 'indices' → logprob: -8.7460355758667
    7. '(range' → logprob: -8.8710355758667
    8. ' n' → logprob: -9.1210355758667
    9. ' subset' → logprob: -9.3710355758667
    10. ' ' → logprob: -9.3710355758667

Token 223: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9081354141235352
    2. ' range' → logprob: -1.4081354141235352
    3. 'indices' → logprob: -1.4081354141235352
    4. ' indices' → logprob: -2.658135414123535
    5. ' combinations' → logprob: -4.033135414123535
    6. 'chain' → logprob: -5.033135414123535
    7. 'com' → logprob: -5.283135414123535
    8. ' chain' → logprob: -5.533135414123535
    9. 'product' → logprob: -6.158135414123535
    10. 'comb' → logprob: -6.908135414123535

Token 224: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0014502331614494324
    2. '(' → logprob: -6.751450061798096
    3. 'S' → logprob: -8.251450538635254
    4. '   ' → logprob: -11.501450538635254
    5. '1' → logprob: -12.376450538635254
    6. ' ' → logprob: -13.626450538635254
    7. ',S' → logprob: -14.001450538635254
    8. ')' → logprob: -14.501450538635254
    9. '	S' → logprob: -14.876450538635254
    10. ' (' → logprob: -15.501450538635254

Token 225: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0062690856866538525
    2. ')):' → logprob: -5.7562689781188965
    3. '):
' → logprob: -6.3812689781188965
    4. ')' → logprob: -7.2562689781188965
    5. ' ):' → logprob: -7.5062689781188965
    6. ' if' → logprob: -9.756269454956055
    7. '))' → logprob: -10.381269454956055
    8. 'if' → logprob: -10.881269454956055
    9. ')):
' → logprob: -11.631269454956055
    10. '   ' → logprob: -11.756269454956055

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3183779716491699
    2. ':' → logprob: -1.31837797164917
    3. ':
' → logprob: -6.81837797164917
    4. ' :' → logprob: -6.94337797164917
    5. '):' → logprob: -7.06837797164917
    6. '<|end|>' → logprob: -7.56837797164917
    7. '   ' → logprob: -7.81837797164917
    8. ',' → logprob: -7.94337797164917
    9. '):
' → logprob: -8.568378448486328
    10. ' for' → logprob: -8.693378448486328

Token 227: ' avail' (ID: 57507)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39228686690330505
    2. '       ' → logprob: -2.017286777496338
    3. 'for' → logprob: -2.267286777496338
    4. ' if' → logprob: -2.642286777496338
    5. 'if' → logprob: -4.642286777496338
    6. '   ' → logprob: -5.892286777496338
    7. '    ' → logprob: -6.892286777496338
    8. '        ' → logprob: -6.892286777496338
    9. ')' → logprob: -7.517286777496338
    10. '           ' → logprob: -8.017287254333496

Token 228: ' =' (ID: 314)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.7730699181556702
    2. '=' → logprob: -1.1480698585510254
    3. ' =' → logprob: -1.7730698585510254
    4. '_' → logprob: -4.148069858551025
    5. 'ables' → logprob: -5.148069858551025
    6. '_flags' → logprob: -5.148069858551025
    7. '   ' → logprob: -6.148069858551025
    8. ' ' → logprob: -6.148069858551025
    9. '_tokens' → logprob: -6.273069858551025
    10. ',' → logprob: -6.273069858551025

Token 229: ' zip' (ID: 16216)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3062453866004944
    2. '0' → logprob: -1.8062453269958496
    3. '[' → logprob: -3.3062453269958496
    4. '[]' → logprob: -4.43124532699585
    5. '[]
' → logprob: -4.43124532699585
    6. '[S' → logprob: -4.80624532699585
    7. '(dp' → logprob: -4.93124532699585
    8. 'subset' → logprob: -5.80624532699585
    9. 'S' → logprob: -6.30624532699585
    10. 'all' → logprob: -6.43124532699585

Token 230: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.06492702662944794
    2. '(indices' → logprob: -2.939927101135254
    3. '(dp' → logprob: -5.439927101135254
    4. '(range' → logprob: -6.314927101135254
    5. '([' → logprob: -6.439927101135254
    6. '(' → logprob: -7.064927101135254
    7. '((' → logprob: -7.439927101135254
    8. 'all' → logprob: -7.564927101135254
    9. '(
' → logprob: -9.689927101135254
    10. '(*' → logprob: -10.314927101135254

Token 231: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.030938543379306793
    2. '_flags' → logprob: -3.5309386253356934
    3. 'cost' → logprob: -6.780938625335693
    4. '_indices' → logprob: -10.405938148498535
    5. 'flags' → logprob: -11.905938148498535
    6. '
' → logprob: -12.780938148498535
    7. ' costs' → logprob: -13.280938148498535
    8. 'Costs' → logprob: -14.155938148498535
    9. '

' → logprob: -14.280938148498535
    10. '_f' → logprob: -14.530938148498535

Token 232: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04227016121149063
    2. 'ost' → logprob: -3.6672701835632324
    3. 'sts' → logprob: -4.417270183563232
    4. ',' → logprob: -6.917270183563232
    5. 'os' → logprob: -7.042270183563232
    6. 'ots' → logprob: -8.042269706726074
    7. '_cost' → logprob: -8.167269706726074
    8. 'cost' → logprob: -8.292269706726074
    9. 'ts' → logprob: -8.917269706726074
    10. 'ects' → logprob: -9.417269706726074

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007281587924808264
    2. ' ,' → logprob: -5.13228178024292
    3. '   ' → logprob: -7.50728178024292
    4. 'all' → logprob: -8.007281303405762
    5. ' all' → logprob: -8.632281303405762
    6. '       ' → logprob: -9.132281303405762
    7. '           ' → logprob: -10.507281303405762
    8. ',n' → logprob: -11.007281303405762
    9. ' ' → logprob: -11.132281303405762
    10. '[' → logprob: -11.257281303405762

Token 234: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04308289289474487
    2. ' all' → logprob: -3.1680829524993896
    3. '[' → logprob: -10.043083190917969
    4. ' [' → logprob: -11.668083190917969
    5. '(all' → logprob: -11.668083190917969
    6. 'chain' → logprob: -12.543083190917969
    7. ' ' → logprob: -12.543083190917969
    8. ')' → logprob: -12.543083190917969
    9. '   ' → logprob: -12.543083190917969
    10. '	all' → logprob: -13.668083190917969

Token 235: '_flags' (ID: 33898)
  Prédit: '_flags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.0012253470486029983
    2. 'flags' → logprob: -6.876225471496582
    3. 'all' → logprob: -8.626225471496582
    4. 'Flags' → logprob: -12.876225471496582
    5. '
' → logprob: -13.251225471496582
    6. '_' → logprob: -13.501225471496582
    7. '_f' → logprob: -13.876225471496582
    8. ' all' → logprob: -14.126225471496582
    9. '_all' → logprob: -14.626225471496582
    10. '[' → logprob: -14.626225471496582

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006875806488096714
    2. ',' → logprob: -5.881875991821289
    3. '       ' → logprob: -6.881875991821289
    4. ')
' → logprob: -6.881875991821289
    5. '):
' → logprob: -7.256875991821289
    6. '):' → logprob: -7.631875991821289
    7. '())' → logprob: -8.131875991821289
    8. ' )' → logprob: -8.756875991821289
    9. '   ' → logprob: -8.881875991821289
    10. ',)' → logprob: -9.256875991821289

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037095751613378525
    2. '<|end|>' → logprob: -3.537095785140991
    3. ',' → logprob: -6.412095546722412
    4. ')' → logprob: -6.662095546722412
    5. ':' → logprob: -6.787095546722412
    6. '
' → logprob: -6.912095546722412
    7. '<|end|>' → logprob: -7.287095546722412
    8. '        
' → logprob: -8.03709602355957
    9. ' for' → logprob: -8.16209602355957
    10. '):
' → logprob: -8.41209602355957

Token 238: ' updates' (ID: 12663)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6675885915756226
    2. 'for' → logprob: -1.0425885915756226
    3. '       ' → logprob: -2.042588710784912
    4. ')' → logprob: -6.542588710784912
    5. '):
' → logprob: -6.792588710784912
    6. '   ' → logprob: -7.167588710784912
    7. ',' → logprob: -7.167588710784912
    8. '):' → logprob: -8.667588233947754
    9. '
' → logprob: -9.417588233947754
    10. '        
' → logprob: -9.667588233947754

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06391582638025284
    2. '=' → logprob: -2.938915729522705
    3. ':' → logprob: -5.563915729522705
    4. 'for' → logprob: -6.313915729522705
    5. '   ' → logprob: -6.438915729522705
    6. '       ' → logprob: -7.063915729522705
    7. ' for' → logprob: -7.688915729522705
    8. '    ' → logprob: -9.438916206359863
    9. ' ' → logprob: -9.438916206359863
    10. '     ' → logprob: -10.438916206359863

Token 240: ' ((' (ID: 3536)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1980309635400772
    2. '{}' → logprob: -2.448030948638916
    3. '((' → logprob: -3.323030948638916
    4. '[(' → logprob: -3.698030948638916
    5. 'default' → logprob: -5.073030948638916
    6. '[]
' → logprob: -5.323030948638916
    7. '[' → logprob: -5.323030948638916
    8. '(' → logprob: -5.323030948638916
    9. ' []' → logprob: -6.073030948638916
    10. '(chain' → logprob: -6.323030948638916

Token 241: 'subset' (ID: 163297)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5029690265655518
    2. 'dp' → logprob: -1.5029690265655518
    3. 'c' → logprob: -2.2529690265655518
    4. 'a' → logprob: -4.127968788146973
    5. 'subset' → logprob: -4.127968788146973
    6. 'avail' → logprob: -4.377968788146973
    7. ' cost' → logprob: -6.127968788146973
    8. 'curr' → logprob: -6.127968788146973
    9. '(cost' → logprob: -6.127968788146973
    10. ' dp' → logprob: -6.627968788146973

Token 242: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.47730734944343567
    2. '|' → logprob: -0.9773073196411133
    3. ',' → logprob: -5.852307319641113
    4. ' ,' → logprob: -8.602307319641113
    5. ' ' → logprob: -10.477307319641113
    6. '   ' → logprob: -10.602307319641113
    7. '[' → logprob: -10.852307319641113
    8. '|(' → logprob: -11.352307319641113
    9. '|
' → logprob: -11.477307319641113
    10. '
' → logprob: -11.477307319641113

Token 243: ' flag' (ID: 9641)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21617192029953003
    2. ' f' → logprob: -2.591171979904175
    3. 'flag' → logprob: -2.591171979904175
    4. 'flags' → logprob: -4.091171741485596
    5. 'mask' → logprob: -4.466171741485596
    6. ' flag' → logprob: -4.966171741485596
    7. ' mask' → logprob: -5.716171741485596
    8. ' flags' → logprob: -6.216171741485596
    9. '(flag' → logprob: -7.091171741485596
    10. '(f' → logprob: -7.466171741485596

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001266301842406392
    2. ')' → logprob: -7.5012664794921875
    3. ' ,' → logprob: -7.7512664794921875
    4. ' for' → logprob: -9.251266479492188
    5. ',
' → logprob: -10.251266479492188
    6. '),' → logprob: -10.251266479492188
    7. 'for' → logprob: -10.501266479492188
    8. ',)' → logprob: -10.501266479492188
    9. '   ' → logprob: -11.001266479492188
    10. '
' → logprob: -11.501266479492188

Token 245: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14206348359584808
    2. 'cost' → logprob: -2.3920633792877197
    3. ' dp' → logprob: -3.6420633792877197
    4. 'min' → logprob: -4.767063617706299
    5. ' cost' → logprob: -5.392063617706299
    6. ' min' → logprob: -7.017063617706299
    7. 'a' → logprob: -8.51706314086914
    8. 'c' → logprob: -8.64206314086914
    9. 'curr' → logprob: -9.26706314086914
    10. '   ' → logprob: -9.76706314086914

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026649056002497673
    2. '[sub' → logprob: -3.651648998260498
    3. 'subset' → logprob: -8.776649475097656
    4. ' [' → logprob: -9.526649475097656
    5. '[n' → logprob: -10.151649475097656
    6. ')' → logprob: -11.151649475097656
    7. 'sub' → logprob: -11.401649475097656
    8. '(sub' → logprob: -11.651649475097656
    9. '[
' → logprob: -11.651649475097656
    10. '[s' → logprob: -11.776649475097656

Token 247: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.00016194197814911604
    2. ' subset' → logprob: -8.750162124633789
    3. '[' → logprob: -12.875162124633789
    4. '_subset' → logprob: -14.625162124633789
    5. 'substring' → logprob: -15.375162124633789
    6. 'sub' → logprob: -16.12516212463379
    7. 'subtotal' → logprob: -16.87516212463379
    8. ']' → logprob: -17.50016212463379
    9. '
' → logprob: -17.75016212463379
    10. '   ' → logprob: -17.75016212463379

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001910192659124732
    2. ']+' → logprob: -6.501910209655762
    3. ' ]' → logprob: -8.001910209655762
    4. ')' → logprob: -9.751910209655762
    5. '])' → logprob: -12.126910209655762
    6. '   ' → logprob: -13.626910209655762
    7. ' ' → logprob: -13.876910209655762
    8. '[' → logprob: -14.001910209655762
    9. ')]' → logprob: -14.001910209655762
    10. 'a' → logprob: -14.251910209655762

Token 249: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.576386570930481
    2. '+' → logprob: -0.826386570930481
    3. ')' → logprob: -8.326386451721191
    4. '+
' → logprob: -9.951386451721191
    5. ',' → logprob: -10.076386451721191
    6. '+a' → logprob: -10.826386451721191
    7. '+)' → logprob: -11.076386451721191
    8. ' +
' → logprob: -11.576386451721191
    9. ')+' → logprob: -11.701386451721191
    10. 'if' → logprob: -11.826386451721191

Token 250: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.038144081830978394
    2. ' cost' → logprob: -3.288144111633301
    3. 'c' → logprob: -9.7881441116333
    4. 'a' → logprob: -10.9131441116333
    5. '   ' → logprob: -12.4131441116333
    6. 'ac' → logprob: -12.4131441116333
    7. ')' → logprob: -12.9131441116333
    8. ' ' → logprob: -13.0381441116333
    9. '(cost' → logprob: -13.1631441116333
    10. '```' → logprob: -13.4131441116333

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028743778239004314
    2. ')
' → logprob: -8.875287055969238
    3. ' )' → logprob: -9.500287055969238
    4. '   ' → logprob: -9.750287055969238
    5. '       ' → logprob: -12.625287055969238
    6. '))' → logprob: -12.625287055969238
    7. '    ' → logprob: -13.250287055969238
    8. '  ' → logprob: -14.000287055969238
    9. '           ' → logprob: -14.125287055969238
    10. '         ' → logprob: -14.500287055969238

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.040069546550512314
    2. 'for' → logprob: -3.290069580078125
    3. ')' → logprob: -6.665069580078125
    4. '       ' → logprob: -7.540069580078125
    5. '   ' → logprob: -9.790069580078125
    6. '           ' → logprob: -9.915069580078125
    7. '        ' → logprob: -10.790069580078125
    8. '	for' → logprob: -11.415069580078125
    9. '               ' → logprob: -11.540069580078125
    10. '    ' → logprob: -11.540069580078125

Token 253: ' cost' (ID: 3097)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.489236444234848
    2. 'cost' → logprob: -0.9892364740371704
    3. ' cost' → logprob: -4.489236354827881
    4. ' (' → logprob: -5.864236354827881
    5. '(c' → logprob: -8.364236831665039
    6. 'subset' → logprob: -8.989236831665039
    7. '(i' → logprob: -9.614236831665039
    8. '_,' → logprob: -9.614236831665039
    9. '(_,' → logprob: -9.739236831665039
    10. '((' → logprob: -10.114236831665039

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.875018119812012
    3. ',c' → logprob: -12.750018119812012
    4. ',
' → logprob: -13.250018119812012
    5. ',f' → logprob: -13.625018119812012
    6. ',user' → logprob: -13.750018119812012
    7. '<|end|>' → logprob: -13.750018119812012
    8. ',value' → logprob: -14.625018119812012
    9. ' in' → logprob: -15.250018119812012
    10. ',const' → logprob: -15.500018119812012

Token 255: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0018073876854032278
    2. ' flag' → logprob: -6.37680721282959
    3. 'mask' → logprob: -10.00180721282959
    4. '(flag' → logprob: -10.25180721282959
    5. 'flags' → logprob: -11.87680721282959
    6. 'f' → logprob: -12.12680721282959
    7. '	flag' → logprob: -12.75180721282959
    8. ' ' → logprob: -13.25180721282959
    9. 'avail' → logprob: -13.62680721282959
    10. ' mask' → logprob: -13.75180721282959

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08036120235919952
    2. 'in' → logprob: -2.5803611278533936
    3. ')' → logprob: -6.580361366271973
    4. ' )' → logprob: -10.955361366271973
    5. '	in' → logprob: -11.080361366271973
    6. '<|end|>' → logprob: -11.080361366271973
    7. ',' → logprob: -11.205361366271973
    8. ' ' → logprob: -11.705361366271973
    9. '),' → logprob: -12.455361366271973
    10. '_in' → logprob: -13.455361366271973

Token 257: ' avail' (ID: 57507)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.01112245861440897
    2. ' avail' → logprob: -4.511122226715088
    3. 'zip' → logprob: -10.136122703552246
    4. 'available' → logprob: -11.136122703552246
    5. 'all' → logprob: -11.636122703552246
    6. ' ' → logprob: -12.761122703552246
    7. ' zip' → logprob: -12.761122703552246
    8. '
' → logprob: -13.761122703552246
    9. 'availability' → logprob: -13.761122703552246
    10. '   ' → logprob: -14.386122703552246

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12306981533765793
    2. ' if' → logprob: -2.8730697631835938
    3. ')
' → logprob: -2.9980697631835938
    4. '       ' → logprob: -4.873069763183594
    5. 'if' → logprob: -6.748069763183594
    6. '   ' → logprob: -7.873069763183594
    7. ' )' → logprob: -9.873069763183594
    8. '           ' → logprob: -10.123069763183594
    9. ')
' → logprob: -10.498069763183594
    10. '      ' → logprob: -11.373069763183594

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021605310030281544
    2. ' for' → logprob: -9.000216484069824
    3. ')' → logprob: -10.125216484069824
    4. '<|end|>' → logprob: -10.625216484069824
    5. ',' → logprob: -11.125216484069824
    6. '           ' → logprob: -12.500216484069824
    7. 'for' → logprob: -12.750216484069824
    8. '   ' → logprob: -12.875216484069824
    9. '        
' → logprob: -13.500216484069824
    10. '<|end|>' → logprob: -14.250216484069824

Token 260: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1194094642996788
    2. ' for' → logprob: -2.3694095611572266
    3. '       ' → logprob: -3.9944095611572266
    4. '   ' → logprob: -7.744409561157227
    5. ')' → logprob: -9.994409561157227
    6. '
' → logprob: -10.369409561157227
    7. ',' → logprob: -10.619409561157227
    8. '           ' → logprob: -11.244409561157227
    9. 'updates' → logprob: -11.244409561157227
    10. '	for' → logprob: -11.619409561157227

Token 261: ' idx' (ID: 14016)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5476123094558716
    2. 'next' → logprob: -1.0476123094558716
    3. 'to' → logprob: -4.297612190246582
    4. 'ns' → logprob: -4.297612190246582
    5. 'n' → logprob: -4.422612190246582
    6. ' nxt' → logprob: -4.672612190246582
    7. ' next' → logprob: -5.547612190246582
    8. ' new' → logprob: -5.797612190246582
    9. 't' → logprob: -6.047612190246582
    10. '(next' → logprob: -6.422612190246582

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026881758123636246
    2. '_,' → logprob: -4.026881694793701
    3. 'next' → logprob: -6.651881694793701
    4. ' ,' → logprob: -6.651881694793701
    5. '1' → logprob: -7.026881694793701
    6. 'in' → logprob: -7.151881694793701
    7. 'new' → logprob: -7.276881694793701
    8. ' in' → logprob: -7.276881694793701
    9. ',next' → logprob: -7.401881694793701
    10. '_next' → logprob: -7.526881694793701

Token 263: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.45906925201416016
    2. '(new' → logprob: -1.8340692520141602
    3. ' (' → logprob: -2.08406925201416
    4. '(update' → logprob: -3.58406925201416
    5. '(up' → logprob: -3.83406925201416
    6. '(n' → logprob: -4.20906925201416
    7. '(updated' → logprob: -5.20906925201416
    8. '(' → logprob: -5.45906925201416
    9. '(to' → logprob: -5.95906925201416
    10. '(target' → logprob: -6.45906925201416

Token 264: 'to' (ID: 935)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8946138620376587
    2. 'next' → logprob: -1.0196138620376587
    3. 'n' → logprob: -2.019613742828369
    4. 'ns' → logprob: -2.769613742828369
    5. 'to' → logprob: -3.769613742828369
    6. ' nxt' → logprob: -5.519613742828369
    7. 's' → logprob: -6.644613742828369
    8. ' next' → logprob: -7.144613742828369
    9. 'nx' → logprob: -7.144613742828369
    10. 'npos' → logprob: -7.519613742828369

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2751140892505646
    2. '_subset' → logprob: -1.7751140594482422
    3. '_mask' → logprob: -3.650114059448242
    4. '_state' → logprob: -3.900114059448242
    5. '_set' → logprob: -5.150114059448242
    6. '_,' → logprob: -5.275114059448242
    7. 'subset' → logprob: -6.025114059448242
    8. 'state' → logprob: -6.150114059448242
    9. ',state' → logprob: -6.650114059448242
    10. ',_' → logprob: -6.775114059448242

Token 266: ' nxt' (ID: 160200)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6665252447128296
    2. 'cost' → logprob: -1.5415252447128296
    3. 'new' → logprob: -2.041525363922119
    4. 'c' → logprob: -3.166525363922119
    5. 'nc' → logprob: -3.666525363922119
    6. 'cand' → logprob: -4.166525363922119
    7. ' new' → logprob: -4.541525363922119
    8. ' val' → logprob: -4.666525363922119
    9. 'cc' → logprob: -4.916525363922119
    10. ' cost' → logprob: -5.166525363922119

Token 267: '_cost' (ID: 36820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1773257553577423
    2. '_cost' → logprob: -1.92732572555542
    3. 'cost' → logprob: -4.17732572555542
    4. '_val' → logprob: -6.80232572555542
    5. 'val' → logprob: -8.302326202392578
    6. '_value' → logprob: -9.177326202392578
    7. 'Cost' → logprob: -10.802326202392578
    8. ' )' → logprob: -11.052326202392578
    9. '_c' → logprob: -11.302326202392578
    10. 'v' → logprob: -11.302326202392578

Token 268: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001875671005109325
    2. ' )' → logprob: -8.625187873840332
    3. ' in' → logprob: -12.375187873840332
    4. 'in' → logprob: -12.625187873840332
    5. ')
' → logprob: -16.000186920166016
    6. ')=' → logprob: -16.750186920166016
    7. ',)' → logprob: -17.000186920166016
    8. '),' → logprob: -17.250186920166016
    9. '
' → logprob: -17.250186920166016
    10. '   ' → logprob: -17.375186920166016

Token 269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02088915929198265
    2. 'in' → logprob: -3.8958890438079834
    3. ')' → logprob: -8.020889282226562
    4. ' ' → logprob: -12.020889282226562
    5. '	in' → logprob: -12.645889282226562
    6. ' )' → logprob: -13.020889282226562
    7. '_in' → logprob: -13.520889282226562
    8. '<|end|>' → logprob: -14.145889282226562
    9. ',' → logprob: -14.270889282226562
    10. '=' → logprob: -14.520889282226562

Token 270: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.11285680532455444
    2. ' enumerate' → logprob: -2.237856864929199
    3. 'updates' → logprob: -11.1128568649292
    4. '
' → logprob: -12.3628568649292
    5. ' ' → logprob: -12.7378568649292
    6. '   ' → logprob: -12.9878568649292
    7. 'update' → logprob: -12.9878568649292
    8. '```' → logprob: -13.2378568649292
    9. 'en' → logprob: -13.6128568649292
    10. '  ' → logprob: -14.1128568649292

Token 271: '(up' (ID: 72138)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updates' → logprob: -0.01516494806855917
    2. ' updates' → logprob: -4.515164852142334
    3. '(up' → logprob: -5.515164852142334
    4. 'up' → logprob: -9.640165328979492
    5. ' ' → logprob: -12.640165328979492
    6. '((' → logprob: -12.890165328979492
    7. '_updates' → logprob: -12.890165328979492
    8. 'update' → logprob: -13.265165328979492
    9. 'enumer' → logprob: -13.265165328979492
    10. '   ' → logprob: -14.140165328979492

Token 272: 'dates' (ID: 9215)
  Prédit: 'dates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dates' → logprob: -0.0011898684315383434
    2. 'ates' → logprob: -6.751189708709717
    3. 'date' → logprob: -11.251190185546875
    4. 'updates' → logprob: -12.251190185546875
    5. 'DATES' → logprob: -14.376190185546875
    6. 'd' → logprob: -15.126190185546875
    7. 'dp' → logprob: -15.501190185546875
    8. ')' → logprob: -15.876190185546875
    9. '
' → logprob: -16.251190185546875
    10. 'tes' → logprob: -16.501190185546875

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00824587419629097
    2. ':' → logprob: -5.383245944976807
    3. '):
' → logprob: -5.633245944976807
    4. '       ' → logprob: -11.258245468139648
    5. ' ):' → logprob: -11.258245468139648
    6. '):
' → logprob: -12.133245468139648
    7. '():' → logprob: -12.508245468139648
    8. '   ' → logprob: -12.633245468139648
    9. '}:' → logprob: -14.258245468139648
    10. '):

' → logprob: -14.508245468139648

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08835288137197495
    2. ':' → logprob: -2.963352918624878
    3. '<|end|>' → logprob: -3.963352918624878
    4. '):
' → logprob: -5.588352680206299
    5. '):' → logprob: -5.838352680206299
    6. '       ' → logprob: -5.963352680206299
    7. ':
' → logprob: -6.713352680206299
    8. '<|end|>' → logprob: -6.963352680206299
    9. ')' → logprob: -7.213352680206299
    10. ',' → logprob: -7.838352680206299

Token 275: ' dp' (ID: 21546)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4493522047996521
    2. ' if' → logprob: -1.0743522644042969
    3. 'if' → logprob: -3.949352264404297
    4. '           ' → logprob: -7.824352264404297
    5. '<|end|>' → logprob: -8.324352264404297
    6. '	           ' → logprob: -8.699352264404297
    7. '	if' → logprob: -9.699352264404297
    8. '	       ' → logprob: -9.699352264404297
    9. ' ' → logprob: -10.574352264404297
    10. '   ' → logprob: -10.574352264404297

Token 276: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.7133641196996905e-05
    2. '[' → logprob: -11.25002670288086
    3. 'to' → logprob: -11.37502670288086
    4. '[
' → logprob: -14.12502670288086
    5. 'if' → logprob: -14.50002670288086
    6. '   ' → logprob: -15.50002670288086
    7. '_to' → logprob: -15.87502670288086
    8. ' to' → logprob: -16.25002670288086
    9. '=' → logprob: -16.25002670288086
    10. '[min' → logprob: -16.50002670288086

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020036997739225626
    2. ']=' → logprob: -6.5020036697387695
    3. ' ]' → logprob: -8.50200366973877
    4. '>' → logprob: -9.25200366973877
    5. '=' → logprob: -9.50200366973877
    6. ')' → logprob: -9.75200366973877
    7. ' =' → logprob: -9.75200366973877
    8. ']>' → logprob: -12.00200366973877
    9. '=min' → logprob: -13.87700366973877
    10. 'min' → logprob: -14.37700366973877

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004093358293175697
    2. ' =' → logprob: -5.504093170166016
    3. '=min' → logprob: -11.129093170166016
    4. '>' → logprob: -16.504093170166016
    5. '.=' → logprob: -16.504093170166016
    6. 'min' → logprob: -16.879093170166016
    7. '=max' → logprob: -17.004093170166016
    8. '=}' → logprob: -17.754093170166016
    9. ')' → logprob: -18.754093170166016
    10. '=
' → logprob: -18.754093170166016

Token 279: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20141500234603882
    2. ' min' → logprob: -1.7014150619506836
    3. '	min' → logprob: -13.576415061950684
    4. '[min' → logprob: -16.576414108276367
    5. '=min' → logprob: -16.826414108276367
    6. '(min' → logprob: -16.826414108276367
    7. 'n' → logprob: -17.076414108276367
    8. '   ' → logprob: -18.201414108276367
    9. '_min' → logprob: -18.576414108276367
    10. ',min' → logprob: -18.701414108276367

Token 280: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0009252764866687357
    2. '(' → logprob: -7.000925064086914
    3. 'dp' → logprob: -11.250925064086914
    4. '(
' → logprob: -15.000925064086914
    5. ' (' → logprob: -15.125925064086914
    6. ' dp' → logprob: -16.750925064086914
    7. '	dp' → logprob: -16.875925064086914
    8. '(d' → logprob: -17.375925064086914
    9. '(df' → logprob: -17.750925064086914
    10. '(dt' → logprob: -18.000925064086914

Token 281: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.000004768371582
    3. 'to' → logprob: -13.375004768371582
    4. '[
' → logprob: -14.125004768371582
    5. '(to' → logprob: -15.875004768371582
    6. '[from' → logprob: -16.5000057220459
    7. ')' → logprob: -16.7500057220459
    8. 'dp' → logprob: -17.1250057220459
    9. ',to' → logprob: -17.5000057220459
    10. '[top' → logprob: -17.8750057220459

Token 282: '],' (ID: 2155)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.6217382550239563
    2. '],' → logprob: -1.2467381954193115
    3. '_cost' → logprob: -2.6217381954193115
    4. ',' → logprob: -2.8717381954193115
    5. 'to' → logprob: -3.9967381954193115
    6. '])' → logprob: -4.246738433837891
    7. ',to' → logprob: -5.621738433837891
    8. '),' → logprob: -5.746738433837891
    9. ']' → logprob: -6.121738433837891
    10. '_to' → logprob: -6.871738433837891

Token 283: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6326389312744141
    2. ' nxt' → logprob: -0.7576389312744141
    3. ' n' → logprob: -11.257638931274414
    4. '   ' → logprob: -12.507638931274414
    5. '	n' → logprob: -12.882638931274414
    6. '(n' → logprob: -13.132638931274414
    7. '       ' → logprob: -13.132638931274414
    8. '[n' → logprob: -13.257638931274414
    9. ' nex' → logprob: -13.382638931274414
    10. ' ' → logprob: -13.507638931274414

Token 284: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.5776860184123507e-06
    2. 'cost' → logprob: -13.00000286102295
    3. '_COST' → logprob: -16.250001907348633
    4. 't' → logprob: -16.500001907348633
    5. '-cost' → logprob: -17.875001907348633
    6. '_c' → logprob: -18.875001907348633
    7. 'Cost' → logprob: -19.125001907348633
    8. ' cost' → logprob: -19.625001907348633
    9. '_' → logprob: -19.625001907348633
    10. '```' → logprob: -20.250001907348633

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017078984528779984
    2. ')
' → logprob: -6.376708030700684
    3. '   ' → logprob: -13.001708030700684
    4. ' )' → logprob: -13.376708030700684
    5. '       ' → logprob: -13.876708030700684
    6. ')

' → logprob: -14.876708030700684
    7. ')return' → logprob: -15.251708030700684
    8. '           ' → logprob: -15.376708030700684
    9. ')
' → logprob: -16.626707077026367
    10. '
' → logprob: -17.376707077026367

Token 286: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2291017770767212
    2. '
' → logprob: -2.2291016578674316
    3. 'return' (adapté à ' return') → logprob: -2.9791016578674316
    4. '<|end|>' → logprob: -3.3541016578674316
    5. 'print' → logprob: -6.104101657867432
    6. 'for' → logprob: -6.104101657867432
    7. '    
' → logprob: -6.229101657867432
    8. 'if' → logprob: -6.354101657867432
    9. ' return' → logprob: -7.104101657867432
    10. '```' → logprob: -7.354101657867432

Token 288: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10888393223285675
    2. ' dp' → logprob: -2.608883857727051
    3. 'min' → logprob: -3.858883857727051
    4. ' min' → logprob: -4.858883857727051
    5. '(dp' → logprob: -8.10888385772705
    6. '0' → logprob: -8.73388385772705
    7. 'None' → logprob: -9.85888385772705
    8. 'max' → logprob: -10.10888385772705
    9. ' ' → logprob: -10.23388385772705
    10. ' None' → logprob: -10.48388385772705

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1003427505493164
    2. 'dp' → logprob: -2.3503427505493164
    3. ' dp' → logprob: -9.725342750549316
    4. 'int' → logprob: -9.725342750549316
    5. 'min' → logprob: -12.475342750549316
    6. '(dp' → logprob: -12.600342750549316
    7. ' ' → logprob: -13.350342750549316
    8. '2' → logprob: -13.725342750549316
    9. '```' → logprob: -14.225342750549316
    10. 'max' → logprob: -14.225342750549316

Token 290: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023288683965802193
    2. ' dp' → logprob: -3.7732887268066406
    3. 'min' → logprob: -10.77328872680664
    4. 'all' → logprob: -11.89828872680664
    5. '(dp' → logprob: -12.27328872680664
    6. ' all' → logprob: -12.64828872680664
    7. ' min' → logprob: -12.77328872680664
    8. 'max' → logprob: -13.64828872680664
    9. 'not' → logprob: -13.77328872680664
    10. 'inf' → logprob: -14.14828872680664

Token 292: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06546255946159363
    2. '[' → logprob: -3.190462589263916
    3. '[S' → logprob: -3.815462589263916
    4. '[(' → logprob: -8.940462112426758
    5. '[len' → logprob: -10.565462112426758
    6. '```' → logprob: -12.065462112426758
    7. '[...]' → logprob: -12.940462112426758
    8. '[N' → logprob: -13.190462112426758
    9. ' ' → logprob: -13.190462112426758
    10. 'S' → logprob: -13.190462112426758

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ']' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '１' → logprob: -17.375001907348633
    5. '
' → logprob: -18.437501907348633
    6. '۱' → logprob: -18.937501907348633
    7. '```' → logprob: -19.125001907348633
    8. '2' → logprob: -19.500001907348633
    9. ']==' → logprob: -19.625001907348633
    10. ']]' → logprob: -19.750001907348633

Token 294: ']==' (ID: 34128)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07935171574354172
    2. '==' → logprob: -2.5793516635894775
    3. ']==' → logprob: -8.329351425170898
    4. ' ' → logprob: -9.329351425170898
    5. ' is' → logprob: -10.079351425170898
    6. ']' → logprob: -10.204351425170898
    7. '[' → logprob: -11.204351425170898
    8. ')' → logprob: -11.454351425170898
    9. '```' → logprob: -11.454351425170898
    10. ')==' → logprob: -12.204351425170898

Token 295: 'INF' (ID: 64358)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007509016431868076
    2. ' float' → logprob: -7.37575101852417
    3. 'inf' → logprob: -9.250750541687012
    4. '0' → logprob: -11.250750541687012
    5. '=float' → logprob: -12.500750541687012
    6. '(float' → logprob: -12.750750541687012
    7. '	float' → logprob: -12.875750541687012
    8. 'int' → logprob: -13.875750541687012
    9. '<float' → logprob: -13.875750541687012
    10. '1' → logprob: -14.500750541687012

Token 296: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.048592593520879745
    2. 'else' → logprob: -3.0485925674438477
    3. '	else' → logprob: -12.298592567443848
    4. ' ' → logprob: -14.923592567443848
    5. '```' → logprob: -15.923592567443848
    6. '_else' → logprob: -16.548593521118164
    7. '   ' → logprob: -16.673593521118164
    8. '  ' → logprob: -17.423593521118164
    9. ' ' → logprob: -17.673593521118164
    10. ' 
' → logprob: -17.923593521118164

Token 297: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004085758700966835
    2. ' dp' → logprob: -5.504085540771484
    3. 'int' → logprob: -11.879085540771484
    4. '(dp' → logprob: -15.754085540771484
    5. ' int' → logprob: -16.379085540771484
    6. '	dp' → logprob: -17.754085540771484
    7. '   ' → logprob: -18.504085540771484
    8. 'print' → logprob: -18.754085540771484
    9. ' ' → logprob: -18.754085540771484
    10. 'str' → logprob: -18.879085540771484

Token 298: '[-' (ID: 17503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'dp' → logprob: -14.750000953674316
    3. '[-' → logprob: -15.625000953674316
    4. '[' → logprob: -16.875
    5. ' ' → logprob: -17.375
    6. ']' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. '{' → logprob: -18.25
    9. '
' → logprob: -18.5
    10. '```' → logprob: -18.75

Token 300: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1557283111615106e-05
    2. '<|end|>' → logprob: -11.125041961669922
    3. '}' → logprob: -11.375041961669922
    4. ')
' → logprob: -11.500041961669922
    5. ']' → logprob: -13.750041961669922
    6. ')}' → logprob: -14.125041961669922
    7. ')return' → logprob: -14.250041961669922
    8. ' )' → logprob: -14.625041961669922
    9. '')' → logprob: -14.750041961669922
    10. '```' → logprob: -14.875041961669922

Token 301: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014676744118332863
    2. 'print' → logprob: -4.764676570892334
    3. '<|end|>' → logprob: -5.889676570892334
    4. '```' → logprob: -6.889676570892334
    5. '
' → logprob: -7.389676570892334
    6. '#' → logprob: -7.389676570892334
    7. ' if' → logprob: -7.764676570892334
    8. 'proc' → logprob: -8.514677047729492
    9. 'def' → logprob: -8.764677047729492
    10. '<|end|>' → logprob: -10.139677047729492

Token 302: '(proc' (ID: 143689)
  Prédit: '(proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -0.20485526323318481
    2. '(' → logprob: -1.70485520362854
    3. '(pro' → logprob: -5.704855442047119
    4. '(process' → logprob: -9.579854965209961
    5. '('' → logprob: -11.204854965209961
    6. '()' → logprob: -11.954854965209961
    7. '(func' → logprob: -12.454854965209961
    8. '(print' → logprob: -12.829854965209961
    9. '(
' → logprob: -13.454854965209961
    10. '(prod' → logprob: -13.579854965209961

Token 303: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007341049495153129
    2. '()' → logprob: -7.250734329223633
    3. ')' → logprob: -10.750734329223633
    4. ' ())' → logprob: -13.625734329223633
    5. '();)' → logprob: -14.000734329223633
    6. '())
' → logprob: -14.500734329223633
    7. '()))' → logprob: -16.375734329223633
    8. '());' → logprob: -17.250734329223633
    9. '(' → logprob: -17.750734329223633
    10. '()]' → logprob: -17.875734329223633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 301
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 38.54%
Précision adaptée (1ère position): 40.53%
Précision (top 10): 79.40%
================================================================================
