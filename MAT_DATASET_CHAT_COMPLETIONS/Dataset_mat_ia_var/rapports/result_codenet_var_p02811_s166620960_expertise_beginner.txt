================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
k_x = input().split()
k = int(k_x[0])
x = int(k_x[1])
if k * 500 >= x:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'k' (ID: 74)
  → Token d'amorce (pas de prédiction)

Token 1: '_x' (ID: 7054)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4919697642326355
    2. ' ' → logprob: -1.4919698238372803
    3. '1' → logprob: -2.1169698238372803
    4. 'x' → logprob: -4.491969585418701
    5. '2' → logprob: -5.741969585418701
    6. '[' → logprob: -5.866969585418701
    7. ' x' → logprob: -5.991969585418701
    8. ' np' → logprob: -5.991969585418701
    9. '_' → logprob: -6.116969585418701
    10. ' k' → logprob: -6.241969585418701

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003229756373912096
    2. ''' → logprob: -6.62822961807251
    3. '[' → logprob: -7.12822961807251
    4. '"' → logprob: -8.003230094909668
    5. '.' → logprob: -8.503230094909668
    6. '_' → logprob: -8.628230094909668
    7. '('' → logprob: -9.253230094909668
    8. '(
' → logprob: -9.503230094909668
    9. '```' → logprob: -10.003230094909668
    10. '("("' → logprob: -10.128230094909668

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2727373540401459
    2. '+' → logprob: -2.6477372646331787
    3. '()' → logprob: -3.0227372646331787
    4. '_' → logprob: -3.3977372646331787
    5. '(' → logprob: -3.6477372646331787
    6. '.strip' → logprob: -4.147737503051758
    7. '*' → logprob: -4.397737503051758
    8. '[' → logprob: -5.272737503051758
    9. '**' → logprob: -5.397737503051758
    10. '.split' → logprob: -6.022737503051758

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005365899996832013
    2. '()' → logprob: -7.8755364418029785
    3. '("("' → logprob: -10.375536918640137
    4. '('' → logprob: -10.500536918640137
    5. '(
' → logprob: -10.750536918640137
    6. '"' → logprob: -10.750536918640137
    7. '(

' → logprob: -10.875536918640137
    8. '`' → logprob: -11.625536918640137
    9. '```' → logprob: -12.000536918640137
    10. '((' → logprob: -12.250536918640137

Token 7: 'k' (ID: 74)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009940597228705883
    2. '=' → logprob: -5.7599406242370605
    3. '[k' → logprob: -5.8849406242370605
    4. '.' → logprob: -6.6349406242370605
    5. '+' → logprob: -7.5099406242370605
    6. '[int' → logprob: -7.7599406242370605
    7. 'k' → logprob: -7.8849406242370605
    8. '```' → logprob: -8.009940147399902
    9. '\[' → logprob: -8.134940147399902
    10. '_' → logprob: -8.509940147399902

Token 8: ' =' (ID: 314)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.03423268720507622
    2. '_' → logprob: -3.4092326164245605
    3. '[' → logprob: -7.7842326164245605
    4. '[_' → logprob: -9.659233093261719
    5. ' _' → logprob: -10.284233093261719
    6. '_k' → logprob: -10.409233093261719
    7. '_[' → logprob: -11.409233093261719
    8. '_y' → logprob: -11.784233093261719
    9. ''_' → logprob: -12.034233093261719
    10. '```' → logprob: -12.409233093261719

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.047377392649650574
    2. '[int' → logprob: -3.672377347946167
    3. 'list' → logprob: -4.047377586364746
    4. ' int' → logprob: -6.422377586364746
    5. 'k' → logprob: -6.797377586364746
    6. ' list' → logprob: -8.797377586364746
    7. 'len' → logprob: -8.922377586364746
    8. '[k' → logprob: -9.547377586364746
    9. 'float' → logprob: -9.672377586364746
    10. '[' → logprob: -9.672377586364746

Token 10: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2824118733406067
    2. '(' → logprob: -1.407411813735962
    3. '('' → logprob: -7.407412052154541
    4. 'k' → logprob: -8.282411575317383
    5. '("("' → logprob: -8.532411575317383
    6. '_k' → logprob: -8.907411575317383
    7. '```' → logprob: -11.407411575317383
    8. '('_' → logprob: -11.532411575317383
    9. '((' → logprob: -12.032411575317383
    10. '(_)' → logprob: -12.407411575317383

Token 11: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01401893887668848
    2. '[' → logprob: -5.264019012451172
    3. '_k' → logprob: -5.514019012451172
    4. '_)' → logprob: -6.514019012451172
    5. '_' → logprob: -6.764019012451172
    6. ')' → logprob: -7.264019012451172
    7. 'x' → logprob: -7.514019012451172
    8. '[_' → logprob: -8.014019012451172
    9. '_[' → logprob: -8.764019012451172
    10. '[k' → logprob: -9.014019012451172

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4498052223643754e-05
    2. '[k' → logprob: -11.250014305114746
    3. ')' → logprob: -13.625014305114746
    4. ' [' → logprob: -16.875015258789062
    5. '[
' → logprob: -16.875015258789062
    6. '\[' → logprob: -16.875015258789062
    7. '```' → logprob: -18.000015258789062
    8. '[x' → logprob: -18.250015258789062
    9. '[len' → logprob: -18.625015258789062
    10. '[-' → logprob: -18.750015258789062

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9862216504407115e-05
    2. '1' → logprob: -11.000020027160645
    3. ' ' → logprob: -12.750020027160645
    4. ')' → logprob: -15.625020027160645
    5. ''' → logprob: -16.750019073486328
    6. '])' → logprob: -17.250019073486328
    7. '```' → logprob: -17.500019073486328
    8. ']' → logprob: -17.937519073486328
    9. '۰' → logprob: -18.000019073486328
    10. '-' → logprob: -18.062519073486328

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4747259318828583
    2. ')' → logprob: -0.9747259616851807
    3. ']' → logprob: -7.974725723266602
    4. ')]' → logprob: -9.224725723266602
    5. ')])' → logprob: -9.349725723266602
    6. ''])' → logprob: -9.599725723266602
    7. '))' → logprob: -11.724725723266602
    8. ' ])' → logprob: -11.849725723266602
    9. '])
' → logprob: -12.099725723266602
    10. ')
' → logprob: -12.099725723266602

Token 15: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5208081603050232
    2. '<|end|>' → logprob: -1.395808219909668
    3. '+' → logprob: -2.895808219909668
    4. ')' → logprob: -3.145808219909668
    5. 'k' → logprob: -3.520808219909668
    6. '[' → logprob: -5.520808219909668
    7. '*' → logprob: -5.520808219909668
    8. '<|end|>' → logprob: -5.645808219909668
    9. ',' → logprob: -5.770808219909668
    10. '_x' → logprob: -5.895808219909668

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2025638222694397
    2. '=' → logprob: -1.702563762664795
    3. '_' → logprob: -6.827563762664795
    4. ')' → logprob: -11.077564239501953
    5. '_=' → logprob: -11.077564239501953
    6. ' ' → logprob: -11.452564239501953
    7. ',' → logprob: -11.952564239501953
    8. '=int' → logprob: -12.327564239501953
    9. '=_' → logprob: -12.952564239501953
    10. '[' → logprob: -13.452564239501953

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25202953815460205
    2. ' int' → logprob: -1.502029538154602
    3. ' k' → logprob: -9.502029418945312
    4. 'k' → logprob: -10.877029418945312
    5. ' x' → logprob: -13.627029418945312
    6. 'x' → logprob: -13.752029418945312
    7. '=int' → logprob: -13.877029418945312
    8. '(int' → logprob: -14.127029418945312
    9. ' ' → logprob: -14.127029418945312
    10. '"' → logprob: -14.377029418945312

Token 18: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6950076818466187
    2. '(k' → logprob: -0.6950076818466187
    3. '(x' → logprob: -6.320007801055908
    4. '()' → logprob: -11.44500732421875
    5. ' (' → logprob: -11.44500732421875
    6. '("("' → logprob: -11.94500732421875
    7. '((' → logprob: -12.07000732421875
    8. '('' → logprob: -12.19500732421875
    9. '(

' → logprob: -12.94500732421875
    10. '(
' → logprob: -12.94500732421875

Token 19: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.11672352254390717
    2. '[' → logprob: -2.2417235374450684
    3. '])' → logprob: -6.491723537445068
    4. '][' → logprob: -7.241723537445068
    5. '_' → logprob: -7.991723537445068
    6. '1' → logprob: -8.24172306060791
    7. ']' → logprob: -8.36672306060791
    8. ')' → logprob: -8.36672306060791
    9. 'x' → logprob: -9.11672306060791
    10. '-' → logprob: -9.36672306060791

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. ' [' → logprob: -12.625005722045898
    3. '][' → logprob: -14.000005722045898
    4. ')' → logprob: -14.500005722045898
    5. ')[' → logprob: -15.000005722045898
    6. '```' → logprob: -15.625005722045898
    7. '   ' → logprob: -16.0000057220459
    8. '[
' → logprob: -16.0000057220459
    9. '1' → logprob: -16.2500057220459
    10. ']' → logprob: -16.3750057220459

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.750011444091797
    3. '0' → logprob: -13.625011444091797
    4. '])' → logprob: -14.375011444091797
    5. '```' → logprob: -14.875011444091797
    6. ']' → logprob: -15.312511444091797
    7. ')' → logprob: -15.375011444091797
    8. '   ' → logprob: -15.812511444091797
    9. '2' → logprob: -16.437511444091797
    10. '１' → logprob: -16.500011444091797

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '))' → logprob: -13.25000286102295
    3. '])' → logprob: -14.62500286102295
    4. '`)' → logprob: -14.87500286102295
    5. '')' → logprob: -15.87500286102295
    6. '）' → logprob: -16.000003814697266
    7. ' )' → logprob: -16.375003814697266
    8. '})' → logprob: -16.875003814697266
    9. ')
' → logprob: -16.875003814697266
    10. ')>' → logprob: -17.000003814697266

Token 23: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12632176280021667
    2. 'for' → logprob: -2.751321792602539
    3. 'print' → logprob: -3.501321792602539
    4. 'i' → logprob: -4.376321792602539
    5. ' if' → logprob: -4.876321792602539
    6. 'n' → logprob: -6.626321792602539
    7. ' for' → logprob: -6.626321792602539
    8. '#' → logprob: -8.001321792602539
    9. 'k' → logprob: -8.626321792602539
    10. 'p' → logprob: -8.751321792602539

Token 24: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1274934709072113
    2. ' x' → logprob: -2.377493381500244
    3. 'k' → logprob: -4.252493381500244
    4. ' ' → logprob: -5.377493381500244
    5. ' abs' → logprob: -5.377493381500244
    6. 'x' → logprob: -6.002493381500244
    7. 'abs' → logprob: -7.252493381500244
    8. ' (' → logprob: -9.127493858337402
    9. '(k' → logprob: -10.377493858337402
    10. ' not' → logprob: -10.502493858337402

Token 25: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6001754999160767
    2. ' >' → logprob: -1.8501754999160767
    3. ' >=' → logprob: -2.100175380706787
    4. ' <' → logprob: -2.975175380706787
    5. '<=' → logprob: -3.100175380706787
    6. '>' → logprob: -3.850175380706787
    7. '>=' → logprob: -4.475175380706787
    8. '<' → logprob: -4.600175380706787
    9. ' ==' → logprob: -4.725175380706787
    10. ' ' → logprob: -4.850175380706787

Token 26: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.3113464117050171
    2. ' ' → logprob: -1.811346411705017
    3. '50' → logprob: -2.5613465309143066
    4. '20' → logprob: -5.186346530914307
    5. '100' → logprob: -5.436346530914307
    6. '2' → logprob: -5.686346530914307
    7. '3' → logprob: -6.061346530914307
    8. '1' → logprob: -6.436346530914307
    9. '5' → logprob: -6.561346530914307
    10. '7' → logprob: -6.561346530914307

Token 27: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.01857725717127323
    2. 'k' → logprob: -5.1435770988464355
    3. 'x' → logprob: -5.5185770988464355
    4. '100' → logprob: -6.1435770988464355
    5. '7' → logprob: -6.3935770988464355
    6. '50' → logprob: -6.6435770988464355
    7. '1' → logprob: -6.7685770988464355
    8. '5' → logprob: -7.7685770988464355
    9. '2' → logprob: -7.7685770988464355
    10. ' ' → logprob: -7.8935770988464355

Token 28: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6888282895088196
    2. '<' → logprob: -1.5638282299041748
    3. ' >=' → logprob: -1.5638282299041748
    4. ' <' → logprob: -2.688828229904175
    5. '>' → logprob: -4.938828468322754
    6. ' >' → logprob: -6.563828468322754
    7. '<=' → logprob: -6.563828468322754
    8. ' ' → logprob: -7.313828468322754
    9. ' <=' → logprob: -7.813828468322754
    10. '==' → logprob: -10.313828468322754

Token 29: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759426951408386
    2. 'x' → logprob: -0.8259426951408386
    3. ' ' → logprob: -12.700942993164062
    4. '	x' → logprob: -16.200942993164062
    5. '100' → logprob: -17.200942993164062
    6. ' ' → logprob: -17.575942993164062
    7. '(x' → logprob: -17.700942993164062
    8. '>x' → logprob: -18.575942993164062
    9. '  ' → logprob: -18.950942993164062
    10. '"x' → logprob: -19.200942993164062

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038145645521581173
    2. ' :' → logprob: -7.8753814697265625
    3. ':
' → logprob: -13.875381469726562
    4. ':**' → logprob: -15.500381469726562
    5. ':def' → logprob: -16.875381469726562
    6. ':return' → logprob: -17.000381469726562
    7. ',' → logprob: -17.500381469726562
    8. ':

' → logprob: -17.750381469726562
    9. '.' → logprob: -17.875381469726562
    10. '):' → logprob: -18.000381469726562

Token 31: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6412602663040161
    2. ' print' → logprob: -0.7662602663040161
    3. ':' → logprob: -5.266260147094727
    4. '\n' → logprob: -6.141260147094727
    5. ' ' → logprob: -8.391260147094727
    6. '   ' → logprob: -8.891260147094727
    7. ''' → logprob: -8.891260147094727
    8. '"\' → logprob: -8.891260147094727
    9. '\' → logprob: -9.141260147094727
    10. ' \' → logprob: -9.266260147094727

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12695205211639404
    2. ' print' → logprob: -2.1269521713256836
    3. '   ' → logprob: -10.751952171325684
    4. '    ' → logprob: -13.876952171325684
    5. 'pr' → logprob: -14.626952171325684
    6. ' ' → logprob: -14.876952171325684
    7. '	print' → logprob: -16.001951217651367
    8. ' prin' → logprob: -16.126951217651367
    9. '"' → logprob: -16.376951217651367
    10. '`' → logprob: -16.626951217651367

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7036355137825012
    2. '("' → logprob: -0.7036355137825012
    3. '('' → logprob: -4.5786356925964355
    4. '()' → logprob: -9.328635215759277
    5. '"' → logprob: -10.703635215759277
    6. ' ("' → logprob: -11.203635215759277
    7. '("")' → logprob: -11.828635215759277
    8. ' (' → logprob: -11.828635215759277
    9. '(True' → logprob: -12.328635215759277
    10. '("("' → logprob: -12.328635215759277

Token 34: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.004340037237852812
    2. '"' → logprob: -5.879340171813965
    3. 'YES' → logprob: -6.879340171813965
    4. 'Hello' → logprob: -9.004340171813965
    5. ''' → logprob: -9.504340171813965
    6. ' Yes' → logprob: -9.754340171813965
    7. 'Yeah' → logprob: -10.379340171813965
    8. 'Ok' → logprob: -11.004340171813965
    9. 'Yep' → logprob: -11.004340171813965
    10. '``' → logprob: -11.129340171813965

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.909333023941144e-05
    2. '")
' → logprob: -9.875068664550781
    3. ')' → logprob: -11.250068664550781
    4. ')")' → logprob: -12.750068664550781
    5. '")
' → logprob: -13.500068664550781
    6. '!")' → logprob: -16.37506866455078
    7. '"' → logprob: -16.50006866455078
    8. '")

' → logprob: -16.62506866455078
    9. '”)' → logprob: -17.37506866455078
    10. ' ")' → logprob: -18.12506866455078

Token 36: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018150413408875465
    2. ' else' → logprob: -4.018150329589844
    3. '	else' → logprob: -16.143150329589844
    4. '_else' → logprob: -16.143150329589844
    5. 'e' → logprob: -16.643150329589844
    6. ' ' → logprob: -16.643150329589844
    7. '   ' → logprob: -17.018150329589844
    8. '```' → logprob: -17.143150329589844
    9. 'el' → logprob: -17.768150329589844
    10. 'Else' → logprob: -17.768150329589844

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008160584256984293
    2. ':
' → logprob: -7.1258158683776855
    3. ' :' → logprob: -11.750816345214844
    4. '   ' → logprob: -12.625816345214844
    5. ' :
' → logprob: -15.500816345214844
    6. ':
' → logprob: -16.125816345214844
    7. ':

' → logprob: -17.000816345214844
    8. ':def' → logprob: -17.250816345214844
    9. ':return' → logprob: -17.500816345214844
    10. ' print' → logprob: -18.125816345214844

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002854328602552414
    2. 'print' → logprob: -6.502854347229004
    3. ' print' → logprob: -7.127854347229004
    4. '    ' → logprob: -8.002854347229004
    5. '       ' → logprob: -9.752854347229004
    6. '```' → logprob: -9.752854347229004
    7. ' ' → logprob: -9.877854347229004
    8. '    
' → logprob: -11.377854347229004
    9. '  ' → logprob: -11.627854347229004
    10. '     ' → logprob: -11.877854347229004

Token 39: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.474350243806839
    2. 'print' (adapté à ' print') → logprob: -0.9743502140045166
    3. '   ' → logprob: -8.224349975585938
    4. '	print' → logprob: -13.599349975585938
    5. '.print' → logprob: -13.599349975585938
    6. '    ' → logprob: -13.974349975585938
    7. ' ' → logprob: -14.099349975585938
    8. '(print' → logprob: -14.224349975585938
    9. '  ' → logprob: -15.849349975585938
    10. '```' → logprob: -16.974349975585938

Token 40: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07890069484710693
    2. '(' → logprob: -2.5789008140563965
    3. '("")' → logprob: -12.453900337219238
    4. '('' → logprob: -12.703900337219238
    5. '("("' → logprob: -13.328900337219238
    6. '()' → logprob: -13.828900337219238
    7. '(
' → logprob: -14.828900337219238
    8. '("""' → logprob: -15.828900337219238
    9. '(""' → logprob: -15.953900337219238
    10. ')("' → logprob: -16.328901290893555

Token 41: 'No' (ID: 3160)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.0067372736521065235
    2. 'No' → logprob: -5.006737232208252
    3. '"' → logprob: -10.75673770904541
    4. '“No' → logprob: -15.00673770904541
    5. '"N' → logprob: -15.75673770904541
    6. '")' → logprob: -16.631736755371094
    7. ' No' → logprob: -17.006736755371094
    8. '   ' → logprob: -17.131736755371094
    9. ''' → logprob: -17.631736755371094
    10. '("' → logprob: -18.131736755371094

Token 42: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -12.000008583068848
    3. '")
' → logprob: -13.875008583068848
    4. '"' → logprob: -14.250008583068848
    5. ')")' → logprob: -14.250008583068848
    6. '")

' → logprob: -17.87500762939453
    7. '!")' → logprob: -18.50000762939453
    8. '')' → logprob: -18.87500762939453
    9. '}")' → logprob: -19.25000762939453
    10. '")
' → logprob: -19.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 47.50%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 82.50%
================================================================================
