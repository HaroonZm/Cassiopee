================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:42:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    l = line.split(',')
    uid = l[0]
    w = float(l[1])
    h = float(l[2])
    if w / (h * h) >= 25:
        print(uid)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.19661454856395721
    2. 'os' → logprob: -1.9466145038604736
    3. 'import' → logprob: -3.6966145038604736
    4. 'print' → logprob: -5.696614742279053
    5. 'from' → logprob: -5.821614742279053
    6. 'sys' → logprob: -5.946614742279053
    7. '```' → logprob: -6.946614742279053
    8. 'numpy' → logprob: -8.196614265441895
    9. ' as' → logprob: -8.946614265441895
    10. '#' → logprob: -9.446614265441895

Token 4: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02594410628080368
    2. ' item' → logprob: -4.150944232940674
    3. ' x' → logprob: -5.525944232940674
    4. ' ' → logprob: -6.025944232940674
    5. ' line' → logprob: -6.275944232940674
    6. 'i' → logprob: -8.025943756103516
    7. ' in' → logprob: -8.150943756103516
    8. ' element' → logprob: -8.525943756103516
    9. ' key' → logprob: -9.650943756103516
    10. ' k' → logprob: -9.775943756103516

Token 5: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35537850856781006
    2. ':' → logprob: -1.73037850856781
    3. ' in' → logprob: -2.1053786277770996
    4. '_in' → logprob: -10.230378150939941
    5. 'In' → logprob: -11.105378150939941
    6. ':
' → logprob: -12.105378150939941
    7. ' ' → logprob: -12.480378150939941
    8. '   ' → logprob: -12.730378150939941
    9. ':`' → logprob: -12.980378150939941
    10. '-in' → logprob: -13.730378150939941

Token 6: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.375538163818419e-05
    2. 'open' → logprob: -9.500083923339844
    3. ' sys' → logprob: -12.125083923339844
    4. 'stdin' → logprob: -13.875083923339844
    5. 'input' → logprob: -14.375083923339844
    6. '.sys' → logprob: -14.500083923339844
    7. '	sys' → logprob: -14.625083923339844
    8. '(sys' → logprob: -14.750083923339844
    9. 'sy' → logprob: -15.125083923339844
    10. 'file' → logprob: -16.250083923339844

Token 7: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.009316958487033844
    2. '.input' → logprob: -6.634316921234131
    3. '.readline' → logprob: -6.634316921234131
    4. '.argv' → logprob: -6.884316921234131
    5. '.readlines' → logprob: -7.009316921234131
    6. '.in' → logprob: -7.134316921234131
    7. '.' → logprob: -7.259316921234131
    8. '.iter' → logprob: -7.259316921234131
    9. '.import' → logprob: -7.384316921234131
    10. '.read' → logprob: -7.634316921234131

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.618001053633634e-05
    2. ':`' → logprob: -11.625025749206543
    3. ':
' → logprob: -11.875025749206543
    4. '.readlines' → logprob: -12.750025749206543
    5. '.read' → logprob: -13.750025749206543
    6. ':\' → logprob: -14.125025749206543
    7. '.readline' → logprob: -14.125025749206543
    8. '：' → logprob: -14.250025749206543
    9. ':

' → logprob: -14.500025749206543
    10. '   ' → logprob: -14.500025749206543

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.134509021649137e-05
    2. '  ' → logprob: -10.87506103515625
    3. 'print' → logprob: -11.00006103515625
    4. ' ' → logprob: -11.62506103515625
    5. 'pass' → logprob: -12.25006103515625
    6. '    ' → logprob: -12.62506103515625
    7. 'line' → logprob: -12.75006103515625
    8. '```' → logprob: -13.00006103515625
    9. ':' → logprob: -13.75006103515625
    10. '   ' → logprob: -14.50006103515625

Token 10: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05080085247755051
    2. 'print' → logprob: -3.0508008003234863
    3. 'process' → logprob: -6.800800800323486
    4. 'line' → logprob: -7.050800800323486
    5. 'pass' → logprob: -8.550801277160645
    6. '  ' → logprob: -10.925801277160645
    7. 'processed' → logprob: -12.175801277160645
    8. 'processing' → logprob: -12.300801277160645
    9. ' ' → logprob: -13.050801277160645
    10. 'strip' → logprob: -13.425801277160645

Token 11: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.03243446722626686
    2. '=' → logprob: -3.6574344635009766
    3. ' =' → logprob: -5.782434463500977
    4. 'in' → logprob: -6.532434463500977
    5. '   ' → logprob: -7.657434463500977
    6. 'en' → logprob: -8.032434463500977
    7. 'i' → logprob: -8.657434463500977
    8. '.append' → logprob: -8.782434463500977
    9. '=line' → logprob: -9.407434463500977
    10. 'e' → logprob: -9.782434463500977

Token 12: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -8.08944896562025e-05
    2. ' line' → logprob: -9.500081062316895
    3. 'input' → logprob: -12.500081062316895
    4. 'strip' → logprob: -13.625081062316895
    5. 'sys' → logprob: -14.750081062316895
    6. '	line' → logprob: -15.375081062316895
    7. '(line' → logprob: -15.500081062316895
    8. '   ' → logprob: -16.125080108642578
    9. '.line' → logprob: -16.750080108642578
    10. 'lin' → logprob: -17.125080108642578

Token 13: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07949816435575485
    2. '.rstrip' → logprob: -2.579498052597046
    3. 'rstrip' → logprob: -7.829498291015625
    4. 'strip' → logprob: -9.329498291015625
    5. '   ' → logprob: -9.829498291015625
    6. '.split' → logprob: -10.579498291015625
    7. '.replace' → logprob: -10.829498291015625
    8. '.l' → logprob: -11.329498291015625
    9. '[:-' → logprob: -12.579498291015625
    10. 'l' → logprob: -13.079498291015625

Token 14: '(',')
' (ID: 161318)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033058011904358864
    2. '(' → logprob: -5.753305912017822
    3. '('' → logprob: -9.753305435180664
    4. '("' → logprob: -10.628305435180664
    5. '()`' → logprob: -11.003305435180664
    6. '(`' → logprob: -11.628305435180664
    7. '("("' → logprob: -11.878305435180664
    8. '()(' → logprob: -12.503305435180664
    9. '().' → logprob: -13.128305435180664
    10. '(...)' → logprob: -13.378305435180664

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.111979357432574e-05
    2. 'l' → logprob: -10.00007152557373
    3. '       ' → logprob: -11.37507152557373
    4. '    ' → logprob: -11.75007152557373
    5. '  ' → logprob: -12.75007152557373
    6. 'print' → logprob: -13.50007152557373
    7. ' ' → logprob: -14.25007152557373
    8. '    
' → logprob: -14.75007152557373
    9. ' l' → logprob: -15.25007152557373
    10. '     ' → logprob: -15.37507152557373

Token 16: ' uid' (ID: 29616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014679614687338471
    2. 'l' → logprob: -6.751468181610107
    3. 'print' → logprob: -8.25146770477295
    4. '  ' → logprob: -11.00146770477295
    5. '    ' → logprob: -12.12646770477295
    6. '       ' → logprob: -12.37646770477295
    7. ' ' → logprob: -13.37646770477295
    8. 'for' → logprob: -13.50146770477295
    9. ' l' → logprob: -13.87646770477295
    10. 'result' → logprob: -14.00146770477295

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05675586313009262
    2. '=' → logprob: -2.931755781173706
    3. ',' → logprob: -7.306756019592285
    4. ' ' → logprob: -8.181756019592285
    5. '.append' → logprob: -8.431756019592285
    6. '   ' → logprob: -8.556756019592285
    7. 'l' → logprob: -9.306756019592285
    8. '=l' → logprob: -9.556756019592285
    9. '.strip' → logprob: -9.556756019592285
    10. '=id' → logprob: -10.181756019592285

Token 18: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.088346359931165e-07
    2. ' l' → logprob: -14.000000953674316
    3. 'int' → logprob: -19.375
    4. '.l' → logprob: -20.0
    5. '	l' → logprob: -21.25
    6. '_l' → logprob: -21.625
    7. '   ' → logprob: -22.125
    8. ' л' → logprob: -22.375
    9. '­l' → logprob: -22.875
    10. '(l' → logprob: -23.125

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '.strip' → logprob: -13.375001907348633
    3. '[:' → logprob: -15.375001907348633
    4. '.pop' → logprob: -15.625001907348633
    5. '[:-' → logprob: -15.750001907348633
    6. 'strip' → logprob: -16.500001907348633
    7. 'uid' → logprob: -16.625001907348633
    8. '#' → logprob: -17.000001907348633
    9. 'print' → logprob: -17.125001907348633
    10. 'id' → logprob: -17.250001907348633

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.125
    3. '[' → logprob: -19.0
    4. '2' → logprob: -19.125
    5. ' ' → logprob: -19.375
    6. '3' → logprob: -21.125
    7. '   ' → logprob: -22.75
    8. '０' → logprob: -22.875
    9. '4' → logprob: -23.0
    10. '5' → logprob: -23.25

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.05499910004437e-05
    2. ')' → logprob: -10.750090599060059
    3. '']' → logprob: -10.875090599060059
    4. '   ' → logprob: -11.125090599060059
    5. '].' → logprob: -11.125090599060059
    6. '][' → logprob: -11.875090599060059
    7. '])' → logprob: -12.375090599060059
    8. ']
' → logprob: -12.750090599060059
    9. ')]' → logprob: -12.875090599060059
    10. ']]' → logprob: -13.875090599060059

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.493430894101039e-05
    2. 'uid' → logprob: -10.250075340270996
    3. 'l' → logprob: -11.250075340270996
    4. '  ' → logprob: -11.625075340270996
    5. 'print' → logprob: -11.625075340270996
    6. ' ' → logprob: -13.125075340270996
    7. 'age' → logprob: -13.250075340270996
    8. '    ' → logprob: -13.625075340270996
    9. '```' → logprob: -14.500075340270996
    10. 'user' → logprob: -14.625075340270996

Token 23: ' w' (ID: 286)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.25754663348197937
    2. '   ' → logprob: -2.3825466632843018
    3. 'age' → logprob: -3.5075466632843018
    4. 'l' → logprob: -3.6325466632843018
    5. 'uid' → logprob: -3.6325466632843018
    6. 'data' → logprob: -4.632546424865723
    7. 'value' → logprob: -4.757546424865723
    8. 'print' → logprob: -4.757546424865723
    9. 'email' → logprob: -5.007546424865723
    10. 'id' → logprob: -5.132546424865723

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07017117738723755
    2. ' =' → logprob: -2.8201711177825928
    3. 'ord' → logprob: -6.445171356201172
    4. '=id' → logprob: -6.445171356201172
    5. '=o' → logprob: -6.820171356201172
    6. '=w' → logprob: -7.570171356201172
    7. '=a' → logprob: -7.695171356201172
    8. '=i' → logprob: -7.945171356201172
    9. '=len' → logprob: -8.195171356201172
    10. '='' → logprob: -8.445171356201172

Token 25: ' float' (ID: 4428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03417232632637024
    2. 'float' → logprob: -3.784172296524048
    3. 'int' → logprob: -4.534172534942627
    4. ' l' → logprob: -9.034172058105469
    5. ' int' → logprob: -12.034172058105469
    6. ' float' → logprob: -12.409172058105469
    7. '   ' → logprob: -14.284172058105469
    8. 'len' → logprob: -14.284172058105469
    9. 'w' → logprob: -15.784172058105469
    10. 'uid' → logprob: -15.909172058105469

Token 26: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0008124859305098653
    2. '(' → logprob: -7.250812530517578
    3. '(li' → logprob: -11.000812530517578
    4. '(ld' → logprob: -11.625812530517578
    5. 'l' → logprob: -11.875812530517578
    6. '(L' → logprob: -12.000812530517578
    7. '(lp' → logprob: -12.125812530517578
    8. '(a' → logprob: -12.125812530517578
    9. '(float' → logprob: -12.125812530517578
    10. '(line' → logprob: -12.375812530517578

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[l' → logprob: -15.625
    3. '[i' → logprob: -17.0
    4. ')' → logprob: -17.625
    5. '[len' → logprob: -18.125
    6. '\[' → logprob: -18.5
    7. '.strip' → logprob: -18.875
    8. '[-' → logprob: -19.0
    9. '[
' → logprob: -19.0
    10. '[...]' → logprob: -19.125

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -16.125
    3. '[' → logprob: -16.625
    4. '3' → logprob: -17.25
    5. ' ' → logprob: -21.0
    6. '4' → logprob: -21.25
    7. '   ' → logprob: -22.875
    8. '１' → logprob: -23.0
    9. '```' → logprob: -23.625
    10. '5' → logprob: -24.25

Token 29: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006995689473114908
    2. ')' → logprob: -7.500699520111084
    3. ')])' → logprob: -9.250699996948242
    4. '])
' → logprob: -10.625699996948242
    5. ']' → logprob: -11.375699996948242
    6. '))' → logprob: -12.375699996948242
    7. ')]' → logprob: -13.000699996948242
    8. ''])' → logprob: -13.375699996948242
    9. ']])' → logprob: -13.375699996948242
    10. ']))' → logprob: -13.375699996948242

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038837024476379156
    2. 'print' → logprob: -8.125388145446777
    3. 'w' → logprob: -10.000388145446777
    4. '  ' → logprob: -10.500388145446777
    5. '<|end|>' → logprob: -12.625388145446777
    6. '    ' → logprob: -12.750388145446777
    7. '#' → logprob: -12.750388145446777
    8. ' ' → logprob: -12.750388145446777
    9. '    
' → logprob: -13.500388145446777
    10. 'if' → logprob: -14.000388145446777

Token 31: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06356484442949295
    2. 'print' → logprob: -2.8135647773742676
    3. 'w' → logprob: -7.188564777374268
    4. 'result' → logprob: -8.563565254211426
    5. 'total' → logprob: -8.563565254211426
    6. 'sum' → logprob: -9.188565254211426
    7. '#' → logprob: -9.688565254211426
    8. '  ' → logprob: -9.688565254211426
    9. 'r' → logprob: -10.188565254211426
    10. 's' → logprob: -10.563565254211426

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5578607320785522
    2. ' =' → logprob: -0.9328607320785522
    3. '=l' → logprob: -4.557860851287842
    4. '=float' → logprob: -4.807860851287842
    5. '=int' → logprob: -5.182860851287842
    6. '=len' → logprob: -5.682860851287842
    7. '=e' → logprob: -6.557860851287842
    8. '   ' → logprob: -7.057860851287842
    9. '=w' → logprob: -8.182860374450684
    10. '=g' → logprob: -8.182860374450684

Token 33: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.7610454708337784e-05
    2. ' float' → logprob: -10.500027656555176
    3. '(float' → logprob: -18.25002670288086
    4. '=float' → logprob: -18.62502670288086
    5. '.float' → logprob: -18.75002670288086
    6. '	float' → logprob: -19.12502670288086
    7. '_float' → logprob: -21.12502670288086
    8. 'int' → logprob: -21.75002670288086
    9. 'flo' → logprob: -22.12502670288086
    10. '<float' → logprob: -22.50002670288086

Token 34: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -11.250022888183594
    3. '(L' → logprob: -13.250022888183594
    4. 'l' → logprob: -13.875022888183594
    5. '(ld' → logprob: -13.875022888183594
    6. '(a' → logprob: -14.250022888183594
    7. '(li' → logprob: -14.375022888183594
    8. '(line' → logprob: -14.375022888183594
    9. '(ls' → logprob: -14.500022888183594
    10. '(lp' → logprob: -15.000022888183594

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.718606891809031e-05
    2. '][' → logprob: -10.625066757202148
    3. ''][' → logprob: -11.000066757202148
    4. ')[' → logprob: -11.375066757202148
    5. '_[' → logprob: -12.750066757202148
    6. ''[' → logprob: -13.000066757202148
    7. '>[' → logprob: -13.375066757202148
    8. '\[' → logprob: -13.500066757202148
    9. '}[' → logprob: -13.875066757202148
    10. '[l' → logprob: -14.375066757202148

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -19.75
    3. '1' → logprob: -20.375
    4. '[' → logprob: -21.0
    5. ' ' → logprob: -21.375
    6. '２' → logprob: -22.0
    7. 'index' → logprob: -22.5
    8. '22' → logprob: -22.875
    9. 'two' → logprob: -23.125
    10. '₂' → logprob: -23.625

Token 37: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004069020971655846
    2. ')' → logprob: -5.629068851470947
    3. ')])' → logprob: -8.004069328308105
    4. '])
' → logprob: -10.254069328308105
    5. ']' → logprob: -10.254069328308105
    6. ')]' → logprob: -10.754069328308105
    7. '})' → logprob: -11.379069328308105
    8. '))' → logprob: -11.629069328308105
    9. ''])' → logprob: -12.004069328308105
    10. '）' → logprob: -12.629069328308105

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007917628972791135
    2. 'print' → logprob: -7.625791549682617
    3. '#' → logprob: -8.250791549682617
    4. '  ' → logprob: -10.250791549682617
    5. ' ' → logprob: -13.500791549682617
    6. '    ' → logprob: -13.625791549682617
    7. 'h' → logprob: -13.750791549682617
    8. '```' → logprob: -14.375791549682617
    9. 'w' → logprob: -14.500791549682617
    10. 'result' → logprob: -14.625791549682617

Token 39: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6809262037277222
    2. '   ' → logprob: -0.9309262037277222
    3. 'area' → logprob: -2.6809263229370117
    4. '#' → logprob: -3.5559263229370117
    5. 'r' → logprob: -7.555926322937012
    6. 'a' → logprob: -7.555926322937012
    7. 'result' → logprob: -7.805926322937012
    8. 'volume' → logprob: -8.305926322937012
    9. 'if' (adapté à ' if') → logprob: -9.305926322937012
    10. 'x' → logprob: -9.430926322937012

Token 40: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5913234353065491
    2. ' h' → logprob: -1.4663233757019043
    3. ' uid' → logprob: -1.8413233757019043
    4. ' l' → logprob: -3.4663233757019043
    5. ' ' → logprob: -4.466323375701904
    6. ':' → logprob: -4.966323375701904
    7. 'w' → logprob: -6.216323375701904
    8. 'h' → logprob: -6.716323375701904
    9. ' len' → logprob: -7.091323375701904
    10. ' not' → logprob: -7.341323375701904

Token 41: ' /' (ID: 820)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006139599252492189
    2. '<' → logprob: -5.131139755249023
    3. '<=' → logprob: -9.006139755249023
    4. '>=' → logprob: -9.506139755249023
    5. ' >' → logprob: -11.756139755249023
    6. '==' → logprob: -12.256139755249023
    7. '!=' → logprob: -15.381139755249023
    8. '>`' → logprob: -15.756139755249023
    9. '">' → logprob: -16.131139755249023
    10. ' <' → logprob: -16.381139755249023

Token 42: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.320199877838604e-07
    2. ' h' → logprob: -14.75
    3. '<h' → logprob: -20.125
    4. '	h' → logprob: -21.125
    5. '(h' → logprob: -21.25
    6. '_h' → logprob: -21.75
    7. '.h' → logprob: -22.125
    8. 'height' → logprob: -22.125
    9. '=h' → logprob: -22.125
    10. 'float' → logprob: -22.375

Token 43: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: 0.0
    2. ' h' → logprob: -18.75
    3. '(h' → logprob: -18.75
    4. 'w' → logprob: -22.0
    5. 'float' → logprob: -23.125
    6. '	h' → logprob: -23.5
    7. '<h' → logprob: -23.625
    8. '.h' → logprob: -24.0
    9. '_h' → logprob: -24.25
    10. '(' → logprob: -24.375

Token 44: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.288163083605468e-05
    2. '**' → logprob: -10.500052452087402
    3. ')**' → logprob: -12.125052452087402
    4. ' >' → logprob: -12.625052452087402
    5. '>' → logprob: -12.750052452087402
    6. ' +' → logprob: -13.000052452087402
    7. ' )' → logprob: -13.375052452087402
    8. ')>' → logprob: -13.500052452087402
    9. ' *' → logprob: -13.625052452087402
    10. '))' → logprob: -13.625052452087402

Token 45: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.036002062261104584
    2. '0' → logprob: -4.036002159118652
    3. 'h' → logprob: -4.411002159118652
    4. '2' → logprob: -6.036002159118652
    5. '1' → logprob: -6.036002159118652
    6. ')' → logprob: -8.161002159118652
    7. '9' → logprob: -9.161002159118652
    8. '3' → logprob: -9.286002159118652
    9. 'g' → logprob: -9.536002159118652
    10. '100' → logprob: -10.411002159118652

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010235115041723475
    2. '):' → logprob: -9.250102043151855
    3. ')>' → logprob: -12.250102043151855
    4. '>' → logprob: -14.625102043151855
    5. ')<' → logprob: -15.125102043151855
    6. '))' → logprob: -15.375102043151855
    7. ')>=' → logprob: -15.625102043151855
    8. '):
' → logprob: -16.125102996826172
    9. ')<=' → logprob: -16.875102996826172
    10. ')`' → logprob: -17.750102996826172

Token 47: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0002930366899818182
    2. '<' → logprob: -8.250292778015137
    3. '>=' → logprob: -10.875292778015137
    4. ' >' → logprob: -11.375292778015137
    5. '<=' → logprob: -14.250292778015137
    6. ':' → logprob: -15.875292778015137
    7. '==' → logprob: -16.000293731689453
    8. '>`' → logprob: -16.625293731689453
    9. '>:' → logprob: -16.750293731689453
    10. '>
' → logprob: -17.250293731689453

Token 48: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0039002960547804832
    2. '24' → logprob: -6.003900527954102
    3. '30' → logprob: -6.628900527954102
    4. '26' → logprob: -10.378900527954102
    5. '23' → logprob: -11.003900527954102
    6. '18' → logprob: -11.253900527954102
    7. '27' → logprob: -11.378900527954102
    8. '20' → logprob: -11.753900527954102
    9. ' ' → logprob: -12.003900527954102
    10. '28' → logprob: -12.503900527954102

Token 49: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.001090331468731165
    2. '30' → logprob: -7.2510905265808105
    3. '24' → logprob: -8.001090049743652
    4. '18' → logprob: -10.626090049743652
    5. '26' → logprob: -12.001090049743652
    6. '23' → logprob: -12.376090049743652
    7. '20' → logprob: -12.376090049743652
    8. '27' → logprob: -13.126090049743652
    9. '22' → logprob: -13.626090049743652
    10. '21' → logprob: -14.126090049743652

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.60414821645827e-06
    2. ':
' → logprob: -13.250004768371582
    3. ':`' → logprob: -13.375004768371582
    4. ':\' → logprob: -14.750004768371582
    5. ':**' → logprob: -15.500004768371582
    6. ':

' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.000003814697266
    8. ':#' → logprob: -16.125003814697266
    9. ':return' → logprob: -16.125003814697266
    10. ':<' → logprob: -16.375003814697266

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.453737710718997e-05
    2. 'print' → logprob: -10.875044822692871
    3. '   ' → logprob: -11.375044822692871
    4. '      ' → logprob: -11.625044822692871
    5. 'continue' → logprob: -13.125044822692871
    6. '     ' → logprob: -13.250044822692871
    7. '        ' → logprob: -13.625044822692871
    8. '           ' → logprob: -16.625043869018555
    9. '    ' → logprob: -16.625043869018555
    10. 'pass' → logprob: -17.000043869018555

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007623416022397578
    2. '       ' → logprob: -7.625762462615967
    3. '           ' → logprob: -8.375761985778809
    4. '   ' → logprob: -11.000761985778809
    5. 'continue' → logprob: -11.250761985778809
    6. 'pass' → logprob: -12.000761985778809
    7. 'sys' → logprob: -12.375761985778809
    8. 'break' → logprob: -13.500761985778809
    9. ' print' → logprob: -14.125761985778809
    10. 'uid' → logprob: -14.875761985778809

Token 53: '(uid' (ID: 79983)
  Prédit: '(uid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(uid' → logprob: -0.04306929558515549
    2. '("' → logprob: -3.918069362640381
    3. '('' → logprob: -4.668069362640381
    4. '(f' → logprob: -5.043069362640381
    5. '()' → logprob: -5.418069362640381
    6. '(' → logprob: -6.418069362640381
    7. '(l' → logprob: -8.668068885803223
    8. '("("' → logprob: -9.918068885803223
    9. '(ui' → logprob: -10.543068885803223
    10. '(u' → logprob: -10.668068885803223

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.420598219847307e-05
    2. ',' → logprob: -10.0000638961792
    3. ')`' → logprob: -12.1250638961792
    4. ')
' → logprob: -12.7500638961792
    5. ',)' → logprob: -12.8750638961792
    6. '   ' → logprob: -13.0000638961792
    7. '),' → logprob: -13.5000638961792
    8. ')

' → logprob: -13.6250638961792
    9. '))' → logprob: -14.1250638961792
    10. '')' → logprob: -14.6250638961792


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 42.31%
Précision adaptée (1ère position): 44.23%
Précision (top 10): 80.77%
================================================================================
