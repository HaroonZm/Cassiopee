================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
chaine = input()
compteur = 0
for caractere in chaine:
    if caractere == '+':
        compteur = compteur + 1
    else:
        compteur = compteur - 1
print(compteur)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'chaine' (ID: 68916)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004753003362566233
    2. '('' → logprob: -6.129753112792969
    3. '("("' → logprob: -6.629753112792969
    4. ''' → logprob: -7.129753112792969
    5. '```' → logprob: -9.254753112792969
    6. '()' → logprob: -9.504753112792969
    7. '(
' → logprob: -9.504753112792969
    8. '"' → logprob: -10.004753112792969
    9. ' (' → logprob: -10.629753112792969
    10. '`' → logprob: -10.754753112792969

Token 4: 'comp' (ID: 3697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00428044656291604
    2. '+' → logprob: -6.2542805671691895
    3. '=' → logprob: -6.5042805671691895
    4. '_' → logprob: -8.254280090332031
    5. '.strip' → logprob: -8.504280090332031
    6. ':' → logprob: -9.379280090332031
    7. '[' → logprob: -9.754280090332031
    8. ',' → logprob: -10.254280090332031
    9. 's' → logprob: -10.254280090332031
    10. ' ' → logprob: -10.754280090332031

Token 5: 'teur' (ID: 45262)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3189934492111206
    2. 'l' → logprob: -1.5689934492111206
    3. 'ute' → logprob: -1.9439934492111206
    4. 'let' → logprob: -2.69399356842041
    5. 'le' → logprob: -2.69399356842041
    6. 'lete' → logprob: -2.94399356842041
    7. 't' → logprob: -3.06899356842041
    8. '=' → logprob: -3.69399356842041
    9. 'ort' → logprob: -4.31899356842041
    10. 'late' → logprob: -4.44399356842041

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03330976516008377
    2. '+' → logprob: -4.2833099365234375
    3. ' ' → logprob: -5.2833099365234375
    4. 's' → logprob: -5.6583099365234375
    5. '=' → logprob: -5.7833099365234375
    6. ' =' → logprob: -6.4083099365234375
    7. '_space' → logprob: -6.4083099365234375
    8. ' +=' → logprob: -6.5333099365234375
    9. '[' → logprob: -6.9083099365234375
    10. ')' → logprob: -8.033309936523438

Token 7: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25209328532218933
    2. '0' → logprob: -1.5020933151245117
    3. '1' → logprob: -8.877093315124512
    4. 'chaine' → logprob: -11.502093315124512
    5. ' ' → logprob: -12.002093315124512
    6. ' len' → logprob: -13.127093315124512
    7. 'len' → logprob: -13.252093315124512
    8. ' chaine' → logprob: -14.127093315124512
    9. '  ' → logprob: -14.377093315124512
    10. 'int' → logprob: -14.564593315124512

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030042731668800116
    2. '1' → logprob: -8.750300407409668
    3. ' ' → logprob: -9.000300407409668
    4. '{}' → logprob: -11.500300407409668
    5. 'len' → logprob: -12.375300407409668
    6. 'chaine' → logprob: -13.000300407409668
    7. '{' → logprob: -14.875300407409668
    8. 'int' → logprob: -15.312800407409668
    9. '-' → logprob: -15.437800407409668
    10. '```' → logprob: -15.437800407409668

Token 9: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0800597667694092
    2. 'for' → logprob: -1.2050597667694092
    3. ' for' → logprob: -2.330059766769409
    4. ' 
' → logprob: -2.830059766769409
    5. ':' → logprob: -3.330059766769409
    6. '\' → logprob: -3.330059766769409
    7. '
' → logprob: -3.455059766769409
    8. 'i' → logprob: -3.455059766769409
    9. '<|end|>' → logprob: -3.455059766769409
    10. '\n' → logprob: -4.705060005187988

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22388878464698792
    2. ' for' → logprob: -1.9738887548446655
    3. ':' → logprob: -2.973888874053955
    4. ' ' → logprob: -5.098888874053955
    5. 'i' → logprob: -6.473888874053955
    6. '.' → logprob: -6.973888874053955
    7. '```' → logprob: -7.098888874053955
    8. ''' → logprob: -8.473888397216797
    9. 'f' → logprob: -8.848888397216797
    10. '=' → logprob: -8.848888397216797

Token 11: ' caract' (ID: 36343)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035488713532686234
    2. '  ' → logprob: -3.6604886054992676
    3. ' i' → logprob: -4.785488605499268
    4. ' c' → logprob: -8.160489082336426
    5. '_' → logprob: -9.410489082336426
    6. ' caract' → logprob: -9.535489082336426
    7. ' ' → logprob: -9.785489082336426
    8. ' _' → logprob: -9.785489082336426
    9. ' chaine' → logprob: -10.035489082336426
    10. 'i' → logprob: -10.285489082336426

Token 12: 'ere' (ID: 512)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.8212899565696716
    2. 'e' → logprob: -1.1962900161743164
    3. 'è' → logprob: -1.8212900161743164
    4. 'r' → logprob: -3.4462900161743164
    5. 're' → logprob: -3.5712900161743164
    6. 'èr' → logprob: -4.321290016174316
    7. 'er' → logprob: -4.571290016174316
    8. '`' → logprob: -6.196290016174316
    9. 'ė' → logprob: -6.696290016174316
    10. '   ' → logprob: -6.946290016174316

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058761272579431534
    2. ' ' → logprob: -3.3087613582611084
    3. 'in' → logprob: -3.9337613582611084
    4. '  ' → logprob: -8.183761596679688
    5. 's' → logprob: -8.433761596679688
    6. '<|end|>' → logprob: -8.558761596679688
    7. ' ,' → logprob: -9.933761596679688
    8. 'space' → logprob: -10.308761596679688
    9. '_' → logprob: -10.808761596679688
    10. '   ' → logprob: -11.058761596679688

Token 14: ' chaine' (ID: 192094)
  Prédit: ' chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaine' → logprob: -0.010466162115335464
    2. 'chaine' → logprob: -4.6354660987854
    3. ' ' → logprob: -7.3854660987854
    4. ' chaîne' → logprob: -9.385466575622559
    5. ' range' → logprob: -13.385466575622559
    6. '   ' → logprob: -13.510466575622559
    7. '  ' → logprob: -14.760466575622559
    8. ' chai' → logprob: -14.760466575622559
    9. ' ' → logprob: -14.885466575622559
    10. ' chain' → logprob: -14.885466575622559

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003305784775875509
    2. ' :' → logprob: -8.125330924987793
    3. ':**' → logprob: -11.125330924987793
    4. '':'' → logprob: -12.125330924987793
    5. '[:]' → logprob: -12.500330924987793
    6. ':
' → logprob: -12.625330924987793
    7. '':' → logprob: -13.000330924987793
    8. '":"' → logprob: -14.000330924987793
    9. '+:' → logprob: -14.625330924987793
    10. '":' → logprob: -15.000330924987793

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6864707469940186
    2. ' ' → logprob: -0.8114707469940186
    3. '    ' → logprob: -3.6864707469940186
    4. ' if' → logprob: -4.936470985412598
    5. '```' → logprob: -5.561470985412598
    6. '<|end|>' → logprob: -5.561470985412598
    7. ' 
' → logprob: -5.811470985412598
    8. '    
' → logprob: -6.186470985412598
    9. '  ' → logprob: -6.186470985412598
    10. ''' → logprob: -6.686470985412598

Token 17: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2076987326145172
    2. 'if' (adapté à ' if') → logprob: -1.7076987028121948
    3. '   ' → logprob: -5.207698822021484
    4. '    ' → logprob: -8.207698822021484
    5. ' ' → logprob: -8.832698822021484
    6. '```' → logprob: -9.082698822021484
    7. '<|end|>' → logprob: -9.582698822021484
    8. 'i' → logprob: -9.957698822021484
    9. ' ```' → logprob: -9.957698822021484
    10. ' compteur' → logprob: -10.707698822021484

Token 18: ' caract' (ID: 36343)
  Prédit: ' caract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caract' → logprob: -0.003249246859923005
    2. ' ' → logprob: -6.128249168395996
    3. 'car' → logprob: -7.128249168395996
    4. ' car' → logprob: -8.878249168395996
    5. ' chaine' → logprob: -9.753249168395996
    6. ' espace' → logprob: -10.878249168395996
    7. ' caracteres' → logprob: -11.003249168395996
    8. ' caractère' → logprob: -11.628249168395996
    9. 'chaine' → logprob: -12.378249168395996
    10. ' caracter' → logprob: -12.503249168395996

Token 19: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.00011105302110081539
    2. 'e' → logprob: -9.250110626220703
    3. 'er' → logprob: -11.500110626220703
    4. 'ère' → logprob: -13.625110626220703
    5. '   ' → logprob: -14.000110626220703
    6. ' ere' → logprob: -14.000110626220703
    7. ' ' → logprob: -14.375110626220703
    8. 're' → logprob: -15.250110626220703
    9. '=' → logprob: -15.250110626220703
    10. '_' → logprob: -16.125110626220703

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10147354006767273
    2. '==' → logprob: -2.351473569869995
    3. '=' → logprob: -7.351473331451416
    4. ' ' → logprob: -8.351473808288574
    5. ' in' → logprob: -8.851473808288574
    6. ' =' → logprob: -9.226473808288574
    7. '.' → logprob: -10.476473808288574
    8. 's' → logprob: -10.601473808288574
    9. ' !=' → logprob: -11.101473808288574
    10. 'a' → logprob: -11.351473808288574

Token 21: ' '+' (ID: 30120)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.46206581592559814
    2. ''' → logprob: -1.0870658159255981
    3. ''a' → logprob: -3.8370656967163086
    4. '"a' → logprob: -5.087065696716309
    5. ''e' → logprob: -7.087065696716309
    6. ' '' → logprob: -7.087065696716309
    7. 'a' → logprob: -7.587065696716309
    8. ' "' → logprob: -7.712065696716309
    9. ''espace' → logprob: -7.712065696716309
    10. ''i' → logprob: -8.087065696716309

Token 22: '':
' (ID: 7669)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05539367347955704
    2. '':' → logprob: -3.055393695831299
    3. ''' → logprob: -5.180393695831299
    4. ''+' → logprob: -7.305393695831299
    5. '+'' → logprob: -8.05539321899414
    6. '1' → logprob: -10.18039321899414
    7. '='' → logprob: -10.43039321899414
    8. ' ':' → logprob: -10.43039321899414
    9. '+:' → logprob: -10.55539321899414
    10. '+='' → logprob: -11.80539321899414

Token 23: '       ' (ID: 309)
  Prédit: ' compteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.1988632082939148
    2. ' ' → logprob: -2.1988632678985596
    3. 'comp' → logprob: -3.1988632678985596
    4. '+' → logprob: -4.1988630294799805
    5. ' compt' → logprob: -6.0738630294799805
    6. '    ' → logprob: -6.0738630294799805
    7. '	comp' → logprob: -6.3238630294799805
    8. ' comp' → logprob: -6.3238630294799805
    9. '   ' → logprob: -6.5738630294799805
    10. '_comp' → logprob: -7.1988630294799805

Token 24: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.20487013459205627
    2. ' compteur' → logprob: -1.7048701047897339
    3. ' ' → logprob: -6.454870223999023
    4. ' comp' → logprob: -7.704870223999023
    5. '	comp' → logprob: -7.704870223999023
    6. 'compagn' → logprob: -7.829870223999023
    7. ' compte' → logprob: -8.704870223999023
    8. '_comp' → logprob: -8.829870223999023
    9. '.comp' → logprob: -9.454870223999023
    10. '    ' → logprob: -10.204870223999023

Token 25: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43067142367362976
    2. ' +=' → logprob: -1.0556714534759521
    3. '+' → logprob: -6.305671215057373
    4. '=' → logprob: -9.055671691894531
    5. '+='' → logprob: -11.680671691894531
    6. '++' → logprob: -12.055671691894531
    7. ' =' → logprob: -13.180671691894531
    8. '+="' → logprob: -13.180671691894531
    9. ' +' → logprob: -13.555671691894531
    10. ' ' → logprob: -13.930671691894531

Token 26: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.10049445182085037
    2. ' compteur' → logprob: -2.350494384765625
    3. ' ' → logprob: -9.225494384765625
    4. '1' → logprob: -9.225494384765625
    5. '+' → logprob: -9.975494384765625
    6. ' compte' → logprob: -10.725494384765625
    7. 'compagn' → logprob: -12.725494384765625
    8. '	comp' → logprob: -12.725494384765625
    9. '0' → logprob: -12.975494384765625
    10. '(comp' → logprob: -13.350494384765625

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03372650593519211
    2. ' +' → logprob: -3.408726453781128
    3. '1' → logprob: -9.658726692199707
    4. ' plus' → logprob: -11.408726692199707
    5. ' ' → logprob: -13.408726692199707
    6. '<|end|>' → logprob: -13.783726692199707
    7. 'plus' → logprob: -13.908726692199707
    8. '+++' → logprob: -14.658726692199707
    9. '++' → logprob: -14.783726692199707
    10. '+
' → logprob: -15.033726692199707

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043472214019857347
    2. ' ' → logprob: -7.750434875488281
    3. '   ' → logprob: -12.500434875488281
    4. '  ' → logprob: -15.625434875488281
    5. '<|end|>' → logprob: -15.875434875488281
    6. '2' → logprob: -17.12543487548828
    7. '       ' → logprob: -17.87543487548828
    8. '    ' → logprob: -17.87543487548828
    9. '<|end|>' → logprob: -18.50043487548828
    10. '```' → logprob: -18.75043487548828

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '<|end|>' → logprob: -16.750009536743164
    5. '+' → logprob: -16.875009536743164
    6. '  ' → logprob: -17.375009536743164
    7. '2' → logprob: -18.125009536743164
    8. '    ' → logprob: -19.750009536743164
    9. '```' → logprob: -19.750009536743164
    10. '0' → logprob: -20.000009536743164

Token 30: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.894605815410614
    2. '<|end|>' → logprob: -0.894605815410614
    3. 'else' → logprob: -2.894605875015259
    4. ' ' → logprob: -3.394605875015259
    5. ' elif' → logprob: -3.519605875015259
    6. '
' → logprob: -3.894605875015259
    7. ' else' → logprob: -4.26960563659668
    8. '<|end|>' → logprob: -5.01960563659668
    9. '   ' → logprob: -5.26960563659668
    10. '```' → logprob: -5.76960563659668

Token 31: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.43605613708496094
    2. 'else' → logprob: -1.811056137084961
    3. '<|end|>' → logprob: -2.936056137084961
    4. '   ' → logprob: -3.436056137084961
    5. ' elif' → logprob: -3.436056137084961
    6. ' else' → logprob: -3.561056137084961
    7. ' ' → logprob: -4.436056137084961
    8. '-' → logprob: -4.811056137084961
    9. '```' → logprob: -4.811056137084961
    10. '	elif' → logprob: -6.311056137084961

Token 32: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6644688248634338
    2. 'elif' → logprob: -1.164468765258789
    3. ' else' → logprob: -2.164468765258789
    4. ' elif' → logprob: -3.164468765258789
    5. ' ' → logprob: -4.664468765258789
    6. '   ' → logprob: -6.164468765258789
    7. '-' → logprob: -6.539468765258789
    8. 'e' → logprob: -6.664468765258789
    9. '	elif' → logprob: -7.914468765258789
    10. '```' → logprob: -7.914468765258789

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011200665176147595
    2. ':
' → logprob: -9.87511157989502
    3. ' :' → logprob: -10.12511157989502
    4. '-' → logprob: -11.00011157989502
    5. '<|end|>' → logprob: -14.37511157989502
    6. ':
' → logprob: -14.75011157989502
    7. '>' → logprob: -14.87511157989502
    8. '```' → logprob: -15.25011157989502
    9. 's' → logprob: -15.37511157989502
    10. 'e' → logprob: -15.50011157989502

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010119688231498003
    2. ':
' → logprob: -7.876011848449707
    3. 'comp' → logprob: -8.251011848449707
    4. '-' → logprob: -9.376011848449707
    5. '   ' → logprob: -9.376011848449707
    6. '       ' → logprob: -9.751011848449707
    7. '    ' → logprob: -10.126011848449707
    8. ' :' → logprob: -10.751011848449707
    9. '    
' → logprob: -11.001011848449707
    10. '  ' → logprob: -11.626011848449707

Token 35: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.045492805540561676
    2. ' compteur' → logprob: -3.2954928874969482
    3. '-' → logprob: -5.545492649078369
    4. '-comp' → logprob: -6.045492649078369
    5. '_comp' → logprob: -8.295493125915527
    6. '.comp' → logprob: -8.545493125915527
    7. ' comp' → logprob: -8.920493125915527
    8. ' ' → logprob: -9.045493125915527
    9. '(comp' → logprob: -9.295493125915527
    10. '	comp' → logprob: -9.295493125915527

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812904715538025
    2. ' =' → logprob: -1.5312905311584473
    3. '-' → logprob: -3.6562905311584473
    4. ' -=' → logprob: -7.031290531158447
    5. ' -' → logprob: -7.031290531158447
    6. ' ' → logprob: -7.156290531158447
    7. '+' → logprob: -8.031290054321289
    8. '-=' → logprob: -8.906290054321289
    9. ' +=' → logprob: -9.906290054321289
    10. '+=' → logprob: -10.781290054321289

Token 37: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.1832110434770584
    2. ' compteur' → logprob: -1.808211088180542
    3. '0' → logprob: -6.308210849761963
    4. ' ' → logprob: -7.183210849761963
    5. ' compte' → logprob: -7.933210849761963
    6. '-' → logprob: -8.433211326599121
    7. '1' → logprob: -9.183211326599121
    8. 'count' → logprob: -10.433211326599121
    9. '-comp' → logprob: -10.558211326599121
    10. 'compagn' → logprob: -10.683211326599121

Token 38: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004427508916705847
    2. '+' → logprob: -6.004427433013916
    3. ' -' → logprob: -6.254427433013916
    4. '<|end|>' → logprob: -11.129427909851074
    5. ' ' → logprob: -11.629427909851074
    6. ' +' → logprob: -12.754427909851074
    7. '-
' → logprob: -14.254427909851074
    8. '+-' → logprob: -15.754427909851074
    9. '-)' → logprob: -16.129426956176758
    10. '<|end|>' → logprob: -16.254426956176758

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815134845674038
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.64315128326416
    4. ' ' → logprob: -14.64315128326416
    5. '<|end|>' → logprob: -15.01815128326416
    6. '0' → logprob: -16.018152236938477
    7. '	' → logprob: -16.893152236938477
    8. '  ' → logprob: -17.143152236938477
    9. '<|end|>' → logprob: -17.643152236938477
    10. '```' → logprob: -17.768152236938477

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -18.500001907348633
    4. '0' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '2' → logprob: -20.500001907348633
    7. '```' → logprob: -20.625001907348633
    8. '-' → logprob: -20.625001907348633
    9. '  ' → logprob: -20.875001907348633
    10. '१' → logprob: -21.750001907348633

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45670944452285767
    2. 'print' → logprob: -1.081709384918213
    3. '<|end|>' → logprob: -4.081709384918213
    4. '\n' → logprob: -5.581709384918213
    5. '  
' → logprob: -6.206709384918213
    6. ' 
' → logprob: -6.206709384918213
    7. '#' → logprob: -7.081709384918213
    8. '```' → logprob: -7.206709384918213
    9. ' print' → logprob: -8.081709861755371
    10. '' → logprob: -8.456709861755371

Token 42: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.041145745664834976
    2. '
' → logprob: -3.2911458015441895
    3. '<|end|>' → logprob: -7.1661458015441895
    4. '\n' → logprob: -7.4161458015441895
    5. '```' → logprob: -7.5411458015441895
    6. '  
' → logprob: -8.166145324707031
    7. '#' → logprob: -8.541145324707031
    8. ' 
' → logprob: -8.666145324707031
    9. '\' → logprob: -9.166145324707031
    10. '' → logprob: -9.291145324707031

Token 43: '(comp' (ID: 60272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932047009468079
    2. '(comp' → logprob: -0.6932047009468079
    3. '('' → logprob: -10.818204879760742
    4. '("("' → logprob: -11.193204879760742
    5. '(cont' → logprob: -11.568204879760742
    6. '()' → logprob: -12.318204879760742
    7. '(count' → logprob: -13.193204879760742
    8. '(cap' → logprob: -13.443204879760742
    9. '(`' → logprob: -13.818204879760742
    10. '((' → logprob: -14.193204879760742

Token 44: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -5.32392441527918e-05
    2. 'te' → logprob: -10.125053405761719
    3. 'teurs' → logprob: -12.250053405761719
    4. 't' → logprob: -12.750053405761719
    5. 'eur' → logprob: -12.750053405761719
    6. 'uteur' → logprob: -13.375053405761719
    7. 'ateur' → logprob: -14.875053405761719
    8. 'reur' → logprob: -15.375053405761719
    9. 'ter' → logprob: -15.750053405761719
    10. '#' → logprob: -16.87505340576172

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -15.750000953674316
    4. ')`' → logprob: -16.5
    5. ')
' → logprob: -18.75
    6. '')' → logprob: -18.875
    7. '）' → logprob: -19.125
    8. ')}' → logprob: -19.375
    9. ')**' → logprob: -19.375
    10. '(' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 43
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 37.21%
Précision adaptée (1ère position): 39.53%
Précision (top 10): 83.72%
================================================================================
