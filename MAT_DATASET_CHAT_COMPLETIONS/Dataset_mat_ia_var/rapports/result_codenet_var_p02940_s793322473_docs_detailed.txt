================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""
Ce code traite une chaîne de caractères composée des lettres 'R', 'G', 'B' et effectue des opérations de comptage et de calcul combinatoire pour obtenir un résultat modulo 998244353. Le script est structuré pour une entrée compétitive, typiquement pour un problème d'attribution ou de permutation sous contrainte de couleurs.
"""

import math
import queue
import bisect
from collections import deque, defaultdict
import heapq as hpq
from sys import stdin, setrecursionlimit

# Lecture rapide de l'entrée standard
ipt = stdin.readline

# Définition d'une grande limite de récursion pour éviter les erreurs de récursion profonde
setrecursionlimit(10**7)

# Modulo pour éviter les débordements d'entiers, standard dans les compétitions AtCoder
mod = 998244353

# Directions de déplacement potentielles sur une grille (haut, bas, gauche, droite)
dir = [(-1,0), (1,0), (0,-1), (0,1)]

# Alphabet minuscule anglais
alp = "abcdefghijklmnopqrstuvwxyz"

def main():
    """
    Fonction principale du script.
    Lit les entrées, puis effectue un traitement sur une chaîne de couleurs ('R', 'G', 'B').
    Calcule le nombre de permutations ou arrangements distincts selon des règles spécifiques,
    avec gestion de combinaisons et de modularité.
    Affiche le résultat final.

    Entrée attendue :
    - n (int) : longueur de la chaîne
    - s (str) : chaîne composée des lettres 'R', 'G', 'B'

    Aucun retour.
    """

    # Lecture du nombre d'éléments à traiter
    n = int(ipt())
    # Lecture de la chaîne de couleurs (depuis l'entrée standard)
    s = input()

    # Dictionnaire pour mapper chaque caractère de couleur à son index
    d = {"R": 0, "G": 1, "B": 2}
    
    # Initialisation du résultat (nombre d'arrangements possibles)
    nm = 1

    # Compteurs de chaque couleur rencontrée (nc[0] pour 'R', nc[1] pour 'G', nc[2] pour 'B')
    nc = [0, 0, 0]

    # Statut intermédiaire pour chaque couleur, utilisé pour les calculs combinatoires
    stt = [0, 0, 0]

    # Ressources intermédiaires pour chaque couleur, participent au calcul de nm
    res = [0, 0, 0]

    # Parcours de chaque caractère de la chaîne s
    for si in s:
        # Récupère l’indice correspondant à la couleur courante
        i = d[si]
        # Incrémente le compteur de la couleur courante
        nc[i] += 1
        
        # Si le compteur courant est supérieur à ceux des autres couleurs, on incrémente le statut courant
        if nc[i] > nc[i-1] and nc[i] > nc[i-2]:
            stt[i] += 1
        # Si le compteur courant est inférieur ou égal aux deux autres, on réduit le nombre de résultats possibles
        elif nc[i] <= nc[i-1] and nc[i] <= nc[i-2]:
            nm *= res[i]
            res[i] -= 1
        # Sinon, mise à jour des ressources et statuts pour les autres couleurs
        else:
            if stt[i-1] == 0:
                # On renforce la ressource de la couleur précédente et on diminue le statut d'encore avant
                res[i-1] += 1
                nm *= stt[i-2]
                stt[i-2] -= 1
            else:
                # On renforce la ressource de la couleur d'avant précédent et on diminue l'autre statut
                res[i-2] += 1
                nm *= stt[i-1]
                stt[i-1] -= 1
        
        # Application du modulo après chaque mise à jour pour rester dans la limite
        nm %= mod

    # Boucle pour multiplier le résultat final par toutes les valeurs de 1 à n (factorielle)
    for i in range(1, n+1):
        nm *= i
        nm %= mod
    
    # Affichage du résultat final modulo 998244353
    print(nm)

    return None

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""
' (ID: 15611)
  → Token d'amorce (pas de prédiction)

Token 1: 'Ce' (ID: 24306)
  → Token d'amorce (pas de prédiction)

Token 2: ' code' (ID: 3490)
  → Token d'amorce (pas de prédiction)

Token 3: ' traite' (ID: 180696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009871537797152996
    2. ' est' → logprob: -5.759871482849121
    3. ' ```' → logprob: -6.384871482849121
    4. 's' → logprob: -7.259871482849121
    5. ' :' → logprob: -7.634871482849121
    6. 'space' → logprob: -7.759871482849121
    7. ' )' → logprob: -8.259871482849121
    8. '_' → logprob: -8.509871482849121
    9. ' =' → logprob: -8.509871482849121
    10. ' """' → logprob: -8.509871482849121

Token 4: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015348586020991206
    2. ' d' → logprob: -7.126534938812256
    3. ' ```' → logprob: -8.126534461975098
    4. '```' → logprob: -9.126534461975098
    5. ' des' → logprob: -9.251534461975098
    6. ' de' → logprob: -9.501534461975098
    7. '  ' → logprob: -10.501534461975098
    8. ' le' → logprob: -10.876534461975098
    9. ' ' → logprob: -11.001534461975098
    10. 'r' → logprob: -11.251534461975098

Token 5: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009016092866659164
    2. ' chaîne' → logprob: -5.009016036987305
    3. ' ligne' → logprob: -7.509016036987305
    4. ' chaine' → logprob: -7.509016036987305
    5. ' phrase' → logprob: -8.009016036987305
    6. ' ' → logprob: -8.759016036987305
    7. ' fonction' → logprob: -9.384016036987305
    8. 's' → logprob: -9.509016036987305
    9. '  ' → logprob: -9.509016036987305
    10. ' erreur' → logprob: -9.509016036987305

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029177313670516014
    2. ' de' → logprob: -5.029177188873291
    3. '.' → logprob: -5.154177188873291
    4. ',' → logprob: -5.529177188873291
    5. ' ,' → logprob: -5.779177188873291
    6. ' d' → logprob: -6.154177188873291
    7. 's' → logprob: -6.904177188873291
    8. 'space' → logprob: -7.404177188873291
    9. ' space' → logprob: -7.404177188873291
    10. ' :' → logprob: -7.404177188873291

Token 7: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5833326578140259
    2. ' caractères' → logprob: -0.8333326578140259
    3. ' caract' → logprob: -6.458332538604736
    4. ' caracteres' → logprob: -6.583332538604736
    5. ' ' → logprob: -6.708332538604736
    6. ' caractère' → logprob: -6.833332538604736
    7. ' ' → logprob: -6.958332538604736
    8. 'texte' → logprob: -7.458332538604736
    9. '```' → logprob: -8.708333015441895
    10. ' car' → logprob: -9.083333015441895

Token 8: ' composée' (ID: 146865)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7339265942573547
    2. ',' → logprob: -1.98392653465271
    3. '"""' → logprob: -2.23392653465271
    4. 's' → logprob: -2.48392653465271
    5. ':' → logprob: -2.85892653465271
    6. 'e' → logprob: -3.48392653465271
    7. '```' → logprob: -3.60892653465271
    8. ' ' → logprob: -4.358926773071289
    9. ' :' → logprob: -4.483926773071289
    10. ''' → logprob: -4.608926773071289

Token 9: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.26410388946533203
    2. 's' → logprob: -2.389103889465332
    3. ' ' → logprob: -2.389103889465332
    4. ' de' → logprob: -3.639103889465332
    5. 'd' → logprob: -4.264103889465332
    6. 'de' → logprob: -5.514103889465332
    7. '"""' → logprob: -7.264103889465332
    8. '```' → logprob: -7.389103889465332
    9. '_' → logprob: -7.639103889465332
    10. 'e' → logprob: -7.639103889465332

Token 10: ' lettres' (ID: 101234)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.2857770025730133
    2. ' espaces' → logprob: -2.4107770919799805
    3. 'esp' → logprob: -2.7857770919799805
    4. ' caractères' → logprob: -3.2857770919799805
    5. 'car' → logprob: -3.5357770919799805
    6. 'm' → logprob: -4.9107770919799805
    7. 's' → logprob: -5.2857770919799805
    8. 'lett' → logprob: -5.4107770919799805
    9. ' lettres' → logprob: -5.7857770919799805
    10. 'mot' → logprob: -6.2857770919799805

Token 11: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8521792888641357
    2. ',' → logprob: -1.9771792888641357
    3. ' ' → logprob: -2.8521792888641357
    4. ''' → logprob: -3.1021792888641357
    5. ' et' → logprob: -3.1021792888641357
    6. '.' → logprob: -3.2271792888641357
    7. 'et' → logprob: -3.2271792888641357
    8. ' d' → logprob: -3.3521792888641357
    9. 'de' → logprob: -3.7271792888641357
    10. '```' → logprob: -4.102179527282715

Token 12: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17381392419338226
    2. 'A' → logprob: -1.9238139390945435
    3. 'ab' → logprob: -5.923813819885254
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.923813819885254
    5. 'abc' → logprob: -6.798813819885254
    6. ''' → logprob: -6.923813819885254
    7. 'AB' → logprob: -7.173813819885254
    8. 'r' → logprob: -7.423813819885254
    9. ' a' → logprob: -7.673813819885254
    10. ''a' → logprob: -7.923813819885254

Token 13: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41986677050590515
    2. '',' → logprob: -1.4198668003082275
    3. 'E' → logprob: -3.7948668003082275
    4. 'R' → logprob: -4.419866561889648
    5. 'G' → logprob: -4.544866561889648
    6. 'U' → logprob: -4.544866561889648
    7. 'e' → logprob: -4.544866561889648
    8. 'O' → logprob: -5.294866561889648
    9. 'V' → logprob: -5.669866561889648
    10. 'B' → logprob: -5.794866561889648

Token 14: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0270030498504639
    2. ''S' → logprob: -2.027003049850464
    3. ''E' → logprob: -2.152003049850464
    4. 'S' → logprob: -2.402003049850464
    5. 'E' → logprob: -3.277003049850464
    6. ''U' → logprob: -3.402003049850464
    7. 'V' → logprob: -3.527003049850464
    8. ''O' → logprob: -4.027003288269043
    9. ''C' → logprob: -4.152003288269043
    10. ' '' → logprob: -4.152003288269043

Token 15: 'G' (ID: 38)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1851019561290741
    2. 'V' → logprob: -2.6851019859313965
    3. 'G' → logprob: -2.9351019859313965
    4. 'S' → logprob: -4.8101019859313965
    5. 'B' → logprob: -4.9351019859313965
    6. 'U' → logprob: -4.9351019859313965
    7. 'D' → logprob: -5.0601019859313965
    8. 'P' → logprob: -5.3101019859313965
    9. 'C' → logprob: -5.6851019859313965
    10. 'A' → logprob: -6.1851019859313965

Token 16: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6386089324951172
    2. ''' → logprob: -0.7636089324951172
    3. 'et' → logprob: -5.763608932495117
    4. ',' → logprob: -6.888608932495117
    5. 'B' → logprob: -8.263608932495117
    6. 'e' → logprob: -8.388608932495117
    7. ''et' → logprob: -8.388608932495117
    8. ' et' → logprob: -9.013608932495117
    9. ''E' → logprob: -9.138608932495117
    10. 'A' → logprob: -9.263608932495117

Token 17: ' '' (ID: 461)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7722766399383545
    2. ''' → logprob: -1.6472766399383545
    3. 'et' → logprob: -1.7722766399383545
    4. 'B' → logprob: -2.2722766399383545
    5. ' '' → logprob: -4.022276878356934
    6. ' and' → logprob: -5.022276878356934
    7. ''E' → logprob: -5.334776878356934
    8. ' ' → logprob: -5.584776878356934
    9. ' B' → logprob: -5.709776878356934
    10. ''et' → logprob: -5.772276878356934

Token 18: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007615071372129023
    2. ''' → logprob: -8.000761032104492
    3. 'R' → logprob: -8.750761032104492
    4. 'V' → logprob: -9.375761032104492
    5. 'Y' → logprob: -10.000761032104492
    6. 'O' → logprob: -10.750761032104492
    7. 'G' → logprob: -11.000761032104492
    8. 'N' → logprob: -11.563261032104492
    9. ' B' → logprob: -11.563261032104492
    10. 'E' → logprob: -12.000761032104492

Token 19: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012100000865757465
    2. '"' → logprob: -5.3871002197265625
    3. '',' → logprob: -6.1371002197265625
    4. ''''' → logprob: -6.6371002197265625
    5. '')' → logprob: -6.8871002197265625
    6. '"'' → logprob: -7.3871002197265625
    7. ')'' → logprob: -7.5121002197265625
    8. ''.' → logprob: -7.8871002197265625
    9. '''' → logprob: -8.387100219726562
    10. ')' → logprob: -8.512100219726562

Token 20: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7316751480102539
    2. ',' → logprob: -1.606675148010254
    3. ''' → logprob: -1.856675148010254
    4. ':' → logprob: -2.981675148010254
    5. 'e' → logprob: -3.606675148010254
    6. 's' → logprob: -3.731675148010254
    7. '"""' → logprob: -4.106675148010254
    8. '"' → logprob: -4.606675148010254
    9. '_' → logprob: -5.106675148010254
    10. '```' → logprob: -5.231675148010254

Token 21: ' effect' (ID: 3159)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09800349920988083
    2. ''''' → logprob: -3.848003387451172
    3. ''u' → logprob: -5.223003387451172
    4. ''espace' → logprob: -5.223003387451172
    5. ''U' → logprob: -5.348003387451172
    6. 'e' → logprob: -5.473003387451172
    7. ''l' → logprob: -5.473003387451172
    8. 'u' → logprob: -5.598003387451172
    9. '"""' → logprob: -5.598003387451172
    10. ''un' → logprob: -5.723003387451172

Token 22: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.4740966856479645
    2. 'u' → logprob: -0.9740966558456421
    3. 'e' → logprob: -12.599096298217773
    4. 'ua' → logprob: -12.974096298217773
    5. 'uer' → logprob: -13.224096298217773
    6. '```' → logprob: -13.349096298217773
    7. 'uie' → logprob: -13.474096298217773
    8. 'ué' → logprob: -13.724096298217773
    9. 'uée' → logprob: -13.724096298217773
    10. 'ui' → logprob: -13.849096298217773

Token 23: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.657507300376892
    2. 'u' → logprob: -1.657507300376892
    3. ' ' → logprob: -1.782507300376892
    4. ' un' → logprob: -1.907507300376892
    5. 'e' → logprob: -2.1575074195861816
    6. '_' → logprob: -2.6575074195861816
    7. 'r' → logprob: -2.9075074195861816
    8. 'un' → logprob: -4.282507419586182
    9. ''' → logprob: -4.657507419586182
    10. ' ' → logprob: -4.657507419586182

Token 24: ' opérations' (ID: 102793)
  Prédit: ' transformations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformations' → logprob: -0.8820297122001648
    2. ' ' → logprob: -1.2570297718048096
    3. ' espaces' → logprob: -2.7570297718048096
    4. ' ' → logprob: -3.1320297718048096
    5. ' opérations' → logprob: -3.1320297718048096
    6. ' changements' → logprob: -3.6320297718048096
    7. ' déplacements' → logprob: -4.1320295333862305
    8. ' actions' → logprob: -4.6320295333862305
    9. ' remplacement' → logprob: -4.8820295333862305
    10. ' transform' → logprob: -4.8820295333862305

Token 25: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42464128136634827
    2. '.' → logprob: -1.5496412515640259
    3. ' ' → logprob: -2.2996413707733154
    4. '_' → logprob: -4.174641132354736
    5. 'sur' → logprob: -6.049641132354736
    6. '```' → logprob: -6.049641132354736
    7. ',' → logprob: -6.174641132354736
    8. ' sur' → logprob: -6.299641132354736
    9. ' de' → logprob: -6.674641132354736
    10. '[' → logprob: -6.924641132354736

Token 26: ' compt' (ID: 39238)
  Prédit: ' remplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplacement' → logprob: -0.9081793427467346
    2. ' tri' → logprob: -1.7831792831420898
    3. ' transformation' → logprob: -2.90817928314209
    4. ' déplacement' → logprob: -3.15817928314209
    5. ' compt' → logprob: -3.28317928314209
    6. ' ' → logprob: -3.40817928314209
    7. ' dé' → logprob: -3.78317928314209
    8. 'tri' → logprob: -4.03317928314209
    9. ' traitement' → logprob: -4.28317928314209
    10. ' ' → logprob: -4.40817928314209

Token 27: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1171523854136467
    2. 'age' → logprob: -2.367152452468872
    3. 'a' → logprob: -4.117152214050293
    4. 'u' → logprob: -8.117152214050293
    5. 'es' → logprob: -10.117152214050293
    6. 'ages' → logprob: -10.367152214050293
    7. 'ag' → logprob: -10.492152214050293
    8. 'é' → logprob: -10.617152214050293
    9. 'er' → logprob: -11.117152214050293
    10. '#' → logprob: -11.367152214050293

Token 28: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2156816720962524
    2. 's' → logprob: -1.3406816720962524
    3. '_' → logprob: -1.5906816720962524
    4. ',' → logprob: -2.590681552886963
    5. ':' → logprob: -3.090681552886963
    6. '[' → logprob: -3.215681552886963
    7. 'n' → logprob: -4.215681552886963
    8. 'e' → logprob: -4.340681552886963
    9. 'r' → logprob: -4.465681552886963
    10. '```' → logprob: -4.465681552886963

Token 29: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44466862082481384
    2. ' de' → logprob: -1.0696686506271362
    3. 'd' → logprob: -5.194668769836426
    4. ' ' → logprob: -5.319668769836426
    5. 'de' → logprob: -5.819668769836426
    6. ''' → logprob: -6.819668769836426
    7. ' ' → logprob: -8.069668769836426
    8. 's' → logprob: -8.444668769836426
    9. ' des' → logprob: -8.819668769836426
    10. ' l' → logprob: -9.319668769836426

Token 30: ' calcul' (ID: 7559)
  Prédit: ' remplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remplacement' → logprob: -0.3344547748565674
    2. ' déplacement' → logprob: -2.9594547748565674
    3. ' dé' → logprob: -3.2094547748565674
    4. ' tri' → logprob: -3.4594547748565674
    5. ' transformation' → logprob: -3.9594547748565674
    6. ' fréquence' → logprob: -4.209454536437988
    7. ' d' → logprob: -4.334454536437988
    8. ' color' → logprob: -4.834454536437988
    9. ' manipulation' → logprob: -4.959454536437988
    10. ' regroup' → logprob: -5.209454536437988

Token 31: ' combin' (ID: 25307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.048014760017395
    2. '.' → logprob: -1.423014760017395
    3. ':' → logprob: -2.2980146408081055
    4. '```' → logprob: -2.6730146408081055
    5. ',' → logprob: -2.9230146408081055
    6. 's' → logprob: -3.1730146408081055
    7. '#' → logprob: -3.5480146408081055
    8. ' ' → logprob: -3.5480146408081055
    9. '[' → logprob: -4.1730146408081055
    10. ''' → logprob: -4.4230146408081055

Token 32: 'atoire' (ID: 41651)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27336499094963074
    2. 'atoire' → logprob: -2.023365020751953
    3. 'atoires' → logprob: -3.023365020751953
    4. 'ais' → logprob: -3.148365020751953
    5. 'ai' → logprob: -4.773365020751953
    6. '```' → logprob: -6.023365020751953
    7. 'aison' → logprob: -6.773365020751953
    8. 'ato' → logprob: -6.773365020751953
    9. 'aiso' → logprob: -7.648365020751953
    10. 'at' → logprob: -8.023365020751953

Token 33: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8261182308197021
    2. '[' → logprob: -2.076118230819702
    3. '_' → logprob: -2.201118230819702
    4. '#' → logprob: -2.326118230819702
    5. ':' → logprob: -2.576118230819702
    6. ''' → logprob: -2.951118230819702
    7. ' ' → logprob: -2.951118230819702
    8. 'n' → logprob: -3.201118230819702
    9. ')' → logprob: -3.326118230819702
    10. 's' → logprob: -3.326118230819702

Token 34: ' obtenir' (ID: 54423)
  Prédit: ' déterminer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déterminer' → logprob: -0.20276473462581635
    2. ' ' → logprob: -2.4527647495269775
    3. ' trouver' → logprob: -3.2027647495269775
    4. ' compter' → logprob: -3.8277647495269775
    5. ' calcul' → logprob: -5.577764511108398
    6. ' résoudre' → logprob: -5.577764511108398
    7. ' optimiser' → logprob: -5.577764511108398
    8. ' analyser' → logprob: -5.827764511108398
    9. ' détect' → logprob: -5.952764511108398
    10. ' permettre' → logprob: -6.452764511108398

Token 35: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1519253253936768
    2. ' ' → logprob: -1.7769253253936768
    3. ' ' → logprob: -2.0269253253936768
    4. ' un' → logprob: -2.0269253253936768
    5. ' le' → logprob: -2.5269253253936768
    6. 's' → logprob: -2.6519253253936768
    7. ' la' → logprob: -3.1519253253936768
    8. ' des' → logprob: -3.9019253253936768
    9. '_' → logprob: -5.026925086975098
    10. 'l' → logprob: -5.026925086975098

Token 36: ' résultat' (ID: 62556)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.46079468727111816
    2. ' espace' → logprob: -2.460794687271118
    3. ' e' → logprob: -2.710794687271118
    4. ' résultat' → logprob: -2.710794687271118
    5. ' ' → logprob: -3.210794687271118
    6. ' score' → logprob: -3.210794687271118
    7. ' nombre' → logprob: -3.835794687271118
    8. 'es' → logprob: -3.960794687271118
    9. ' résumé' → logprob: -5.210794448852539
    10. ' ' → logprob: -5.335794448852539

Token 37: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3624049425125122
    2. '_' → logprob: -1.9874049425125122
    3. ')' → logprob: -2.2374048233032227
    4. '[' → logprob: -2.3624048233032227
    5. ',' → logprob: -2.8624048233032227
    6. 's' → logprob: -2.9874048233032227
    7. '#' → logprob: -3.1124048233032227
    8. ':' → logprob: -3.3624048233032227
    9. 'n' → logprob: -3.4874048233032227
    10. '```' → logprob: -3.6124048233032227

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40864574909210205
    2. '_' → logprob: -1.158645749092102
    3. ' _' → logprob: -4.4086456298828125
    4. ''' → logprob: -6.0336456298828125
    5. '.' → logprob: -6.2836456298828125
    6. 's' → logprob: -7.0336456298828125
    7. '```' → logprob: -7.4086456298828125
    8. ' ```' → logprob: -7.6586456298828125
    9. '"' → logprob: -7.9086456298828125
    10. ',' → logprob: -8.033645629882812

Token 39: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12502159178256989
    2. '100' → logprob: -2.2500216960906982
    3. '998' → logprob: -4.750021457672119
    4. '1' → logprob: -6.625021457672119
    5. ' ' → logprob: -6.750021457672119
    6. '(' → logprob: -7.250021457672119
    7. '"' → logprob: -9.500021934509277
    8. '`' → logprob: -10.250021934509277
    9. '```' → logprob: -10.500021934509277
    10. ' (' → logprob: -11.000021934509277

Token 40: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.022665981203317642
    2. '2' → logprob: -3.8976659774780273
    3. '24' → logprob: -6.522665977478027
    4. '247' → logprob: -7.772665977478027
    5. '```' → logprob: -9.147665977478027
    6. ''''' → logprob: -9.897665977478027
    7. ',' → logprob: -11.272665977478027
    8. '3' → logprob: -11.397665977478027
    9. '"""' → logprob: -11.772665977478027
    10. ''' → logprob: -12.397665977478027

Token 41: '353' (ID: 32996)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7912167906761169
    2. '```' → logprob: -1.6662168502807617
    3. '.' → logprob: -2.6662168502807617
    4. ':' → logprob: -2.7912168502807617
    5. '#' → logprob: -2.7912168502807617
    6. ',' → logprob: -3.2912168502807617
    7. '*' → logprob: -3.4162168502807617
    8. '\' → logprob: -4.041216850280762
    9. '\n' → logprob: -4.166216850280762
    10. ')' → logprob: -4.541216850280762

Token 42: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3014352321624756
    2. '#' → logprob: -1.6764352321624756
    3. '```' → logprob: -2.0514352321624756
    4. '_' → logprob: -2.4264352321624756
    5. ',' → logprob: -2.8014352321624756
    6. '.' → logprob: -2.9264352321624756
    7. 'n' → logprob: -3.0514352321624756
    8. 'i' → logprob: -3.6764352321624756
    9. '
' → logprob: -4.176435470581055
    10. ')' → logprob: -4.176435470581055

Token 43: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7853738069534302
    2. '```' → logprob: -1.7853738069534302
    3. '#' → logprob: -1.9103738069534302
    4. '.' → logprob: -2.6603736877441406
    5. ':' → logprob: -2.7853736877441406
    6. '[' → logprob: -2.9103736877441406
    7. '\n' → logprob: -3.0353736877441406
    8. ')' → logprob: -3.2853736877441406
    9. '`' → logprob: -3.5353736877441406
    10. 'a' → logprob: -3.5353736877441406

Token 44: ' script' (ID: 11713)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025395131669938564
    2. ' ' → logprob: -6.75253963470459
    3. '_' → logprob: -7.62753963470459
    4. ' code' → logprob: -8.50253963470459
    5. ' ​' → logprob: -8.87753963470459
    6. ' _' → logprob: -9.25253963470459
    7. ' ```' → logprob: -9.50253963470459
    8. ' )' → logprob: -9.62753963470459
    9. ' 
' → logprob: -9.87753963470459
    10. ' \' → logprob: -10.00253963470459

Token 45: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32426196336746216
    2. '_' → logprob: -1.3242619037628174
    3. 's' → logprob: -5.5742621421813965
    4. ' _' → logprob: -6.1992621421813965
    5. ' s' → logprob: -6.6992621421813965
    6. ' ' → logprob: -6.6992621421813965
    7. ' 
' → logprob: -8.449261665344238
    8. 'import' → logprob: -8.449261665344238
    9. ' a' → logprob: -8.699261665344238
    10. ' )' → logprob: -8.824261665344238

Token 46: ' struct' (ID: 3539)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07612964510917664
    2. ' ' → logprob: -2.951129674911499
    3. ' ```' → logprob: -4.32612943649292
    4. '_' → logprob: -6.45112943649292
    5. ' 
' → logprob: -6.70112943649292
    6. ' import' → logprob: -6.82612943649292
    7. ' """' → logprob: -6.95112943649292
    8. ' ﻿' → logprob: -7.32612943649292
    9. '```' → logprob: -7.70112943649292
    10. ' ​' → logprob: -7.95112943649292

Token 47: 'uré' (ID: 73194)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17475135624408722
    2. 'é' → logprob: -3.1747512817382812
    3. 'uct' → logprob: -3.4247512817382812
    4. '```' → logprob: -3.9247512817382812
    5. 'uré' → logprob: -3.9247512817382812
    6. 'u' → logprob: -4.424751281738281
    7. 'e' → logprob: -4.424751281738281
    8. 'ru' → logprob: -4.799751281738281
    9. 'import' → logprob: -6.674751281738281
    10. 'i' → logprob: -6.674751281738281

Token 48: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10023406147956848
    2. ' en' → logprob: -3.225234031677246
    3. '_' → logprob: -3.475234031677246
    4. 'import' → logprob: -5.350234031677246
    5. '```' → logprob: -5.475234031677246
    6. ' import' → logprob: -5.975234031677246
    7. ' ```' → logprob: -5.975234031677246
    8. ' ' → logprob: -6.350234031677246
    9. ' comme' → logprob: -6.350234031677246
    10. ' ,' → logprob: -6.850234031677246

Token 49: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7949488759040833
    2. ' continuer' → logprob: -2.0449488162994385
    3. ' effectuer' → logprob: -2.4199488162994385
    4. '_' → logprob: -2.4199488162994385
    5. ' ' → logprob: -3.4199488162994385
    6. ' traiter' → logprob: -3.6699488162994385
    7. ' analyser' → logprob: -3.7949488162994385
    8. ' réaliser' → logprob: -4.419949054718018
    9. ' calcul' → logprob: -4.544949054718018
    10. '```' → logprob: -4.544949054718018

Token 50: ' entrée' (ID: 95590)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7647870182991028
    2. 'import' → logprob: -2.014786958694458
    3. ' def' → logprob: -2.639786958694458
    4. ' ' → logprob: -2.639786958694458
    5. 'from' → logprob: -3.264786958694458
    6. 'def' → logprob: -3.389786958694458
    7. '```' → logprob: -3.514786958694458
    8. ' input' → logprob: -3.889786958694458
    9. ' ```' → logprob: -3.889786958694458
    10. ' from' → logprob: -4.514787197113037

Token 51: ' compét' (ID: 34024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5927531123161316
    2. ' ' → logprob: -1.0927531719207764
    3. '_' → logprob: -2.5927531719207764
    4. '\' → logprob: -5.467752933502197
    5. ' de' → logprob: -5.592752933502197
    6. ',' → logprob: -5.967752933502197
    7. '```' → logprob: -5.967752933502197
    8. ' d' → logprob: -6.092752933502197
    9. ''' → logprob: -6.092752933502197
    10. '.' → logprob: -6.217752933502197

Token 52: 'itive' (ID: 4171)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.998903751373291
    2. 'itif' → logprob: -1.498903751373291
    3. 'it' → logprob: -1.623903751373291
    4. 'itive' → logprob: -1.873903751373291
    5. 'ence' → logprob: -4.748903751373291
    6. '```' → logprob: -4.873903751373291
    7. '>' → logprob: -5.248903751373291
    8. 'itiv' → logprob: -5.248903751373291
    9. 'e' → logprob: -5.373903751373291
    10. 'tion' → logprob: -5.373903751373291

Token 53: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3319742977619171
    2. '#' → logprob: -2.7069742679595947
    3. 'n' → logprob: -2.8319742679595947
    4. ':' → logprob: -3.0819742679595947
    5. '
' → logprob: -3.2069742679595947
    6. '\n' → logprob: -3.4569742679595947
    7. 'import' → logprob: -3.7069742679595947
    8. '\' → logprob: -6.206974506378174
    9. '[' → logprob: -6.331974506378174
    10. ')' → logprob: -6.456974506378174

Token 54: ' typ' (ID: 5378)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2335699498653412
    2. '```' → logprob: -2.858569860458374
    3. ' 
' → logprob: -3.483569860458374
    4. ' import' → logprob: -3.608569860458374
    5. 'import' → logprob: -4.233570098876953
    6. ' ```' → logprob: -4.483570098876953
    7. 'n' → logprob: -4.733570098876953
    8. '_' → logprob: -4.858570098876953
    9. 's' → logprob: -4.858570098876953
    10. ' ' → logprob: -5.233570098876953

Token 55: 'iquement' (ID: 83934)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6335703730583191
    2. '```' → logprob: -1.2585704326629639
    3. '#' → logprob: -2.508570432662964
    4. 'é' → logprob: -2.758570432662964
    5. 'u' → logprob: -5.258570194244385
    6. ')' → logprob: -5.508570194244385
    7. '``' → logprob: -5.508570194244385
    8. 'import' → logprob: -5.633570194244385
    9. 'i' → logprob: -5.758570194244385
    10. '`' → logprob: -5.758570194244385

Token 56: ' pour' (ID: 1930)
  Prédit: ' utilisée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -1.3055557012557983
    2. ' utilisé' → logprob: -1.8055557012557983
    3. '```' → logprob: -1.9305557012557983
    4. ' en' → logprob: -2.680555820465088
    5. 'import' → logprob: -2.805555820465088
    6. ' import' → logprob: -2.805555820465088
    7. ' used' → logprob: -2.805555820465088
    8. ' d' → logprob: -3.180555820465088
    9. ' de' → logprob: -4.305555820465088
    10. ' optim' → logprob: -4.555555820465088

Token 57: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.45548373460769653
    2. ' une' → logprob: -2.0804836750030518
    3. ' l' → logprob: -2.8304836750030518
    4. 'l' → logprob: -2.8304836750030518
    5. ' des' → logprob: -3.3304836750030518
    6. ' la' → logprob: -3.4554836750030518
    7. ' résoudre' → logprob: -3.9554836750030518
    8. ' recevoir' → logprob: -4.580483913421631
    9. ' standard' → logprob: -5.205483913421631
    10. ' coder' → logprob: -6.080483913421631

Token 58: ' problème' (ID: 35630)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5250146985054016
    2. ' problème' → logprob: -2.025014638900757
    3. 'pro' → logprob: -2.275014638900757
    4. ' probl' → logprob: -3.275014638900757
    5. ' code' → logprob: -4.025014877319336
    6. ' import' → logprob: -4.400014877319336
    7. 'e' → logprob: -4.400014877319336
    8. 'import' → logprob: -4.525014877319336
    9. 'proble' → logprob: -4.525014877319336
    10. ' concours' → logprob: -4.650014877319336

Token 59: ' d' (ID: 272)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6225320100784302
    2. ' ' → logprob: -1.9975320100784302
    3. '\' → logprob: -2.2475318908691406
    4. '_' → logprob: -3.3725318908691406
    5. '```' → logprob: -3.3725318908691406
    6. '[' → logprob: -3.4975318908691406
    7. 's' → logprob: -3.4975318908691406
    8. '<|end|>' → logprob: -3.7475318908691406
    9. ')' → logprob: -4.372531890869141
    10. 'import' → logprob: -4.997531890869141

Token 60: ''at' (ID: 85437)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02655804343521595
    2. 'é' → logprob: -3.7765581607818604
    3. ''' → logprob: -6.776557922363281
    4. ''entrée' → logprob: -7.776557922363281
    5. 'a' → logprob: -8.276557922363281
    6. 'i' → logprob: -8.526557922363281
    7. ''in' → logprob: -8.651557922363281
    8. 'o' → logprob: -8.776557922363281
    9. 'algorithm' → logprob: -8.901557922363281
    10. 'u' → logprob: -9.401557922363281

Token 61: 'tribution' (ID: 7090)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9775910973548889
    2. 'import' → logprob: -1.7275910377502441
    3. 'égr' → logprob: -2.352591037750244
    4. '```' → logprob: -2.977591037750244
    5. 'c' → logprob: -3.102591037750244
    6. 'gr' → logprob: -3.602591037750244
    7. 't' → logprob: -3.977591037750244
    8. 'érieur' → logprob: -4.102591037750244
    9. 'entrée' → logprob: -4.227591037750244
    10. 'rès' → logprob: -4.227591037750244

Token 62: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4057949781417847
    2. '_' → logprob: -1.5307949781417847
    3. '```' → logprob: -1.5307949781417847
    4. 'import' → logprob: -2.780795097351074
    5. '#' → logprob: -3.280795097351074
    6. '[' → logprob: -3.405795097351074
    7. '\' → logprob: -3.530795097351074
    8. ',' → logprob: -3.655795097351074
    9. 'n' → logprob: -3.780795097351074
    10. ')' → logprob: -4.280795097351074

Token 63: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.45600876212120056
    2. ' de' → logprob: -1.581008791923523
    3. 'd' → logprob: -2.0810086727142334
    4. ' un' → logprob: -4.2060089111328125
    5. ' une' → logprob: -5.3310089111328125
    6. 'de' → logprob: -5.3310089111328125
    7. ' calcul' → logprob: -6.7060089111328125
    8. 'un' → logprob: -6.8310089111328125
    9. ' combin' → logprob: -6.9560089111328125
    10. 'une' → logprob: -7.0810089111328125

Token 64: ' permutation' (ID: 135200)
  Prédit: ' couleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -1.517259955406189
    2. ' couleurs' → logprob: -1.767259955406189
    3. '```' → logprob: -1.892259955406189
    4. ' color' → logprob: -2.1422600746154785
    5. ' combin' → logprob: -2.7672600746154785
    6. ' permutation' → logprob: -3.8922600746154785
    7. ' distribution' → logprob: -4.0172600746154785
    8. 'color' → logprob: -4.5172600746154785
    9. 'placement' → logprob: -4.5172600746154785
    10. 'c' → logprob: -4.5172600746154785

Token 65: ' sous' (ID: 14487)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0897600650787354
    2. 'n' → logprob: -1.7147600650787354
    3. '#' → logprob: -2.2147600650787354
    4. '```' → logprob: -2.7147600650787354
    5. 'import' → logprob: -2.9647600650787354
    6. ')' → logprob: -3.2147600650787354
    7. 'd' → logprob: -3.2147600650787354
    8. '[' → logprob: -3.4647600650787354
    9. '_' → logprob: -3.4647600650787354
    10. ',' → logprob: -3.4647600650787354

Token 66: ' contr' (ID: 6030)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.29492563009262085
    2. 'contr' → logprob: -1.9199256896972656
    3. 'con' → logprob: -3.1699256896972656
    4. 'contra' → logprob: -4.044925689697266
    5. '```' → logprob: -4.294925689697266
    6. 'constraints' → logprob: -4.669925689697266
    7. ' certaines' → logprob: -5.169925689697266
    8. 'c' → logprob: -5.544925689697266
    9. ' contr' → logprob: -5.544925689697266
    10. ' ' → logprob: -5.669925689697266

Token 67: 'ainte' (ID: 48434)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8689744472503662
    2. '```' → logprob: -1.3689744472503662
    3. '#' → logprob: -2.243974447250366
    4. 'raints' → logprob: -2.243974447250366
    5. 'e' → logprob: -3.368974447250366
    6. 'r' → logprob: -3.493974447250366
    7. 'u' → logprob: -4.493974685668945
    8. 'import' → logprob: -5.493974685668945
    9. 'è' → logprob: -5.493974685668945
    10. '`' → logprob: -5.868974685668945

Token 68: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0807154178619385
    2. ':' → logprob: -1.5807154178619385
    3. '[' → logprob: -2.5807154178619385
    4. '#' → logprob: -2.7057154178619385
    5. '
' → logprob: -2.8307154178619385
    6. '```' → logprob: -2.8307154178619385
    7. '\n' → logprob: -3.7057154178619385
    8. 'n' → logprob: -3.7057154178619385
    9. ',' → logprob: -3.8307154178619385
    10. ':
' → logprob: -4.080715179443359

Token 69: ' couleurs' (ID: 54001)
  Prédit: ' couleurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.33945944905281067
    2. 's' → logprob: -2.0894594192504883
    3. ' couleur' → logprob: -3.3394594192504883
    4. ' color' → logprob: -3.3394594192504883
    5. 'cou' → logprob: -4.089459419250488
    6. 'color' → logprob: -4.214459419250488
    7. ' s' → logprob: -4.714459419250488
    8. 'colors' → logprob: -4.964459419250488
    9. ' colors' → logprob: -5.214459419250488
    10. 'r' → logprob: -5.339459419250488

Token 70: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46960607171058655
    2. ':' → logprob: -1.5946060419082642
    3. '[' → logprob: -2.9696061611175537
    4. 'n' → logprob: -3.0946061611175537
    5. '```' → logprob: -4.094605922698975
    6. '#' → logprob: -4.219605922698975
    7. ']' → logprob: -4.844605922698975
    8. ',' → logprob: -5.469605922698975
    9. '_' → logprob: -5.594605922698975
    10. 'import' → logprob: -5.594605922698975

Token 71: '"""

' (ID: 34508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5066167712211609
    2. '#' → logprob: -2.1316168308258057
    3. '[' → logprob: -2.1316168308258057
    4. 'n' → logprob: -3.2566168308258057
    5. ' ' → logprob: -3.8816168308258057
    6. ':' → logprob: -3.8816168308258057
    7. '_' → logprob: -4.506616592407227
    8. ',' → logprob: -4.506616592407227
    9. '\n' → logprob: -4.506616592407227
    10. ' 
' → logprob: -5.006616592407227

Token 72: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7462404370307922
    2. 'n' → logprob: -1.3712403774261475
    3. '#' → logprob: -2.4962403774261475
    4. 'i' → logprob: -2.6212403774261475
    5. '```' → logprob: -3.4962403774261475
    6. 'import' → logprob: -3.7462403774261475
    7. 'from' → logprob: -3.9962403774261475
    8. '_' → logprob: -4.496240615844727
    9. 'f' → logprob: -4.871240615844727
    10. 'def' → logprob: -5.121240615844727

Token 73: ' math' (ID: 13324)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005377356894314289
    2. ' math' → logprob: -5.255377292633057
    3. 'sys' → logprob: -9.380377769470215
    4. ' itertools' → logprob: -9.880377769470215
    5. ' ' → logprob: -12.505377769470215
    6. ' ' → logprob: -13.130377769470215
    7. ' collections' → logprob: -14.005377769470215
    8. 'math' → logprob: -14.630377769470215
    9. ' functools' → logprob: -14.630377769470215
    10. '	sys' → logprob: -15.130377769470215

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0696796253323555
    2. ' 

' → logprob: -4.0696797370910645
    3. 'import' → logprob: -4.0696797370910645
    4. '

' → logprob: -4.3196797370910645
    5. ' 
' → logprob: -4.3196797370910645
    6. '\' → logprob: -6.8196797370910645
    7. '_' → logprob: -7.3196797370910645
    8. ' 
 
' → logprob: -7.4446797370910645
    9. '```' → logprob: -7.5696797370910645
    10. 'def' → logprob: -7.8196797370910645

Token 75: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2338261604309082
    2. '

' → logprob: -2.858826160430908
    3. 'import' → logprob: -2.983826160430908
    4. ' 
' → logprob: -3.483826160430908
    5. ' 

' → logprob: -3.483826160430908
    6. '
' → logprob: -4.983826160430908
    7. '_' → logprob: -4.983826160430908
    8. '\' → logprob: -5.608826160430908
    9. 'from' → logprob: -5.608826160430908
    10. 'def' → logprob: -5.733826160430908

Token 76: ' queue' (ID: 13661)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3163335919380188
    2. 'sys' → logprob: -1.316333532333374
    3. ' itertools' → logprob: -5.941333770751953
    4. 'collections' → logprob: -8.441333770751953
    5. ' collections' → logprob: -9.441333770751953
    6. 'operator' → logprob: -10.066333770751953
    7. ' functools' → logprob: -10.066333770751953
    8. ' ' → logprob: -10.691333770751953
    9. ' operator' → logprob: -10.941333770751953
    10. 'it' → logprob: -12.066333770751953

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21610170602798462
    2. '

' → logprob: -2.09110164642334
    3. 'import' → logprob: -2.84110164642334
    4. ' 

' → logprob: -5.09110164642334
    5. ' 
' → logprob: -6.09110164642334
    6. '
' → logprob: -6.59110164642334
    7. '


' → logprob: -7.46610164642334
    8. 'from' → logprob: -7.71610164642334
    9. ',' → logprob: -8.59110164642334
    10. '
 
' → logprob: -8.84110164642334

Token 78: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3346704840660095
    2. '
' → logprob: -1.5846705436706543
    3. '

' → logprob: -2.9596705436706543
    4. 'from' → logprob: -3.9596705436706543
    5. ' 
' → logprob: -6.959670543670654
    6. ' 

' → logprob: -7.084670543670654
    7. 'n' → logprob: -7.084670543670654
    8. '```' → logprob: -7.084670543670654
    9. '#' → logprob: -7.209670543670654
    10. '\n' → logprob: -7.459670543670654

Token 79: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5411134362220764
    2. 'sys' → logprob: -1.2911133766174316
    3. ' collections' → logprob: -2.6661133766174316
    4. 'collections' → logprob: -2.7911133766174316
    5. ' itertools' → logprob: -4.916113376617432
    6. 'random' → logprob: -6.166113376617432
    7. ' random' → logprob: -7.166113376617432
    8. ' bis' → logprob: -7.541113376617432
    9. 'bis' → logprob: -7.791113376617432
    10. ' functools' → logprob: -8.16611385345459

Token 80: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.664371848164592e-05
    2. 'e' → logprob: -11.375016212463379
    3. 'ec' → logprob: -12.750016212463379
    4. 'ection' → logprob: -14.000016212463379
    5. 'ected' → logprob: -15.125016212463379
    6. 'ector' → logprob: -15.625016212463379
    7. 'ectl' → logprob: -15.875016212463379
    8. '```' → logprob: -16.000017166137695
    9. 'ects' → logprob: -16.250017166137695
    10. 'earch' → logprob: -16.375017166137695

Token 81: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09627389907836914
    2. '
' → logprob: -2.471273899078369
    3. ' 
' → logprob: -5.846273899078369
    4. '<|end|>' → logprob: -6.846273899078369
    5. '

' → logprob: -7.221273899078369
    6. 'from' → logprob: -7.471273899078369
    7. '```' → logprob: -7.471273899078369
    8. ' 

' → logprob: -8.346273422241211
    9. '\n' → logprob: -8.721273422241211
    10. '\' → logprob: -8.846273422241211

Token 82: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.015645764768123627
    2. '
' → logprob: -4.765645980834961
    3. 'from' → logprob: -5.515645980834961
    4. '

' → logprob: -7.390645980834961
    5. '```' → logprob: -7.390645980834961
    6. ' 
' → logprob: -7.765645980834961
    7. '\' → logprob: -8.265645980834961
    8. '\n' → logprob: -8.390645980834961
    9. ' import' → logprob: -8.640645980834961
    10. '  
' → logprob: -9.390645980834961

Token 83: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5931038856506348
    2. ' collections' → logprob: -1.0931038856506348
    3. ' itertools' → logprob: -2.2181038856506348
    4. 'sys' → logprob: -6.593103885650635
    5. ' sys' → logprob: -7.218103885650635
    6. 'it' → logprob: -8.093103408813477
    7. ' functools' → logprob: -8.343103408813477
    8. ' typing' → logprob: -8.343103408813477
    9. 'heap' → logprob: -8.843103408813477
    10. 'typing' → logprob: -9.593103408813477

Token 84: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1270405501127243
    2. ' import' → logprob: -2.1270406246185303
    3. ' defaultdict' → logprob: -10.12704086303711
    4. 'port' → logprob: -11.50204086303711
    5. 'abc' → logprob: -11.62704086303711
    6. '```' → logprob: -11.75204086303711
    7. 'm' → logprob: -12.00204086303711
    8. 'deque' → logprob: -12.00204086303711
    9. '	import' → logprob: -12.50204086303711
    10. 'n' → logprob: -12.50204086303711

Token 85: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.045657843351364136
    2. ' deque' → logprob: -3.7956578731536865
    3. ' Counter' → logprob: -3.9206578731536865
    4. 'deque' → logprob: -6.670657634735107
    5. 'Counter' → logprob: -7.045657634735107
    6. 'default' → logprob: -8.670658111572266
    7. ' counter' → logprob: -12.045658111572266
    8. '.Counter' → logprob: -12.545658111572266
    9. '```' → logprob: -12.545658111572266
    10. 'collections' → logprob: -12.920658111572266

Token 86: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.022155988961458206
    2. '
' → logprob: -4.77215576171875
    3. '

' → logprob: -5.02215576171875
    4. 'from' → logprob: -5.64715576171875
    5. ' 

' → logprob: -7.14715576171875
    6. '```' → logprob: -7.52215576171875
    7. ' 
' → logprob: -8.02215576171875
    8. 'def' → logprob: -8.02215576171875
    9. ',' → logprob: -8.39715576171875
    10. '#' → logprob: -8.52215576171875

Token 87: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.1434464156627655
    2. ' defaultdict' → logprob: -2.268446445465088
    3. 'Counter' → logprob: -3.518446445465088
    4. ' Counter' → logprob: -8.01844596862793
    5. 'named' → logprob: -9.39344596862793
    6. 'deque' → logprob: -10.01844596862793
    7. 'Ordered' → logprob: -10.89344596862793
    8. 'Default' → logprob: -12.01844596862793
    9. 'counter' → logprob: -12.01844596862793
    10. '```' → logprob: -12.39344596862793

Token 88: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.032177433371543884
    2. 'from' → logprob: -4.032177448272705
    3. ',' → logprob: -5.282177448272705
    4. '
' → logprob: -6.282177448272705
    5. '

' → logprob: -6.407177448272705
    6. ' 
' → logprob: -6.907177448272705
    7. ' import' → logprob: -7.032177448272705
    8. 'n' → logprob: -7.157177448272705
    9. '```' → logprob: -7.407177448272705
    10. 'def' → logprob: -7.532177448272705

Token 89: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12748119235038757
    2. 'from' → logprob: -2.50248122215271
    3. 'MOD' → logprob: -3.75248122215271
    4. 'mod' → logprob: -5.377480983734131
    5. 'n' → logprob: -5.877480983734131
    6. ' import' → logprob: -6.002480983734131
    7. 'def' → logprob: -6.627480983734131
    8. ' from' → logprob: -7.002480983734131
    9. 'class' → logprob: -7.877480983734131
    10. '```' → logprob: -8.002481460571289

Token 90: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05434725433588028
    2. ' itertools' → logprob: -3.054347276687622
    3. 'sys' → logprob: -5.179347038269043
    4. ' functools' → logprob: -9.804347038269043
    5. ' heap' → logprob: -10.054347038269043
    6. ' math' → logprob: -12.429347038269043
    7. 'it' → logprob: -12.804347038269043
    8. ' operator' → logprob: -12.804347038269043
    9. 'heap' → logprob: -13.554347038269043
    10. ' threading' → logprob: -14.554347038269043

Token 91: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. 'queue' → logprob: -14.375000953674316
    3. 't' → logprob: -16.5
    4. 'e' → logprob: -16.875
    5. 'f' → logprob: -17.0
    6. 's' → logprob: -18.0
    7. 'que' → logprob: -18.125
    8. 'u' → logprob: -18.125
    9. 'dict' → logprob: -18.25
    10. 'n' → logprob: -18.375

Token 92: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1925235241651535
    2. '
' → logprob: -1.94252347946167
    3. 'MOD' → logprob: -4.31752347946167
    4. '

' → logprob: -4.56752347946167
    5. 'mod' → logprob: -6.44252347946167
    6. 'from' → logprob: -6.56752347946167
    7. 'n' → logprob: -6.69252347946167
    8. ' 
' → logprob: -7.19252347946167
    9. 'def' → logprob: -7.19252347946167
    10. ' import' → logprob: -7.56752347946167

Token 93: ' hp' (ID: 37774)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.4492848813533783
    2. ' h' → logprob: -1.0742849111557007
    3. 'heap' → logprob: -4.94928503036499
    4. ' heap' → logprob: -5.32428503036499
    5. 'h' → logprob: -5.44928503036499
    6. ' hp' → logprob: -6.69928503036499
    7. ' ' → logprob: -6.82428503036499
    8. '	h' → logprob: -7.07428503036499
    9. 'hp' → logprob: -7.07428503036499
    10. 'HQ' → logprob: -10.699284553527832

Token 94: 'q' (ID: 80)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39256563782691956
    2. '
' → logprob: -1.5175656080245972
    3. '

' → logprob: -2.3925657272338867
    4. ' 
' → logprob: -5.392565727233887
    5. 'from' → logprob: -6.017565727233887
    6. ' 

' → logprob: -6.267565727233887
    7. 'n' → logprob: -6.892565727233887
    8. ' 
 
' → logprob: -7.767565727233887
    9. '
 
' → logprob: -7.767565727233887
    10. 'def' → logprob: -8.017565727233887

Token 95: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5398027896881104
    2. '
' → logprob: -1.0398027896881104
    3. '

' → logprob: -3.1648027896881104
    4. ' 
' → logprob: -4.414802551269531
    5. ' 

' → logprob: -6.164802551269531
    6. 'from' → logprob: -6.539802551269531
    7. ' 
 
' → logprob: -6.914802551269531
    8. ',' → logprob: -7.164802551269531
    9. '\n' → logprob: -7.164802551269531
    10. '
 
' → logprob: -7.664802551269531

Token 96: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1815488040447235
    2. 'MOD' → logprob: -2.056548833847046
    3. '
' → logprob: -4.431548595428467
    4. 'mod' → logprob: -4.681548595428467
    5. 'n' → logprob: -4.931548595428467
    6. 'from' → logprob: -5.306548595428467
    7. '

' → logprob: -6.806548595428467
    8. ' 
' → logprob: -7.306548595428467
    9. 'def' → logprob: -7.431548595428467
    10. '\' → logprob: -7.681548595428467

Token 97: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.029353396967053413
    2. 'it' → logprob: -4.654353618621826
    3. ' math' → logprob: -4.779353618621826
    4. 'math' → logprob: -6.029353618621826
    5. ' fractions' → logprob: -6.404353618621826
    6. 'sys' → logprob: -6.529353618621826
    7. ' typing' → logprob: -6.529353618621826
    8. ' functools' → logprob: -6.654353618621826
    9. ' sys' → logprob: -7.029353618621826
    10. 'typing' → logprob: -7.529353618621826

Token 98: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0025275067891925573
    2. 'import' → logprob: -6.127527713775635
    3. '<|end|>' → logprob: -8.127527236938477
    4. '<|end|>' → logprob: -10.502527236938477
    5. ' ' → logprob: -11.752527236938477
    6. ' ' → logprob: -12.377527236938477
    7. '	import' → logprob: -13.002527236938477
    8. ' input' → logprob: -13.627527236938477
    9. '```' → logprob: -13.752527236938477
    10. '.stdin' → logprob: -14.627527236938477

Token 99: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.12737886607646942
    2. ' stdin' → logprob: -2.1273789405822754
    3. '.stdin' → logprob: -8.377378463745117
    4. 'stdout' → logprob: -9.252378463745117
    5. 'stderr' → logprob: -10.127378463745117
    6. 'set' → logprob: -10.252378463745117
    7. 'exit' → logprob: -11.377378463745117
    8. ' set' → logprob: -11.877378463745117
    9. '(stdin' → logprob: -11.877378463745117
    10. 'argv' → logprob: -12.002378463745117

Token 100: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1045251116156578
    2. '

' → logprob: -2.354525089263916
    3. 'input' → logprob: -5.854525089263916
    4. '\n' → logprob: -7.604525089263916
    5. '
' → logprob: -7.729525089263916
    6. '
 
' → logprob: -8.354525566101074
    7. 'for' → logprob: -9.229525566101074
    8. 'n' → logprob: -10.104525566101074
    9. 'data' → logprob: -10.229525566101074
    10. '


' → logprob: -10.479525566101074

Token 101: ' set' (ID: 920)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.001586866332218051
    2. 'set' → logprob: -6.6265869140625
    3. ' stdout' → logprob: -8.3765869140625
    4. 'stderr' → logprob: -11.2515869140625
    5. '.stdout' → logprob: -11.6265869140625
    6. 'exit' → logprob: -12.3765869140625
    7. ' set' → logprob: -13.3765869140625
    8. 'stdin' → logprob: -13.5015869140625
    9. 'std' → logprob: -13.8765869140625
    10. '_stdout' → logprob: -15.7515869140625

Token 102: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -4.127333340875339e-06
    2. 're' → logprob: -13.375003814697266
    3. '_rec' → logprob: -13.750003814697266
    4. 'limit' → logprob: -14.375003814697266
    5. 's' → logprob: -15.500003814697266
    6. ' recursion' → logprob: -16.000003814697266
    7. 'trace' → logprob: -16.250003814697266
    8. 'stdin' → logprob: -16.625003814697266
    9. 'reci' → logprob: -17.000003814697266
    10. 'profile' → logprob: -17.000003814697266

Token 103: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.01614568941295147
    2. 'limit' → logprob: -4.641145706176758
    3. 'urs' → logprob: -5.641145706176758
    4. 'ursive' → logprob: -6.766145706176758
    5. 'set' → logprob: -7.641145706176758
    6. 't' → logprob: -7.891145706176758
    7. 'ur' → logprob: -8.141145706176758
    8. 'urse' → logprob: -8.516145706176758
    9. 'ord' → logprob: -9.266145706176758
    10. 'size' → logprob: -9.891145706176758

Token 104: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.816093228830141e-06
    2. ' limit' → logprob: -13.50000286102295
    3. '_limit' → logprob: -14.87500286102295
    4. 'imit' → logprob: -15.00000286102295
    5. 'Limit' → logprob: -15.50000286102295
    6. 'lim' → logprob: -15.62500286102295
    7. 'limited' → logprob: -16.875001907348633
    8. 'l' → logprob: -17.000001907348633
    9. 'depth' → logprob: -17.250001907348633
    10. '(limit' → logprob: -17.250001907348633

Token 105: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026667973026633263
    2. '

' → logprob: -3.776668071746826
    3. ',' → logprob: -6.901668071746826
    4. ',
' → logprob: -6.901668071746826
    5. '
' → logprob: -7.151668071746826
    6. '\n' → logprob: -8.526667594909668
    7. ' 
' → logprob: -9.026667594909668
    8. 'import' → logprob: -9.526667594909668
    9. '
 
' → logprob: -10.026667594909668
    10. 'set' → logprob: -10.276667594909668

Token 106: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5503205060958862
    2. 'input' → logprob: -1.0503205060958862
    3. 'set' → logprob: -3.050320625305176
    4. 'n' → logprob: -4.675320625305176
    5. 'import' → logprob: -4.800320625305176
    6. '

' → logprob: -5.425320625305176
    7. 'sys' → logprob: -6.800320625305176
    8. '\n' → logprob: -7.050320625305176
    9. 'def' → logprob: -7.550320625305176
    10. '\' → logprob: -8.050320625305176

Token 107: ' Lecture' (ID: 106534)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.612047016620636
    2. 'set' → logprob: -0.862047016620636
    3. 'stdin' → logprob: -4.23704719543457
    4. 'import' → logprob: -5.11204719543457
    5. 'i' → logprob: -5.61204719543457
    6. 'def' → logprob: -5.73704719543457
    7. 's' → logprob: -6.36204719543457
    8. 'sys' → logprob: -6.73704719543457
    9. 'd' → logprob: -6.86204719543457
    10. 'max' → logprob: -6.86204719543457

Token 108: ' rapide' (ID: 44887)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5299476981163025
    2. '(' → logprob: -1.9049477577209473
    3. 'input' → logprob: -2.4049477577209473
    4. 's' → logprob: -3.4049477577209473
    5. '(
' → logprob: -3.5299477577209473
    6. 'def' → logprob: -3.6549477577209473
    7. ' =' → logprob: -4.279947757720947
    8. 'n' → logprob: -4.279947757720947
    9. '_' → logprob: -4.654947757720947
    10. '(stdin' → logprob: -4.654947757720947

Token 109: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47121354937553406
    2. '
' → logprob: -2.5962135791778564
    3. 'def' → logprob: -2.8462135791778564
    4. ' =' → logprob: -3.0962135791778564
    5. '=' → logprob: -3.2212135791778564
    6. '(stdin' → logprob: -3.3462135791778564
    7. 'n' → logprob: -3.5962135791778564
    8. '()' → logprob: -3.7212135791778564
    9. '(input' → logprob: -4.221213340759277
    10. '()
' → logprob: -4.846213340759277

Token 110: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8067845106124878
    2. 'input' → logprob: -0.8067845106124878
    3. 'stdin' → logprob: -3.3067846298217773
    4. ' input' → logprob: -3.6817846298217773
    5. 'n' → logprob: -3.9317846298217773
    6. 'la' → logprob: -5.306784629821777
    7. 'sys' → logprob: -5.306784629821777
    8. ' l' → logprob: -5.556784629821777
    9. ' la' → logprob: -5.931784629821777
    10. 'entrée' → logprob: -6.056784629821777

Token 111: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.26306042075157166
    2. 'input' → logprob: -2.3880603313446045
    3. 'entrée' → logprob: -2.3880603313446045
    4. 'a' → logprob: -3.3880603313446045
    5. ''' → logprob: -5.388060569763184
    6. ' input' → logprob: -5.638060569763184
    7. 'e' → logprob: -6.388060569763184
    8. 'stdin' → logprob: -6.638060569763184
    9. '’entrée' → logprob: -6.888060569763184
    10. '''' → logprob: -8.138060569763184

Token 112: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5848129987716675
    2. 'n' → logprob: -0.8348129987716675
    3. 's' → logprob: -5.834813117980957
    4. '
' → logprob: -6.709813117980957
    5. 't' → logprob: -6.959813117980957
    6. 'def' → logprob: -7.084813117980957
    7. 'data' → logprob: -7.334813117980957
    8. '\n' → logprob: -7.709813117980957
    9. 'for' → logprob: -7.834813117980957
    10. 'import' → logprob: -8.084813117980957

Token 113: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4635975658893585
    2. 'n' → logprob: -1.7135975360870361
    3. '
' → logprob: -1.7135975360870361
    4. 'def' → logprob: -5.588597774505615
    5. 'data' → logprob: -6.213597774505615
    6. '

' → logprob: -6.588597774505615
    7. 'for' → logprob: -7.213597774505615
    8. 'import' → logprob: -7.713597774505615
    9. '\n' → logprob: -7.838597774505615
    10. '\' → logprob: -8.088597297668457

Token 114: 'ipt' (ID: 12656)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.375538163818419e-05
    2. 'n' → logprob: -10.500083923339844
    3. ' input' → logprob: -10.500083923339844
    4. 'data' → logprob: -11.125083923339844
    5. 'def' → logprob: -12.000083923339844
    6. 'import' → logprob: -12.375083923339844
    7. 'read' → logprob: -13.625083923339844
    8. 'inp' → logprob: -13.750083923339844
    9. 'for' → logprob: -14.250083923339844
    10. '

' → logprob: -15.875083923339844

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008764656260609627
    2. ' =' → logprob: -4.758764743804932
    3. '=input' → logprob: -9.633764266967773
    4. '=sys' → logprob: -9.633764266967773
    5. '()' → logprob: -11.883764266967773
    6. '=int' → logprob: -13.383764266967773
    7. '=get' → logprob: -13.758764266967773
    8. '.readline' → logprob: -13.883764266967773
    9. 'put' → logprob: -14.008764266967773
    10. '＝' → logprob: -14.133764266967773

Token 116: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.001181181170977652
    2. ' stdin' → logprob: -7.501181125640869
    3. 'lambda' → logprob: -7.626181125640869
    4. 'stdout' → logprob: -10.126181602478027
    5. 'input' → logprob: -10.501181602478027
    6. 'iter' → logprob: -10.626181602478027
    7. '(stdin' → logprob: -10.626181602478027
    8. 'sys' → logprob: -12.126181602478027
    9. '.stdin' → logprob: -12.501181602478027
    10. 'std' → logprob: -12.626181602478027

Token 117: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.9875325708417222e-05
    2. '.read' → logprob: -11.125029563903809
    3. '.' → logprob: -11.625029563903809
    4. 'read' → logprob: -12.500029563903809
    5. '.readlines' → logprob: -13.250029563903809
    6. ' readline' → logprob: -14.375029563903809
    7. '.buffer' → logprob: -17.250030517578125
    8. 'buffer' → logprob: -17.750030517578125
    9. '.write' → logprob: -18.750030517578125
    10. '```' → logprob: -19.000030517578125

Token 118: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009166974923573434
    2. '().' → logprob: -7.250916481018066
    3. '()
' → logprob: -9.250916481018066
    4. '(' → logprob: -9.375916481018066
    5. '())' → logprob: -11.875916481018066
    6. ' ()' → logprob: -12.625916481018066
    7. '()\' → logprob: -13.250916481018066
    8. ')' → logprob: -13.375916481018066
    9. '()`' → logprob: -13.375916481018066
    10. '()

' → logprob: -13.375916481018066

Token 119: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5316376090049744
    2. 'MOD' → logprob: -1.2816376686096191
    3. 'mod' → logprob: -2.281637668609619
    4. 'def' → logprob: -3.531637668609619
    5. 'class' → logprob: -6.656637668609619
    6. '#' → logprob: -7.156637668609619
    7. 'N' → logprob: -7.781637668609619
    8. 'set' → logprob: -8.156637191772461
    9. 'Mod' → logprob: -8.656637191772461
    10. 't' → logprob: -8.781637191772461

Token 120: ' Dé' (ID: 27247)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.25841760635375977
    2. 'mod' → logprob: -2.3834176063537598
    3. 'n' → logprob: -2.5084176063537598
    4. 'def' → logprob: -3.0084176063537598
    5. 'set' → logprob: -5.75841760635376
    6. 'class' → logprob: -7.25841760635376
    7. 'MAX' → logprob: -8.758417129516602
    8. ' MOD' → logprob: -8.758417129516602
    9. 'Mod' → logprob: -9.008417129516602
    10. '#' → logprob: -9.133417129516602

Token 121: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.013748769648373127
    2. 'fin' → logprob: -4.388748645782471
    3. 'fi' → logprob: -6.888748645782471
    4. 'fa' → logprob: -9.013749122619629
    5. 'ff' → logprob: -10.638749122619629
    6. 'fen' → logprob: -12.013749122619629
    7. 'fc' → logprob: -12.013749122619629
    8. 'claration' → logprob: -12.138749122619629
    9. 'finite' → logprob: -12.138749122619629
    10. '#' → logprob: -12.263749122619629

Token 122: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.23800572752952576
    2. 'opt' → logprob: -2.4880056381225586
    3. 'input' → logprob: -3.8630056381225586
    4. 'string' → logprob: -4.113005638122559
    5. 'f' → logprob: -4.738005638122559
    6. 'ip' → logprob: -4.738005638122559
    7. 'inir' → logprob: -4.738005638122559
    8. '_input' → logprob: -4.863005638122559
    9. '_string' → logprob: -4.988005638122559
    10. 'def' → logprob: -5.613005638122559

Token 123: ' d' (ID: 272)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.46640896797180176
    2. 'MOD' → logprob: -1.0914089679718018
    3. ' MOD' → logprob: -4.591408729553223
    4. '_mod' → logprob: -4.966408729553223
    5. 'def' → logprob: -4.966408729553223
    6. ' de' → logprob: -5.341408729553223
    7. ' mod' → logprob: -6.341408729553223
    8. 'class' → logprob: -6.591408729553223
    9. ' des' → logprob: -6.716408729553223
    10. 'de' → logprob: -7.341408729553223

Token 124: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3932832181453705
    2. 'ef' → logprob: -1.5182832479476929
    3. 'es' → logprob: -3.2682831287384033
    4. 'u' → logprob: -3.6432831287384033
    5. ' e' → logprob: -4.643283367156982
    6. 'éf' → logprob: -4.768283367156982
    7. ''une' → logprob: -5.018283367156982
    8. ''un' → logprob: -5.643283367156982
    9. 'f' → logprob: -6.268283367156982
    10. ' la' → logprob: -6.268283367156982

Token 125: ' grande' (ID: 10094)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1841942071914673
    2. 'const' → logprob: -1.5591942071914673
    3. 'classe' → logprob: -1.6841942071914673
    4. 'MOD' → logprob: -1.8091942071914673
    5. 'class' → logprob: -2.0591940879821777
    6. 'fonction' → logprob: -6.184194087982178
    7. ' constante' → logprob: -6.934194087982178
    8. 'constant' → logprob: -7.309194087982178
    9. 'CONST' → logprob: -8.059194564819336
    10. 'M' → logprob: -8.184194564819336

Token 126: ' limite' (ID: 48939)
  Prédit: ' constante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constante' → logprob: -0.6520478129386902
    2. 'mod' → logprob: -1.527047872543335
    3. '_mod' → logprob: -2.652047872543335
    4. 'const' → logprob: -2.777047872543335
    5. 'val' → logprob: -3.027047872543335
    6. ' valeur' → logprob: -3.902047872543335
    7. 'MOD' → logprob: -4.027047634124756
    8. 'int' → logprob: -4.902047634124756
    9. 'lim' → logprob: -5.152047634124756
    10. 'n' → logprob: -5.402047634124756

Token 127: ' de' (ID: 334)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.29946666955947876
    2. ' =' → logprob: -2.799466609954834
    3. '_INF' → logprob: -2.799466609954834
    4. 'MAX' → logprob: -2.799466609954834
    5. '
' → logprob: -4.299466609954834
    6. 'd' → logprob: -4.424466609954834
    7. '=' → logprob: -4.924466609954834
    8. '_inf' → logprob: -4.924466609954834
    9. 'N' → logprob: -5.174466609954834
    10. 'n' → logprob: -5.299466609954834

Token 128: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.6355173587799072
    2. 'r' → logprob: -0.7605173587799072
    3. ' réc' → logprob: -6.635517120361328
    4. ' recursion' → logprob: -7.010517120361328
    5. 'ré' → logprob: -8.260517120361328
    6. 'recursive' → logprob: -9.010517120361328
    7. ' profondeur' → logprob: -9.385517120361328
    8. '_rec' → logprob: -9.885517120361328
    9. 'set' → logprob: -9.885517120361328
    10. 'depth' → logprob: -10.010517120361328

Token 129: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000632139970548451
    2. 'urs' → logprob: -7.500632286071777
    3. 'ur' → logprob: -10.250632286071777
    4. 'u' → logprob: -10.500632286071777
    5. '##' → logprob: -12.750632286071777
    6. '_' → logprob: -12.875632286071777
    7. 'usion' → logprob: -13.250632286071777
    8. 'usr' → logprob: -13.750632286071777
    9. '```' → logprob: -13.750632286071777
    10. 'ursive' → logprob: -13.875632286071777

Token 130: ' pour' (ID: 1930)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07372608780860901
    2. '(' → logprob: -2.948726177215576
    3. '(
' → logprob: -5.073726177215576
    4. '
' → logprob: -5.698726177215576
    5. '(set' → logprob: -5.698726177215576
    6. '=' → logprob: -6.323726177215576
    7. '100' → logprob: -6.948726177215576
    8. '()
' → logprob: -7.823726177215576
    9. '=set' → logprob: -8.198725700378418
    10. '_set' → logprob: -8.448725700378418

Token 131: ' éviter' (ID: 64013)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.016387293115258217
    2. ' set' → logprob: -5.141387462615967
    3. '100' → logprob: -5.516387462615967
    4. '10' → logprob: -5.766387462615967
    5. 'int' → logprob: -7.516387462615967
    6. 'l' → logprob: -7.891387462615967
    7. '250' → logprob: -8.391386985778809
    8. '300' → logprob: -8.391386985778809
    9. 'python' → logprob: -8.391386985778809
    10. ' ' → logprob: -8.891386985778809

Token 132: ' les' (ID: 1341)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.019022632390260696
    2. 'Runtime' → logprob: -4.644022464752197
    3. ' Rec' → logprob: -5.019022464752197
    4. 'Overflow' → logprob: -7.269022464752197
    5. 'les' → logprob: -7.394022464752197
    6. ' Runtime' → logprob: -7.644022464752197
    7. 'l' → logprob: -8.144022941589355
    8. 'd' → logprob: -8.894022941589355
    9. 'rec' → logprob: -9.394022941589355
    10. 'la' → logprob: -9.519022941589355

Token 133: ' erreurs' (ID: 139891)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.9555943608283997
    2. ' Runtime' → logprob: -1.0805943012237549
    3. 'Runtime' → logprob: -1.8305943012237549
    4. ' Rec' → logprob: -2.330594301223755
    5. 'Overflow' → logprob: -4.580594539642334
    6. ' erreurs' → logprob: -5.705594539642334
    7. ' dépasse' → logprob: -6.080594539642334
    8. ' Overflow' → logprob: -6.830594539642334
    9. ' recursion' → logprob: -8.830594062805176
    10. 's' → logprob: -8.955594062805176

Token 134: ' de' (ID: 334)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0064195292070508
    2. '(set' → logprob: -5.381419658660889
    3. '
' → logprob: -7.131419658660889
    4. '(' → logprob: -8.38141918182373
    5. 'import' → logprob: -8.88141918182373
    6. '()
' → logprob: -9.13141918182373
    7. '(
' → logprob: -9.25641918182373
    8. '#set' → logprob: -9.63141918182373
    9. ':set' → logprob: -10.00641918182373
    10. '=set' → logprob: -10.00641918182373

Token 135: ' réc' (ID: 36254)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.5114650726318359
    2. 'rec' → logprob: -1.136465072631836
    3. 'd' → logprob: -3.011465072631836
    4. ' recursion' → logprob: -5.011465072631836
    5. ' Rec' → logprob: -5.136465072631836
    6. ' réc' → logprob: -5.636465072631836
    7. 'depth' → logprob: -5.886465072631836
    8. 'maximum' → logprob: -6.261465072631836
    9. ' dépasse' → logprob: -6.261465072631836
    10. 'import' → logprob: -6.511465072631836

Token 136: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.07079985737800598
    2. 'urs' → logprob: -2.8207998275756836
    3. 'ur' → logprob: -4.820799827575684
    4. 'u' → logprob: -8.320799827575684
    5. 'ursive' → logprob: -8.445799827575684
    6. 'urse' → logprob: -9.570799827575684
    7. '```' → logprob: -10.195799827575684
    8. 'usion' → logprob: -10.320799827575684
    9. 'rs' → logprob: -10.695799827575684
    10. '

' → logprob: -11.445799827575684

Token 137: ' profonde' (ID: 82498)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018564965575933456
    2. 'import' → logprob: -5.2685651779174805
    3. '
' → logprob: -5.7685651779174805
    4. 'limit' → logprob: -5.7685651779174805
    5. 'sys' → logprob: -6.8935651779174805
    6. '(' → logprob: -7.0185651779174805
    7. '(set' → logprob: -7.2685651779174805
    8. 's' → logprob: -7.3935651779174805
    9. '(
' → logprob: -7.5185651779174805
    10. '_set' → logprob: -7.6435651779174805

Token 138: '
' (ID: 198)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019347082125023007
    2. '
' → logprob: -6.50193452835083
    3. '(set' → logprob: -8.376935005187988
    4. '(' → logprob: -9.501935005187988
    5. '()
' → logprob: -9.876935005187988
    6. '(
' → logprob: -10.501935005187988
    7. '#set' → logprob: -11.126935005187988
    8. '100' → logprob: -12.251935005187988
    9. ')
' → logprob: -12.376935005187988
    10. '.set' → logprob: -12.751935005187988

Token 139: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -6.861651490908116e-05
    2. ' set' → logprob: -9.625068664550781
    3. '#set' → logprob: -14.000068664550781
    4. ')set' → logprob: -14.625068664550781
    5. '
' → logprob: -15.750068664550781
    6. '_set' → logprob: -15.750068664550781
    7. '.set' → logprob: -16.00006866455078
    8. '(set' → logprob: -16.12506866455078
    9. '999' → logprob: -16.37506866455078
    10. '```' → logprob: -16.37506866455078

Token 140: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.10036895424127579
    2. '_rec' → logprob: -2.3503689765930176
    3. '_recursive' → logprob: -9.72536849975586
    4. '_re' → logprob: -9.85036849975586
    5. ' rec' → logprob: -11.85036849975586
    6. '_rc' → logprob: -11.85036849975586
    7. 'r' → logprob: -11.85036849975586
    8. 're' → logprob: -11.97536849975586
    9. ' recursion' → logprob: -12.22536849975586
    10. '(rec' → logprob: -12.22536849975586

Token 141: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.029825694859027863
    2. 'urs' → logprob: -3.5298256874084473
    3. 'ursive' → logprob: -11.029826164245605
    4. '_' → logprob: -11.154826164245605
    5. 'rs' → logprob: -11.154826164245605
    6. 'ur' → logprob: -11.154826164245605
    7. 'ursor' → logprob: -12.154826164245605
    8. 'c' → logprob: -12.904826164245605
    9. 'urse' → logprob: -13.404826164245605
    10. 'usion' → logprob: -14.154826164245605

Token 142: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.127333340875339e-06
    2. '_limit' → logprob: -12.500003814697266
    3. 'lim' → logprob: -15.125003814697266
    4. ' limit' → logprob: -18.000003814697266
    5. '(limit' → logprob: -18.125003814697266
    6. 'depth' → logprob: -19.000003814697266
    7. 'limits' → logprob: -19.375003814697266
    8. 'Limit' → logprob: -19.875003814697266
    9. '
' → logprob: -20.000003814697266
    10. 'set' → logprob: -20.500003814697266

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(
' → logprob: -15.375
    3. '(int' → logprob: -15.5
    4. '((' → logprob: -16.75
    5. ' (' → logprob: -17.125
    6. '()' → logprob: -18.75
    7. '250' → logprob: -18.75
    8. '100' → logprob: -19.125
    9. '(
' → logprob: -19.5
    10. '(pow' → logprob: -19.625

Token 144: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00043519894825294614
    2. '100' → logprob: -7.7504353523254395
    3. ' ' → logprob: -12.500434875488281
    4. '1' → logprob: -14.625434875488281
    5. '300' → logprob: -16.12543487548828
    6. '200' → logprob: -16.37543487548828
    7. 'int' → logprob: -17.62543487548828
    8. '999' → logprob: -18.00043487548828
    9. '400' → logprob: -18.12543487548828
    10. '500' → logprob: -18.12543487548828

Token 145: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.057784225791692734
    2. '**' → logprob: -3.05778431892395
    3. '8' → logprob: -4.807784080505371
    4. '9' → logprob: -6.932784080505371
    5. '07' → logprob: -11.932784080505371
    6. '6' → logprob: -12.057784080505371
    7. '10' → logprob: -14.932784080505371
    8. '87' → logprob: -15.182784080505371
    9. '```' → logprob: -16.182785034179688
    10. '79' → logprob: -16.307785034179688

Token 146: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008635842241346836
    2. '9' → logprob: -4.758635997772217
    3. '8' → logprob: -10.758635520935059
    4. '6' → logprob: -16.883636474609375
    5. '**' → logprob: -17.383636474609375
    6. '+' → logprob: -20.383636474609375
    7. '

' → logprob: -21.633636474609375
    8. '```' → logprob: -21.633636474609375
    9. '10' → logprob: -22.133636474609375
    10. ' ' → logprob: -22.508636474609375

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -12.375004768371582
    3. ')
' → logprob: -15.500004768371582
    4. ')

' → logprob: -17.375003814697266
    5. '))' → logprob: -17.750003814697266
    6. ')#' → logprob: -18.500003814697266
    7. ')`' → logprob: -18.750003814697266
    8. '6' → logprob: -19.250003814697266
    9. ')
' → logprob: -19.375003814697266
    10. '
' → logprob: -19.625003814697266

Token 148: '#' (ID: 2)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0624462328851223
    2. 'mod' → logprob: -2.812446117401123
    3. 'n' → logprob: -8.437446594238281
    4. 'Mod' → logprob: -9.187446594238281
    5. 'def' → logprob: -9.312446594238281
    6. 'class' → logprob: -10.562446594238281
    7. 'M' → logprob: -11.062446594238281
    8. ' MOD' → logprob: -11.687446594238281
    9. 'N' → logprob: -12.062446594238281
    10. '#' → logprob: -12.187446594238281

Token 149: ' Mod' (ID: 7191)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12826238572597504
    2. 'mod' → logprob: -2.1282622814178467
    3. 'n' → logprob: -7.753262519836426
    4. 'def' → logprob: -7.878262519836426
    5. 'Mod' → logprob: -8.378262519836426
    6. 'M' → logprob: -8.878262519836426
    7. ' MOD' → logprob: -9.628262519836426
    8. 'class' → logprob: -10.628262519836426
    9. 'mo' → logprob: -10.878262519836426
    10. 'MO' → logprob: -11.628262519836426

Token 150: 'ulo' (ID: 5953)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2573573589324951
    2. ' =' → logprob: -2.507357358932495
    3. 'ULO' → logprob: -2.757357358932495
    4. '=' → logprob: -3.132357358932495
    5. 'ulo' → logprob: -4.132357597351074
    6. '_MOD' → logprob: -5.007357597351074
    7. 'ulus' → logprob: -5.507357597351074
    8. 'mod' → logprob: -5.757357597351074
    9. '_mod' → logprob: -5.757357597351074
    10. ' MOD' → logprob: -5.882357597351074

Token 151: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04158851131796837
    2. '=' → logprob: -3.291588544845581
    3. 'MOD' → logprob: -5.791588306427002
    4. 'mod' → logprob: -8.29158878326416
    5. '998' → logprob: -8.79158878326416
    6. ' MOD' → logprob: -10.79158878326416
    7. ' ' → logprob: -10.91658878326416
    8. '_mod' → logprob: -11.54158878326416
    9. ' =
' → logprob: -11.79158878326416
    10. '_MOD' → logprob: -11.91658878326416

Token 152: ' éviter' (ID: 64013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24726994335651398
    2. '998' → logprob: -1.8722699880599976
    3. ' MOD' → logprob: -3.872269868850708
    4. 'MOD' → logprob: -4.122270107269287
    5. '10' → logprob: -4.747270107269287
    6. ' le' → logprob: -4.747270107269287
    7. ' mod' → logprob: -5.747270107269287
    8. ' la' → logprob: -6.122270107269287
    9. 'mod' → logprob: -6.872270107269287
    10. ' l' → logprob: -6.872270107269287

Token 153: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5259634852409363
    2. ' ' → logprob: -1.275963544845581
    3. '998' → logprob: -2.650963544845581
    4. ' le' → logprob: -4.400963306427002
    5. 'les' → logprob: -4.650963306427002
    6. ' l' → logprob: -4.775963306427002
    7. ' ' → logprob: -5.400963306427002
    8. ' overflow' → logprob: -5.400963306427002
    9. ' la' → logprob: -5.525963306427002
    10. '100' → logprob: -6.025963306427002

Token 154: ' déb' (ID: 37874)
  Prédit: ' erreurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' erreurs' → logprob: -0.9085761308670044
    2. ' overflow' → logprob: -1.2835761308670044
    3. ' dépasse' → logprob: -1.5335761308670044
    4. ' déb' → logprob: -3.158576011657715
    5. 'overflow' → logprob: -3.533576011657715
    6. ' ent' → logprob: -3.783576011657715
    7. 'ent' → logprob: -6.783576011657715
    8. ' integer' → logprob: -7.033576011657715
    9. ' over' → logprob: -7.158576011657715
    10. ' conflits' → logprob: -7.283576011657715

Token 155: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.02262577787041664
    2. 'ords' → logprob: -4.272625923156738
    3. 'ors' → logprob: -5.647625923156738
    4. 'or' → logprob: -6.647625923156738
    5. 'orts' → logprob: -6.647625923156738
    6. 'uts' → logprob: -7.272625923156738
    7. 'êts' → logprob: -8.272625923156738
    8. 'ê' → logprob: -8.897625923156738
    9. 'ôts' → logprob: -9.022625923156738
    10. ' ord' → logprob: -9.272625923156738

Token 156: 'ements' (ID: 4507)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.12491082400083542
    2. 'f' → logprob: -3.374910831451416
    3. ' overflow' → logprob: -4.124910831451416
    4. 'overflow' → logprob: -4.249910831451416
    5. 'ements' → logprob: -4.624910831451416
    6. 'lements' → logprob: -4.749910831451416
    7. 'p' → logprob: -5.499910831451416
    8. 't' → logprob: -5.999910831451416
    9. '```' → logprob: -5.999910831451416
    10. 'ement' → logprob: -6.124910831451416

Token 157: ' d' (ID: 272)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.22531509399414062
    2. ' =' → logprob: -2.1003150939941406
    3. 'mod' → logprob: -2.9753150939941406
    4. ' MOD' → logprob: -4.350315093994141
    5. '=' → logprob: -5.225315093994141
    6. ' mod' → logprob: -5.600315093994141
    7. 'M' → logprob: -6.100315093994141
    8. '_mod' → logprob: -6.225315093994141
    9. '_MOD' → logprob: -7.600315093994141
    10. 'm' → logprob: -7.975315093994141

Token 158: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.2345656156539917
    2. 'ent' → logprob: -1.6095656156539917
    3. ' ent' → logprob: -5.484565734863281
    4. '’ent' → logprob: -5.609565734863281
    5. ''' → logprob: -7.984565734863281
    6. ' entier' → logprob: -8.109565734863281
    7. '_ent' → logprob: -8.234565734863281
    8. ''espace' → logprob: -9.484565734863281
    9. 'inte' → logprob: -9.734565734863281
    10. '(ent' → logprob: -10.109565734863281

Token 159: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.5543356537818909
    2. 'er' → logprob: -1.929335594177246
    3. 't' → logprob: -2.929335594177246
    4. 'r' → logprob: -2.929335594177246
    5. 'iers' → logprob: -2.929335594177246
    6. 'rée' → logprob: -3.804335594177246
    7. 'mod' → logprob: -4.054335594177246
    8. 'ter' → logprob: -4.679335594177246
    9. 'orm' → logprob: -4.804335594177246
    10. 're' → logprob: -4.804335594177246

Token 160: ',' (ID: 11)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.035329002887010574
    2. 'mod' → logprob: -3.6603291034698486
    3. ' MOD' → logprob: -5.1603288650512695
    4. 'M' → logprob: -6.2853288650512695
    5. ' mod' → logprob: -7.0353288650512695
    6. ' =' → logprob: -8.53532886505127
    7. '_mod' → logprob: -9.28532886505127
    8. 'Mod' → logprob: -10.16032886505127
    9. '_MOD' → logprob: -10.28532886505127
    10. ' M' → logprob: -10.66032886505127

Token 161: ' standard' (ID: 7024)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5798668265342712
    2. 'mod' → logprob: -0.8298668265342712
    3. 'md' → logprob: -6.079866886138916
    4. 'M' → logprob: -6.704866886138916
    5. 'Mod' → logprob: -8.704866409301758
    6. 'mo' → logprob: -9.204866409301758
    7. 'MD' → logprob: -9.204866409301758
    8. 'mdl' → logprob: -11.579866409301758
    9. 'MO' → logprob: -11.704866409301758
    10. 'm' → logprob: -12.204866409301758

Token 162: ' dans' (ID: 2671)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2543131113052368
    2. 'mod' → logprob: -1.5043131113052368
    3. 'M' → logprob: -6.504312992095947
    4. 'md' → logprob: -7.754312992095947
    5. 'Mod' → logprob: -9.129313468933105
    6. 'm' → logprob: -9.129313468933105
    7. ' MOD' → logprob: -9.254313468933105
    8. ' =' → logprob: -10.379313468933105
    9. 'MD' → logprob: -10.629313468933105
    10. ' mod' → logprob: -10.754313468933105

Token 163: ' les' (ID: 1341)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -0.0025835048872977495
    2. 'les' → logprob: -7.0025835037231445
    3. 'competitive' → logprob: -7.5025835037231445
    4. ' ' → logprob: -7.8775835037231445
    5. 'mod' → logprob: -8.752583503723145
    6. 'comp' → logprob: -9.002583503723145
    7. 'la' → logprob: -9.877583503723145
    8. '99' → logprob: -10.002583503723145
    9. '999' → logprob: -10.127583503723145
    10. 'code' → logprob: -10.127583503723145

Token 164: ' compét' (ID: 34024)
  Prédit: ' compét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compét' → logprob: -1.3896887302398682
    2. 'pro' → logprob: -2.014688730239868
    3. 'mod' → logprob: -2.014688730239868
    4. 'comp' → logprob: -2.139688730239868
    5. '99' → logprob: -2.514688730239868
    6. 'code' → logprob: -2.639688730239868
    7. 'compet' → logprob: -3.139688730239868
    8. '998' → logprob: -3.264688730239868
    9. 'competitive' → logprob: -4.014688491821289
    10. 'codes' → logprob: -4.264688491821289

Token 165: 'itions' (ID: 5500)
  Prédit: 'itif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itif' → logprob: -0.5103122591972351
    2. 'it' → logprob: -1.5103123188018799
    3. 'itions' → logprob: -2.38531231880188
    4. 'itive' → logprob: -2.88531231880188
    5. 'ition' → logprob: -4.010312080383301
    6. 't' → logprob: -5.135312080383301
    7. 'itives' → logprob: -5.760312080383301
    8. 'itiv' → logprob: -6.635312080383301
    9. 'ut' → logprob: -7.135312080383301
    10. '```' → logprob: -8.3853120803833

Token 166: ' At' (ID: 3604)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.035677261650562286
    2. 'mod' → logprob: -3.410677194595337
    3. 'M' → logprob: -6.285677433013916
    4. '
' → logprob: -10.035676956176758
    5. 'Mod' → logprob: -10.535676956176758
    6. ' MOD' → logprob: -10.785676956176758
    7. 'm' → logprob: -11.160676956176758
    8. '_mod' → logprob: -11.285676956176758
    9. 'md' → logprob: -11.410676956176758
    10. 'MD' → logprob: -11.660676956176758

Token 167: 'Coder' (ID: 72183)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.5403322577476501
    2. 'coder' → logprob: -1.540332317352295
    3. 'MOD' → logprob: -2.290332317352295
    4. 'mod' → logprob: -2.415332317352295
    5. '999' → logprob: -5.165332317352295
    6. 'code' → logprob: -5.790332317352295
    7. '996' → logprob: -7.540332317352295
    8. 'Coder' → logprob: -7.540332317352295
    9. '_MOD' → logprob: -7.915332317352295
    10. '992' → logprob: -8.165331840515137

Token 168: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00575422216206789
    2. 'mod' → logprob: -5.255753993988037
    3. 'M' → logprob: -7.630753993988037
    4. '
' → logprob: -11.380754470825195
    5. 'Mod' → logprob: -11.880754470825195
    6. 'MD' → logprob: -12.005754470825195
    7. ' MOD' → logprob: -12.755754470825195
    8. 'md' → logprob: -13.005754470825195
    9. 'm' → logprob: -13.255754470825195
    10. 'MO' → logprob: -13.380754470825195

Token 169: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01877826265990734
    2. 'mod' → logprob: -4.018778324127197
    3. ' MOD' → logprob: -8.018777847290039
    4. 'M' → logprob: -8.393777847290039
    5. '998' → logprob: -10.893777847290039
    6. ' mod' → logprob: -11.018777847290039
    7. 'md' → logprob: -11.268777847290039
    8. 'MD' → logprob: -11.643777847290039
    9. 'Mod' → logprob: -11.893777847290039
    10. 'MO' → logprob: -12.768777847290039

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141743123531342
    2. '=' → logprob: -1.7014174461364746
    3. ' ' → logprob: -14.201416969299316
    4. '=int' → logprob: -14.201416969299316
    5. '998' → logprob: -14.576416969299316
    6. ',' → logprob: -14.701416969299316
    7. 'ulus' → logprob: -14.826416969299316
    8. ' =
' → logprob: -15.201416969299316
    9. 'ule' → logprob: -15.326416969299316
    10. 'ulo' → logprob: -15.701416969299316

Token 171: ' ' (ID: 220)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. '999' → logprob: -15.001702308654785
    4. '9' → logprob: -17.2517032623291
    5. '988' → logprob: -18.6267032623291
    6. ' ' → logprob: -20.2517032623291
    7. '  ' → logprob: -20.5017032623291
    8. '```' → logprob: -20.6267032623291
    9. '997' → logprob: -20.8767032623291
    10. '`' → logprob: -21.0017032623291

Token 172: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '999' → logprob: -17.75
    4. '9' → logprob: -17.75
    5. '988' → logprob: -19.875
    6. '```' → logprob: -21.875
    7. '798' → logprob: -22.0
    8. '997' → logprob: -22.25
    9. '`' → logprob: -22.25
    10. '898' → logprob: -22.5

Token 173: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.5
    3. '24' → logprob: -17.125
    4. ',' → logprob: -18.25
    5. ' ' → logprob: -19.125
    6. '344' → logprob: -19.5
    7. '
' → logprob: -19.875
    8. '```' → logprob: -20.25
    9. '245' → logprob: -20.375
    10. '234' → logprob: -20.5

Token 174: '353' (ID: 32996)
  Prédit: '244'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.08973124623298645
    2. '344' → logprob: -3.089731216430664
    3. '353' → logprob: -3.214731216430664
    4. '243' → logprob: -9.839731216430664
    5. '253' → logprob: -10.589731216430664
    6. '345' → logprob: -10.589731216430664
    7. '343' → logprob: -11.839731216430664
    8. '245' → logprob: -12.339731216430664
    9. '153' → logprob: -12.464731216430664
    10. '24' → logprob: -12.839731216430664

Token 175: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5316343307495117
    2. '
' → logprob: -1.1566343307495117
    3. 'N' → logprob: -3.4066343307495117
    4. '

' → logprob: -3.5316343307495117
    5. 'def' → logprob: -4.406634330749512
    6. '
' → logprob: -4.906634330749512
    7. '#' → logprob: -5.031634330749512
    8. '\n' → logprob: -5.531634330749512
    9. ')' → logprob: -6.906634330749512
    10. '(n' → logprob: -7.281634330749512

Token 176: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24232150614261627
    2. 'N' → logprob: -2.242321491241455
    3. 'def' → logprob: -2.367321491241455
    4. 'class' → logprob: -4.992321491241455
    5. 's' → logprob: -5.242321491241455
    6. '#' → logprob: -5.867321491241455
    7. 'S' → logprob: -8.492321968078613
    8. 'input' → logprob: -10.242321968078613
    9. 'max' → logprob: -10.617321968078613
    10. 'MAX' → logprob: -10.867321968078613

Token 177: ' Directions' (ID: 85422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5620312094688416
    2. 'n' → logprob: -0.9370312094688416
    3. 'class' → logprob: -3.8120312690734863
    4. 'N' → logprob: -5.062031269073486
    5. '#' → logprob: -5.187031269073486
    6. 's' → logprob: -5.937031269073486
    7. 'input' → logprob: -7.562031269073486
    8. 'max' → logprob: -7.812031269073486
    9. 'MAX' → logprob: -8.437030792236328
    10. 'fact' → logprob: -9.437030792236328

Token 178: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018042956944555044
    2. '=' → logprob: -7.001804351806641
    3. '4' → logprob: -7.501804351806641
    4. '8' → logprob: -9.50180435180664
    5. 'D' → logprob: -9.75180435180664
    6. 'dire' → logprob: -10.00180435180664
    7. 's' → logprob: -10.12680435180664
    8. ' ' → logprob: -10.50180435180664
    9. ' =
' → logprob: -11.00180435180664
    10. 'dx' → logprob: -11.37680435180664

Token 179: ' déplacement' (ID: 138449)
  Prédit: ' déplacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -0.36974719166755676
    2. ' déplacements' → logprob: -1.8697471618652344
    3. 'placement' → logprob: -2.4947471618652344
    4. 'p' → logprob: -4.869747161865234
    5. 'placements' → logprob: -4.994747161865234
    6. 'f' → logprob: -4.994747161865234
    7. '[' → logprob: -5.244747161865234
    8. 'l' → logprob: -5.244747161865234
    9. 's' → logprob: -5.369747161865234
    10. 'dé' → logprob: -5.619747161865234

Token 180: ' potenti' (ID: 98175)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1688677072525024
    2. 'dx' → logprob: -1.1688677072525024
    3. 'dire' → logprob: -1.4188677072525024
    4. 'dirs' → logprob: -2.668867588043213
    5. 'd' → logprob: -3.793867588043213
    6. 'D' → logprob: -3.918867588043213
    7. 'dir' → logprob: -5.168867588043213
    8. 'DIR' → logprob: -5.293867588043213
    9. ' directions' → logprob: -5.293867588043213
    10. '4' → logprob: -5.793867588043213

Token 181: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.005978919565677643
    2. 'el' → logprob: -5.630979061126709
    3. 'ales' → logprob: -7.130979061126709
    4. 'es' → logprob: -7.505979061126709
    5. 'e' → logprob: -8.75597858428955
    6. 'eles' → logprob: -8.88097858428955
    7. 'al' → logprob: -8.88097858428955
    8. '#' → logprob: -9.00597858428955
    9. 'nelles' → logprob: -9.00597858428955
    10. 'é' → logprob: -9.13097858428955

Token 182: ' sur' (ID: 1512)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8700140714645386
    2. 'dirs' → logprob: -1.3700140714645386
    3. 'dire' → logprob: -1.3700140714645386
    4. 'd' → logprob: -3.745014190673828
    5. 'dir' → logprob: -3.995014190673828
    6. 'D' → logprob: -4.995014190673828
    7. ' =' → logprob: -4.995014190673828
    8. 'DIR' → logprob: -5.120014190673828
    9. ' directions' → logprob: -5.120014190673828
    10. ' dx' → logprob: -6.495014190673828

Token 183: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0762057304382324
    2. ' les' → logprob: -1.5762057304382324
    3. '[(' → logprob: -2.2012057304382324
    4. '2' → logprob: -2.8262057304382324
    5. ' la' → logprob: -2.9512057304382324
    6. ' une' → logprob: -3.0762057304382324
    7. ' ' → logprob: -3.4512057304382324
    8. '(' → logprob: -4.076205730438232
    9. '[-' → logprob: -4.076205730438232
    10. ' [(' → logprob: -4.201205730438232

Token 184: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.3582943081855774
    2. 'gr' → logprob: -1.2332942485809326
    3. ' ' → logprob: -5.358294486999512
    4. '2' → logprob: -6.108294486999512
    5. 'ligne' → logprob: -6.608294486999512
    6. 'plate' → logprob: -7.608294486999512
    7. '```' → logprob: -8.108294486999512
    8. ' ' → logprob: -8.608294486999512
    9. 'grid' → logprob: -9.358294486999512
    10. 'liste' → logprob: -9.608294486999512

Token 185: ' (' (ID: 350)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.527761697769165
    2. 'dx' → logprob: -1.402761697769165
    3. 'dirs' → logprob: -2.027761697769165
    4. ' directions' → logprob: -4.527761459350586
    5. 'dir' → logprob: -4.777761459350586
    6. 'd' → logprob: -5.527761459350586
    7. 'DIR' → logprob: -6.152761459350586
    8. '4' → logprob: -6.152761459350586
    9. 'D' → logprob: -6.652761459350586
    10. '
' → logprob: -7.027761459350586

Token 186: 'haut' (ID: 134423)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7959019541740417
    2. '[(' → logprob: -1.0459020137786865
    3. '(-' → logprob: -2.1709020137786865
    4. '[' → logprob: -3.5459020137786865
    5. 'dx' → logprob: -4.045901775360107
    6. '4' → logprob: -4.170901775360107
    7. ')' → logprob: -4.420901775360107
    8. ' (' → logprob: -5.545901775360107
    9. '[-' → logprob: -6.920901775360107
    10. '0' → logprob: -7.045901775360107

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003466673369985074
    2. ' ,' → logprob: -8.000347137451172
    3. ',-' → logprob: -12.875347137451172
    4. ',d' → logprob: -13.250347137451172
    5. '   ' → logprob: -14.250347137451172
    6. ',b' → logprob: -14.375347137451172
    7. 'd' → logprob: -14.375347137451172
    8. ',
' → logprob: -14.875347137451172
    9. '),' → logprob: -15.000347137451172
    10. '0' → logprob: -15.000347137451172

Token 188: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.030850935727357864
    2. '0' → logprob: -4.530850887298584
    3. ' bas' → logprob: -4.780850887298584
    4. '1' → logprob: -5.155850887298584
    5. 'dro' → logprob: -5.405850887298584
    6. '-' → logprob: -7.655850887298584
    7. 'down' → logprob: -8.530851364135742
    8. ' droite' → logprob: -9.155851364135742
    9. '-bas' → logprob: -9.530851364135742
    10. ' ' → logprob: -10.405851364135742

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.065608562901616e-05
    2. ' ,' → logprob: -9.500081062316895
    3. ')' → logprob: -13.625081062316895
    4. ' gauche' → logprob: -13.750081062316895
    5. '),' → logprob: -13.875081062316895
    6. 'g' → logprob: -14.625081062316895
    7. ',d' → logprob: -15.125081062316895
    8. ',g' → logprob: -15.250081062316895
    9. ',
' → logprob: -15.375081062316895
    10. ' et' → logprob: -15.500081062316895

Token 190: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5789202451705933
    2. ' gauche' → logprob: -0.8289202451705933
    3. 'dro' → logprob: -6.578920364379883
    4. 'left' → logprob: -7.203920364379883
    5. ' droite' → logprob: -7.328920364379883
    6. '0' → logprob: -9.453920364379883
    7. 'gau' → logprob: -9.578920364379883
    8. ' gau' → logprob: -11.578920364379883
    9. '```' → logprob: -12.078920364379883
    10. '1' → logprob: -12.328920364379883

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003729966701939702
    2. ' ,' → logprob: -8.000372886657715
    3. ',d' → logprob: -10.625372886657715
    4. ',right' → logprob: -12.625372886657715
    5. ' droite' → logprob: -13.375372886657715
    6. 'd' → logprob: -13.375372886657715
    7. ',
' → logprob: -13.875372886657715
    8. ' et' → logprob: -14.125372886657715
    9. ')' → logprob: -14.375372886657715
    10. ',n' → logprob: -14.625372886657715

Token 192: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.062151309102773666
    2. ' droite' → logprob: -2.8121511936187744
    3. 'd' → logprob: -8.687150955200195
    4. ' droit' → logprob: -12.312150955200195
    5. 'haut' → logprob: -12.937150955200195
    6. '```' → logprob: -13.312150955200195
    7. ' dro' → logprob: -13.562150955200195
    8. '   ' → logprob: -13.562150955200195
    9. 'right' → logprob: -14.312150955200195
    10. ' ' → logprob: -14.562150955200195

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29210731387138367
    2. ',' → logprob: -1.667107343673706
    3. ']' → logprob: -2.792107343673706
    4. 'dire' → logprob: -6.167107105255127
    5. ')
' → logprob: -8.292107582092285
    6. ',
' → logprob: -8.917107582092285
    7. ' ,' → logprob: -9.042107582092285
    8. '#' → logprob: -9.042107582092285
    9. '])' → logprob: -9.292107582092285
    10. '[' → logprob: -9.542107582092285

Token 194: 'dir' (ID: 6457)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.11388877779245377
    2. 'dirs' → logprob: -2.863888740539551
    3. 'd' → logprob: -3.988888740539551
    4. 'dx' → logprob: -4.113888740539551
    5. 'dir' → logprob: -4.863888740539551
    6. 'D' → logprob: -6.238888740539551
    7. 'dy' → logprob: -6.613888740539551
    8. 'DIR' → logprob: -6.738888740539551
    9. 'dh' → logprob: -6.738888740539551
    10. 'di' → logprob: -6.863888740539551

Token 195: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029025627300143242
    2. 'ections' → logprob: -3.6540255546569824
    3. ' =' → logprob: -6.029025554656982
    4. 'x' → logprob: -9.40402603149414
    5. 'S' → logprob: -9.52902603149414
    6. 'ctions' → logprob: -10.15402603149414
    7. 'ection' → logprob: -10.15402603149414
    8. '=' → logprob: -10.65402603149414
    9. '4' → logprob: -11.40402603149414
    10. '8' → logprob: -11.90402603149414

Token 196: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0042455545626580715
    2. ' [(' → logprob: -6.004245758056641
    3. '[' → logprob: -6.504245758056641
    4. '[[' → logprob: -8.25424575805664
    5. '((' → logprob: -12.50424575805664
    6. ' [' → logprob: -12.50424575805664
    7. '[((' → logprob: -13.00424575805664
    8. ' [[' → logprob: -14.00424575805664
    9. '[
' → logprob: -15.62924575805664
    10. '[-' → logprob: -15.87924575805664

Token 197: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38730597496032715
    2. '(-' → logprob: -1.1373059749603271
    3. '[' → logprob: -8.637306213378906
    4. '-' → logprob: -8.762306213378906
    5. '[-' → logprob: -9.387306213378906
    6. '0' → logprob: -11.887306213378906
    7. ' (' → logprob: -12.137306213378906
    8. '1' → logprob: -12.637306213378906
    9. '(+' → logprob: -13.637306213378906
    10. ' (-' → logprob: -14.887306213378906

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -16.25
    4. '0' → logprob: -17.25
    5. '3' → logprob: -18.3125
    6. ')' → logprob: -18.625
    7. '-' → logprob: -18.875
    8. '4' → logprob: -18.9375
    9. '   ' → logprob: -19.5625
    10. '10' → logprob: -19.75

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000610690622124821
    2. '0' → logprob: -7.875610828399658
    3. ' ,' → logprob: -8.3756103515625
    4. '),' → logprob: -16.5006103515625
    5. ',
' → logprob: -16.8756103515625
    6. ',),' → logprob: -17.2506103515625
    7. ' ' → logprob: -17.8756103515625
    8. '1' → logprob: -18.1256103515625
    9. 'd' → logprob: -18.7506103515625
    10. 's' → logprob: -19.8756103515625

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. ' ' → logprob: -16.750261306762695
    4. ')' → logprob: -18.500261306762695
    5. '  ' → logprob: -18.625261306762695
    6. '1' → logprob: -19.125261306762695
    7. '   ' → logprob: -19.375261306762695
    8. '00' → logprob: -20.000261306762695
    9. '۰' → logprob: -20.062761306762695
    10. '０' → logprob: -20.437761306762695

Token 201: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.020692652091383934
    2. '),(' → logprob: -3.8956925868988037
    3. ' ),' → logprob: -9.395692825317383
    4. ')' → logprob: -10.020692825317383
    5. '),
' → logprob: -10.770692825317383
    6. ',),' → logprob: -13.895692825317383
    7. '),

' → logprob: -14.020692825317383
    8. '),
' → logprob: -15.645692825317383
    9. ',' → logprob: -16.270692825317383
    10. ' ' → logprob: -17.645692825317383

Token 202: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024779161904007196
    2. ' (' → logprob: -6.002478122711182
    3. '1' → logprob: -13.002477645874023
    4. '0' → logprob: -18.127477645874023
    5. ' ' → logprob: -18.877477645874023
    6. ' ' → logprob: -20.752477645874023
    7. '   ' → logprob: -21.127477645874023
    8. '  ' → logprob: -21.627477645874023
    9. '
' → logprob: -22.002477645874023
    10. '  
' → logprob: -22.252477645874023

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.110668618930504e-05
    2. ' ' → logprob: -9.75006103515625
    3. '0' → logprob: -13.12506103515625
    4. '(' → logprob: -14.37506103515625
    5. '   ' → logprob: -17.12506103515625
    6. '+' → logprob: -17.12506103515625
    7. '  ' → logprob: -18.12506103515625
    8. ' ' → logprob: -18.12506103515625
    9. ' (' → logprob: -19.00006103515625
    10. '	' → logprob: -19.75006103515625

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012642296496778727
    2. '0' → logprob: -9.500126838684082
    3. ' ,' → logprob: -9.875126838684082
    4. '),(' → logprob: -17.000125885009766
    5. '),' → logprob: -17.250125885009766
    6. ' ' → logprob: -17.375125885009766
    7. ',
' → logprob: -18.375125885009766
    8. '(' → logprob: -18.500125885009766
    9. ',(' → logprob: -18.750125885009766
    10. ')' → logprob: -18.875125885009766

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -19.000059127807617
    4. '   ' → logprob: -19.250059127807617
    5. '  ' → logprob: -19.750059127807617
    6. ')' → logprob: -20.500059127807617
    7. '０' → logprob: -20.750059127807617
    8. '00' → logprob: -20.750059127807617
    9. ',' → logprob: -20.937559127807617
    10. ' ' → logprob: -21.187559127807617

Token 206: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005035852082073689
    2. '),(' → logprob: -8.000503540039062
    3. ' ),' → logprob: -8.875503540039062
    4. '(' → logprob: -11.000503540039062
    5. '0' → logprob: -12.375503540039062
    6. ')' → logprob: -12.750503540039062
    7. ',' → logprob: -13.250503540039062
    8. '),
' → logprob: -13.875503540039062
    9. ')]' → logprob: -14.125503540039062
    10. '],' → logprob: -14.125503540039062

Token 207: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07890895009040833
    2. ' (' → logprob: -2.578908920288086
    3. '0' → logprob: -10.953908920288086
    4. ' ' → logprob: -13.328908920288086
    5. '  ' → logprob: -17.953908920288086
    6. '
' → logprob: -18.328908920288086
    7. ')' → logprob: -18.828908920288086
    8. '   ' → logprob: -18.953908920288086
    9. ' ' → logprob: -18.953908920288086
    10. ',' → logprob: -19.453908920288086

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. '(' → logprob: -13.62500286102295
    4. '-' → logprob: -17.000003814697266
    5. '00' → logprob: -18.000003814697266
    6. '۰' → logprob: -19.250003814697266
    7. ')' → logprob: -20.625003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '０' → logprob: -21.000003814697266
    10. '{' → logprob: -21.000003814697266

Token 209: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.00020389800192788243
    2. ',' → logprob: -8.500204086303711
    3. ' ,-' → logprob: -15.625204086303711
    4. ',-

' → logprob: -16.75020408630371
    5. ',-
' → logprob: -16.75020408630371
    6. ',+' → logprob: -17.25020408630371
    7. '-' → logprob: -17.50020408630371
    8. '1' → logprob: -18.37520408630371
    9. ',--' → logprob: -18.37520408630371
    10. ',
' → logprob: -18.50020408630371

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. ',' → logprob: -18.375
    4. ')' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. '-' → logprob: -20.0
    7. '0' → logprob: -20.125
    8. '１' → logprob: -21.3125
    9. '),' → logprob: -21.3125
    10. '2' → logprob: -21.5625

Token 211: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003079334564972669
    2. '),(' → logprob: -8.2503080368042
    3. ')]' → logprob: -11.0003080368042
    4. ' ),' → logprob: -11.3753080368042
    5. ',' → logprob: -11.7503080368042
    6. '0' → logprob: -11.8753080368042
    7. ')' → logprob: -12.8753080368042
    8. '],' → logprob: -15.0003080368042
    9. '(' → logprob: -15.0003080368042
    10. ',),' → logprob: -15.6253080368042

Token 212: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03121415711939335
    2. '0' → logprob: -3.5312142372131348
    3. ' (' → logprob: -6.531214237213135
    4. ' ' → logprob: -12.156213760375977
    5. '1' → logprob: -16.781213760375977
    6. '   ' → logprob: -18.781213760375977
    7. ')' → logprob: -18.906213760375977
    8. '{' → logprob: -19.406213760375977
    9. ',' → logprob: -19.406213760375977
    10. '[' → logprob: -19.906213760375977

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815052703022957
    2. '1' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.268150329589844
    4. '01' → logprob: -19.018150329589844
    5. '(' → logprob: -19.268150329589844
    6. '+' → logprob: -19.768150329589844
    7. '2' → logprob: -20.768150329589844
    8. '```' → logprob: -20.768150329589844
    9. ')' → logprob: -21.393150329589844
    10. '4' → logprob: -22.268150329589844

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -14.000001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. '1' → logprob: -14.625001907348633
    5. ',-' → logprob: -17.625001907348633
    6. ',)' → logprob: -18.500001907348633
    7. ',+' → logprob: -18.625001907348633
    8. ',(' → logprob: -19.375001907348633
    9. ')' → logprob: -19.375001907348633
    10. ')]' → logprob: -19.625001907348633

Token 215: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20151498913764954
    2. '1' → logprob: -1.7015149593353271
    3. ' ' → logprob: -9.201515197753906
    4. '+' → logprob: -14.701515197753906
    5. '-' → logprob: -16.201515197753906
    6. '2' → logprob: -16.326515197753906
    7. '```' → logprob: -16.576515197753906
    8. '01' → logprob: -17.076515197753906
    9. '3' → logprob: -17.701515197753906
    10. ')' → logprob: -17.826515197753906

Token 216: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0949467197060585
    2. ')' → logprob: -3.0949466228485107
    3. ')]' → logprob: -3.0949466228485107
    4. '])' → logprob: -10.84494686126709
    5. ' ]' → logprob: -12.84494686126709
    6. '])]' → logprob: -14.84494686126709
    7. ')])' → logprob: -15.09494686126709
    8. ' )' → logprob: -15.71994686126709
    9. '）' → logprob: -16.094945907592773
    10. '']' → logprob: -16.094945907592773

Token 217: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6599119901657104
    2. 'n' → logprob: -1.1599119901657104
    3. '#' → logprob: -2.034912109375
    4. 'N' → logprob: -4.159912109375
    5. 'class' → logprob: -4.409912109375
    6. 'fact' → logprob: -5.034912109375
    7. 'factor' → logprob: -6.284912109375
    8. 'f' → logprob: -7.534912109375
    9. 'max' → logprob: -8.284912109375
    10. 'fac' → logprob: -8.409912109375

Token 218: ' Alphabet' (ID: 115219)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08476467430591583
    2. 'n' → logprob: -2.8347647190093994
    3. '#' → logprob: -4.33476448059082
    4. 'class' → logprob: -5.45976448059082
    5. 'from' → logprob: -6.45976448059082
    6. 'fact' → logprob: -6.45976448059082
    7. 'N' → logprob: -7.08476448059082
    8. 'factor' → logprob: -7.95976448059082
    9. 's' → logprob: -8.58476448059082
    10. 'input' → logprob: -8.70976448059082

Token 219: ' min' (ID: 1349)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1606248915195465
    2. '=' → logprob: -1.9106248617172241
    3. 's' → logprob: -8.410624504089355
    4. '="' → logprob: -9.660624504089355
    5. '='' → logprob: -10.660624504089355
    6. '=['' → logprob: -10.910624504089355
    7. '_rgb' → logprob: -11.410624504089355
    8. '_colors' → logprob: -11.785624504089355
    9. ' ="' → logprob: -12.285624504089355
    10. 'alphabet' → logprob: -12.285624504089355

Token 220: 'usc' (ID: 30081)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -1.5560771226882935
    2. '_len' → logprob: -1.8060771226882935
    3. 'usc' → logprob: -1.9310771226882935
    4. 'us' → logprob: -2.056077003479004
    5. ' =' → logprob: -2.306077003479004
    6. 'imal' → logprob: -2.806077003479004
    7. '_chars' → logprob: -3.556077003479004
    8. 'len' → logprob: -3.931077003479004
    9. '_length' → logprob: -4.306077003479004
    10. 'u' → logprob: -4.431077003479004

Token 221: 'ule' (ID: 1601)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.002895928919315338
    2. 'ale' → logprob: -6.752895832061768
    3. 'um' → logprob: -7.127895832061768
    4. 'alph' → logprob: -8.877896308898926
    5. 'a' → logprob: -9.127896308898926
    6. 'mal' → logprob: -9.752896308898926
    7. 'val' → logprob: -10.002896308898926
    8. 'all' → logprob: -10.127896308898926
    9. '```' → logprob: -10.127896308898926
    10. 'e' → logprob: -10.502896308898926

Token 222: ' anglais' (ID: 76075)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.07804854214191437
    2. ' =' → logprob: -3.5780484676361084
    3. 'alphabet' → logprob: -3.5780484676361084
    4. 'abc' → logprob: -4.7030487060546875
    5. 's' → logprob: -5.5780487060546875
    6. 'import' → logprob: -6.7030487060546875
    7. 'alpha' → logprob: -6.9530487060546875
    8. '=' → logprob: -6.9530487060546875
    9. 'letters' → logprob: -7.0780487060546875
    10. 'a' → logprob: -7.4530487060546875

Token 223: '
' (ID: 198)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.019516797736287117
    2. 'alphabet' → logprob: -4.269516944885254
    3. 'abc' → logprob: -5.644516944885254
    4. 'a' → logprob: -7.394516944885254
    5. 'import' → logprob: -7.894516944885254
    6. 'alpha' → logprob: -8.644516944885254
    7. 'abcdef' → logprob: -8.644516944885254
    8. 'abcdefghijkl' → logprob: -9.269516944885254
    9. 'lower' → logprob: -9.519516944885254
    10. 's' → logprob: -9.519516944885254

Token 224: 'alp' (ID: 100669)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.8590941429138184
    2. 'alphabet' → logprob: -1.1090941429138184
    3. 'abc' → logprob: -2.2340941429138184
    4. 'import' → logprob: -2.4840941429138184
    5. 'alpha' → logprob: -3.2340941429138184
    6. 'alp' → logprob: -5.609094142913818
    7. 'alph' → logprob: -5.609094142913818
    8. 'a' → logprob: -5.859094142913818
    9. 'from' → logprob: -5.984094142913818
    10. 'ascii' → logprob: -6.234094142913818

Token 225: ' =' (ID: 314)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.015399263240396976
    2. ' =' → logprob: -4.26539945602417
    3. 'hab' → logprob: -7.64039945602417
    4. '=' → logprob: -7.76539945602417
    5. 'abet' → logprob: -9.140398979187012
    6. 'het' → logprob: -9.640398979187012
    7. 'ha' → logprob: -9.765398979187012
    8. 'hat' → logprob: -10.015398979187012
    9. 'hb' → logprob: -11.765398979187012
    10. 'ht' → logprob: -11.890398979187012

Token 226: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.26720359921455383
    2. ''' → logprob: -1.5172035694122314
    3. ' '' → logprob: -5.5172038078308105
    4. '[' → logprob: -5.6422038078308105
    5. ' "' → logprob: -5.7672038078308105
    6. ''ab' → logprob: -6.0172038078308105
    7. ''a' → logprob: -7.2672038078308105
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.5172038078308105
    9. ''b' → logprob: -8.892203330993652
    10. ''import' → logprob: -9.017203330993652

Token 227: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.0012798800598829985
    2. '"' → logprob: -6.751279830932617
    3. ''' → logprob: -9.376279830932617
    4. ' abc' → logprob: -11.376279830932617
    5. 'abc' → logprob: -11.876279830932617
    6. 'abcdefghijkl' → logprob: -13.001279830932617
    7. 'abcdef' → logprob: -13.126279830932617
    8. 'abcdefgh' → logprob: -13.501279830932617
    9. 'q' → logprob: -14.501279830932617
    10. 'ab' → logprob: -16.501279830932617

Token 228: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -7.791440293658525e-05
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.500078201293945
    3. '"
' → logprob: -13.375078201293945
    4. ' "' → logprob: -14.375078201293945
    5. '"""' → logprob: -15.750078201293945
    6. 'abcdefghijkl' → logprob: -15.750078201293945
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -15.750078201293945
    8. '".' → logprob: -16.000078201293945
    9. '"

' → logprob: -16.250078201293945
    10. '")' → logprob: -16.750078201293945

Token 229: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45252877473831177
    2. 'def' → logprob: -1.202528715133667
    3. '#' → logprob: -3.077528715133667
    4. 'N' → logprob: -4.327528953552246
    5. 'class' → logprob: -6.702528953552246
    6. 'from' → logprob: -7.577528953552246
    7. 'import' → logprob: -7.827528953552246
    8. 's' → logprob: -8.077528953552246
    9. '(n' → logprob: -8.077528953552246
    10. 'fact' → logprob: -8.452528953552246

Token 230: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6803854703903198
    2. ' factorial' → logprob: -1.9303854703903198
    3. ' mod' → logprob: -2.1803855895996094
    4. ' solve' → logprob: -2.4303855895996094
    5. ' comb' → logprob: -2.6803855895996094
    6. 'mod' → logprob: -3.6803855895996094
    7. 'solve' → logprob: -4.305385589599609
    8. 'main' → logprob: -4.305385589599609
    9. ' factor' → logprob: -5.055385589599609
    10. 'factor' → logprob: -5.055385589599609

Token 231: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00044783088378608227
    2. '()' → logprob: -7.750447750091553
    3. ' ():' → logprob: -11.250448226928711
    4. '(' → logprob: -13.125448226928711
    5. '():
' → logprob: -13.125448226928711
    6. ' ()' → logprob: -16.62544822692871
    7. '()>' → logprob: -18.12544822692871
    8. '().' → logprob: -18.50044822692871
    9. '_' → logprob: -18.87544822692871
    10. '(":' → logprob: -19.12544822692871

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023740483447909355
    2. 'n' → logprob: -4.523740291595459
    3. ' n' → logprob: -5.398740291595459
    4. '(n' → logprob: -5.523740291595459
    5. '```' → logprob: -7.398740291595459
    6. ' s' → logprob: -7.648740291595459
    7. 'input' → logprob: -7.773740291595459
    8. '    
' → logprob: -7.773740291595459
    9. ' ' → logprob: -8.148740768432617
    10. '    ' → logprob: -8.398740768432617

Token 233: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29105648398399353
    2. ' n' → logprob: -2.1660563945770264
    3. 's' → logprob: -2.2910563945770264
    4. ' s' → logprob: -3.6660563945770264
    5. '   ' → logprob: -5.1660566329956055
    6. 'N' → logprob: -5.4160566329956055
    7. 'S' → logprob: -7.5410566329956055
    8. ' N' → logprob: -8.291056632995605
    9. ' S' → logprob: -9.291056632995605
    10. 'import' → logprob: -10.291056632995605

Token 234: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5612053871154785
    2. 'n' → logprob: -1.3112053871154785
    3. '   ' → logprob: -2.0612053871154785
    4. 'S' → logprob: -4.3112053871154785
    5. ' s' → logprob: -4.5612053871154785
    6. ' n' → logprob: -5.5612053871154785
    7. 'N' → logprob: -5.5612053871154785
    8. ' ' → logprob: -8.06120491027832
    9. ' S' → logprob: -8.18620491027832
    10. 'import' → logprob: -8.93620491027832

Token 235: ' Fonction' (ID: 189149)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5263423323631287
    2. 's' → logprob: -1.9013423919677734
    3. ' n' → logprob: -2.1513423919677734
    4. '   ' → logprob: -2.5263423919677734
    5. 'n' → logprob: -3.4013423919677734
    6. ' code' → logprob: -4.401342391967773
    7. ' #' → logprob: -5.401342391967773
    8. '#' → logprob: -5.401342391967773
    9. ' pass' → logprob: -6.776342391967773
    10. ' S' → logprob: -6.901342391967773

Token 236: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.40820273756980896
    2. ' de' → logprob: -1.7832027673721313
    3. ' main' → logprob: -2.283202648162842
    4. '()' → logprob: -4.033202648162842
    5. 'de' → logprob: -5.033202648162842
    6. '():' → logprob: -5.533202648162842
    7. ' suivante' → logprob: -5.783202648162842
    8. 'def' → logprob: -5.783202648162842
    9. ' ' → logprob: -5.908202648162842
    10. 'main' → logprob: -5.908202648162842

Token 237: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007778756786137819
    2. ':' → logprob: -6.007778644561768
    3. '()' → logprob: -6.132778644561768
    4. '   ' → logprob: -6.882778644561768
    5. '():
' → logprob: -6.882778644561768
    6. ' :' → logprob: -7.382778644561768
    7. 'def' → logprob: -8.132779121398926
    8. ' ():' → logprob: -9.632779121398926
    9. '):' → logprob: -9.882779121398926
    10. '(' → logprob: -11.507779121398926

Token 238: ' script' (ID: 11713)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.466919869184494
    2. 'programme' → logprob: -1.4669198989868164
    3. 'script' → logprob: -2.0919198989868164
    4. 'program' → logprob: -4.466919898986816
    5. ' code' → logprob: -5.216919898986816
    6. ' script' → logprob: -7.466919898986816
    7. 'main' → logprob: -7.716919898986816
    8. ' programme' → logprob: -7.716919898986816
    9. 'solution' → logprob: -9.091919898986816
    10. '```' → logprob: -9.216919898986816

Token 239: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12505032122135162
    2. ':' → logprob: -2.6250503063201904
    3. ' :' → logprob: -3.3750503063201904
    4. '):' → logprob: -5.1250505447387695
    5. '():' → logprob: -5.7500505447387695
    6. 'def' → logprob: -7.3750505447387695
    7. ',' → logprob: -7.6250505447387695
    8. '.' → logprob: -9.00005054473877
    9. ')' → logprob: -9.00005054473877
    10. ' ):' → logprob: -9.75005054473877

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001057698973454535
    2. '    
' → logprob: -7.8760576248168945
    3. '"""' → logprob: -9.001057624816895
    4. 'n' → logprob: -9.126057624816895
    5. 'def' → logprob: -9.126057624816895
    6. '```' → logprob: -9.626057624816895
    7. '    ' → logprob: -9.876057624816895
    8. '#' → logprob: -10.251057624816895
    9. ')' → logprob: -10.501057624816895
    10. 's' → logprob: -10.501057624816895

Token 241: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015787873417139053
    2. '"""' → logprob: -4.3907880783081055
    3. '    
' → logprob: -7.0157880783081055
    4. '    ' → logprob: -7.3907880783081055
    5. ' """' → logprob: -8.140788078308105
    6. '"""
' → logprob: -8.390788078308105
    7. '```' → logprob: -8.515788078308105
    8. '#' → logprob: -8.515788078308105
    9. 'n' → logprob: -8.640788078308105
    10. '""' → logprob: -9.015788078308105

Token 242: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2472974956035614
    2. '():' → logprob: -1.6222975254058838
    3. '   ' → logprob: -4.747297286987305
    4. ' la' → logprob: -5.122297286987305
    5. ':' → logprob: -5.247297286987305
    6. ' l' → logprob: -7.872297286987305
    7. ' ' → logprob: -8.372297286987305
    8. ' une' → logprob: -8.372297286987305
    9. ' les' → logprob: -8.872297286987305
    10. ' le' → logprob: -9.122297286987305

Token 243: ' entr' (ID: 7072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5683844089508057
    2. ' inputs' → logprob: -2.0683844089508057
    3. ' données' → logprob: -2.3183844089508057
    4. ' input' → logprob: -3.0683844089508057
    5. 'input' → logprob: -3.0683844089508057
    6. ' n' → logprob: -3.1933844089508057
    7. 'inputs' → logprob: -4.068384170532227
    8. 's' → logprob: -4.443384170532227
    9. ' lignes' → logprob: -5.693384170532227
    10. ' entr' → logprob: -5.818384170532227

Token 244: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.031569499522447586
    2. 'rée' → logprob: -3.531569480895996
    3. 'ree' → logprob: -7.156569480895996
    4. 'e' → logprob: -8.406569480895996
    5. 'ées' → logprob: -8.406569480895996
    6. 'er' → logprob: -8.406569480895996
    7. 'r' → logprob: -8.531569480895996
    8. 'ee' → logprob: -9.656569480895996
    9. 't' → logprob: -10.531569480895996
    10. 'et' → logprob: -11.156569480895996

Token 245: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19984978437423706
    2. ',' → logprob: -2.199849843978882
    3. '()' → logprob: -3.324849843978882
    4. ':' → logprob: -4.574849605560303
    5. 'n' → logprob: -4.949849605560303
    6. ' ' → logprob: -4.949849605560303
    7. ' n' → logprob: -6.699849605560303
    8. ' et' → logprob: -6.699849605560303
    9. '():' → logprob: -6.699849605560303
    10. 's' → logprob: -6.824849605560303

Token 246: ' puis' (ID: 18766)
  Prédit: ' traite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traite' → logprob: -0.6747062802314758
    2. '   ' → logprob: -0.7997062802314758
    3. ' n' → logprob: -4.42470645904541
    4. ' calc' → logprob: -4.67470645904541
    5. 'n' → logprob: -5.04970645904541
    6. '    ' → logprob: -6.29970645904541
    7. ' ' → logprob: -6.54970645904541
    8. 'trait' → logprob: -6.92470645904541
    9. ' effect' → logprob: -7.17470645904541
    10. ' process' → logprob: -7.17470645904541

Token 247: ' effect' (ID: 3159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11922390013933182
    2. ' n' → logprob: -3.2442238330841064
    3. ' calc' → logprob: -3.6192238330841064
    4. 'n' → logprob: -4.2442240715026855
    5. ' traite' → logprob: -4.4942240715026855
    6. 's' → logprob: -6.3692240715026855
    7. ' ' → logprob: -6.3692240715026855
    8. ' calculates' → logprob: -6.6192240715026855
    9. ' calcul' → logprob: -6.7442240715026855
    10. 'count' → logprob: -6.8692240715026855

Token 248: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0001329791557509452
    2. 'uer' → logprob: -9.37513256072998
    3. 'uez' → logprob: -10.75013256072998
    4. 'u' → logprob: -11.50013256072998
    5. 'ure' → logprob: -11.75013256072998
    6. 'ute' → logprob: -12.12513256072998
    7. 'ues' → logprob: -13.12513256072998
    8. 'uate' → logprob: -15.00013256072998
    9. 'uera' → logprob: -15.00013256072998
    10. 'uere' → logprob: -15.12513256072998

Token 249: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07335186004638672
    2. ' le' → logprob: -3.1983518600463867
    3. ' la' → logprob: -4.573351860046387
    4. ' ' → logprob: -5.073351860046387
    5. ' des' → logprob: -5.198351860046387
    6. '   ' → logprob: -6.073351860046387
    7. 'les' → logprob: -6.073351860046387
    8. ' l' → logprob: -6.323351860046387
    9. 's' → logprob: -7.823351860046387
    10. 'le' → logprob: -8.448351860046387

Token 250: ' traitement' (ID: 42434)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7647196054458618
    2. ' traitement' → logprob: -0.7647196054458618
    3. ' calcul' → logprob: -3.6397194862365723
    4. ' compt' → logprob: -4.264719486236572
    5. 'com' → logprob: -5.389719486236572
    6. ' compte' → logprob: -5.514719486236572
    7. 'calcul' → logprob: -5.514719486236572
    8. 'comp' → logprob: -5.889719486236572
    9. '   ' → logprob: -6.639719486236572
    10. ' e' → logprob: -6.889719486236572

Token 251: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9271197319030762
    2. ' des' → logprob: -1.3021197319030762
    3. ' de' → logprob: -1.3021197319030762
    4. 'de' → logprob: -3.927119731903076
    5. ' sur' → logprob: -4.427119731903076
    6. 's' → logprob: -5.052119731903076
    7. 'des' → logprob: -5.802119731903076
    8. ' ' → logprob: -5.927119731903076
    9. '.' → logprob: -5.927119731903076
    10. '()' → logprob: -6.052119731903076

Token 252: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.34098732471466064
    2. ' la' → logprob: -1.3409873247146606
    3. 's' → logprob: -4.590987205505371
    4. 'les' → logprob: -4.965987205505371
    5. ' s' → logprob: -5.715987205505371
    6. 'l' → logprob: -6.715987205505371
    7. 'une' → logprob: -6.715987205505371
    8. 'chaine' → logprob: -6.840987205505371
    9. 'le' → logprob: -7.090987205505371
    10. 'S' → logprob: -7.840987205505371

Token 253: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.39646413922309875
    2. 'chaine' → logprob: -1.8964641094207764
    3. ' chaine' → logprob: -2.3964641094207764
    4. 's' → logprob: -3.3964641094207764
    5. ' string' → logprob: -4.7714643478393555
    6. ' ' → logprob: -4.8964643478393555
    7. ' s' → logprob: -5.2714643478393555
    8. 'string' → logprob: -5.3964643478393555
    9. 'ligne' → logprob: -5.3964643478393555
    10. 'str' → logprob: -5.5214643478393555

Token 254: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1712607592344284
    2. 'de' → logprob: -1.9212607145309448
    3. '   ' → logprob: -4.671260833740234
    4. ' s' → logprob: -7.296260833740234
    5. 's' → logprob: -7.921260833740234
    6. '_de' → logprob: -8.546260833740234
    7. 'def' → logprob: -8.671260833740234
    8. ' ' → logprob: -10.171260833740234
    9. ' )' → logprob: -10.421260833740234
    10. '_' → logprob: -10.421260833740234

Token 255: ' couleurs' (ID: 54001)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0006776464288122952
    2. ' caractères' → logprob: -7.500677585601807
    3. 's' → logprob: -9.750678062438965
    4. 'chars' → logprob: -10.625678062438965
    5. '```' → logprob: -11.375678062438965
    6. 'code' → logprob: -12.125678062438965
    7. 'entrée' → logprob: -12.375678062438965
    8. 'chaine' → logprob: -12.625678062438965
    9. 'char' → logprob: -12.875678062438965
    10. ' caracteres' → logprob: -12.875678062438965

Token 256: ' ('' (ID: 9906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02442965656518936
    2. 's' → logprob: -4.524429798126221
    3. '.' → logprob: -5.149429798126221
    4. ',' → logprob: -5.399429798126221
    5. ' ' → logprob: -7.274429798126221
    6. ')' → logprob: -7.649429798126221
    7. ' s' → logprob: -7.649429798126221
    8. ':' → logprob: -8.149429321289062
    9. '):' → logprob: -9.024429321289062
    10. '(s' → logprob: -9.149429321289062

Token 257: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6311989426612854
    2. 'RGB' → logprob: -0.8811989426612854
    3. 's' → logprob: -3.7561988830566406
    4. 'RG' → logprob: -4.256198883056641
    5. 'S' → logprob: -5.381198883056641
    6. ')' → logprob: -6.256198883056641
    7. '')' → logprob: -6.506198883056641
    8. 'rgb' → logprob: -6.506198883056641
    9. 'def' → logprob: -6.756198883056641
    10. 'input' → logprob: -6.881198883056641

Token 258: '',' (ID: 787)
  Prédit: 'GB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GB' → logprob: -0.1998603194952011
    2. 'G' → logprob: -1.8248603343963623
    3. '',' → logprob: -4.324860095977783
    4. '','' → logprob: -6.074860095977783
    5. ''),' → logprob: -7.074860095977783
    6. '')' → logprob: -7.449860095977783
    7. 'B' → logprob: -7.449860095977783
    8. ',' → logprob: -7.699860095977783
    9. ',G' → logprob: -7.824860095977783
    10. 'GBT' → logprob: -7.949860095977783

Token 259: ' '' (ID: 461)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.25349217653274536
    2. '   ' → logprob: -1.7534921169281006
    3. ''' → logprob: -3.5034921169281006
    4. ' G' → logprob: -4.87849235534668
    5. ' '' → logprob: -5.12849235534668
    6. 'def' → logprob: -6.00349235534668
    7. '',' → logprob: -6.50349235534668
    8. ' ' → logprob: -6.75349235534668
    9. '  ' → logprob: -7.87849235534668
    10. ',' → logprob: -7.87849235534668

Token 260: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00011796683247666806
    2. 'B' → logprob: -9.875118255615234
    3. ' G' → logprob: -10.625118255615234
    4. ',' → logprob: -11.250118255615234
    5. ''' → logprob: -11.875118255615234
    6. 'GB' → logprob: -12.250118255615234
    7. ',G' → logprob: -12.500118255615234
    8. '',' → logprob: -12.750118255615234
    9. '')' → logprob: -12.875118255615234
    10. '','' → logprob: -13.125118255615234

Token 261: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004043494816869497
    2. 'B' → logprob: -6.0040435791015625
    3. ',' → logprob: -6.5040435791015625
    4. '','' → logprob: -10.879043579101562
    5. ''' → logprob: -11.004043579101562
    6. '",' → logprob: -11.504043579101562
    7. ',B' → logprob: -11.754043579101562
    8. ')',' → logprob: -12.254043579101562
    9. '')' → logprob: -13.004043579101562
    10. 'b' → logprob: -13.004043579101562

Token 262: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1685144305229187
    2. ''' → logprob: -1.9185144901275635
    3. ' '' → logprob: -5.293514251708984
    4. ' B' → logprob: -5.793514251708984
    5. ' ' → logprob: -9.918514251708984
    6. '   ' → logprob: -10.043514251708984
    7. 'b' → logprob: -11.043514251708984
    8. '#' → logprob: -11.168514251708984
    9. ''b' → logprob: -11.168514251708984
    10. '"B' → logprob: -11.293514251708984

Token 263: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.2246291337069124e-05
    2. ''' → logprob: -11.250021934509277
    3. '')' → logprob: -12.500021934509277
    4. ' B' → logprob: -12.625021934509277
    5. ')' → logprob: -14.875021934509277
    6. '   ' → logprob: -15.000021934509277
    7. 'b' → logprob: -15.250021934509277
    8. '
' → logprob: -15.250021934509277
    9. ''),' → logprob: -15.250021934509277
    10. '',' → logprob: -15.375021934509277

Token 264: '').
' (ID: 105328)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.025760911405086517
    2. ')' → logprob: -4.525761127471924
    3. '').' → logprob: -5.275761127471924
    4. '')
' → logprob: -5.775761127471924
    5. '',' → logprob: -6.025761127471924
    6. ''' → logprob: -6.275761127471924
    7. '")' → logprob: -7.900761127471924
    8. '')")
' → logprob: -8.025760650634766
    9. ''),' → logprob: -8.150760650634766
    10. 's' → logprob: -8.525760650634766

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041290996596217155
    2. '"""' → logprob: -5.629128932952881
    3. ')' → logprob: -8.129129409790039
    4. '    
' → logprob: -9.129129409790039
    5. '"""
' → logprob: -10.504129409790039
    6. '```' → logprob: -10.754129409790039
    7. '""' → logprob: -11.254129409790039
    8. '")' → logprob: -11.254129409790039
    9. '"' → logprob: -11.379129409790039
    10. 'def' → logprob: -11.629129409790039

Token 266: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01595482975244522
    2. '"""' → logprob: -4.265954971313477
    3. ')' → logprob: -6.890954971313477
    4. '"""
' → logprob: -7.890954971313477
    5. '```' → logprob: -9.265954971313477
    6. ' """' → logprob: -9.390954971313477
    7. '""' → logprob: -9.765954971313477
    8. '    
' → logprob: -10.265954971313477
    9. ' """
' → logprob: -10.640954971313477
    10. 'def' → logprob: -10.890954971313477

Token 267: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.3043956458568573
    2. 'cule' → logprob: -1.4293956756591797
    3. 'c' → logprob: -3.8043956756591797
    4. 'culate' → logprob: -8.55439567565918
    5. 'cules' → logprob: -8.67939567565918
    6. 'cula' → logprob: -9.55439567565918
    7. '```' → logprob: -9.92939567565918
    8. '#' → logprob: -10.42939567565918
    9. '   ' → logprob: -10.55439567565918
    10. 'ul' → logprob: -11.05439567565918

Token 268: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.32099679112434387
    2. ' le' → logprob: -2.3209967613220215
    3. 's' → logprob: -2.6959967613220215
    4. ' les' → logprob: -3.1959967613220215
    5. '()' → logprob: -4.9459967613220215
    6. '(' → logprob: -4.9459967613220215
    7. ' ' → logprob: -5.0709967613220215
    8. '(n' → logprob: -5.1959967613220215
    9. ':' → logprob: -5.4459967613220215
    10. '   ' → logprob: -5.5709967613220215

Token 269: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7157807350158691
    2. 'nombre' → logprob: -0.8407807350158691
    3. 'result' → logprob: -3.840780735015869
    4. 'res' → logprob: -4.340780735015869
    5. 'fact' → logprob: -4.340780735015869
    6. ' résultat' → logprob: -4.715780735015869
    7. 'factor' → logprob: -5.340780735015869
    8. 'nb' → logprob: -5.965780735015869
    9. ' result' → logprob: -6.090780735015869
    10. 'rés' → logprob: -6.215780735015869

Token 270: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2696937322616577
    2. '_total' → logprob: -1.2696937322616577
    3. '_de' → logprob: -2.1446938514709473
    4. 'de' → logprob: -2.2696938514709473
    5. '_' → logprob: -2.6446938514709473
    6. ' total' → logprob: -3.3946938514709473
    7. 'total' → logprob: -3.6446938514709473
    8. '_mod' → logprob: -4.144693851470947
    9. '_possible' → logprob: -4.269693851470947
    10. 'mod' → logprob: -4.394693851470947

Token 271: ' permutations' (ID: 174595)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.0887187197804451
    2. ' man' → logprob: -3.4637186527252197
    3. ' ways' → logprob: -3.5887186527252197
    4. 'man' → logprob: -4.588718891143799
    5. 'ways' → logprob: -5.213718891143799
    6. 'fa' → logprob: -5.713718891143799
    7. 's' → logprob: -6.213718891143799
    8. ' comb' → logprob: -6.838718891143799
    9. '_' → logprob: -7.088718891143799
    10. ' fa' → logprob: -7.838718891143799

Token 272: ' ou' (ID: 2031)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.8699715733528137
    2. ' possible' → logprob: -1.119971513748169
    3. ' valid' → logprob: -2.869971513748169
    4. ' val' → logprob: -3.494971513748169
    5. ' distinct' → logprob: -3.494971513748169
    6. 'possible' → logprob: -3.744971513748169
    7. ' unique' → logprob: -4.369971752166748
    8. '_possible' → logprob: -4.369971752166748
    9. ' uniques' → logprob: -4.369971752166748
    10. 'distinct' → logprob: -4.619971752166748

Token 273: ' arrangements' (ID: 34602)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.7993311285972595
    2. 'com' → logprob: -1.1743311882019043
    3. 'comb' → logprob: -1.7993311882019043
    4. 'arr' → logprob: -4.049331188201904
    5. ' de' → logprob: -4.299331188201904
    6. ' combinations' → logprob: -4.549331188201904
    7. 'de' → logprob: -4.674331188201904
    8. ' arrangements' → logprob: -4.924331188201904
    9. 'd' → logprob: -5.549331188201904
    10. '#' → logprob: -6.174331188201904

Token 274: ' distinct' (ID: 16913)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.103727787733078
    2. ' possible' → logprob: -2.4787278175354004
    3. ' val' → logprob: -5.1037278175354
    4. ' valid' → logprob: -5.8537278175354
    5. ' des' → logprob: -6.7287278175354
    6. '_possible' → logprob: -7.3537278175354
    7. ' de' → logprob: -7.7287278175354
    8. ' ' → logprob: -7.8537278175354
    9. 'possible' → logprob: -7.9787278175354
    10. ' poss' → logprob: -7.9787278175354

Token 275: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06664799153804779
    2. ' possibles' → logprob: -3.191648006439209
    3. 'es' → logprob: -4.316648006439209
    4. 'ions' → logprob: -5.566648006439209
    5. ' possible' → logprob: -5.691648006439209
    6. ' de' → logprob: -6.191648006439209
    7. 'de' → logprob: -8.81664752960205
    8. 'és' → logprob: -8.81664752960205
    9. 'e' → logprob: -9.94164752960205
    10. '   ' → logprob: -9.94164752960205

Token 276: ' selon' (ID: 27571)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.07868573814630508
    2. ' possible' → logprob: -2.703685760498047
    3. ' de' → logprob: -5.953685760498047
    4. 'possible' → logprob: -6.578685760498047
    5. ' en' → logprob: -6.703685760498047
    6. '   ' → logprob: -7.203685760498047
    7. ' des' → logprob: -7.578685760498047
    8. ' ' → logprob: -8.328685760498047
    9. 's' → logprob: -8.328685760498047
    10. 'poss' → logprob: -8.578685760498047

Token 277: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7484095096588135
    2. ' la' → logprob: -0.9984095096588135
    3. 'les' → logprob: -2.8734095096588135
    4. ' certaines' → logprob: -2.8734095096588135
    5. 'la' → logprob: -3.9984095096588135
    6. ' le' → logprob: -5.623409271240234
    7. 'certain' → logprob: -5.623409271240234
    8. ' des' → logprob: -5.748409271240234
    9. '   ' → logprob: -5.873409271240234
    10. ' certain' → logprob: -5.873409271240234

Token 278: ' règles' (ID: 67042)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.06543264538049698
    2. ' critères' → logprob: -2.940432548522949
    3. 'contra' → logprob: -5.940432548522949
    4. ' conditions' → logprob: -6.190432548522949
    5. 'conditions' → logprob: -6.565432548522949
    6. 'constraints' → logprob: -6.690432548522949
    7. 'contr' → logprob: -7.315432548522949
    8. ' constraints' → logprob: -7.690432548522949
    9. ' règles' → logprob: -7.815432548522949
    10. '#' → logprob: -8.06543254852295

Token 279: ' spécifiques' (ID: 110075)
  Prédit: ' préc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' préc' → logprob: -0.4700078070163727
    2. ' spécifiques' → logprob: -1.3450077772140503
    3. ' de' → logprob: -3.59500789642334
    4. ' données' → logprob: -3.72000789642334
    5. '   ' → logprob: -3.84500789642334
    6. ' particuli' → logprob: -4.47000789642334
    7. 'd' → logprob: -5.09500789642334
    8. ' spéc' → logprob: -5.59500789642334
    9. 'de' → logprob: -5.59500789642334
    10. ' strict' → logprob: -5.84500789642334

Token 280: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1409020870923996
    2. '.' → logprob: -2.515902042388916
    3. ',' → logprob: -3.765902042388916
    4. ')' → logprob: -4.390902042388916
    5. '):' → logprob: -4.765902042388916
    6. 'def' → logprob: -6.640902042388916
    7. ' ' → logprob: -7.140902042388916
    8. ').' → logprob: -7.140902042388916
    9. ':' → logprob: -7.140902042388916
    10. '):
' → logprob: -7.640902042388916

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010534112341701984
    2. ' et' → logprob: -5.510534286499023
    3. ' en' → logprob: -6.010534286499023
    4. ' puis' → logprob: -6.885534286499023
    5. '    ' → logprob: -7.635534286499023
    6. '#' → logprob: -7.635534286499023
    7. 'et' → logprob: -7.760534286499023
    8. ')' → logprob: -8.260534286499023
    9. 'def' → logprob: -8.385534286499023
    10. ' avec' → logprob: -8.885534286499023

Token 282: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027070315554738045
    2. ' puis' → logprob: -4.40207052230835
    3. ' et' → logprob: -4.90207052230835
    4. 'et' → logprob: -5.65207052230835
    5. ' en' → logprob: -6.90207052230835
    6. '#' → logprob: -7.15207052230835
    7. '    ' → logprob: -7.52707052230835
    8. 'p' → logprob: -8.152070045471191
    9. 'ens' → logprob: -9.402070045471191
    10. ' avec' → logprob: -9.527070045471191

Token 283: ' gestion' (ID: 29607)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0898159742355347
    2. ' des' → logprob: -1.8398159742355347
    3. ' la' → logprob: -2.089816093444824
    4. 'mod' → logprob: -2.714816093444824
    5. ' mod' → logprob: -2.839816093444824
    6. ' une' → logprob: -2.964816093444824
    7. ' le' → logprob: -3.464816093444824
    8. '#' → logprob: -3.589816093444824
    9. ' les' → logprob: -3.589816093444824
    10. ' retour' → logprob: -3.839816093444824

Token 284: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4453197121620178
    2. ' de' → logprob: -1.070319652557373
    3. ' du' → logprob: -4.945319652557373
    4. '   ' → logprob: -5.320319652557373
    5. 'de' → logprob: -6.070319652557373
    6. 'des' → logprob: -7.570319652557373
    7. 'mod' → logprob: -8.070320129394531
    8. ' modulo' → logprob: -8.070320129394531
    9. ' ' → logprob: -8.195320129394531
    10. '_' → logprob: -8.570320129394531

Token 285: ' comb' (ID: 4134)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2682825326919556
    2. 'mod' → logprob: -1.5182825326919556
    3. 'la' → logprob: -2.268282413482666
    4. 'l' → logprob: -2.393282413482666
    5. 'les' → logprob: -2.643282413482666
    6. ' l' → logprob: -2.768282413482666
    7. ' modulo' → logprob: -3.018282413482666
    8. ' les' → logprob: -3.518282413482666
    9. ' le' → logprob: -3.893282413482666
    10. 'le' → logprob: -4.643282413482666

Token 286: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.06505192071199417
    2. 'ina' → logprob: -3.065052032470703
    3. 'in' → logprob: -4.565052032470703
    4. 'inations' → logprob: -6.690052032470703
    5. 'inas' → logprob: -6.690052032470703
    6. 'os' → logprob: -6.815052032470703
    7. '```' → logprob: -6.940052032470703
    8. 'is' → logprob: -8.065052032470703
    9. 's' → logprob: -8.815052032470703
    10. 'inator' → logprob: -8.940052032470703

Token 287: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -1.2487359046936035
    2. 'ais' → logprob: -1.3737359046936035
    3. 'sons' → logprob: -2.3737359046936035
    4. 'n' → logprob: -2.4987359046936035
    5. '```' → logprob: -2.4987359046936035
    6. 'son' → logprob: -2.6237359046936035
    7. 's' → logprob: -3.4987359046936035
    8. 'atoires' → logprob: -3.6237359046936035
    9. 'a' → logprob: -3.9987359046936035
    10. 'os' → logprob: -4.8737359046936035

Token 288: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8348342776298523
    2. ',' → logprob: -1.584834337234497
    3. '(' → logprob: -2.584834337234497
    4. ')' → logprob: -3.334834337234497
    5. 'import' → logprob: -3.334834337234497
    6. 's' → logprob: -3.459834337234497
    7. 'def' → logprob: -3.584834337234497
    8. 'n' → logprob: -3.584834337234497
    9. '   ' → logprob: -3.709834337234497
    10. '(
' → logprob: -3.709834337234497

Token 289: ' de' (ID: 334)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.6917358040809631
    2. 'fact' → logprob: -1.5667357444763184
    3. ' de' → logprob: -2.0667357444763184
    4. 'de' → logprob: -2.9417357444763184
    5. ' factorial' → logprob: -3.4417357444763184
    6. ' fact' → logprob: -3.5667357444763184
    7. ' des' → logprob: -4.566735744476318
    8. ' permutations' → logprob: -4.566735744476318
    9. ' factor' → logprob: -4.691735744476318
    10. ' facteurs' → logprob: -5.691735744476318

Token 290: ' modular' (ID: 61198)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.45318952202796936
    2. 'factor' → logprob: -2.0781896114349365
    3. ' factorial' → logprob: -2.5781896114349365
    4. 'fact' → logprob: -3.0781896114349365
    5. 'mod' → logprob: -3.8281896114349365
    6. 'dp' → logprob: -4.203189373016357
    7. 'per' → logprob: -4.453189373016357
    8. ' perm' → logprob: -4.703189373016357
    9. 'multip' → logprob: -4.828189373016357
    10. ' fact' → logprob: -4.828189373016357

Token 291: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.8733879327774048
    2. 'ar' → logprob: -1.4983879327774048
    3. 'aires' → logprob: -1.6233879327774048
    4. 'e' → logprob: -3.2483878135681152
    5. 'arith' → logprob: -3.2483878135681152
    6. 'aire' → logprob: -3.4983878135681152
    7. 'ités' → logprob: -3.6233878135681152
    8. '_' → logprob: -5.248387813568115
    9. 'es' → logprob: -5.248387813568115
    10. 'air' → logprob: -5.748387813568115

Token 292: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9300235509872437
    2. ')' → logprob: -1.1800235509872437
    3. '):
' → logprob: -1.9300235509872437
    4. '.' → logprob: -2.805023670196533
    5. '   ' → logprob: -3.180023670196533
    6. ').' → logprob: -3.430023670196533
    7. 'def' → logprob: -4.930023670196533
    8. ',' → logprob: -5.680023670196533
    9. '.
' → logprob: -6.680023670196533
    10. '")' → logprob: -6.805023670196533

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001993943238630891
    2. '"""' → logprob: -6.8769941329956055
    3. ')' → logprob: -7.2519941329956055
    4. 'def' → logprob: -9.501994132995605
    5. '    
' → logprob: -10.376994132995605
    6. ':' → logprob: -10.501994132995605
    7. '```' → logprob: -10.626994132995605
    8. '"' → logprob: -10.751994132995605
    9. '  ' → logprob: -11.376994132995605
    10. '):' → logprob: -11.626994132995605

Token 294: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04236100986599922
    2. '"""' → logprob: -3.29236102104187
    3. ')' → logprob: -6.167360782623291
    4. '```' → logprob: -7.167360782623291
    5. '"""
' → logprob: -7.667360782623291
    6. 'def' → logprob: -8.54236125946045
    7. '    
' → logprob: -8.79236125946045
    8. '""' → logprob: -8.91736125946045
    9. '
' → logprob: -9.54236125946045
    10. '):' → logprob: -9.54236125946045

Token 295: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.005514772608876228
    2. 'icher' → logprob: -5.505514621734619
    3. 'ichage' → logprob: -6.630514621734619
    4. 'ich' → logprob: -9.755515098571777
    5. 'ine' → logprob: -10.630515098571777
    6. 'iner' → logprob: -11.255515098571777
    7. 'ic' → logprob: -11.880515098571777
    8. 'iché' → logprob: -12.630515098571777
    9. 'ichier' → logprob: -13.130515098571777
    10. 'inez' → logprob: -13.755515098571777

Token 296: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3210647702217102
    2. '(' → logprob: -1.5710647106170654
    3. ' le' → logprob: -3.5710647106170654
    4. '(result' → logprob: -4.4460649490356445
    5. '(len' → logprob: -4.9460649490356445
    6. ' la' → logprob: -5.0710649490356445
    7. 'result' → logprob: -5.6960649490356445
    8. '("")' → logprob: -6.0710649490356445
    9. 's' → logprob: -6.3210649490356445
    10. 'le' → logprob: -7.3210649490356445

Token 297: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.23518401384353638
    2. 'rés' → logprob: -2.1101839542388916
    3. 'result' → logprob: -2.8601839542388916
    4. ' result' → logprob: -4.235184192657471
    5. ' resultat' → logprob: -4.360184192657471
    6. 'r' → logprob: -6.360184192657471
    7. 's' → logprob: -7.735184192657471
    8. 'res' → logprob: -7.860184192657471
    9. 'nombre' → logprob: -8.485183715820312
    10. ' nombre' → logprob: -8.610183715820312

Token 298: ' final' (ID: 1721)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10996636003255844
    2. '.' → logprob: -2.734966278076172
    3. '   ' → logprob: -3.984966278076172
    4. ':' → logprob: -4.859966278076172
    5. '()
' → logprob: -5.609966278076172
    6. '():' → logprob: -5.734966278076172
    7. '(' → logprob: -5.859966278076172
    8. '().' → logprob: -7.109966278076172
    9. ')' → logprob: -7.484966278076172
    10. ',' → logprob: -7.859966278076172

Token 299: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004282822832465172
    2. '():' → logprob: -6.3792829513549805
    3. '   ' → logprob: -6.5042829513549805
    4. '.' → logprob: -8.12928295135498
    5. '()
' → logprob: -8.12928295135498
    6. ')' → logprob: -8.50428295135498
    7. ':' → logprob: -8.62928295135498
    8. '().' → logprob: -9.50428295135498
    9. 'def' → logprob: -11.50428295135498
    10. '(' → logprob: -12.37928295135498

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003211342031136155
    2. '"""' → logprob: -5.878211498260498
    3. '"""
' → logprob: -9.37821102142334
    4. '    
' → logprob: -9.62821102142334
    5. '```' → logprob: -9.62821102142334
    6. ')' → logprob: -9.75321102142334
    7. 'input' → logprob: -10.50321102142334
    8. 'def' → logprob: -10.75321102142334
    9. ' """' → logprob: -10.75321102142334
    10. '    ' → logprob: -11.25321102142334

Token 301: ' Entr' (ID: 50650)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.577885627746582
    2. '   ' → logprob: -1.202885627746582
    3. 's' → logprob: -2.077885627746582
    4. 'N' → logprob: -4.952885627746582
    5. ' n' → logprob: -6.202885627746582
    6. 'S' → logprob: -6.202885627746582
    7. ')' → logprob: -7.077885627746582
    8. ' s' → logprob: -7.452885627746582
    9. '#' → logprob: -8.202885627746582
    10. ' ' → logprob: -9.077885627746582

Token 302: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.08469533920288086
    2. 'rée' → logprob: -2.709695339202881
    3. 'ées' → logprob: -4.459695339202881
    4. 'r' → logprob: -5.959695339202881
    5. 'ière' → logprob: -8.584695816040039
    6. '```' → logprob: -9.209695816040039
    7. 'ré' → logprob: -10.209695816040039
    8. 'é' → logprob: -10.334695816040039
    9. 'ree' → logprob: -10.459695816040039
    10. '#' → logprob: -10.709695816040039

Token 303: ' attend' (ID: 13384)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11568206548690796
    2. '=' → logprob: -2.8656821250915527
    3. ':' → logprob: -3.4906821250915527
    4. '   ' → logprob: -4.615682125091553
    5. '()' → logprob: -5.740682125091553
    6. '():' → logprob: -6.115682125091553
    7. 's' → logprob: -6.490682125091553
    8. 'n' → logprob: -7.115682125091553
    9. ':
' → logprob: -7.115682125091553
    10. '():
' → logprob: -7.365682125091553

Token 304: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0193023718893528
    2. 'e' → logprob: -4.1443023681640625
    3. 'u' → logprob: -5.7693023681640625
    4. 's' → logprob: -10.144302368164062
    5. '"""' → logprob: -10.144302368164062
    6. '"""
' → logprob: -10.644302368164062
    7. 'es' → logprob: -11.019302368164062
    8. 'ues' → logprob: -11.644302368164062
    9. ':' → logprob: -12.769302368164062
    10. 'us' → logprob: -12.769302368164062

Token 305: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45279425382614136
    2. ':' → logprob: -1.0777943134307861
    3. ' :' → logprob: -5.077794075012207
    4. ':
' → logprob: -5.202794075012207
    5. '():' → logprob: -5.327794075012207
    6. ' =' → logprob: -5.577794075012207
    7. '()' → logprob: -6.952794075012207
    8. 's' → logprob: -7.702794075012207
    9. '(n' → logprob: -7.702794075012207
    10. 'n' → logprob: -7.827794075012207

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05602991580963135
    2. ' n' → logprob: -3.556029796600342
    3. 'n' → logprob: -4.181029796600342
    4. '"""' → logprob: -5.431029796600342
    5. '"""
' → logprob: -6.556029796600342
    6. '(n' → logprob: -6.806029796600342
    7. '    ' → logprob: -7.056029796600342
    8. ' """' → logprob: -7.431029796600342
    9. ' ' → logprob: -7.806029796600342
    10. '```' → logprob: -8.0560302734375

Token 307: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5981389284133911
    2. ' n' → logprob: -0.9731389284133911
    3. '   ' → logprob: -2.7231388092041016
    4. '"""
' → logprob: -5.973138809204102
    5. 's' → logprob: -6.348138809204102
    6. '"""' → logprob: -7.098138809204102
    7. ' s' → logprob: -8.223138809204102
    8. ' ' → logprob: -8.348138809204102
    9. ' N' → logprob: -8.973138809204102
    10. 'N' → logprob: -8.973138809204102

Token 308: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.547906219959259
    2. ' n' → logprob: -0.922906219959259
    3. 's' → logprob: -4.422906398773193
    4. ' s' → logprob: -4.797906398773193
    5. 'N' → logprob: -6.297906398773193
    6. ' N' → logprob: -6.922906398773193
    7. '   ' → logprob: -7.672906398773193
    8. 'S' → logprob: -8.922905921936035
    9. ' S' → logprob: -9.047905921936035
    10. ' ' → logprob: -9.297905921936035

Token 309: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034166332334280014
    2. '=' → logprob: -3.4091663360595703
    3. ')' → logprob: -8.53416633605957
    4. '=int' → logprob: -8.65916633605957
    5. ',' → logprob: -9.40916633605957
    6. '=input' → logprob: -10.65916633605957
    7. ' =
' → logprob: -12.03416633605957
    8. ' ' → logprob: -12.03416633605957
    9. '   ' → logprob: -12.28416633605957
    10. 'n' → logprob: -12.28416633605957

Token 310: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03938671946525574
    2. 'int' → logprob: -4.039386749267578
    3. '):' → logprob: -4.539386749267578
    4. ':int' → logprob: -5.539386749267578
    5. ':' → logprob: -5.914386749267578
    6. ' )' → logprob: -6.664386749267578
    7. '=int' → logprob: -6.789386749267578
    8. ' int' → logprob: -7.164386749267578
    9. '),' → logprob: -8.664386749267578
    10. ',' → logprob: -9.039386749267578

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023072657641023397
    2. ')
' → logprob: -6.377307415008545
    3. '):' → logprob: -8.002306938171387
    4. ')
' → logprob: -9.627306938171387
    5. '),' → logprob: -10.127306938171387
    6. ' =' → logprob: -10.252306938171387
    7. '=' → logprob: -10.377306938171387
    8. '=int' → logprob: -10.752306938171387
    9. ' )' → logprob: -10.877306938171387
    10. ')

' → logprob: -10.877306938171387

Token 312: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2832573354244232
    2. '   ' → logprob: -1.7832573652267456
    3. '=' → logprob: -2.658257246017456
    4. '
' → logprob: -5.783257484436035
    5. '=int' → logprob: -6.158257484436035
    6. ')' → logprob: -6.658257484436035
    7. 'n' → logprob: -7.283257484436035
    8. ',' → logprob: -8.408257484436035
    9. '=n' → logprob: -8.783257484436035
    10. '    
' → logprob: -8.908257484436035

Token 313: ' longueur' (ID: 104613)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2217075824737549
    2. ' le' → logprob: -1.3467075824737549
    3. ' la' → logprob: -1.7217075824737549
    4. ' nombre' → logprob: -1.9717075824737549
    5. 'n' → logprob: -3.346707582473755
    6. ' int' → logprob: -3.596707582473755
    7. 'int' → logprob: -3.971707582473755
    8. '   ' → logprob: -4.221707344055176
    9. 'nombre' → logprob: -4.346707344055176
    10. ' number' → logprob: -5.096707344055176

Token 314: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1292586624622345
    2. ' de' → logprob: -3.254258632659912
    3. ' =' → logprob: -3.254258632659912
    4. '=' → logprob: -3.879258632659912
    5. ',' → logprob: -4.754258632659912
    6. 'de' → logprob: -5.629258632659912
    7. ')' → logprob: -5.879258632659912
    8. ' n' → logprob: -6.129258632659912
    9. 'n' → logprob: -6.379258632659912
    10. '(n' → logprob: -6.754258632659912

Token 315: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.19221411645412445
    2. ' la' → logprob: -2.567214012145996
    3. 'chaine' → logprob: -2.692214012145996
    4. 'l' → logprob: -3.817214012145996
    5. 'input' → logprob: -5.192214012145996
    6. 's' → logprob: -6.942214012145996
    7. 'ipt' → logprob: -7.442214012145996
    8. ' input' → logprob: -8.067214012145996
    9. 'ip' → logprob: -8.692214012145996
    10. ' chaine' → logprob: -9.067214012145996

Token 316: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2827325761318207
    2. ' chaîne' → logprob: -1.907732605934143
    3. 'string' → logprob: -2.7827324867248535
    4. 'cha' → logprob: -3.7827324867248535
    5. ' chaine' → logprob: -5.2827324867248535
    6. 's' → logprob: -5.9077324867248535
    7. ' string' → logprob: -6.2827324867248535
    8. 'input' → logprob: -6.7827324867248535
    9. 'str' → logprob: -7.1577324867248535
    10. ' ' → logprob: -7.7827324867248535

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006637097802013159
    2. '
' → logprob: -5.381637096405029
    3. '\n' → logprob: -7.131637096405029
    4. 'n' → logprob: -7.631637096405029
    5. ')' → logprob: -8.256637573242188
    6. '    
' → logprob: -8.881637573242188
    7. ',' → logprob: -9.131637573242188
    8. ')
' → logprob: -9.756637573242188
    9. 's' → logprob: -10.631637573242188
    10. '\' → logprob: -10.756637573242188

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001872094871941954
    2. '
' → logprob: -9.250186920166016
    3. '\n' → logprob: -10.500186920166016
    4. ')' → logprob: -10.875186920166016
    5. '    
' → logprob: -11.500186920166016
    6. 'def' → logprob: -11.625186920166016
    7. 'n' → logprob: -11.875186920166016
    8. '#' → logprob: -12.250186920166016
    9. ',' → logprob: -12.625186920166016
    10. '  ' → logprob: -13.125186920166016

Token 319: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023298001906368881
    2. '#' → logprob: -9.375232696533203
    3. 'def' → logprob: -9.625232696533203
    4. 'n' → logprob: -10.500232696533203
    5. ',' → logprob: -11.750232696533203
    6. '  ' → logprob: -11.750232696533203
    7. '    ' → logprob: -11.875232696533203
    8. ' #' → logprob: -12.000232696533203
    9. 's' → logprob: -12.250232696533203
    10. ')' → logprob: -12.250232696533203

Token 320: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21590913832187653
    2. ' s' → logprob: -1.9659091234207153
    3. 'S' → logprob: -3.090909242630005
    4. ' S' → logprob: -5.090909004211426
    5. '   ' → logprob: -6.965909004211426
    6. 'c' → logprob: -7.090909004211426
    7. ' c' → logprob: -8.715909004211426
    8. ' ' → logprob: -9.090909004211426
    9. '```' → logprob: -9.340909004211426
    10. 't' → logprob: -9.840909004211426

Token 321: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026343148201704025
    2. '=' → logprob: -3.6513431072235107
    3. ')' → logprob: -11.15134334564209
    4. '=input' → logprob: -11.40134334564209
    5. '   ' → logprob: -11.90134334564209
    6. ' ' → logprob: -12.27634334564209
    7. 's' → logprob: -13.15134334564209
    8. ':' → logprob: -13.52634334564209
    9. ' ' → logprob: -14.27634334564209
    10. '=int' → logprob: -14.77634334564209

Token 322: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04701715335249901
    2. ')' → logprob: -3.2970170974731445
    3. 'input' → logprob: -5.6720170974731445
    4. ' =' → logprob: -6.4220170974731445
    5. '=str' → logprob: -6.6720170974731445
    6. ' str' → logprob: -6.9220170974731445
    7. '=input' → logprob: -8.047017097473145
    8. ':str' → logprob: -8.172017097473145
    9. 'ipt' → logprob: -8.422017097473145
    10. '=' → logprob: -8.547017097473145

Token 323: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024931374937295914
    2. '):' → logprob: -6.627492904663086
    3. '   ' → logprob: -6.877492904663086
    4. '")' → logprob: -9.877492904663086
    5. '):
' → logprob: -10.252492904663086
    6. ')
' → logprob: -11.002492904663086
    7. ' =' → logprob: -11.377492904663086
    8. ')=' → logprob: -12.502492904663086
    9. ' )' → logprob: -12.502492904663086
    10. '):
' → logprob: -12.752492904663086

Token 324: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28647464513778687
    2. ' =' → logprob: -1.4114747047424316
    3. '=' → logprob: -5.411474704742432
    4. ')' → logprob: -7.786474704742432
    5. '
' → logprob: -9.036474227905273
    6. '):' → logprob: -9.286474227905273
    7. ':' → logprob: -9.911474227905273
    8. '    
' → logprob: -10.286474227905273
    9. '    ' → logprob: -10.536474227905273
    10. '  ' → logprob: -10.661474227905273

Token 325: ' chaîne' (ID: 89288)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3710908591747284
    2. 'input' → logprob: -1.2460908889770508
    3. 's' → logprob: -5.621090888977051
    4. '   ' → logprob: -5.621090888977051
    5. ' la' → logprob: -5.621090888977051
    6. ' s' → logprob: -6.121090888977051
    7. ' ip' → logprob: -6.121090888977051
    8. 'ip' → logprob: -7.121090888977051
    9. 'ipt' → logprob: -7.246090888977051
    10. ' ' → logprob: -7.371090888977051

Token 326: ' composée' (ID: 146865)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06575830280780792
    2. ' de' → logprob: -2.940758228302002
    3. ' =' → logprob: -5.440758228302002
    4. 'de' → logprob: -6.565758228302002
    5. '    ' → logprob: -6.940758228302002
    6. ')' → logprob: -7.190758228302002
    7. '
' → logprob: -7.565758228302002
    8. ' )' → logprob: -7.565758228302002
    9. '\n' → logprob: -8.31575870513916
    10. '  ' → logprob: -8.31575870513916

Token 327: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11578325927257538
    2. ' de' → logprob: -2.365783214569092
    3. 'de' → logprob: -5.365783214569092
    4. '   ' → logprob: -5.490783214569092
    5. ' d' → logprob: -5.740783214569092
    6. 'des' → logprob: -6.240783214569092
    7. ' of' → logprob: -7.490783214569092
    8. ' uniquement' → logprob: -7.615783214569092
    9. '    ' → logprob: -8.61578369140625
    10. 'd' → logprob: -9.36578369140625

Token 328: ' lettres' (ID: 101234)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27253612875938416
    2. 'R' → logprob: -1.6475361585617065
    3. ' '' → logprob: -4.272536277770996
    4. ' R' → logprob: -4.522536277770996
    5. 'RGB' → logprob: -5.272536277770996
    6. 'chars' → logprob: -5.772536277770996
    7. 'RG' → logprob: -6.397536277770996
    8. ' caractères' → logprob: -6.647536277770996
    9. 'characters' → logprob: -6.772536277770996
    10. ' ' → logprob: -6.897536277770996

Token 329: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4416731894016266
    2. ' '' → logprob: -1.0666731595993042
    3. ' R' → logprob: -5.316673278808594
    4. '"' → logprob: -5.566673278808594
    5. 'R' → logprob: -6.191673278808594
    6. ' "' → logprob: -7.691673278808594
    7. ' RGB' → logprob: -7.941673278808594
    8. 'RGB' → logprob: -8.191673278808594
    9. '('' → logprob: -8.566673278808594
    10. ' ' → logprob: -8.941673278808594

Token 330: 'R' (ID: 49)
  Prédit: 'RGB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RGB' → logprob: -0.06203277409076691
    2. 'R' → logprob: -2.812032699584961
    3. 'RG' → logprob: -10.437032699584961
    4. 'rgb' → logprob: -11.187032699584961
    5. 'Rgb' → logprob: -11.562032699584961
    6. ''' → logprob: -12.437032699584961
    7. 'RGBA' → logprob: -12.687032699584961
    8. ' RGB' → logprob: -12.687032699584961
    9. 'RB' → logprob: -14.437032699584961
    10. '"' → logprob: -14.937032699584961

Token 331: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.01252296008169651
    2. 'G' → logprob: -5.137523174285889
    3. 'GB' → logprob: -5.262523174285889
    4. '','' → logprob: -6.762523174285889
    5. ''' → logprob: -9.38752269744873
    6. '",' → logprob: -9.63752269744873
    7. 'B' → logprob: -10.63752269744873
    8. ',' → logprob: -10.63752269744873
    9. 'BG' → logprob: -11.63752269744873
    10. ',G' → logprob: -11.63752269744873

Token 332: ' '' (ID: 461)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.5166773200035095
    2. ''' → logprob: -1.1416773796081543
    3. ' G' → logprob: -2.7666773796081543
    4. ' '' → logprob: -3.8916773796081543
    5. ' ' → logprob: -8.016676902770996
    6. '',' → logprob: -8.516676902770996
    7. ',' → logprob: -8.641676902770996
    8. '"G' → logprob: -9.641676902770996
    9. '   ' → logprob: -10.141676902770996
    10. ',G' → logprob: -10.266676902770996

Token 333: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -6.182190554682165e-05
    2. ''' → logprob: -11.000061988830566
    3. ' G' → logprob: -11.000061988830566
    4. '',' → logprob: -12.000061988830566
    5. ',' → logprob: -12.125061988830566
    6. 'GB' → logprob: -12.250061988830566
    7. '','' → logprob: -12.250061988830566
    8. 'B' → logprob: -12.750061988830566
    9. ',G' → logprob: -13.000061988830566
    10. '
' → logprob: -14.375061988830566

Token 334: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.026544926688075066
    2. 'B' → logprob: -3.6515448093414307
    3. ''' → logprob: -8.651544570922852
    4. ',' → logprob: -10.276544570922852
    5. '",' → logprob: -10.776544570922852
    6. '','' → logprob: -12.276544570922852
    7. 'b' → logprob: -12.901544570922852
    8. ' B' → logprob: -13.026544570922852
    9. ' ',' → logprob: -13.651544570922852
    10. '',
' → logprob: -14.276544570922852

Token 335: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3399263620376587
    2. ' '' → logprob: -1.8399263620376587
    3. 'B' → logprob: -2.214926242828369
    4. ' B' → logprob: -3.964926242828369
    5. '',' → logprob: -7.464926242828369
    6. ' ' → logprob: -7.964926242828369
    7. ',' → logprob: -9.339926719665527
    8. ' et' → logprob: -9.464926719665527
    9. ''b' → logprob: -10.714926719665527
    10. '"B' → logprob: -10.839926719665527

Token 336: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.027225754223764e-05
    2. ''' → logprob: -10.125060081481934
    3. ' B' → logprob: -11.250060081481934
    4. '',' → logprob: -12.375060081481934
    5. ',' → logprob: -13.625060081481934
    6. '')' → logprob: -15.125060081481934
    7. '   ' → logprob: -15.375060081481934
    8. '','' → logprob: -15.750060081481934
    9. ' ' → logprob: -15.875060081481934
    10. '
' → logprob: -16.00006103515625

Token 337: ''

' (ID: 7497)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.019064156338572502
    2. '')
' → logprob: -5.019063949584961
    3. '')"' → logprob: -5.519063949584961
    4. ''' → logprob: -5.769063949584961
    5. '")' → logprob: -6.269063949584961
    6. ')'
' → logprob: -6.644063949584961
    7. ')'' → logprob: -7.144063949584961
    8. ')' → logprob: -7.269063949584961
    9. '')
' → logprob: -8.519063949584961
    10. ''
' → logprob: -9.394063949584961

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061561851762235165
    2. ')' → logprob: -5.256155967712402
    3. '"""' → logprob: -7.381155967712402
    4. '
' → logprob: -9.381155967712402
    5. '"""
' → logprob: -9.631155967712402
    6. ')
' → logprob: -9.881155967712402
    7. '""' → logprob: -10.631155967712402
    8. '):' → logprob: -11.006155967712402
    9. '```' → logprob: -11.131155967712402
    10. '")' → logprob: -11.506155967712402

Token 339: ' Aucun' (ID: 199365)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47969579696655273
    2. 'n' → logprob: -0.9796957969665527
    3. ' n' → logprob: -5.229695796966553
    4. '	n' → logprob: -8.854696273803711
    5. '    
' → logprob: -9.979696273803711
    6. '```' → logprob: -10.479696273803711
    7. ')' → logprob: -12.104696273803711
    8. ')n' → logprob: -12.354696273803711
    9. '\n' → logprob: -12.604696273803711
    10. ' ' → logprob: -12.604696273803711

Token 340: ' retour' (ID: 30714)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6723548173904419
    2. 'def' → logprob: -1.297354817390442
    3. '():' → logprob: -3.0473546981811523
    4. '()' → logprob: -3.4223546981811523
    5. '):' → logprob: -3.5473546981811523
    6. '   ' → logprob: -3.7973546981811523
    7. ')' → logprob: -3.9223546981811523
    8. 'n' → logprob: -4.422354698181152
    9. '
' → logprob: -5.172354698181152
    10. ' :' → logprob: -5.172354698181152

Token 341: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05390491709113121
    2. ':' → logprob: -4.178905010223389
    3. '
' → logprob: -4.178905010223389
    4. '    
' → logprob: -4.178905010223389
    5. ' :' → logprob: -6.553905010223389
    6. ':
' → logprob: -6.678905010223389
    7. ' :
' → logprob: -6.928905010223389
    8. '  
' → logprob: -7.178905010223389
    9. '   
' → logprob: -7.803905010223389
    10. ' ' → logprob: -8.05390453338623

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014653963968157768
    2. '"""' → logprob: -4.389654159545898
    3. ')' → logprob: -7.014654159545898
    4. '    
' → logprob: -7.389654159545898
    5. '"""
' → logprob: -8.389654159545898
    6. '```' → logprob: -9.014654159545898
    7. 'def' → logprob: -9.639654159545898
    8. '""' → logprob: -9.764654159545898
    9. ':' → logprob: -10.264654159545898
    10. ' """' → logprob: -10.639654159545898

Token 343: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056507259607315063
    2. ':' → logprob: -3.3065073490142822
    3. '    
' → logprob: -5.306507110595703
    4. '):' → logprob: -5.931507110595703
    5. '```' → logprob: -6.181507110595703
    6. '
' → logprob: -6.306507110595703
    7. ')' → logprob: -6.306507110595703
    8. '):
' → logprob: -6.931507110595703
    9. '"""' → logprob: -7.306507110595703
    10. 'def' → logprob: -7.431507110595703

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1280033439397812
    2. 'n' → logprob: -2.1280033588409424
    3. '	n' → logprob: -7.128003120422363
    4. ' n' → logprob: -8.628003120422363
    5. '    
' → logprob: -9.503003120422363
    6. '    ' → logprob: -12.003003120422363
    7. '   ' → logprob: -12.628003120422363
    8. '
' → logprob: -12.753003120422363
    9. '```' → logprob: -13.753003120422363
    10. 'def' → logprob: -13.878003120422363

Token 345: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.931863051955588e-05
    2. '   ' → logprob: -9.750059127807617
    3. ' n' → logprob: -14.375059127807617
    4. '#' (adapté à ' #') → logprob: -14.750059127807617
    5. '	n' → logprob: -16.625059127807617
    6. 'import' → logprob: -17.125059127807617
    7. '    
' → logprob: -19.125059127807617
    8. 'from' → logprob: -19.250059127807617
    9. ' ' → logprob: -19.625059127807617
    10. '
' → logprob: -19.875059127807617

Token 346: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010792528046295047
    2. ' n' → logprob: -7.001079082489014
    3. '   ' → logprob: -8.751079559326172
    4. '	n' → logprob: -12.001079559326172
    5. 'input' → logprob: -14.126079559326172
    6. '#' → logprob: -14.126079559326172
    7. ' ' → logprob: -14.876079559326172
    8. ' ' → logprob: -15.251079559326172
    9. 'N' → logprob: -15.376079559326172
    10. 'import' → logprob: -15.501079559326172

Token 347: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0760873407125473
    2. 'n' → logprob: -2.826087236404419
    3. '()' → logprob: -4.576087474822998
    4. ' n' → logprob: -6.201087474822998
    5. '    
' → logprob: -7.326087474822998
    6. '	n' → logprob: -7.951087474822998
    7. '    ' → logprob: -8.70108699798584
    8. ' =' → logprob: -8.95108699798584
    9. '  ' → logprob: -9.45108699798584
    10. '(n' → logprob: -9.57608699798584

Token 348: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012216555187478662
    2. 'nombre' → logprob: -7.001221656799316
    3. 'int' → logprob: -8.876221656799316
    4. 'ent' → logprob: -9.626221656799316
    5. '   ' → logprob: -10.501221656799316
    6. ' n' → logprob: -10.751221656799316
    7. '
' → logprob: -11.126221656799316
    8. 'nb' → logprob: -12.251221656799316
    9. 'input' → logprob: -12.376221656799316
    10. 's' → logprob: -12.501221656799316

Token 349: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3342675566673279
    2. '   ' → logprob: -1.7092676162719727
    3. ' n' → logprob: -2.8342676162719727
    4. ' =' → logprob: -3.3342676162719727
    5. ' de' → logprob: -5.584267616271973
    6. ' ' → logprob: -6.709267616271973
    7. '_n' → logprob: -7.209267616271973
    8. 'de' → logprob: -7.334267616271973
    9. 's' → logprob: -7.459267616271973
    10. '=' → logprob: -7.584267616271973

Token 350: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7623574733734131
    2. ' =' → logprob: -1.137357473373413
    3. '   ' → logprob: -2.262357473373413
    4. '=' → logprob: -3.137357473373413
    5. ')' → logprob: -3.512357473373413
    6. ' )' → logprob: -4.512357711791992
    7. '    ' → logprob: -5.012357711791992
    8. '  ' → logprob: -5.512357711791992
    9. ' n' → logprob: -5.887357711791992
    10. 'n' → logprob: -6.012357711791992

Token 351: 'élé' (ID: 15228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07533308863639832
    2. 'tokens' → logprob: -3.4503331184387207
    3. 'élé' → logprob: -4.950333118438721
    4. 't' → logprob: -5.075333118438721
    5. 'car' → logprob: -5.200333118438721
    6. 'token' → logprob: -5.700333118438721
    7. 'l' → logprob: -5.825333118438721
    8. ' n' → logprob: -6.325333118438721
    9. 'int' → logprob: -6.575333118438721
    10. 'ent' → logprob: -6.700333118438721

Token 352: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00017302791820839047
    2. 'm' → logprob: -9.00017261505127
    3. 'ment' → logprob: -11.00017261505127
    4. 'éments' → logprob: -11.37517261505127
    5. 'ements' → logprob: -12.00017261505127
    6. 'fants' → logprob: -12.87517261505127
    7. 'nts' → logprob: -12.87517261505127
    8. '   ' → logprob: -13.25017261505127
    9. 'phants' → logprob: -13.37517261505127
    10. 'ts' → logprob: -13.37517261505127

Token 353: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5888570547103882
    2. 'n' → logprob: -0.8388570547103882
    3. ' =' → logprob: -4.588857173919678
    4. ' n' → logprob: -6.463857173919678
    5. '=' → logprob: -7.088857173919678
    6. '=n' → logprob: -9.08885669708252
    7. '	n' → logprob: -9.71385669708252
    8. '    
' → logprob: -10.08885669708252
    9. ':' → logprob: -10.83885669708252
    10. '
' → logprob: -11.46385669708252

Token 354: ' traiter' (ID: 105852)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1647967100143433
    2. ' traiter' → logprob: -1.2897967100143433
    3. 'trait' → logprob: -1.9147967100143433
    4. 'int' → logprob: -1.9147967100143433
    5. 'entr' → logprob: -3.164796829223633
    6. 'tra' → logprob: -4.164796829223633
    7. 's' → logprob: -4.664796829223633
    8. 'ent' → logprob: -4.914796829223633
    9. 'input' → logprob: -5.164796829223633
    10. 'prendre' → logprob: -5.664796829223633

Token 355: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2533718943595886
    2. 'n' → logprob: -1.5033719539642334
    3. ' n' → logprob: -7.378371715545654
    4. '    
' → logprob: -8.003372192382812
    5. '
' → logprob: -8.128372192382812
    6. '	n' → logprob: -8.878372192382812
    7. '(n' → logprob: -11.753372192382812
    8. '  
' → logprob: -11.753372192382812
    9. ' =' → logprob: -11.878372192382812
    10. '   
' → logprob: -12.003372192382812

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872298300266266
    2. 'n' → logprob: -1.1372298002243042
    3. ' n' → logprob: -8.137229919433594
    4. '
' → logprob: -10.762229919433594
    5. '    
' → logprob: -10.762229919433594
    6. '	n' → logprob: -10.762229919433594
    7. '  ' → logprob: -14.512229919433594
    8. '  
' → logprob: -14.637229919433594
    9. ',n' → logprob: -15.012229919433594
    10. '   
' → logprob: -15.137229919433594

Token 357: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0003546502848621458
    2. '   ' → logprob: -8.000354766845703
    3. ' n' → logprob: -10.875354766845703
    4. '	n' → logprob: -15.000354766845703
    5. ' ' → logprob: -18.750354766845703
    6. '
' → logprob: -20.125354766845703
    7. '    
' → logprob: -20.125354766845703
    8. '  ' → logprob: -20.625354766845703
    9. '```' → logprob: -21.375354766845703
    10. '_n' → logprob: -21.750354766845703

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5779794454574585
    2. ' =' → logprob: -0.8279794454574585
    3. '=int' → logprob: -6.452979564666748
    4. '   ' → logprob: -7.702979564666748
    5. ',' → logprob: -11.82797908782959
    6. '=input' → logprob: -14.32797908782959
    7. ' ' → logprob: -14.45297908782959
    8. '=n' → logprob: -14.70297908782959
    9. '    ' → logprob: -14.95297908782959
    10. ' ' → logprob: -14.95297908782959

Token 359: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750484973192215
    2. ' int' → logprob: -3.5297505855560303
    3. '	int' → logprob: -18.90475082397461
    4. '=int' → logprob: -19.02975082397461
    5. '[int' → logprob: -20.02975082397461
    6. '(int' → logprob: -20.15475082397461
    7. '<int' → logprob: -20.77975082397461
    8. '   ' → logprob: -21.40475082397461
    9. ':int' → logprob: -21.40475082397461
    10. ' ' → logprob: -21.90475082397461

Token 360: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.125000953674316
    3. '(input' → logprob: -15.750000953674316
    4. '()' → logprob: -16.125
    5. '(stdin' → logprob: -18.125
    6. '(
' → logprob: -18.625
    7. '(ip' → logprob: -19.25
    8. 'ipt' → logprob: -19.5
    9. 'input' → logprob: -20.25
    10. '_' → logprob: -20.875

Token 361: 'ipt' (ID: 12656)
  Prédit: 'ipt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipt' → logprob: -7.896309739408025e-07
    2. 'input' → logprob: -14.250000953674316
    3. '(' → logprob: -16.875
    4. 'ipts' → logprob: -17.125
    5. '```' → logprob: -17.75
    6. 'apt' → logprob: -18.125
    7. ')' → logprob: -18.625
    8. 'opt' → logprob: -19.625
    9. 'ip' → logprob: -19.75
    10. '   ' → logprob: -19.875

Token 362: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04884101450443268
    2. '().' → logprob: -3.0488409996032715
    3. '()' → logprob: -8.29884147644043
    4. ' ())' → logprob: -12.79884147644043
    5. ')' → logprob: -14.17384147644043
    6. '(' → logprob: -14.67384147644043
    7. '())
' → logprob: -15.04884147644043
    8. '())

' → logprob: -15.54884147644043
    9. '();)' → logprob: -15.67384147644043
    10. '());' → logprob: -16.17384147644043

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018215851858258247
    2. 's' → logprob: -4.018215656280518
    3. '    
' → logprob: -9.893216133117676
    4. ' s' → logprob: -11.893216133117676
    5. '	s' → logprob: -12.143216133117676
    6. '
' → logprob: -14.268216133117676
    7. '    ' → logprob: -14.268216133117676
    8. '  ' → logprob: -14.768216133117676
    9. 'n' → logprob: -15.018216133117676
    10. '   ' → logprob: -15.018216133117676

Token 364: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5762401223182678
    2. '   ' → logprob: -0.8262401223182678
    3. ' s' → logprob: -8.451240539550781
    4. '	s' → logprob: -10.201240539550781
    5. '  ' → logprob: -10.451240539550781
    6. ' ' → logprob: -11.576240539550781
    7. '    ' → logprob: -12.576240539550781
    8. '#' (adapté à ' #') → logprob: -13.201240539550781
    9. '   ' → logprob: -13.201240539550781
    10. '    
' → logprob: -13.701240539550781

Token 365: ' Lecture' (ID: 106534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. ' s' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '#' → logprob: -17.125001907348633
    5. 'S' → logprob: -17.375001907348633
    6. '```' → logprob: -19.125001907348633
    7. '`s' → logprob: -19.500001907348633
    8. '_s' → logprob: -19.750001907348633
    9. ' ' → logprob: -20.250001907348633
    10. 'string' → logprob: -20.500001907348633

Token 366: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1315116286277771
    2. '()' → logprob: -2.131511688232422
    3. '   ' → logprob: -5.631511688232422
    4. '(s' → logprob: -7.131511688232422
    5. ' s' → logprob: -9.256511688232422
    6. '().' → logprob: -10.256511688232422
    7. '(' → logprob: -10.506511688232422
    8. '_s' → logprob: -11.381511688232422
    9. '())' → logprob: -12.131511688232422
    10. ')' → logprob: -13.256511688232422

Token 367: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011714138090610504
    2. ' s' → logprob: -6.751171588897705
    3. '(s' → logprob: -13.751171112060547
    4. '()' → logprob: -15.876171112060547
    5. ' la' → logprob: -17.376171112060547
    6. '_s' → logprob: -17.626171112060547
    7. 'l' → logprob: -18.126171112060547
    8. 'la' → logprob: -18.251171112060547
    9. '(' → logprob: -18.626171112060547
    10. 'n' → logprob: -19.501171112060547

Token 368: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -5.466968650580384e-05
    2. ' s' → logprob: -9.875054359436035
    3. 'string' → logprob: -13.250054359436035
    4. 'chaine' → logprob: -14.250054359436035
    5. 'str' → logprob: -14.625054359436035
    6. '   ' → logprob: -16.37505531311035
    7. ' ' → logprob: -17.37505531311035
    8. '_s' → logprob: -17.37505531311035
    9. '```' → logprob: -17.62505531311035
    10. ')' → logprob: -18.12505531311035

Token 369: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12729406356811523
    2. '   ' → logprob: -2.2522940635681152
    3. ' s' → logprob: -4.252294063568115
    4. ' =' → logprob: -9.627294540405273
    5. '(s' → logprob: -10.252294540405273
    6. '	s' → logprob: -11.627294540405273
    7. '_s' → logprob: -12.377294540405273
    8. ' ' → logprob: -12.502294540405273
    9. '  ' → logprob: -12.502294540405273
    10. '=' → logprob: -12.752294540405273

Token 370: ' couleurs' (ID: 54001)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05938693508505821
    2. 'car' → logprob: -3.434386968612671
    3. 'str' → logprob: -4.184386730194092
    4. 'chaine' → logprob: -4.934386730194092
    5. 'chars' → logprob: -6.684386730194092
    6. 'input' → logprob: -7.059386730194092
    7. ' caractères' → logprob: -8.43438720703125
    8. ' s' → logprob: -8.43438720703125
    9. 'characters' → logprob: -9.43438720703125
    10. 'cou' → logprob: -9.43438720703125

Token 371: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7123667597770691
    2. '   ' → logprob: -0.7123667597770691
    3. ' s' → logprob: -3.962366819381714
    4. '	s' → logprob: -11.587367057800293
    5. '  ' → logprob: -12.837367057800293
    6. '    ' → logprob: -13.212367057800293
    7. '_s' → logprob: -13.462367057800293
    8. ' ' → logprob: -13.587367057800293
    9. '    
' → logprob: -14.712367057800293
    10. '.s' → logprob: -14.962367057800293

Token 372: 'dep' (ID: 27480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005237233126536012
    2. ')' → logprob: -8.250523567199707
    3. '   ' → logprob: -8.875523567199707
    4. ' s' → logprob: -9.375523567199707
    5. ')s' → logprob: -11.000523567199707
    6. ')
' → logprob: -11.375523567199707
    7. ').' → logprob: -12.250523567199707
    8. '())' → logprob: -13.875523567199707
    9. '()' → logprob: -14.625523567199707
    10. '")' → logprob: -14.750523567199707

Token 373: 'uis' (ID: 4560)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004471539054065943
    2. '=' → logprob: -6.129471302032471
    3. ' s' → logprob: -7.379471302032471
    4. ')' → logprob: -7.504471302032471
    5. ' =' → logprob: -7.504471302032471
    6. '   ' → logprob: -8.254471778869629
    7. '=s' → logprob: -8.754471778869629
    8. '       ' → logprob: -11.004471778869629
    9. ')
' → logprob: -11.004471778869629
    10. 'ends' → logprob: -11.129471778869629

Token 374: ' l' (ID: 305)
  Prédit: 'ipt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ipt' → logprob: -0.05805838108062744
    2. 's' → logprob: -3.308058261871338
    3. '()' → logprob: -4.433058261871338
    4. 'input' → logprob: -6.308058261871338
    5. ')' → logprob: -6.683058261871338
    6. '().' → logprob: -6.808058261871338
    7. '   ' → logprob: -7.183058261871338
    8. 'str' → logprob: -7.683058261871338
    9. '())' → logprob: -7.808058261871338
    10. '(' → logprob: -7.933058261871338

Token 375: ''entrée' (ID: 115820)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6768819093704224
    2. 'stdin' → logprob: -1.6768819093704224
    3. 'input' → logprob: -2.301881790161133
    4. 's' → logprob: -2.676881790161133
    5. 'e' → logprob: -2.801881790161133
    6. 'n' → logprob: -3.176881790161133
    7. '=' → logprob: -3.301881790161133
    8. '()
' → logprob: -3.426881790161133
    9. 'string' → logprob: -3.551881790161133
    10. 'chaine' → logprob: -3.801881790161133

Token 376: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.386321485042572
    2. ')' → logprob: -1.7613215446472168
    3. '()' → logprob: -2.386321544647217
    4. '())' → logprob: -3.511321544647217
    5. ' =' → logprob: -5.011321544647217
    6. '())
' → logprob: -5.136321544647217
    7. '=' → logprob: -5.136321544647217
    8. ')
' → logprob: -5.511321544647217
    9. 's' → logprob: -6.011321544647217
    10. '()
' → logprob: -7.011321544647217

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09965522587299347
    2. '   ' → logprob: -2.7246551513671875
    3. '().' → logprob: -3.8496551513671875
    4. '()' → logprob: -5.8496551513671875
    5. '())' → logprob: -5.9746551513671875
    6. ').' → logprob: -6.5996551513671875
    7. ')
' → logprob: -7.5996551513671875
    8. 's' → logprob: -7.5996551513671875
    9. ')s' → logprob: -9.474655151367188
    10. '())
' → logprob: -10.599655151367188

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25785285234451294
    2. 's' → logprob: -1.5078527927398682
    3. ' s' → logprob: -5.132853031158447
    4. '	s' → logprob: -12.382852554321289
    5. '  ' → logprob: -14.507852554321289
    6. '    ' → logprob: -14.757852554321289
    7. ' ' → logprob: -14.882852554321289
    8. '```' → logprob: -15.007852554321289
    9. '   ' → logprob: -15.507852554321289
    10. '`s' → logprob: -15.632852554321289

Token 379: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -3.650518920039758e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' s' → logprob: -13.750003814697266
    4. '	s' → logprob: -21.125003814697266
    5. '_s' → logprob: -21.375003814697266
    6. '```' → logprob: -21.500003814697266
    7. '`s' → logprob: -22.875003814697266
    8. '    
' → logprob: -23.000003814697266
    9. '  ' → logprob: -23.000003814697266
    10. ' ' → logprob: -24.250003814697266

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687872886657715
    2. '=' → logprob: -1.1368787288665771
    3. '   ' → logprob: -12.636878967285156
    4. 's' → logprob: -13.136878967285156
    5. '=s' → logprob: -13.761878967285156
    6. ')' → logprob: -15.386878967285156
    7. '=input' → logprob: -15.386878967285156
    8. ' ' → logprob: -15.636878967285156
    9. '.' → logprob: -16.136878967285156
    10. ',' → logprob: -16.136878967285156

Token 381: ' input' (ID: 3422)
  Prédit: 'ipt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ipt' → logprob: -0.00030817187507636845
    2. ' ip' → logprob: -8.6253080368042
    3. 'input' → logprob: -9.6253080368042
    4. 'ipts' → logprob: -10.1253080368042
    5. 'ip' → logprob: -12.5003080368042
    6. 's' → logprob: -13.0003080368042
    7. 'str' → logprob: -13.5003080368042
    8. '   ' → logprob: -13.5003080368042
    9. 'ipit' → logprob: -13.5003080368042
    10. 'ibt' → logprob: -13.6253080368042

Token 382: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062000520527362823
    2. '().' → logprob: -2.8120005130767822
    3. '())' → logprob: -10.437000274658203
    4. ')' → logprob: -13.687000274658203
    5. '()
' → logprob: -14.187000274658203
    6. ' ()' → logprob: -14.437000274658203
    7. '(' → logprob: -14.562000274658203
    8. '.strip' → logprob: -15.437000274658203
    9. '()]' → logprob: -16.437000274658203
    10. '()>' → logprob: -16.562000274658203

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25178515911102295
    2. '
' → logprob: -1.626785159111023
    3. '    
' → logprob: -3.7517852783203125
    4. 'cnt' → logprob: -7.1267852783203125
    5. '```' → logprob: -8.001785278320312
    6. '  
' → logprob: -8.126785278320312
    7. 'n' → logprob: -8.501785278320312
    8. '   
' → logprob: -8.751785278320312
    9. '#' → logprob: -9.126785278320312
    10. ' 
' → logprob: -9.251785278320312

Token 384: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3266576826572418
    2. 'count' → logprob: -2.076657772064209
    3. '#' (adapté à ' #') → logprob: -3.701657772064209
    4. 'R' → logprob: -3.826657772064209
    5. 'r' → logprob: -3.951657772064209
    6. '   ' → logprob: -3.951657772064209
    7. 'counts' → logprob: -3.951657772064209
    8. 'from' → logprob: -4.201657772064209
    9. 'freq' → logprob: -4.576657772064209
    10. 'c' → logprob: -4.576657772064209

Token 385: ' D' (ID: 415)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3951590061187744
    2. 'count' → logprob: -1.6451590061187744
    3. 'from' → logprob: -3.3951590061187744
    4. 'counts' → logprob: -3.8951590061187744
    5. 'r' → logprob: -4.145158767700195
    6. 'c' → logprob: -4.395158767700195
    7. 'R' → logprob: -4.395158767700195
    8. 'freq' → logprob: -4.645158767700195
    9. '#' → logprob: -4.895158767700195
    10. 'counter' → logprob: -5.520158767700195

Token 386: 'iction' (ID: 4090)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6122812628746033
    2. 'c' → logprob: -1.237281322479248
    3. '#' → logprob: -3.737281322479248
    4. 'count' → logprob: -3.737281322479248
    5. 'r' → logprob: -4.112281322479248
    6. '   ' → logprob: -4.112281322479248
    7. 'i' → logprob: -4.862281322479248
    8. 'f' → logprob: -5.112281322479248
    9. ' ' → logprob: -5.112281322479248
    10. 'ef' → logprob: -5.112281322479248

Token 387: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.5873865485191345
    2. 'aire' → logprob: -0.9623865485191345
    3. '   ' → logprob: -3.3373866081237793
    4. 'ary' → logprob: -4.212386608123779
    5. 'aires' → logprob: -5.337386608123779
    6. ' =' → logprob: -6.712386608123779
    7. 'air' → logprob: -6.962386608123779
    8. 'ar' → logprob: -6.962386608123779
    9. '#' → logprob: -7.837386608123779
    10. 'count' → logprob: -7.837386608123779

Token 388: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.681330680847168
    2. '   ' → logprob: -0.931330680847168
    3. '=' → logprob: -3.806330680847168
    4. 'de' → logprob: -3.806330680847168
    5. ' de' → logprob: -4.556330680847168
    6. ' des' → logprob: -4.681330680847168
    7. '_counts' → logprob: -4.806330680847168
    8. 'count' → logprob: -5.056330680847168
    9. 'des' → logprob: -5.431330680847168
    10. '_count' → logprob: -5.806330680847168

Token 389: ' mapper' (ID: 43493)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.34298819303512573
    2. 'comp' → logprob: -1.5929882526397705
    3. 'cnt' → logprob: -3.3429882526397705
    4. 'counter' → logprob: -3.8429882526397705
    5. ' compter' → logprob: -4.467988014221191
    6. 'counts' → logprob: -5.217988014221191
    7. 'c' → logprob: -5.342988014221191
    8. ' count' → logprob: -6.092988014221191
    9. 'com' → logprob: -6.467988014221191
    10. 'freq' → logprob: -6.717988014221191

Token 390: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.190370798110962
    2. 'colors' → logprob: -1.815370798110962
    3. 'les' → logprob: -2.315370798110962
    4. ' les' → logprob: -2.690370798110962
    5. ' couleurs' → logprob: -2.690370798110962
    6. 'counts' → logprob: -3.065370798110962
    7. 'color' → logprob: -3.190370798110962
    8. 'count' → logprob: -3.190370798110962
    9. ' s' → logprob: -3.815370798110962
    10. '_' → logprob: -4.190370559692383

Token 391: ' caractère' (ID: 80509)
  Prédit: ' couleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.44128936529159546
    2. 'cou' → logprob: -1.0662894248962402
    3. 'color' → logprob: -4.94128942489624
    4. 'char' → logprob: -6.06628942489624
    5. 'car' → logprob: -6.94128942489624
    6. 'c' → logprob: -7.19128942489624
    7. ' color' → logprob: -7.31628942489624
    8. ' caract' → logprob: -9.066288948059082
    9. ' caractère' → logprob: -9.066288948059082
    10. ' lettre' → logprob: -9.441288948059082

Token 392: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.5675007104873657
    2. ' =' → logprob: -1.8175007104873657
    3. ' de' → logprob: -1.9425007104873657
    4. '_counts' → logprob: -2.442500591278076
    5. '   ' → logprob: -2.692500591278076
    6. '_count' → logprob: -2.817500591278076
    7. 'count' → logprob: -2.942500591278076
    8. ':' → logprob: -3.442500591278076
    9. ' des' → logprob: -3.442500591278076
    10. '_c' → logprob: -3.942500591278076

Token 393: ' couleur' (ID: 48005)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07465923577547073
    2. ' s' → logprob: -2.9496593475341797
    3. 'comp' → logprob: -5.19965934753418
    4. ' la' → logprob: -5.57465934753418
    5. 'la' → logprob: -5.57465934753418
    6. ' couleur' → logprob: -6.19965934753418
    7. 'cou' → logprob: -6.32465934753418
    8. ' couleurs' → logprob: -7.44965934753418
    9. ' compteur' → logprob: -8.44965934753418
    10. 'color' → logprob: -8.44965934753418

Token 394: ' à' (ID: 1221)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.634178638458252
    2. ' à' → logprob: -1.884178638458252
    3. ':' → logprob: -2.134178638458252
    4. ' to' → logprob: -2.134178638458252
    5. '   ' → logprob: -2.509178638458252
    6. 'count' → logprob: -2.884178638458252
    7. ' :' → logprob: -3.384178638458252
    8. '_count' → logprob: -3.634178638458252
    9. 'to' → logprob: -3.634178638458252
    10. ' =' → logprob: -3.884178638458252

Token 395: ' son' (ID: 2391)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10769371688365936
    2. '1' → logprob: -2.857693672180176
    3. 's' → logprob: -3.982693672180176
    4. ' ' → logprob: -4.482693672180176
    5. ' its' → logprob: -5.107693672180176
    6. ' sa' → logprob: -5.607693672180176
    7. ' s' → logprob: -6.732693672180176
    8. 'int' → logprob: -7.232693672180176
    9. 'sa' → logprob: -7.357693672180176
    10. 'its' → logprob: -7.732693672180176

Token 396: ' index' (ID: 3472)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6686725616455078
    2. 'nombre' → logprob: -1.0436725616455078
    3. 'com' → logprob: -2.293672561645508
    4. ' nombre' → logprob: -4.418672561645508
    5. 'count' → logprob: -4.543672561645508
    6. 'indice' → logprob: -5.668672561645508
    7. ' compteur' → logprob: -5.793672561645508
    8. ' compte' → logprob: -6.168672561645508
    9. 'code' → logprob: -7.168672561645508
    10. 'index' → logprob: -7.418672561645508

Token 397: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31490692496299744
    2. '   ' → logprob: -1.5649069547653198
    3. 'color' → logprob: -4.314907073974609
    4. ':' → logprob: -4.814907073974609
    5. '_color' → logprob: -4.939907073974609
    6. 'count' → logprob: -4.939907073974609
    7. 'idx' → logprob: -5.564907073974609
    8. '={'' → logprob: -6.189907073974609
    9. ' color' → logprob: -6.314907073974609
    10. ',' → logprob: -6.689907073974609

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04239619895815849
    2. 'color' → logprob: -3.667396306991577
    3. ' color' → logprob: -5.292396068572998
    4. 'idx' → logprob: -6.167396068572998
    5. 'count' → logprob: -6.417396068572998
    6. 'colors' → logprob: -6.542396068572998
    7. ' =' → logprob: -6.542396068572998
    8. 'counts' → logprob: -7.542396068572998
    9. 'col' → logprob: -7.667396068572998
    10. 'counter' → logprob: -7.917396068572998

Token 399: ' d' (ID: 272)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.09210651367902756
    2. 'idx' → logprob: -2.967106580734253
    3. 'col' → logprob: -3.717106580734253
    4. 'colors' → logprob: -4.967106342315674
    5. 'count' → logprob: -6.592106342315674
    6. 'mp' → logprob: -7.092106342315674
    7. 'cnt' → logprob: -7.092106342315674
    8. 'index' → logprob: -7.217106342315674
    9. 'pos' → logprob: -7.842106342315674
    10. 'c' → logprob: -8.092106819152832

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028120143339037895
    2. '=' → logprob: -4.028120040893555
    3. '_c' → logprob: -6.028120040893555
    4. 'c' → logprob: -6.278120040893555
    5. '={'' → logprob: -6.403120040893555
    6. '_colors' → logprob: -7.028120040893555
    7. 'ict' → logprob: -7.278120040893555
    8. '_color' → logprob: -7.528120040893555
    9. 'ic' → logprob: -7.778120040893555
    10. '={"' → logprob: -8.653120040893555

Token 401: ' {"' (ID: 10494)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.009492202661931515
    2. '{"' → logprob: -4.75949239730835
    3. '{' → logprob: -7.13449239730835
    4. ' {'' → logprob: -10.384491920471191
    5. '{}' → logprob: -10.384491920471191
    6. 'dict' → logprob: -11.634491920471191
    7. 'default' → logprob: -12.009491920471191
    8. '{
' → logprob: -13.009491920471191
    9. '{}
' → logprob: -14.259491920471191
    10. ' {"' → logprob: -15.884491920471191

Token 402: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.018356190994381905
    2. ''' → logprob: -4.0183563232421875
    3. '"' → logprob: -8.518356323242188
    4. ' R' → logprob: -13.393356323242188
    5. 'B' → logprob: -13.893356323242188
    6. '{'' → logprob: -14.268356323242188
    7. 'r' → logprob: -15.143356323242188
    8. '"""' → logprob: -15.580856323242188
    9. '`' → logprob: -15.580856323242188
    10. '	R' → logprob: -15.643356323242188

Token 403: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0036081476137042046
    2. '"' → logprob: -5.628608226776123
    3. '':' → logprob: -12.378607749938965
    4. 'R' → logprob: -13.628607749938965
    5. ':' → logprob: -13.628607749938965
    6. ''' → logprob: -14.253607749938965
    7. ' ":' → logprob: -14.878607749938965
    8. '":"' → logprob: -15.628607749938965
    9. '":[' → logprob: -17.00360870361328
    10. '">' → logprob: -17.37860870361328

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031797364354133606
    2. ' ' → logprob: -5.753179550170898
    3. '1' → logprob: -13.253179550170898
    4. '-' → logprob: -16.2531795501709
    5. '2' → logprob: -16.3781795501709
    6. 'R' → logprob: -16.6281795501709
    7. '"' → logprob: -16.8781795501709
    8. '[' → logprob: -17.2531795501709
    9. '   ' → logprob: -17.6281795501709
    10. '  ' → logprob: -17.8781795501709

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.625027656555176
    3. '1' → logprob: -12.750027656555176
    4. '-' → logprob: -14.875027656555176
    5. '[' → logprob: -16.250028610229492
    6. '"' → logprob: -16.500028610229492
    7. '2' → logprob: -16.812528610229492
    8. '=' → logprob: -17.625028610229492
    9. '   ' → logprob: -17.875028610229492
    10. '
' → logprob: -17.937528610229492

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0590548703912646e-05
    2. ',
' → logprob: -11.500030517578125
    3. ' ,' → logprob: -11.500030517578125
    4. ',"' → logprob: -11.875030517578125
    5. '   ' → logprob: -13.750030517578125
    6. '}' → logprob: -14.250030517578125
    7. ',",' → logprob: -14.750030517578125
    8. ')' → logprob: -15.250030517578125
    9. ',

' → logprob: -15.250030517578125
    10. ',R' → logprob: -15.750030517578125

Token 407: ' "' (ID: 392)
  Prédit: '"G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"G' → logprob: -0.1545114368200302
    2. ' "' → logprob: -2.1545114517211914
    3. '"' → logprob: -3.6545114517211914
    4. '   ' → logprob: -7.529511451721191
    5. '"B' → logprob: -7.779511451721191
    6. ' ' → logprob: -8.779511451721191
    7. ''' → logprob: -10.154511451721191
    8. '       ' → logprob: -10.654511451721191
    9. '  ' → logprob: -10.904511451721191
    10. '     ' → logprob: -11.029511451721191

Token 408: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0014255946734920144
    2. '"G' → logprob: -6.876425743103027
    3. '"' → logprob: -8.376425743103027
    4. ' G' → logprob: -8.876425743103027
    5. ''' → logprob: -11.876425743103027
    6. ' ' → logprob: -12.251425743103027
    7. ' "' → logprob: -12.376425743103027
    8. '   ' → logprob: -13.501425743103027
    9. '	G' → logprob: -13.938925743103027
    10. 'B' → logprob: -14.126425743103027

Token 409: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0015548591036349535
    2. '"' → logprob: -6.5015549659729
    3. ':' → logprob: -10.251554489135742
    4. '",' → logprob: -11.126554489135742
    5. '"}' → logprob: -14.501554489135742
    6. '">' → logprob: -15.251554489135742
    7. ',' → logprob: -15.376554489135742
    8. '"]:' → logprob: -15.376554489135742
    9. '```' → logprob: -15.501554489135742
    10. 'B' → logprob: -15.501554489135742

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04860168322920799
    2. ' ' → logprob: -3.0486016273498535
    3. '2' → logprob: -11.423602104187012
    4. '0' → logprob: -12.798602104187012
    5. '"' → logprob: -14.423602104187012
    6. '   ' → logprob: -17.798601150512695
    7. '  ' → logprob: -17.923601150512695
    8. ' ' → logprob: -18.173601150512695
    9. '```' → logprob: -18.298601150512695
    10. ' "' → logprob: -18.673601150512695

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.864272967912257e-05
    2. ' ' → logprob: -9.375088691711426
    3. '2' → logprob: -12.500088691711426
    4. '"' → logprob: -17.75008773803711
    5. '   ' → logprob: -18.37508773803711
    6. '0' → logprob: -19.50008773803711
    7. '  ' → logprob: -19.62508773803711
    8. ',' → logprob: -21.75008773803711
    9. '```' → logprob: -22.00008773803711
    10. ':' → logprob: -22.12508773803711

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. ' ,' → logprob: -10.25004768371582
    3. ',
' → logprob: -11.87504768371582
    4. ',"' → logprob: -12.62504768371582
    5. '   ' → logprob: -13.25004768371582
    6. '",' → logprob: -15.87504768371582
    7. '}' → logprob: -16.25004768371582
    8. ',
' → logprob: -17.62504768371582
    9. ',

' → logprob: -18.12504768371582
    10. '"' → logprob: -18.25004768371582

Token 413: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.007293893489986658
    2. ' "' → logprob: -5.132293701171875
    3. '"' → logprob: -6.632293701171875
    4. '   ' → logprob: -11.007293701171875
    5. ' ' → logprob: -11.382293701171875
    6. 'B' → logprob: -11.382293701171875
    7. ' B' → logprob: -13.507293701171875
    8. '           ' → logprob: -13.632293701171875
    9. '       ' → logprob: -14.132293701171875
    10. '         ' → logprob: -14.257293701171875

Token 414: 'B' (ID: 33)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.008717989549040794
    2. 'B' → logprob: -4.758718013763428
    3. ' "' → logprob: -9.88371753692627
    4. '"' → logprob: -10.00871753692627
    5. ' B' → logprob: -12.00871753692627
    6. ''' → logprob: -14.25871753692627
    7. '   ' → logprob: -15.00871753692627
    8. ' ' → logprob: -15.13371753692627
    9. '`' → logprob: -17.383718490600586
    10. '	B' → logprob: -17.633718490600586

Token 415: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0013695230009034276
    2. ':' → logprob: -6.751369476318359
    3. '"}' → logprob: -8.75136947631836
    4. '"' → logprob: -10.50136947631836
    5. '}:' → logprob: -12.00136947631836
    6. '}' → logprob: -13.37636947631836
    7. '"):' → logprob: -13.62636947631836
    8. '"]:' → logprob: -13.62636947631836
    9. '':' → logprob: -14.25136947631836
    10. '")' → logprob: -14.37636947631836

Token 416: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026300758123397827
    2. ' ' → logprob: -3.6513006687164307
    3. '   ' → logprob: -15.401300430297852
    4. '"' → logprob: -16.40130043029785
    5. '    ' → logprob: -16.90130043029785
    6. '  ' → logprob: -17.15130043029785
    7. '```' → logprob: -17.40130043029785
    8. '}' → logprob: -17.77630043029785
    9. '２' → logprob: -18.02630043029785
    10. '۲' → logprob: -18.90130043029785

Token 417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.37520408630371
    4. '```' → logprob: -18.75020408630371
    5. '  ' → logprob: -19.00020408630371
    6. '２' → logprob: -19.25020408630371
    7. '}' → logprob: -19.50020408630371
    8. '0' → logprob: -19.62520408630371
    9. '
' → logprob: -19.75020408630371
    10. '"' → logprob: -20.12520408630371

Token 418: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00010747690976131707
    2. ',' → logprob: -9.750107765197754
    3. '   ' → logprob: -10.375107765197754
    4. ' }' → logprob: -11.500107765197754
    5. '}
' → logprob: -12.000107765197754
    6. '"}' → logprob: -13.750107765197754
    7. '}

' → logprob: -15.375107765197754
    8. '}`' → logprob: -16.500106811523438
    9. ',
' → logprob: -16.500106811523438
    10. '}
' → logprob: -17.000106811523438

Token 419: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019436128437519073
    2. 'cnt' → logprob: -4.644436359405518
    3. '    
' → logprob: -6.019436359405518
    4. 'counts' → logprob: -6.269436359405518
    5. 'count' → logprob: -6.644436359405518
    6. 'n' → logprob: -6.769436359405518
    7. 'c' → logprob: -6.894436359405518
    8. 'dp' → logprob: -7.644436359405518
    9. 'colors' → logprob: -7.894436359405518
    10. 'freq' → logprob: -8.64443588256836

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09988545626401901
    2. 'cnt' → logprob: -2.9748854637145996
    3. 'counts' → logprob: -4.0998854637146
    4. 'count' → logprob: -4.2248854637146
    5. 'c' → logprob: -4.9748854637146
    6. 'dp' → logprob: -6.0998854637146
    7. 'freq' → logprob: -6.3498854637146
    8. 'colors' → logprob: -7.2248854637146
    9. 'f' → logprob: -7.9748854637146
    10. 'color' → logprob: -8.224884986877441

Token 421: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2819000482559204
    2. 'count' → logprob: -1.7819000482559204
    3. 'counts' → logprob: -3.156899929046631
    4. 'c' → logprob: -3.906899929046631
    5. 'dp' → logprob: -5.031899929046631
    6. 'freq' → logprob: -5.906899929046631
    7. 'color' → logprob: -6.781899929046631
    8. '   ' → logprob: -6.906899929046631
    9. 'colors' → logprob: -7.031899929046631
    10. 'cou' → logprob: -8.156900405883789

Token 422: ' Initial' (ID: 9209)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20770125091075897
    2. 'count' → logprob: -2.5827012062072754
    3. 'c' → logprob: -2.7077012062072754
    4. 'counts' → logprob: -3.5827012062072754
    5. 'dp' → logprob: -4.707701206207275
    6. 'freq' → logprob: -6.207701206207275
    7. 'arr' → logprob: -7.207701206207275
    8. 'colors' → logprob: -7.332701206207275
    9. 'color' → logprob: -7.332701206207275
    10. 'cou' → logprob: -7.582701206207275

Token 423: 'isation' (ID: 6993)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.095475435256958
    2. 'iser' → logprob: -1.720475435256958
    3. 'isation' → logprob: -1.970475435256958
    4. 'ize' → logprob: -2.220475435256958
    5. 'counts' → logprob: -2.470475435256958
    6. 'izer' → logprob: -3.720475435256958
    7. 'ise' → logprob: -4.095475196838379
    8. 'counter' → logprob: -4.220475196838379
    9. '_count' → logprob: -4.470475196838379
    10. 'cnt' → logprob: -4.595475196838379

Token 424: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03608163818717003
    2. 'dp' → logprob: -4.786081790924072
    3. 'count' → logprob: -4.786081790924072
    4. 'cnt' → logprob: -5.411081790924072
    5. 'counts' → logprob: -5.536081790924072
    6. ' des' → logprob: -5.661081790924072
    7. 'freq' → logprob: -6.911081790924072
    8. ' =' → logprob: -7.161081790924072
    9. 'color' → logprob: -7.661081790924072
    10. 'c' → logprob: -7.661081790924072

Token 425: ' résultat' (ID: 62556)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.29890066385269165
    2. 'count' → logprob: -2.298900604248047
    3. 'dp' → logprob: -2.298900604248047
    4. 'c' → logprob: -3.923900604248047
    5. 'counts' → logprob: -4.423900604248047
    6. 'comp' → logprob: -4.673900604248047
    7. 'freq' → logprob: -5.048900604248047
    8. 'fact' → logprob: -6.173900604248047
    9. 'f' → logprob: -6.298900604248047
    10. 'color' → logprob: -6.798900604248047

Token 426: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7244995832443237
    2. 'res' → logprob: -0.8494995832443237
    3. '=' → logprob: -3.2244997024536133
    4. 'ans' → logprob: -3.8494997024536133
    5. '   ' → logprob: -4.474499702453613
    6. 'result' → logprob: -4.599499702453613
    7. ',' → logprob: -5.849499702453613
    8. ' ans' → logprob: -7.224499702453613
    9. ' res' → logprob: -7.724499702453613
    10. 'r' → logprob: -7.974499702453613

Token 427: 'nombre' (ID: 28576)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39918020367622375
    2. '1' → logprob: -1.6491801738739014
    3. 'ans' → logprob: -2.0241801738739014
    4. 'ret' → logprob: -6.1491804122924805
    5. 'result' → logprob: -7.1491804122924805
    6. 'r' → logprob: -7.5241804122924805
    7. '   ' → logprob: -8.39918041229248
    8. '0' → logprob: -8.52418041229248
    9. ' res' → logprob: -8.52418041229248
    10. ' ans' → logprob: -8.64918041229248

Token 428: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4109466075897217
    2. '=' → logprob: -1.4109466075897217
    3. '_result' → logprob: -3.0359466075897217
    4. ')' → logprob: -4.410946846008301
    5. '_res' → logprob: -4.660946846008301
    6. '_' → logprob: -4.660946846008301
    7. 'de' → logprob: -5.785946846008301
    8. '_de' → logprob: -5.910946846008301
    9. 'result' → logprob: -6.160946846008301
    10. 'res' → logprob: -6.285946846008301

Token 429: ''arr' (ID: 49695)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6524122357368469
    2. ')' → logprob: -1.9024121761322021
    3. '=' → logprob: -2.402412176132202
    4. ' =' → logprob: -2.402412176132202
    5. '_arr' → logprob: -3.652412176132202
    6. 's' → logprob: -3.777412176132202
    7. '_pos' → logprob: -4.652412414550781
    8. 'arr' → logprob: -4.902412414550781
    9. '_per' → logprob: -4.902412414550781
    10. '_perm' → logprob: -5.152412414550781

Token 430: 'angements' (ID: 147657)
  Prédit: 'angements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angements' → logprob: -0.005920381750911474
    2. '=' → logprob: -6.38092041015625
    3. 'ang' → logprob: -6.63092041015625
    4. ' =' → logprob: -7.13092041015625
    5. 's' → logprob: -8.00592041015625
    6. 'an' → logprob: -8.25592041015625
    7. 'êts' → logprob: -8.38092041015625
    8. 'angé' → logprob: -8.38092041015625
    9. '[' → logprob: -8.63092041015625
    10. 'angement' → logprob: -8.75592041015625

Token 431: ' possibles' (ID: 97753)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7543008327484131
    2. ' =' → logprob: -0.7543008327484131
    3. '=' → logprob: -3.254300832748413
    4. ',' → logprob: -4.004301071166992
    5. ' )' → logprob: -6.879301071166992
    6. ')=' → logprob: -8.379301071166992
    7. 's' → logprob: -8.379301071166992
    8. '_possible' → logprob: -8.379301071166992
    9. '   ' → logprob: -9.004301071166992
    10. ' ' → logprob: -9.379301071166992

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31271547079086304
    2. ' =' → logprob: -1.5627155303955078
    3. '=' → logprob: -3.562715530395508
    4. ',' → logprob: -3.562715530395508
    5. ' )' → logprob: -6.562715530395508
    6. ' ' → logprob: -8.937715530395508
    7. ')=' → logprob: -9.187715530395508
    8. 's' → logprob: -9.187715530395508
    9. '),' → logprob: -9.687715530395508
    10. 'res' → logprob: -9.937715530395508

Token 433: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0835813507437706
    2. 'ans' → logprob: -2.8335814476013184
    3. 'ret' → logprob: -4.958581447601318
    4. '   ' → logprob: -5.208581447601318
    5. ' res' → logprob: -5.958581447601318
    6. 'result' → logprob: -6.083581447601318
    7. 'r' → logprob: -6.208581447601318
    8. ' ans' → logprob: -6.708581447601318
    9. 'answer' → logprob: -8.45858097076416
    10. ' =' → logprob: -8.70858097076416

Token 434: ' nm' (ID: 43183)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39690107107162476
    2. 'ans' → logprob: -1.1469011306762695
    3. 'ret' → logprob: -4.7719011306762695
    4. 'result' → logprob: -7.3969011306762695
    5. 'r' → logprob: -8.02190113067627
    6. 'answer' → logprob: -8.64690113067627
    7. 'dp' → logprob: -9.64690113067627
    8. 'rez' → logprob: -10.02190113067627
    9. 'ANS' → logprob: -10.14690113067627
    10. 're' → logprob: -10.27190113067627

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10159878432750702
    2. '=' → logprob: -2.3515987396240234
    3. ' ' → logprob: -7.351598739624023
    4. '_result' → logprob: -8.351598739624023
    5. 'um' → logprob: -8.726598739624023
    6. '   ' → logprob: -9.226598739624023
    7. '_' → logprob: -9.976598739624023
    8. 's' → logprob: -10.226598739624023
    9. '  ' → logprob: -10.476598739624023
    10. ',' → logprob: -10.976598739624023

Token 436: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023178798437584192
    2. ' ' → logprob: -8.500231742858887
    3. 'pow' → logprob: -11.750231742858887
    4. '0' → logprob: -11.875231742858887
    5. '3' → logprob: -12.750231742858887
    6. '   ' → logprob: -12.875231742858887
    7. '[' → logprob: -13.125231742858887
    8. 'n' → logprob: -13.250231742858887
    9. '6' → logprob: -14.687731742858887
    10. 's' → logprob: -14.812731742858887

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005826997803524137
    2. '3' → logprob: -7.875582695007324
    3. '0' → logprob: -9.250582695007324
    4. 'pow' → logprob: -9.750582695007324
    5. '6' → logprob: -10.750582695007324
    6. '[' → logprob: -11.875582695007324
    7. '2' → logprob: -12.125582695007324
    8. 'n' → logprob: -12.875582695007324
    9. '[n' → logprob: -13.500582695007324
    10. ' ' → logprob: -13.875582695007324

Token 438: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06584814935922623
    2. '
' → logprob: -3.8158481121063232
    3. '    
' → logprob: -3.9408481121063232
    4. 'for' → logprob: -4.315848350524902
    5. ' for' → logprob: -5.940848350524902
    6. ',' → logprob: -6.565848350524902
    7. '   
' → logprob: -6.815848350524902
    8. '<|end|>' → logprob: -6.940848350524902
    9. '  ' → logprob: -7.065848350524902
    10. ')' → logprob: -7.565848350524902

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01809738203883171
    2. 'for' → logprob: -4.768097400665283
    3. 'cnt' → logprob: -5.768097400665283
    4. 'i' → logprob: -6.518097400665283
    5. 'count' → logprob: -6.518097400665283
    6. 'c' → logprob: -7.143097400665283
    7. 'counts' → logprob: -7.518097400665283
    8. 'n' → logprob: -7.643097400665283
    9. 'colors' → logprob: -7.893097400665283
    10. '    
' → logprob: -8.518096923828125

Token 440: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49776169657707214
    2. 'cnt' → logprob: -1.8727617263793945
    3. '   ' → logprob: -1.9977617263793945
    4. 'c' → logprob: -3.3727617263793945
    5. 'count' → logprob: -3.6227617263793945
    6. 'counts' → logprob: -4.7477617263793945
    7. 'prev' → logprob: -4.9977617263793945
    8. 'i' → logprob: -5.2477617263793945
    9. 'lst' → logprob: -5.7477617263793945
    10. 'col' → logprob: -6.2477617263793945

Token 441: ' Comp' (ID: 5211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7619518637657166
    2. 'cnt' → logprob: -1.1369519233703613
    3. 'c' → logprob: -2.8869519233703613
    4. 'count' → logprob: -3.0119519233703613
    5. 'counts' → logprob: -3.3869519233703613
    6. 'prev' → logprob: -4.261951923370361
    7. 'lst' → logprob: -4.386951923370361
    8. 'dp' → logprob: -5.386951923370361
    9. 'i' → logprob: -5.386951923370361
    10. 'colors' → logprob: -5.386951923370361

Token 442: 'teurs' (ID: 77729)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20838546752929688
    2. 'te' → logprob: -1.7083854675292969
    3. 'teur' → logprob: -6.208385467529297
    4. '#' → logprob: -6.583385467529297
    5. 'ter' → logprob: -6.708385467529297
    6. 'tes' → logprob: -7.333385467529297
    7. 'té' → logprob: -7.833385467529297
    8. 'pt' → logprob: -8.333385467529297
    9. 'ts' → logprob: -9.083385467529297
    10. 'teurs' → logprob: -9.083385467529297

Token 443: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08371753990650177
    2. '=' → logprob: -2.5837175846099854
    3. '=[' → logprob: -6.583717346191406
    4. 'R' → logprob: -6.833717346191406
    5. 'de' → logprob: -7.958717346191406
    6. 'cou' → logprob: -8.083717346191406
    7. '=[]' → logprob: -8.208717346191406
    8. 'r' → logprob: -8.333717346191406
    9. '   ' → logprob: -8.833717346191406
    10. 'des' → logprob: -9.208717346191406

Token 444: ' chaque' (ID: 21194)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.1633970737457275
    2. 'count' → logprob: -1.9133970737457275
    3. 'cnt' → logprob: -1.9133970737457275
    4. 'c' → logprob: -2.0383970737457275
    5. 'counts' → logprob: -2.4133970737457275
    6. '[' → logprob: -3.0383970737457275
    7. 'i' → logprob: -4.163396835327148
    8. 'r' → logprob: -4.413396835327148
    9. 'colors' → logprob: -4.538396835327148
    10. ' couleurs' → logprob: -4.663396835327148

Token 445: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.6991279721260071
    2. ' couleur' → logprob: -0.9491279721260071
    3. 'color' → logprob: -2.4491279125213623
    4. 'c' → logprob: -3.9491279125213623
    5. ' color' → logprob: -5.324128150939941
    6. 'car' → logprob: -6.199128150939941
    7. 'char' → logprob: -7.074128150939941
    8. 'token' → logprob: -7.824128150939941
    9. 'type' → logprob: -8.074128150939941
    10. ' couleurs' → logprob: -8.449128150939941

Token 446: ' rencontr' (ID: 49751)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4666220545768738
    2. 'cnt' → logprob: -1.4666221141815186
    3. 'count' → logprob: -2.7166221141815186
    4. 'counts' → logprob: -3.8416221141815186
    5. '=' → logprob: -4.0916218757629395
    6. '   ' → logprob: -4.4666218757629395
    7. 'c' → logprob: -4.5916218757629395
    8. ',' → logprob: -5.4666218757629395
    9. 'r' → logprob: -5.4666218757629395
    10. 'colors' → logprob: -6.2166218757629395

Token 447: 'ée' (ID: 2894)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.2912788391113281
    2. 'e' → logprob: -1.4162788391113281
    3. 'és' → logprob: -2.166278839111328
    4. ',' → logprob: -2.666278839111328
    5. 'u' → logprob: -2.666278839111328
    6. 's' → logprob: -2.916278839111328
    7. 'ées' → logprob: -3.166278839111328
    8. 'er' → logprob: -3.541278839111328
    9. 'ues' → logprob: -3.541278839111328
    10. '}' → logprob: -3.916278839111328

Token 448: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.982554018497467
    2. ' =' → logprob: -1.1075539588928223
    3. 'cnt' → logprob: -1.9825539588928223
    4. 'count' → logprob: -2.2325539588928223
    5. 'counts' → logprob: -3.8575539588928223
    6. ',' → logprob: -4.732553958892822
    7. 'c' → logprob: -5.357553958892822
    8. 'r' → logprob: -5.732553958892822
    9. ' cnt' → logprob: -5.982553958892822
    10. '
' → logprob: -6.482553958892822

Token 449: 'nc' (ID: 24825)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47896379232406616
    2. 'count' → logprob: -1.978963851928711
    3. 'cnt' → logprob: -2.103963851928711
    4. 'counts' → logprob: -2.728963851928711
    5. 'c' → logprob: -3.978963851928711
    6. 'r' → logprob: -5.103963851928711
    7. 'color' → logprob: -5.228963851928711
    8. '   ' → logprob: -5.353963851928711
    9. 'colors' → logprob: -5.478963851928711
    10. 'counter' → logprob: -5.728963851928711

Token 450: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9668719172477722
    2. ')' → logprob: -1.091871976852417
    3. '=' → logprob: -1.341871976852417
    4. 'ount' → logprob: -4.716871738433838
    5. ']' → logprob: -5.466871738433838
    6. 'o' → logprob: -5.591871738433838
    7. ',' → logprob: -6.466871738433838
    8. 'u' → logprob: -7.091871738433838
    9. 's' → logprob: -7.716871738433838
    10. 'ol' → logprob: -7.716871738433838

Token 451: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026720328256487846
    2. '])' → logprob: -3.9017202854156494
    3. ']=' → logprob: -5.4017205238342285
    4. '[' → logprob: -7.9017205238342285
    5. '3' → logprob: -8.02672004699707
    6. ')' → logprob: -8.27672004699707
    7. '0' → logprob: -8.40172004699707
    8. '=' → logprob: -8.65172004699707
    9. ' ]' → logprob: -9.40172004699707
    10. ' =' → logprob: -9.90172004699707

Token 452: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005003782454878092
    2. ']=' → logprob: -6.380003929138184
    3. ']+=' → logprob: -6.755003929138184
    4. '])' → logprob: -6.880003929138184
    5. '],' → logprob: -6.880003929138184
    6. ',' → logprob: -10.630003929138184
    7. ')' → logprob: -10.755003929138184
    8. ' ]' → logprob: -12.130003929138184
    9. ']={' → logprob: -12.255003929138184
    10. ']+' → logprob: -12.380003929138184

Token 453: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1715025007724762
    2. ',' → logprob: -2.2965025901794434
    3. ']' → logprob: -3.7965025901794434
    4. ' =' → logprob: -4.171502590179443
    5. ']=' → logprob: -4.421502590179443
    6. ']+=' → logprob: -6.421502590179443
    7. ')' → logprob: -6.796502590179443
    8. ',n' → logprob: -7.171502590179443
    9. '=[' → logprob: -7.171502590179443
    10. '[' → logprob: -7.171502590179443

Token 454: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6068354249000549
    2. '"' → logprob: -1.2318353652954102
    3. ''' → logprob: -1.8568353652954102
    4. '0' → logprob: -5.85683536529541
    5. 'Rou' → logprob: -7.10683536529541
    6. ')' → logprob: -7.73183536529541
    7. 'la' → logprob: -8.48183536529541
    8. ''n' → logprob: -8.60683536529541
    9. ''r' → logprob: -8.60683536529541
    10. ''l' → logprob: -8.73183536529541

Token 455: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0004595055361278355
    2. '"' → logprob: -8.125459671020508
    3. ''' → logprob: -9.250459671020508
    4. 's' → logprob: -10.125459671020508
    5. ' R' → logprob: -12.250459671020508
    6. '0' → logprob: -12.625459671020508
    7. ']' → logprob: -12.875459671020508
    8. 'n' → logprob: -13.000459671020508
    9. 'r' → logprob: -13.000459671020508
    10. 'd' → logprob: -13.375459671020508

Token 456: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08648224174976349
    2. ']' → logprob: -2.836482286453247
    3. '],' → logprob: -4.211482048034668
    4. '',' → logprob: -4.961482048034668
    5. ']',' → logprob: -7.336482048034668
    6. '])' → logprob: -7.586482048034668
    7. ')' → logprob: -8.086482048034668
    8. ' ,' → logprob: -8.211482048034668
    9. '),' → logprob: -8.461482048034668
    10. '']' → logprob: -9.211482048034668

Token 457: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.316184401512146
    2. ' nc' → logprob: -1.316184401512146
    3. ',' → logprob: -6.8161845207214355
    4. 'n' → logprob: -7.9411845207214355
    5. '_nc' → logprob: -8.316184043884277
    6. '0' → logprob: -8.316184043884277
    7. '.nc' → logprob: -8.816184043884277
    8. ' ' → logprob: -9.441184043884277
    9. 'Nc' → logprob: -9.441184043884277
    10. '
' → logprob: -9.566184043884277

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1380750983953476
    2. ' =' → logprob: -2.638075113296509
    3. '=' → logprob: -3.013075113296509
    4. ',' → logprob: -5.51307487487793
    5. '=[' → logprob: -6.13807487487793
    6. ')' → logprob: -6.88807487487793
    7. ']' → logprob: -7.26307487487793
    8. ' =[' → logprob: -9.51307487487793
    9. ']=' → logprob: -9.63807487487793
    10. ' [' → logprob: -9.63807487487793

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003707442432641983
    2. ']' → logprob: -6.003707408905029
    3. '=' → logprob: -7.253707408905029
    4. '[' → logprob: -8.253707885742188
    5. ']=' → logprob: -8.628707885742188
    6. ' ' → logprob: -10.253707885742188
    7. '0' → logprob: -11.253707885742188
    8. ' =' → logprob: -12.003707885742188
    9. '
' → logprob: -12.003707885742188
    10. '][' → logprob: -12.753707885742188

Token 460: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003601336502470076
    2. ']=' → logprob: -8.000360488891602
    3. '],' → logprob: -11.000360488891602
    4. ')' → logprob: -13.250360488891602
    5. ' ]' → logprob: -13.375360488891602
    6. '])' → logprob: -13.375360488891602
    7. ']+=' → logprob: -14.125360488891602
    8. ']
' → logprob: -15.000360488891602
    9. ',' → logprob: -15.000360488891602
    10. '=' → logprob: -15.125360488891602

Token 461: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.668214738368988
    2. '=' → logprob: -1.0432147979736328
    3. 'for' → logprob: -3.168214797973633
    4. ' =' → logprob: -3.418214797973633
    5. '[' → logprob: -3.668214797973633
    6. ' for' → logprob: -4.168214797973633
    7. ')' → logprob: -4.293214797973633
    8. ']' → logprob: -5.918214797973633
    9. ' pour' → logprob: -6.793214797973633
    10. ':' → logprob: -7.543214797973633

Token 462: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33865609765052795
    2. ' '' → logprob: -1.9636560678482056
    3. 'R' → logprob: -2.713656187057495
    4. 'nc' → logprob: -3.838656187057495
    5. '0' → logprob: -4.338655948638916
    6. ' R' → logprob: -4.838655948638916
    7. '1' → logprob: -4.963655948638916
    8. 'G' → logprob: -5.088655948638916
    9. ' ' → logprob: -5.213655948638916
    10. ''n' → logprob: -5.963655948638916

Token 463: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0047787572257220745
    2. '1' → logprob: -5.379778861999512
    3. 's' → logprob: -9.504778861999512
    4. ' G' → logprob: -10.004778861999512
    5. 'B' → logprob: -10.629778861999512
    6. ''' → logprob: -12.504778861999512
    7. ')' → logprob: -12.629778861999512
    8. 'R' → logprob: -12.754778861999512
    9. '0' → logprob: -14.004778861999512
    10. ' ' → logprob: -14.129778861999512

Token 464: '',' (ID: 787)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.9377809166908264
    2. ',' → logprob: -1.1877808570861816
    3. '',' → logprob: -1.4377808570861816
    4. ']',' → logprob: -3.4377808570861816
    5. '),' → logprob: -4.437780857086182
    6. ''),' → logprob: -4.562780857086182
    7. ']' → logprob: -5.062780857086182
    8. ''],' → logprob: -5.937780857086182
    9. ')',' → logprob: -6.187780857086182
    10. ')' → logprob: -8.56278133392334

Token 465: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.34871163964271545
    2. ' nc' → logprob: -1.223711609840393
    3. '.nc' → logprob: -10.098711967468262
    4. '0' → logprob: -10.348711967468262
    5. ' ' → logprob: -10.473711967468262
    6. '_nc' → logprob: -10.598711967468262
    7. ' nm' → logprob: -10.723711967468262
    8. 'nm' → logprob: -10.848711967468262
    9. '   ' → logprob: -11.223711967468262
    10. 'n' → logprob: -11.223711967468262

Token 466: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34930285811424255
    2. ']' → logprob: -1.224302887916565
    3. ']=' → logprob: -8.349303245544434
    4. '][' → logprob: -8.599303245544434
    5. ' =' → logprob: -8.849303245544434
    6. ')' → logprob: -9.349303245544434
    7. ',' → logprob: -9.974303245544434
    8. ' [' → logprob: -10.349303245544434
    9. '=' → logprob: -10.599303245544434
    10. '])' → logprob: -10.974303245544434

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.927930654550437e-05
    2. '[' → logprob: -11.375029563903809
    3. ']' → logprob: -11.750029563903809
    4. ' ' → logprob: -12.500029563903809
    5. '])' → logprob: -13.875029563903809
    6. '
' → logprob: -14.000029563903809
    7. ')' → logprob: -14.125029563903809
    8. '   ' → logprob: -14.250029563903809
    9. '```' → logprob: -14.250029563903809
    10. '1' → logprob: -14.375029563903809

Token 468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010336418636143208
    2. '])' → logprob: -7.251033782958984
    3. ']=' → logprob: -8.376033782958984
    4. ')' → logprob: -9.626033782958984
    5. '[' → logprob: -11.376033782958984
    6. '],' → logprob: -12.251033782958984
    7. '']' → logprob: -13.376033782958984
    8. ' ]' → logprob: -13.501033782958984
    9. ']+=' → logprob: -13.751033782958984
    10. ')]' → logprob: -13.876033782958984

Token 469: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023866670206189156
    2. ')' → logprob: -4.773866653442383
    3. 'for' → logprob: -5.023866653442383
    4. ']=' → logprob: -5.148866653442383
    5. '=' → logprob: -7.023866653442383
    6. 'pour' → logprob: -7.898866653442383
    7. '[' → logprob: -8.148866653442383
    8. ' for' → logprob: -8.148866653442383
    9. ' pour' → logprob: -8.273866653442383
    10. '])' → logprob: -8.398866653442383

Token 470: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1319715976715088
    2. '1' → logprob: -2.381971597671509
    3. ' s' → logprob: -3.756971597671509
    4. '0' → logprob: -6.00697135925293
    5. ']' → logprob: -6.38197135925293
    6. ' ' → logprob: -6.38197135925293
    7. 'nc' → logprob: -7.50697135925293
    8. '[' → logprob: -7.88197135925293
    9. ')' → logprob: -8.00697135925293
    10. 'B' → logprob: -8.63197135925293

Token 471: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004533142491709441
    2. '2' → logprob: -8.000452995300293
    3. '1' → logprob: -9.250452995300293
    4. ' B' → logprob: -11.625452995300293
    5. 's' → logprob: -12.500452995300293
    6. 'b' → logprob: -12.875452995300293
    7. ' ' → logprob: -14.000452995300293
    8. '```' → logprob: -14.125452995300293
    9. ']' → logprob: -14.250452995300293
    10. '0' → logprob: -14.500452995300293

Token 472: '')
' (ID: 2515)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2414272576570511
    2. ']')
' → logprob: -2.491427183151245
    3. '   ' → logprob: -2.991427183151245
    4. ')' → logprob: -3.616427183151245
    5. '])' → logprob: -3.991427183151245
    6. '']' → logprob: -4.866427421569824
    7. ']
' → logprob: -5.241427421569824
    8. '])
' → logprob: -5.241427421569824
    9. ')
' → logprob: -5.366427421569824
    10. '')
' → logprob: -6.241427421569824

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02704571560025215
    2. 'nc' → logprob: -4.652045726776123
    3. '[n' → logprob: -4.902045726776123
    4. '[' → logprob: -5.527045726776123
    5. '  ' → logprob: -6.402045726776123
    6. ' =' → logprob: -7.402045726776123
    7. 'n' → logprob: -7.652045726776123
    8. '    
' → logprob: -7.652045726776123
    9. '[]' → logprob: -7.902045726776123
    10. '
' → logprob: -7.902045726776123

Token 474: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' (adapté à ' nc') → logprob: -9.014684110297821e-06
    2. ' nc' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.125008583068848
    4. 'n' → logprob: -14.750008583068848
    5. '_nc' → logprob: -15.000008583068848
    6. '
' → logprob: -15.125008583068848
    7. 'Nc' → logprob: -15.750008583068848
    8. '.nc' → logprob: -16.625009536743164
    9. '```' → logprob: -16.750009536743164
    10. 'mc' → logprob: -16.875009536743164

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1274997740983963
    2. ' =' → logprob: -2.12749981880188
    3. '=[' → logprob: -7.502499580383301
    4. '[' → logprob: -11.2524995803833
    5. ' =[' → logprob: -12.6274995803833
    6. '=[]' → logprob: -13.5024995803833
    7. ',' → logprob: -14.5024995803833
    8. ')' → logprob: -14.7524995803833
    9. ' ' → logprob: -15.2524995803833
    10. ']' → logprob: -15.6274995803833

Token 476: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. ' [' → logprob: -11.875006675720215
    3. '[n' → logprob: -17.75000762939453
    4. '[len' → logprob: -20.62500762939453
    5. '0' → logprob: -20.87500762939453
    6. '{' → logprob: -21.50000762939453
    7. '=[' → logprob: -21.87500762939453
    8. '   ' → logprob: -21.87500762939453
    9. '[count' → logprob: -22.00000762939453
    10. '[-' → logprob: -22.12500762939453

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -15.12500286102295
    4. '[' → logprob: -16.312503814697266
    5. ']' → logprob: -16.562503814697266
    6. 'int' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '3' → logprob: -17.812503814697266
    9. '#' → logprob: -17.875003814697266
    10. ',' → logprob: -18.000003814697266

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025800178991630673
    2. ']' → logprob: -8.375258445739746
    3. ']*' → logprob: -10.750258445739746
    4. ' ,' → logprob: -12.375258445739746
    5. ' for' → logprob: -14.125258445739746
    6. '   ' → logprob: -14.625258445739746
    7. ',
' → logprob: -15.500258445739746
    8. 'for' → logprob: -16.00025749206543
    9. ' ]' → logprob: -16.25025749206543
    10. '0' → logprob: -17.00025749206543

Token 479: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.500028610229492
    3. ']' → logprob: -15.250028610229492
    4. '
' → logprob: -15.875028610229492
    5. ',' → logprob: -15.937528610229492
    6. '1' → logprob: -16.437528610229492
    7. '3' → logprob: -16.500028610229492
    8. '```' → logprob: -16.875028610229492
    9. '   ' → logprob: -17.500028610229492
    10. '2' → logprob: -18.000028610229492

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.500008583068848
    4. ']' → logprob: -15.937508583068848
    5. ',' → logprob: -16.125009536743164
    6. '3' → logprob: -16.500009536743164
    7. '
' → logprob: -16.937509536743164
    8. '2' → logprob: -17.375009536743164
    9. '   ' → logprob: -17.625009536743164
    10. '```' → logprob: -18.250009536743164

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.750035285949707
    3. '3' → logprob: -11.250035285949707
    4. '0' → logprob: -14.000035285949707
    5. ']' → logprob: -14.875035285949707
    6. ' ' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.500036239624023
    8. ',
' → logprob: -18.000036239624023
    9. '1' → logprob: -18.375036239624023
    10. '6' → logprob: -18.750036239624023

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '3' → logprob: -15.500059127807617
    4. '   ' → logprob: -16.125059127807617
    5. ']' → logprob: -16.437559127807617
    6. ',' → logprob: -16.937559127807617
    7. '1' → logprob: -17.062559127807617
    8. '
' → logprob: -17.062559127807617
    9. '```' → logprob: -17.437559127807617
    10. '2' → logprob: -17.500059127807617

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '3' → logprob: -16.9375057220459
    4. '   ' → logprob: -17.0625057220459
    5. ']' → logprob: -17.2500057220459
    6. '1' → logprob: -17.8125057220459
    7. '```' → logprob: -18.1250057220459
    8. '2' → logprob: -18.5625057220459
    9. '۰' → logprob: -18.8125057220459
    10. '000' → logprob: -18.9375057220459

Token 484: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5233060121536255
    2. ',' → logprob: -0.8983060121536255
    3. ' ]' → logprob: -9.148305892944336
    4. ']
' → logprob: -10.523305892944336
    5. ' ,' → logprob: -11.023305892944336
    6. ')' → logprob: -11.523305892944336
    7. '   ' → logprob: -11.648305892944336
    8. '3' → logprob: -12.773305892944336
    9. '```' → logprob: -13.523305892944336
    10. ']

' → logprob: -13.773305892944336

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4308159351348877
    2. 'for' → logprob: -1.0558159351348877
    3. ' for' → logprob: -6.805815696716309
    4. 'i' → logprob: -7.430815696716309
    5. '    
' → logprob: -9.305815696716309
    6. 'n' → logprob: -9.430815696716309
    7. '
' → logprob: -9.930815696716309
    8. 'dp' → logprob: -10.180815696716309
    9. '```' → logprob: -10.430815696716309
    10. '#' → logprob: -10.805815696716309

Token 486: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15532948076725006
    2. '   ' → logprob: -2.780329465866089
    3. 'i' → logprob: -3.155329465866089
    4. ' for' → logprob: -3.280329465866089
    5. 'prev' → logprob: -7.280329704284668
    6. ' i' → logprob: -7.530329704284668
    7. 'idx' → logprob: -9.780329704284668
    8. '	for' → logprob: -9.780329704284668
    9. ',' → logprob: -9.905329704284668
    10. 'p' → logprob: -10.280329704284668

Token 487: ' Stat' (ID: 12825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008976402692496777
    2. 'prev' → logprob: -4.883976459503174
    3. 'fact' → logprob: -8.133975982666016
    4. 'last' → logprob: -8.383975982666016
    5. 'pre' → logprob: -8.633975982666016
    6. 'i' → logprob: -9.008975982666016
    7. 'from' → logprob: -9.133975982666016
    8. 'f' → logprob: -9.883975982666016
    9. '#' → logprob: -9.883975982666016
    10. 'def' → logprob: -10.008975982666016

Token 488: 'ut' (ID: 339)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16271786391735077
    2. 'em' → logprob: -3.037717819213867
    3. '#' → logprob: -3.412717819213867
    4. 'ements' → logprob: -4.162717819213867
    5. 'i' → logprob: -4.287717819213867
    6. 'es' → logprob: -4.787717819213867
    7. 'ement' → logprob: -5.037717819213867
    8. 'ec' → logprob: -5.912717819213867
    9. 's' → logprob: -6.162717819213867
    10. '```' → logprob: -6.537717819213867

Token 489: ' interm' (ID: 120489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05542784556746483
    2. 's' → logprob: -3.6804277896881104
    3. '_' → logprob: -4.4304280281066895
    4. '=' → logprob: -5.0554280281066895
    5. '_prev' → logprob: -6.0554280281066895
    6. ' ' → logprob: -6.6804280281066895
    7. ',' → logprob: -6.6804280281066895
    8. 'prev' → logprob: -7.0554280281066895
    9. '<|end|>' → logprob: -7.3054280281066895
    10. '_s' → logprob: -7.8054280281066895

Token 490: 'édiaire' (ID: 161555)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.7062804102897644
    2. 'us' → logprob: -0.7062804102897644
    3. 'u' → logprob: -4.45628023147583
    4. 'uts' → logprob: -6.95628023147583
    5. 'ement' → logprob: -9.331280708312988
    6. 'e' → logprob: -9.331280708312988
    7. ' us' → logprob: -9.581280708312988
    8. '   ' → logprob: -9.706280708312988
    9. '#' → logprob: -10.581280708312988
    10. ' ut' → logprob: -10.706280708312988

Token 491: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04646676778793335
    2. '=' → logprob: -3.421466827392578
    3. 's' → logprob: -5.171466827392578
    4. ',' → logprob: -5.296466827392578
    5. '   ' → logprob: -8.546466827392578
    6. 'cur' → logprob: -8.671466827392578
    7. 'prev' → logprob: -8.921466827392578
    8. 't' → logprob: -8.921466827392578
    9. '_prev' → logprob: -9.296466827392578
    10. '_' → logprob: -9.421466827392578

Token 492: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1185859441757202
    2. 'les' → logprob: -2.2435860633850098
    3. ' i' → logprob: -2.2435860633850098
    4. ' la' → logprob: -2.6185860633850098
    5. 'l' → logprob: -2.9935860633850098
    6. 'la' → logprob: -3.1185860633850098
    7. 'le' → logprob: -3.7435860633850098
    8. '_' → logprob: -3.8685860633850098
    9. 'prev' → logprob: -3.8685860633850098
    10. ' les' → logprob: -3.8685860633850098

Token 493: ' couleur' (ID: 48005)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24130600690841675
    2. ' i' → logprob: -2.7413060665130615
    3. ' couleur' → logprob: -3.3663060665130615
    4. 'c' → logprob: -3.4913060665130615
    5. 'color' → logprob: -3.7413060665130615
    6. 'car' → logprob: -4.491305828094482
    7. 'cou' → logprob: -4.741305828094482
    8. 'index' → logprob: -4.866305828094482
    9. 'position' → logprob: -5.116305828094482
    10. 'indice' → logprob: -5.741305828094482

Token 494: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02482115663588047
    2. '=' → logprob: -4.6498212814331055
    3. '   ' → logprob: -5.0248212814331055
    4. ',' → logprob: -5.5248212814331055
    5. 's' → logprob: -7.5248212814331055
    6. '_status' → logprob: -7.7748212814331055
    7. 'status' → logprob: -7.8998212814331055
    8. 'cur' → logprob: -8.024821281433105
    9. '=[' → logprob: -8.399821281433105
    10. 't' → logprob: -8.399821281433105

Token 495: ' utilisé' (ID: 53138)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.664608120918274
    2. 'cur' → logprob: -2.4146080017089844
    3. '[' → logprob: -2.7896080017089844
    4. '   ' → logprob: -3.1646080017089844
    5. 'tmp' → logprob: -3.1646080017089844
    6. 'dp' → logprob: -3.1646080017089844
    7. ' =' → logprob: -3.2896080017089844
    8. 'status' → logprob: -3.4146080017089844
    9. 'flag' → logprob: -3.6646080017089844
    10. '#' → logprob: -3.9146080017089844

Token 496: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9252074360847473
    2. ' pour' → logprob: -1.1752073764801025
    3. ' for' → logprob: -2.1752073764801025
    4. 'pour' → logprob: -2.5502073764801025
    5. ' =' → logprob: -3.9252073764801025
    6. ' ' → logprob: -3.9252073764801025
    7. '=' → logprob: -4.175207614898682
    8. ' dans' → logprob: -4.800207614898682
    9. 'dans' → logprob: -4.925207614898682
    10. '   ' → logprob: -4.925207614898682

Token 497: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.150689959526062
    2. 'su' → logprob: -1.150689959526062
    3. 'l' → logprob: -2.4006900787353516
    4. 'les' → logprob: -2.5256900787353516
    5. 'la' → logprob: -2.7756900787353516
    6. ' suivre' → logprob: -4.150690078735352
    7. ' gérer' → logprob: -4.275690078735352
    8. 'g' → logprob: -4.650690078735352
    9. 'comp' → logprob: -4.900690078735352
    10. 'com' → logprob: -4.900690078735352

Token 498: ' calcul' (ID: 7559)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9415587186813354
    2. ' i' → logprob: -1.6915587186813354
    3. 'compar' → logprob: -2.066558837890625
    4. 'calcul' → logprob: -2.566558837890625
    5. 'for' → logprob: -3.691558837890625
    6. 'com' → logprob: -4.191558837890625
    7. 'comb' → logprob: -4.191558837890625
    8. 'c' → logprob: -4.566558837890625
    9. ' for' → logprob: -4.816558837890625
    10. 'v' → logprob: -4.941558837890625

Token 499: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.7970197796821594
    2. 's' → logprob: -0.9220197796821594
    3. 'c' → logprob: -4.172019958496094
    4. 'i' → logprob: -4.297019958496094
    5. 'ns' → logprob: -4.297019958496094
    6. 'for' → logprob: -4.547019958496094
    7. '[' → logprob: -4.547019958496094
    8. 'n' → logprob: -4.922019958496094
    9. ']' → logprob: -5.047019958496094
    10. '#' → logprob: -5.047019958496094

Token 500: ' combin' (ID: 25307)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4691276550292969
    2. ' =' → logprob: -1.8441276550292969
    3. 'tmp' → logprob: -3.594127655029297
    4. ',' → logprob: -4.219127655029297
    5. ' st' → logprob: -4.219127655029297
    6. 'st' → logprob: -4.344127655029297
    7. 'stat' → logprob: -4.719127655029297
    8. ' tmp' → logprob: -4.719127655029297
    9. ' interm' → logprob: -4.844127655029297
    10. 'inter' → logprob: -4.844127655029297

Token 501: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.25660523772239685
    2. 'atoire' → logprob: -1.7566052675247192
    3. '[' → logprob: -4.38160514831543
    4. 's' → logprob: -5.00660514831543
    5. 'a' → logprob: -5.00660514831543
    6. '#' → logprob: -5.88160514831543
    7. 'és' → logprob: -5.88160514831543
    8. 'ai' → logprob: -6.38160514831543
    9. '```' → logprob: -6.38160514831543
    10. 'e' → logprob: -6.50660514831543

Token 502: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0815107822418213
    2. ',' → logprob: -1.9565107822418213
    3. 'st' → logprob: -2.0815107822418213
    4. '   ' → logprob: -2.5815107822418213
    5. 's' → logprob: -3.5815107822418213
    6. 'status' → logprob: -3.5815107822418213
    7. 'sm' → logprob: -3.5815107822418213
    8. 'stat' → logprob: -4.081510543823242
    9. 'tmp' → logprob: -4.081510543823242
    10. ' st' → logprob: -4.206510543823242

Token 503: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6953467726707458
    2. '   ' → logprob: -0.8203467726707458
    3. ',' → logprob: -3.1953468322753906
    4. '=' → logprob: -5.070346832275391
    5. '[' → logprob: -5.695346832275391
    6. ':' → logprob: -6.570346832275391
    7. ' ,' → logprob: -6.820346832275391
    8. 's' → logprob: -6.945346832275391
    9. 'status' → logprob: -7.195346832275391
    10. '[]' → logprob: -7.570346832275391

Token 504: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -0.6961562037467957
    2. 'status' → logprob: -2.3211562633514404
    3. 'stat' → logprob: -3.1961562633514404
    4. 'sm' → logprob: -3.3211562633514404
    5. 'dp' → logprob: -3.5711562633514404
    6. 'tmp' → logprob: -3.8211562633514404
    7. 'ns' → logprob: -3.9461562633514404
    8. 'state' → logprob: -4.196156024932861
    9. 'sta' → logprob: -4.321156024932861
    10. 'sts' → logprob: -4.321156024932861

Token 505: 't' (ID: 83)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39645710587501526
    2. 'atus' → logprob: -1.5214570760726929
    3. '=' → logprob: -2.5214571952819824
    4. 'at' → logprob: -4.396457195281982
    5. 's' → logprob: -4.771457195281982
    6. 'a' → logprob: -5.646457195281982
    7. '=[' → logprob: -6.396457195281982
    8. 'atu' → logprob: -7.271457195281982
    9. '=[]
' → logprob: -7.521457195281982
    10. '=[]' → logprob: -7.896457195281982

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25254130363464355
    2. ' =' → logprob: -1.5025413036346436
    3. 's' → logprob: -8.252541542053223
    4. '=[' → logprob: -8.877541542053223
    5. 't' → logprob: -9.627541542053223
    6. ',' → logprob: -10.377541542053223
    7. 'a' → logprob: -10.877541542053223
    8. 'i' → logprob: -10.877541542053223
    9. 'e' → logprob: -11.002541542053223
    10. '=[]' → logprob: -11.252541542053223

Token 507: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027837196830660105
    2. ' [' → logprob: -6.37778377532959
    3. '[-' → logprob: -7.50278377532959
    4. '[n' → logprob: -8.50278377532959
    5. '0' → logprob: -8.50278377532959
    6. '[[' → logprob: -9.87778377532959
    7. '{' → logprob: -10.87778377532959
    8. '[]' → logprob: -11.62778377532959
    9. '["' → logprob: -11.62778377532959
    10. ' ' → logprob: -12.37778377532959

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032294096890836954
    2. 'False' → logprob: -6.75322961807251
    3. '[' → logprob: -6.87822961807251
    4. '-' → logprob: -7.62822961807251
    5. '1' → logprob: -8.003229141235352
    6. ' ' → logprob: -9.753229141235352
    7. '(' → logprob: -10.003229141235352
    8. 'True' → logprob: -10.503229141235352
    9. 'None' → logprob: -11.628229141235352
    10. '2' → logprob: -11.628229141235352

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043472214019857347
    2. ']' → logprob: -8.000434875488281
    3. ' ,' → logprob: -9.375434875488281
    4. ']*' → logprob: -12.375434875488281
    5. '   ' → logprob: -12.875434875488281
    6. ',
' → logprob: -12.875434875488281
    7. '0' → logprob: -13.375434875488281
    8. ' ]' → logprob: -13.750434875488281
    9. '3' → logprob: -14.000434875488281
    10. ' for' → logprob: -14.875434875488281

Token 510: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014176911674439907
    2. ' ' → logprob: -4.264176845550537
    3. '1' → logprob: -12.139177322387695
    4. '
' → logprob: -12.764177322387695
    5. ',' → logprob: -13.451677322387695
    6. '2' → logprob: -14.014177322387695
    7. '3' → logprob: -14.326677322387695
    8. '

' → logprob: -14.639177322387695
    9. '   ' → logprob: -15.201677322387695
    10. ']' → logprob: -15.389177322387695

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.7689099018462e-05
    2. ' ' → logprob: -9.37508773803711
    3. ',' → logprob: -13.25008773803711
    4. '1' → logprob: -14.25008773803711
    5. '
' → logprob: -15.87508773803711
    6. ']' → logprob: -16.37508773803711
    7. 'False' → logprob: -17.43758773803711
    8. '

' → logprob: -17.68758773803711
    9. '2' → logprob: -17.93758773803711
    10. '```' → logprob: -18.81258773803711

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001005419879220426
    2. ']' → logprob: -7.00100564956665
    3. ' ,' → logprob: -9.376005172729492
    4. '   ' → logprob: -12.501005172729492
    5. ' ]' → logprob: -13.251005172729492
    6. '<|end|>' → logprob: -13.501005172729492
    7. '<|end|>' → logprob: -14.376005172729492
    8. '3' → logprob: -14.376005172729492
    9. ' ' → logprob: -15.501005172729492
    10. ')' → logprob: -15.751005172729492

Token 513: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005976435262709856
    2. ' ' → logprob: -5.13097620010376
    3. '1' → logprob: -10.880976676940918
    4. ']' → logprob: -11.255976676940918
    5. '3' → logprob: -12.005976676940918
    6. '2' → logprob: -13.130976676940918
    7. ',' → logprob: -13.693476676940918
    8. '   ' → logprob: -14.255976676940918
    9. '-' → logprob: -14.318476676940918
    10. 'False' → logprob: -14.505976676940918

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001996066712308675
    2. ' ' → logprob: -8.625199317932129
    3. '1' → logprob: -11.250199317932129
    4. ']' → logprob: -13.437699317932129
    5. '2' → logprob: -13.937699317932129
    6. '3' → logprob: -14.250199317932129
    7. ',' → logprob: -14.312699317932129
    8. '   ' → logprob: -14.875199317932129
    9. '
' → logprob: -15.062699317932129
    10. '[' → logprob: -15.250199317932129

Token 515: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014180023572407663
    2. '   ' → logprob: -9.750142097473145
    3. ']
' → logprob: -10.125142097473145
    4. ' ]' → logprob: -10.250142097473145
    5. ',' → logprob: -12.000142097473145
    6. ']

' → logprob: -14.000142097473145
    7. ')' → logprob: -14.750142097473145
    8. ']
' → logprob: -15.875142097473145
    9. '  ' → logprob: -16.250141143798828
    10. '<|end|>' → logprob: -16.625141143798828

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09885524213314056
    2. 'for' → logprob: -2.7238552570343018
    3. ' for' → logprob: -4.223855018615723
    4. '
' → logprob: -4.723855018615723
    5. '    
' → logprob: -5.848855018615723
    6. '```' → logprob: -6.973855018615723
    7. 'i' → logprob: -7.473855018615723
    8. '  
' → logprob: -8.848855018615723
    9. ' ' → logprob: -9.473855018615723
    10. '  ' → logprob: -9.848855018615723

Token 517: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21700946986675262
    2. '   ' → logprob: -1.717009425163269
    3. ' for' → logprob: -4.342009544372559
    4. 'i' → logprob: -6.342009544372559
    5. '    
' → logprob: -8.842009544372559
    6. '
' → logprob: -8.967009544372559
    7. '	for' → logprob: -9.092009544372559
    8. '```' → logprob: -9.467009544372559
    9. '#' (adapté à ' #') → logprob: -9.842009544372559
    10. 'n' → logprob: -9.842009544372559

Token 518: ' Ress' (ID: 90242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008176080300472677
    2. 'i' → logprob: -8.00081729888916
    3. 'prev' → logprob: -8.00081729888916
    4. '   ' → logprob: -11.00081729888916
    5. 'fact' → logprob: -11.00081729888916
    6. 'from' → logprob: -11.12581729888916
    7. 'last' → logprob: -11.12581729888916
    8. ' for' → logprob: -11.37581729888916
    9. '#' → logprob: -11.62581729888916
    10. 'fo' → logprob: -11.75081729888916

Token 519: 'ources' (ID: 3471)
  Prédit: 'ources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ources' → logprob: -0.45881325006484985
    2. 'ource' → logprob: -1.208813190460205
    3. 'source' → logprob: -4.083813190460205
    4. 'ultat' → logprob: -4.083813190460205
    5. 'ult' → logprob: -4.333813190460205
    6. 'erv' → logprob: -5.083813190460205
    7. 'em' → logprob: -5.333813190460205
    8. 'sources' → logprob: -5.958813190460205
    9. 'our' → logprob: -6.833813190460205
    10. 'e' → logprob: -6.958813190460205

Token 520: ' interm' (ID: 120489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6219058036804199
    2. 'n' → logprob: -2.37190580368042
    3. 'max' → logprob: -2.37190580368042
    4. 'import' → logprob: -2.99690580368042
    5. '=' → logprob: -3.12190580368042
    6. 'fac' → logprob: -3.74690580368042
    7. '#' → logprob: -3.87190580368042
    8. 'fact' → logprob: -3.87190580368042
    9. 'for' → logprob: -4.12190580368042
    10. 'factor' → logprob: -4.12190580368042

Token 521: 'édia' (ID: 49296)
  Prédit: 'ources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ources' → logprob: -0.07202177494764328
    2. 'ource' → logprob: -3.697021722793579
    3. '   ' → logprob: -4.447021961212158
    4. ' =' → logprob: -4.572021961212158
    5. 'rc' → logprob: -5.197021961212158
    6. '=' → logprob: -5.447021961212158
    7. 's' → logprob: -5.822021961212158
    8. 'sources' → logprob: -5.822021961212158
    9. 'im' → logprob: -6.947021961212158
    10. 'source' → logprob: -7.322021961212158

Token 522: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.23145702481269836
    2. 'res' → logprob: -1.731456995010376
    3. 'aires' → logprob: -4.481457233428955
    4. '```' → logprob: -4.731457233428955
    5. 'ries' → logprob: -5.231457233428955
    6. 'ères' → logprob: -7.731457233428955
    7. 'tes' → logprob: -7.856457233428955
    8. 't' → logprob: -7.856457233428955
    9. 'eres' → logprob: -7.981457233428955
    10. '   ' → logprob: -8.106456756591797

Token 523: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0532524585723877
    2. ' =' → logprob: -1.3032524585723877
    3. '   ' → logprob: -1.5532524585723877
    4. 'for' → logprob: -3.0532524585723877
    5. 'dp' → logprob: -3.6782524585723877
    6. '#' → logprob: -3.9282524585723877
    7. '=' → logprob: -4.678252220153809
    8. 'n' → logprob: -5.303252220153809
    9. 'import' → logprob: -5.428252220153809
    10. ' for' → logprob: -5.678252220153809

Token 524: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4738144874572754
    2. ' i' → logprob: -1.9738144874572754
    3. ' la' → logprob: -3.3488144874572754
    4. '_' → logprob: -3.4738144874572754
    5. ' comb' → logprob: -3.5988144874572754
    6. 'comb' → logprob: -4.098814487457275
    7. 'l' → logprob: -4.223814487457275
    8. 'factor' → logprob: -4.348814487457275
    9. ' l' → logprob: -4.473814487457275
    10. 'calcul' → logprob: -4.473814487457275

Token 525: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.1637745499610901
    2. 'cou' → logprob: -2.9137744903564453
    3. 'c' → logprob: -3.2887744903564453
    4. 'color' → logprob: -3.9137744903564453
    5. ' color' → logprob: -4.163774490356445
    6. 'i' → logprob: -4.788774490356445
    7. ' i' → logprob: -5.288774490356445
    8. ' st' → logprob: -7.038774490356445
    9. ' c' → logprob: -7.163774490356445
    10. ' couleurs' → logprob: -7.413774490356445

Token 526: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18980106711387634
    2. '   ' → logprob: -2.564800977706909
    3. '=' → logprob: -2.689800977706909
    4. ',' → logprob: -4.064801216125488
    5. '[' → logprob: -6.189801216125488
    6. 'st' → logprob: -6.814801216125488
    7. ':' → logprob: -6.939801216125488
    8. ' ' → logprob: -7.314801216125488
    9. '=[' → logprob: -7.502301216125488
    10. 's' → logprob: -7.564801216125488

Token 527: ' particip' (ID: 4884)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.7964096069335938
    2. ' res' → logprob: -1.9214096069335938
    3. '[' → logprob: -2.1714096069335938
    4. 'r' → logprob: -2.1714096069335938
    5. 'rs' → logprob: -2.6714096069335938
    6. ' r' → logprob: -2.7964096069335938
    7. '   ' → logprob: -3.2964096069335938
    8. 'rc' → logprob: -3.8589096069335938
    9. ' rs' → logprob: -4.046409606933594
    10. ' [' → logprob: -4.171409606933594

Token 528: 'ent' (ID: 299)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09596332162618637
    2. 'ent' → logprob: -3.3459632396698
    3. 'es' → logprob: -3.8459632396698
    4. 'e' → logprob: -3.8459632396698
    5. 'ant' → logprob: -5.095963478088379
    6. '[' → logprob: -6.345963478088379
    7. 'aient' → logprob: -6.595963478088379
    8. 'antes' → logprob: -7.345963478088379
    9. 'ip' → logprob: -7.470963478088379
    10. '   ' → logprob: -7.595963478088379

Token 529: ' au' (ID: 2791)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.074485182762146
    2. 'aux' → logprob: -1.324485182762146
    3. ' au' → logprob: -2.0744853019714355
    4. ' à' → logprob: -2.1994853019714355
    5. ' =' → logprob: -3.0744853019714355
    6. 'au' → logprob: -3.1994853019714355
    7. '=' → logprob: -4.1994853019714355
    8. '_aux' → logprob: -4.3244853019714355
    9. ')' → logprob: -4.5744853019714355
    10. 'à' → logprob: -5.1994853019714355

Token 530: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.329692006111145
    2. ' calcul' → logprob: -1.329692006111145
    3. 'nm' → logprob: -5.4546918869018555
    4. 'comb' → logprob: -5.4546918869018555
    5. 'cal' → logprob: -5.8296918869018555
    6. 'calc' → logprob: -6.8296918869018555
    7. 'c' → logprob: -7.0796918869018555
    8. 'com' → logprob: -7.4546918869018555
    9. ' calc' → logprob: -8.204691886901855
    10. 'nombre' → logprob: -8.454691886901855

Token 531: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17972570657730103
    2. ',' → logprob: -2.1797256469726562
    3. ' =' → logprob: -4.554725646972656
    4. 's' → logprob: -4.554725646972656
    5. '[' → logprob: -5.054725646972656
    6. '=' → logprob: -5.429725646972656
    7. ' de' → logprob: -6.054725646972656
    8. '  ' → logprob: -6.179725646972656
    9. ' ' → logprob: -6.429725646972656
    10. 'aux' → logprob: -6.429725646972656

Token 532: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.693265438079834
    2. ' nm' → logprob: -1.568265438079834
    3. ' st' → logprob: -2.693265438079834
    4. 'l' → logprob: -2.818265438079834
    5. ' la' → logprob: -3.193265438079834
    6. 'st' → logprob: -3.568265438079834
    7. 'la' → logprob: -3.568265438079834
    8. ' l' → logprob: -4.068265438079834
    9. 'comb' → logprob: -4.693265438079834
    10. ' res' → logprob: -5.068265438079834

Token 533: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.304616242647171
    2. '   ' → logprob: -2.0546162128448486
    3. '=' → logprob: -2.3046162128448486
    4. ',' → logprob: -3.5546162128448486
    5. '[' → logprob: -6.054616451263428
    6. '=[' → logprob: -6.179616451263428
    7. '  ' → logprob: -7.929616451263428
    8. ' ' → logprob: -8.17961597442627
    9. ' ,' → logprob: -9.05461597442627
    10. '```' → logprob: -9.05461597442627

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1534879356622696
    2. ' =' → logprob: -2.2784879207611084
    3. '[' → logprob: -4.2784881591796875
    4. 'res' → logprob: -5.4034881591796875
    5. ' ' → logprob: -6.2784881591796875
    6. 'r' → logprob: -6.2784881591796875
    7. 'rs' → logprob: -6.2784881591796875
    8. '  ' → logprob: -6.5284881591796875
    9. ',' → logprob: -6.5284881591796875
    10. ' res' → logprob: -6.6534881591796875

Token 535: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.8124210238456726
    2. 'rs' → logprob: -1.9374210834503174
    3. 'r' → logprob: -2.3124210834503174
    4. 'dp' → logprob: -3.4374210834503174
    5. 'rc' → logprob: -3.6874210834503174
    6. 'tmp' → logprob: -3.6874210834503174
    7. 'rt' → logprob: -4.062420845031738
    8. 'ress' → logprob: -4.187420845031738
    9. 'rm' → logprob: -4.312420845031738
    10. 're' → logprob: -4.437420845031738

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07035807520151138
    2. '=' → logprob: -2.6953580379486084
    3. 's' → logprob: -7.9453582763671875
    4. '=[' → logprob: -10.695358276367188
    5. '=[]' → logprob: -11.445358276367188
    6. 'ources' → logprob: -12.320358276367188
    7. ' ' → logprob: -12.320358276367188
    8. 't' → logprob: -12.820358276367188
    9. 'u' → logprob: -13.070358276367188
    10. '[' → logprob: -13.195358276367188

Token 537: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008970508933998644
    2. ' [' → logprob: -7.12589693069458
    3. '0' → logprob: -9.750897407531738
    4. '[n' → logprob: -11.250897407531738
    5. '1' → logprob: -11.625897407531738
    6. '[-' → logprob: -12.500897407531738
    7. '3' → logprob: -12.500897407531738
    8. ' ' → logprob: -13.750897407531738
    9. '[[' → logprob: -14.500897407531738
    10. '[]' → logprob: -14.750897407531738

Token 538: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07142049819231033
    2. '1' → logprob: -2.821420431137085
    3. '[' → logprob: -4.696420669555664
    4. ' ' → logprob: -9.321420669555664
    5. '(' → logprob: -9.821420669555664
    6. ' [' → logprob: -10.571420669555664
    7. '[],' → logprob: -10.758920669555664
    8. '-' → logprob: -11.383920669555664
    9. '[n' → logprob: -11.508920669555664
    10. '[]' → logprob: -11.821420669555664

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.875029563903809
    3. ']' → logprob: -11.750029563903809
    4. '0' → logprob: -13.250029563903809
    5. ',
' → logprob: -14.500029563903809
    6. '3' → logprob: -15.875029563903809
    7. 'for' → logprob: -16.000030517578125
    8. ' for' → logprob: -16.125030517578125
    9. ' ' → logprob: -16.500030517578125
    10. ']*' → logprob: -16.625030517578125

Token 540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013400046154856682
    2. ' ' → logprob: -6.626339912414551
    3. '1' → logprob: -12.00133991241455
    4. ',' → logprob: -12.50133991241455
    5. '
' → logprob: -14.56383991241455
    6. '   ' → logprob: -14.62633991241455
    7. ']' → logprob: -14.62633991241455
    8. '3' → logprob: -14.81383991241455
    9. '2' → logprob: -14.93883991241455
    10. '[' → logprob: -15.06383991241455

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.145118848304264e-05
    2. '1' → logprob: -10.500051498413086
    3. ' ' → logprob: -11.375051498413086
    4. '3' → logprob: -12.500051498413086
    5. '2' → logprob: -13.375051498413086
    6. '[' → logprob: -13.500051498413086
    7. ']' → logprob: -14.187551498413086
    8. ',' → logprob: -14.250051498413086
    9. '-' → logprob: -14.375051498413086
    10. '
' → logprob: -14.687551498413086

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.052377623040229e-05
    2. ' ,' → logprob: -10.000070571899414
    3. ']' → logprob: -10.625070571899414
    4. '3' → logprob: -14.750070571899414
    5. '   ' → logprob: -15.750070571899414
    6. ',
' → logprob: -16.375070571899414
    7. ' ' → logprob: -16.625070571899414
    8. '<|end|>' → logprob: -16.875070571899414
    9. ' ]' → logprob: -16.875070571899414
    10. '0' → logprob: -17.000070571899414

Token 543: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005240872036665678
    2. ' ' → logprob: -5.2552409172058105
    3. '1' → logprob: -13.317740440368652
    4. '3' → logprob: -13.567740440368652
    5. ']' → logprob: -13.817740440368652
    6. '   ' → logprob: -13.880240440368652
    7. '
' → logprob: -14.817740440368652
    8. '2' → logprob: -15.505240440368652
    9. ',' → logprob: -15.630240440368652
    10. '```' → logprob: -15.630240440368652

Token 544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.496052371105179e-05
    2. ' ' → logprob: -9.50009536743164
    3. '1' → logprob: -11.12509536743164
    4. ']' → logprob: -13.06259536743164
    5. '2' → logprob: -15.06259536743164
    6. '[' → logprob: -15.25009536743164
    7. '3' → logprob: -15.37509536743164
    8. ',' → logprob: -15.37509536743164
    9. '   ' → logprob: -15.37509536743164
    10. '
' → logprob: -15.62509536743164

Token 545: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003365350130479783
    2. ',' → logprob: -9.125336647033691
    3. '   ' → logprob: -9.125336647033691
    4. ' ]' → logprob: -9.250336647033691
    5. ']
' → logprob: -10.875336647033691
    6. ')' → logprob: -13.500336647033691
    7. ']

' → logprob: -13.750336647033691
    8. ']
' → logprob: -15.625336647033691
    9. '],' → logprob: -16.125335693359375
    10. '}' → logprob: -16.125335693359375

Token 546: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21273672580718994
    2. '   ' → logprob: -1.71273672580719
    3. '
' → logprob: -4.8377366065979
    4. ' for' → logprob: -6.2127366065979
    5. '    
' → logprob: -7.2127366065979
    6. '```' → logprob: -8.462737083435059
    7. 'i' → logprob: -8.962737083435059
    8. 'n' → logprob: -9.337737083435059
    9. '#' → logprob: -9.962737083435059
    10. '	for' → logprob: -10.337737083435059

Token 547: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07105526328086853
    2. '   ' → logprob: -2.8210551738739014
    3. ' for' → logprob: -4.8210554122924805
    4. '
' → logprob: -7.8210554122924805
    5. '```' → logprob: -8.07105541229248
    6. '    
' → logprob: -9.19605541229248
    7. 'i' → logprob: -9.57105541229248
    8. '	for' → logprob: -10.32105541229248
    9. 'n' → logprob: -10.69605541229248
    10. ' ' → logprob: -11.57105541229248

Token 548: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016396844875998795
    2. 'i' → logprob: -9.750164031982422
    3. 'prev' → logprob: -9.750164031982422
    4. ' for' → logprob: -11.000164031982422
    5. 'pos' → logprob: -12.125164031982422
    6. '   ' → logprob: -12.250164031982422
    7. 's' → logprob: -12.750164031982422
    8. '#' → logprob: -13.125164031982422
    9. 'idx' → logprob: -13.125164031982422
    10. 'from' → logprob: -13.500164031982422

Token 549: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.015886079519987106
    2. 'ours' → logprob: -4.390886306762695
    3. 'ourt' → logprob: -6.640886306762695
    4. '#' → logprob: -7.765886306762695
    5. '_' → logprob: -7.890886306762695
    6. 'ou' → logprob: -8.265886306762695
    7. 'or' → logprob: -8.515886306762695
    8. '   ' → logprob: -8.765886306762695
    9. 'o' → logprob: -9.015886306762695
    10. '

' → logprob: -9.515886306762695

Token 550: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6553633213043213
    2. 'for' → logprob: -1.2803633213043213
    3. ' for' → logprob: -2.2803633213043213
    4. ' de' → logprob: -2.6553633213043213
    5. ' du' → logprob: -4.780363082885742
    6. 'de' → logprob: -5.030363082885742
    7. 's' → logprob: -5.405363082885742
    8. 'range' → logprob: -5.655363082885742
    9. ' range' → logprob: -5.905363082885742
    10. '_' → logprob: -6.655363082885742

Token 551: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011191172525286674
    2. 's' → logprob: -4.886191368103027
    3. ' range' → logprob: -5.636191368103027
    4. ' s' → logprob: -11.886191368103027
    5. '(range' → logprob: -13.136191368103027
    6. 'la' → logprob: -14.386191368103027
    7. 'rang' → logprob: -14.636191368103027
    8. 'r' → logprob: -15.011191368103027
    9. 'list' → logprob: -15.011191368103027
    10. 'n' → logprob: -15.011191368103027

Token 552: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6651359796524048
    2. 'c' → logprob: -0.7901359796524048
    3. 'i' → logprob: -4.540135860443115
    4. ' c' → logprob: -4.790135860443115
    5. ' i' → logprob: -5.040135860443115
    6. 'char' → logprob: -6.040135860443115
    7. ' caractère' → logprob: -6.415135860443115
    8. ' caract' → logprob: -6.540135860443115
    9. ' ' → logprob: -7.415135860443115
    10. 'ch' → logprob: -8.665136337280273

Token 553: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15582036972045898
    2. 'in' → logprob: -2.280820369720459
    3. 's' → logprob: -4.030820369720459
    4. '   ' → logprob: -4.655820369720459
    5. ' de' → logprob: -5.530820369720459
    6. ',' → logprob: -6.030820369720459
    7. ' dans' → logprob: -6.530820369720459
    8. ' s' → logprob: -6.655820369720459
    9. ' du' → logprob: -7.030820369720459
    10. ' for' → logprob: -7.155820369720459

Token 554: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00947803445160389
    2. 'la' → logprob: -5.2594780921936035
    3. ' s' → logprob: -5.7594780921936035
    4. ' la' → logprob: -7.0094780921936035
    5. 'range' → logprob: -9.009477615356445
    6. 'l' → logprob: -10.384477615356445
    7. 'chaine' → logprob: -11.759477615356445
    8. '   ' → logprob: -12.259477615356445
    9. ' ' → logprob: -12.884477615356445
    10. 'string' → logprob: -13.259477615356445

Token 555: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.10106547176837921
    2. 'cha' → logprob: -3.3510653972625732
    3. ' chaîne' → logprob: -3.6010653972625732
    4. 's' → logprob: -3.9760653972625732
    5. 'string' → logprob: -4.226065635681152
    6. 'chain' → logprob: -8.601065635681152
    7. ' chaine' → logprob: -9.226065635681152
    8. 'str' → logprob: -9.351065635681152
    9. '   ' → logprob: -11.851065635681152
    10. ' s' → logprob: -12.101065635681152

Token 556: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4514179825782776
    2. ' for' → logprob: -1.7014179229736328
    3. 'for' → logprob: -1.9514179229736328
    4. ':' → logprob: -3.451417922973633
    5. ' :' → logprob: -6.576417922973633
    6. ',' → logprob: -6.576417922973633
    7. 's' → logprob: -6.576417922973633
    8. ':
' → logprob: -6.701417922973633
    9. ' :
' → logprob: -8.076417922973633
    10. ' pour' → logprob: -8.451417922973633

Token 557: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16730602085590363
    2. ':' → logprob: -2.0423059463500977
    3. ':
' → logprob: -4.417305946350098
    4. 'for' → logprob: -4.667305946350098
    5. ' for' → logprob: -6.042305946350098
    6. ',' → logprob: -8.792305946350098
    7. ' :' → logprob: -9.167305946350098
    8. '
' → logprob: -9.667305946350098
    9. ' :
' → logprob: -9.792305946350098
    10. '    
' → logprob: -10.292305946350098

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03333098068833351
    2. ':' → logprob: -3.9083309173583984
    3. 'for' → logprob: -4.783330917358398
    4. ' for' → logprob: -5.533330917358398
    5. ':
' → logprob: -8.158330917358398
    6. ',' → logprob: -10.408330917358398
    7. ' :' → logprob: -10.783330917358398
    8. '    
' → logprob: -11.283330917358398
    9. '```' → logprob: -11.658330917358398
    10. '  ' → logprob: -11.783330917358398

Token 559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06263592094182968
    2. ' for' → logprob: -2.812635898590088
    3. '   ' → logprob: -7.312635898590088
    4. '	for' → logprob: -14.062636375427246
    5. '```' → logprob: -16.56263542175293
    6. '    
' → logprob: -17.81263542175293
    7. ' ' → logprob: -18.06263542175293
    8. '
' → logprob: -18.06263542175293
    9. 'fo' → logprob: -18.56263542175293
    10. 'i' → logprob: -18.81263542175293

Token 560: ' si' (ID: 1784)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47843629121780396
    2. ' c' → logprob: -1.7284362316131592
    3. 'i' → logprob: -1.8534362316131592
    4. ' i' → logprob: -3.228436231613159
    5. 'ch' → logprob: -5.603436470031738
    6. 'x' → logprob: -6.353436470031738
    7. ' ch' → logprob: -8.103436470031738
    8. ' x' → logprob: -8.478436470031738
    9. 'char' → logprob: -8.978436470031738
    10. ' ' → logprob: -10.353436470031738

Token 561: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5810129046440125
    2. 'in' → logprob: -0.8310129046440125
    3. 'n' → logprob: -5.331012725830078
    4. ' ' → logprob: -9.581012725830078
    5. 'i' → logprob: -9.706012725830078
    6. 's' → logprob: -9.956012725830078
    7. '   ' → logprob: -11.206012725830078
    8. '  ' → logprob: -11.331012725830078
    9. ',' → logprob: -12.331012725830078
    10. ' n' → logprob: -12.956012725830078

Token 562: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008617408573627472
    2. ' s' → logprob: -4.758617401123047
    3. 'range' → logprob: -13.633617401123047
    4. ' range' → logprob: -13.758617401123047
    5. '(s' → logprob: -15.633617401123047
    6. ' ' → logprob: -16.008617401123047
    7. '	s' → logprob: -16.258617401123047
    8. '   ' → logprob: -16.758617401123047
    9. '{s' → logprob: -17.133617401123047
    10. '[s' → logprob: -17.383617401123047

Token 563: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001158211671281606
    2. '):' → logprob: -9.250115394592285
    3. ':
' → logprob: -11.375115394592285
    4. ' :' → logprob: -12.250115394592285
    5. ']:' → logprob: -13.375115394592285
    6. ':**' → logprob: -14.750115394592285
    7. ')' → logprob: -15.125115394592285
    8. 'in' → logprob: -15.500115394592285
    9. '():' → logprob: -16.1251163482666
    10. '):
' → logprob: -16.2501163482666

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08274952322244644
    2. '    ' → logprob: -3.457749605178833
    3. ' ' → logprob: -3.957749605178833
    4. '   ' → logprob: -4.332749366760254
    5. ' 
' → logprob: -5.457749366760254
    6. '        
' → logprob: -5.707749366760254
    7. '    
' → logprob: -6.082749366760254
    8. '<|end|>' → logprob: -6.207749366760254
    9. '     
' → logprob: -7.332749366760254
    10. ':' → logprob: -7.457749366760254

Token 565: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.716588020324707
    2. 'idx' → logprob: -1.341588020324707
    3. '   ' → logprob: -2.341588020324707
    4. 'x' → logprob: -2.841588020324707
    5. 'if' → logprob: -3.091588020324707
    6. 'c' → logprob: -3.091588020324707
    7. ' idx' → logprob: -6.966588020324707
    8. 'k' → logprob: -7.341588020324707
    9. 'ci' → logprob: -7.341588020324707
    10. 'ix' → logprob: -7.591588020324707

Token 566: ' R' (ID: 460)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.19196541607379913
    2. 'i' → logprob: -2.191965341567993
    3. 'if' → logprob: -3.691965341567993
    4. 'c' → logprob: -3.816965341567993
    5. 'color' → logprob: -5.316965579986572
    6. 'x' → logprob: -5.566965579986572
    7. 'ci' → logprob: -6.066965579986572
    8. 'index' → logprob: -6.566965579986572
    9. 'ix' → logprob: -6.566965579986572
    10. 'col' → logprob: -7.441965579986572

Token 567: 'éc' (ID: 5675)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2625020444393158
    2. 'idx' → logprob: -2.6375019550323486
    3. 'if' → logprob: -3.0125019550323486
    4. 'c' → logprob: -3.3875019550323486
    5. '=' → logprob: -3.6375019550323486
    6. ' =' → logprob: -4.012502193450928
    7. 'e' → logprob: -4.262502193450928
    8. '   ' → logprob: -5.637502193450928
    9. 'd' → logprob: -5.887502193450928
    10. '_idx' → logprob: -6.137502193450928

Token 568: 'up' (ID: 817)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.9424515962600708
    2. 'es' → logprob: -1.1924515962600708
    3. 'ec' → logprob: -2.0674514770507812
    4. 'e' → logprob: -3.1924514770507812
    5. 'if' → logprob: -3.5674514770507812
    6. 'c' → logprob: -3.9424514770507812
    7. 'd' → logprob: -4.567451477050781
    8. '   ' → logprob: -4.692451477050781
    9. 'est' → logprob: -4.942451477050781
    10. 'és' → logprob: -5.067451477050781

Token 569: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.036102790385484695
    2. 'er' → logprob: -4.161102771759033
    3. 'érez' → logprob: -5.536102771759033
    4. 'ère' → logprob: -5.661102771759033
    5. 'èr' → logprob: -5.911102771759033
    6. '       ' → logprob: -5.911102771759033
    7. 'ér' → logprob: -6.036102771759033
    8. 'éré' → logprob: -6.161102771759033
    9. '   ' → logprob: -7.286102771759033
    10. 'ére' → logprob: -7.786102771759033

Token 570: ' l' (ID: 305)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9174923896789551
    2. 'd' → logprob: -1.167492389678955
    3. 'i' → logprob: -1.417492389678955
    4. ' idx' → logprob: -3.792492389678955
    5. ' d' → logprob: -4.542492389678955
    6. ' i' → logprob: -5.292492389678955
    7. 'c' → logprob: -5.792492389678955
    8. 'x' → logprob: -6.042492389678955
    9. '   ' → logprob: -6.542492389678955
    10. 'ix' → logprob: -7.792492389678955

Token 571: '’ind' (ID: 65649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.515241265296936
    2. 'd' → logprob: -1.640241265296936
    3. ' d' → logprob: -2.5152411460876465
    4. ' i' → logprob: -3.2652411460876465
    5. 'es' → logprob: -3.3902411460876465
    6. 'e' → logprob: -3.6402411460876465
    7. ' ' → logprob: -4.8902411460876465
    8. 'a' → logprob: -5.1402411460876465
    9. 'index' → logprob: -5.5152411460876465
    10. 'c' → logprob: -6.1402411460876465

Token 572: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.15307067334651947
    2. 'dex' → logprob: -3.0280706882476807
    3. 'e' → logprob: -3.6530706882476807
    4. 'd' → logprob: -3.6530706882476807
    5. 'i' → logprob: -3.7780706882476807
    6. 'x' → logprob: -4.028070449829102
    7. '   ' → logprob: -8.403070449829102
    8. 'idx' → logprob: -9.278070449829102
    9. 'é' → logprob: -9.278070449829102
    10. '```' → logprob: -9.403070449829102

Token 573: ' correspondant' (ID: 146058)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.203463613986969
    2. ' =' → logprob: -1.7034635543823242
    3. '=d' → logprob: -6.453463554382324
    4. 'd' → logprob: -7.828463554382324
    5. ' d' → logprob: -10.453463554382324
    6. 'idx' → logprob: -11.078463554382324
    7. '_=' → logprob: -11.578463554382324
    8. 'c' → logprob: -12.703463554382324
    9. 'ci' → logprob: -12.828463554382324
    10. '=index' → logprob: -13.078463554382324

Token 574: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1802576184272766
    2. '=' → logprob: -1.8052575588226318
    3. '=d' → logprob: -7.930257797241211
    4. 'd' → logprob: -9.305257797241211
    5. ' à' → logprob: -10.430257797241211
    6. '[' → logprob: -11.805257797241211
    7. ' d' → logprob: -12.305257797241211
    8. 'à' → logprob: -12.555257797241211
    9. '   ' → logprob: -12.805257797241211
    10. '       ' → logprob: -12.930257797241211

Token 575: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0071184877306222916
    2. ' d' → logprob: -5.3821187019348145
    3. 'la' → logprob: -6.5071187019348145
    4. ' la' → logprob: -7.0071187019348145
    5. 'l' → logprob: -9.757118225097656
    6. 'si' → logprob: -11.382118225097656
    7. 'le' → logprob: -12.257118225097656
    8. 'c' → logprob: -12.632118225097656
    9. '	d' → logprob: -13.257118225097656
    10. 'car' → logprob: -13.257118225097656

Token 576: ' couleur' (ID: 48005)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0017588367918506265
    2. ' d' → logprob: -7.126759052276611
    3. 'car' → logprob: -7.501759052276611
    4. 'si' → logprob: -8.251758575439453
    5. 'c' → logprob: -10.126758575439453
    6. ' si' → logprob: -10.501758575439453
    7. 'char' → logprob: -10.626758575439453
    8. 's' → logprob: -11.501758575439453
    9. 'character' → logprob: -11.501758575439453
    10. ' caract' → logprob: -11.751758575439453

Token 577: ' cour' (ID: 2871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13472317159175873
    2. '=' → logprob: -2.25972318649292
    3. 'd' → logprob: -4.00972318649292
    4. 'si' → logprob: -7.00972318649292
    5. 'ci' → logprob: -7.25972318649292
    6. 'idx' → logprob: -7.50972318649292
    7. '[' → logprob: -7.75972318649292
    8. '   ' → logprob: -8.009722709655762
    9. ' d' → logprob: -8.509722709655762
    10. 'c' → logprob: -9.134722709655762

Token 578: 'ante' (ID: 2116)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7894915342330933
    2. 'ent' → logprob: -1.1644915342330933
    3. 'e' → logprob: -2.414491653442383
    4. 'u' → logprob: -3.289491653442383
    5. 'rent' → logprob: -3.289491653442383
    6. 'er' → logprob: -3.914491653442383
    7. 's' → logprob: -5.039491653442383
    8. 'i' → logprob: -5.039491653442383
    9. 'ente' → logprob: -5.289491653442383
    10. 'en' → logprob: -5.289491653442383

Token 579: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.172390341758728
    2. 'd' → logprob: -1.297390341758728
    3. '[' → logprob: -1.547390341758728
    4. '[d' → logprob: -2.7973904609680176
    5. ' d' → logprob: -2.9223904609680176
    6. ' =' → logprob: -3.7973904609680176
    7. '[idx' → logprob: -4.547390460968018
    8. ' idx' → logprob: -4.547390460968018
    9. 'i' → logprob: -4.672390460968018
    10. 'c' → logprob: -4.797390460968018

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17750993371009827
    2. ' idx' → logprob: -2.9275100231170654
    3. 'idx' → logprob: -3.4275100231170654
    4. ' d' → logprob: -4.052509784698486
    5. 'i' → logprob: -4.177509784698486
    6. 'd' → logprob: -4.427509784698486
    7. ' i' → logprob: -4.677509784698486
    8. ' =' → logprob: -5.427509784698486
    9. '   ' → logprob: -5.552509784698486
    10. ' c' → logprob: -6.052509784698486

Token 581: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7494140267372131
    2. 'i' (adapté à ' i') → logprob: -1.3744139671325684
    3. 'x' → logprob: -1.8744139671325684
    4. 'c' → logprob: -2.8744139671325684
    5. 'ci' → logprob: -4.124413967132568
    6. 'id' → logprob: -4.874413967132568
    7. 'k' → logprob: -5.249413967132568
    8. 'ind' → logprob: -5.499413967132568
    9. 'pos' → logprob: -5.624413967132568
    10. 'j' → logprob: -5.749413967132568

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933006048202515
    2. ' =' → logprob: -0.6933006048202515
    3. '=d' → logprob: -8.818300247192383
    4. '=i' → logprob: -12.693300247192383
    5. 'd' → logprob: -13.443300247192383
    6. '=int' → logprob: -15.693300247192383
    7. ' ' → logprob: -15.693300247192383
    8. '=s' → logprob: -16.443300247192383
    9. '	' → logprob: -16.943300247192383
    10. '＝' → logprob: -16.943300247192383

Token 583: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002185472520068288
    2. ' d' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.377185821533203
    4. '	d' → logprob: -15.752185821533203
    5. ' ' → logprob: -17.752185821533203
    6. '  ' → logprob: -18.252185821533203
    7. '[d' → logprob: -19.377185821533203
    8. '```' → logprob: -19.627185821533203
    9. '
' → logprob: -20.002185821533203
    10. ')d' → logprob: -20.002185821533203

Token 584: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.313314952421933e-05
    2. '(si' → logprob: -9.750062942504883
    3. 'si' → logprob: -12.375062942504883
    4. ' [' → logprob: -16.625062942504883
    5. '(' → logprob: -16.625062942504883
    6. '[s' → logprob: -16.750062942504883
    7. 'Si' → logprob: -16.750062942504883
    8. ' si' → logprob: -17.250062942504883
    9. '[i' → logprob: -17.375062942504883
    10. '```' → logprob: -17.500062942504883

Token 585: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -6.511406809295295e-06
    2. ' si' → logprob: -12.375006675720215
    3. '(si' → logprob: -13.250006675720215
    4. 's' → logprob: -15.375006675720215
    5. '[' → logprob: -15.625006675720215
    6. ']' → logprob: -17.5000057220459
    7. '```' → logprob: -18.8750057220459
    8. ')' → logprob: -19.2500057220459
    9. ' ' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.5000057220459

Token 586: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.816591434879228e-05
    2. ']
' → logprob: -9.87508773803711
    3. ' ]' → logprob: -10.37508773803711
    4. '       ' → logprob: -13.50008773803711
    5. '   ' → logprob: -13.62508773803711
    6. ']

' → logprob: -14.25008773803711
    7. '"]' → logprob: -14.50008773803711
    8. ')' → logprob: -14.62508773803711
    9. ']
' → logprob: -14.62508773803711
    10. '']' → logprob: -15.00008773803711

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18116158246994019
    2. '   ' → logprob: -2.931161642074585
    3. '
' → logprob: -3.181161642074585
    4. '        
' → logprob: -3.431161642074585
    5. '    
' → logprob: -4.556161403656006
    6. 'if' → logprob: -4.681161403656006
    7. ' if' → logprob: -4.806161403656006
    8. ' 
' → logprob: -5.431161403656006
    9. '   
' → logprob: -6.806161403656006
    10. '  
' → logprob: -6.806161403656006

Token 588: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3712269961833954
    2. '       ' → logprob: -1.4962270259857178
    3. ' if' → logprob: -3.1212270259857178
    4. 'nc' → logprob: -3.7462270259857178
    5. 'st' → logprob: -5.246226787567139
    6. '        
' → logprob: -5.496226787567139
    7. '   ' → logprob: -5.621226787567139
    8. 'res' → logprob: -6.746226787567139
    9. '
' → logprob: -7.121226787567139
    10. '#' (adapté à ' #') → logprob: -7.121226787567139

Token 589: ' In' (ID: 730)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.11766521632671356
    2. 'if' → logprob: -2.6176652908325195
    3. 'st' → logprob: -3.9926652908325195
    4. 'nm' → logprob: -4.6176652908325195
    5. 'res' → logprob: -4.8676652908325195
    6. '#' → logprob: -6.6176652908325195
    7. '   ' → logprob: -8.86766529083252
    8. 'cnt' → logprob: -9.24266529083252
    9. '       ' → logprob: -10.36766529083252
    10. '
' → logprob: -10.61766529083252

Token 590: 'cré' (ID: 125389)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014932568185031414
    2. 't' → logprob: -4.514932632446289
    3. 'cr' → logprob: -5.889932632446289
    4. 'crement' → logprob: -7.264932632446289
    5. 'cre' → logprob: -8.889932632446289
    6. 'it' → logprob: -9.139932632446289
    7. 'nc' → logprob: -10.139932632446289
    8. 'crease' → logprob: -11.264932632446289
    9. 's' → logprob: -11.389932632446289
    10. '   ' → logprob: -11.514932632446289

Token 591: 'mente' (ID: 4186)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4314733743667603
    2. '   ' → logprob: -1.5564733743667603
    3. 't' → logprob: -1.5564733743667603
    4. '       ' → logprob: -2.3064732551574707
    5. 'c' → logprob: -2.9314732551574707
    6. 'cer' → logprob: -3.0564732551574707
    7. 'dex' → logprob: -3.4314732551574707
    8. 'de' → logprob: -3.9314732551574707
    9. 'n' → logprob: -4.431473255157471
    10. 'space' → logprob: -4.806473255157471

Token 592: ' le' (ID: 505)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.007590179797261953
    2. ' nc' → logprob: -5.257590293884277
    3. '(n' → logprob: -6.132590293884277
    4. ']' → logprob: -10.382590293884277
    5. '_nc' → logprob: -10.382590293884277
    6. 'nm' → logprob: -10.632590293884277
    7. ')' → logprob: -11.007590293884277
    8. '   ' → logprob: -11.382590293884277
    9. '(' → logprob: -11.632590293884277
    10. '
' → logprob: -11.632590293884277

Token 593: ' compteur' (ID: 163344)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.009994645603001118
    2. 'count' → logprob: -5.2599945068359375
    3. ' nc' → logprob: -6.3849945068359375
    4. 'counter' → logprob: -7.0099945068359375
    5. 'i' → logprob: -7.6349945068359375
    6. 'nm' → logprob: -7.7599945068359375
    7. ' compteur' → logprob: -8.259994506835938
    8. 'nombre' → logprob: -8.634994506835938
    9. 'cnt' → logprob: -9.134994506835938
    10. ' count' → logprob: -9.134994506835938

Token 594: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0064788758754730225
    2. 'nc' → logprob: -5.631478786468506
    3. '[' → logprob: -6.131478786468506
    4. '_nc' → logprob: -8.631479263305664
    5. '[n' → logprob: -8.881479263305664
    6. 's' → logprob: -9.756479263305664
    7. '       ' → logprob: -9.881479263305664
    8. '   ' → logprob: -9.881479263305664
    9. 'i' → logprob: -10.006479263305664
    10. '```' → logprob: -10.006479263305664

Token 595: ' la' (ID: 557)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.06064412370324135
    2. 'i' → logprob: -3.4356441497802734
    3. 'cou' → logprob: -4.185644149780273
    4. ' nc' → logprob: -4.810644149780273
    5. ' i' → logprob: -6.810644149780273
    6. 'la' → logprob: -7.810644149780273
    7. 'c' → logprob: -7.935644149780273
    8. ' couleur' → logprob: -8.060644149780273
    9. 'l' → logprob: -8.185644149780273
    10. ' couleurs' → logprob: -9.060644149780273

Token 596: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.05133064463734627
    2. 'i' → logprob: -3.55133056640625
    3. ' couleur' → logprob: -3.92633056640625
    4. ' i' → logprob: -6.92633056640625
    5. 'color' → logprob: -7.80133056640625
    6. 'c' → logprob: -9.05133056640625
    7. ' ' → logprob: -10.55133056640625
    8. 'co' → logprob: -10.80133056640625
    9. '   ' → logprob: -11.30133056640625
    10. '[i' → logprob: -11.92633056640625

Token 597: ' cour' (ID: 2871)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018916261615231633
    2. 'i' → logprob: -6.501891613006592
    3. ' i' → logprob: -8.75189208984375
    4. 'nc' → logprob: -9.25189208984375
    5. '[' → logprob: -9.87689208984375
    6. '   ' → logprob: -10.25189208984375
    7. ' [' → logprob: -10.75189208984375
    8. 'n' → logprob: -11.75189208984375
    9. '       ' → logprob: -11.87689208984375
    10. ' nc' → logprob: -12.75189208984375

Token 598: 'ante' (ID: 2116)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6275688409805298
    2. ' i' → logprob: -2.0025687217712402
    3. 'i' → logprob: -2.1275687217712402
    4. 'nt' → logprob: -2.6275687217712402
    5. '[i' → logprob: -3.0025687217712402
    6. ' ' → logprob: -4.12756872177124
    7. 'n' → logprob: -4.25256872177124
    8. ']' → logprob: -4.37756872177124
    9. 'ant' → logprob: -4.75256872177124
    10. 'leur' → logprob: -5.00256872177124

Token 599: '
' (ID: 198)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.38071292638778687
    2. ' nc' → logprob: -1.7557129859924316
    3. '       ' → logprob: -2.7557129859924316
    4. '[n' → logprob: -2.7557129859924316
    5. '[i' → logprob: -5.380712985992432
    6. '   ' → logprob: -5.880712985992432
    7. '
' → logprob: -6.005712985992432
    8. '[' → logprob: -6.255712985992432
    9. '+' → logprob: -6.630712985992432
    10. '_nc' → logprob: -6.755712985992432

Token 600: '       ' (ID: 309)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.3515249192714691
    2. ' nc' → logprob: -1.2265249490737915
    3. '[n' → logprob: -6.851524829864502
    4. '[i' → logprob: -7.101524829864502
    5. '_nc' → logprob: -7.726524829864502
    6. '1' → logprob: -8.10152530670166
    7. '[' → logprob: -9.22652530670166
    8. 'i' → logprob: -9.22652530670166
    9. '       ' → logprob: -9.72652530670166
    10. '   ' → logprob: -10.10152530670166

Token 601: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' (adapté à ' nc') → logprob: -0.014183600433170795
    2. ' nc' → logprob: -4.264183521270752
    3. '   ' → logprob: -11.63918399810791
    4. '_nc' → logprob: -12.26418399810791
    5. '       ' → logprob: -12.76418399810791
    6. 'n' → logprob: -13.63918399810791
    7. '.nc' → logprob: -14.76418399810791
    8. '1' → logprob: -14.76418399810791
    9. ' ' → logprob: -15.51418399810791
    10. ' ' → logprob: -15.51418399810791

Token 602: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5570885807392187e-05
    2. '[' → logprob: -11.250015258789062
    3. ' [' → logprob: -13.500015258789062
    4. 'i' → logprob: -13.875015258789062
    5. ' i' → logprob: -16.625015258789062
    6. '```' → logprob: -16.750015258789062
    7. '[
' → logprob: -16.875015258789062
    8. '[I' → logprob: -17.875015258789062
    9. ' ' → logprob: -18.250015258789062
    10. ')[' → logprob: -18.500015258789062

Token 603: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3136581480503082
    2. ']+=' → logprob: -1.3136581182479858
    3. '[i' → logprob: -8.063657760620117
    4. '+=' → logprob: -9.688657760620117
    5. '[' → logprob: -11.313657760620117
    6. ']+' → logprob: -12.563657760620117
    7. ' ]' → logprob: -13.188657760620117
    8. ' +=' → logprob: -14.063657760620117
    9. '   ' → logprob: -14.563657760620117
    10. 'i' → logprob: -15.563657760620117

Token 604: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004081128165125847
    2. ' +=' → logprob: -5.5040812492370605
    3. ']+=' → logprob: -12.879080772399902
    4. '=' → logprob: -16.62908172607422
    5. '+' → logprob: -17.75408172607422
    6. '   ' → logprob: -19.62908172607422
    7. '[' → logprob: -19.75408172607422
    8. '+=(' → logprob: -20.37908172607422
    9. '+="' → logprob: -20.75408172607422
    10. '+='' → logprob: -20.87908172607422

Token 605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '2' → logprob: -19.125003814697266
    5. '１' → logprob: -19.750003814697266
    6. '```' → logprob: -19.812503814697266
    7. '0' → logprob: -20.625003814697266
    8. '+' → logprob: -20.750003814697266
    9. 'a' → logprob: -20.812503814697266
    10. '	' → logprob: -20.875003814697266

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -16.375
    4. '   ' → logprob: -18.5625
    5. '
' → logprob: -19.0
    6. '```' → logprob: -19.0
    7. '１' → logprob: -19.5
    8. '3' → logprob: -19.5625
    9. 'a' → logprob: -19.9375
    10. '+' → logprob: -20.125

Token 607: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0999406948685646
    2. '<|end|>' → logprob: -2.474940776824951
    3. '        
' → logprob: -5.849940776824951
    4. ' ' → logprob: -6.349940776824951
    5. ' 
' → logprob: -6.349940776824951
    6. ' if' → logprob: -6.724940776824951
    7. '   ' → logprob: -7.349940776824951
    8. 'if' → logprob: -7.724940776824951
    9. '```' → logprob: -7.974940776824951
    10. '<|end|>' → logprob: -8.099940299987793

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051687754690647125
    2. 'if' → logprob: -3.176687717437744
    3. ' if' → logprob: -5.051687717437744
    4. '   ' → logprob: -7.426687717437744
    5. 's' → logprob: -7.926687717437744
    6. '```' → logprob: -8.301688194274902
    7. '        
' → logprob: -8.301688194274902
    8. '        ' → logprob: -9.301688194274902
    9. 'space' → logprob: -9.551688194274902
    10. ' ' → logprob: -9.676688194274902

Token 609: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08123096078634262
    2. 'st' → logprob: -2.706230878829956
    3. 'res' → logprob: -4.956231117248535
    4. 'nm' → logprob: -6.706231117248535
    5. '#' (adapté à ' #') → logprob: -7.081231117248535
    6. 'for' → logprob: -7.331231117248535
    7. 'cnt' → logprob: -8.206231117248535
    8. '   ' → logprob: -8.206231117248535
    9. 'tmp' → logprob: -8.831231117248535
    10. 'val' → logprob: -9.081231117248535

Token 610: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005521173123270273
    2. 'st' → logprob: -5.380521297454834
    3. 'res' → logprob: -7.630521297454834
    4. '#' → logprob: -8.755520820617676
    5. 'for' → logprob: -9.130520820617676
    6. '   ' → logprob: -10.255520820617676
    7. '       ' → logprob: -10.630520820617676
    8. 'si' → logprob: -11.255520820617676
    9. '```' → logprob: -11.255520820617676
    10. 'tmp' → logprob: -11.630520820617676

Token 611: ' le' (ID: 505)
  Prédit: ' nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nc' → logprob: -0.37953928112983704
    2. ' st' → logprob: -2.1295392513275146
    3. 'nc' → logprob: -2.3795392513275146
    4. ' i' → logprob: -3.1295392513275146
    5. ' nm' → logprob: -4.004539489746094
    6. 'st' → logprob: -4.129539489746094
    7. 'i' → logprob: -4.254539489746094
    8. ' res' → logprob: -5.754539489746094
    9. ' si' → logprob: -5.879539489746094
    10. 'nm' → logprob: -6.504539489746094

Token 612: ' compteur' (ID: 163344)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8110661506652832
    2. 'nc' → logprob: -1.5610661506652832
    3. 'i' → logprob: -1.6860661506652832
    4. ' nc' → logprob: -3.186066150665283
    5. ' st' → logprob: -3.436066150665283
    6. ' i' → logprob: -3.686066150665283
    7. 'si' → logprob: -3.936066150665283
    8. 'res' → logprob: -4.186066150665283
    9. 'nm' → logprob: -4.686066150665283
    10. ' res' → logprob: -5.186066150665283

Token 613: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015335931675508618
    2. '[' → logprob: -8.875153541564941
    3. 'i' → logprob: -12.125153541564941
    4. '[n' → logprob: -13.000153541564941
    5. 's' → logprob: -13.250153541564941
    6. ' [' → logprob: -14.125153541564941
    7. '```' → logprob: -14.250153541564941
    8. '[j' → logprob: -14.750153541564941
    9. '[I' → logprob: -14.875153541564941
    10. '>' → logprob: -15.250153541564941

Token 614: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00048119694110937417
    2. '[' → logprob: -7.750481128692627
    3. 'i' → logprob: -10.625481605529785
    4. ' [' → logprob: -11.625481605529785
    5. ' i' → logprob: -12.375481605529785
    6. '==' → logprob: -12.875481605529785
    7. '[n' → logprob: -13.000481605529785
    8. 's' → logprob: -13.625481605529785
    9. '[j' → logprob: -13.875481605529785
    10. '```' → logprob: -14.000481605529785

Token 615: ' supérieur' (ID: 98491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028400370851159096
    2. 'exact' → logprob: -4.528400421142578
    3. ' ' → logprob: -5.403400421142578
    4. '>' → logprob: -5.653400421142578
    5. '0' → logprob: -5.778400421142578
    6. '==' → logprob: -6.028400421142578
    7. '2' → logprob: -6.903400421142578
    8. '=' → logprob: -7.278400421142578
    9. 'sup' → logprob: -7.903400421142578
    10. ' égal' → logprob: -8.403400421142578

Token 616: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21056237816810608
    2. '       ' → logprob: -2.3355624675750732
    3. ' à' → logprob: -3.0855624675750732
    4. 'à' → logprob: -3.9605624675750732
    5. ' =' → logprob: -4.585562229156494
    6. '==' → logprob: -5.335562229156494
    7. '        ' → logprob: -5.960562229156494
    8. ' or' → logprob: -6.460562229156494
    9. ' ou' → logprob: -6.710562229156494
    10. '```' → logprob: -6.960562229156494

Token 617: ' ceux' (ID: 26863)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4141656160354614
    2. '0' → logprob: -1.6641656160354614
    3. 'st' → logprob: -2.414165496826172
    4. ' ' → logprob: -3.039165496826172
    5. ' st' → logprob: -4.664165496826172
    6. 'res' → logprob: -6.414165496826172
    7. ' res' → logprob: -7.164165496826172
    8. 'len' → logprob: -8.414165496826172
    9. '   ' → logprob: -9.289165496826172
    10. '=' → logprob: -10.039165496826172

Token 618: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.34749558568000793
    2. 'des' → logprob: -1.8474955558776855
    3. ' pour' → logprob: -2.9724955558776855
    4. ' for' → logprob: -3.4724955558776855
    5. 'pour' → logprob: -4.4724955558776855
    6. ' de' → logprob: -4.4724955558776855
    7. 'for' → logprob: -4.7224955558776855
    8. '[i' → logprob: -5.0974955558776855
    9. '[' → logprob: -5.7224955558776855
    10. '       ' → logprob: -5.7224955558776855

Token 619: ' autres' (ID: 18701)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8589947819709778
    2. 'aut' → logprob: -1.233994722366333
    3. ' autres' → logprob: -2.233994722366333
    4. 'res' → logprob: -3.108994722366333
    5. 'other' → logprob: -3.358994722366333
    6. 'a' → logprob: -4.483994960784912
    7. '1' → logprob: -4.733994960784912
    8. ' j' → logprob: -4.858994960784912
    9. 'x' → logprob: -4.983994960784912
    10. 'c' → logprob: -4.983994960784912

Token 620: ' couleurs' (ID: 54001)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.3470304012298584
    2. 'colors' → logprob: -1.3470304012298584
    3. ' indices' → logprob: -1.9720304012298584
    4. ' couleurs' → logprob: -2.5970304012298584
    5. ':' → logprob: -2.7220304012298584
    6. '[i' → logprob: -2.9720304012298584
    7. 's' → logprob: -2.9720304012298584
    8. ' colors' → logprob: -3.7220304012298584
    9. ',' → logprob: -3.8470304012298584
    10. ' for' → logprob: -4.2220306396484375

Token 621: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.268244206905365
    2. ',' → logprob: -2.2682442665100098
    3. ' and' → logprob: -2.6432442665100098
    4. '       ' → logprob: -3.7682442665100098
    5. ' :' → logprob: -4.01824426651001
    6. '[' → logprob: -5.26824426651001
    7. ':
' → logprob: -5.89324426651001
    8. 'and' → logprob: -5.89324426651001
    9. '           ' → logprob: -6.01824426651001
    10. ' or' → logprob: -6.51824426651001

Token 622: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8987065553665161
    2. '       ' → logprob: -1.0237065553665161
    3. 'if' → logprob: -1.8987065553665161
    4. ' for' → logprob: -3.0237064361572266
    5. 'for' → logprob: -3.7737064361572266
    6. '           ' → logprob: -5.523706436157227
    7. ' continue' → logprob: -6.648706436157227
    8. '        
' → logprob: -6.648706436157227
    9. ' ' → logprob: -6.898706436157227
    10. '        ' → logprob: -7.023706436157227

Token 623: ' incr' (ID: 52395)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10530736297369003
    2. 'continue' → logprob: -2.6053073406219482
    3. '       ' → logprob: -3.9803073406219482
    4. '           ' → logprob: -5.980307579040527
    5. '_continue' → logprob: -6.855307579040527
    6. 'for' → logprob: -6.980307579040527
    7. ':' → logprob: -7.355307579040527
    8. ' for' → logprob: -7.480307579040527
    9. ' continues' → logprob: -7.855307579040527
    10. 'contin' → logprob: -8.355307579040527

Token 624: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.13662728667259216
    2. 'ément' → logprob: -2.886627197265625
    3. 'emente' → logprob: -4.136627197265625
    4. 'nte' → logprob: -4.386627197265625
    5. 'ém' → logprob: -4.636627197265625
    6. 'mente' → logprob: -4.886627197265625
    7. '   ' → logprob: -5.386627197265625
    8. 'n' → logprob: -5.886627197265625
    9. 'ement' → logprob: -6.261627197265625
    10. '       ' → logprob: -6.386627197265625

Token 625: 'mente' (ID: 4186)
  Prédit: 'nte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nte' → logprob: -0.17894113063812256
    2. 'mente' → logprob: -1.9289411306381226
    3. 'm' → logprob: -5.178941249847412
    4. 'ment' → logprob: -5.678941249847412
    5. 'n' → logprob: -5.928941249847412
    6. '#' → logprob: -6.553941249847412
    7. 'mentation' → logprob: -7.178941249847412
    8. 'mp' → logprob: -7.678941249847412
    9. 'me' → logprob: -7.803941249847412
    10. 'mb' → logprob: -8.428940773010254

Token 626: ' le' (ID: 505)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.3976454436779022
    2. '       ' → logprob: -1.5226454734802246
    3. ' st' → logprob: -2.2726454734802246
    4. '   ' → logprob: -6.897645473480225
    5. '[' → logprob: -7.397645473480225
    6. ' res' → logprob: -7.522645473480225
    7. '	st' → logprob: -7.522645473480225
    8. ' for' → logprob: -7.647645473480225
    9. ' i' → logprob: -7.897645473480225
    10. '(st' → logprob: -7.897645473480225

Token 627: ' statut' (ID: 51401)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0062414840795099735
    2. 'res' → logprob: -5.756241321563721
    3. '```' → logprob: -7.131241321563721
    4. 'i' → logprob: -7.631241321563721
    5. ' st' → logprob: -7.881241321563721
    6. 'es' → logprob: -8.131241798400879
    7. 'space' → logprob: -8.756241798400879
    8. 'rest' → logprob: -9.381241798400879
    9. 'sp' → logprob: -9.756241798400879
    10. 'stat' → logprob: -9.881241798400879

Token 628: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010802914388477802
    2. '[' → logprob: -4.635802745819092
    3. '       ' → logprob: -7.010802745819092
    4. ' [' → logprob: -9.51080322265625
    5. '[j' → logprob: -10.88580322265625
    6. '        
' → logprob: -11.26080322265625
    7. '   ' → logprob: -12.01080322265625
    8. 'i' → logprob: -12.13580322265625
    9. '	' → logprob: -12.38580322265625
    10. '        ' → logprob: -12.88580322265625

Token 629: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029708107467740774
    2. ',' → logprob: -6.6279706954956055
    3. '[i' → logprob: -7.3779706954956055
    4. '[' → logprob: -7.8779706954956055
    5. '        
' → logprob: -8.377970695495605
    6. '           ' → logprob: -10.002970695495605
    7. 's' → logprob: -10.252970695495605
    8. '        ' → logprob: -10.377970695495605
    9. '   ' → logprob: -10.502970695495605
    10. '	' → logprob: -10.752970695495605

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014706466346979141
    2. '[' → logprob: -5.389706611633301
    3. '[i' → logprob: -5.889706611633301
    4. '           ' → logprob: -6.514706611633301
    5. ' and' → logprob: -6.514706611633301
    6. ' if' → logprob: -6.764706611633301
    7. '        
' → logprob: -7.014706611633301
    8. ',' → logprob: -7.764706611633301
    9. '        ' → logprob: -8.0147066116333
    10. 'if' → logprob: -8.1397066116333

Token 631: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5224574208259583
    2. 'if' (adapté à ' if') → logprob: -1.0224573612213135
    3. '       ' → logprob: -3.6474573612213135
    4. ' for' → logprob: -4.397457599639893
    5. 'for' → logprob: -4.772457599639893
    6. ' while' → logprob: -8.897457122802734
    7. 'while' → logprob: -8.897457122802734
    8. '        
' → logprob: -11.147457122802734
    9. '   ' → logprob: -11.272457122802734
    10. ' i' → logprob: -11.397457122802734

Token 632: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.6823747754096985
    2. ' nc' → logprob: -0.8073747754096985
    3. ' all' → logprob: -3.5573747158050537
    4. 'all' → logprob: -5.182374954223633
    5. ' max' → logprob: -5.557374954223633
    6. 'max' → logprob: -5.682374954223633
    7. '   ' → logprob: -6.307374954223633
    8. ' i' → logprob: -6.557374954223633
    9. 'i' → logprob: -7.182374954223633
    10. ' any' → logprob: -7.307374954223633

Token 633: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.745069499127567e-05
    2. '[' → logprob: -9.37508773803711
    3. '>' → logprob: -14.37508773803711
    4. ' [' → logprob: -14.62508773803711
    5. 'i' → logprob: -14.87508773803711
    6. '[I' → logprob: -15.37508773803711
    7. '   ' → logprob: -15.87508773803711
    8. '[j' → logprob: -16.00008773803711
    9. '```' → logprob: -16.00008773803711
    10. '[
' → logprob: -16.37508773803711

Token 634: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13620804250240326
    2. '>' → logprob: -2.2612080574035645
    3. '[' → logprob: -4.2612080574035645
    4. ' >' → logprob: -5.1362080574035645
    5. ']' → logprob: -6.6362080574035645
    6. ']>' → logprob: -7.5112080574035645
    7. '>[' → logprob: -8.011207580566406
    8. ' [' → logprob: -8.136207580566406
    9. '   ' → logprob: -8.261207580566406
    10. ')>' → logprob: -9.511207580566406

Token 635: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06412369012832642
    2. ' >' → logprob: -2.8141236305236816
    3. '[' → logprob: -6.814123630523682
    4. '==' → logprob: -7.314123630523682
    5. '[i' → logprob: -8.93912410736084
    6. ' ==' → logprob: -9.43912410736084
    7. '>[' → logprob: -9.68912410736084
    8. ' ' → logprob: -10.56412410736084
    9. '>=' → logprob: -10.56412410736084
    10. '>
' → logprob: -10.81412410736084

Token 636: ' nc' (ID: 39841)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0982859805226326
    2. 'st' → logprob: -2.7232859134674072
    3. ' max' → logprob: -4.473286151885986
    4. 'min' → logprob: -4.848286151885986
    5. 'sum' → logprob: -5.473286151885986
    6. 'nc' → logprob: -5.723286151885986
    7. 'all' → logprob: -7.223286151885986
    8. ' st' → logprob: -9.223285675048828
    9. ' min' → logprob: -9.473285675048828
    10. '1' → logprob: -9.598285675048828

Token 637: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3190906047821045
    2. '[i' → logprob: -2.0690906047821045
    3. '[max' → logprob: -2.1940906047821045
    4. '[d' → logprob: -4.194090843200684
    5. 'max' → logprob: -4.569090843200684
    6. '[(' → logprob: -5.444090843200684
    7. '0' → logprob: -6.194090843200684
    8. '[min' → logprob: -6.944090843200684
    9. ' [' → logprob: -7.694090843200684
    10. 'd' → logprob: -7.819090843200684

Token 638: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019001109525561333
    2. '[' → logprob: -4.644001007080078
    3. '[j' → logprob: -6.144001007080078
    4. '][' → logprob: -6.269001007080078
    5. '].' → logprob: -6.519001007080078
    6. '.index' → logprob: -6.894001007080078
    7. ']' → logprob: -7.394001007080078
    8. 'i' → logprob: -7.644001007080078
    9. '[(' → logprob: -8.394001007080078
    10. '   ' → logprob: -8.519001007080078

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. '3' → logprob: -10.750076293945312
    3. ' ' → logprob: -10.812576293945312
    4. '2' → logprob: -11.250076293945312
    5. 'i' → logprob: -11.875076293945312
    6. '0' → logprob: -13.500076293945312
    7. '```' → logprob: -13.875076293945312
    8. '(i' → logprob: -14.000076293945312
    9. 'len' → logprob: -14.062576293945312
    10. ']' → logprob: -14.375076293945312

Token 640: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4017416536808014
    2. ']:' → logprob: -1.276741623878479
    3. ']+' → logprob: -3.6517417430877686
    4. ']:
' → logprob: -3.7767417430877686
    5. ' ]' → logprob: -6.4017415046691895
    6. '[' → logprob: -8.151741981506348
    7. '[i' → logprob: -8.151741981506348
    8. ']+=' → logprob: -8.651741981506348
    9. ':' → logprob: -9.026741981506348
    10. ' and' → logprob: -9.151741981506348

Token 641: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05480249971151352
    2. ' and' → logprob: -3.179802417755127
    3. ' :' → logprob: -5.429802417755127
    4. 'and' → logprob: -6.179802417755127
    5. '+' → logprob: -6.429802417755127
    6. '[' → logprob: -6.804802417755127
    7. ':
' → logprob: -7.304802417755127
    8. '       ' → logprob: -7.804802417755127
    9. ' +' → logprob: -7.804802417755127
    10. ']' → logprob: -8.304802894592285

Token 642: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.5577128529548645
    2. ' nc' → logprob: -0.9327128529548645
    3. ' (' → logprob: -4.307713031768799
    4. '(i' → logprob: -5.182713031768799
    5. '(n' → logprob: -5.182713031768799
    6. ' i' → logprob: -6.057713031768799
    7. 'i' → logprob: -6.182713031768799
    8. '(' → logprob: -6.682713031768799
    9. 'st' → logprob: -8.18271255493164
    10. '0' → logprob: -8.30771255493164

Token 643: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010133992182090878
    2. '[' → logprob: -7.751013278961182
    3. 'i' → logprob: -7.751013278961182
    4. '[
' → logprob: -10.25101375579834
    5. '```' → logprob: -10.62601375579834
    6. '(i' → logprob: -11.00101375579834
    7. '   ' → logprob: -11.62601375579834
    8. ' i' → logprob: -11.75101375579834
    9. ' [' → logprob: -11.87601375579834
    10. '       ' → logprob: -12.12601375579834

Token 644: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6376518607139587
    2. '[i' → logprob: -0.8876518607139587
    3. 'i' → logprob: -4.3876519203186035
    4. '[' → logprob: -4.3876519203186035
    5. ']+' → logprob: -4.5126519203186035
    6. ']!=' → logprob: -4.5126519203186035
    7. '+' → logprob: -5.5126519203186035
    8. ']>' → logprob: -5.6376519203186035
    9. '[(' → logprob: -7.3876519203186035
    10. '```' → logprob: -7.5126519203186035

Token 645: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8707648515701294
    2. '[i' → logprob: -1.1207648515701294
    3. ']' → logprob: -2.24576473236084
    4. ' >' → logprob: -3.24576473236084
    5. '[' → logprob: -3.37076473236084
    6. '+' → logprob: -3.62076473236084
    7. '!=' → logprob: -4.74576473236084
    8. '```' → logprob: -5.12076473236084
    9. ']>' → logprob: -5.12076473236084
    10. ' !=' → logprob: -5.24576473236084

Token 646: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.01596469059586525
    2. ' nc' → logprob: -4.265964508056641
    3. '0' → logprob: -6.765964508056641
    4. 'max' → logprob: -8.26596450805664
    5. '   ' → logprob: -9.64096450805664
    6. ' ' → logprob: -9.64096450805664
    7. 'min' → logprob: -10.26596450805664
    8. '(n' → logprob: -10.39096450805664
    9. '  ' → logprob: -10.51596450805664
    10. 'sum' → logprob: -11.01596450805664

Token 647: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20480456948280334
    2. '[(' → logprob: -1.704804539680481
    3. '(i' → logprob: -5.829804420471191
    4. 'i' → logprob: -8.079804420471191
    5. '((' → logprob: -10.204804420471191
    6. '[n' → logprob: -10.454804420471191
    7. '[' → logprob: -10.704804420471191
    8. ' (' → logprob: -11.454804420471191
    9. '   ' → logprob: -11.829804420471191
    10. '[j' → logprob: -12.329804420471191

Token 648: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0034730788320302963
    2. '[i' → logprob: -7.003473281860352
    3. '1' → logprob: -7.253473281860352
    4. '+' → logprob: -7.378473281860352
    5. 'i' → logprob: -7.753473281860352
    6. ']' → logprob: -8.378473281860352
    7. '(i' → logprob: -8.628473281860352
    8. '[' → logprob: -9.378473281860352
    9. ' -' → logprob: -9.628473281860352
    10. '   ' → logprob: -9.753473281860352

Token 649: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016742534353397787
    2. '3' → logprob: -8.750167846679688
    3. 'i' → logprob: -13.250167846679688
    4. '``' → logprob: -13.375167846679688
    5. '(' → logprob: -13.750167846679688
    6. '1' → logprob: -13.875167846679688
    7. '
' → logprob: -14.562667846679688
    8. '```' → logprob: -14.625167846679688
    9. ' ' → logprob: -14.750167846679688
    10. '(i' → logprob: -14.750167846679688

Token 650: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.17283883690834045
    2. ']:
' → logprob: -2.5478389263153076
    3. ':' → logprob: -3.0478389263153076
    4. ']' → logprob: -4.1728386878967285
    5. '):' → logprob: -4.7978386878967285
    6. '       ' → logprob: -5.4228386878967285
    7. ':
' → logprob: -6.2978386878967285
    8. '):
' → logprob: -6.5478386878967285
    9. ' ]' → logprob: -7.5478386878967285
    10. ' and' → logprob: -8.547839164733887

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38825473189353943
    2. '       ' → logprob: -1.1382547616958618
    3. '```' → logprob: -7.638254642486572
    4. '	       ' → logprob: -8.01325511932373
    5. '		' → logprob: -8.63825511932373
    6. '               ' → logprob: -9.38825511932373
    7. '	' → logprob: -9.63825511932373
    8. ' ' → logprob: -10.01325511932373
    9. '        
' → logprob: -10.51325511932373
    10. '​' → logprob: -10.51325511932373

Token 652: ' st' (ID: 420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02449805475771427
    2. '           ' → logprob: -4.774497985839844
    3. ' ' → logprob: -5.149497985839844
    4. '        
' → logprob: -6.024497985839844
    5. ' st' → logprob: -6.524497985839844
    6. '	' → logprob: -6.899497985839844
    7. '               ' → logprob: -7.024497985839844
    8. '	st' → logprob: -7.149497985839844
    9. 'st' (adapté à ' st') → logprob: -7.399497985839844
    10. '        ' → logprob: -7.399497985839844

Token 653: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0003000696888193488
    2. '[i' → logprob: -8.125300407409668
    3. 'т' → logprob: -13.125300407409668
    4. 'i' → logprob: -14.250300407409668
    5. '[' → logprob: -14.875300407409668
    6. '[t' → logprob: -15.125300407409668
    7. '   ' → logprob: -16.12529945373535
    8. 'tt' → logprob: -16.25029945373535
    9. '       ' → logprob: -16.50029945373535
    10. ' [' → logprob: -16.87529945373535

Token 654: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.625004768371582
    3. '=' → logprob: -14.125004768371582
    4. 'i' → logprob: -14.375004768371582
    5. ' [' → logprob: -15.375004768371582
    6. ' =' → logprob: -16.3750057220459
    7. '[I' → logprob: -16.6250057220459
    8. '
' → logprob: -17.0000057220459
    9. '```' → logprob: -17.3750057220459
    10. '=i' → logprob: -17.5000057220459

Token 655: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04882069677114487
    2. ']+=' → logprob: -3.048820734024048
    3. '[i' → logprob: -8.798820495605469
    4. '+=' → logprob: -9.673820495605469
    5. ']+' → logprob: -11.923820495605469
    6. '[' → logprob: -12.048820495605469
    7. ' ]' → logprob: -13.048820495605469
    8. ' +=' → logprob: -13.173820495605469
    9. '   ' → logprob: -13.423820495605469
    10. '```' → logprob: -14.673820495605469

Token 656: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001284044818021357
    2. ' +=' → logprob: -6.751284122467041
    3. '=' → logprob: -9.126283645629883
    4. ']+=' → logprob: -12.251283645629883
    5. '+' → logprob: -16.626283645629883
    6. ' =' → logprob: -17.251283645629883
    7. '[' → logprob: -17.876283645629883
    8. '+='' → logprob: -18.126283645629883
    9. '+=(' → logprob: -18.376283645629883
    10. '+="' → logprob: -19.126283645629883

Token 657: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. 'nm' → logprob: -11.750016212463379
    3. 'res' → logprob: -12.500016212463379
    4. ' ' → logprob: -12.750016212463379
    5. '2' → logprob: -14.750016212463379
    6. '   ' → logprob: -14.875016212463379
    7. '```' → logprob: -16.375015258789062
    8. 'st' → logprob: -16.625015258789062
    9. '(' → logprob: -16.625015258789062
    10. 'n' → logprob: -16.937515258789062

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -11.875009536743164
    3. 'res' → logprob: -13.500009536743164
    4. 'st' → logprob: -14.625009536743164
    5. '3' → logprob: -15.312509536743164
    6. 'nm' → logprob: -15.625009536743164
    7. ' ' → logprob: -15.687509536743164
    8. '
' → logprob: -16.062509536743164
    9. '   ' → logprob: -16.437509536743164
    10. '10' → logprob: -16.937509536743164

Token 659: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03882293030619621
    2. 'else' → logprob: -4.288823127746582
    3. 'elif' → logprob: -4.663823127746582
    4. ' else' → logprob: -5.038823127746582
    5. ' elif' → logprob: -6.163823127746582
    6. '<|end|>' → logprob: -6.163823127746582
    7. ')' → logprob: -6.788823127746582
    8. '        ' → logprob: -7.538823127746582
    9. '+' → logprob: -7.788823127746582
    10. '#' (adapté à ' #') → logprob: -7.913823127746582

Token 662: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5481494665145874
    2. ' else' → logprob: -1.1731494665145874
    3. 'elif' → logprob: -2.548149585723877
    4. ' elif' → logprob: -3.673149585723877
    5. '       ' → logprob: -4.798149585723877
    6. ' ' → logprob: -9.048149108886719
    7. 'el' → logprob: -9.048149108886719
    8. '   ' → logprob: -9.298149108886719
    9. '```' → logprob: -9.298149108886719
    10. '        ' → logprob: -9.673149108886719

Token 663: ' le' (ID: 505)
  Prédit: ' nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nc' → logprob: -0.5191008448600769
    2. 'nc' → logprob: -1.0191009044647217
    3. ' st' → logprob: -3.6441009044647217
    4. 'st' → logprob: -5.144100666046143
    5. ' si' → logprob: -6.269100666046143
    6. ' (' → logprob: -6.769100666046143
    7. 'si' → logprob: -7.019100666046143
    8. ' nm' → logprob: -7.019100666046143
    9. 's' → logprob: -7.269100666046143
    10. ' all' → logprob: -7.519100666046143

Token 664: ' compteur' (ID: 163344)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.12209813296794891
    2. ' nc' → logprob: -2.372098207473755
    3. 'i' → logprob: -4.872097969055176
    4. 'si' → logprob: -5.872097969055176
    5. 'st' → logprob: -5.872097969055176
    6. ' i' → logprob: -6.372097969055176
    7. ' si' → logprob: -6.747097969055176
    8. 'nm' → logprob: -6.872097969055176
    9. ' st' → logprob: -6.997097969055176
    10. 'n' → logprob: -7.372097969055176

Token 665: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016942229121923447
    2. '[' → logprob: -6.751694202423096
    3. 'i' → logprob: -8.001694679260254
    4. ' [' → logprob: -10.001694679260254
    5. '[j' → logprob: -10.751694679260254
    6. 's' → logprob: -10.876694679260254
    7. ' i' → logprob: -11.251694679260254
    8. '[n' → logprob: -11.501694679260254
    9. '```' → logprob: -11.626694679260254
    10. '==' → logprob: -12.001694679260254

Token 666: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3825426995754242
    2. ' <' → logprob: -2.007542610168457
    3. '==' → logprob: -2.257542610168457
    4. '[i' → logprob: -2.882542610168457
    5. ' <=' → logprob: -4.507542610168457
    6. '<' → logprob: -5.382542610168457
    7. ' !=' → logprob: -5.632542610168457
    8. '<=' → logprob: -6.257542610168457
    9. '[' → logprob: -7.507542610168457
    10. '!=' → logprob: -7.882542610168457

Token 667: ' inférieur' (ID: 191498)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.7629775404930115
    2. '==' → logprob: -2.2629776000976562
    3. 'strict' → logprob: -2.3879776000976562
    4. 'equal' → logprob: -2.3879776000976562
    5. 'exact' → logprob: -2.8879776000976562
    6. 'égal' → logprob: -3.0129776000976562
    7. '<' → logprob: -3.0129776000976562
    8. ' equal' → logprob: -3.7629776000976562
    9. ' ==' → logprob: -4.137977600097656
    10. ' ég' → logprob: -4.512977600097656

Token 668: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.45801252126693726
    2. 'à' → logprob: -1.708012580871582
    3. '[i' → logprob: -2.708012580871582
    4. '       ' → logprob: -3.208012580871582
    5. ' to' → logprob: -3.583012580871582
    6. ' i' → logprob: -4.583012580871582
    7. 'to' → logprob: -4.833012580871582
    8. 'i' → logprob: -4.833012580871582
    9. ' aux' → logprob: -5.208012580871582
    10. '<i' → logprob: -5.333012580871582

Token 669: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.26855340600013733
    2. '=' → logprob: -2.7685534954071045
    3. 'ég' → logprob: -2.7685534954071045
    4. '==' → logprob: -3.3935534954071045
    5. 'eg' → logprob: -3.6435534954071045
    6. ' ég' → logprob: -3.8935534954071045
    7. ' égal' → logprob: -4.518553256988525
    8. 'à' → logprob: -5.268553256988525
    9. 'nc' → logprob: -5.893553256988525
    10. 'equal' → logprob: -6.018553256988525

Token 670: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.48434382677078247
    2. ' aux' → logprob: -1.7343437671661377
    3. 'à' → logprob: -2.4843437671661377
    4. '       ' → logprob: -2.9843437671661377
    5. 'aux' → logprob: -4.109344005584717
    6. ' to' → logprob: -4.484344005584717
    7. '           ' → logprob: -4.609344005584717
    8. '[i' → logprob: -5.109344005584717
    9. '        ' → logprob: -5.109344005584717
    10. '   ' → logprob: -5.859344005584717

Token 671: ' deux' (ID: 10301)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.4993678331375122
    2. ' nc' → logprob: -2.1243677139282227
    3. 'max' → logprob: -2.4993677139282227
    4. ' max' → logprob: -2.6243677139282227
    5. ' min' → logprob: -2.7493677139282227
    6. 'min' → logprob: -3.4993677139282227
    7. ' st' → logprob: -4.249367713928223
    8. 'st' → logprob: -5.499367713928223
    9. '0' → logprob: -6.749367713928223
    10. ' ' → logprob: -7.124367713928223

Token 672: ' autres' (ID: 18701)
  Prédit: ' autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.6402198076248169
    2. 'nc' → logprob: -1.390219807624817
    3. ' nc' → logprob: -2.2652196884155273
    4. '[i' → logprob: -3.3902196884155273
    5. ' voisins' → logprob: -4.140219688415527
    6. ' i' → logprob: -4.265219688415527
    7. ' previous' → logprob: -4.640219688415527
    8. 'i' → logprob: -4.765219688415527
    9. ' other' → logprob: -5.265219688415527
    10. ' ' → logprob: -5.265219688415527

Token 673: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14619623124599457
    2. 'and' → logprob: -3.146196126937866
    3. ',' → logprob: -3.521196126937866
    4. '[i' → logprob: -3.521196126937866
    5. ':' → logprob: -3.771196126937866
    6. ' ' → logprob: -6.146196365356445
    7. ' et' → logprob: -6.271196365356445
    8. 'i' → logprob: -6.271196365356445
    9. ' i' → logprob: -7.021196365356445
    10. ' ,' → logprob: -7.021196365356445

Token 674: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6378315687179565
    2. '           ' → logprob: -1.0128315687179565
    3. ':' → logprob: -2.887831687927246
    4. '   ' → logprob: -4.887831687927246
    5. ' if' → logprob: -4.887831687927246
    6. '               ' → logprob: -5.262831687927246
    7. '        ' → logprob: -5.512831687927246
    8. ' continue' → logprob: -5.512831687927246
    9. 'if' → logprob: -5.887831687927246
    10. '```' → logprob: -6.012831687927246

Token 675: ' réduit' (ID: 120775)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8805302381515503
    2. 'continue' → logprob: -1.5055302381515503
    3. 'else' → logprob: -1.7555302381515503
    4. '       ' → logprob: -2.38053035736084
    5. 'elif' → logprob: -3.38053035736084
    6. ' else' → logprob: -3.88053035736084
    7. '```' → logprob: -4.25553035736084
    8. 'contin' → logprob: -4.63053035736084
    9. '           ' → logprob: -5.13053035736084
    10. 'st' → logprob: -5.88053035736084

Token 676: ' le' (ID: 505)
  Prédit: ' st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.7676502466201782
    2. 'st' → logprob: -0.8926502466201782
    3. '       ' → logprob: -2.5176501274108887
    4. ' nm' → logprob: -4.017650127410889
    5. '   ' → logprob: -5.392650127410889
    6. 'nm' → logprob: -5.517650127410889
    7. '           ' → logprob: -5.642650127410889
    8. ' le' → logprob: -6.017650127410889
    9. 'le' → logprob: -6.267650127410889
    10. 'res' → logprob: -6.517650127410889

Token 677: ' nombre' (ID: 9733)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.04864402860403061
    2. 'nm' → logprob: -3.4236440658569336
    3. 'space' → logprob: -5.423644065856934
    4. ' nm' → logprob: -5.923644065856934
    5. ' st' → logprob: -6.048644065856934
    6. 'es' → logprob: -6.423644065856934
    7. 'res' → logprob: -7.298644065856934
    8. 's' → logprob: -7.923644065856934
    9. ' espace' → logprob: -8.048644065856934
    10. 'esp' → logprob: -8.298644065856934

Token 678: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7970935702323914
    2. 'nm' → logprob: -2.172093629837036
    3. '   ' → logprob: -2.297093629837036
    4. 'm' → logprob: -2.547093629837036
    5. '       ' → logprob: -2.922093629837036
    6. '           ' → logprob: -2.922093629837036
    7. 'de' → logprob: -3.047093629837036
    8. ' nm' → logprob: -3.172093629837036
    9. '_nm' → logprob: -4.797093391418457
    10. 'n' → logprob: -5.047093391418457

Token 679: ' résultats' (ID: 48985)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.19777120649814606
    2. ' nm' → logprob: -1.8227711915969849
    3. '1' → logprob: -4.697771072387695
    4. 'm' → logprob: -6.072771072387695
    5. 'st' → logprob: -6.697771072387695
    6. 'res' → logprob: -6.822771072387695
    7. ' ' → logprob: -7.197771072387695
    8. ' res' → logprob: -7.197771072387695
    9. ' st' → logprob: -7.697771072387695
    10. '0' → logprob: -8.072771072387695

Token 680: ' possibles' (ID: 97753)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6388041973114014
    2. '       ' → logprob: -1.3888041973114014
    3. '=' → logprob: -2.3888041973114014
    4. '           ' → logprob: -2.8888041973114014
    5. '-=' → logprob: -3.7638041973114014
    6. '[i' → logprob: -4.1388044357299805
    7. ' *=' → logprob: -5.1388044357299805
    8. ',' → logprob: -5.3888044357299805
    9. '   ' → logprob: -5.5138044357299805
    10. '[' → logprob: -5.6388044357299805

Token 681: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17142748832702637
    2. '           ' → logprob: -2.5464274883270264
    3. '=' → logprob: -4.1714277267456055
    4. ' +=' → logprob: -4.4214277267456055
    5. ' -=' → logprob: -4.5464277267456055
    6. ' =' → logprob: -4.7964277267456055
    7. ',' → logprob: -5.2964277267456055
    8. '        ' → logprob: -5.5464277267456055
    9. ' and' → logprob: -5.9214277267456055
    10. ':' → logprob: -6.1714277267456055

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013285052962601185
    2. '           ' → logprob: -5.013285160064697
    3. ' and' → logprob: -6.638285160064697
    4. ':' → logprob: -6.888285160064697
    5. '        ' → logprob: -7.013285160064697
    6. '   ' → logprob: -7.388285160064697
    7. ' =' → logprob: -7.763285160064697
    8. ' +=' → logprob: -8.013284683227539
    9. ',' → logprob: -8.263284683227539
    10. '=' → logprob: -8.763284683227539

Token 683: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.809971034526825
    2. ' else' → logprob: -1.4349710941314697
    3. 'else' → logprob: -1.5599710941314697
    4. 'elif' (adapté à ' elif') → logprob: -3.5599710941314697
    5. ' elif' → logprob: -3.8099710941314697
    6. ' if' → logprob: -3.8099710941314697
    7. ' nm' → logprob: -4.059970855712891
    8. 'if' → logprob: -4.934970855712891
    9. 'nm' → logprob: -5.559970855712891
    10. '           ' → logprob: -6.559970855712891

Token 684: ' nc' (ID: 39841)
  Prédit: ' nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nc' → logprob: -0.15108844637870789
    2. 'nc' → logprob: -2.7760884761810303
    3. ' nm' → logprob: -3.1510884761810303
    4. ' st' → logprob: -3.6510884761810303
    5. 'nm' → logprob: -5.526088237762451
    6. 'st' → logprob: -5.776088237762451
    7. ' res' → logprob: -7.651088237762451
    8. 'n' → logprob: -8.27608871459961
    9. 'res' → logprob: -8.40108871459961
    10. 'False' → logprob: -9.02608871459961

Token 685: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008429800509475172
    2. '[' → logprob: -7.125843048095703
    3. '       ' → logprob: -11.375843048095703
    4. '```' → logprob: -12.000843048095703
    5. ' [' → logprob: -12.375843048095703
    6. 'i' → logprob: -12.625843048095703
    7. '           ' → logprob: -13.000843048095703
    8. '   ' → logprob: -13.000843048095703
    9. '[j' → logprob: -13.625843048095703
    10. '[
' → logprob: -14.000843048095703

Token 686: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6284635663032532
    2. ']' → logprob: -0.8784635663032532
    3. ']<=' → logprob: -3.8784635066986084
    4. '<=' → logprob: -4.2534637451171875
    5. ' <=' → logprob: -4.8784637451171875
    6. ']==' → logprob: -5.7534637451171875
    7. '[' → logprob: -6.3784637451171875
    8. '][' → logprob: -6.5034637451171875
    9. '   ' → logprob: -7.2534637451171875
    10. ' ]' → logprob: -8.253463745117188

Token 687: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7794470191001892
    2. ' <=' → logprob: -0.9044470191001892
    3. '[i' → logprob: -2.279447078704834
    4. '==' → logprob: -4.154447078704834
    5. ' ==' → logprob: -4.779447078704834
    6. '[' → logprob: -4.904447078704834
    7. ']<=' → logprob: -7.654447078704834
    8. ' <' → logprob: -7.904447078704834
    9. ']' → logprob: -8.029446601867676
    10. '```' → logprob: -8.154446601867676

Token 688: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.011795262806117535
    2. 'min' → logprob: -5.3867950439453125
    3. ' nc' → logprob: -5.3867950439453125
    4. 'st' → logprob: -6.5117950439453125
    5. 'max' → logprob: -7.3867950439453125
    6. ' min' → logprob: -8.261795043945312
    7. '0' → logprob: -9.386795043945312
    8. ' st' → logprob: -10.386795043945312
    9. ' ' → logprob: -10.886795043945312
    10. 'n' → logprob: -11.261795043945312

Token 689: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004243587900418788
    2. '[(' → logprob: -8.0004243850708
    3. '[' → logprob: -9.5004243850708
    4. 'i' → logprob: -12.0004243850708
    5. '[j' → logprob: -12.5004243850708
    6. '(i' → logprob: -13.8754243850708
    7. '[
' → logprob: -14.1254243850708
    8. '
' → logprob: -14.7504243850708
    9. '[-' → logprob: -15.0004243850708
    10. '[min' → logprob: -15.2504243850708

Token 690: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0112204160541296
    2. '[i' → logprob: -5.136220455169678
    3. '[' → logprob: -5.386220455169678
    4. '[-' → logprob: -7.886220455169678
    5. '[(' → logprob: -8.38621997833252
    6. '1' → logprob: -10.38621997833252
    7. '0' → logprob: -10.51121997833252
    8. '(i' → logprob: -11.63621997833252
    9. '   ' → logprob: -12.01121997833252
    10. 'i' → logprob: -12.13621997833252

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029325371142476797
    2. '2' → logprob: -6.002932548522949
    3. '3' → logprob: -8.00293254852295
    4. '0' → logprob: -10.00293254852295
    5. 'i' → logprob: -10.00293254852295
    6. '-' → logprob: -12.00293254852295
    7. 'res' → logprob: -13.25293254852295
    8. '#' → logprob: -13.31543254852295
    9. '```' → logprob: -13.37793254852295
    10. ']' → logprob: -13.50293254852295

Token 692: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020415756851434708
    2. ' and' → logprob: -4.645415782928467
    3. 'and' → logprob: -4.645415782928467
    4. ']:' → logprob: -7.770415782928467
    5. ' ]' → logprob: -8.520415306091309
    6. ' or' → logprob: -9.020415306091309
    7. ']:
' → logprob: -9.020415306091309
    8. 'or' → logprob: -10.395415306091309
    9. ']-' → logprob: -11.020415306091309
    10. ']+' → logprob: -11.020415306091309

Token 693: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19951844215393066
    2. 'and' → logprob: -1.8245184421539307
    3. ' or' → logprob: -3.9495184421539307
    4. 'or' → logprob: -8.324518203735352
    5. ' ' → logprob: -10.824518203735352
    6. '        ' → logprob: -11.699518203735352
    7. '       ' → logprob: -11.824518203735352
    8. '   ' → logprob: -11.949518203735352
    9. '    ' → logprob: -12.074518203735352
    10. '           ' → logprob: -12.449518203735352

Token 694: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.38693249225616455
    2. ' nc' → logprob: -1.1369324922561646
    3. ' ' → logprob: -11.511932373046875
    4. ' ' → logprob: -11.511932373046875
    5. '_nc' → logprob: -11.511932373046875
    6. '   ' → logprob: -11.636932373046875
    7. '.nc' → logprob: -12.011932373046875
    8. 'n' → logprob: -12.261932373046875
    9. '  ' → logprob: -13.511932373046875
    10. '```' → logprob: -13.761932373046875

Token 695: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.62501335144043
    3. 'i' → logprob: -12.62501335144043
    4. '[
' → logprob: -14.75001335144043
    5. '```' → logprob: -15.37501335144043
    6. '(i' → logprob: -15.87501335144043
    7. ']' → logprob: -17.00001335144043
    8. '`' → logprob: -17.00001335144043
    9. '{i' → logprob: -17.12501335144043
    10. '[I' → logprob: -17.25001335144043

Token 696: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001706963055767119
    2. ']' → logprob: -6.751707077026367
    3. '][' → logprob: -8.626707077026367
    4. '[' → logprob: -8.876707077026367
    5. 'i' → logprob: -9.251707077026367
    6. ']<=' → logprob: -10.251707077026367
    7. ']==' → logprob: -10.626707077026367
    8. '<=' → logprob: -10.876707077026367
    9. '<i' → logprob: -11.626707077026367
    10. '```' → logprob: -11.876707077026367

Token 697: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16801895201206207
    2. '<=' → logprob: -1.9180189371109009
    3. '[i' → logprob: -5.043018817901611
    4. '>' → logprob: -7.668018817901611
    5. ' >' → logprob: -8.04301929473877
    6. ' ==' → logprob: -9.04301929473877
    7. '==' → logprob: -9.29301929473877
    8. ' >=' → logprob: -9.79301929473877
    9. ' ' → logprob: -10.04301929473877
    10. '[' → logprob: -10.04301929473877

Token 698: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.1797526776790619
    2. ' nc' → logprob: -1.8047527074813843
    3. ' ' → logprob: -12.554752349853516
    4. '_nc' → logprob: -13.679752349853516
    5. '   ' → logprob: -14.054752349853516
    6. '.nc' → logprob: -14.054752349853516
    7. '  ' → logprob: -14.804752349853516
    8. 'n' → logprob: -14.804752349853516
    9. '0' → logprob: -15.429752349853516
    10. '
' → logprob: -15.554752349853516

Token 699: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013403621269389987
    2. 'i' → logprob: -6.626340389251709
    3. '[(' → logprob: -11.62633991241455
    4. '(i' → logprob: -14.00133991241455
    5. '[
' → logprob: -14.00133991241455
    6. '{i' → logprob: -14.00133991241455
    7. '[' → logprob: -14.25133991241455
    8. '-' → logprob: -14.50133991241455
    9. '2' → logprob: -14.62633991241455
    10. '[-' → logprob: -15.37633991241455

Token 700: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -13.000004768371582
    3. 'i' → logprob: -14.375004768371582
    4. ' -' → logprob: -14.750004768371582
    5. '[i' → logprob: -15.500004768371582
    6. ']' → logprob: -15.625004768371582
    7. '   ' → logprob: -15.750004768371582
    8. '[' → logprob: -16.250003814697266
    9. '```' → logprob: -16.375003814697266
    10. '(i' → logprob: -16.500003814697266

Token 701: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.0
    3. ' ' → logprob: -16.75
    4. '```' → logprob: -17.0
    5. '0' → logprob: -17.625
    6. '3' → logprob: -18.25
    7. '   ' → logprob: -18.6875
    8. '``' → logprob: -19.125
    9. '-' → logprob: -19.375
    10. '[' → logprob: -19.5625

Token 702: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32631030678749084
    2. ':' → logprob: -2.076310396194458
    3. '):
' → logprob: -2.451310396194458
    4. '           ' → logprob: -3.451310396194458
    5. '       ' → logprob: -3.951310396194458
    6. ']:
' → logprob: -4.451310157775879
    7. '):' → logprob: -6.576310157775879
    8. ')' → logprob: -7.576310157775879
    9. ']' → logprob: -7.701310157775879
    10. ' and' → logprob: -7.826310157775879

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9601304531097412
    2. 'nm' → logprob: -1.0851304531097412
    3. '       ' → logprob: -2.585130453109741
    4. '		' → logprob: -2.710130453109741
    5. ' nm' → logprob: -2.835130453109741
    6. '	       ' → logprob: -2.960130453109741
    7. '```' → logprob: -5.33513069152832
    8. '	   ' → logprob: -5.33513069152832
    9. '	' → logprob: -5.46013069152832
    10. '		   ' → logprob: -5.83513069152832

Token 704: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' (adapté à ' nm') → logprob: -0.003991254139691591
    2. 'res' → logprob: -6.12899112701416
    3. ' nm' → logprob: -6.62899112701416
    4. '           ' → logprob: -7.75399112701416
    5. '   ' → logprob: -11.25399112701416
    6. '               ' → logprob: -11.37899112701416
    7. '_nm' → logprob: -11.37899112701416
    8. '       ' → logprob: -12.25399112701416
    9. '
' → logprob: -12.75399112701416
    10. ' res' → logprob: -13.12899112701416

Token 705: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.08289546519517899
    2. '=' → logprob: -2.582895517349243
    3. ' *=' → logprob: -5.707895278930664
    4. '*' → logprob: -7.957895278930664
    5. ' =' → logprob: -8.207895278930664
    6. '//=' → logprob: -10.207895278930664
    7. '```' → logprob: -11.957895278930664
    8. '%=' → logprob: -12.582895278930664
    9. '	' → logprob: -12.832895278930664
    10. '+=' → logprob: -13.082895278930664

Token 706: ' res' (ID: 694)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1307893842458725
    2. '3' → logprob: -2.130789279937744
    3. '0' → logprob: -6.005789279937744
    4. 'res' → logprob: -7.505789279937744
    5. '1' → logprob: -8.630789756774902
    6. '(' → logprob: -8.755789756774902
    7. 'max' → logprob: -8.880789756774902
    8. 'st' → logprob: -9.005789756774902
    9. '(st' → logprob: -9.255789756774902
    10. '(n' → logprob: -10.005789756774902

Token 707: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012976066500414163
    2. '[' → logprob: -9.000129699707031
    3. ' [' → logprob: -12.750129699707031
    4. 'i' → logprob: -13.500129699707031
    5. '	' → logprob: -15.125129699707031
    6. '   ' → logprob: -15.250129699707031
    7. '[
' → logprob: -15.500129699707031
    8. ' ' → logprob: -15.875129699707031
    9. '(i' → logprob: -16.00012969970703
    10. '```' → logprob: -16.00012969970703

Token 708: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00896175391972065
    2. ']' → logprob: -5.3839616775512695
    3. 'i' → logprob: -5.6339616775512695
    4. ']+' → logprob: -7.3839616775512695
    5. '][' → logprob: -10.00896167755127
    6. '[' → logprob: -10.00896167755127
    7. '(i' → logprob: -11.25896167755127
    8. '-' → logprob: -11.38396167755127
    9. ']-' → logprob: -12.25896167755127
    10. ']*' → logprob: -12.88396167755127

Token 709: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03276723250746727
    2. ' %' → logprob: -3.6577672958374023
    3. '%n' → logprob: -5.782767295837402
    4. '<|end|>' → logprob: -6.782767295837402
    5. '%=' → logprob: -7.157767295837402
    6. ' %=' → logprob: -8.157767295837402
    7. '%i' → logprob: -8.532767295837402
    8. '```' → logprob: -8.657767295837402
    9. ')' → logprob: -8.782767295837402
    10. '**' → logprob: -9.282767295837402

Token 710: ' res' (ID: 694)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.14640261232852936
    2. ' nm' → logprob: -2.021402597427368
    3. '(n' → logprob: -6.771402835845947
    4. '_nm' → logprob: -6.896402835845947
    5. '[n' → logprob: -8.396402359008789
    6. ' %=' → logprob: -8.646402359008789
    7. 'mod' → logprob: -8.771402359008789
    8. '
' → logprob: -8.771402359008789
    9. '```' → logprob: -8.771402359008789
    10. '\n' → logprob: -9.021402359008789

Token 711: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.625015258789062
    3. 'i' → logprob: -13.625015258789062
    4. '```' → logprob: -13.625015258789062
    5. '][' → logprob: -14.000015258789062
    6. '=i' → logprob: -14.375015258789062
    7. '=' → logprob: -14.625015258789062
    8. ']' → logprob: -14.750015258789062
    9. '[I' → logprob: -14.750015258789062
    10. '[
' → logprob: -15.375015258789062

Token 712: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.006658911705017
    2. ']' → logprob: -1.131658911705017
    3. ']+=' → logprob: -1.381658911705017
    4. ' +=' → logprob: -3.8816590309143066
    5. '=' → logprob: -4.631659030914307
    6. '[i' → logprob: -4.756659030914307
    7. '-' → logprob: -5.256659030914307
    8. '-=' → logprob: -5.506659030914307
    9. '+' → logprob: -5.631659030914307
    10. ']=' → logprob: -6.131659030914307

Token 713: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03212571516633034
    2. '=' → logprob: -3.53212571144104
    3. '-=' → logprob: -6.532125949859619
    4. ' +=' → logprob: -7.282125949859619
    5. '%=' → logprob: -8.657125473022461
    6. '*=' → logprob: -10.657125473022461
    7. '//=' → logprob: -11.157125473022461
    8. ' =' → logprob: -11.407125473022461
    9. ' -=' → logprob: -13.032125473022461
    10. '+' → logprob: -13.782125473022461

Token 714: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.875021934509277
    3. '2' → logprob: -13.750021934509277
    4. '   ' → logprob: -13.875021934509277
    5. '=' → logprob: -15.625021934509277
    6. '3' → logprob: -16.50002098083496
    7. '```' → logprob: -16.56252098083496
    8. '0' → logprob: -17.00002098083496
    9. 'res' → logprob: -17.00002098083496
    10. ' ' → logprob: -17.43752098083496

Token 715: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '2' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '0' → logprob: -14.500003814697266
    5. '   ' → logprob: -15.375003814697266
    6. '3' → logprob: -15.750003814697266
    7. '10' → logprob: -16.625003814697266
    8. '=' → logprob: -17.437503814697266
    9. '```' → logprob: -17.437503814697266
    10. '5' → logprob: -17.875003814697266

Token 716: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0770065039396286
    2. '<|end|>' → logprob: -3.0770065784454346
    3. '\n' → logprob: -4.8270063400268555
    4. ')' → logprob: -5.5770063400268555
    5. '        
' → logprob: -6.0770063400268555
    6. '    
' → logprob: -6.0770063400268555
    7. '   ' → logprob: -6.0770063400268555
    8. '*' → logprob: -6.0770063400268555
    9. '\' → logprob: -6.8270063400268555
    10. '
' → logprob: -7.2020063400268555

Token 717: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5402191877365112
    2. '<|end|>' → logprob: -1.0402191877365112
    3. '\n' → logprob: -3.415219306945801
    4. ')' → logprob: -4.540219306945801
    5. '*' → logprob: -5.665219306945801
    6. '\t' → logprob: -6.040219306945801
    7. '   ' → logprob: -6.165219306945801
    8. '    ' → logprob: -6.290219306945801
    9. ' ' → logprob: -6.665219306945801
    10. '<|end|>' → logprob: -6.790219306945801

Token 718: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2201395034790039
    2. '<|end|>' → logprob: -1.970139503479004
    3. '   ' → logprob: -3.595139503479004
    4. '\n' → logprob: -4.345139503479004
    5. '[' → logprob: -6.095139503479004
    6. '        
' → logprob: -6.220139503479004
    7. '    
' → logprob: -6.220139503479004
    8. ')' → logprob: -6.345139503479004
    9. '```' → logprob: -6.345139503479004
    10. '
' → logprob: -7.095139503479004

Token 719: ' Sinon' (ID: 154924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5823588371276855
    2. ':' → logprob: -1.3323588371276855
    3. 'else' → logprob: -2.5823588371276855
    4. '           ' → logprob: -2.7073588371276855
    5. ' else' → logprob: -4.0823588371276855
    6. ':
' → logprob: -4.4573588371276855
    7. '   ' → logprob: -5.9573588371276855
    8. ' :' → logprob: -6.2073588371276855
    9. 'elif' → logprob: -6.9573588371276855
    10. ' :
' → logprob: -8.582359313964844

Token 721: ' mise' (ID: 25868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0274518728256226
    2. 'st' → logprob: -1.5274518728256226
    3. ' st' → logprob: -1.6524518728256226
    4. ' nm' → logprob: -2.027451992034912
    5. '           ' → logprob: -3.027451992034912
    6. 'nm' → logprob: -3.902451992034912
    7. ' res' → logprob: -4.902451992034912
    8. 'else' → logprob: -5.402451992034912
    9. ' else' → logprob: -5.527451992034912
    10. 'elif' → logprob: -6.027451992034912

Token 722: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05359909310936928
    2. 'à' → logprob: -3.0535991191864014
    3. '```' → logprob: -5.803598880767822
    4. 'elif' → logprob: -7.803598880767822
    5. '-à' → logprob: -8.05359935760498
    6. '   ' → logprob: -8.17859935760498
    7. 'else' → logprob: -9.05359935760498
    8. 'À' → logprob: -9.05359935760498
    9. ''à' → logprob: -9.30359935760498
    10. ' en' → logprob: -9.30359935760498

Token 723: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.014132829383015633
    2. 'jou' → logprob: -5.139132976531982
    3. 'day' → logprob: -5.764132976531982
    4. ' jour' → logprob: -6.639132976531982
    5. 'jours' → logprob: -6.764132976531982
    6. 'jm' → logprob: -6.889132976531982
    7. '```' → logprob: -7.139132976531982
    8. 'j' → logprob: -8.014132499694824
    9. 'journ' → logprob: -9.014132499694824
    10. 'Jour' → logprob: -9.639132499694824

Token 724: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8656745553016663
    2. '       ' → logprob: -1.2406744956970215
    3. '[i' → logprob: -1.8656744956970215
    4. '```' → logprob: -2.8656744956970215
    5. '           ' → logprob: -3.7406744956970215
    6. ' res' → logprob: -3.8656744956970215
    7. '   ' → logprob: -4.9906744956970215
    8. '[n' → logprob: -5.6156744956970215
    9. 'res' → logprob: -5.7406744956970215
    10. '               ' → logprob: -6.2406744956970215

Token 725: ' ressources' (ID: 65841)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0391390398144722
    2. 'st' → logprob: -3.2891390323638916
    3. ' res' → logprob: -7.164139270782471
    4. 'nm' → logprob: -8.664138793945312
    5. 'ress' → logprob: -9.914138793945312
    6. ' st' → logprob: -10.914138793945312
    7. 'rés' → logprob: -10.914138793945312
    8. 'stat' → logprob: -11.039138793945312
    9. '```' → logprob: -11.414138793945312
    10. 'rest' → logprob: -12.539138793945312

Token 726: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015039891935884953
    2. '           ' → logprob: -5.390039920806885
    3. '```' → logprob: -6.140039920806885
    4. '   ' → logprob: -6.265039920806885
    5. ' else' → logprob: -6.265039920806885
    6. '        
' → logprob: -7.140039920806885
    7. ' res' → logprob: -7.140039920806885
    8. ' elif' → logprob: -7.515039920806885
    9. 'else' → logprob: -7.765039920806885
    10. '[' → logprob: -7.765039920806885

Token 727: ' stat' (ID: 1085)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.1077340692281723
    2. 'nm' → logprob: -2.857733964920044
    3. ' st' → logprob: -4.607734203338623
    4. '       ' → logprob: -4.732734203338623
    5. ' nm' → logprob: -4.857734203338623
    6. 'res' → logprob: -5.232734203338623
    7. '   ' → logprob: -5.357734203338623
    8. 'continue' → logprob: -6.107734203338623
    9. ' res' → logprob: -6.357734203338623
    10. ' continue' → logprob: -7.107734203338623

Token 728: 'uts' (ID: 4639)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11395962536334991
    2. 'ut' → logprob: -2.238959550857544
    3. 'us' → logprob: -7.113959789276123
    4. 'uts' → logprob: -8.238959312438965
    5. 'u' → logprob: -10.988959312438965
    6. 'i' → logprob: -11.238959312438965
    7. 'т' → logprob: -12.238959312438965
    8. 'tu' → logprob: -12.363959312438965
    9. '   ' → logprob: -13.113959312438965
    10. 'utus' → logprob: -13.113959312438965

Token 729: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005706812255084515
    2. '```' → logprob: -6.255706787109375
    3. '           ' → logprob: -6.380706787109375
    4. '        
' → logprob: -6.755706787109375
    5. '[' → logprob: -7.880706787109375
    6. ',' → logprob: -9.005706787109375
    7. '   ' → logprob: -9.880706787109375
    8. ' =' → logprob: -10.005706787109375
    9. ' ' → logprob: -10.380706787109375
    10. '[i' → logprob: -10.505706787109375

Token 730: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48297521471977234
    2. ' i' → logprob: -1.1079752445220947
    3. 'la' → logprob: -4.482975006103516
    4. ' la' → logprob: -4.732975006103516
    5. 'les' → logprob: -4.857975006103516
    6. ' les' → logprob: -5.357975006103516
    7. 'res' → logprob: -5.732975006103516
    8. 'l' → logprob: -5.857975006103516
    9. 'si' → logprob: -6.232975006103516
    10. ' res' → logprob: -6.232975006103516

Token 731: ' autres' (ID: 18701)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5894467830657959
    2. ' autres' → logprob: -1.589446783065796
    3. 'aut' → logprob: -1.839446783065796
    4. ' i' → logprob: -3.214446783065796
    5. ' ' → logprob: -5.214447021484375
    6. ' couleurs' → logprob: -5.214447021484375
    7. 'tro' → logprob: -5.214447021484375
    8. ' trois' → logprob: -5.589447021484375
    9. 'de' → logprob: -5.839447021484375
    10. '3' → logprob: -6.214447021484375

Token 732: ' couleurs' (ID: 54001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44173663854599
    2. ' for' → logprob: -1.5667366981506348
    3. '[i' → logprob: -2.5667366981506348
    4. 'i' → logprob: -3.6917366981506348
    5. ' i' → logprob: -3.8167366981506348
    6. 'indices' → logprob: -5.066736698150635
    7. ' indices' → logprob: -5.066736698150635
    8. '   ' → logprob: -5.191736698150635
    9. '```' → logprob: -6.566736698150635
    10. ':' → logprob: -6.816736698150635

Token 733: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001127955736592412
    2. '        
' → logprob: -7.62612771987915
    3. '<|end|>' → logprob: -8.376128196716309
    4. '
' → logprob: -9.376128196716309
    5. ',' → logprob: -9.501128196716309
    6. ' for' → logprob: -9.626128196716309
    7. '```' → logprob: -10.126128196716309
    8. '           ' → logprob: -10.126128196716309
    9. '[' → logprob: -10.751128196716309
    10. '   ' → logprob: -10.876128196716309

Token 734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033401409164071083
    2. '```' → logprob: -6.503340244293213
    3. '<|end|>' → logprob: -7.128340244293213
    4. '   ' → logprob: -8.128339767456055
    5. '	' → logprob: -8.503339767456055
    6. ' for' → logprob: -9.003339767456055
    7. '[' → logprob: -9.253339767456055
    8. '           ' → logprob: -9.628339767456055
    9. '        
' → logprob: -9.753339767456055
    10. '\t' → logprob: -10.003339767456055

Token 735: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028124896809458733
    2. ' else' → logprob: -4.028124809265137
    3. '```' → logprob: -5.778124809265137
    4. '           ' → logprob: -6.778124809265137
    5. '        
' → logprob: -6.778124809265137
    6. 'else' (adapté à ' else') → logprob: -6.778124809265137
    7. ' for' → logprob: -6.778124809265137
    8. ' elif' → logprob: -7.028124809265137
    9. '   ' → logprob: -7.153124809265137
    10. 'elif' → logprob: -9.403124809265137

Token 736: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4004911780357361
    2. ':' → logprob: -1.5254912376403809
    3. '       ' → logprob: -2.400491237640381
    4. '           ' → logprob: -3.900491237640381
    5. ' :
' → logprob: -7.025491237640381
    6. '   ' → logprob: -8.025490760803223
    7. ' :' → logprob: -8.775490760803223
    8. '):
' → logprob: -10.025490760803223
    9. ':
' → logprob: -10.525490760803223
    10. '        ' → logprob: -11.025490760803223

Token 737: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15791669487953186
    2. '           ' → logprob: -2.157916784286499
    3. '```' → logprob: -4.03291654586792
    4. ' for' → logprob: -5.28291654586792
    5. '	       ' → logprob: -5.40791654586792
    6. '[' → logprob: -7.53291654586792
    7. '	   ' → logprob: -7.90791654586792
    8. '	' → logprob: -7.90791654586792
    9. '   ' → logprob: -8.032917022705078
    10. '​' → logprob: -8.282917022705078

Token 738: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4372558891773224
    2. ' st' → logprob: -2.187255859375
    3. ' res' → logprob: -2.187255859375
    4. '           ' → logprob: -2.562255859375
    5. '       ' → logprob: -4.062255859375
    6. 'for' → logprob: -4.437255859375
    7. 'st' → logprob: -5.437255859375
    8. '   ' → logprob: -5.562255859375
    9. '               ' → logprob: -5.687255859375
    10. 'res' → logprob: -5.937255859375

Token 739: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.7148431539535522
    2. 'nc' → logprob: -1.5898431539535522
    3. 'i' → logprob: -2.089843273162842
    4. ' st' → logprob: -2.339843273162842
    5. ' nc' → logprob: -3.589843273162842
    6. 'si' → logprob: -4.464843273162842
    7. ' i' → logprob: -4.464843273162842
    8. 'res' → logprob: -4.964843273162842
    9. '(i' → logprob: -5.214843273162842
    10. '(st' → logprob: -5.464843273162842

Token 740: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.558399319241289e-05
    2. '[i' → logprob: -10.750025749206543
    3. 'т' → logprob: -13.750025749206543
    4. '[t' → logprob: -14.000025749206543
    5. '[' → logprob: -14.375025749206543
    6. 'i' → logprob: -14.750025749206543
    7. '       ' → logprob: -15.000025749206543
    8. ' t' → logprob: -15.500025749206543
    9. '```' → logprob: -16.000024795532227
    10. '`t' → logprob: -16.000024795532227

Token 741: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003800669452175498
    2. '[' → logprob: -5.753800868988037
    3. '[d' → logprob: -9.003800392150879
    4. '[(' → logprob: -9.003800392150879
    5. '[j' → logprob: -9.503800392150879
    6. 'i' → logprob: -9.503800392150879
    7. '!=' → logprob: -9.753800392150879
    8. '[s' → logprob: -10.628800392150879
    9. '   ' → logprob: -11.003800392150879
    10. 'd' → logprob: -11.003800392150879

Token 742: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04479650408029556
    2. ']' → logprob: -3.1697964668273926
    3. '[' → logprob: -6.919796466827393
    4. ']==' → logprob: -7.919796466827393
    5. '][' → logprob: -8.79479694366455
    6. 'i' → logprob: -9.79479694366455
    7. ']+' → logprob: -9.91979694366455
    8. ']!=' → logprob: -10.04479694366455
    9. '[j' → logprob: -10.41979694366455
    10. ']>' → logprob: -11.16979694366455

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017174237873405218
    2. '2' → logprob: -6.376717567443848
    3. 'i' → logprob: -12.251717567443848
    4. '```' → logprob: -12.689217567443848
    5. ' ' → logprob: -12.814217567443848
    6. '0' → logprob: -14.126717567443848
    7. '``' → logprob: -14.251717567443848
    8. '3' → logprob: -14.626717567443848
    9. '`' → logprob: -14.876717567443848
    10. '
' → logprob: -15.126717567443848

Token 744: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00600819056853652
    2. ']+=' → logprob: -5.256008148193359
    3. ']+' → logprob: -7.881008148193359
    4. '[i' → logprob: -8.63100814819336
    5. ']>' → logprob: -9.50600814819336
    6. ']==' → logprob: -9.88100814819336
    7. ' ]' → logprob: -10.38100814819336
    8. '```' → logprob: -10.88100814819336
    9. '[' → logprob: -11.88100814819336
    10. ']!=' → logprob: -12.00600814819336

Token 745: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2501978874206543
    2. '+=' → logprob: -1.8751978874206543
    3. '==' → logprob: -3.5001978874206543
    4. ' +=' → logprob: -3.7501978874206543
    5. ' >' → logprob: -5.000197887420654
    6. '>=' → logprob: -6.375197887420654
    7. ']+=' → logprob: -6.375197887420654
    8. ' ==' → logprob: -6.750197887420654
    9. '!=' → logprob: -6.750197887420654
    10. '<' → logprob: -7.500197887420654

Token 746: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2866761386394501
    2. 'st' → logprob: -1.5366761684417725
    3. '1' → logprob: -3.4116761684417725
    4. 'res' → logprob: -7.911675930023193
    5. ' ' → logprob: -8.786676406860352
    6. '2' → logprob: -8.911676406860352
    7. 'max' → logprob: -8.911676406860352
    8. ' st' → logprob: -9.536676406860352
    9. '3' → logprob: -9.536676406860352
    10. 'nm' → logprob: -9.661676406860352

Token 747: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42441532015800476
    2. 'st' → logprob: -1.5494153499603271
    3. '1' → logprob: -2.049415349960327
    4. '2' → logprob: -5.799415111541748
    5. 'max' → logprob: -7.299415111541748
    6. '3' → logprob: -7.674415111541748
    7. 'nm' → logprob: -9.049415588378906
    8. ' ' → logprob: -9.674415588378906
    9. '-' → logprob: -9.861915588378906
    10. 'min' → logprob: -10.299415588378906

Token 748: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6179683804512024
    2. ':' → logprob: -1.7429683208465576
    3. ':
' → logprob: -2.1179683208465576
    4. '               ' → logprob: -2.4929683208465576
    5. ' and' → logprob: -2.6179683208465576
    6. '           ' → logprob: -4.742968559265137
    7. 'and' → logprob: -7.117968559265137
    8. 'or' → logprob: -9.117968559265137
    9. ' :' → logprob: -9.617968559265137
    10. ' :
' → logprob: -9.617968559265137

Token 749: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002534720697440207
    2. '           ' → logprob: -8.875253677368164
    3. '                   ' → logprob: -10.000253677368164
    4. '```' → logprob: -10.125253677368164
    5. '              ' → logprob: -11.875253677368164
    6. '                ' → logprob: -12.000253677368164
    7. '                       ' → logprob: -12.625253677368164
    8. '             ' → logprob: -13.500253677368164
    9. '                
' → logprob: -13.500253677368164
    10. '			' → logprob: -13.625253677368164

Token 750: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06562211364507675
    2. 'st' → logprob: -3.190622091293335
    3. '               ' → logprob: -4.565622329711914
    4. 'nm' → logprob: -4.690622329711914
    5. '                   ' → logprob: -6.815622329711914
    6. ' res' → logprob: -7.565622329711914
    7. 'continue' → logprob: -8.065622329711914
    8. 'for' → logprob: -8.815622329711914
    9. ' st' → logprob: -8.940622329711914
    10. '           ' → logprob: -9.315622329711914

Token 751: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02826559729874134
    2. 'nm' → logprob: -4.153265476226807
    3. 'st' → logprob: -4.778265476226807
    4. 'continue' → logprob: -6.403265476226807
    5. 'for' → logprob: -6.903265476226807
    6. ' res' → logprob: -8.153265953063965
    7. '   ' → logprob: -8.528265953063965
    8. 'return' → logprob: -9.278265953063965
    9. '```' → logprob: -9.403265953063965
    10. '           ' → logprob: -9.528265953063965

Token 752: ' ren' (ID: 5427)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.912982702255249
    2. 'continue' → logprob: -1.162982702255249
    3. ' continue' → logprob: -2.037982702255249
    4. ' res' → logprob: -2.287982702255249
    5. '           ' → logprob: -4.037982940673828
    6. 'st' → logprob: -4.412982940673828
    7. ' st' → logprob: -5.412982940673828
    8. 'nm' → logprob: -5.787982940673828
    9. 'raise' → logprob: -6.162982940673828
    10. '```' → logprob: -6.287982940673828

Token 753: 'force' (ID: 13687)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2625880241394043
    2. 'voie' → logprob: -1.6375880241394043
    3. 'tre' → logprob: -2.2625880241394043
    4. 's' → logprob: -2.6375880241394043
    5. 't' → logprob: -3.0125880241394043
    6. 'n' → logprob: -3.7625880241394043
    7. 'i' → logprob: -3.8875880241394043
    8. 'for' → logprob: -4.137588024139404
    9. 'verse' → logprob: -4.387588024139404
    10. 'e' → logprob: -4.637588024139404

Token 754: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1933828890323639
    2. ' res' → logprob: -1.9433828592300415
    3. 'st' → logprob: -4.318382740020752
    4. ' st' → logprob: -4.568382740020752
    5. '                   ' → logprob: -5.068382740020752
    6. '               ' → logprob: -6.443382740020752
    7. '```' → logprob: -8.06838321685791
    8. ' nm' → logprob: -9.06838321685791
    9. '                       ' → logprob: -9.44338321685791
    10. 'nm' → logprob: -9.44338321685791

Token 755: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31115323305130005
    2. 'st' → logprob: -1.6861531734466553
    3. ' res' → logprob: -2.8111531734466553
    4. 'rés' → logprob: -4.186153411865234
    5. ' st' → logprob: -6.061153411865234
    6. 'nm' → logprob: -6.686153411865234
    7. '```' → logprob: -7.186153411865234
    8. 'ress' → logprob: -7.436153411865234
    9. 'ré' → logprob: -8.436153411865234
    10. '#' → logprob: -8.561153411865234

Token 756: 'source' (ID: 4935)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2773333191871643
    2. '[' → logprob: -2.0273332595825195
    3. 'res' → logprob: -2.6523332595825195
    4. 's' → logprob: -3.5273332595825195
    5. 'ources' → logprob: -5.4023332595825195
    6. ' res' → logprob: -5.6523332595825195
    7. 't' → logprob: -7.2773332595825195
    8. 'sources' → logprob: -7.9023332595825195
    9. '[s' → logprob: -8.02733325958252
    10. 'i' → logprob: -8.27733325958252

Token 757: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47530829906463623
    2. 'res' → logprob: -1.2253082990646362
    3. '[' → logprob: -2.975308418273926
    4. ' res' → logprob: -3.725308418273926
    5. ' +=' → logprob: -4.850308418273926
    6. ' [' → logprob: -7.350308418273926
    7. '+=' → logprob: -8.100308418273926
    8. '   ' → logprob: -8.225308418273926
    9. '	res' → logprob: -9.725308418273926
    10. '[j' → logprob: -9.725308418273926

Token 758: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34563955664634705
    2. 'res' → logprob: -1.3456395864486694
    3. ' i' → logprob: -4.345639705657959
    4. ' res' → logprob: -4.970639705657959
    5. 'st' → logprob: -5.345639705657959
    6. 'l' → logprob: -5.595639705657959
    7. '[i' → logprob: -6.720639705657959
    8. 'si' → logprob: -7.220639705657959
    9. 'la' → logprob: -7.595639705657959
    10. '(i' → logprob: -8.4706392288208

Token 759: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.5804625153541565
    2. 'i' → logprob: -2.2054624557495117
    3. 'st' → logprob: -2.2054624557495117
    4. 'res' → logprob: -2.4554624557495117
    5. ' couleur' → logprob: -3.4554624557495117
    6. 'c' → logprob: -3.7054624557495117
    7. 'color' → logprob: -4.205462455749512
    8. ' res' → logprob: -4.330462455749512
    9. 'rés' → logprob: -4.580462455749512
    10. 'aut' → logprob: -5.205462455749512

Token 760: ' précédente' (ID: 177319)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014515443472191691
    2. '[' → logprob: -7.25145149230957
    3. 'res' → logprob: -7.50145149230957
    4. 'i' → logprob: -8.87645149230957
    5. ' i' → logprob: -10.87645149230957
    6. '               ' → logprob: -11.37645149230957
    7. '   ' → logprob: -12.12645149230957
    8. ' [' → logprob: -12.62645149230957
    9. ' res' → logprob: -13.00145149230957
    10. '[j' → logprob: -13.00145149230957

Token 761: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7883552312850952
    2. 'res' → logprob: -1.4133552312850952
    3. '[' → logprob: -1.9133552312850952
    4. ' res' → logprob: -2.7883553504943848
    5. ' +=' → logprob: -3.2883553504943848
    6. '                   ' → logprob: -3.6633553504943848
    7. '               ' → logprob: -4.788355350494385
    8. '```' → logprob: -5.038355350494385
    9. '   ' → logprob: -5.163355350494385
    10. '+=' → logprob: -5.913355350494385

Token 762: ' on' (ID: 402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16007797420024872
    2. 'st' → logprob: -2.7850780487060547
    3. ' res' → logprob: -2.7850780487060547
    4. ' st' → logprob: -4.035078048706055
    5. '               ' → logprob: -5.410078048706055
    6. '                   ' → logprob: -6.785078048706055
    7. 'continue' → logprob: -8.785078048706055
    8. '1' → logprob: -9.035078048706055
    9. '```' → logprob: -9.160078048706055
    10. 'i' → logprob: -9.285078048706055

Token 763: ' dim' (ID: 6051)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5816836953163147
    2. ' st' → logprob: -1.70668363571167
    3. 'res' → logprob: -2.45668363571167
    4. 'continue' → logprob: -2.95668363571167
    5. ' res' → logprob: -2.95668363571167
    6. ' continue' → logprob: -3.08168363571167
    7. '```' → logprob: -5.33168363571167
    8. 'contin' → logprob: -6.20668363571167
    9. '   ' → logprob: -6.20668363571167
    10. 'increment' → logprob: -6.45668363571167

Token 764: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.0002868417650461197
    2. 'inu' → logprob: -8.500287055969238
    3. 'p' → logprob: -10.500287055969238
    4. 'in' → logprob: -10.500287055969238
    5. 'pl' → logprob: -10.875287055969238
    6. 'pute' → logprob: -12.875287055969238
    7. 'i' → logprob: -13.375287055969238
    8. 'nu' → logprob: -14.375287055969238
    9. 'mun' → logprob: -14.875287055969238
    10. 'st' → logprob: -15.000287055969238

Token 765: ' le' (ID: 505)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.34900471568107605
    2. ' res' → logprob: -1.2240047454833984
    3. ' st' → logprob: -8.599004745483398
    4. 'st' → logprob: -8.724004745483398
    5. '1' → logprob: -9.349004745483398
    6. '                   ' → logprob: -11.099004745483398
    7. '	res' → logprob: -11.099004745483398
    8. '   ' → logprob: -11.349004745483398
    9. '               ' → logprob: -11.474004745483398
    10. ' ' → logprob: -11.474004745483398

Token 766: ' statut' (ID: 51401)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05957046151161194
    2. 'st' → logprob: -3.059570550918579
    3. 'nm' → logprob: -5.1845703125
    4. ' res' → logprob: -5.4345703125
    5. ' nm' → logprob: -8.4345703125
    6. ' st' → logprob: -8.4345703125
    7. '   ' → logprob: -9.0595703125
    8. '  ' → logprob: -10.1845703125
    9. ' ' → logprob: -10.4345703125
    10. '```' → logprob: -10.4345703125

Token 767: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03777715936303139
    2. '[i' → logprob: -4.037776947021484
    3. '                   ' → logprob: -4.912776947021484
    4. ' st' → logprob: -5.787776947021484
    5. 'st' → logprob: -5.912776947021484
    6. '           ' → logprob: -5.912776947021484
    7. '[' → logprob: -6.162776947021484
    8. '			' → logprob: -8.037776947021484
    9. '                       ' → logprob: -8.162776947021484
    10. '```' → logprob: -8.912776947021484

Token 768: ''enc' (ID: 174736)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.37424471974372864
    2. 'i' → logprob: -2.2492446899414062
    3. ' st' → logprob: -2.8742446899414062
    4. '[i' → logprob: -2.8742446899414062
    5. '1' → logprob: -2.9992446899414062
    6. 'l' → logprob: -3.6242446899414062
    7. '-' → logprob: -5.124244689941406
    8. 'la' → logprob: -5.999244689941406
    9. 't' → logprob: -5.999244689941406
    10. 's' → logprob: -6.999244689941406

Token 769: 'ore' (ID: 510)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34371182322502136
    2. 'st' → logprob: -1.9687118530273438
    3. '[i' → logprob: -2.2187118530273438
    4. ' st' → logprob: -5.093711853027344
    5. 'p' → logprob: -5.093711853027344
    6. 't' → logprob: -5.218711853027344
    7. 'rement' → logprob: -5.343711853027344
    8. '[' → logprob: -6.218711853027344
    9. 'crement' → logprob: -6.218711853027344
    10. 'res' → logprob: -6.593711853027344

Token 770: ' avant' (ID: 13339)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5025859475135803
    2. '1' → logprob: -1.8775858879089355
    3. 'la' → logprob: -2.5025858879089355
    4. 'st' → logprob: -3.2525858879089355
    5. 'une' → logprob: -3.3775858879089355
    6. 'celle' → logprob: -3.6275858879089355
    7. '[i' → logprob: -3.8775858879089355
    8. 'c' → logprob: -4.3775858879089355
    9. 'un' → logprob: -4.7525858879089355
    10. '   ' → logprob: -5.3775858879089355

Token 771: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8787125945091248
    2. ' i' → logprob: -1.6287126541137695
    3. '[i' → logprob: -1.8787126541137695
    4. '1' → logprob: -2.5037126541137695
    5. '(i' → logprob: -2.6287126541137695
    6. '   ' → logprob: -3.6287126541137695
    7. '-' → logprob: -3.6287126541137695
    8. ' ' → logprob: -4.6287126541137695
    9. '`' → logprob: -5.7537126541137695
    10. '```' → logprob: -5.7537126541137695

Token 772: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06911731511354446
    2. '                   ' → logprob: -2.819117307662964
    3. '           ' → logprob: -5.319117546081543
    4. '\n' → logprob: -7.069117546081543
    5. '                       ' → logprob: -7.944117546081543
    6. '                ' → logprob: -8.319117546081543
    7. '```' → logprob: -8.319117546081543
    8. '   ' → logprob: -9.319117546081543
    9. '              ' → logprob: -9.819117546081543
    10. '                  ' → logprob: -9.944117546081543

Token 773: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01128678023815155
    2. ' res' → logprob: -4.511286735534668
    3. '                   ' → logprob: -8.511286735534668
    4. '               ' → logprob: -11.011286735534668
    5. '   ' → logprob: -11.511286735534668
    6. '                       ' → logprob: -12.886286735534668
    7. '	res' → logprob: -13.386286735534668
    8. ' ' → logprob: -13.511286735534668
    9. '```' → logprob: -13.636286735534668
    10. '  ' → logprob: -13.761286735534668

Token 774: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3080716346157715e-05
    2. '[' → logprob: -10.750022888183594
    3. '[(' → logprob: -15.000022888183594
    4. ' =' → logprob: -15.125022888183594
    5. ' [' → logprob: -15.125022888183594
    6. '=i' → logprob: -15.625022888183594
    7. '=' → logprob: -16.125022888183594
    8. '   ' → logprob: -16.375022888183594
    9. '=[' → logprob: -16.750022888183594
    10. 'i' → logprob: -17.000022888183594

Token 775: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07274218648672104
    2. '[i' → logprob: -2.697742223739624
    3. ']' → logprob: -6.072741985321045
    4. 'i' → logprob: -8.322742462158203
    5. '[' → logprob: -8.947742462158203
    6. '[-' → logprob: -9.822742462158203
    7. '(i' → logprob: -11.072742462158203
    8. ']+' → logprob: -11.322742462158203
    9. '   ' → logprob: -11.447742462158203
    10. ' -' → logprob: -11.822742462158203

Token 776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007161272224038839
    2. '2' → logprob: -7.250716209411621
    3. ' ' → logprob: -12.375716209411621
    4. '```' → logprob: -14.250716209411621
    5. '   ' → logprob: -15.375716209411621
    6. '0' → logprob: -16.063215255737305
    7. '-' → logprob: -16.563215255737305
    8. '`' → logprob: -16.563215255737305
    9. '１' → logprob: -16.750715255737305
    10. '۱' → logprob: -16.875715255737305

Token 777: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019349466310814023
    2. ']+=' → logprob: -6.251935005187988
    3. ']-' → logprob: -12.751935005187988
    4. ' ]' → logprob: -13.876935005187988
    5. ']+' → logprob: -14.376935005187988
    6. '   ' → logprob: -15.001935005187988
    7. ')' → logprob: -15.376935005187988
    8. '[i' → logprob: -15.376935005187988
    9. '']' → logprob: -15.626935005187988
    10. '[' → logprob: -15.626935005187988

Token 778: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132980465888977
    2. ' +=' → logprob: -1.313297986984253
    3. '=' → logprob: -10.438298225402832
    4. '   ' → logprob: -12.938298225402832
    5. ']+=' → logprob: -13.188298225402832
    6. ' =' → logprob: -14.063298225402832
    7. '-=' → logprob: -14.438298225402832
    8. ' -=' → logprob: -14.688298225402832
    9. '    ' → logprob: -14.813298225402832
    10. ' ' → logprob: -15.188298225402832

Token 779: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004137768410146236
    2. 'st' → logprob: -5.879137992858887
    3. 'res' → logprob: -7.129137992858887
    4. ' ' → logprob: -7.879137992858887
    5. ' st' → logprob: -9.254137992858887
    6. '2' → logprob: -10.254137992858887
    7. '   ' → logprob: -12.379137992858887
    8. '3' → logprob: -12.879137992858887
    9. '0' → logprob: -12.879137992858887
    10. ' res' → logprob: -13.629137992858887

Token 780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010672478936612606
    2. 'res' → logprob: -5.260672569274902
    3. 'st' → logprob: -5.260672569274902
    4. '2' → logprob: -8.635672569274902
    5. 'nm' → logprob: -11.385672569274902
    6. '3' → logprob: -11.635672569274902
    7. ' ' → logprob: -12.260672569274902
    8. '(' → logprob: -12.385672569274902
    9. '   ' → logprob: -13.010672569274902
    10. '0' → logprob: -13.323172569274902

Token 781: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8092429041862488
    2. '           ' → logprob: -1.4342429637908936
    3. '<|end|>' → logprob: -1.8092429637908936
    4. '
' → logprob: -2.1842429637908936
    5. '\n' → logprob: -4.3092427253723145
    6. '       ' → logprob: -4.3092427253723145
    7. '                   ' → logprob: -4.9342427253723145
    8. '```' → logprob: -6.3092427253723145
    9. ')' → logprob: -6.9342427253723145
    10. '		' → logprob: -7.8092427253723145

Token 782: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ' nm' (ID: 43183)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.005462374538183212
    2. '               ' → logprob: -5.755462169647217
    3. ' st' → logprob: -6.255462169647217
    4. '                   ' → logprob: -8.005462646484375
    5. '           ' → logprob: -11.130462646484375
    6. '	st' → logprob: -11.755462646484375
    7. '                       ' → logprob: -13.005462646484375
    8. '```' → logprob: -13.755462646484375
    9. '                ' → logprob: -14.380462646484375
    10. '   ' → logprob: -14.630462646484375

Token 784: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.07501406967639923
    2. ' *=' → logprob: -3.075014114379883
    3. '%=' → logprob: -3.950014114379883
    4. '=' → logprob: -5.575014114379883
    5. '//=' → logprob: -6.200014114379883
    6. ' %=' → logprob: -7.450014114379883
    7. '+=' → logprob: -9.075014114379883
    8. '*' → logprob: -9.200014114379883
    9. ' =' → logprob: -9.700014114379883
    10. '/=' → logprob: -10.200014114379883

Token 785: ' st' (ID: 420)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005296723451465368
    2. 'st' → logprob: -5.88029670715332
    3. '2' → logprob: -6.25529670715332
    4. ' res' → logprob: -8.88029670715332
    5. '3' → logprob: -9.25529670715332
    6. '1' → logprob: -9.50529670715332
    7. 'i' → logprob: -10.00529670715332
    8. '(res' → logprob: -10.13029670715332
    9. '10' → logprob: -11.00529670715332
    10. '(' → logprob: -11.13029670715332

Token 786: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9981420336989686e-05
    2. '[i' → logprob: -11.500020027160645
    3. 'i' → logprob: -13.125020027160645
    4. 'т' → logprob: -13.375020027160645
    5. '[t' → logprob: -13.750020027160645
    6. '```' → logprob: -13.875020027160645
    7. 'p' → logprob: -14.312520027160645
    8. '(i' → logprob: -14.750020027160645
    9. 'a' → logprob: -14.812520027160645
    10. 'r' → logprob: -14.937520027160645

Token 787: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018685187387745827
    2. '[' → logprob: -8.625186920166016
    3. '[(' → logprob: -12.875186920166016
    4. 'i' → logprob: -13.625186920166016
    5. '(i' → logprob: -13.625186920166016
    6. '[j' → logprob: -14.375186920166016
    7. '[
' → logprob: -14.625186920166016
    8. ' [' → logprob: -15.250186920166016
    9. '```' → logprob: -15.875186920166016
    10. '   ' → logprob: -16.500186920166016

Token 788: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3686425983905792
    2. '[i' → logprob: -1.2436425685882568
    3. 'i' → logprob: -4.618642807006836
    4. '[' → logprob: -5.368642807006836
    5. '[-' → logprob: -6.368642807006836
    6. '(i' → logprob: -6.493642807006836
    7. '1' → logprob: -6.618642807006836
    8. ']' → logprob: -7.493642807006836
    9. '[(' → logprob: -9.368642807006836
    10. ' -' → logprob: -10.118642807006836

Token 789: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3484775125980377
    2. '2' → logprob: -1.2234774827957153
    3. '```' → logprob: -11.535977363586426
    4. '-' → logprob: -12.160977363586426
    5. ' ' → logprob: -12.723477363586426
    6. 'i' → logprob: -13.035977363586426
    7. '0' → logprob: -13.285977363586426
    8. '`' → logprob: -13.598477363586426
    9. '``' → logprob: -13.848477363586426
    10. '   ' → logprob: -14.098477363586426

Token 790: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012606428004801273
    2. ')' → logprob: -4.637606620788574
    3. '<|end|>' → logprob: -6.512606620788574
    4. ']
' → logprob: -8.012606620788574
    5. ' ]' → logprob: -8.012606620788574
    6. ']*' → logprob: -8.762606620788574
    7. '*' → logprob: -9.262606620788574
    8. ')]' → logprob: -9.262606620788574
    9. ']%' → logprob: -9.637606620788574
    10. '])' → logprob: -9.887606620788574

Token 791: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6682360172271729
    2. '<|end|>' → logprob: -1.4182360172271729
    3. ')' → logprob: -2.293236017227173
    4. '
' → logprob: -3.543236017227173
    5. '\n' → logprob: -3.668236017227173
    6. '*' → logprob: -3.668236017227173
    7. '%' → logprob: -3.793236017227173
    8. '```' → logprob: -4.668235778808594
    9. '**' → logprob: -5.418235778808594
    10. '           ' → logprob: -5.418235778808594

Token 792: ' st' (ID: 420)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.7848862373502925e-05
    2. '[i' → logprob: -11.125027656555176
    3. 'т' → logprob: -12.250027656555176
    4. '[t' → logprob: -13.375027656555176
    5. 'i' → logprob: -13.500027656555176
    6. '```' → logprob: -13.625027656555176
    7. ' t' → logprob: -14.437527656555176
    8. '`t' → logprob: -14.687527656555176
    9. '	t' → logprob: -14.937527656555176
    10. '[' → logprob: -15.062527656555176

Token 794: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -12.125009536743164
    3. 'i' → logprob: -13.250009536743164
    4. '```' → logprob: -14.250009536743164
    5. '[
' → logprob: -15.375009536743164
    6. '(i' → logprob: -15.500009536743164
    7. '   ' → logprob: -15.500009536743164
    8. '[j' → logprob: -15.625009536743164
    9. ' [' → logprob: -16.500009536743164
    10. ',i' → logprob: -17.125009536743164

Token 795: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3712461590766907
    2. '[i' → logprob: -1.371246099472046
    3. '[' → logprob: -3.121246099472046
    4. '2' → logprob: -4.996246337890625
    5. 'i' → logprob: -5.496246337890625
    6. ']' → logprob: -7.746246337890625
    7. '[-' → logprob: -7.996246337890625
    8. '   ' → logprob: -9.246246337890625
    9. '(i' → logprob: -9.371246337890625
    10. '```' → logprob: -9.496246337890625

Token 796: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005941479001194239
    2. '1' → logprob: -5.130941390991211
    3. '```' → logprob: -12.505941390991211
    4. '0' → logprob: -12.568441390991211
    5. ' ' → logprob: -13.693441390991211
    6. '``' → logprob: -14.380941390991211
    7. '[' → logprob: -14.943441390991211
    8. '-' → logprob: -15.068441390991211
    9. ']' → logprob: -15.318441390991211
    10. 'i' → logprob: -15.380941390991211

Token 797: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.13931797444820404
    2. '-=' → logprob: -2.5143179893493652
    3. '+=' → logprob: -4.139317989349365
    4. ']' → logprob: -4.139317989349365
    5. ' +=' → logprob: -4.389317989349365
    6. '-' → logprob: -6.014317989349365
    7. ']+=' → logprob: -6.264317989349365
    8. ']-' → logprob: -8.389317512512207
    9. '=' → logprob: -8.639317512512207
    10. ')' → logprob: -10.389317512512207

Token 798: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.013296108692884445
    2. ' -=' → logprob: -4.513296127319336
    3. '+=' → logprob: -6.638296127319336
    4. '=' → logprob: -7.263296127319336
    5. '-' → logprob: -8.388296127319336
    6. ' +=' → logprob: -12.138296127319336
    7. '*=' → logprob: -13.763296127319336
    8. ' =' → logprob: -14.263296127319336
    9. ' -' → logprob: -14.888296127319336
    10. ' ' → logprob: -15.388296127319336

Token 799: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.500011444091797
    4. '2' → logprob: -15.125011444091797
    5. '           ' → logprob: -15.375011444091797
    6. '	' → logprob: -16.125011444091797
    7. '                   ' → logprob: -16.375011444091797
    8. '               ' → logprob: -16.500011444091797
    9. '                       ' → logprob: -17.125011444091797
    10. ' ' → logprob: -17.375011444091797

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -15.25000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '           ' → logprob: -17.312503814697266
    6. '=' → logprob: -18.375003814697266
    7. '	' → logprob: -18.437503814697266
    8. '(' → logprob: -18.625003814697266
    9. '  ' → logprob: -18.750003814697266
    10. '```' → logprob: -18.750003814697266

Token 801: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 802: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5881221890449524
    2. '       ' → logprob: -1.5881221294403076
    3. '<|end|>' → logprob: -1.7131221294403076
    4. '
' → logprob: -3.5881221294403076
    5. '```' → logprob: -4.463122367858887
    6. ')' → logprob: -4.588122367858887
    7. '           ' → logprob: -6.088122367858887
    8. '               ' → logprob: -6.838122367858887
    9. '        
' → logprob: -6.963122367858887
    10. '\' → logprob: -7.213122367858887

Token 803: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20569702982902527
    2. '<|end|>' → logprob: -2.2056970596313477
    3. '       ' → logprob: -3.9556970596313477
    4. '\n' → logprob: -4.205697059631348
    5. '		' → logprob: -4.205697059631348
    6. '               ' → logprob: -5.330697059631348
    7. '```' → logprob: -5.330697059631348
    8. '
' → logprob: -5.705697059631348
    9. ')' → logprob: -6.080697059631348
    10. '	' → logprob: -6.205697059631348

Token 804: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020299924071878195
    2. '			' → logprob: -6.752029895782471
    3. '           ' → logprob: -7.752029895782471
    4. '	           ' → logprob: -9.002030372619629
    5. '```' → logprob: -9.502030372619629
    6. ':' → logprob: -9.752030372619629
    7. '                   ' → logprob: -10.377030372619629
    8. '		' → logprob: -10.502030372619629
    9. ':
' → logprob: -10.627030372619629
    10. '			   ' → logprob: -11.002030372619629

Token 805: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013121046125888824
    2. '			' → logprob: -4.763121128082275
    3. '           ' → logprob: -6.513121128082275
    4. '```' → logprob: -6.513121128082275
    5. '	           ' → logprob: -8.013120651245117
    6. '            ' → logprob: -8.263120651245117
    7. '		' → logprob: -9.013120651245117
    8. '                ' → logprob: -9.013120651245117
    9. '              ' → logprob: -9.388120651245117
    10. '             ' → logprob: -9.638120651245117

Token 806: ' #' (ID: 1069)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.05121965706348419
    2. '               ' → logprob: -3.3012197017669678
    3. 'nm' → logprob: -4.801219463348389
    4. ' st' → logprob: -5.551219463348389
    5. 'res' → logprob: -7.801219463348389
    6. '                   ' → logprob: -8.801219940185547
    7. '	st' → logprob: -8.926219940185547
    8. ' nm' → logprob: -9.051219940185547
    9. '```' → logprob: -10.051219940185547
    10. '   ' → logprob: -10.676219940185547

Token 807: ' On' (ID: 2160)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0578814297914505
    2. '               ' → logprob: -2.9328813552856445
    3. '                   ' → logprob: -6.8078813552856445
    4. 'res' → logprob: -6.8078813552856445
    5. ' st' → logprob: -8.057881355285645
    6. 'nm' → logprob: -8.432881355285645
    7. '           ' → logprob: -8.932881355285645
    8. '   ' → logprob: -10.432881355285645
    9. '	st' → logprob: -11.057881355285645
    10. '                ' → logprob: -11.182881355285645

Token 808: ' ren' (ID: 5427)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7550860643386841
    2. 'continue' → logprob: -1.755086064338684
    3. '+=' → logprob: -2.5050859451293945
    4. '           ' → logprob: -2.5050859451293945
    5. '                   ' → logprob: -2.8800859451293945
    6. ' continue' → logprob: -3.2550859451293945
    7. '                       ' → logprob: -3.5050859451293945
    8. 'st' → logprob: -4.2550859451293945
    9. '-=' → logprob: -4.5050859451293945
    10. ' +=' → logprob: -5.0050859451293945

Token 809: 'force' (ID: 13687)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.6166698932647705
    2. 'force' → logprob: -2.4916698932647705
    3. '               ' → logprob: -2.6166698932647705
    4. 'r' → logprob: -2.6166698932647705
    5. 'ter' → logprob: -2.7416698932647705
    6. '   ' → logprob: -2.8666698932647705
    7. 'for' → logprob: -2.9916698932647705
    8. 'tr' → logprob: -3.1166698932647705
    9. 'l' → logprob: -3.1166698932647705
    10. 'trer' → logprob: -3.3666698932647705

Token 810: ' la' (ID: 557)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3133288025856018
    2. 'res' → logprob: -1.563328742980957
    3. ' st' → logprob: -3.188328742980957
    4. ' la' → logprob: -4.438328742980957
    5. 'st' → logprob: -5.938328742980957
    6. ' le' → logprob: -6.938328742980957
    7. '                   ' → logprob: -7.438328742980957
    8. ' ' → logprob: -7.438328742980957
    9. '               ' → logprob: -7.563328742980957
    10. 'la' → logprob: -8.188328742980957

Token 811: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2963533401489258
    2. 'st' → logprob: -1.4213533401489258
    3. ' res' → logprob: -4.296353340148926
    4. ' st' → logprob: -6.671353340148926
    5. 'nm' → logprob: -10.858853340148926
    6. '```' → logprob: -11.108853340148926
    7. 'rés' → logprob: -11.171353340148926
    8. ' ' → logprob: -11.358853340148926
    9. 's' → logprob: -11.483853340148926
    10. 'ress' → logprob: -11.483853340148926

Token 812: 'source' (ID: 4935)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22616706788539886
    2. 'st' → logprob: -1.85116708278656
    3. 't' → logprob: -3.1011669635772705
    4. 'ss' → logprob: -8.851166725158691
    5. 'int' → logprob: -10.601166725158691
    6. 'nt' → logprob: -10.601166725158691
    7. 'tt' → logprob: -10.601166725158691
    8. '[' → logprob: -11.226166725158691
    9. '[i' → logprob: -11.226166725158691
    10. 'sum' → logprob: -11.351166725158691

Token 813: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004368647933006287
    2. 'res' → logprob: -6.129368782043457
    3. '[' → logprob: -6.379368782043457
    4. '```' → logprob: -8.129368782043457
    5. '               ' → logprob: -9.629368782043457
    6. '                   ' → logprob: -10.254368782043457
    7. ' de' → logprob: -10.879368782043457
    8. '[j' → logprob: -11.254368782043457
    9. 'de' → logprob: -11.629368782043457
    10. ' [' → logprob: -11.629368782043457

Token 814: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14814616739749908
    2. 'st' → logprob: -2.273146152496338
    3. ' res' → logprob: -3.648146152496338
    4. ' st' → logprob: -4.773146152496338
    5. 'i' → logprob: -9.023146629333496
    6. '```' → logprob: -11.398146629333496
    7. '   ' → logprob: -11.648146629333496
    8. ' i' → logprob: -11.898146629333496
    9. '	res' → logprob: -11.898146629333496
    10. 'r' → logprob: -12.023146629333496

Token 815: ' couleur' (ID: 48005)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07723505049943924
    2. '[i' → logprob: -3.452234983444214
    3. 'st' → logprob: -3.827234983444214
    4. ' i' → logprob: -4.452235221862793
    5. 'res' → logprob: -5.327235221862793
    6. '(i' → logprob: -5.577235221862793
    7. '```' → logprob: -8.702235221862793
    8. ' res' → logprob: -9.077235221862793
    9. ' st' → logprob: -9.202235221862793
    10. '{i' → logprob: -9.702235221862793

Token 816: ' d' (ID: 272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006634721648879349
    2. 'i' → logprob: -7.3756632804870605
    3. '[j' → logprob: -11.000663757324219
    4. '[' → logprob: -11.125663757324219
    5. 'res' → logprob: -13.000663757324219
    6. '   ' → logprob: -13.875663757324219
    7. '(i' → logprob: -13.875663757324219
    8. '{i' → logprob: -15.000663757324219
    9. '```' → logprob: -15.500663757324219
    10. ' i' → logprob: -16.25066375732422

Token 817: ''avant' (ID: 161711)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2272936999797821
    2. '[i' → logprob: -1.6022937297821045
    3. '(i' → logprob: -7.852293491363525
    4. '{i' → logprob: -8.227293968200684
    5. ''i' → logprob: -8.227293968200684
    6. ''avant' → logprob: -8.352293968200684
    7. 'pr' → logprob: -9.102293968200684
    8. '-' → logprob: -9.477293968200684
    9. '-i' → logprob: -9.727293968200684
    10. '[' → logprob: -9.852293968200684

Token 818: ' précédent' (ID: 128462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0045512886717915535
    2. 'i' → logprob: -6.129551410675049
    3. '```' → logprob: -6.629551410675049
    4. '[' → logprob: -8.00455093383789
    5. '`' → logprob: -8.87955093383789
    6. '               ' → logprob: -9.12955093383789
    7. '[j' → logprob: -9.25455093383789
    8. '(i' → logprob: -9.37955093383789
    9. '``' → logprob: -10.37955093383789
    10. '   ' → logprob: -10.50455093383789

Token 819: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006885631009936333
    2. '               ' → logprob: -5.256885528564453
    3. '[' → logprob: -7.006885528564453
    4. '```' → logprob: -8.131885528564453
    5. '                
' → logprob: -9.756885528564453
    6. '                   ' → logprob: -9.756885528564453
    7. 'i' → logprob: -9.881885528564453
    8. ' i' → logprob: -10.131885528564453
    9. ',' → logprob: -10.131885528564453
    10. '                ' → logprob: -10.381885528564453

Token 820: ' on' (ID: 402)
  Prédit: ' st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' st' → logprob: -0.08180089294910431
    2. 'st' → logprob: -2.706800937652588
    3. ' res' → logprob: -5.706800937652588
    4. 'nm' → logprob: -5.831800937652588
    5. ' nm' → logprob: -5.956800937652588
    6. '```' → logprob: -7.081800937652588
    7. '               ' → logprob: -7.331800937652588
    8. 'res' → logprob: -7.706800937652588
    9. ' ' → logprob: -8.70680046081543
    10. '``' → logprob: -9.58180046081543

Token 821: ' dim' (ID: 6051)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.37045973539352417
    2. 'dim' → logprob: -1.620459794998169
    3. ' st' → logprob: -3.120459794998169
    4. 'd' → logprob: -3.620459794998169
    5. ' dim' → logprob: -3.870459794998169
    6. 'nm' → logprob: -5.12045955657959
    7. 'continue' → logprob: -5.99545955657959
    8. '```' → logprob: -6.37045955657959
    9. ' continue' → logprob: -6.62045955657959
    10. ' dimin' → logprob: -6.99545955657959

Token 822: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.0003766919835470617
    2. 'st' → logprob: -8.75037670135498
    3. 'in' → logprob: -8.87537670135498
    4. 'inu' → logprob: -9.87537670135498
    5. 'i' → logprob: -11.12537670135498
    6. 'inie' → logprob: -13.12537670135498
    7. 'inii' → logprob: -13.25037670135498
    8. 'ini' → logprob: -13.62537670135498
    9. 'iniu' → logprob: -13.87537670135498
    10. 'INUE' → logprob: -14.00037670135498

Token 823: ' l' (ID: 305)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.41120707988739014
    2. ' st' → logprob: -1.1612070798873901
    3. 'le' → logprob: -4.16120719909668
    4. ' le' → logprob: -4.91120719909668
    5. '               ' → logprob: -7.91120719909668
    6. '	st' → logprob: -8.78620719909668
    7. ' ' → logprob: -8.91120719909668
    8. 'la' → logprob: -9.16120719909668
    9. ' la' → logprob: -9.53620719909668
    10. '(st' → logprob: -9.53620719909668

Token 824: ''autre' (ID: 52145)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.08141504973173141
    2. ' st' → logprob: -2.5814149379730225
    3. 't' → logprob: -6.706415176391602
    4. 'stat' → logprob: -8.206415176391602
    5. 's' → logprob: -8.331415176391602
    6. 'sta' → logprob: -8.331415176391602
    7. ' ' → logprob: -8.831415176391602
    8. '	st' → logprob: -9.206415176391602
    9. '```' → logprob: -10.081415176391602
    10. ' ' → logprob: -10.456415176391602

Token 825: ' statut' (ID: 51401)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6212319135665894
    2. '[i' → logprob: -0.9962319135665894
    3. ' st' → logprob: -2.621232032775879
    4. 'i' → logprob: -4.496232032775879
    5. ' i' → logprob: -5.996232032775879
    6. 's' → logprob: -6.121232032775879
    7. '```' → logprob: -6.371232032775879
    8. 'd' → logprob: -7.371232032775879
    9. '[' → logprob: -7.621232032775879
    10. '   ' → logprob: -7.871232032775879

Token 826: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3522592782974243
    2. '               ' → logprob: -1.2272592782974243
    3. '[' → logprob: -5.852259159088135
    4. '			' → logprob: -7.977259159088135
    5. '```' → logprob: -8.977259635925293
    6. '                   ' → logprob: -9.227259635925293
    7. '                ' → logprob: -9.352259635925293
    8. '              ' → logprob: -9.977259635925293
    9. '	' → logprob: -10.102259635925293
    10. '				' → logprob: -10.977259635925293

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012603361159563065
    2. '			' → logprob: -5.637603282928467
    3. '```' → logprob: -6.262603282928467
    4. 'st' → logprob: -6.637603282928467
    5. 'i' → logprob: -6.762603282928467
    6. ' st' → logprob: -7.137603282928467
    7. '[i' → logprob: -7.262603282928467
    8. '[' → logprob: -7.262603282928467
    9. '                ' → logprob: -7.387603282928467
    10. '                   ' → logprob: -8.137603759765625

Token 828: ' res' (ID: 694)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.017833586782217026
    2. ' st' → logprob: -4.267833709716797
    3. '               ' → logprob: -5.767833709716797
    4. 'res' (adapté à ' res') → logprob: -7.767833709716797
    5. '                   ' → logprob: -10.267833709716797
    6. '	st' → logprob: -11.142833709716797
    7. '   ' → logprob: -11.267833709716797
    8. 'nm' → logprob: -11.392833709716797
    9. '           ' → logprob: -12.017833709716797
    10. ' res' → logprob: -12.017833709716797

Token 829: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.949026571121067e-05
    2. '[d' → logprob: -9.875099182128906
    3. '[(' → logprob: -10.125099182128906
    4. '[' → logprob: -11.875099182128906
    5. 'd' → logprob: -15.625099182128906
    6. '   ' → logprob: -15.875099182128906
    7. '(i' → logprob: -15.875099182128906
    8. '[j' → logprob: -16.250099182128906
    9. '[u' → logprob: -16.500099182128906
    10. '[k' → logprob: -16.750099182128906

Token 830: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007201764383353293
    2. '[(' → logprob: -7.250720024108887
    3. '[' → logprob: -11.875720024108887
    4. 'i' → logprob: -13.625720024108887
    5. '(i' → logprob: -14.125720024108887
    6. '   ' → logprob: -14.250720024108887
    7. '```' → logprob: -15.250720024108887
    8. '`' → logprob: -16.125720977783203
    9. '       ' → logprob: -16.250720977783203
    10. '[
' → logprob: -17.000720977783203

Token 831: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001402621390298009
    2. '1' → logprob: -6.626402854919434
    3. 'i' → logprob: -10.001402854919434
    4. '(' → logprob: -11.251402854919434
    5. '(i' → logprob: -11.376402854919434
    6. '   ' → logprob: -13.001402854919434
    7. ' ' → logprob: -13.376402854919434
    8. '           ' → logprob: -14.751402854919434
    9. '```' → logprob: -14.813902854919434
    10. '       ' → logprob: -15.063902854919434

Token 832: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12753640115261078
    2. ']+=' → logprob: -2.1275362968444824
    3. ' ]' → logprob: -8.00253677368164
    4. ' +=' → logprob: -8.62753677368164
    5. '+=' → logprob: -9.62753677368164
    6. ']+' → logprob: -11.12753677368164
    7. '[' → logprob: -12.75253677368164
    8. '```' → logprob: -13.00253677368164
    9. '               ' → logprob: -13.25253677368164
    10. '']' → logprob: -13.37753677368164

Token 833: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.252029150724411
    2. ' +=' → logprob: -1.5020291805267334
    3. ']+=' → logprob: -9.252029418945312
    4. '        ' → logprob: -14.627029418945312
    5. '+' → logprob: -14.752029418945312
    6. '=' → logprob: -14.877029418945312
    7. '    ' → logprob: -15.127029418945312
    8. ' -=' → logprob: -15.127029418945312
    9. '```' → logprob: -15.127029418945312
    10. '[' → logprob: -15.127029418945312

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076127792708575726
    2. ' ' → logprob: -4.882612705230713
    3. '   ' → logprob: -13.382613182067871
    4. '```' → logprob: -13.382613182067871
    5. '0' → logprob: -14.570113182067871
    6. '2' → logprob: -14.882613182067871
    7. '
' → logprob: -14.945113182067871
    8. '	' → logprob: -14.945113182067871
    9. 'st' → logprob: -15.445113182067871
    10. ' ' → logprob: -15.507613182067871

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '-' → logprob: -15.000008583068848
    4. '```' → logprob: -15.875008583068848
    5. 'st' → logprob: -16.062509536743164
    6. '2' → logprob: -16.062509536743164
    7. '0' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.562509536743164
    9. 'i' → logprob: -16.875009536743164
    10. '(' → logprob: -17.125009536743164

Token 836: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01361048687249422
    2. '```' → logprob: -5.013610363006592
    3. '                   ' → logprob: -5.638610363006592
    4. '                ' → logprob: -6.638610363006592
    5. '<|end|>' → logprob: -7.638610363006592
    6. '                
' → logprob: -8.38861083984375
    7. '\n' → logprob: -8.38861083984375
    8. '``' → logprob: -8.63861083984375
    9. '[' → logprob: -8.88861083984375
    10. '           ' → logprob: -8.88861083984375

Token 837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0480915792286396
    2. '```' → logprob: -3.7980916500091553
    3. '<|end|>' → logprob: -4.048091411590576
    4. '			' → logprob: -5.923091411590576
    5. '                   ' → logprob: -6.798091411590576
    6. '                ' → logprob: -7.298091411590576
    7. '[' → logprob: -7.798091411590576
    8. '           ' → logprob: -8.298091888427734
    9. '              ' → logprob: -8.298091888427734
    10. '                
' → logprob: -8.673091888427734

Token 838: ' nm' (ID: 43183)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.02400319091975689
    2. 'nm' (adapté à ' nm') → logprob: -3.899003267288208
    3. ' st' → logprob: -5.899003028869629
    4. ' nm' → logprob: -8.024003028869629
    5. '   ' → logprob: -9.274003028869629
    6. '               ' → logprob: -9.524003028869629
    7. '           ' → logprob: -9.774003028869629
    8. '	st' → logprob: -10.274003028869629
    9. 'stm' → logprob: -10.524003028869629
    10. '       ' → logprob: -11.274003028869629

Token 839: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.10301917791366577
    2. '*=' → logprob: -2.3530192375183105
    3. '*' → logprob: -6.2280192375183105
    4. ' ' → logprob: -8.103018760681152
    5. '	' → logprob: -8.228018760681152
    6. ' *' → logprob: -9.353018760681152
    7. '```' → logprob: -9.978018760681152
    8. '=' → logprob: -10.353018760681152
    9. ')' → logprob: -10.353018760681152
    10. '`' → logprob: -11.353018760681152

Token 840: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -5.621933451038785e-05
    2. ' st' → logprob: -10.875056266784668
    3. 'res' → logprob: -11.250056266784668
    4. '   ' → logprob: -11.500056266784668
    5. '(st' → logprob: -12.375056266784668
    6. 'nst' → logprob: -13.250056266784668
    7. '	st' → logprob: -13.500056266784668
    8. '       ' → logprob: -13.875056266784668
    9. 'nm' → logprob: -14.125056266784668
    10. ' ' → logprob: -14.625056266784668

Token 841: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001216186792589724
    2. '[i' → logprob: -6.876216411590576
    3. 'i' → logprob: -8.876215934753418
    4. 'tt' → logprob: -11.751215934753418
    5. '(i' → logprob: -12.126215934753418
    6. 'т' → logprob: -12.126215934753418
    7. 'st' → logprob: -12.626215934753418
    8. '{i' → logprob: -12.751215934753418
    9. '`t' → logprob: -12.876215934753418
    10. 'p' → logprob: -12.876215934753418

Token 842: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001992490579141304
    2. '[' → logprob: -8.625199317932129
    3. '[(' → logprob: -11.125199317932129
    4. '[
' → logprob: -13.500199317932129
    5. '(i' → logprob: -13.625199317932129
    6. 'i' → logprob: -13.750199317932129
    7. '```' → logprob: -14.125199317932129
    8. '[j' → logprob: -14.750199317932129
    9. '   ' → logprob: -17.125198364257812
    10. '[I' → logprob: -17.375198364257812

Token 843: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5886012315750122
    2. '[i' → logprob: -0.8386012315750122
    3. 'i' → logprob: -5.338601112365723
    4. '(i' → logprob: -5.588601112365723
    5. '[-' → logprob: -5.838601112365723
    6. '[' → logprob: -7.213601112365723
    7. '1' → logprob: -8.713601112365723
    8. '-i' → logprob: -10.213601112365723
    9. ']-' → logprob: -10.713601112365723
    10. ']' → logprob: -10.713601112365723

Token 844: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011844364780699834
    2. '2' → logprob: -9.750118255615234
    3. '0' → logprob: -10.000118255615234
    4. '-' → logprob: -11.375118255615234
    5. 'i' → logprob: -13.875118255615234
    6. '(' → logprob: -14.000118255615234
    7. '(i' → logprob: -14.250118255615234
    8. '
' → logprob: -15.625118255615234
    9. ' ' → logprob: -15.937618255615234
    10. '   ' → logprob: -16.000118255615234

Token 845: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010029466822743416
    2. '-' → logprob: -4.885029315948486
    3. ']
' → logprob: -6.885029315948486
    4. ']-' → logprob: -7.760029315948486
    5. '               ' → logprob: -7.885029315948486
    6. '<|end|>' → logprob: -8.010029792785645
    7. ')' → logprob: -9.260029792785645
    8. ' -' → logprob: -9.760029792785645
    9. ' ]' → logprob: -11.135029792785645
    10. '           ' → logprob: -11.635029792785645

Token 846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002212942810729146
    2. '```' → logprob: -6.252213001251221
    3. '                
' → logprob: -9.377212524414062
    4. '                   ' → logprob: -10.002212524414062
    5. '			' → logprob: -10.377212524414062
    6. '``' → logprob: -10.752212524414062
    7. '<|end|>' → logprob: -11.002212524414062
    8. '           ' → logprob: -11.127212524414062
    9. '\' → logprob: -11.127212524414062
    10. '                ' → logprob: -11.627212524414062

Token 847: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -0.6652866005897522
    2. ' st' → logprob: -1.0402865409851074
    3. '               ' → logprob: -2.0402865409851074
    4. '			' → logprob: -6.665286540985107
    5. '	st' → logprob: -6.790286540985107
    6. '(st' → logprob: -11.040287017822266
    7. '                ' → logprob: -11.165287017822266
    8. '                   ' → logprob: -11.290287017822266
    9. '```' → logprob: -11.290287017822266
    10. '		       ' → logprob: -11.790287017822266

Token 848: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.465036105713807e-06
    2. '[t' → logprob: -12.625007629394531
    3. '`t' → logprob: -14.250007629394531
    4. 'т' → logprob: -14.250007629394531
    5. '+=' → logprob: -15.000007629394531
    6. '[' → logprob: -15.062507629394531
    7. ' +=' → logprob: -15.250007629394531
    8. '```' → logprob: -15.375007629394531
    9. 'r' → logprob: -15.500007629394531
    10. '_' → logprob: -15.625007629394531

Token 849: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -11.500011444091797
    3. 'i' → logprob: -14.750011444091797
    4. '```' → logprob: -15.375011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '[
' → logprob: -16.125011444091797
    7. ' [' → logprob: -17.125011444091797
    8. '       ' → logprob: -17.625011444091797
    9. '[j' → logprob: -17.875011444091797
    10. '(i' → logprob: -17.875011444091797

Token 850: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06249728798866272
    2. '[' → logprob: -3.31249737739563
    3. '[i' → logprob: -3.81249737739563
    4. '1' → logprob: -7.187497138977051
    5. '[-' → logprob: -7.187497138977051
    6. 'i' → logprob: -7.812497138977051
    7. ']-' → logprob: -9.31249713897705
    8. ']' → logprob: -10.68749713897705
    9. '```' → logprob: -11.68749713897705
    10. ' -' → logprob: -12.56249713897705

Token 851: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. '1' → logprob: -10.125041961669922
    3. '0' → logprob: -13.875041961669922
    4. '```' → logprob: -14.375041961669922
    5. ' ' → logprob: -15.375041961669922
    6. '   ' → logprob: -16.000041961669922
    7. '-' → logprob: -16.500041961669922
    8. 'i' → logprob: -16.750041961669922
    9. '``' → logprob: -18.062541961669922
    10. '[' → logprob: -18.312541961669922

Token 852: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.05530501902103424
    2. '-=' → logprob: -3.180305004119873
    3. ']' → logprob: -4.805305004119873
    4. ']-' → logprob: -6.180305004119873
    5. '-' → logprob: -6.305305004119873
    6. ' -' → logprob: -10.430305480957031
    7. '```' → logprob: -10.555305480957031
    8. '   ' → logprob: -11.180305480957031
    9. '           ' → logprob: -11.305305480957031
    10. ' ]' → logprob: -11.555305480957031

Token 853: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12736479938030243
    2. ' -=' → logprob: -2.1273648738861084
    3. '-' → logprob: -7.752364635467529
    4. '   ' → logprob: -13.002365112304688
    5. '```' → logprob: -13.752365112304688
    6. '+=' → logprob: -13.752365112304688
    7. ' -' → logprob: -14.002365112304688
    8. '       ' → logprob: -14.627365112304688
    9. '	' → logprob: -15.127365112304688
    10. '           ' → logprob: -15.377365112304688

Token 854: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.500030517578125
    4. '```' → logprob: -16.875030517578125
    5. '           ' → logprob: -18.875030517578125
    6. '	' → logprob: -19.125030517578125
    7. ' ' → logprob: -19.125030517578125
    8. '                   ' → logprob: -19.250030517578125
    9. '               ' → logprob: -19.500030517578125
    10. '１' → logprob: -20.000030517578125

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.5
    5. '<|end|>' → logprob: -20.0
    6. '=' → logprob: -20.375
    7. '           ' → logprob: -20.375
    8. '１' → logprob: -20.5
    9. '[' → logprob: -20.875
    10. '۱' → logprob: -20.9375

Token 856: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03127342090010643
    2. '        
' → logprob: -4.531273365020752
    3. '<|end|>' → logprob: -5.156273365020752
    4. '\n' → logprob: -5.531273365020752
    5. '```' → logprob: -5.906273365020752
    6. '
' → logprob: -5.906273365020752
    7. '           ' → logprob: -6.281273365020752
    8. '[' → logprob: -7.656273365020752
    9. '            
' → logprob: -8.03127384185791
    10. '   ' → logprob: -8.15627384185791

Token 857: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09911243617534637
    2. '\n' → logprob: -3.5991125106811523
    3. '
' → logprob: -3.9741125106811523
    4. '%' → logprob: -3.9741125106811523
    5. '        
' → logprob: -4.724112510681152
    6. '%n' → logprob: -5.099112510681152
    7. 'nm' → logprob: -5.599112510681152
    8. '%
' → logprob: -5.974112510681152
    9. '```' → logprob: -6.224112510681152
    10. '   ' → logprob: -6.724112510681152

Token 858: ' #' (ID: 1069)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.3138848841190338
    2. 'nm' → logprob: -1.3138848543167114
    3. '
' → logprob: -8.313884735107422
    4. '\n' → logprob: -8.688884735107422
    5. '_nm' → logprob: -9.438884735107422
    6. '       ' → logprob: -10.563884735107422
    7. '```' → logprob: -10.813884735107422
    8. '(n' → logprob: -11.063884735107422
    9. 'n' → logprob: -11.188884735107422
    10. '[n' → logprob: -11.188884735107422

Token 859: ' Application' (ID: 12493)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.02328263409435749
    2. ' nm' → logprob: -3.773282527923584
    3. '   ' → logprob: -10.898283004760742
    4. 'n' → logprob: -12.148283004760742
    5. '_nm' → logprob: -12.273283004760742
    6. '       ' → logprob: -13.148283004760742
    7. '
' → logprob: -13.398283004760742
    8. 'if' → logprob: -14.023283004760742
    9. 'mod' → logprob: -14.148283004760742
    10. 'num' → logprob: -14.648283004760742

Token 860: ' du' (ID: 1462)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.2378036081790924
    2. '%=' → logprob: -1.61280357837677
    3. ' nm' → logprob: -5.4878034591674805
    4. '%' → logprob: -6.2378034591674805
    5. '   ' → logprob: -6.3628034591674805
    6. '=' → logprob: -6.7378034591674805
    7. ' %' → logprob: -7.3628034591674805
    8. '%n' → logprob: -7.8628034591674805
    9. ' =' → logprob: -7.9878034591674805
    10. '(n' → logprob: -7.9878034591674805

Token 861: ' modulo' (ID: 112372)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.3241134583950043
    2. 'mod' → logprob: -1.6991134881973267
    3. 'nm' → logprob: -2.949113368988037
    4. ' mod' → logprob: -4.074113368988037
    5. ' %' → logprob: -4.324113368988037
    6. '%' → logprob: -5.824113368988037
    7. '`' → logprob: -6.074113368988037
    8. ' modulo' → logprob: -6.199113368988037
    9. '```' → logprob: -6.574113368988037
    10. ' ' → logprob: -7.574113368988037

Token 862: ' après' (ID: 16460)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.7674318552017212
    2. '%=' → logprob: -1.3924318552017212
    3. ' nm' → logprob: -1.6424318552017212
    4. 'nm' → logprob: -3.1424317359924316
    5. '=' → logprob: -4.267431735992432
    6. ' =' → logprob: -4.267431735992432
    7. '
' → logprob: -4.642431735992432
    8. '%' → logprob: -5.392431735992432
    9. '%n' → logprob: -6.142431735992432
    10. ' %' → logprob: -6.767431735992432

Token 863: ' chaque' (ID: 21194)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.7403380870819092
    2. '=' → logprob: -0.8653380870819092
    3. 'nm' → logprob: -2.615338087081909
    4. '%=' → logprob: -4.490338325500488
    5. ' =' → logprob: -4.740338325500488
    6. ' %=' → logprob: -5.490338325500488
    7. ' ' → logprob: -6.990338325500488
    8. '```' → logprob: -7.115338325500488
    9. '`' → logprob: -7.490338325500488
    10. ' ' → logprob: -7.615338325500488

Token 864: ' mise' (ID: 25868)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.31738898158073425
    2. 'nm' → logprob: -1.3173890113830566
    3. '*' → logprob: -6.317389011383057
    4. '   ' → logprob: -7.817389011383057
    5. 'mod' → logprob: -7.817389011383057
    6. '_nm' → logprob: -8.442388534545898
    7. ' ' → logprob: -8.817388534545898
    8. ' *=' → logprob: -9.067388534545898
    9. '```' → logprob: -9.192388534545898
    10. '\n' → logprob: -9.442388534545898

Token 865: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07692790776491165
    2. '*=' → logprob: -3.451927900314331
    3. ' =' → logprob: -3.826927900314331
    4. '   ' → logprob: -5.32692813873291
    5. 'nm' → logprob: -5.57692813873291
    6. '*' → logprob: -6.20192813873291
    7. '_nm' → logprob: -6.32692813873291
    8. ' *=' → logprob: -6.57692813873291
    9. '=
' → logprob: -6.95192813873291
    10. '_' → logprob: -6.95192813873291

Token 866: ' jour' (ID: 8379)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.10038059949874878
    2. ' nm' → logprob: -3.2253806591033936
    3. 'mod' → logprob: -3.6003806591033936
    4. '100' → logprob: -4.1003804206848145
    5. '=' → logprob: -5.8503804206848145
    6. '```' → logprob: -5.8503804206848145
    7. '_nm' → logprob: -5.9753804206848145
    8. '%' → logprob: -7.6003804206848145
    9. '1' → logprob: -7.8503804206848145
    10. '(mod' → logprob: -7.9753804206848145

Token 867: ' pour' (ID: 1930)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -1.0817747116088867
    2. ' =' → logprob: -1.5817747116088867
    3. 'nm' → logprob: -1.9567747116088867
    4. '=' → logprob: -1.9567747116088867
    5. ' %=' → logprob: -2.5817747116088867
    6. '%=' → logprob: -2.8317747116088867
    7. '\n' → logprob: -3.8317747116088867
    8. '
' → logprob: -4.831774711608887
    9. '(n' → logprob: -6.456774711608887
    10. '   ' → logprob: -6.456774711608887

Token 868: ' rester' (ID: 54655)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.10114692151546478
    2. 'nm' → logprob: -2.351146936416626
    3. ' ' → logprob: -8.351146697998047
    4. '_nm' → logprob: -8.726146697998047
    5. '```' → logprob: -9.226146697998047
    6. '\n' → logprob: -9.476146697998047
    7. 'mod' → logprob: -10.351146697998047
    8. '`' → logprob: -10.476146697998047
    9. 'n' → logprob: -10.601146697998047
    10. ')' → logprob: -10.726146697998047

Token 869: ' dans' (ID: 2671)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5804827213287354
    2. ' %=' → logprob: -1.4554827213287354
    3. ' nm' → logprob: -2.3304827213287354
    4. '%' → logprob: -2.3304827213287354
    5. '%n' → logprob: -5.205482482910156
    6. '=' → logprob: -5.830482482910156
    7. ' %' → logprob: -6.955482482910156
    8. 'nm' → logprob: -6.955482482910156
    9. ' mod' → logprob: -7.330482482910156
    10. 'mod' → logprob: -7.455482482910156

Token 870: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16463206708431244
    2. ' mod' → logprob: -1.9146320819854736
    3. '(mod' → logprob: -6.1646318435668945
    4. '998' → logprob: -6.4146318435668945
    5. ' nm' → logprob: -7.7896318435668945
    6. '	mod' → logprob: -9.789631843566895
    7. 'nm' → logprob: -9.914631843566895
    8. ' modulo' → logprob: -10.414631843566895
    9. '%' → logprob: -10.664631843566895
    10. ' %' → logprob: -11.039631843566895

Token 871: ' limite' (ID: 48939)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02543194778263569
    2. ' mod' → logprob: -3.9004318714141846
    3. '998' → logprob: -5.775432109832764
    4. '```' → logprob: -6.650432109832764
    5. ' modulo' → logprob: -8.775431632995605
    6. '%' → logprob: -9.525431632995605
    7. '(mod' → logprob: -10.025431632995605
    8. '999' → logprob: -10.275431632995605
    9. 'm' → logprob: -10.400431632995605
    10. ' modulus' → logprob: -10.900431632995605

Token 872: '
' (ID: 198)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.23858313262462616
    2. '%=' → logprob: -2.3635830879211426
    3. ' nm' → logprob: -2.6135830879211426
    4. '(n' → logprob: -4.238583087921143
    5. 'nm' → logprob: -4.238583087921143
    6. '=' → logprob: -5.363583087921143
    7. ' =' → logprob: -5.738583087921143
    8. '%n' → logprob: -6.113583087921143
    9. '_nm' → logprob: -6.113583087921143
    10. '%' → logprob: -6.613583087921143

Token 873: '       ' (ID: 309)
  Prédit: ' nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nm' → logprob: -1.0296568870544434
    2. ' =' → logprob: -1.2796568870544434
    3. '=' → logprob: -1.6546568870544434
    4. 'nm' → logprob: -2.6546568870544434
    5. '   ' → logprob: -2.7796568870544434
    6. '%=' → logprob: -3.7796568870544434
    7. ' %=' → logprob: -4.779656887054443
    8. '```' → logprob: -5.654656887054443
    9. '(n' → logprob: -6.779656887054443
    10. '_nm' → logprob: -7.029656887054443

Token 874: ' nm' (ID: 43183)
  Prédit: ' nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nm' → logprob: -0.20202970504760742
    2. 'nm' (adapté à ' nm') → logprob: -1.7020297050476074
    3. '\n' → logprob: -8.702030181884766
    4. '
' → logprob: -8.952030181884766
    5. '   ' → logprob: -8.952030181884766
    6. '_nm' → logprob: -10.202030181884766
    7. '(n' → logprob: -10.202030181884766
    8. 'n' → logprob: -10.452030181884766
    9. '```' → logprob: -10.702030181884766
    10. ' =' → logprob: -11.952030181884766

Token 875: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.03870423510670662
    2. ' %=' → logprob: -3.2887041568756104
    3. '=' → logprob: -7.9137043952941895
    4. '%' → logprob: -8.163703918457031
    5. '```' → logprob: -12.288703918457031
    6. ')' → logprob: -13.288703918457031
    7. ' =' → logprob: -13.413703918457031
    8. ' ' → logprob: -13.413703918457031
    9. '	' → logprob: -13.663703918457031
    10. ' %' → logprob: -14.413703918457031

Token 876: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.180258191714529e-06
    2. '998' → logprob: -11.750008583068848
    3. ' mod' → logprob: -15.875008583068848
    4. '(mod' → logprob: -16.87500762939453
    5. '	mod' → logprob: -20.37500762939453
    6. 'MOD' → logprob: -20.62500762939453
    7. 'moder' → logprob: -21.75000762939453
    8. '_mod' → logprob: -22.25000762939453
    9. 'Mod' → logprob: -22.37500762939453
    10. ' мод' → logprob: -22.62500762939453

Token 877: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 878: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1636064350605011
    2. '   ' → logprob: -2.5386064052581787
    3. '<|end|>' → logprob: -2.7886064052581787
    4. '```' → logprob: -5.288606643676758
    5. 'return' → logprob: -6.413606643676758
    6. '    
' → logprob: -6.538606643676758
    7. '
' → logprob: -7.038606643676758
    8. ' if' → logprob: -8.163606643676758
    9. '#' → logprob: -8.288606643676758
    10. '  
' → logprob: -8.663606643676758

Token 879: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10023266077041626
    2. '   ' → logprob: -2.3502326011657715
    3. '```' → logprob: -10.72523307800293
    4. 'if' → logprob: -13.10023307800293
    5. 'return' → logprob: -13.97523307800293
    6. ' print' → logprob: -14.22523307800293
    7. '	print' → logprob: -15.97523307800293
    8. 'for' → logprob: -16.10023307800293
    9. '    
' → logprob: -16.35023307800293
    10. '#print' → logprob: -17.22523307800293

Token 880: ' Bou' (ID: 33816)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001600347168277949
    2. '   ' → logprob: -8.750160217285156
    3. 'return' → logprob: -14.375160217285156
    4. ' print' → logprob: -14.750160217285156
    5. '#' → logprob: -15.500160217285156
    6. 'if' → logprob: -15.750160217285156
    7. '```' → logprob: -16.000160217285156
    8. '#print' → logprob: -16.500160217285156
    9. '
' → logprob: -17.875160217285156
    10. 'pr' → logprob: -18.250160217285156

Token 881: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.00430086487904191
    2. 'cl' → logprob: -5.754301071166992
    3. '#' → logprob: -7.879301071166992
    4. 'c' → logprob: -8.129301071166992
    5. 'n' → logprob: -8.754301071166992
    6. '
' → logprob: -9.629301071166992
    7. 't' → logprob: -9.629301071166992
    8. '   ' → logprob: -10.254301071166992
    9. 'clé' → logprob: -10.379301071166992
    10. 'cler' → logprob: -10.629301071166992

Token 882: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004819088149815798
    2. ' for' → logprob: -5.504818916320801
    3. '   ' → logprob: -7.254818916320801
    4. '#' → logprob: -10.7548189163208
    5. ':' → logprob: -11.7548189163208
    6. '```' → logprob: -13.8798189163208
    7. '	for' → logprob: -14.1298189163208
    8. '
' → logprob: -14.5048189163208
    9. 'final' → logprob: -14.6298189163208
    10. 'range' → logprob: -15.2548189163208

Token 883: ' multiplier' (ID: 61814)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021639786660671234
    2. '_' → logprob: -4.521639823913574
    3. '_i' → logprob: -5.521639823913574
    4. ' i' → logprob: -5.646639823913574
    5. 'for' → logprob: -7.021639823913574
    6. 'res' → logprob: -7.396639823913574
    7. 'print' → logprob: -8.771639823913574
    8. ' _' → logprob: -9.021639823913574
    9. '```' → logprob: -9.146639823913574
    10. 'c' → logprob: -9.146639823913574

Token 884: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6850029826164246
    2. 'for' → logprob: -1.5600030422210693
    3. '_' → logprob: -2.0600030422210693
    4. '(i' → logprob: -2.8100030422210693
    5. ' for' → logprob: -3.4350030422210693
    6. ' i' → logprob: -3.4350030422210693
    7. 'res' → logprob: -4.93500280380249
    8. 'nm' → logprob: -5.18500280380249
    9. 'range' → logprob: -5.56000280380249
    10. '   ' → logprob: -5.81000280380249

Token 885: ' résultat' (ID: 62556)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33345550298690796
    2. 'nm' → logprob: -1.4584555625915527
    3. 'for' → logprob: -3.5834555625915527
    4. 'res' → logprob: -4.458455562591553
    5. '_' → logprob: -6.208455562591553
    6. 'r' → logprob: -6.333455562591553
    7. 'nc' → logprob: -6.458455562591553
    8. 'x' → logprob: -6.833455562591553
    9. '_i' → logprob: -7.333455562591553
    10. 'k' → logprob: -7.458455562591553

Token 886: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01643783412873745
    2. ' for' → logprob: -4.391438007354736
    3. '_' → logprob: -5.641438007354736
    4. '```' → logprob: -8.391437530517578
    5. ' _' → logprob: -9.391437530517578
    6. '   ' → logprob: -10.766437530517578
    7. 'i' → logprob: -11.391437530517578
    8. '_for' → logprob: -11.641437530517578
    9. '_i' → logprob: -12.391437530517578
    10. '``' → logprob: -12.516437530517578

Token 887: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002478508511558175
    2. ' for' → logprob: -6.12747859954834
    3. '_' → logprob: -8.37747859954834
    4. '```' → logprob: -9.87747859954834
    5. '   ' → logprob: -12.50247859954834
    6. 'i' → logprob: -13.25247859954834
    7. '``' → logprob: -13.37747859954834
    8. '`' → logprob: -13.50247859954834
    9. '_for' → logprob: -13.75247859954834
    10. ' _' → logprob: -14.62747859954834

Token 888: ' toutes' (ID: 17502)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.10754909366369247
    2. '1' → logprob: -2.8575491905212402
    3. 'nm' → logprob: -4.60754919052124
    4. 'i' → logprob: -4.98254919052124
    5. '2' → logprob: -4.98254919052124
    6. '(math' → logprob: -5.23254919052124
    7. 'res' → logprob: -5.73254919052124
    8. '(n' → logprob: -5.85754919052124
    9. 'pow' → logprob: -5.85754919052124
    10. '(i' → logprob: -6.23254919052124

Token 889: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3402644395828247
    2. 'k' → logprob: -2.215264320373535
    3. '_' → logprob: -2.465264320373535
    4. 'range' → logprob: -3.215264320373535
    5. '(i' → logprob: -3.590264320373535
    6. 'x' → logprob: -5.215264320373535
    7. ' i' → logprob: -5.590264320373535
    8. '(n' → logprob: -5.965264320373535
    9. 'j' → logprob: -6.090264320373535
    10. '(k' → logprob: -6.215264320373535

Token 890: ' valeurs' (ID: 73668)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08101792633533478
    2. 'i' → logprob: -2.8310179710388184
    3. 'k' → logprob: -4.331017971038818
    4. 'factor' → logprob: -6.456017971038818
    5. 'x' → logprob: -6.831017971038818
    6. 'num' → logprob: -7.581017971038818
    7. 'val' → logprob: -8.20601749420166
    8. 'n' → logprob: -8.45601749420166
    9. 'j' → logprob: -8.45601749420166
    10. 'for' → logprob: -8.58101749420166

Token 891: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08363377302885056
    2. 'in' → logprob: -3.8336336612701416
    3. 'range' → logprob: -3.9586336612701416
    4. 'i' → logprob: -4.083633899688721
    5. '_' → logprob: -4.583633899688721
    6. '```' → logprob: -5.708633899688721
    7. '   ' → logprob: -5.958633899688721
    8. 'from' → logprob: -5.958633899688721
    9. ' for' → logprob: -7.458633899688721
    10. '*' → logprob: -7.458633899688721

Token 892: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021874941885471344
    2. 'nm' → logprob: -4.896874904632568
    3. '1' → logprob: -5.021874904632568
    4. '```' → logprob: -5.771874904632568
    5. 'i' → logprob: -6.146874904632568
    6. 'res' → logprob: -6.646874904632568
    7. 'k' → logprob: -7.521874904632568
    8. ' range' → logprob: -9.021875381469727
    9. 'j' → logprob: -9.771875381469727
    10. '2' → logprob: -9.771875381469727

Token 893: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003335585934109986
    2. 'i' → logprob: -8.125333786010742
    3. 'nm' → logprob: -11.375333786010742
    4. '```' → logprob: -11.750333786010742
    5. ' range' → logprob: -12.125333786010742
    6. 'k' → logprob: -12.500333786010742
    7. '_range' → logprob: -13.250333786010742
    8. '1' → logprob: -13.625333786010742
    9. 'j' → logprob: -13.750333786010742
    10. '   ' → logprob: -14.000333786010742

Token 894: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006079291459172964
    2. 'import' → logprob: -6.256079196929932
    3. ' ,' → logprob: -6.631079196929932
    4. '
' → logprob: -7.506079196929932
    5. ',
' → logprob: -7.506079196929932
    6. '+' → logprob: -7.631079196929932
    7. ',n' → logprob: -8.13107967376709
    8. '*' → logprob: -8.38107967376709
    9. 'range' → logprob: -9.13107967376709
    10. '1' → logprob: -9.25607967376709

Token 895: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009884409606456757
    2. ' n' → logprob: -4.634884357452393
    3. 'nm' → logprob: -9.88488483428955
    4. 'nc' → logprob: -10.38488483428955
    5. '(n' → logprob: -10.88488483428955
    6. '
' → logprob: -11.63488483428955
    7. '1' → logprob: -11.75988483428955
    8. '	n' → logprob: -12.75988483428955
    9. ' nm' → logprob: -12.88488483428955
    10. '   ' → logprob: -13.63488483428955

Token 896: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013761937618255615
    2. ' for' → logprob: -4.5137619972229
    3. '   ' → logprob: -6.0137619972229
    4. '*' → logprob: -9.638761520385742
    5. '	for' → logprob: -10.013761520385742
    6. '```' → logprob: -10.138761520385742
    7. 'i' → logprob: -10.638761520385742
    8. '1' → logprob: -11.138761520385742
    9. 'range' → logprob: -11.513761520385742
    10. '    
' → logprob: -11.638761520385742

Token 897: 'factor' (ID: 73174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03133130446076393
    2. 'n' → logprob: -4.281331539154053
    3. 'range' → logprob: -5.031331539154053
    4. '1' → logprob: -5.406331539154053
    5. 'i' → logprob: -5.906331539154053
    6. '   ' → logprob: -6.156331539154053
    7. ' for' → logprob: -7.031331539154053
    8. '```' → logprob: -9.281331062316895
    9. '(n' → logprob: -10.156331062316895
    10. ')' → logprob: -10.406331062316895

Token 898: 'ielle' (ID: 22380)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.25661805272102356
    2. 'i' → logprob: -2.881618022918701
    3. '*' → logprob: -3.256618022918701
    4. ')' → logprob: -3.506618022918701
    5. 'n' → logprob: -3.881618022918701
    6. 'ial' → logprob: -4.131618022918701
    7. '(n' → logprob: -4.131618022918701
    8. '(' → logprob: -4.256618022918701
    9. '1' → logprob: -4.631618022918701
    10. 'for' → logprob: -5.381618022918701

Token 899: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23128145933151245
    2. '   ' → logprob: -1.7312815189361572
    3. ' for' → logprob: -4.606281280517578
    4. '(' → logprob: -4.981281280517578
    5. '(n' → logprob: -4.981281280517578
    6. '
' → logprob: -5.981281280517578
    7. ',' → logprob: -7.356281280517578
    8. ':' → logprob: -7.481281280517578
    9. ':
' → logprob: -7.981281280517578
    10. '1' → logprob: -8.106281280517578

Token 900: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20238758623600006
    2. 'for' → logprob: -1.7023875713348389
    3. ' for' → logprob: -6.952387809753418
    4. '```' → logprob: -11.952387809753418
    5. '	for' → logprob: -12.077387809753418
    6. '    
' → logprob: -13.077387809753418
    7. '
' → logprob: -13.702387809753418
    8. '       ' → logprob: -14.077387809753418
    9. '``' → logprob: -15.077387809753418
    10. '`' → logprob: -15.577387809753418

Token 901: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0029671266674995422
    2. '   ' → logprob: -5.877967357635498
    3. ' for' → logprob: -8.75296688079834
    4. '```' → logprob: -12.75296688079834
    5. '	for' → logprob: -14.12796688079834
    6. '    
' → logprob: -15.37796688079834
    7. '``' → logprob: -15.87796688079834
    8. '
' → logprob: -16.127967834472656
    9. ' ' → logprob: -16.752967834472656
    10. '  ' → logprob: -17.002967834472656

Token 902: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07233674824237823
    2. 'x' → logprob: -3.3223366737365723
    3. 'j' → logprob: -3.6973366737365723
    4. 'k' → logprob: -5.447336673736572
    5. ' i' → logprob: -6.447336673736572
    6. 'v' → logprob: -6.822336673736572
    7. 'num' → logprob: -7.947336673736572
    8. 'ii' → logprob: -8.19733715057373
    9. 'a' → logprob: -8.32233715057373
    10. ' j' → logprob: -9.07233715057373

Token 903: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16028526425361633
    2. 'in' → logprob: -1.910285234451294
    3. '1' → logprob: -10.035284996032715
    4. ' ' → logprob: -12.035284996032715
    5. '   ' → logprob: -13.285284996032715
    6. 'import' → logprob: -13.535284996032715
    7. '	in' → logprob: -13.535284996032715
    8. '_' → logprob: -13.785284996032715
    9. ',' → logprob: -13.910284996032715
    10. '  ' → logprob: -14.160284996032715

Token 904: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234832875430584
    2. ' range' → logprob: -5.255234718322754
    3. '	range' → logprob: -14.880234718322754
    4. '(range' → logprob: -15.130234718322754
    5. '1' → logprob: -15.505234718322754
    6. '   ' → logprob: -16.25523567199707
    7. ' ' → logprob: -16.63023567199707
    8. '```' → logprob: -16.88023567199707
    9. 'in' → logprob: -17.25523567199707
    10. 'rang' → logprob: -17.50523567199707

Token 905: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740891456604004
    2. '1' → logprob: -0.9740891456604004
    3. '   ' → logprob: -11.599088668823242
    4. '2' → logprob: -13.474088668823242
    5. ' ' → logprob: -14.099088668823242
    6. '
' → logprob: -15.099088668823242
    7. '(n' → logprob: -15.349088668823242
    8. 'n' → logprob: -16.099088668823242
    9. ',' → logprob: -16.974088668823242
    10. ' (' → logprob: -17.474088668823242

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '2' → logprob: -11.250014305114746
    3. 'n' → logprob: -13.750014305114746
    4. '   ' → logprob: -15.250014305114746
    5. ' ' → logprob: -15.375014305114746
    6. '(' → logprob: -19.875015258789062
    7. '
' → logprob: -20.875015258789062
    8. '    ' → logprob: -21.000015258789062
    9. '１' → logprob: -21.000015258789062
    10. '	' → logprob: -21.750015258789062

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00386053160764277
    2. ',n' → logprob: -5.6288604736328125
    3. ' ,' → logprob: -8.753860473632812
    4. '(n' → logprob: -9.878860473632812
    5. 'n' → logprob: -10.503860473632812
    6. '   ' → logprob: -11.128860473632812
    7. '1' → logprob: -12.128860473632812
    8. '(' → logprob: -13.003860473632812
    9. ',
' → logprob: -14.378860473632812
    10. ' n' → logprob: -14.753860473632812

Token 908: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. ' n' → logprob: -14.750000953674316
    3. '   ' → logprob: -18.25
    4. '(n' → logprob: -18.625
    5. '	n' → logprob: -18.75
    6. ')n' → logprob: -20.375
    7. '[n' → logprob: -20.625
    8. '```' → logprob: -21.0
    9. '
' → logprob: -21.625
    10. '_n' → logprob: -21.75

Token 909: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006313055637292564
    2. ' +' → logprob: -7.375631332397461
    3. '+n' → logprob: -12.875631332397461
    4. '+
' → logprob: -13.875631332397461
    5. '   ' → logprob: -14.500631332397461
    6. '):
' → logprob: -14.875631332397461
    7. '+i' → logprob: -16.50063133239746
    8. ',' → logprob: -16.62563133239746
    9. '
' → logprob: -17.12563133239746
    10. '```' → logprob: -17.62563133239746

Token 910: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019066202221438289
    2. 'i' → logprob: -6.501906394958496
    3. 'n' → logprob: -8.001906394958496
    4. ' ' → logprob: -10.626906394958496
    5. '   ' → logprob: -10.876906394958496
    6. ')' → logprob: -11.001906394958496
    7. '```' → logprob: -12.001906394958496
    8. '):
' → logprob: -13.876906394958496
    9. '(n' → logprob: -14.001906394958496
    10. ' n' → logprob: -14.501906394958496

Token 911: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26331037282943726
    2. '):' → logprob: -1.888310432434082
    3. ':' → logprob: -3.388310432434082
    4. ':
' → logprob: -3.513310432434082
    5. '   ' → logprob: -4.513310432434082
    6. ')' → logprob: -5.513310432434082
    7. ',' → logprob: -7.638310432434082
    8. '):
' → logprob: -8.263310432434082
    9. ' nm' → logprob: -8.388310432434082
    10. 'nm' → logprob: -8.513310432434082

Token 912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07615185528993607
    2. 'nm' → logprob: -3.2011518478393555
    3. '   ' → logprob: -3.5761518478393555
    4. ' nm' → logprob: -5.9511518478393555
    5. '```' → logprob: -6.3261518478393555
    6. '_nm' → logprob: -9.826151847839355
    7. 'n' → logprob: -10.451151847839355
    8. '(n' → logprob: -10.951151847839355
    9. '    ' → logprob: -11.326151847839355
    10. '``' → logprob: -11.451151847839355

Token 913: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' (adapté à ' nm') → logprob: -0.04452314227819443
    2. '   ' → logprob: -3.294523239135742
    3. ' nm' → logprob: -5.169523239135742
    4. '       ' → logprob: -7.294523239135742
    5. '_nm' → logprob: -9.794523239135742
    6. '```' → logprob: -10.419523239135742
    7. 'n' → logprob: -12.669523239135742
    8. '    ' → logprob: -13.919523239135742
    9. '  ' → logprob: -13.919523239135742
    10. '	n' → logprob: -14.419523239135742

Token 914: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.011259548366069794
    2. '=' → logprob: -4.51125955581665
    3. ' *=' → logprob: -8.511259078979492
    4. ' =' → logprob: -12.386259078979492
    5. '*' → logprob: -13.011259078979492
    6. '```' → logprob: -13.261259078979492
    7. '   ' → logprob: -13.636259078979492
    8. '\' → logprob: -14.636259078979492
    9. '	' → logprob: -15.386259078979492
    10. '%=' → logprob: -15.636259078979492

Token 915: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. ' i' → logprob: -17.5
    3. '   ' → logprob: -20.875
    4. '	i' → logprob: -23.875
    5. '  ' → logprob: -25.75
    6. '(i' → logprob: -26.125
    7. '
' → logprob: -26.625
    8. '%i' → logprob: -26.75
    9. ' ' → logprob: -27.0
    10. '       ' → logprob: -27.25

Token 916: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.11438915878534317
    2. '%n' → logprob: -3.489389181137085
    3. ' nm' → logprob: -3.989389181137085
    4. ' %=' → logprob: -4.114388942718506
    5. 'nm' → logprob: -4.239388942718506
    6. '%=' → logprob: -4.489388942718506
    7. ' %' → logprob: -5.739388942718506
    8. '<|end|>' → logprob: -5.864388942718506
    9. '       ' → logprob: -6.239388942718506
    10. '(n' → logprob: -6.239388942718506

Token 917: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0608758926391602
    2. 'nm' → logprob: -1.0608758926391602
    3. ' nm' → logprob: -2.31087589263916
    4. '%n' → logprob: -2.56087589263916
    5. '```' → logprob: -3.18587589263916
    6. '<|end|>' → logprob: -3.68587589263916
    7. '(n' → logprob: -4.31087589263916
    8. '       ' → logprob: -4.56087589263916
    9. '_nm' → logprob: -4.81087589263916
    10. '\n' → logprob: -4.93587589263916

Token 918: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' (adapté à ' nm') → logprob: -0.25203055143356323
    2. ' nm' → logprob: -1.502030611038208
    3. '_nm' → logprob: -9.627030372619629
    4. 'n' → logprob: -11.502030372619629
    5. '```' → logprob: -11.502030372619629
    6. ' ' → logprob: -12.252030372619629
    7. '(n' → logprob: -12.752030372619629
    8. '\n' → logprob: -13.377030372619629
    9. 'mod' → logprob: -13.877030372619629
    10. '​' → logprob: -14.127030372619629

Token 919: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0003013809327967465
    2. ' %=' → logprob: -8.250301361083984
    3. '%' → logprob: -10.125301361083984
    4. '=' → logprob: -18.375301361083984
    5. ')%' → logprob: -18.375301361083984
    6. '%n' → logprob: -18.875301361083984
    7. '	' → logprob: -19.000301361083984
    8. '%\' → logprob: -19.750301361083984
    9. ' ' → logprob: -19.875301361083984
    10. '//=' → logprob: -20.000301361083984

Token 920: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -15.75
    3. '998' → logprob: -18.625
    4. '(mod' → logprob: -19.125
    5. '	mod' → logprob: -21.375
    6. 'moder' → logprob: -22.875
    7. 'MOD' → logprob: -23.625
    8. '_mod' → logprob: -24.75
    9. ' мод' → logprob: -25.0
    10. 'mods' → logprob: -25.25

Token 921: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009264281019568443
    2. '```' → logprob: -6.0092644691467285
    3. '
' → logprob: -6.1342644691467285
    4. '    
' → logprob: -6.3842644691467285
    5. 'print' → logprob: -6.8842644691467285
    6. '\n' → logprob: -6.8842644691467285
    7. 'return' → logprob: -7.8842644691467285
    8. '<|end|>' → logprob: -8.50926399230957
    9. '  
' → logprob: -9.38426399230957
    10. '\' → logprob: -10.63426399230957

Token 922: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20190870761871338
    2. 'print' → logprob: -1.7019087076187134
    3. '```' → logprob: -7.951908588409424
    4. '
' → logprob: -9.326909065246582
    5. '    
' → logprob: -9.951909065246582
    6. ' print' → logprob: -12.201909065246582
    7. '	print' → logprob: -13.951909065246582
    8. '``' → logprob: -15.201909065246582
    9. '  
' → logprob: -15.826909065246582
    10. '        
' → logprob: -16.076908111572266

Token 923: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009119403548538685
    2. '   ' → logprob: -7.000911712646484
    3. '```' → logprob: -15.250911712646484
    4. ' print' → logprob: -16.000911712646484
    5. '
' → logprob: -17.500911712646484
    6. '	print' → logprob: -17.625911712646484
    7. '    
' → logprob: -18.750911712646484
    8. '#print' → logprob: -19.750911712646484
    9. '#' (adapté à ' #') → logprob: -21.875911712646484
    10. '  ' → logprob: -22.375911712646484

Token 924: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' print' → logprob: -16.5
    4. '
' → logprob: -22.75
    5. '#print' → logprob: -22.75
    6. '```' → logprob: -22.75
    7. '	print' → logprob: -23.375
    8. '#' → logprob: -24.125
    9. 'import' → logprob: -24.5
    10. 'return' → logprob: -25.125

Token 925: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.16096451878547668
    2. 'iche' → logprob: -1.9109644889831543
    3. '#' → logprob: -8.035964965820312
    4. 'ichage' → logprob: -8.660964965820312
    5. 'fic' → logprob: -8.910964965820312
    6. 'ic' → logprob: -10.285964965820312
    7. 'f' → logprob: -10.660964965820312
    8. 'ich' → logprob: -11.535964965820312
    9. '   ' → logprob: -11.535964965820312
    10. '```' → logprob: -12.035964965820312

Token 926: ' du' (ID: 1462)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012740427628159523
    2. '(' → logprob: -7.001274108886719
    3. '   ' → logprob: -8.376274108886719
    4. 'print' → logprob: -9.001274108886719
    5. 'nm' → logprob: -12.376274108886719
    6. '(print' → logprob: -13.001274108886719
    7. '()' → logprob: -14.501274108886719
    8. '()
' → logprob: -14.751274108886719
    9. '```' → logprob: -14.751274108886719
    10. 'n' → logprob: -15.501274108886719

Token 927: ' résultat' (ID: 62556)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.02159499004483223
    2. 'result' → logprob: -4.021595001220703
    3. '(n' → logprob: -6.021595001220703
    4. 'n' → logprob: -7.646595001220703
    5. 'print' → logprob: -7.896595001220703
    6. ' nm' → logprob: -9.021595001220703
    7. 'final' → logprob: -11.021595001220703
    8. '   ' → logprob: -11.896595001220703
    9. 'nom' → logprob: -13.271595001220703
    10. '(' → logprob: -13.521595001220703

Token 928: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759814977645874
    2. 'print' → logprob: -0.8259814977645874
    3. ' print' → logprob: -10.700981140136719
    4. '```' → logprob: -10.950981140136719
    5. '
' → logprob: -13.700981140136719
    6. '	print' → logprob: -14.575981140136719
    7. '    
' → logprob: -15.075981140136719
    8. '``' → logprob: -17.32598114013672
    9. '`' → logprob: -17.82598114013672
    10. '(print' → logprob: -17.95098114013672

Token 929: ' modulo' (ID: 112372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20144784450531006
    2. '   ' → logprob: -1.70144784450531
    3. '```' → logprob: -10.576447486877441
    4. ' print' → logprob: -11.701447486877441
    5. '	print' → logprob: -14.576447486877441
    6. '
' → logprob: -15.701447486877441
    7. '    
' → logprob: -17.076448440551758
    8. '``' → logprob: -17.576448440551758
    9. '`' → logprob: -18.076448440551758
    10. '(print' → logprob: -18.701448440551758

Token 930: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5007027387619019
    2. '998' → logprob: -1.1257027387619019
    3. 'nm' → logprob: -2.7507028579711914
    4. '(mod' → logprob: -5.500702857971191
    5. ' nm' → logprob: -7.875702857971191
    6. ' mod' → logprob: -8.375702857971191
    7. '```' → logprob: -8.500702857971191
    8. '   ' → logprob: -8.875702857971191
    9. '\n' → logprob: -8.875702857971191
    10. 'print' → logprob: -9.625702857971191

Token 931: '998' (ID: 34589)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00026979928952641785
    2. '998' → logprob: -8.250269889831543
    3. '(mod' → logprob: -12.000269889831543
    4. ' mod' → logprob: -13.000269889831543
    5. '```' → logprob: -16.750268936157227
    6. '999' → logprob: -16.875268936157227
    7. '	mod' → logprob: -18.500268936157227
    8. '   ' → logprob: -19.375268936157227
    9. 'MOD' → logprob: -19.375268936157227
    10. ' мод' → logprob: -19.750268936157227

Token 932: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: 0.0
    2. 'mod' → logprob: -17.75
    3. '24' → logprob: -18.375
    4. '```' → logprob: -18.5
    5. '234' → logprob: -18.625
    6. '%' → logprob: -19.125
    7. '   ' → logprob: -19.375
    8. '344' → logprob: -20.0
    9. '       ' → logprob: -20.25
    10. '2' → logprob: -20.5

Token 933: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -1.981667537620524e-06
    2. '153' → logprob: -13.625001907348633
    3. '253' → logprob: -15.000001907348633
    4. '354' → logprob: -16.000001907348633
    5. '953' → logprob: -16.750001907348633
    6. '357' → logprob: -17.250001907348633
    7. '363' → logprob: -17.750001907348633
    8. '355' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '343' → logprob: -18.250001907348633

Token 934: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138848841190338
    2. 'print' → logprob: -1.3138848543167114
    3. '
' → logprob: -7.813884735107422
    4. '```' → logprob: -8.688884735107422
    5. ' print' → logprob: -10.688884735107422
    6. '    
' → logprob: -10.688884735107422
    7. '	print' → logprob: -12.813884735107422
    8. '``' → logprob: -14.063884735107422
    9. '  
' → logprob: -14.938884735107422
    10. '(print' → logprob: -15.438884735107422

Token 935: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008326167589984834
    2. '   ' → logprob: -7.250832557678223
    3. '```' → logprob: -9.750832557678223
    4. ' print' → logprob: -9.875832557678223
    5. '
' → logprob: -11.375832557678223
    6. '    
' → logprob: -14.375832557678223
    7. '``' → logprob: -14.375832557678223
    8. '	print' → logprob: -15.125832557678223
    9. '(print' → logprob: -17.12583351135254
    10. '  
' → logprob: -17.25083351135254

Token 936: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.0
    3. ' print' → logprob: -20.75
    4. '```' → logprob: -21.0
    5. '	print' → logprob: -24.0
    6. '
' → logprob: -25.625
    7. '``' → logprob: -26.25
    8. '    
' → logprob: -27.0
    9. '`' → logprob: -27.25
    10. '#print' → logprob: -27.625

Token 937: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. '()' → logprob: -16.625036239624023
    4. ' (' → logprob: -17.250036239624023
    5. '((' → logprob: -18.750036239624023
    6. '(
' → logprob: -19.125036239624023
    7. '(nb' → logprob: -19.125036239624023
    8. '(nx' → logprob: -19.125036239624023
    9. 'nm' → logprob: -19.375036239624023
    10. 'n' → logprob: -19.375036239624023

Token 938: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.849109119386412e-06
    2. ')' → logprob: -11.625009536743164
    3. 'M' → logprob: -14.625009536743164
    4. ')m' → logprob: -15.375009536743164
    5. 'м' → logprob: -16.250009536743164
    6. '_m' → logprob: -17.125009536743164
    7. '%m' → logprob: -19.000009536743164
    8. '*m' → logprob: -19.625009536743164
    9. '%' → logprob: -20.000009536743164
    10. 'ｍ' → logprob: -20.000009536743164

Token 939: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. '())' → logprob: -16.625
    4. '()' → logprob: -16.875
    5. ')
' → logprob: -17.0
    6. '))' → logprob: -17.375
    7. ')`' → logprob: -17.5
    8. '")' → logprob: -18.0
    9. '   ' → logprob: -18.375
    10. ')**' → logprob: -19.375

Token 940: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10482420772314072
    2. '<|end|>' → logprob: -2.8548243045806885
    3. '
' → logprob: -3.6048243045806885
    4. '```' → logprob: -4.479824066162109
    5. 'main' → logprob: -6.729824066162109
    6. ')' → logprob: -7.354824066162109
    7. '#' → logprob: -7.729824066162109
    8. ' if' → logprob: -7.854824066162109
    9. '\n' → logprob: -8.35482406616211
    10. '()' → logprob: -9.35482406616211

Token 941: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025009064003825188
    2. '
' → logprob: -4.1500091552734375
    3. '<|end|>' → logprob: -4.9000091552734375
    4. '```' → logprob: -7.0250091552734375
    5. 'main' → logprob: -8.150009155273438
    6. ' if' → logprob: -9.275009155273438
    7. '    
' → logprob: -9.775009155273438
    8. '\n' → logprob: -10.025009155273438
    9. '  
' → logprob: -10.025009155273438
    10. 'return' (adapté à ' return') → logprob: -11.275009155273438

Token 942: ' None' (ID: 4662)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5717249512672424
    2. '<|end|>' → logprob: -0.9467249512672424
    3. 'if' → logprob: -3.3217248916625977
    4. '\n' → logprob: -5.321724891662598
    5. '

' → logprob: -5.946724891662598
    6. '```' → logprob: -6.446724891662598
    7. 'main' → logprob: -6.946724891662598
    8. '  
' → logprob: -7.696724891662598
    9. '    
' → logprob: -9.196724891662598
    10. '<|end|>' → logprob: -9.196724891662598

Token 943: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.057499632239341736
    2. '<|end|>' → logprob: -3.182499647140503
    3. 'main' → logprob: -4.932499408721924
    4. '
' → logprob: -5.432499408721924
    5. '```' → logprob: -6.307499408721924
    6. '\n' → logprob: -8.307499885559082
    7. '#' → logprob: -8.557499885559082
    8. ' if' → logprob: -8.557499885559082
    9. ')' → logprob: -9.057499885559082
    10. '(main' → logprob: -9.932499885559082

Token 944: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017841201275587082
    2. '<|end|>' → logprob: -4.392841339111328
    3. '```' → logprob: -5.767841339111328
    4. '
' → logprob: -6.892841339111328
    5. 'main' → logprob: -7.392841339111328
    6. ' if' → logprob: -8.517841339111328
    7. '\n' → logprob: -9.267841339111328
    8. '#' → logprob: -9.267841339111328
    9. '<|end|>' → logprob: -10.767841339111328
    10. '\' → logprob: -10.892841339111328

Token 945: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.160594642162323
    2. '__' → logprob: -1.9105947017669678
    3. '_' → logprob: -8.535594940185547
    4. ' ' → logprob: -8.910594940185547
    5. '_name' → logprob: -11.660594940185547
    6. ' _' → logprob: -12.035594940185547
    7. '___' → logprob: -12.410594940185547
    8. ' True' → logprob: -12.535594940185547
    9. ' ' → logprob: -12.785594940185547
    10. ' ' → logprob: -12.785594940185547

Token 946: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030683837831020355
    2. ' ==' → logprob: -6.253068447113037
    3. ' __' → logprob: -6.878068447113037
    4. '==' → logprob: -9.378067970275879
    5. 'name' → logprob: -11.628067970275879
    6. '=="' → logprob: -11.628067970275879
    7. '__":
' → logprob: -14.003067970275879
    8. 'main' → logprob: -14.003067970275879
    9. '__.__' → logprob: -14.003067970275879
    10. '__[' → logprob: -14.503067970275879

Token 947: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.319370302458992e-06
    2. '__.__' → logprob: -12.500005722045898
    3. '__.' → logprob: -14.875005722045898
    4. '==' → logprob: -15.125005722045898
    5. '=="' → logprob: -15.125005722045898
    6. '__["' → logprob: -15.625005722045898
    7. '___' → logprob: -15.875005722045898
    8. '____' → logprob: -16.6250057220459
    9. '__
' → logprob: -16.6250057220459
    10. '```' → logprob: -16.7500057220459

Token 948: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27914711833000183
    2. '==' → logprob: -1.7791471481323242
    3. ' ==' → logprob: -3.029147148132324
    4. '=="' → logprob: -3.654147148132324
    5. '=='' → logprob: -8.029147148132324
    6. '__":
' → logprob: -9.654147148132324
    7. '__.__' → logprob: -10.154147148132324
    8. '__["' → logprob: -10.904147148132324
    9. '___' → logprob: -11.279147148132324
    10. '==
' → logprob: -11.654147148132324

Token 949: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009140860638581216
    2. ''' → logprob: -7.000914096832275
    3. '__' → logprob: -13.375913619995117
    4. ' "__' → logprob: -13.750913619995117
    5. '"name' → logprob: -17.625913619995117
    6. '"class' → logprob: -18.750913619995117
    7. '"user' → logprob: -18.750913619995117
    8. '   ' → logprob: -18.875913619995117
    9. ' '__' → logprob: -19.500913619995117
    10. 'main' → logprob: -19.500913619995117

Token 950: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05500888451933861
    2. '__' → logprob: -3.055008888244629
    3. 'name' → logprob: -5.055008888244629
    4. '_main' → logprob: -11.555008888244629
    5. 'm' → logprob: -11.805008888244629
    6. '__':
' → logprob: -13.430008888244629
    7. 'if' → logprob: -13.555008888244629
    8. '__.' → logprob: -14.055008888244629
    9. 'print' → logprob: -14.305008888244629
    10. '___' → logprob: -14.680008888244629

Token 951: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.011067155748605728
    2. '__' → logprob: -4.5110673904418945
    3. '__":
' → logprob: -10.886067390441895
    4. '_' → logprob: -14.636067390441895
    5. '__:' → logprob: -16.136066436767578
    6. '__('' → logprob: -17.011066436767578
    7. '___' → logprob: -18.136066436767578
    8. '('__' → logprob: -18.636066436767578
    9. '':
' → logprob: -18.761066436767578
    10. '':' → logprob: -19.511066436767578

Token 952: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03920253366231918
    2. '   ' → logprob: -3.2892024517059326
    3. '	main' → logprob: -6.914202690124512
    4. ' main' → logprob: -8.789202690124512
    5. '(main' → logprob: -11.664202690124512
    6. '_main' → logprob: -12.914202690124512
    7. '    
' → logprob: -13.664202690124512
    8. '```' → logprob: -14.164202690124512
    9. '   ' → logprob: -14.664202690124512
    10. '  ' → logprob: -14.914202690124512

Token 953: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.5
    3. '	main' → logprob: -22.5
    4. '   ' → logprob: -25.375
    5. '_main' → logprob: -25.5
    6. '(main' → logprob: -27.875
    7. '.main' → logprob: -28.0
    8. 'Main' → logprob: -28.75
    9. '/main' → logprob: -31.25
    10. 'import' → logprob: -31.375

Token 954: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 952
Tokens correctement prédits (1ère position, stricte): 267
Tokens correctement prédits (1ère position, avec adaptation): 282
Tokens correctement prédits (top 10): 594
Précision stricte (1ère position): 28.05%
Précision adaptée (1ère position): 29.62%
Précision (top 10): 62.39%
================================================================================
