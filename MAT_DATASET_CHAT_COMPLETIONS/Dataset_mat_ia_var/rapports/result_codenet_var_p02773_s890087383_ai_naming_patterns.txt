================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

input_count = input()
input_list = [input() for _ in range(int(input_count))]
counter_dict = collections.Counter(input_list)
max_count = max(counter_dict.values())
max_items = [key for key, value in counter_dict.items() if value == max_count]
max_items_sorted = sorted(max_items, key=str.lower)
for idx, item in enumerate(max_items_sorted):
    print(item)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001832015230320394
    2. '.Counter' → logprob: -6.626832008361816
    3. 'import' → logprob: -8.876832008361816
    4. '\' → logprob: -10.001832008361816
    5. ',' → logprob: -10.001832008361816
    6. '_' → logprob: -10.251832008361816
    7. 'Counter' → logprob: -10.376832008361816
    8. '.default' → logprob: -10.626832008361816
    9. '.
' → logprob: -10.876832008361816
    10. '' → logprob: -11.126832008361816

Token 4: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26053133606910706
    2. '_' → logprob: -2.260531425476074
    3. '.' → logprob: -2.385531425476074
    4. '=' → logprob: -4.260531425476074
    5. '[' → logprob: -5.135531425476074
    6. 's' → logprob: -5.635531425476074
    7. ' =' → logprob: -5.885531425476074
    8. '_data' → logprob: -6.760531425476074
    9. '```' → logprob: -7.385531425476074
    10. ':' → logprob: -7.510531425476074

Token 5: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09350466728210449
    2. '(' → logprob: -2.4685046672821045
    3. '=' → logprob: -6.218504905700684
    4. ')' → logprob: -6.593504905700684
    5. '[' → logprob: -7.468504905700684
    6. '_' → logprob: -7.718504905700684
    7. ' =' → logprob: -10.218504905700684
    8. '('' → logprob: -10.593504905700684
    9. '.' → logprob: -10.718504905700684
    10. '(s' → logprob: -11.218504905700684

Token 6: ' input' (ID: 3422)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.47669148445129395
    2. 'collections' → logprob: -0.976691484451294
    3. ' ' → logprob: -6.476691246032715
    4. '{}' → logprob: -7.601691246032715
    5. ' {}' → logprob: -8.101691246032715
    6. '0' → logprob: -8.976691246032715
    7. ' int' → logprob: -10.226691246032715
    8. 'int' → logprob: -10.351691246032715
    9. ' []' → logprob: -10.726691246032715
    10. ' defaultdict' → logprob: -11.726691246032715

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0046459767036139965
    2. '('' → logprob: -6.004645824432373
    3. ''' → logprob: -7.004645824432373
    4. '(
' → logprob: -8.379646301269531
    5. '"' → logprob: -8.504646301269531
    6. '[' → logprob: -8.754646301269531
    7. 's' → logprob: -9.004646301269531
    8. ' (' → logprob: -9.254646301269531
    9. '`' → logprob: -9.379646301269531
    10. '```' → logprob: -9.629646301269531

Token 8: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15917223691940308
    2. ')' → logprob: -2.659172296524048
    3. '_' → logprob: -3.909172296524048
    4. '=' → logprob: -4.034172058105469
    5. '```' → logprob: -4.284172058105469
    6. '[' → logprob: -5.909172058105469
    7. '(' → logprob: -5.909172058105469
    8. '\' → logprob: -6.034172058105469
    9. ' =' → logprob: -6.159172058105469
    10. ' ' → logprob: -6.409172058105469

Token 9: '_list' (ID: 4162)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0555702447891235
    2. '_' → logprob: -1.1805702447891235
    3. '(' → logprob: -1.6805702447891235
    4. '_counts' → logprob: -2.180570125579834
    5. ')' → logprob: -5.055570125579834
    6. '.' → logprob: -5.055570125579834
    7. '()' → logprob: -5.180570125579834
    8. '```' → logprob: -5.430570125579834
    9. '"' → logprob: -5.805570125579834
    10. '._' → logprob: -5.805570125579834

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04355331510305405
    2. '=' → logprob: -4.293553352355957
    3. '[' → logprob: -4.918553352355957
    4. '_' → logprob: -5.293553352355957
    5. ')' → logprob: -5.543553352355957
    6. ' =' → logprob: -6.043553352355957
    7. '()' → logprob: -6.043553352355957
    8. '.setdefault' → logprob: -6.293553352355957
    9. '[:]' → logprob: -6.418553352355957
    10. '(' → logprob: -6.793553352355957

Token 11: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3373686671257019
    2. ' input' → logprob: -2.0873687267303467
    3. ' collections' → logprob: -2.2123687267303467
    4. 'input' → logprob: -4.087368488311768
    5. '[]' → logprob: -4.587368488311768
    6. ' [' → logprob: -4.587368488311768
    7. 'collections' → logprob: -4.587368488311768
    8. ' list' → logprob: -6.087368488311768
    9. ' ' → logprob: -6.337368488311768
    10. '[input' → logprob: -7.837368488311768

Token 12: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14850085973739624
    2. 'input' → logprob: -2.648500919342041
    3. ' int' → logprob: -2.898500919342041
    4. ' input' → logprob: -4.523500919342041
    5. ')' → logprob: -7.773500919342041
    6. ']' → logprob: -8.398500442504883
    7. '(int' → logprob: -8.773500442504883
    8. '   ' → logprob: -9.148500442504883
    9. ' ]' → logprob: -9.648500442504883
    10. ']int' → logprob: -10.023500442504883

Token 13: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7017180323600769
    2. '(' → logprob: -1.0767180919647217
    3. '()]' → logprob: -1.8267180919647217
    4. '())' → logprob: -7.326717853546143
    5. '('' → logprob: -7.951717853546143
    6. '(),' → logprob: -7.951717853546143
    7. '().' → logprob: -7.951717853546143
    8. '("("' → logprob: -8.5767183303833
    9. '(
' → logprob: -9.3267183303833
    10. '_' → logprob: -9.4517183303833

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9173282384872437
    2. ']' → logprob: -1.0423282384872437
    3. ' for' → logprob: -1.7923282384872437
    4. ')]' → logprob: -3.042328357696533
    5. 'for' → logprob: -3.792328357696533
    6. '()]' → logprob: -5.167328357696533
    7. '()' → logprob: -6.042328357696533
    8. ' ]' → logprob: -6.667328357696533
    9. ' )' → logprob: -7.417328357696533
    10. ',' → logprob: -8.667327880859375

Token 15: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08244416862726212
    2. '_' → logprob: -2.582444190979004
    3. ' ' → logprob: -5.832444190979004
    4. ' range' → logprob: -7.832444190979004
    5. ' i' → logprob: -9.207444190979004
    6. '_range' → logprob: -9.457444190979004
    7. 'range' → logprob: -11.082444190979004
    8. '  ' → logprob: -11.457444190979004
    9. ' in' → logprob: -12.082444190979004
    10. ' ' → logprob: -13.332444190979004

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006869417615234852
    2. 'in' → logprob: -5.006869316101074
    3. ' ' → logprob: -8.881869316101074
    4. '  ' → logprob: -12.006869316101074
    5. 'range' → logprob: -13.006869316101074
    6. 'import' → logprob: -14.006869316101074
    7. '	in' → logprob: -14.131869316101074
    8. 'i' → logprob: -14.381869316101074
    9. '<|end|>' → logprob: -14.506869316101074
    10. ')' → logprob: -14.631869316101074

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269306242465973
    2. ' range' → logprob: -2.1269307136535645
    3. '	range' → logprob: -13.751930236816406
    4. '(range' → logprob: -15.126930236816406
    5. 'rang' → logprob: -15.501930236816406
    6. ' ' → logprob: -15.501930236816406
    7. '_range' → logprob: -15.626930236816406
    8. 'ran' → logprob: -16.001930236816406
    9. '```' → logprob: -16.126930236816406
    10. '.range' → logprob: -16.751930236816406

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2400900423526764
    2. '(len' → logprob: -1.990090012550354
    3. '(input' → logprob: -2.6150901317596436
    4. '(int' → logprob: -5.7400898933410645
    5. ' (' → logprob: -8.240090370178223
    6. '(length' → logprob: -10.115090370178223
    7. '(n' → logprob: -10.740090370178223
    8. '(count' → logprob: -10.990090370178223
    9. '(
' → logprob: -11.740090370178223
    10. '(in' → logprob: -12.365090370178223

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001212614355608821
    2. '(' → logprob: -6.8762125968933105
    3. 'input' → logprob: -9.251213073730469
    4. ' (' → logprob: -9.501213073730469
    5. ' ' → logprob: -12.376213073730469
    6. '(
' → logprob: -13.501213073730469
    7. ' input' → logprob: -13.626213073730469
    8. '(in' → logprob: -14.376213073730469
    9. '(inp' → logprob: -14.501213073730469
    10. ',input' → logprob: -15.126213073730469

Token 20: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005367091507650912
    2. '())' → logprob: -8.125536918640137
    3. '()))' → logprob: -9.625536918640137
    4. '(' → logprob: -9.750536918640137
    5. '(count' → logprob: -9.875536918640137
    6. '()' → logprob: -10.250536918640137
    7. 'count' → logprob: -11.000536918640137
    8. '(_' → logprob: -13.000536918640137
    9. '(input' → logprob: -13.250536918640137
    10. '_COUNT' → logprob: -13.375536918640137

Token 21: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003476209531072527
    2. '))' → logprob: -8.625348091125488
    3. ')' → logprob: -9.375348091125488
    4. ')])' → logprob: -9.875348091125488
    5. '])]' → logprob: -10.750348091125488
    6. ']' → logprob: -12.500348091125488
    7. ' )' → logprob: -13.000348091125488
    8. '])' → logprob: -14.125348091125488
    9. '')]' → logprob: -14.250348091125488
    10. ')]
' → logprob: -14.500348091125488

Token 22: 'counter' (ID: 32128)
  Prédit: 'counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5412833094596863
    2. 'c' → logprob: -2.166283369064331
    3. 'counts' → logprob: -2.541283369064331
    4. 'result' → logprob: -3.291283369064331
    5. 'count' → logprob: -3.416283369064331
    6. '\n' → logprob: -3.541283369064331
    7. '
' → logprob: -3.916283369064331
    8. '_counter' → logprob: -4.041283130645752
    9. 'freq' → logprob: -4.291283130645752
    10. 'collections' → logprob: -4.916283130645752

Token 23: '_dict' (ID: 11295)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11881063133478165
    2. '(' → logprob: -2.2438106536865234
    3. '=' → logprob: -5.743810653686523
    4. '('.')' → logprob: -7.118810653686523
    5. 's' → logprob: -7.368810653686523
    6. ' =' → logprob: -7.618810653686523
    7. '(.)' → logprob: -7.868810653686523
    8. '[' → logprob: -9.493810653686523
    9. '.(' → logprob: -9.493810653686523
    10. '(
' → logprob: -9.993810653686523

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7427670955657959
    2. ' =' → logprob: -1.242767095565796
    3. '.' → logprob: -1.492767095565796
    4. '(' → logprob: -5.242767333984375
    5. '[' → logprob: -5.367767333984375
    6. '.setdefault' → logprob: -8.617767333984375
    7. '.=' → logprob: -8.992767333984375
    8. 's' → logprob: -9.117767333984375
    9. '[:]' → logprob: -9.117767333984375
    10. '(space' → logprob: -10.242767333984375

Token 25: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.4287213087081909
    2. ' collections' → logprob: -1.053721308708191
    3. 'counter' → logprob: -11.55372142791748
    4. ' counter' → logprob: -12.67872142791748
    5. 'collection' → logprob: -13.17872142791748
    6. 'Counter' → logprob: -13.55372142791748
    7. 'Collections' → logprob: -13.55372142791748
    8. ' collection' → logprob: -13.92872142791748
    9. '(collection' → logprob: -14.05372142791748
    10. '.collections' → logprob: -14.30372142791748

Token 26: '.Counter' (ID: 175403)
  Prédit: '.Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.0005581548321060836
    2. '.' → logprob: -7.500558376312256
    3. '.counter' → logprob: -13.250557899475098
    4. '.Count' → logprob: -13.750557899475098
    5. '.C' → logprob: -14.125557899475098
    6. '.Order' → logprob: -15.250557899475098
    7. ' .' → logprob: -15.375557899475098
    8. '.Collections' → logprob: -15.375557899475098
    9. '.default' → logprob: -16.125558853149414
    10. '.Point' → logprob: -16.500558853149414

Token 27: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931807398796082
    2. '(input' → logprob: -0.6931807398796082
    3. '(open' → logprob: -11.693181037902832
    4. ' (' → logprob: -11.818181037902832
    5. '(
' → logprob: -12.568181037902832
    6. '(user' → logprob: -12.818181037902832
    7. '(counter' → logprob: -12.818181037902832
    8. '()' → logprob: -13.443181037902832
    9. '(output' → logprob: -13.818181037902832
    10. '(list' → logprob: -14.318181037902832

Token 28: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9862216504407115e-05
    2. ')' → logprob: -11.125020027160645
    3. '(' → logprob: -13.375020027160645
    4. '()' → logprob: -14.125020027160645
    5. ')_' → logprob: -14.375020027160645
    6. '(input' → logprob: -14.500020027160645
    7. 'List' → logprob: -14.750020027160645
    8. '(_' → logprob: -14.875020027160645
    9. 'list' → logprob: -15.500020027160645
    10. '```' → logprob: -15.625020027160645

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.750008583068848
    3. '))' → logprob: -13.000008583068848
    4. ' )' → logprob: -13.625008583068848
    5. ').' → logprob: -14.875008583068848
    6. ')
' → logprob: -15.250008583068848
    7. ')`' → logprob: -15.375008583068848
    8. ']' → logprob: -15.625008583068848
    9. '')' → logprob: -16.12500762939453
    10. '`)' → logprob: -16.37500762939453

Token 30: 'max' (ID: 3228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08449827879667282
    2. '
' → logprob: -3.334498167037964
    3. '\n' → logprob: -4.709498405456543
    4. '(' → logprob: -4.959498405456543
    5. 'print' → logprob: -5.084498405456543
    6. '.m' → logprob: -5.584498405456543
    7. 'for' → logprob: -6.209498405456543
    8. ' ' → logprob: -6.209498405456543
    9. '<|end|>' → logprob: -6.209498405456543
    10. 'm' → logprob: -6.334498405456543

Token 31: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2663813829421997
    2. '(' → logprob: -1.5163813829421997
    3. '(counter' → logprob: -4.76638126373291
    4. '_counter' → logprob: -5.76638126373291
    5. '_count' → logprob: -7.39138126373291
    6. '_value' → logprob: -7.89138126373291
    7. '_space' → logprob: -8.51638126373291
    8. '(max' → logprob: -8.76638126373291
    9. 'counter' → logprob: -9.01638126373291
    10. 's' → logprob: -9.01638126373291

Token 32: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8426037430763245
    2. '_' → logprob: -0.8426037430763245
    3. '=' → logprob: -2.8426036834716797
    4. '.' → logprob: -2.9676036834716797
    5. ' =' → logprob: -3.7176036834716797
    6. ')' → logprob: -6.71760368347168
    7. '._' → logprob: -7.46760368347168
    8. '_value' → logprob: -7.84260368347168
    9. '_max' → logprob: -7.96760368347168
    10. '()' → logprob: -8.09260368347168

Token 33: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.24143682420253754
    2. 'max' → logprob: -1.6164368391036987
    3. ' counter' → logprob: -4.616436958312988
    4. 'counter' → logprob: -5.116436958312988
    5. ' ' → logprob: -12.366436958312988
    6. '(max' → logprob: -12.991436958312988
    7. '0' → logprob: -13.616436958312988
    8. '=max' → logprob: -14.116436958312988
    9. '	max' → logprob: -14.241436958312988
    10. ' maximum' → logprob: -14.366436958312988

Token 34: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.07896557450294495
    2. '(' → logprob: -2.578965663909912
    3. '(
' → logprob: -10.328965187072754
    4. '(count' → logprob: -11.328965187072754
    5. 'counter' → logprob: -11.578965187072754
    6. '(_' → logprob: -12.578965187072754
    7. '_counter' → logprob: -12.828965187072754
    8. '(`' → logprob: -12.828965187072754
    9. '(max' → logprob: -12.828965187072754
    10. ' (' → logprob: -12.953965187072754

Token 35: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.5597102396423e-05
    2. 'dict' → logprob: -10.625035285949707
    3. '_counter' → logprob: -12.000035285949707
    4. ')' → logprob: -13.125035285949707
    5. '_' → logprob: -13.750035285949707
    6. 'counter' → logprob: -14.750035285949707
    7. '_DICT' → logprob: -15.000035285949707
    8. '_list' → logprob: -15.750035285949707
    9. 'edict' → logprob: -15.750035285949707
    10. 'Dict' → logprob: -16.000036239624023

Token 36: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -5.598092684522271e-05
    2. 'values' → logprob: -10.500056266784668
    3. '.' → logprob: -10.875056266784668
    4. ')' → logprob: -12.500056266784668
    5. '.value' → logprob: -13.125056266784668
    6. ').' → logprob: -13.500056266784668
    7. ' .' → logprob: -13.750056266784668
    8. ' values' → logprob: -14.000056266784668
    9. '().' → logprob: -16.25005531311035
    10. '_values' → logprob: -16.25005531311035

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003645210759714246
    2. '()' → logprob: -6.253645420074463
    3. ')' → logprob: -6.378645420074463
    4. ' ())' → logprob: -11.503644943237305
    5. '(),' → logprob: -12.378644943237305
    6. ' )' → logprob: -14.003644943237305
    7. '())
' → logprob: -14.128644943237305
    8. '()))' → logprob: -14.378644943237305
    9. '(' → logprob: -14.878644943237305
    10. '()]' → logprob: -15.128644943237305

Token 38: 'max' (ID: 3228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5760813355445862
    2. 'result' → logprob: -1.7010812759399414
    3. 'max' → logprob: -2.0760812759399414
    4. '<|end|>' → logprob: -3.0760812759399414
    5. 'for' → logprob: -3.4510812759399414
    6. ' 
' → logprob: -4.826081275939941
    7. 'print' → logprob: -5.076081275939941
    8. 'most' → logprob: -5.326081275939941
    9. '  
' → logprob: -5.326081275939941
    10. '\n' → logprob: -5.451081275939941

Token 39: '_items' (ID: 27417)
  Prédit: '_keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.7553294897079468
    2. '_count' → logprob: -1.0053294897079468
    3. '_key' → logprob: -2.3803296089172363
    4. '_' → logprob: -3.6303296089172363
    5. '_counts' → logprob: -3.8803296089172363
    6. '_items' → logprob: -4.130329608917236
    7. '_counter' → logprob: -6.380329608917236
    8. '_tokens' → logprob: -6.755329608917236
    9. '_value' → logprob: -7.255329608917236
    10. '_elements' → logprob: -7.630329608917236

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02058311738073826
    2. '=' → logprob: -3.895583152770996
    3. '_' → logprob: -10.645583152770996
    4. '=[]' → logprob: -12.145583152770996
    5. '.' → logprob: -12.520583152770996
    6. '<|end|>' → logprob: -13.520583152770996
    7. '[:]' → logprob: -13.520583152770996
    8. ' ' → logprob: -13.645583152770996
    9. '_items' → logprob: -14.270583152770996
    10. 's' → logprob: -14.395583152770996

Token 41: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4935181438922882
    2. '[key' → logprob: -1.4935181140899658
    3. '[' → logprob: -2.868518114089966
    4. '[k' → logprob: -3.118518114089966
    5. '[counter' → logprob: -3.368518114089966
    6. '[item' → logprob: -4.368518352508545
    7. '[max' → logprob: -5.368518352508545
    8. '[count' → logprob: -5.368518352508545
    9. '[token' → logprob: -6.743518352508545
    10. '[value' → logprob: -7.243518352508545

Token 42: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7447709441184998
    2. 'k' → logprob: -1.1197710037231445
    3. 'item' → logprob: -1.6197710037231445
    4. 'x' → logprob: -8.119771003723145
    5. ' key' → logprob: -8.244771003723145
    6. ' item' → logprob: -8.869771003723145
    7. ' k' → logprob: -9.744771003723145
    8. 'i' → logprob: -10.494771003723145
    9. 'word' → logprob: -10.494771003723145
    10. '_key' → logprob: -11.869771003723145

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005270515102893114
    2. 'for' → logprob: -5.255270481109619
    3. ' ' → logprob: -10.255270957946777
    4. '	for' → logprob: -14.255270957946777
    5. '```' → logprob: -14.880270957946777
    6. '   ' → logprob: -15.505270957946777
    7. '  ' → logprob: -16.13027000427246
    8. '    ' → logprob: -16.75527000427246
    9. ',' → logprob: -16.88027000427246
    10. 'value' → logprob: -17.50527000427246

Token 44: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.03635561093688011
    2. 'key' → logprob: -3.911355495452881
    3. ',' → logprob: -4.161355495452881
    4. ',key' → logprob: -9.911355972290039
    5. ' counter' → logprob: -10.161355972290039
    6. ' ,' → logprob: -12.286355972290039
    7. 'counter' → logprob: -12.411355972290039
    8. ' in' → logprob: -12.786355972290039
    9. '	key' → logprob: -13.661355972290039
    10. '(key' → logprob: -14.661355972290039

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029829293489456177
    2. ',value' → logprob: -6.002983093261719
    3. ' in' → logprob: -8.127983093261719
    4. 'in' → logprob: -9.252983093261719
    5. ',count' → logprob: -9.502983093261719
    6. ',val' → logprob: -11.252983093261719
    7. ' ,' → logprob: -11.502983093261719
    8. ',key' → logprob: -12.127983093261719
    9. ',item' → logprob: -12.377983093261719
    10. ',in' → logprob: -13.002983093261719

Token 46: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16048884391784668
    2. 'value' → logprob: -1.9104888439178467
    3. ' val' → logprob: -8.660489082336426
    4. ' count' → logprob: -9.535489082336426
    5. 'count' → logprob: -11.535489082336426
    6. 'val' → logprob: -11.660489082336426
    7. '	value' → logprob: -15.785489082336426
    8. ' in' → logprob: -15.785489082336426
    9. ' ' → logprob: -16.03548812866211
    10. 'v' → logprob: -16.66048812866211

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012288003927096725
    2. 'in' → logprob: -6.7512288093566895
    3. ' ' → logprob: -9.876228332519531
    4. '<|end|>' → logprob: -12.251228332519531
    5. ',' → logprob: -13.376228332519531
    6. '<|end|>' → logprob: -15.501228332519531
    7. '	in' → logprob: -15.626228332519531
    8. '```' → logprob: -16.31372833251953
    9. ')' → logprob: -17.18872833251953
    10. 'In' → logprob: -17.25122833251953

Token 48: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.3868717551231384
    2. 'counter' → logprob: -1.1368718147277832
    3. '(counter' → logprob: -15.136871337890625
    4. '	counter' → logprob: -15.261871337890625
    5. '[counter' → logprob: -15.636871337890625
    6. '_counter' → logprob: -16.511871337890625
    7. 'Counter' → logprob: -17.511871337890625
    8. '.counter' → logprob: -18.136871337890625
    9. 'ounter' → logprob: -18.261871337890625
    10. '```' → logprob: -18.761871337890625

Token 49: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -8.518582762917504e-05
    2. 'dict' → logprob: -9.50008487701416
    3. ' in' → logprob: -12.62508487701416
    4. '_counter' → logprob: -13.00008487701416
    5. 'in' → logprob: -13.87508487701416
    6. '_' → logprob: -14.12508487701416
    7. 's' → logprob: -14.25008487701416
    8. '_items' → logprob: -14.75008487701416
    9. '_DICT' → logprob: -14.75008487701416
    10. '```' → logprob: -15.12508487701416

Token 50: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.000730781932361424
    2. 'items' → logprob: -7.875730991363525
    3. '.' → logprob: -8.000730514526367
    4. ' .' → logprob: -11.250730514526367
    5. '.iteritems' → logprob: -14.125730514526367
    6. '.values' → logprob: -14.500730514526367
    7. ' items' → logprob: -14.625730514526367
    8. ' in' → logprob: -15.750730514526367
    9. '.Items' → logprob: -16.125730514526367
    10. 'if' → logprob: -16.375730514526367

Token 51: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00031699295504949987
    2. '()]' → logprob: -8.125316619873047
    3. 'if' → logprob: -12.125316619873047
    4. 'items' → logprob: -12.500316619873047
    5. ' ()' → logprob: -12.625316619873047
    6. '())' → logprob: -13.375316619873047
    7. '(' → logprob: -13.375316619873047
    8. '()][' → logprob: -13.625316619873047
    9. ' if' → logprob: -14.375316619873047
    10. '.items' → logprob: -14.750316619873047

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001519503304734826
    2. 'if' → logprob: -6.501519680023193
    3. ' ' → logprob: -11.001519203186035
    4. ' in' → logprob: -15.751519203186035
    5. '	if' → logprob: -15.751519203186035
    6. '   ' → logprob: -16.50152015686035
    7. ')' → logprob: -17.00152015686035
    8. ' for' → logprob: -17.25152015686035
    9. '  ' → logprob: -17.75152015686035
    10. ' to' → logprob: -18.12652015686035

Token 53: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.011048170737922192
    2. 'value' → logprob: -4.511048316955566
    3. ' ' → logprob: -16.26104736328125
    4. '"value' → logprob: -16.51104736328125
    5. '(value' → logprob: -16.63604736328125
    6. '	value' → logprob: -17.01104736328125
    7. '$value' → logprob: -17.63604736328125
    8. ''value' → logprob: -17.76104736328125
    9. 'Value' → logprob: -17.76104736328125
    10. ' ' → logprob: -17.88604736328125

Token 54: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519342601299286
    2. ' ==' → logprob: -1.501934289932251
    3. '=' → logprob: -13.251934051513672
    4. '==
' → logprob: -13.876934051513672
    5. ']==' → logprob: -14.126934051513672
    6. '===' → logprob: -14.376934051513672
    7. ' ' → logprob: -14.376934051513672
    8. ' ' → logprob: -15.251934051513672
    9. ')==' → logprob: -15.376934051513672
    10. '()==' → logprob: -16.501934051513672

Token 55: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.011047935113310814
    2. 'max' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. ' ' → logprob: -17.38604736328125
    5. '	max' → logprob: -17.38604736328125
    6. '(max' → logprob: -17.63604736328125
    7. ' maximum' → logprob: -18.01104736328125
    8. '=max' → logprob: -18.38604736328125
    9. '_max' → logprob: -18.76104736328125
    10. '[max' → logprob: -19.13604736328125

Token 56: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.935296834039036e-06
    2. '_max' → logprob: -13.37500286102295
    3. 'count' → logprob: -13.87500286102295
    4. 'max' → logprob: -15.62500286102295
    5. '_' → logprob: -16.250003814697266
    6. '_counts' → logprob: -17.000003814697266
    7. '_counter' → logprob: -17.250003814697266
    8. '(max' → logprob: -17.375003814697266
    9. 'Count' → logprob: -17.500003814697266
    10. ')' → logprob: -17.625003814697266

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011236425780225545
    2. ']
' → logprob: -9.875112533569336
    3. ' ]' → logprob: -9.875112533569336
    4. ']

' → logprob: -11.875112533569336
    5. ']
' → logprob: -13.625112533569336
    6. ')]' → logprob: -14.625112533569336
    7. ']

' → logprob: -15.875112533569336
    8. ')' → logprob: -16.125112533569336
    9. '()]' → logprob: -16.500112533569336
    10. '])' → logprob: -16.750112533569336

Token 58: 'max' (ID: 3228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015700219199061394
    2. 'max' → logprob: -4.265700340270996
    3. '
' → logprob: -7.265700340270996
    4. 'for' → logprob: -8.140700340270996
    5. ' print' → logprob: -8.390700340270996
    6. '```' → logprob: -9.265700340270996
    7. 'result' → logprob: -9.890700340270996
    8. 'answer' → logprob: -10.390700340270996
    9. 'output' → logprob: -10.390700340270996
    10. 'sorted' → logprob: -10.890700340270996

Token 59: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.0005299181793816388
    2. '_count' → logprob: -7.875529766082764
    3. '_' → logprob: -8.875530242919922
    4. '_counts' → logprob: -12.500530242919922
    5. '_item' → logprob: -12.625530242919922
    6. ' _' → logprob: -13.625530242919922
    7. '_Items' → logprob: -15.250530242919922
    8. 'Items' → logprob: -15.750530242919922
    9. '_keys' → logprob: -15.875530242919922
    10. '_ITEMS' → logprob: -16.000530242919922

Token 60: '_sorted' (ID: 104993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12378104776144028
    2. '<|end|>' → logprob: -2.2487809658050537
    3. '.' → logprob: -5.248781204223633
    4. '.sort' → logprob: -5.373781204223633
    5. '<|end|>' → logprob: -7.998781204223633
    6. '```' → logprob: -7.998781204223633
    7. '
' → logprob: -9.123781204223633
    8. ')' → logprob: -9.873781204223633
    9. '[user' → logprob: -11.123781204223633
    10. '[:]' → logprob: -11.123781204223633

Token 61: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07673881202936172
    2. '.' → logprob: -3.0767388343811035
    3. '=' → logprob: -4.0767388343811035
    4. ' =' → logprob: -4.8267388343811035
    5. '.sorted' → logprob: -6.7017388343811035
    6. '()' → logprob: -7.9517388343811035
    7. '(sorted' → logprob: -8.076738357543945
    8. 'sorted' → logprob: -8.326738357543945
    9. '().' → logprob: -8.701738357543945
    10. '_sorted' → logprob: -8.951738357543945

Token 62: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.38687387108802795
    2. ' sorted' → logprob: -1.1368738412857056
    3. '(sorted' → logprob: -13.386874198913574
    4. ' ' → logprob: -14.886874198913574
    5. 'sort' → logprob: -15.011874198913574
    6. '.sorted' → logprob: -15.386874198913574
    7. ' ' → logprob: -16.011873245239258
    8. '   ' → logprob: -16.136873245239258
    9. 's' → logprob: -16.511873245239258
    10. 'Sorted' → logprob: -17.511873245239258

Token 63: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.5252596464706585e-05
    2. '(' → logprob: -10.125044822692871
    3. 'max' → logprob: -12.375044822692871
    4. ' (' → logprob: -14.375044822692871
    5. ' max' → logprob: -16.500045776367188
    6. '(key' → logprob: -16.625045776367188
    7. '((' → logprob: -17.500045776367188
    8. ',max' → logprob: -17.625045776367188
    9. '(list' → logprob: -17.625045776367188
    10. '(min' → logprob: -17.750045776367188

Token 64: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -3.7697225252486533e-06
    2. 'items' → logprob: -12.875003814697266
    3. 'Items' → logprob: -15.250003814697266
    4. '_' → logprob: -15.750003814697266
    5. '_ITEMS' → logprob: -15.875003814697266
    6. '_Items' → logprob: -15.875003814697266
    7. '_max' → logprob: -16.125003814697266
    8. 'max' → logprob: -16.625003814697266
    9. '```' → logprob: -17.250003814697266
    10. '_tokens' → logprob: -17.375003814697266

Token 65: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05664469674229622
    2. '())' → logprob: -3.0566446781158447
    3. '()' → logprob: -4.931644916534424
    4. ' )' → logprob: -7.306644916534424
    5. ',' → logprob: -10.556644439697266
    6. '(),' → logprob: -10.556644439697266
    7. ')
' → logprob: -10.806644439697266
    8. ' ())' → logprob: -11.431644439697266
    9. '))' → logprob: -11.681644439697266
    10. '())
' → logprob: -12.056644439697266

Token 66: ' key' (ID: 2140)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.49359700083732605
    2. 'key' → logprob: -1.4935970306396484
    3. ' key' → logprob: -2.3685970306396484
    4. ')' → logprob: -3.1185970306396484
    5. ' reverse' → logprob: -3.7435970306396484
    6. '()' → logprob: -6.118597030639648
    7. 'lambda' → logprob: -7.368597030639648
    8. ' )' → logprob: -8.618597030639648
    9. '(reverse' → logprob: -9.368597030639648
    10. ' lambda' → logprob: -9.618597030639648

Token 67: '=str' (ID: 36106)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.67005455493927
    2. '=str' → logprob: -1.17005455493927
    3. '=len' → logprob: -2.4200544357299805
    4. '=' → logprob: -2.4200544357299805
    5. '=int' → logprob: -9.04505443572998
    6. ' =' → logprob: -11.29505443572998
    7. '=input' → logprob: -13.42005443572998
    8. '=_' → logprob: -13.67005443572998
    9. '＝' → logprob: -14.79505443572998
    10. '=float' → logprob: -15.04505443572998

Token 68: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.0009012157097458839
    2. ')' → logprob: -7.875901222229004
    3. '.upper' → logprob: -8.375901222229004
    4. '.case' → logprob: -9.125901222229004
    5. 'len' → logprob: -10.000901222229004
    6. 'casecmp' → logprob: -10.375901222229004
    7. 'ength' → logprob: -10.625901222229004
    8. '.len' → logprob: -10.750901222229004
    9. 'ict' → logprob: -11.250901222229004
    10. '.capitalize' → logprob: -11.750901222229004

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ')
' → logprob: -11.500021934509277
    3. ' )' → logprob: -11.750021934509277
    4. '))' → logprob: -13.875021934509277
    5. '())' → logprob: -14.625021934509277
    6. ',' → logprob: -14.625021934509277
    7. ')

' → logprob: -15.125021934509277
    8. ')#' → logprob: -15.500021934509277
    9. ')[' → logprob: -15.875021934509277
    10. ']' → logprob: -15.875021934509277

Token 70: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008932444266974926
    2. 'for' → logprob: -4.758932590484619
    3. ' print' → logprob: -8.883932113647461
    4. ' for' → logprob: -9.258932113647461
    5. '```' → logprob: -10.508932113647461
    6. '[' → logprob: -10.883932113647461
    7. 'if' → logprob: -11.508932113647461
    8. '
' → logprob: -12.008932113647461
    9. '#print' → logprob: -12.133932113647461
    10. 'output' → logprob: -12.508932113647461

Token 71: ' idx' (ID: 14016)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.010957503691315651
    2. ' key' → logprob: -5.010957717895508
    3. 'item' → logprob: -6.385957717895508
    4. ' max' → logprob: -6.510957717895508
    5. ' word' → logprob: -7.010957717895508
    6. ' i' → logprob: -9.385957717895508
    7. ' ' → logprob: -10.635957717895508
    8. 'max' → logprob: -11.135957717895508
    9. '	item' → logprob: -11.760957717895508
    10. ' element' → logprob: -11.885957717895508

Token 72: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021131434477865696
    2. 'in' → logprob: -6.752113342285156
    3. ',' → logprob: -7.002113342285156
    4. ' ' → logprob: -10.627113342285156
    5. ' ,' → logprob: -12.127113342285156
    6. ',in' → logprob: -13.752113342285156
    7. ',item' → logprob: -15.127113342285156
    8. '_in' → logprob: -15.127113342285156
    9. '	in' → logprob: -15.377113342285156
    10. '```' → logprob: -15.814613342285156

Token 73: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.40806370973587036
    2. ' item' → logprob: -1.5330636501312256
    3. 'value' → logprob: -3.0330636501312256
    4. ' key' → logprob: -3.9080636501312256
    5. 'key' → logprob: -4.283063888549805
    6. ' value' → logprob: -4.408063888549805
    7. 'max' → logprob: -4.908063888549805
    8. 'word' → logprob: -5.408063888549805
    9. ' word' → logprob: -5.408063888549805
    10. ' max' → logprob: -5.908063888549805

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005953687243163586
    2. 'in' → logprob: -5.130953788757324
    3. ',' → logprob: -10.880953788757324
    4. ' ' → logprob: -12.255953788757324
    5. '	in' → logprob: -14.005953788757324
    6. ' ,' → logprob: -16.005952835083008
    7. ',in' → logprob: -16.130952835083008
    8. 's' → logprob: -16.255952835083008
    9. 'n' → logprob: -16.880952835083008
    10. 'import' → logprob: -17.255952835083008

Token 75: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.07889022678136826
    2. 'enumer' → logprob: -2.578890323638916
    3. 'max' → logprob: -15.953889846801758
    4. ' max' → logprob: -16.328889846801758
    5. '```' → logprob: -16.578889846801758
    6. 'enum' → logprob: -16.703889846801758
    7. ' enumer' → logprob: -16.828889846801758
    8. 'en' → logprob: -17.578889846801758
    9. '.enumer' → logprob: -17.828889846801758
    10. '(en' → logprob: -17.828889846801758

Token 76: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00027015688829123974
    2. '(' → logprob: -8.875269889831543
    3. ' (' → logprob: -9.000269889831543
    4. 'max' → logprob: -12.500269889831543
    5. ' max' → logprob: -13.000269889831543
    6. ',max' → logprob: -15.250269889831543
    7. '(sorted' → logprob: -16.00027084350586
    8. '(s' → logprob: -16.50027084350586
    9. '(range' → logprob: -16.62527084350586
    10. '(min' → logprob: -17.25027084350586

Token 77: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -1.9361264946837764e-07
    2. '_item' → logprob: -16.75
    3. '_' → logprob: -17.25
    4. 'items' → logprob: -17.875
    5. '_it' → logprob: -18.0
    6. '_Items' → logprob: -18.25
    7. '_i' → logprob: -18.375
    8. '_ITEMS' → logprob: -18.375
    9. 'Items' → logprob: -19.25
    10. '_count' → logprob: -20.5

Token 78: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0008463177946396172
    2. '):' → logprob: -7.1258463859558105
    3. ')' → logprob: -10.625845909118652
    4. '_' → logprob: -11.875845909118652
    5. '_)' → logprob: -13.250845909118652
    6. '_:' → logprob: -13.375845909118652
    7. ')_' → logprob: -13.500845909118652
    8. ':' → logprob: -13.625845909118652
    9. ',' → logprob: -13.750845909118652
    10. '_,' → logprob: -13.875845909118652

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12106151133775711
    2. ':' → logprob: -2.2460615634918213
    3. ',' → logprob: -5.371061325073242
    4. ')' → logprob: -5.746061325073242
    5. ' :' → logprob: -8.996061325073242
    6. ' ):' → logprob: -9.246061325073242
    7. '):
' → logprob: -9.871061325073242
    8. '():' → logprob: -10.496061325073242
    9. ',:' → logprob: -10.996061325073242
    10. '}:' → logprob: -12.121061325073242

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02477649599313736
    2. ' print' → logprob: -4.024776458740234
    3. ':' → logprob: -5.899776458740234
    4. 'print' → logprob: -6.774776458740234
    5. ' if' → logprob: -7.274776458740234
    6. '<|end|>' → logprob: -7.524776458740234
    7. '    
' → logprob: -7.649776458740234
    8. '    ' → logprob: -8.024776458740234
    9. ' ' → logprob: -8.274776458740234
    10. '	print' → logprob: -9.149776458740234

Token 81: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.06009818613529205
    2. 'print' (adapté à ' print') → logprob: -3.310098171234131
    3. ' if' → logprob: -3.935098171234131
    4. '   ' → logprob: -6.310098171234131
    5. '    ' → logprob: -8.185098648071289
    6. 'if' → logprob: -9.185098648071289
    7. ' ' → logprob: -10.935098648071289
    8. '	print' → logprob: -11.435098648071289
    9. ' input' → logprob: -11.435098648071289
    10. '```' → logprob: -11.435098648071289

Token 82: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.21835127472877502
    2. '(' → logprob: -1.7183512449264526
    3. '(f' → logprob: -4.093351364135742
    4. '('' → logprob: -9.593351364135742
    5. '(items' → logprob: -11.593351364135742
    6. ' (' → logprob: -11.718351364135742
    7. 'item' → logprob: -12.343351364135742
    8. '((' → logprob: -12.718351364135742
    9. '("' → logprob: -12.843351364135742
    10. '()' → logprob: -12.843351364135742

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.625008583068848
    3. ' if' → logprob: -13.500008583068848
    4. ')
' → logprob: -13.500008583068848
    5. ',' → logprob: -13.750008583068848
    6. ',)' → logprob: -14.625008583068848
    7. ')`' → logprob: -15.625008583068848
    8. '))' → logprob: -15.625008583068848
    9. '   ' → logprob: -15.875008583068848
    10. ')#' → logprob: -15.875008583068848


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 50.62%
Précision adaptée (1ère position): 50.62%
Précision (top 10): 86.42%
================================================================================
