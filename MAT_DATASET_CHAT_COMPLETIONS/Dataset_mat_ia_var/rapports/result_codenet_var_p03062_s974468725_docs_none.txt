================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
ans = 0
c = 0
tmp_m = 10**9
zero = False
for i in range(n):
    if a[i] < 0:
        c += 1
    elif a[i] == 0:
        zero = True
    tmp = abs(a[i])
    ans += tmp
    tmp_m = min(tmp_m, tmp)
if zero:
    print(ans)
else:
    if c % 2 == 0:
        print(ans)
    else:
        print(ans - tmp_m * 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1269262135028839
    2. ')' → logprob: -2.2519261837005615
    3. '()' → logprob: -4.501926422119141
    4. '())' → logprob: -6.501926422119141
    5. '(
' → logprob: -8.12692642211914
    6. '```' → logprob: -8.62692642211914
    7. '('' → logprob: -8.87692642211914
    8. '(()' → logprob: -9.25192642211914
    9. '("("' → logprob: -9.37692642211914
    10. '<|end|>' → logprob: -9.62692642211914

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027952300384640694
    2. ' =' → logprob: -4.902952194213867
    3. 'r' → logprob: -5.277952194213867
    4. '[i' → logprob: -5.777952194213867
    5. '=' → logprob: -6.027952194213867
    6. 'rray' → logprob: -6.527952194213867
    7. '[a' → logprob: -6.652952194213867
    8. 'a' → logprob: -6.777952194213867
    9. 'rr' → logprob: -6.902952194213867
    10. '.' → logprob: -6.902952194213867

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006189120467752218
    2. '()' → logprob: -8.125618934631348
    3. '(range' → logprob: -9.000618934631348
    4. '(a' → logprob: -9.375618934631348
    5. '(input' → logprob: -10.250618934631348
    6. '((' → logprob: -11.750618934631348
    7. '(
' → logprob: -12.125618934631348
    8. '(`' → logprob: -12.250618934631348
    9. '(user' → logprob: -12.250618934631348
    10. '(int' → logprob: -12.375618934631348

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.017944004386663437
    2. '(' → logprob: -4.267943859100342
    3. '(str' → logprob: -6.892943859100342
    4. '(input' → logprob: -7.142943859100342
    5. '(lambda' → logprob: -7.267943859100342
    6. '<int' → logprob: -7.767943859100342
    7. ')' → logprob: -8.6429443359375
    8. '[int' → logprob: -8.6429443359375
    9. 'int' → logprob: -8.7679443359375
    10. '```' → logprob: -9.1429443359375

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004638622514903545
    2. '(' → logprob: -5.879638671875
    3. '))' → logprob: -7.254638671875
    4. ',input' → logprob: -7.379638671875
    5. 'input' → logprob: -8.629638671875
    6. ')' → logprob: -8.754638671875
    7. '=input' → logprob: -9.629638671875
    8. '[input' → logprob: -11.379638671875
    9. '(user' → logprob: -11.754638671875
    10. ')))' → logprob: -12.004638671875

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. '))' → logprob: -18.00673484802246

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47280365228652954
    2. '())' → logprob: -1.4728035926818848
    3. '()' → logprob: -1.9728035926818848
    4. '().' → logprob: -5.097803592681885
    5. '(' → logprob: -7.347803592681885
    6. '()));' → logprob: -7.472803592681885
    7. ')' → logprob: -7.972803592681885
    8. '))' → logprob: -8.347804069519043
    9. '())))' → logprob: -8.597804069519043
    10. '()>' → logprob: -8.972804069519043

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7726451754570007
    2. '()))' → logprob: -0.8976451754570007
    3. ')' → logprob: -2.6476452350616455
    4. '())' → logprob: -3.1476452350616455
    5. '(' → logprob: -4.647644996643066
    6. '()' → logprob: -5.022644996643066
    7. ')))' → logprob: -8.022644996643066
    8. '('' → logprob: -9.022644996643066
    9. ''))' → logprob: -9.147644996643066
    10. '())))' → logprob: -9.397644996643066

Token 15: 'ans' (ID: 616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5707725286483765
    2. 's' → logprob: -1.1957725286483765
    3. 'c' → logprob: -3.195772647857666
    4. 'sum' → logprob: -3.570772647857666
    5. 'for' → logprob: -3.820772647857666
    6. 'count' → logprob: -3.945772647857666
    7. 'result' → logprob: -5.320772647857666
    8. 'm' → logprob: -5.570772647857666
    9. 'b' → logprob: -5.820772647857666
    10. 'total' → logprob: -6.320772647857666

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30712518095970154
    2. ' =' → logprob: -1.932125210762024
    3. '_' → logprob: -2.3071250915527344
    4. '[' → logprob: -5.432125091552734
    5. ' +=' → logprob: -5.432125091552734
    6. '.append' → logprob: -6.057125091552734
    7. '+=' → logprob: -6.307125091552734
    8. '(' → logprob: -6.307125091552734
    9. '.' → logprob: -6.557125091552734
    10. '[:]' → logprob: -6.682125091552734

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3148634433746338
    2. ' ' → logprob: -1.5648634433746338
    3. ' max' → logprob: -3.189863443374634
    4. 'max' → logprob: -4.689863204956055
    5. ' sum' → logprob: -5.814863204956055
    6. 'a' → logprob: -5.939863204956055
    7. ' a' → logprob: -6.314863204956055
    8. 'sum' → logprob: -6.439863204956055
    9. ' [' → logprob: -7.689863204956055
    10. '[' → logprob: -8.189863204956055

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08362148702144623
    2. 'max' → logprob: -2.7086215019226074
    3. 'sum' → logprob: -4.958621501922607
    4. '[]' → logprob: -6.083621501922607
    5. 'a' → logprob: -6.208621501922607
    6. '[' → logprob: -6.708621501922607
    7. '[max' → logprob: -7.833621501922607
    8. 'float' → logprob: -8.08362102508545
    9. 'min' → logprob: -8.83362102508545
    10. '{}' → logprob: -10.08362102508545

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007647445425391197
    2. '\n' → logprob: -5.632647514343262
    3. ' for' → logprob: -6.007647514343262
    4. '
' → logprob: -7.382647514343262
    5. 'n' → logprob: -8.132647514343262
    6. '\' → logprob: -8.132647514343262
    7. '```' → logprob: -9.257647514343262
    8. ')' → logprob: -9.257647514343262
    9. 'i' → logprob: -9.507647514343262
    10. 'a' → logprob: -10.382647514343262

Token 20: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040183294913731515
    2. '```' → logprob: -8.375401496887207
    3. ' for' → logprob: -9.250401496887207
    4. 'i' → logprob: -10.500401496887207
    5. '\n' → logprob: -10.875401496887207
    6. '\' → logprob: -11.250401496887207
    7. 'n' → logprob: -12.750401496887207
    8. 'a' → logprob: -12.875401496887207
    9. '``' → logprob: -13.375401496887207
    10. ')' → logprob: -13.500401496887207

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8977949619293213
    2. 'o' → logprob: -1.3977949619293213
    3. 'ount' → logprob: -1.8977949619293213
    4. 'ounter' → logprob: -2.3977949619293213
    5. '=' → logprob: -2.5227949619293213
    6. '_' → logprob: -4.897794723510742
    7. 'u' → logprob: -5.022794723510742
    8. 'nt' → logprob: -6.397794723510742
    9. ' ' → logprob: -6.772794723510742
    10. 'ur' → logprob: -6.772794723510742

Token 22: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8492485284805298
    2. '0' → logprob: -1.4742485284805298
    3. ' {}' → logprob: -1.5992485284805298
    4. ' [' → logprob: -2.9742484092712402
    5. ' ' → logprob: -3.2242484092712402
    6. '[' → logprob: -3.5992484092712402
    7. '{' → logprob: -4.22424840927124
    8. 'a' → logprob: -5.34924840927124
    9. ' {' → logprob: -6.59924840927124
    10. '[a' → logprob: -7.09924840927124

Token 23: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3490530550479889
    2. '0' → logprob: -1.4740530252456665
    3. '[' → logprob: -3.099053144454956
    4. '{' → logprob: -3.974053144454956
    5. 'a' → logprob: -6.974052906036377
    6. '[]' → logprob: -7.974052906036377
    7. '1' → logprob: -8.224053382873535
    8. '[a' → logprob: -8.974053382873535
    9. 'dict' → logprob: -11.099053382873535
    10. '{})' → logprob: -11.224053382873535

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003269095439463854
    2. ' for' → logprob: -5.753269195556641
    3. 'i' → logprob: -9.87826919555664
    4. '\n' → logprob: -11.12826919555664
    5. 'n' → logprob: -11.62826919555664
    6. ')' → logprob: -12.62826919555664
    7. '```' → logprob: -13.25326919555664
    8. 'max' → logprob: -13.37826919555664
    9. 'd' → logprob: -13.50326919555664
    10. '\' → logprob: -13.50326919555664

Token 25: 'tmp' (ID: 11669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001805377542041242
    2. ' for' → logprob: -8.7501802444458
    3. 'i' → logprob: -11.3751802444458
    4. 'f' → logprob: -12.2501802444458
    5. 'n' → logprob: -12.8751802444458
    6. ')' → logprob: -14.2501802444458
    7. '
' → logprob: -14.5001802444458
    8. '<|end|>' → logprob: -15.2501802444458
    9. '```' → logprob: -15.2501802444458
    10. 'max' → logprob: -15.3751802444458

Token 26: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46253231167793274
    2. '=' → logprob: -1.3375322818756104
    3. '_' → logprob: -2.8375322818756104
    4. ' ' → logprob: -3.5875322818756104
    5. '+' → logprob: -4.4625325202941895
    6. ' +=' → logprob: -5.4625325202941895
    7. 'a' → logprob: -6.5875325202941895
    8. '+=' → logprob: -7.0875325202941895
    9. '  ' → logprob: -7.3375325202941895
    10. ' _' → logprob: -7.7125325202941895

Token 27: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.15880273282527924
    2. ' =' → logprob: -2.4088027477264404
    3. 'a' → logprob: -3.0338027477264404
    4. '=' → logprob: -5.533802509307861
    5. 'e' → logprob: -6.408802509307861
    6. 'i' → logprob: -6.908802509307861
    7. 'o' → logprob: -7.283802509307861
    8. 'x' → logprob: -7.408802509307861
    9. 'in' → logprob: -8.65880298614502
    10. 'ean' → logprob: -8.78380298614502

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7199233174324036
    2. 'a' → logprob: -1.0949232578277588
    3. ' ' → logprob: -2.344923257827759
    4. ' a' → logprob: -3.344923257827759
    5. ' float' → logprob: -4.594923496246338
    6. 'float' → logprob: -4.844923496246338
    7. '-' → logprob: -4.969923496246338
    8. '10' → logprob: -5.094923496246338
    9. '100' → logprob: -5.344923496246338
    10. ' -' → logprob: -5.594923496246338

Token 29: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5635379552841187
    2. 'a' → logprob: -1.6885379552841187
    3. '-' → logprob: -2.063538074493408
    4. 'float' → logprob: -2.813538074493408
    5. '10' → logprob: -3.063538074493408
    6. '1' → logprob: -5.438538074493408
    7. '100' → logprob: -5.813538074493408
    8. 'max' → logprob: -5.938538074493408
    9. 'None' → logprob: -7.438538074493408
    10. 'n' → logprob: -7.813538074493408

Token 30: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10697877407073975
    2. '**' → logprob: -2.9819788932800293
    3. '00' → logprob: -3.1069788932800293
    4. '000' → logprob: -5.731978893280029
    5. ' **' → logprob: -6.606978893280029
    6. '^' → logprob: -7.981978893280029
    7. ')' → logprob: -8.356978416442871
    8. ' ' → logprob: -8.606978416442871
    9. ':' → logprob: -8.981978416442871
    10. '*' → logprob: -9.231978416442871

Token 31: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003657791530713439
    2. '6' → logprob: -6.128657817840576
    3. '5' → logprob: -7.503657817840576
    4. '7' → logprob: -7.878657817840576
    5. '10' → logprob: -8.253657341003418
    6. '8' → logprob: -8.753657341003418
    7. '18' → logprob: -9.378657341003418
    8. '```' → logprob: -11.253657341003418
    9. '15' → logprob: -11.753657341003418
    10. '12' → logprob: -12.128657341003418

Token 32: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3166811466217041
    2. 'for' → logprob: -2.316681146621704
    3. ' for' → logprob: -2.441681146621704
    4. ' 
' → logprob: -3.066681146621704
    5. ')' → logprob: -4.566680908203125
    6. '
' → logprob: -4.566680908203125
    7. '<|end|>' → logprob: -4.816680908203125
    8. '+' → logprob: -6.066680908203125
    9. ',' → logprob: -6.566680908203125
    10. '0' → logprob: -6.941680908203125

Token 33: 'zero' (ID: 29221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043714333325624466
    2. ' for' → logprob: -3.9187142848968506
    3. '\n' → logprob: -4.41871452331543
    4. '
' → logprob: -4.54371452331543
    5. '\' → logprob: -10.04371452331543
    6. '' → logprob: -10.29371452331543
    7. '<|end|>' → logprob: -10.41871452331543
    8. '```' → logprob: -10.91871452331543
    9. ')' → logprob: -11.04371452331543
    10. ' ' → logprob: -11.04371452331543

Token 34: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29880383610725403
    2. '_count' → logprob: -1.6738038063049316
    3. 's' → logprob: -3.1738038063049316
    4. '_idx' → logprob: -4.798803806304932
    5. '_pos' → logprob: -4.923803806304932
    6. '_index' → logprob: -5.048803806304932
    7. '_cnt' → logprob: -5.673803806304932
    8. '_c' → logprob: -7.048803806304932
    9. ' =' → logprob: -8.04880428314209
    10. '_in' → logprob: -8.17380428314209

Token 35: ' False' (ID: 7983)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054001256823539734
    2. ' ' → logprob: -3.0540013313293457
    3. '[]' → logprob: -6.054001331329346
    4. 'False' → logprob: -6.679001331329346
    5. ' []' → logprob: -7.429001331329346
    6. '1' → logprob: -8.304000854492188
    7. ' False' → logprob: -8.429000854492188
    8. ' -' → logprob: -8.929000854492188
    9. 'True' → logprob: -9.304000854492188
    10. '-' → logprob: -9.304000854492188

Token 36: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2269355058670044
    2. ' for' → logprob: -1.9769355058670044
    3. '\n' → logprob: -2.976935386657715
    4. '\' → logprob: -5.101935386657715
    5. '
' → logprob: -5.601935386657715
    6. ' ' → logprob: -6.601935386657715
    7. '<|end|>' → logprob: -6.851935386657715
    8. '' → logprob: -7.726935386657715
    9. ' 
' → logprob: -8.226935386657715
    10. ')' → logprob: -8.726935386657715

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021405741572380066
    2. ' for' → logprob: -3.8964056968688965
    3. '\n' → logprob: -7.2714056968688965
    4. '
' → logprob: -10.021406173706055
    5. ':' → logprob: -10.146406173706055
    6. '```' → logprob: -10.271406173706055
    7. ' ' → logprob: -11.396406173706055
    8. '\' → logprob: -11.521406173706055
    9. '<|end|>' → logprob: -12.146406173706055
    10. '' → logprob: -12.146406173706055

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3939628005027771
    2. ' ' → logprob: -1.1439628601074219
    3. 'i' → logprob: -5.518962860107422
    4. '  ' → logprob: -6.393962860107422
    5. ' x' → logprob: -7.643962860107422
    6. ' a' → logprob: -7.643962860107422
    7. '_' → logprob: -8.893962860107422
    8. ' _' → logprob: -9.018962860107422
    9. 'a' → logprob: -10.018962860107422
    10. ' ‌' → logprob: -10.143962860107422

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05004912614822388
    2. 'in' → logprob: -3.050049066543579
    3. ' ' → logprob: -6.675049304962158
    4. '<|end|>' → logprob: -8.800048828125
    5. '+' → logprob: -11.800048828125
    6. '  ' → logprob: -11.925048828125
    7. 'range' → logprob: -12.675048828125
    8. ',' → logprob: -12.675048828125
    9. ' ,' → logprob: -12.862548828125
    10. ')' → logprob: -12.987548828125

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22617468237876892
    2. 'range' → logprob: -1.9761747121810913
    3. ' a' → logprob: -3.1011745929718018
    4. 'a' → logprob: -3.9761745929718018
    5. '	range' → logprob: -10.851174354553223
    6. ' ' → logprob: -10.976174354553223
    7. ' in' → logprob: -11.851174354553223
    8. '(range' → logprob: -12.101174354553223
    9. ' xrange' → logprob: -12.351174354553223
    10. '  ' → logprob: -12.351174354553223

Token 41: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3544676899909973
    2. '(len' → logprob: -1.3544676303863525
    3. '(n' → logprob: -3.3544676303863525
    4. ' (' → logprob: -5.229467868804932
    5. ' ' → logprob: -10.729467391967773
    6. '(length' → logprob: -10.979467391967773
    7. '(range' → logprob: -11.354467391967773
    8. ' len' → logprob: -11.479467391967773
    9. '(i' → logprob: -11.729467391967773
    10. '(
' → logprob: -12.604467391967773

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007376811117865145
    2. '-' → logprob: -7.50073766708374
    3. '):
' → logprob: -9.500738143920898
    4. ' ):' → logprob: -10.250738143920898
    5. ')' → logprob: -10.375738143920898
    6. ':' → logprob: -10.750738143920898
    7. '+' → logprob: -11.000738143920898
    8. ' -' → logprob: -13.000738143920898
    9. ')):' → logprob: -14.875738143920898
    10. '():' → logprob: -15.125738143920898

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23990501463413239
    2. ' ' → logprob: -1.7399049997329712
    3. '    ' → logprob: -4.114904880523682
    4. '<|end|>' → logprob: -4.489904880523682
    5. ':' → logprob: -6.114904880523682
    6. ' if' → logprob: -6.239904880523682
    7. '```' → logprob: -6.864904880523682
    8. ' 
' → logprob: -7.364904880523682
    9. '  ' → logprob: -7.614904880523682
    10. '[' → logprob: -7.614904880523682

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06870950758457184
    2. 'if' (adapté à ' if') → logprob: -3.4437096118927
    3. '   ' → logprob: -3.6937096118927
    4. ' a' → logprob: -5.943709373474121
    5. '```' → logprob: -6.318709373474121
    6. 'a' → logprob: -6.443709373474121
    7. '    ' → logprob: -6.693709373474121
    8. ' ' → logprob: -6.943709373474121
    9. ' ```' → logprob: -7.318709373474121
    10. '<|end|>' → logprob: -8.693709373474121

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07911956310272217
    2. 'a' → logprob: -2.5791196823120117
    3. ' ' → logprob: -8.954119682312012
    4. ' not' → logprob: -10.454119682312012
    5. ' zero' → logprob: -10.954119682312012
    6. '	a' → logprob: -11.329119682312012
    7. ' c' → logprob: -11.454119682312012
    8. ' ' → logprob: -11.954119682312012
    9. '   ' → logprob: -12.079119682312012
    10. '(a' → logprob: -12.454119682312012

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006566775846295059
    2. '[' → logprob: -7.375656604766846
    3. ' [' → logprob: -11.125657081604004
    4. '[a' → logprob: -12.500657081604004
    5. '```' → logprob: -12.750657081604004
    6. '[
' → logprob: -13.125657081604004
    7. '==' → logprob: -13.875657081604004
    8. ' ' → logprob: -14.000657081604004
    9. '\[' → logprob: -14.125657081604004
    10. '[I' → logprob: -14.750657081604004

Token 47: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7450796961784363
    2. ' ==' → logprob: -0.8700796961784363
    3. '>' → logprob: -3.495079755783081
    4. ']' → logprob: -3.870079755783081
    5. ' ' → logprob: -4.620079517364502
    6. ')' → logprob: -4.620079517364502
    7. '<' → logprob: -4.620079517364502
    8. ' <' → logprob: -4.995079517364502
    9. ' >' → logprob: -5.245079517364502
    10. '%' → logprob: -5.495079517364502

Token 48: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4629422426223755
    2. ' ==' → logprob: -1.0879422426223755
    3. '<' → logprob: -4.337942123413086
    4. '>' → logprob: -5.087942123413086
    5. ' <' → logprob: -5.462942123413086
    6. '<=' → logprob: -6.212942123413086
    7. '!=' → logprob: -6.212942123413086
    8. '%' → logprob: -6.462942123413086
    9. ' >' → logprob: -6.837942123413086
    10. ' !=' → logprob: -7.087942123413086

Token 49: ' ' (ID: 220)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.22120757400989532
    2. '0' → logprob: -1.721207618713379
    3. ' tmp' → logprob: -4.346207618713379
    4. ' ' → logprob: -5.346207618713379
    5. '=' → logprob: -6.471207618713379
    6. 'a' → logprob: -9.346207618713379
    7. '1' → logprob: -9.971207618713379
    8. 'ans' → logprob: -10.096207618713379
    9. 't' → logprob: -10.721207618713379
    10. '	tmp' → logprob: -10.721207618713379

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07944630086421967
    2. 'tmp' → logprob: -2.579446315765381
    3. ' ' → logprob: -8.454445838928223
    4. '1' → logprob: -8.954445838928223
    5. '=' → logprob: -9.079445838928223
    6. ' tmp' → logprob: -10.704445838928223
    7. 'ans' → logprob: -11.329445838928223
    8. '-' → logprob: -11.454445838928223
    9. 'a' → logprob: -11.579445838928223
    10. 'c' → logprob: -12.079445838928223

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06797435134649277
    2. ' and' → logprob: -2.817974328994751
    3. 'and' → logprob: -5.44297456741333
    4. ' :' → logprob: -6.94297456741333
    5. ' or' → logprob: -7.81797456741333
    6. ':
' → logprob: -8.567974090576172
    7. '):' → logprob: -10.442974090576172
    8. 'or' → logprob: -10.942974090576172
    9. '<|end|>' → logprob: -11.192974090576172
    10. ' ' → logprob: -11.442974090576172

Token 52: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23458778858184814
    2. ' and' → logprob: -1.9845877885818481
    3. '       ' → logprob: -3.3595876693725586
    4. ' :' → logprob: -3.6095876693725586
    5. '   ' → logprob: -5.484587669372559
    6. ':
' → logprob: -5.734587669372559
    7. ' :
' → logprob: -6.984587669372559
    8. '    ' → logprob: -7.734587669372559
    9. 'and' → logprob: -7.734587669372559
    10. ' ' → logprob: -8.484587669372559

Token 53: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4419846832752228
    2. 'c' (adapté à ' c') → logprob: -1.0669846534729004
    3. '   ' → logprob: -5.6919846534729
    4. ' ans' → logprob: -5.9419846534729
    5. 'tmp' → logprob: -6.1919846534729
    6. 'ans' → logprob: -6.5669846534729
    7. ' tmp' → logprob: -6.6919846534729
    8. '    ' → logprob: -7.3169846534729
    9. ' ' → logprob: -7.6919846534729
    10. '	c' → logprob: -7.8169846534729

Token 54: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00863016489893198
    2. ' +=' → logprob: -4.758630275726318
    3. '+' → logprob: -11.38362979888916
    4. ']+=' → logprob: -13.50862979888916
    5. '=' → logprob: -13.75862979888916
    6. '+=(' → logprob: -14.00862979888916
    7. '+='' → logprob: -14.63362979888916
    8. '<|end|>' → logprob: -15.25862979888916
    9. '+="' → logprob: -16.883630752563477
    10. ' =' → logprob: -17.633630752563477

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '<|end|>' → logprob: -18.625123977661133
    4. 'a' → logprob: -19.750123977661133
    5. '１' → logprob: -20.125123977661133
    6. '   ' → logprob: -20.375123977661133
    7. '  ' → logprob: -20.625123977661133
    8. '2' → logprob: -21.000123977661133
    9. '0' → logprob: -21.250123977661133
    10. '+' → logprob: -21.375123977661133

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'a' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -18.625001907348633
    5. '-' → logprob: -19.500001907348633
    6. '```' → logprob: -19.625001907348633
    7. '１' → logprob: -20.000001907348633
    8. '2' → logprob: -20.000001907348633
    9. '0' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.750001907348633

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1530951261520386
    2. '       ' → logprob: -1.1530951261520386
    3. '<|end|>' → logprob: -1.9030951261520386
    4. ' ' → logprob: -2.278095245361328
    5. ',' → logprob: -3.403095245361328
    6. '    ' → logprob: -3.653095245361328
    7. '
' → logprob: -4.028095245361328
    8. ' and' → logprob: -4.778095245361328
    9. '    
' → logprob: -5.028095245361328
    10. ' 
' → logprob: -5.653095245361328

Token 58: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' elif' (ID: 9497)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35318660736083984
    2. '   ' → logprob: -2.60318660736084
    3. ' tmp' → logprob: -2.60318660736084
    4. ' ' → logprob: -2.97818660736084
    5. ' elif' → logprob: -3.35318660736084
    6. 'tmp' → logprob: -3.97818660736084
    7. ' else' → logprob: -4.10318660736084
    8. 'if' → logprob: -4.10318660736084
    9. '    ' → logprob: -5.60318660736084
    10. 'elif' (adapté à ' elif') → logprob: -6.10318660736084

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20145826041698456
    2. 'a' → logprob: -1.701458215713501
    3. '0' → logprob: -10.576457977294922
    4. ' ' → logprob: -11.451457977294922
    5. ' not' → logprob: -13.451457977294922
    6. '	a' → logprob: -13.513957977294922
    7. ' ' → logprob: -13.638957977294922
    8. ' zero' → logprob: -14.451457977294922
    9. 'not' → logprob: -14.451457977294922
    10. 'zero' → logprob: -14.763957977294922

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -15.250003814697266
    4. '==' → logprob: -15.625003814697266
    5. ' [' → logprob: -15.750003814697266
    6. '[
' → logprob: -15.875003814697266
    7. '[I' → logprob: -16.000003814697266
    8. 'i' → logprob: -16.625003814697266
    9. '[a' → logprob: -17.125003814697266
    10. 'a' → logprob: -17.312503814697266

Token 62: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2579636573791504
    2. ' ==' → logprob: -1.5079636573791504
    3. '>' → logprob: -5.75796365737915
    4. '<' → logprob: -7.00796365737915
    5. ' >' → logprob: -7.50796365737915
    6. ' <' → logprob: -7.88296365737915
    7. ' ' → logprob: -8.132963180541992
    8. '=' → logprob: -8.257963180541992
    9. ']==' → logprob: -8.757963180541992
    10. '0' → logprob: -9.382963180541992

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3896627724170685
    2. ' ==' → logprob: -1.139662742614746
    3. '>' → logprob: -6.764662742614746
    4. '=' → logprob: -7.264662742614746
    5. ' >' → logprob: -8.139662742614746
    6. ' ' → logprob: -8.639662742614746
    7. '0' → logprob: -8.889662742614746
    8. '<' → logprob: -9.139662742614746
    9. ' <' → logprob: -9.389662742614746
    10. ' =' → logprob: -9.389662742614746

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132617771625519
    2. ' ' → logprob: -1.3132617473602295
    3. '  ' → logprob: -16.563261032104492
    4. '<|end|>' → logprob: -17.188261032104492
    5. '۰' → logprob: -18.313261032104492
    6. ' ' → logprob: -18.563261032104492
    7. '```' → logprob: -19.313261032104492
    8. '０' → logprob: -19.313261032104492
    9. 'zero' → logprob: -19.563261032104492
    10. 's' → logprob: -19.813261032104492

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '  ' → logprob: -19.25048828125
    4. '۰' → logprob: -19.62548828125
    5. '```' → logprob: -19.62548828125
    6. '０' → logprob: -19.75048828125
    7. '   ' → logprob: -19.87548828125
    8. ' ' → logprob: -20.12548828125
    9. ' ' → logprob: -20.31298828125
    10. ')' → logprob: -20.37548828125

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003207896137610078
    2. ':
' → logprob: -5.753207683563232
    3. ' :' → logprob: -10.75320816040039
    4. '):' → logprob: -12.87820816040039
    5. '   ' → logprob: -13.25320816040039
    6. ':
' → logprob: -14.00320816040039
    7. '       ' → logprob: -14.00320816040039
    8. ' :
' → logprob: -14.50320816040039
    9. ',' → logprob: -14.62820816040039
    10. ':return' → logprob: -14.75320816040039

Token 67: '       ' (ID: 309)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.22598601877689362
    2. '   ' → logprob: -2.1009860038757324
    3. 'zero' → logprob: -2.7259860038757324
    4. '    ' → logprob: -5.225986003875732
    5. '    
' → logprob: -5.350986003875732
    6. '       ' → logprob: -6.225986003875732
    7. ' ' → logprob: -6.975986003875732
    8. ' 
' → logprob: -7.975986003875732
    9. '
' → logprob: -8.10098648071289
    10. ' ' → logprob: -9.10098648071289

Token 68: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.22557930648326874
    2. 'zero' (adapté à ' zero') → logprob: -1.6005792617797852
    3. '
' → logprob: -9.100579261779785
    4. '```' → logprob: -11.100579261779785
    5. '   ' → logprob: -11.725579261779785
    6. '       ' → logprob: -11.850579261779785
    7. 'Zero' → logprob: -12.600579261779785
    8. ' ' → logprob: -12.850579261779785
    9. '0' → logprob: -12.850579261779785
    10. '``' → logprob: -13.225579261779785

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760199427604675
    2. ' =' → logprob: -0.8260199427604675
    3. '=True' → logprob: -9.451020240783691
    4. '=False' → logprob: -14.326020240783691
    5. 's' → logprob: -14.576020240783691
    6. ' ' → logprob: -14.951020240783691
    7. ')' → logprob: -16.076019287109375
    8. '＝' → logprob: -16.576019287109375
    9. ' |=' → logprob: -16.701019287109375
    10. 'True' → logprob: -16.826019287109375

Token 70: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1269282102584839
    2. ' True' → logprob: -2.1269283294677734
    3. '=True' → logprob: -16.376928329467773
    4. '1' → logprob: -17.251928329467773
    5. '(True' → logprob: -17.501928329467773
    6. 'Tr' → logprob: -19.001928329467773
    7. '   ' → logprob: -19.376928329467773
    8. 'T' → logprob: -19.501928329467773
    9. 'False' → logprob: -20.501928329467773
    10. ' ' → logprob: -20.751928329467773

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.018036961555481
    2. '<|end|>' → logprob: -1.018036961555481
    3. '
' → logprob: -2.0180368423461914
    4. ' ' → logprob: -3.1430368423461914
    5. '    
' → logprob: -3.3930368423461914
    6. '  
' → logprob: -3.8930368423461914
    7. ' 
' → logprob: -4.268036842346191
    8. 'continue' → logprob: -5.143036842346191
    9. ' continue' → logprob: -5.643036842346191
    10. ')' → logprob: -5.768036842346191

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8636903166770935
    2. 'continue' → logprob: -1.3636903762817383
    3. '<|end|>' → logprob: -1.8636903762817383
    4. ' continue' → logprob: -2.4886903762817383
    5. ' ' → logprob: -4.238690376281738
    6. '
' → logprob: -4.238690376281738
    7. '0' → logprob: -4.363690376281738
    8. 'tmp' → logprob: -4.613690376281738
    9. ')' → logprob: -5.488690376281738
    10. '    
' → logprob: -5.613690376281738

Token 73: ' tmp' (ID: 8919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2295784950256348
    2. 'tmp' (adapté à ' tmp') → logprob: -1.2295784950256348
    3. 'm' → logprob: -2.1045784950256348
    4. ',' → logprob: -2.2295784950256348
    5. ' ' → logprob: -2.4795784950256348
    6. '   ' → logprob: -3.6045784950256348
    7. ' tmp' → logprob: -3.8545784950256348
    8. ' )' → logprob: -4.979578495025635
    9. 't' → logprob: -5.354578495025635
    10. 'else' → logprob: -5.604578495025635

Token 74: ' =' (ID: 314)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0077060069888830185
    2. '_' → logprob: -4.882706165313721
    3. 'm' → logprob: -10.132705688476562
    4. '_=' → logprob: -10.382705688476562
    5. '=' → logprob: -11.507705688476562
    6. '_i' → logprob: -12.382705688476562
    7. '_a' → logprob: -12.632705688476562
    8. ' =' → logprob: -13.257705688476562
    9. '_c' → logprob: -13.507705688476562
    10. 's' → logprob: -13.882705688476562

Token 75: ' abs' (ID: 8443)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2431222200393677
    2. 'min' → logprob: -1.2431222200393677
    3. ' abs' → logprob: -1.4931222200393677
    4. 'abs' → logprob: -1.6181222200393677
    5. 'a' → logprob: -9.993122100830078
    6. ' a' → logprob: -10.618122100830078
    7. ' ' → logprob: -12.368122100830078
    8. ' ' → logprob: -12.618122100830078
    9. '(abs' → logprob: -12.618122100830078
    10. 'max' → logprob: -12.868122100830078

Token 76: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002622894535306841
    2. '(' → logprob: -8.250262260437012
    3. 'a' → logprob: -14.250262260437012
    4. '(ai' → logprob: -15.125262260437012
    5. '(
' → logprob: -16.625263214111328
    6. '(i' → logprob: -16.750263214111328
    7. '((' → logprob: -19.250263214111328
    8. '(A' → logprob: -19.500263214111328
    9. '(

' → logprob: -20.125263214111328
    10. '(x' → logprob: -20.250263214111328

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.392824874026701e-05
    2. '[' → logprob: -10.87503433227539
    3. ')' → logprob: -11.37503433227539
    4. '[a' → logprob: -13.12503433227539
    5. '[
' → logprob: -14.62503433227539
    6. ')[' → logprob: -15.00003433227539
    7. 'i' → logprob: -15.37503433227539
    8. '[I' → logprob: -15.37503433227539
    9. ')i' → logprob: -16.50003433227539
    10. 'a' → logprob: -16.75003433227539

Token 78: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.734462559223175
    2. '])' → logprob: -0.734462559223175
    3. '))' → logprob: -3.2344624996185303
    4. ']))' → logprob: -7.734462738037109
    5. '})' → logprob: -8.35946273803711
    6. ')])' → logprob: -8.98446273803711
    7. ']' → logprob: -9.10946273803711
    8. '>)' → logprob: -9.73446273803711
    9. '）' → logprob: -9.98446273803711
    10. ')))' → logprob: -10.35946273803711

Token 79: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2619088292121887
    2. ' if' → logprob: -1.511908769607544
    3. ')' → logprob: -5.386909008026123
    4. '<|end|>' → logprob: -5.511909008026123
    5. '   ' → logprob: -8.136908531188965
    6. ',' → logprob: -8.386908531188965
    7. '>' → logprob: -9.261908531188965
    8. '-' → logprob: -9.386908531188965
    9. '...' → logprob: -9.386908531188965
    10. '*' → logprob: -9.386908531188965

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18255825340747833
    2. '+=' → logprob: -1.807558298110962
    3. '+' → logprob: -5.932558059692383
    4. ' -=' → logprob: -10.432558059692383
    5. ']+=' → logprob: -10.432558059692383
    6. '=' → logprob: -11.057558059692383
    7. '+=(' → logprob: -11.057558059692383
    8. '+='' → logprob: -11.182558059692383
    9. ' ' → logprob: -11.432558059692383
    10. '	' → logprob: -12.307558059692383

Token 82: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5759789347648621
    2. 'tmp' → logprob: -0.8259789347648621
    3. '(tmp' → logprob: -11.575979232788086
    4. ' ' → logprob: -11.825979232788086
    5. '	tmp' → logprob: -11.950979232788086
    6. ' tm' → logprob: -13.075979232788086
    7. '/tmp' → logprob: -13.075979232788086
    8. 'temp' → logprob: -13.450979232788086
    9. '[tmp' → logprob: -13.450979232788086
    10. 't' → logprob: -13.450979232788086

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43107476830482483
    2. '<|end|>' → logprob: -2.431074857711792
    3. 'if' → logprob: -2.556074857711792
    4. ' if' → logprob: -2.681074857711792
    5. '\n' → logprob: -2.681074857711792
    6. ' ' → logprob: -3.931074857711792
    7. '   ' → logprob: -5.431074619293213
    8. '  
' → logprob: -5.556074619293213
    9. '<|end|>' → logprob: -5.806074619293213
    10. '\' → logprob: -5.806074619293213

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6880379319190979
    2. ' if' → logprob: -1.4380378723144531
    3. 'if' → logprob: -1.5630378723144531
    4. ' ' → logprob: -3.313037872314453
    5. '<|end|>' → logprob: -5.938037872314453
    6. '    
' → logprob: -6.313037872314453
    7. '    ' → logprob: -6.563037872314453
    8. '```' → logprob: -6.813037872314453
    9. '  ' → logprob: -7.063037872314453
    10. '\' → logprob: -7.063037872314453

Token 85: ' tmp' (ID: 8919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02159499004483223
    2. '   ' → logprob: -3.896595001220703
    3. ' if' → logprob: -7.021595001220703
    4. 'tmp' (adapté à ' tmp') → logprob: -9.146595001220703
    5. ' ' → logprob: -10.271595001220703
    6. '  ' → logprob: -12.146595001220703
    7. '       ' → logprob: -12.396595001220703
    8. '```' → logprob: -13.021595001220703
    9. '	if' → logprob: -13.271595001220703
    10. '    ' → logprob: -14.396595001220703

Token 86: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.1829005479812622
    2. 'if' → logprob: -2.6829004287719727
    3. '=' → logprob: -3.0579004287719727
    4. 'in' → logprob: -3.4329004287719727
    5. 'm' → logprob: -5.307900428771973
    6. ' =' → logprob: -5.307900428771973
    7. '_' → logprob: -5.682900428771973
    8. 'min' → logprob: -6.057900428771973
    9. '=min' → logprob: -6.307900428771973
    10. '_=' → logprob: -7.182900428771973

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049481332302093506
    2. '=' → logprob: -3.0494813919067383
    3. 'in' → logprob: -7.174481391906738
    4. ' ' → logprob: -9.549481391906738
    5. '=min' → logprob: -10.049481391906738
    6. 'i' → logprob: -12.674481391906738
    7. 'n' → logprob: -13.549481391906738
    8. 'if' → logprob: -13.549481391906738
    9. '=in' → logprob: -13.799481391906738
    10. ',' → logprob: -13.799481391906738

Token 88: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1269282102584839
    2. ' min' → logprob: -2.1269283294677734
    3. '(min' → logprob: -16.251928329467773
    4. '	min' → logprob: -17.251928329467773
    5. 'tmp' → logprob: -17.626928329467773
    6. '[min' → logprob: -18.376928329467773
    7. '=min' → logprob: -18.501928329467773
    8. 'mini' → logprob: -18.751928329467773
    9. ' ' → logprob: -18.751928329467773
    10. '.min' → logprob: -19.501928329467773

Token 89: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0007119550718925893
    2. '(' → logprob: -7.250711917877197
    3. 'tmp' → logprob: -14.000712394714355
    4. '(t' → logprob: -14.125712394714355
    5. '(tm' → logprob: -15.125712394714355
    6. '(temp' → logprob: -16.50071144104004
    7. '	tmp' → logprob: -17.50071144104004
    8. ' (' → logprob: -17.50071144104004
    9. ' tmp' → logprob: -17.62571144104004
    10. '(
' → logprob: -17.75071144104004

Token 90: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002613358374219388
    2. ',tmp' → logprob: -8.500261306762695
    3. ')' → logprob: -10.625261306762695
    4. ' ,' → logprob: -11.125261306762695
    5. ',)' → logprob: -11.125261306762695
    6. ',t' → logprob: -13.625261306762695
    7. ',
' → logprob: -13.750261306762695
    8. ',m' → logprob: -15.375261306762695
    9. ',

' → logprob: -15.375261306762695
    10. ',temp' → logprob: -15.375261306762695

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003213997988495976
    2. ' ,' → logprob: -8.625321388244629
    3. ',tmp' → logprob: -8.875321388244629
    4. ')' → logprob: -13.500321388244629
    5. ',
' → logprob: -15.250321388244629
    6. ',t' → logprob: -16.250322341918945
    7. ',)' → logprob: -16.250322341918945
    8. ',

' → logprob: -17.000322341918945
    9. '[tmp' → logprob: -17.625322341918945
    10. '(tmp' → logprob: -17.750322341918945

Token 92: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.06201552227139473
    2. 'tmp' → logprob: -2.8120155334472656
    3. ' ' → logprob: -10.937015533447266
    4. ' )' → logprob: -11.062015533447266
    5. '(tmp' → logprob: -12.687015533447266
    6. '	tmp' → logprob: -12.687015533447266
    7. ' ' → logprob: -12.937015533447266
    8. '[tmp' → logprob: -12.937015533447266
    9. ')' → logprob: -13.437015533447266
    10. '/tmp' → logprob: -14.062015533447266

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.32392441527918e-05
    2. ')
' → logprob: -9.875053405761719
    3. ' )' → logprob: -13.625053405761719
    4. ')

' → logprob: -14.875053405761719
    5. '))' → logprob: -17.12505340576172
    6. '）' → logprob: -17.25005340576172
    7. ')return' → logprob: -17.75005340576172
    8. ')
' → logprob: -17.87505340576172
    9. ')**' → logprob: -18.12505340576172
    10. ')`' → logprob: -18.25005340576172

Token 94: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03172402083873749
    2. ' if' → logprob: -4.156723976135254
    3. ')' → logprob: -4.781723976135254
    4. '
' → logprob: -6.281723976135254
    5. '\n' → logprob: -6.656723976135254
    6. '```' → logprob: -7.031723976135254
    7. '<|end|>' → logprob: -7.156723976135254
    8. ' ' → logprob: -7.281723976135254
    9. ' 
' → logprob: -7.656723976135254
    10. ')
' → logprob: -8.656723976135254

Token 95: ' zero' (ID: 12421)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0598641037940979
    2. ' zero' → logprob: -3.059864044189453
    3. 'c' → logprob: -4.809864044189453
    4. 'zero' → logprob: -6.059864044189453
    5. ' not' → logprob: -8.184864044189453
    6. '(c' → logprob: -8.434864044189453
    7. ' ' → logprob: -9.184864044189453
    8. ' ' → logprob: -10.059864044189453
    9. ' (' → logprob: -10.309864044189453
    10. '	c' → logprob: -11.059864044189453

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016850750893354416
    2. ' :' → logprob: -4.14185094833374
    3. ' ==' → logprob: -7.89185094833374
    4. ':
' → logprob: -8.266850471496582
    5. '==' → logprob: -9.141850471496582
    6. ' or' → logprob: -11.141850471496582
    7. ' is' → logprob: -11.391850471496582
    8. ' and' → logprob: -12.016850471496582
    9. ' continue' → logprob: -12.141850471496582
    10. '):' → logprob: -12.266850471496582

Token 97: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34118181467056274
    2. '   ' → logprob: -1.591181755065918
    3. ' print' → logprob: -2.466181755065918
    4. '	print' → logprob: -8.591181755065918
    5. 'ans' → logprob: -8.841181755065918
    6. ' ans' → logprob: -9.841181755065918
    7. ' ' → logprob: -11.216181755065918
    8. '0' → logprob: -11.216181755065918
    9. '  ' → logprob: -11.591181755065918
    10. ':' → logprob: -11.716181755065918

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004019521293230355
    2. ' print' → logprob: -8.000401496887207
    3. 'pass' → logprob: -10.125401496887207
    4. 'ans' → logprob: -11.250401496887207
    5. '   ' → logprob: -11.375401496887207
    6. '```' → logprob: -13.750401496887207
    7. ' pass' → logprob: -14.375401496887207
    8. ' ' → logprob: -16.375402450561523
    9. '	print' → logprob: -16.375402450561523
    10. ' ans' → logprob: -16.750402450561523

Token 99: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0112290158867836
    2. '(' → logprob: -4.511229038238525
    3. 'ans' → logprob: -9.011228561401367
    4. ' (' → logprob: -10.011228561401367
    5. ' ans' → logprob: -12.511228561401367
    6. '(int' → logprob: -12.886228561401367
    7. '('' → logprob: -12.886228561401367
    8. '(a' → logprob: -13.636228561401367
    9. '(f' → logprob: -13.636228561401367
    10. '("' → logprob: -13.761228561401367

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000251326389843598
    2. ' )' → logprob: -8.875251770019531
    3. ')
' → logprob: -9.125251770019531
    4. 'else' → logprob: -13.375251770019531
    5. '))' → logprob: -16.12525177001953
    6. '')' → logprob: -16.50025177001953
    7. '）' → logprob: -16.62525177001953
    8. ')
' → logprob: -16.62525177001953
    9. ' else' → logprob: -16.62525177001953
    10. ' )
' → logprob: -16.75025177001953

Token 101: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3868771195411682
    2. 'else' → logprob: -1.1368770599365234
    3. ' else' → logprob: -12.761877059936523
    4. ' elif' → logprob: -13.011877059936523
    5. 'el' → logprob: -14.511877059936523
    6. 'eli' → logprob: -15.011877059936523
    7. '#elif' → logprob: -17.136877059936523
    8. '_else' → logprob: -17.386877059936523
    9. 'elseif' → logprob: -17.511877059936523
    10. '```' → logprob: -17.761877059936523

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000915039679966867
    2. ':
' → logprob: -7.000915050506592
    3. '   ' → logprob: -13.125914573669434
    4. ' :' → logprob: -14.125914573669434
    5. 'if' → logprob: -14.750914573669434
    6. ' if' → logprob: -15.250914573669434
    7. ':
' → logprob: -16.62591552734375
    8. ':

' → logprob: -17.25091552734375
    9. ',' → logprob: -17.50091552734375
    10. ' :
' → logprob: -17.50091552734375

Token 103: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.390531450510025
    2. '   ' → logprob: -1.1405314207077026
    3. ' if' → logprob: -6.890531539916992
    4. ':' → logprob: -7.140531539916992
    5. 'print' → logprob: -7.140531539916992
    6. ' ' → logprob: -7.515531539916992
    7. '```' → logprob: -8.265531539916992
    8. '[' → logprob: -9.890531539916992
    9. 'elif' → logprob: -9.890531539916992
    10. '``' → logprob: -10.890531539916992

Token 104: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0619969367980957
    2. 'if' (adapté à ' if') → logprob: -2.8119969367980957
    3. '   ' → logprob: -10.936996459960938
    4. 'ans' → logprob: -11.561996459960938
    5. ' print' → logprob: -13.936996459960938
    6. ' if' → logprob: -13.936996459960938
    7. '```' → logprob: -16.686996459960938
    8. '    
' → logprob: -17.811996459960938
    9. 'prit' → logprob: -17.936996459960938
    10. '#print' → logprob: -18.436996459960938

Token 105: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00690848333761096
    2. ' c' → logprob: -5.006908416748047
    3. '   ' → logprob: -8.756908416748047
    4. ' ' → logprob: -10.631908416748047
    5. '(c' → logprob: -11.881908416748047
    6. '	c' → logprob: -13.006908416748047
    7. '  ' → logprob: -13.881908416748047
    8. '    ' → logprob: -14.631908416748047
    9. 'zero' → logprob: -15.131908416748047
    10. '     ' → logprob: -16.006908416748047

Token 106: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0008046258008107543
    2. ' %' → logprob: -7.125804424285889
    3. '%
' → logprob: -16.500804901123047
    4. ' ' → logprob: -17.250804901123047
    5. '```' → logprob: -17.375804901123047
    6. '&' → logprob: -17.500804901123047
    7. '%\' → logprob: -18.625804901123047
    8. '()%' → logprob: -18.625804901123047
    9. ' ' → logprob: -18.875804901123047
    10. '%c' → logprob: -19.500804901123047

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -15.500018119812012
    4. '{' → logprob: -16.000017166137695
    5. '<|end|>' → logprob: -16.375017166137695
    6. '  ' → logprob: -16.625017166137695
    7. '=' → logprob: -16.625017166137695
    8. '>' → logprob: -16.750017166137695
    9. '```' → logprob: -16.875017166137695
    10. '202' → logprob: -17.000017166137695

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '{' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. '۲' → logprob: -17.750001907348633
    8. '२' → logprob: -18.187501907348633
    9. '২' → logprob: -18.250001907348633
    10. '.' → logprob: -18.500001907348633

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25417500734329224
    2. ' ==' → logprob: -1.5041749477386475
    3. '0' → logprob: -6.379175186157227
    4. ' !=' → logprob: -8.754175186157227
    5. '!=' → logprob: -8.879175186157227
    6. '=' → logprob: -9.379175186157227
    7. ' ' → logprob: -9.754175186157227
    8. '1' → logprob: -10.379175186157227
    9. ')' → logprob: -10.504175186157227
    10. ')==' → logprob: -11.254175186157227

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010306637705070898
    2. '1' → logprob: -9.875102996826172
    3. ' ' → logprob: -9.875102996826172
    4. '2' → logprob: -16.750102996826172
    5. '```' → logprob: -17.500102996826172
    6. '=' → logprob: -17.875102996826172
    7. '   ' → logprob: -18.000102996826172
    8. '۰' → logprob: -19.062602996826172
    9. '==' → logprob: -19.312602996826172
    10. '...' → logprob: -19.562602996826172

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.534558552724775e-05
    2. '2' → logprob: -11.000025749206543
    3. '1' → logprob: -12.250025749206543
    4. ' ' → logprob: -12.500025749206543
    5. '```' → logprob: -17.625024795532227
    6. '۰' → logprob: -18.250024795532227
    7. '   ' → logprob: -18.437524795532227
    8. '０' → logprob: -19.062524795532227
    9. '०' → logprob: -19.375024795532227
    10. '  ' → logprob: -19.500024795532227

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043013233691453934
    2. ':
' → logprob: -3.168013334274292
    3. '):' → logprob: -12.168013572692871
    4. '):
' → logprob: -12.543013572692871
    5. ')' → logprob: -13.543013572692871
    6. '   ' → logprob: -13.668013572692871
    7. ':
' → logprob: -14.168013572692871
    8. 'print' → logprob: -14.293013572692871
    9. ':

' → logprob: -14.293013572692871
    10. '():
' → logprob: -15.543013572692871

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7777267694473267
    2. '   ' → logprob: -1.2777267694473267
    3. 'print' → logprob: -1.4027267694473267
    4. ' print' → logprob: -4.277726650238037
    5. ':' → logprob: -7.027726650238037
    6. ':
' → logprob: -7.902726650238037
    7. ')' → logprob: -8.527727127075195
    8. '
' → logprob: -8.777727127075195
    9. '	print' → logprob: -9.152727127075195
    10. '    
' → logprob: -9.652727127075195

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012454704847186804
    2. ' print' → logprob: -6.751245498657227
    3. '   ' → logprob: -9.501245498657227
    4. '       ' → logprob: -15.001245498657227
    5. '	print' → logprob: -15.876245498657227
    6. ' ' → logprob: -17.001245498657227
    7. '```' → logprob: -18.251245498657227
    8. '.print' → logprob: -18.626245498657227
    9. '  ' → logprob: -18.876245498657227
    10. '    ' → logprob: -20.001245498657227

Token 115: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.000036239624023
    4. '(answer' → logprob: -17.125036239624023
    5. 'ans' → logprob: -17.375036239624023
    6. '(a' → logprob: -18.875036239624023
    7. '(
' → logprob: -19.375036239624023
    8. '(abs' → logprob: -19.875036239624023
    9. '	ans' → logprob: -20.625036239624023
    10. '(an' → logprob: -21.000036239624023

Token 116: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0620536133646965
    2. ')' → logprob: -2.812053680419922
    3. '   ' → logprob: -9.562053680419922
    4. ' )
' → logprob: -11.687053680419922
    5. ')
' → logprob: -12.562053680419922
    6. 'else' → logprob: -12.812053680419922
    7. ' )' → logprob: -14.687053680419922
    8. ')`
' → logprob: -15.312053680419922
    9. ')

' → logprob: -16.062053680419922
    10. ' else' → logprob: -16.187053680419922

Token 117: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0041299303993582726
    2. '   ' → logprob: -5.504129886627197
    3. ' else' → logprob: -9.879130363464355
    4. 'elif' → logprob: -15.879130363464355
    5. '	else' → logprob: -16.50412940979004
    6. '_else' → logprob: -18.37912940979004
    7. '  ' → logprob: -19.62912940979004
    8. '```' → logprob: -19.75412940979004
    9. ' ' → logprob: -20.12912940979004
    10. 'e' → logprob: -20.37912940979004

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.000580792548134923
    2. ' else' → logprob: -7.500580787658691
    3. '   ' → logprob: -10.500580787658691
    4. 'elif' → logprob: -15.750580787658691
    5. '	else' → logprob: -16.500581741333008
    6. ' ' → logprob: -17.250581741333008
    7. '  ' → logprob: -18.000581741333008
    8. 'e' → logprob: -18.625581741333008
    9. '_else' → logprob: -19.000581741333008
    10. ')' → logprob: -19.125581741333008

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02782141976058483
    2. ':
' → logprob: -3.6528213024139404
    3. '       ' → logprob: -6.5278215408325195
    4. '   ' → logprob: -10.40282154083252
    5. 'print' → logprob: -11.02782154083252
    6. ':
' → logprob: -12.90282154083252
    7. ' print' → logprob: -13.77782154083252
    8. ' :' → logprob: -14.02782154083252
    9. '():
' → logprob: -14.02782154083252
    10. '):
' → logprob: -14.15282154083252

Token 120: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009648896753787994
    2. '   ' → logprob: -5.50964879989624
    3. '       ' → logprob: -5.50964879989624
    4. ' print' → logprob: -6.50964879989624
    5. '	print' → logprob: -11.509649276733398
    6. '(print' → logprob: -13.259649276733398
    7. '    ' → logprob: -13.384649276733398
    8. '     ' → logprob: -13.759649276733398
    9. '    
' → logprob: -14.259649276733398
    10. '-' → logprob: -14.259649276733398

Token 121: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.8889261304575484e-06
    2. ' print' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '	print' → logprob: -20.750003814697266
    5. '-print' → logprob: -21.750003814697266
    6. '(print' → logprob: -22.250003814697266
    7. '```' → logprob: -22.500003814697266
    8. ' ' → logprob: -23.000003814697266
    9. 'printf' → logprob: -23.500003814697266
    10. '.print' → logprob: -23.625003814697266

Token 122: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. 'ans' → logprob: -15.12500286102295
    4. '(answer' → logprob: -17.875003814697266
    5. ' ans' → logprob: -18.750003814697266
    6. ' (' → logprob: -19.250003814697266
    7. '(abs' → logprob: -19.625003814697266
    8. '	ans' → logprob: -19.625003814697266
    9. '(
' → logprob: -20.250003814697266
    10. '(an' → logprob: -20.375003814697266

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132791221141815
    2. ' -' → logprob: -1.313279151916504
    3. '-t' → logprob: -11.688279151916504
    4. ')' → logprob: -12.313279151916504
    5. ' ' → logprob: -13.188279151916504
    6. '-min' → logprob: -14.438279151916504
    7. '−' → logprob: -14.813279151916504
    8. '   ' → logprob: -14.938279151916504
    9. '-end' → logprob: -14.938279151916504
    10. ' ' → logprob: -15.313279151916504

Token 124: ' tmp' (ID: 8919)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. 'tmp' → logprob: -13.625022888183594
    4. '   ' → logprob: -18.500022888183594
    5. '(' → logprob: -19.000022888183594
    6. '  ' → logprob: -20.125022888183594
    7. '２' → logprob: -20.250022888183594
    8. ')' → logprob: -20.750022888183594
    9. '```' → logprob: -21.000022888183594
    10. '(tmp' → logprob: -21.500022888183594

Token 125: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.3856492842023727e-06
    2. '*' → logprob: -14.250000953674316
    3. 'm' → logprob: -14.500000953674316
    4. '*_' → logprob: -16.125001907348633
    5. '2' → logprob: -18.500001907348633
    6. '_' → logprob: -20.000001907348633
    7. '_s' → logprob: -20.250001907348633
    8. 'multip' → logprob: -20.625001907348633
    9. 's' → logprob: -20.750001907348633
    10. '```' → logprob: -21.000001907348633

Token 126: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10048173367977142
    2. ')' → logprob: -2.3504817485809326
    3. ' *' → logprob: -8.725481986999512
    4. '*)' → logprob: -9.100481986999512
    5. ')*' → logprob: -14.725481986999512
    6. '))' → logprob: -14.975481986999512
    7. ' )' → logprob: -15.975481986999512
    8. ')`' → logprob: -16.225481033325195
    9. '）' → logprob: -17.100481033325195
    10. ' ' → logprob: -17.850481033325195

Token 127: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '２' → logprob: -19.25
    4. '۲' → logprob: -19.625
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -20.375
    7. '
' → logprob: -20.875
    8. '<|end|>' → logprob: -21.0
    9. ')' → logprob: -21.125
    10. '२' → logprob: -21.125

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '２' → logprob: -20.375
    4. '۲' → logprob: -20.75
    5. '   ' → logprob: -21.25
    6. '```' → logprob: -21.625
    7. '२' → logprob: -21.875
    8. '২' → logprob: -22.25
    9. '٢' → logprob: -22.25
    10. '₂' → logprob: -23.4375

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -14.625000953674316
    4. ')`' → logprob: -16.250001907348633
    5. ')
' → logprob: -16.750001907348633
    6. '）' → logprob: -17.500001907348633
    7. '())' → logprob: -18.000001907348633
    8. '```' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.250001907348633
    10. ')")' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 127
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 109
Précision stricte (1ère position): 33.86%
Précision adaptée (1ère position): 37.01%
Précision (top 10): 85.83%
================================================================================
