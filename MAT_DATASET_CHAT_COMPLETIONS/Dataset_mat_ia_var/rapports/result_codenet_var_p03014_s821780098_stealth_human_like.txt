================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# J'augmente la limite de récursion au cas où, même si je sais pas si c'est vraiment utile ici
sys.setrecursionlimit(100000 + 9)

def input():
    # Je trouve readline un peu plus rapide, mais faut faire attention aux espaces
    return sys.stdin.readline().strip()

def resolve():
    H, W = map(int, input().split())
    # On prépare la grille (en vrai on pourrait la faire en une ligne mais bon)
    grid = []
    for i in range(H):
        row = list(input())
        grid.append(row)  # j'aime bien garder le nom "row" pour être clair

    # Préparation des matrices, un peu chiant à initialiser
    l = []
    r = []
    u = []
    d = []
    for _ in range(H):
        l.append([0]*W)
        r.append([0]*W)
        u.append([0]*W)
        d.append([0]*W)

    # On regarde vers la gauche (un classique)
    for i in range(H):
        cnt = 0
        for j in range(W):
            if grid[i][j] == '#':
                cnt = 0
            else:
                cnt += 1
            l[i][j] = cnt
    # On regarde à droite, style similaire mais inversé
    for i in range(H):
        c = 0
        # pas besoin de sorted ou truc fancy, on va à l'envers
        for j in range(W-1, -1, -1):
            if grid[i][j] == '#':
                c = 0
            else:
                c += 1
            r[i][j] = c

    # Pareil pour le haut, mais on boucle différemment
    for j in range(W):
        total = 0
        for i in range(H):
            if grid[i][j] == '#':
                total = 0
            else:
                total += 1
            u[i][j] = total

    # Et pour le bas (encore repompe, mais inversé)
    for j in range(W):
        blah = 0
        for i in range(H-1, -1, -1):
            if grid[i][j] == '#':
                blah = 0
            else:
                blah += 1
            d[i][j] = blah

    # Bon là c'est pas hyper optimisé, mais ça fait le taf
    answer = 0
    for i in range(H):
        for j in range(W):
            if grid[i][j] == '.':
                tmp = l[i][j] + r[i][j] + u[i][j] + d[i][j] - 3
                if tmp > answer:
                    answer = tmp
    print(answer)

resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24100935459136963
    2. ' This' → logprob: -2.86600923538208
    3. ' The' → logprob: -3.74100923538208
    4. ' argparse' → logprob: -3.99100923538208
    5. ' is' → logprob: -4.61600923538208
    6. 'def' → logprob: -4.61600923538208
    7. ' argv' → logprob: -4.86600923538208
    8. ' def' → logprob: -4.99100923538208
    9. 'argv' → logprob: -4.99100923538208
    10. 'This' → logprob: -4.99100923538208

Token 5: ''' (ID: 6)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5870289206504822
    2. 'O' → logprob: -1.462028980255127
    3. 'A' → logprob: -2.837028980255127
    4. 'o' → logprob: -3.337028980255127
    5. 'a' → logprob: -3.462028980255127
    6. 'u' → logprob: -3.587028980255127
    7. 'SON' → logprob: -3.962028980255127
    8. 'upyter' → logprob: -4.337028980255127
    9. 'U' → logprob: -5.712028980255127
    10. 'SO' → logprob: -5.712028980255127

Token 6: 'aug' (ID: 13610)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1421389877796173
    2. 'a' → logprob: -2.392138957977295
    3. ''' → logprob: -4.642138957977295
    4. ''aime' → logprob: -4.642138957977295
    5. ''ai' → logprob: -4.892138957977295
    6. '#' → logprob: -5.642138957977295
    7. ''''' → logprob: -6.267138957977295
    8. ''espère' → logprob: -6.517138957977295
    9. 'uste' → logprob: -6.642138957977295
    10. 'u' → logprob: -6.767138957977295

Token 7: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.19066189229488373
    2. 'oute' → logprob: -1.815661907196045
    3. '#' → logprob: -5.315661907196045
    4. 'uste' → logprob: -6.190661907196045
    5. 'ment' → logprob: -6.440661907196045
    6. 'mentation' → logprob: -7.565661907196045
    7. '\' → logprob: -7.940661907196045
    8. 'men' → logprob: -8.315661430358887
    9. '`' → logprob: -9.190661430358887
    10. '```' → logprob: -9.190661430358887

Token 8: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13862329721450806
    2. ' ' → logprob: -2.3886232376098633
    3. ' la' → logprob: -4.013623237609863
    4. ' le' → logprob: -5.638623237609863
    5. 'e' → logprob: -6.263623237609863
    6. ' l' → logprob: -6.513623237609863
    7. ' my' → logprob: -6.763623237609863
    8. '  ' → logprob: -6.888623237609863
    9. 'er' → logprob: -6.888623237609863
    10. ' _' → logprob: -7.138623237609863

Token 9: ' limite' (ID: 48939)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4091091454029083
    2. 'val' → logprob: -1.784109115600586
    3. 'version' → logprob: -3.034109115600586
    4. 'performance' → logprob: -3.534109115600586
    5. 'lim' → logprob: -3.909109115600586
    6. 'v' → logprob: -4.534109115600586
    7. ' ' → logprob: -4.909109115600586
    8. 'mé' → logprob: -5.034109115600586
    9. 'd' → logprob: -5.659109115600586
    10. 'variable' → logprob: -5.909109115600586

Token 10: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.765170693397522
    2. '_' → logprob: -1.890170693397522
    3. ' sys' → logprob: -2.0151705741882324
    4. 'import' → logprob: -2.7651705741882324
    5. 'd' → logprob: -2.8901705741882324
    6. '_sys' → logprob: -3.0151705741882324
    7. ' d' → logprob: -3.3901705741882324
    8. '=sys' → logprob: -3.7651705741882324
    9. ' de' → logprob: -5.015170574188232
    10. '(sys' → logprob: -5.390170574188232

Token 11: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6958228945732117
    2. 'rec' → logprob: -0.6958228945732117
    3. 'ré' → logprob: -6.820822715759277
    4. 'la' → logprob: -7.320822715759277
    5. ' réc' → logprob: -7.445822715759277
    6. 're' → logprob: -9.195822715759277
    7. 'import' → logprob: -9.570822715759277
    8. '```' → logprob: -10.070822715759277
    9. ' ' → logprob: -10.945822715759277
    10. 'l' → logprob: -11.195822715759277

Token 12: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.11685027182102203
    2. 'urs' → logprob: -2.2418503761291504
    3. 'ur' → logprob: -5.61685037612915
    4. 'urrence' → logprob: -8.616849899291992
    5. 'u' → logprob: -9.241849899291992
    6. 'ursive' → logprob: -10.491849899291992
    7. 'urse' → logprob: -10.866849899291992
    8. 'up' → logprob: -11.366849899291992
    9. 'usion' → logprob: -11.491849899291992
    10. 'usr' → logprob: -11.616849899291992

Token 13: ' au' (ID: 2791)
  Prédit: '_sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sys' → logprob: -0.5469486117362976
    2. 'sys' → logprob: -1.1719486713409424
    3. '_' → logprob: -2.2969486713409424
    4. ' sys' → logprob: -4.921948432922363
    5. '_s' → logprob: -6.671948432922363
    6. 'import' → logprob: -7.171948432922363
    7. '\' → logprob: -8.171948432922363
    8. '_import' → logprob: -8.171948432922363
    9. '_system' → logprob: -8.296948432922363
    10. '_stack' → logprob: -9.296948432922363

Token 14: ' cas' (ID: 2108)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.5531530380249023
    2. 'max' → logprob: -1.9281530380249023
    3. 'sys' → logprob: -2.0531530380249023
    4. 'cas' → logprob: -2.3031530380249023
    5. 'niveau' → logprob: -3.3031530380249023
    6. 'import' → logprob: -5.053153038024902
    7. '```' → logprob: -5.678153038024902
    8. ' maximum' → logprob: -6.303153038024902
    9. 'minimum' → logprob: -7.803153038024902
    10. 'del' → logprob: -8.053153038024902

Token 15: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8623262047767639
    2. ' où' → logprob: -1.2373261451721191
    3. 'où' → logprob: -1.6123261451721191
    4. ' de' → logprob: -3.112326145172119
    5. '```' → logprob: -4.237326145172119
    6. 'que' → logprob: -4.362326145172119
    7. 'de' → logprob: -5.487326145172119
    8. ' where' → logprob: -6.112326145172119
    9. 'd' → logprob: -6.112326145172119
    10. '  ' → logprob: -6.612326145172119

Token 16: ',' (ID: 11)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02825470082461834
    2. ' sys' → logprob: -3.903254747390747
    3. 'import' → logprob: -5.153254508972168
    4. '_sys' → logprob: -7.278254508972168
    5. '(sys' → logprob: -7.653254508972168
    6. '=sys' → logprob: -8.403254508972168
    7. '.sys' → logprob: -8.778254508972168
    8. '```' → logprob: -9.028254508972168
    9. ':' → logprob: -10.153254508972168
    10. '.' → logprob: -10.153254508972168

Token 17: ' même' (ID: 9679)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20243977010250092
    2. ' sys' → logprob: -1.702439785003662
    3. 'import' → logprob: -6.952439785003662
    4. '=sys' → logprob: -10.202439308166504
    5. '_sys' → logprob: -11.702439308166504
    6. ' import' → logprob: -11.702439308166504
    7. '	sys' → logprob: -11.827439308166504
    8. '(sys' → logprob: -12.077439308166504
    9. '.sys' → logprob: -13.827439308166504
    10. '```' → logprob: -14.077439308166504

Token 18: ' si' (ID: 1784)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.852933406829834
    2. 'sys' → logprob: -1.352933406829834
    3. '```' → logprob: -1.602933406829834
    4. ' sys' → logprob: -2.852933406829834
    5. ' ' → logprob: -3.852933406829834
    6. '#' → logprob: -4.727933406829834
    7. '`' → logprob: -5.352933406829834
    8. '  ' → logprob: -5.477933406829834
    9. '(sys' → logprob: -6.227933406829834
    10. '"""' → logprob: -6.227933406829834

Token 19: ' je' (ID: 1264)
  Prédit: 'je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'je' → logprob: -0.7835909724235535
    2. 'cela' → logprob: -1.2835910320281982
    3. 'sys' → logprob: -2.0335910320281982
    4. 'la' → logprob: -2.9085910320281982
    5. ' sys' → logprob: -4.283590793609619
    6. 'ce' → logprob: -4.283590793609619
    7. 'le' → logprob: -4.533590793609619
    8. 'ça' → logprob: -4.783590793609619
    9. 'python' → logprob: -5.033590793609619
    10. ' je' → logprob: -5.283590793609619

Token 20: ' sais' (ID: 30010)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1338177919387817
    2. 'veux' → logprob: -2.383817672729492
    3. ' n' → logprob: -2.508817672729492
    4. 'continue' → logprob: -2.633817672729492
    5. '```' → logprob: -2.633817672729492
    6. 'ne' → logprob: -2.758817672729492
    7. 's' → logprob: -3.008817672729492
    8. 'n' → logprob: -3.258817672729492
    9. 'vais' → logprob: -3.508817672729492
    10. ' pense' → logprob: -3.633817672729492

Token 21: ' pas' (ID: 2173)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.11765483766794205
    2. 'que' → logprob: -2.242654800415039
    3. '```' → logprob: -5.867654800415039
    4. 'import' → logprob: -6.867654800415039
    5. 'qu' → logprob: -8.742654800415039
    6. ' sys' → logprob: -8.992654800415039
    7. ' qu' → logprob: -9.367654800415039
    8. ' import' → logprob: -9.367654800415039
    9. 'cela' → logprob: -9.867654800415039
    10. ' ' → logprob: -9.992654800415039

Token 22: ' si' (ID: 1784)
  Prédit: ' pourquoi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pourquoi' → logprob: -0.9423481822013855
    2. '```' → logprob: -1.9423482418060303
    3. ' si' → logprob: -2.3173482418060303
    4. ' ' → logprob: -2.3173482418060303
    5. ' if' → logprob: -2.9423482418060303
    6. 'si' → logprob: -3.1923482418060303
    7. 'if' → logprob: -3.4423482418060303
    8. 'import' → logprob: -3.9423482418060303
    9. '  ' → logprob: -4.067348003387451
    10. ' trop' → logprob: -4.442348003387451

Token 23: ' c' (ID: 274)
  Prédit: 'cela'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cela' → logprob: -1.0255094766616821
    2. 'ça' → logprob: -1.4005094766616821
    3. ' ça' → logprob: -2.1505093574523926
    4. 'je' → logprob: -2.6505093574523926
    5. 'c' → logprob: -2.7755093574523926
    6. 'ce' → logprob: -3.2755093574523926
    7. ' ce' → logprob: -3.4005093574523926
    8. ' sys' → logprob: -4.150509357452393
    9. ' c' → logprob: -4.275509357452393
    10. 'le' → logprob: -4.400509357452393

Token 24: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9658711552619934
    2. ''est' → logprob: -1.3408710956573486
    3. ''a' → logprob: -2.2158710956573486
    4. 'a' → logprob: -2.2158710956573486
    5. 'e' → logprob: -3.0908710956573486
    6. ' '' → logprob: -3.9658710956573486
    7. ''''' → logprob: -4.590871334075928
    8. '```' → logprob: -4.590871334075928
    9. ''#' → logprob: -4.715871334075928
    10. 'ela' → logprob: -4.965871334075928

Token 25: ' vraiment' (ID: 26637)
  Prédit: ' utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utile' → logprob: -0.5384722948074341
    2. 'utile' → logprob: -1.288472294807434
    3. ' vraiment' → logprob: -2.9134721755981445
    4. 'né' → logprob: -3.4134721755981445
    5. ' necess' → logprob: -4.4134721755981445
    6. ' suff' → logprob: -4.6634721755981445
    7. ' très' → logprob: -5.2884721755981445
    8. ' nécessaire' → logprob: -5.5384721755981445
    9. 'necess' → logprob: -5.7884721755981445
    10. 'v' → logprob: -5.7884721755981445

Token 26: ' utile' (ID: 68237)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.7492089867591858
    2. ' utile' → logprob: -1.249208927154541
    3. 'utile' → logprob: -1.624208927154541
    4. 'necess' → logprob: -3.874208927154541
    5. ' nécessaire' → logprob: -4.499208927154541
    6. ' necess' → logprob: -5.249208927154541
    7. ' ' → logprob: -6.124208927154541
    8. 'util' → logprob: -6.499208927154541
    9. 'ut' → logprob: -7.624208927154541
    10. ' né' → logprob: -7.749208927154541

Token 27: ' ici' (ID: 27994)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8345608711242676
    2. 'sys' → logprob: -1.7095608711242676
    3. '' → logprob: -2.2095608711242676
    4. '\' → logprob: -2.3345608711242676
    5. 'import' → logprob: -2.7095608711242676
    6. '\n' → logprob: -2.7095608711242676
    7. '.' → logprob: -3.7095608711242676
    8. '```' → logprob: -5.084560871124268
    9. '

' → logprob: -5.334560871124268
    10. '`' → logprob: -5.834560871124268

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3645447790622711
    2. '' → logprob: -1.9895447492599487
    3. 'sys' → logprob: -2.8645448684692383
    4. 'import' → logprob: -3.1145448684692383
    5. '\n' → logprob: -3.4895448684692383
    6. '\' → logprob: -4.364544868469238
    7. '
' → logprob: -4.489544868469238
    8. '.' → logprob: -5.864544868469238
    9. '

' → logprob: -5.989544868469238
    10. ' sys' → logprob: -6.239544868469238

Token 29: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.41019323468208313
    2. 'import' → logprob: -1.9101932048797607
    3. '\n' → logprob: -1.9101932048797607
    4. '\' → logprob: -3.9101932048797607
    5. ' sys' → logprob: -5.03519344329834
    6. '.' → logprob: -5.66019344329834
    7. '' → logprob: -5.78519344329834
    8. '```' → logprob: -6.03519344329834
    9. '
' → logprob: -6.41019344329834
    10. '`' → logprob: -7.41019344329834

Token 30: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021550888195633888
    2. '.set' → logprob: -4.02155065536499
    3. '.setdefault' → logprob: -6.14655065536499
    4. '.exit' → logprob: -7.77155065536499
    5. ' .' → logprob: -8.271551132202148
    6. '.argv' → logprob: -8.896551132202148
    7. '.stdin' → logprob: -9.271551132202148
    8. '.sys' → logprob: -9.771551132202148
    9. '.stdout' → logprob: -9.896551132202148
    10. '.import' → logprob: -10.646551132202148

Token 31: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03656341880559921
    2. '_rec' → logprob: -3.4115633964538574
    3. 'limit' → logprob: -6.911563396453857
    4. '_' → logprob: -7.161563396453857
    5. '_limit' → logprob: -7.536563396453857
    6. ' recursion' → logprob: -9.536563873291016
    7. '_recursive' → logprob: -9.911563873291016
    8. 'e' → logprob: -10.411563873291016
    9. '_execution' → logprob: -10.411563873291016
    10. 'ref' → logprob: -10.661563873291016

Token 32: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0001640876434976235
    2. 'urs' → logprob: -9.375164031982422
    3. 'ur' → logprob: -9.500164031982422
    4. 'ursive' → logprob: -13.500164031982422
    5. 'limit' → logprob: -13.750164031982422
    6. 'url' → logprob: -14.000164031982422
    7. 'ursor' → logprob: -14.500164031982422
    8. 'urse' → logprob: -15.750164031982422
    9. 'urf' → logprob: -15.875164031982422
    10. 'usion' → logprob: -16.250164031982422

Token 33: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5763583779335022
    2. '_limit' → logprob: -0.8263583779335022
    3. 'lim' → logprob: -8.576358795166016
    4. '_depth' → logprob: -8.701358795166016
    5. '_lim' → logprob: -11.201358795166016
    6. 'al' → logprob: -11.951358795166016
    7. '_' → logprob: -11.951358795166016
    8. 'depth' → logprob: -12.201358795166016
    9. ' limit' → logprob: -12.201358795166016
    10. '_LIMIT' → logprob: -12.326358795166016

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '(

' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.125001907348633
    4. '(
' → logprob: -15.500001907348633
    5. '((' → logprob: -15.750001907348633
    6. '()' → logprob: -15.875001907348633
    7. '(`' → logprob: -16.875001907348633
    8. '("' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. '("("' → logprob: -18.000001907348633

Token 35: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1271369308233261
    2. '10' → logprob: -2.1271369457244873
    3. '500' → logprob: -9.127137184143066
    4. '300' → logprob: -9.752137184143066
    5. ' ' → logprob: -10.502137184143066
    6. '200' → logprob: -11.377137184143066
    7. '150' → logprob: -13.127137184143066
    8. '250' → logprob: -14.877137184143066
    9. '400' → logprob: -15.127137184143066
    10. '999' → logprob: -15.502137184143066

Token 36: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.014285147190093994
    2. '000' → logprob: -4.264285087585449
    3. '0' → logprob: -9.01428508758545
    4. ')' → logprob: -18.639286041259766
    5. '005' → logprob: -19.139286041259766
    6. '007' → logprob: -19.264286041259766
    7. '002' → logprob: -19.264286041259766
    8. '003' → logprob: -19.389286041259766
    9. '001' → logprob: -19.639286041259766
    10. '050' → logprob: -19.639286041259766

Token 37: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.750004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '))' → logprob: -15.000004768371582
    5. ')
' → logprob: -16.875003814697266
    6. '1' → logprob: -17.750003814697266
    7. '```' → logprob: -17.750003814697266
    8. ')

' → logprob: -18.375003814697266
    9. '3' → logprob: -18.750003814697266
    10. '')' → logprob: -18.875003814697266

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17321021854877472
    2. '100' → logprob: -2.1732101440429688
    3. '500' → logprob: -3.4232101440429688
    4. '50' → logprob: -5.548210144042969
    5. '10' → logprob: -5.923210144042969
    6. '200' → logprob: -5.923210144042969
    7. '1' → logprob: -6.048210144042969
    8. ')' → logprob: -8.173210144042969
    9. '300' → logprob: -8.798210144042969
    10. '  ' → logprob: -8.798210144042969

Token 39: '9' (ID: 24)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.37202829122543335
    2. '500' → logprob: -1.8720283508300781
    3. ' ' → logprob: -2.747028350830078
    4. '10' → logprob: -3.497028350830078
    5. '0' → logprob: -3.872028350830078
    6. '1' → logprob: -4.247028350830078
    7. '50' → logprob: -4.372028350830078
    8. '200' → logprob: -5.122028350830078
    9. ' sys' → logprob: -5.872028350830078
    10. '300' → logprob: -6.872028350830078

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000977671123109758
    2. '0' → logprob: -7.125977516174316
    3. '1' → logprob: -9.625977516174316
    4. '9' → logprob: -10.500977516174316
    5. ' )' → logprob: -10.750977516174316
    6. '6' → logprob: -10.750977516174316
    7. '3' → logprob: -11.375977516174316
    8. '2' → logprob: -12.000977516174316
    9. '5' → logprob: -12.250977516174316
    10. '))' → logprob: -12.375977516174316

Token 41: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06284136325120926
    2. '

' → logprob: -3.1878414154052734
    3. '\n' → logprob: -4.937841415405273
    4. '```' → logprob: -5.312841415405273
    5. '
' → logprob: -5.687841415405273
    6. '' → logprob: -6.562841415405273
    7. '\' → logprob: -6.687841415405273
    8. '#' → logprob: -8.062841415405273
    9. ' 
' → logprob: -8.812841415405273
    10. '0' → logprob: -8.937841415405273

Token 42: ' input' (ID: 3422)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6305040121078491
    2. ' recursive' → logprob: -2.0055041313171387
    3. ' ' → logprob: -2.2555041313171387
    4. ' my' → logprob: -2.7555041313171387
    5. ' fibonacci' → logprob: -3.1305041313171387
    6. ' factor' → logprob: -3.6305041313171387
    7. ' recurse' → logprob: -4.130504131317139
    8. ' space' → logprob: -4.255504131317139
    9. ' dfs' → logprob: -4.880504131317139
    10. ' recursion' → logprob: -5.005504131317139

Token 43: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06010279059410095
    2. '()' → logprob: -3.560102701187134
    3. '():' → logprob: -4.310102939605713
    4. '_' → logprob: -4.810102939605713
    5. '("")' → logprob: -6.310102939605713
    6. '("("' → logprob: -6.435102939605713
    7. '(prompt' → logprob: -7.310102939605713
    8. '_str' → logprob: -7.560102939605713
    9. '_parent' → logprob: -7.935102939605713
    10. '(`' → logprob: -7.935102939605713

Token 44: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012372025288641453
    2. ' ' → logprob: -5.512372016906738
    3. '().' → logprob: -6.012372016906738
    4. ' =' → logprob: -6.762372016906738
    5. '   ' → logprob: -7.137372016906738
    6. '_' → logprob: -7.512372016906738
    7. '=' → logprob: -7.637372016906738
    8. 'return' → logprob: -7.762372016906738
    9. ' ()' → logprob: -8.137372016906738
    10. '():' → logprob: -8.387372016906738

Token 45: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016412856057286263
    2. ' return' → logprob: -4.266412734985352
    3. 'sys' → logprob: -6.141412734985352
    4. ' sys' → logprob: -9.516412734985352
    5. '   ' → logprob: -11.641412734985352
    6. 'print' → logprob: -13.016412734985352
    7. '__' → logprob: -13.016412734985352
    8. 'input' → logprob: -13.266412734985352
    9. ' ' → logprob: -13.641412734985352
    10. 'pass' → logprob: -13.641412734985352

Token 46: ' Je' (ID: 4678)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.021600941196084023
    2. 'return' → logprob: -3.8966009616851807
    3. ' ' → logprob: -7.521600723266602
    4. '   ' → logprob: -8.521600723266602
    5. ' pass' → logprob: -9.646600723266602
    6. '  ' → logprob: -9.646600723266602
    7. 'pass' → logprob: -10.521600723266602
    8. ' """' → logprob: -10.896600723266602
    9. '    ' → logprob: -11.021600723266602
    10. '"""' → logprob: -11.021600723266602

Token 47: ' trouve' (ID: 30913)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43960511684417725
    2. ' ' → logprob: -1.5646051168441772
    3. '()' → logprob: -2.689605236053467
    4. 'return' → logprob: -3.314605236053467
    5. 's' → logprob: -4.189605236053467
    6. ' =' → logprob: -5.689605236053467
    7. ' s' → logprob: -6.439605236053467
    8. ' user' → logprob: -6.439605236053467
    9. 'import' → logprob: -6.627105236053467
    10. ' suis' → logprob: -6.627105236053467

Token 48: ' readline' (ID: 179561)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5114831924438477
    2. ' ' → logprob: -2.0114831924438477
    3. ' la' → logprob: -3.0114831924438477
    4. ' =' → logprob: -3.1364831924438477
    5. ' une' → logprob: -3.6364831924438477
    6. ' sys' → logprob: -4.011483192443848
    7. '  ' → logprob: -4.261483192443848
    8. ' input' → logprob: -4.386483192443848
    9. ' le' → logprob: -4.761483192443848
    10. ' return' → logprob: -4.761483192443848

Token 49: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.388986736536026
    2. '().' → logprob: -1.1389867067337036
    3. '.readline' → logprob: -6.388986587524414
    4. '.' → logprob: -8.388986587524414
    5. '().__' → logprob: -10.013986587524414
    6. '<|end|>' → logprob: -10.763986587524414
    7. '()>' → logprob: -11.013986587524414
    8. ' ()' → logprob: -11.263986587524414
    9. '()
' → logprob: -11.513986587524414
    10. '(' → logprob: -11.763986587524414

Token 50: ' peu' (ID: 9235)
  Prédit: ' peu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peu' → logprob: -0.04015108942985535
    2. 'e' → logprob: -3.4151511192321777
    3. 'pe' → logprob: -5.165151119232178
    4. '_pe' → logprob: -8.79015064239502
    5. ' petit' → logprob: -9.29015064239502
    6. 'u' → logprob: -9.41515064239502
    7. ' Peu' → logprob: -9.79015064239502
    8. ' little' → logprob: -9.79015064239502
    9. ' peut' → logprob: -9.91515064239502
    10. ' e' → logprob: -10.04015064239502

Token 51: ' plus' (ID: 2932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12041186541318893
    2. ' ' → logprob: -3.6204118728637695
    3. ' fast' → logprob: -3.8704118728637695
    4. '().' → logprob: -5.2454118728637695
    5. ' better' → logprob: -5.3704118728637695
    6. ' slow' → logprob: -5.4954118728637695
    7. 'l' → logprob: -5.6829118728637695
    8. '    ' → logprob: -5.7454118728637695
    9. '   ' → logprob: -5.8079118728637695
    10. ' annoying' → logprob: -5.9954118728637695

Token 52: ' rapide' (ID: 44887)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03843962028622627
    2. '_' → logprob: -4.413439750671387
    3. ' ' → logprob: -5.913439750671387
    4. '_safe' → logprob: -6.038439750671387
    5. 'optim' → logprob: -6.163439750671387
    6. 'safe' → logprob: -6.163439750671387
    7. ' performant' → logprob: -6.413439750671387
    8. ' fast' → logprob: -6.663439750671387
    9. 'rap' → logprob: -7.038439750671387
    10. ' safe' → logprob: -7.163439750671387

Token 53: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005636520218104124
    2. '().' → logprob: -5.630636692047119
    3. '.readline' → logprob: -7.255636692047119
    4. '()
' → logprob: -8.005636215209961
    5. ' ' → logprob: -8.505636215209961
    6. ' =' → logprob: -8.630636215209961
    7. '()\' → logprob: -9.130636215209961
    8. '   ' → logprob: -9.255636215209961
    9. '.' → logprob: -9.880636215209961
    10. '()

' → logprob: -9.880636215209961

Token 54: ' mais' (ID: 2899)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16737903654575348
    2. ' ' → logprob: -2.167379140853882
    3. 'return' → logprob: -4.042378902435303
    4. '   ' → logprob: -4.167378902435303
    5. '    ' → logprob: -5.167378902435303
    6. '  ' → logprob: -8.917379379272461
    7. '()' → logprob: -9.042379379272461
    8. ' sys' → logprob: -9.042379379272461
    9. '	return' → logprob: -9.292379379272461
    10. 'import' → logprob: -9.292379379272461

Token 55: ' faut' (ID: 17821)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6075731515884399
    2. ' c' → logprob: -1.35757315158844
    3. 'return' → logprob: -2.7325730323791504
    4. ' je' → logprob: -3.6075730323791504
    5. ' sys' → logprob: -3.6075730323791504
    6. ' ça' → logprob: -3.8575730323791504
    7. ' ' → logprob: -3.9825730323791504
    8. 'c' → logprob: -4.98257303237915
    9. ' il' → logprob: -5.48257303237915
    10. '   ' → logprob: -5.73257303237915

Token 56: ' faire' (ID: 8119)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.97845458984375
    2. ' pas' → logprob: -2.10345458984375
    3. '()' → logprob: -2.22845458984375
    4. ' penser' → logprob: -2.60345458984375
    5. ' bien' → logprob: -2.72845458984375
    6. 'import' → logprob: -2.97845458984375
    7. 'pas' → logprob: -2.97845458984375
    8. ' juste' → logprob: -2.97845458984375
    9. ' que' → logprob: -3.10345458984375
    10. 'bien' → logprob: -3.35345458984375

Token 57: ' attention' (ID: 8684)
  Prédit: 'attention'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attention' → logprob: -0.5766447186470032
    2. ' attention' → logprob: -0.8266447186470032
    3. ' ' → logprob: -8.326644897460938
    4. 'Attention' → logprob: -9.451644897460938
    5. 'att' → logprob: -9.451644897460938
    6. '_attention' → logprob: -9.576644897460938
    7. 'atten' → logprob: -9.701644897460938
    8. 'import' → logprob: -10.451644897460938
    9. ' attenzione' → logprob: -10.576644897460938
    10. ' Attention' → logprob: -10.826644897460938

Token 58: ' aux' (ID: 5850)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011139309965074062
    2. '   ' → logprob: -4.761139392852783
    3. ' ' → logprob: -7.261139392852783
    4. ' =' → logprob: -8.136138916015625
    5. '    ' → logprob: -8.511138916015625
    6. '().' → logprob: -8.511138916015625
    7. '  ' → logprob: -8.636138916015625
    8. '()\' → logprob: -8.636138916015625
    9. ' ()' → logprob: -8.761138916015625
    10. '(' → logprob: -9.761138916015625

Token 59: ' espaces' (ID: 98361)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4441600739955902
    2. ' espaces' → logprob: -1.3191601037979126
    3. ' \' → logprob: -3.694159984588623
    4. '\' → logprob: -3.694159984588623
    5. ' trailing' → logprob: -4.444159984588623
    6. ' ' → logprob: -4.944159984588623
    7. 'rstrip' → logprob: -5.569159984588623
    8. '\s' → logprob: -5.694159984588623
    9. ' caractères' → logprob: -5.694159984588623
    10. ' '\' → logprob: -6.444159984588623

Token 60: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35201701521873474
    2. '().' → logprob: -1.2270170450210571
    3. '   ' → logprob: -6.227016925811768
    4. ')' → logprob: -8.102017402648926
    5. '.' → logprob: -8.352017402648926
    6. '()\' → logprob: -8.477017402648926
    7. '    ' → logprob: -9.102017402648926
    8. '()>' → logprob: -9.602017402648926
    9. '.readline' → logprob: -9.727017402648926
    10. '().__' → logprob: -9.852017402648926

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16325445473194122
    2. '()' → logprob: -2.788254499435425
    3. ' ' → logprob: -3.413254499435425
    4. '    ' → logprob: -4.163254261016846
    5. 'return' → logprob: -4.163254261016846
    6. ' return' → logprob: -4.163254261016846
    7. '  ' → logprob: -5.538254261016846
    8. '(' → logprob: -6.288254261016846
    9. 'import' → logprob: -7.288254261016846
    10. '	return' → logprob: -7.788254261016846

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07975917309522629
    2. ' return' → logprob: -2.579759120941162
    3. 'import' → logprob: -7.454759120941162
    4. '   ' → logprob: -8.70475959777832
    5. ' ' → logprob: -9.32975959777832
    6. '	return' → logprob: -10.82975959777832
    7. ' import' → logprob: -12.20475959777832
    8. ' ' → logprob: -13.45475959777832
    9. 'ret' → logprob: -13.70475959777832
    10. '  ' → logprob: -13.70475959777832

Token 63: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1602720469236374
    2. 'sys' → logprob: -1.9102720022201538
    3. 'input' → logprob: -10.660271644592285
    4. ' input' → logprob: -11.160271644592285
    5. '	sys' → logprob: -12.035271644592285
    6. '=sys' → logprob: -13.035271644592285
    7. ' ' → logprob: -13.910271644592285
    8. '(sys' → logprob: -14.035271644592285
    9. ' ' → logprob: -16.1602725982666
    10. ' __' → logprob: -17.2852725982666

Token 64: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.6550729419104755e-05
    2. '.stdout' → logprob: -10.250036239624023
    3. '.' → logprob: -14.125036239624023
    4. 'stdin' → logprob: -15.125036239624023
    5. '.readline' → logprob: -16.750036239624023
    6. '.stderr' → logprob: -16.750036239624023
    7. '.std' → logprob: -17.000036239624023
    8. '.argv' → logprob: -17.875036239624023
    9. ' stdin' → logprob: -18.875036239624023
    10. '._' → logprob: -20.375036239624023

Token 65: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.62502670288086
    3. '.buffer' → logprob: -13.00002670288086
    4. '.readlines' → logprob: -15.50002670288086
    5. '.read' → logprob: -15.62502670288086
    6. ' readline' → logprob: -17.12502670288086
    7. ' .' → logprob: -17.25002670288086
    8. 'buffer' → logprob: -17.62502670288086
    9. '.stdin' → logprob: -20.12502670288086
    10. 'read' → logprob: -20.12502670288086

Token 66: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2519477307796478
    2. '().' → logprob: -1.5019477605819702
    3. '()
' → logprob: -11.876947402954102
    4. '()\' → logprob: -12.626947402954102
    5. ' ()' → logprob: -12.876947402954102
    6. '()

' → logprob: -13.876947402954102
    7. ' ().' → logprob: -14.126947402954102
    8. '(' → logprob: -14.126947402954102
    9. '()<' → logprob: -14.626947402954102
    10. '()`' → logprob: -14.876947402954102

Token 67: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20141568779945374
    2. 'rstrip' → logprob: -1.7014156579971313
    3. ' strip' → logprob: -13.076416015625
    4. 'r' → logprob: -15.826416015625
    5. 'rst' → logprob: -16.451416015625
    6. '.rstrip' → logprob: -17.576416015625
    7. '(strip' → logprob: -17.701416015625
    8. '_strip' → logprob: -18.076416015625
    9. 'str' → logprob: -19.076416015625
    10. '-strip' → logprob: -19.701416015625

Token 68: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.6696149840718135e-05
    2. '(' → logprob: -10.250056266784668
    3. '()
' → logprob: -11.125056266784668
    4. '()

' → logprob: -13.000056266784668
    5. '()`' → logprob: -13.875056266784668
    6. '()\' → logprob: -13.875056266784668
    7. '().' → logprob: -14.125056266784668
    8. ' ()' → logprob: -15.125056266784668
    9. '()]' → logprob: -15.250056266784668
    10. '()<' → logprob: -15.875056266784668

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7009550929069519
    2. '
' → logprob: -0.8259550929069519
    3. '

' → logprob: -3.4509551525115967
    4. '#' → logprob: -3.8259551525115967
    5. '\n' → logprob: -5.200954914093018
    6. '\' → logprob: -6.200954914093018
    7. '<|end|>' → logprob: -7.075954914093018
    8. '<|end|>' → logprob: -7.575954914093018
    9. '(' → logprob: -7.700954914093018
    10. 'class' → logprob: -7.825954914093018

Token 70: ' resolve' (ID: 14062)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14648014307022095
    2. ' solve' → logprob: -2.771480083465576
    3. ' factorial' → logprob: -3.271480083465576
    4. ' solution' → logprob: -5.021480083465576
    5. ' dfs' → logprob: -5.021480083465576
    6. ' calculate' → logprob: -5.146480083465576
    7. '_' → logprob: -5.896480083465576
    8. ' factor' → logprob: -6.021480083465576
    9. ' process' → logprob: -6.396480083465576
    10. ' parse' → logprob: -6.771480083465576

Token 71: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011236425780225545
    2. '(' → logprob: -10.125112533569336
    3. ' ():' → logprob: -10.125112533569336
    4. '()' → logprob: -10.500112533569336
    5. '():
' → logprob: -12.500112533569336
    6. '()(' → logprob: -15.750112533569336
    7. '(line' → logprob: -16.500112533569336
    8. ' ()' → logprob: -16.750112533569336
    9. '```' → logprob: -17.000112533569336
    10. '(prompt' → logprob: -17.125112533569336

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02960549108684063
    2. '<|end|>' → logprob: -4.404605388641357
    3. '    ' → logprob: -4.654605388641357
    4. ' ' → logprob: -5.529605388641357
    5. '<|end|>' → logprob: -7.654605388641357
    6. '    
' → logprob: -7.654605388641357
    7. 'n' → logprob: -7.779605388641357
    8. ' pass' → logprob: -7.904605388641357
    9. '  ' → logprob: -8.029605865478516
    10. ')' → logprob: -8.529605865478516

Token 73: ' H' (ID: 487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7641685605049133
    2. ' n' → logprob: -0.8891685605049133
    3. '   ' → logprob: -2.1391685009002686
    4. ' pass' → logprob: -5.514168739318848
    5. ' ' → logprob: -7.889168739318848
    6. 'pass' → logprob: -8.389168739318848
    7. 't' → logprob: -8.889168739318848
    8. '	n' → logprob: -8.889168739318848
    9. ' t' → logprob: -9.264168739318848
    10. ' N' → logprob: -9.389168739318848

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031717719975858927
    2. ' =' → logprob: -6.128171920776367
    3. ' ,' → logprob: -7.128171920776367
    4. '=' → logprob: -9.128171920776367
    5. ',N' → logprob: -10.878171920776367
    6. ',M' → logprob: -11.128171920776367
    7. ',K' → logprob: -11.253171920776367
    8. '=int' → logprob: -11.878171920776367
    9. ',W' → logprob: -12.128171920776367
    10. ',S' → logprob: -12.628171920776367

Token 75: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6361023783683777
    2. ' W' → logprob: -0.7611023783683777
    3. 'M' → logprob: -7.261102199554443
    4. ' ' → logprob: -7.511102199554443
    5. ' M' → logprob: -7.761102199554443
    6. 'N' → logprob: -7.761102199554443
    7. 'T' → logprob: -8.011102676391602
    8. 'D' → logprob: -8.886102676391602
    9. 'S' → logprob: -9.136102676391602
    10. ' T' → logprob: -9.261102676391602

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759434103965759
    2. ' =' → logprob: -0.8259434103965759
    3. ',' → logprob: -14.075942993164062
    4. ')' → logprob: -14.200942993164062
    5. '=int' → logprob: -14.575942993164062
    6. ' ' → logprob: -14.700942993164062
    7. '   ' → logprob: -14.950942993164062
    8. '=input' → logprob: -15.200942993164062
    9. '<|end|>' → logprob: -15.200942993164062
    10. ')=' → logprob: -15.950942993164062

Token 77: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.024331578984856606
    2. 'map' → logprob: -3.774331569671631
    3. ' input' → logprob: -7.024331569671631
    4. 'input' → logprob: -8.899332046508789
    5. ' ' → logprob: -10.149332046508789
    6. ' list' → logprob: -11.649332046508789
    7. '   ' → logprob: -13.024332046508789
    8. ' [' → logprob: -13.274332046508789
    9. '	map' → logprob: -13.399332046508789
    10. '[' → logprob: -13.649332046508789

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00922483392059803
    2. '(' → logprob: -5.009224891662598
    3. '(input' → logprob: -6.384224891662598
    4. '(str' → logprob: -7.134224891662598
    5. '<int' → logprob: -12.259224891662598
    6. 'int' → logprob: -12.384224891662598
    7. '[int' → logprob: -12.759224891662598
    8. '(
' → logprob: -13.259224891662598
    9. '(lambda' → logprob: -13.259224891662598
    10. ' (' → logprob: -14.134224891662598

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3873038589954376
    2. ',input' → logprob: -1.1373038291931152
    3. ',int' → logprob: -8.887304306030273
    4. ' ,' → logprob: -8.887304306030273
    5. '(input' → logprob: -9.512304306030273
    6. 'input' → logprob: -9.637304306030273
    7. '   ' → logprob: -12.262304306030273
    8. ' input' → logprob: -12.762304306030273
    9. '```' → logprob: -13.137304306030273
    10. '(' → logprob: -13.137304306030273

Token 80: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38687410950660706
    2. 'input' → logprob: -1.1368740797042847
    3. '(input' → logprob: -14.011874198913574
    4. '	input' → logprob: -14.511874198913574
    5. ',input' → logprob: -14.886874198913574
    6. ')' → logprob: -14.886874198913574
    7. '=input' → logprob: -14.886874198913574
    8. ' ' → logprob: -15.386874198913574
    9. '<input' → logprob: -15.886874198913574
    10. ' )' → logprob: -16.386873245239258

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.273621405242011e-05
    2. '()' → logprob: -10.375032424926758
    3. '())' → logprob: -14.000032424926758
    4. ')' → logprob: -14.625032424926758
    5. ' ().' → logprob: -16.875032424926758
    6. '(' → logprob: -17.625032424926758
    7. '().'' → logprob: -17.875032424926758
    8. '());' → logprob: -19.125032424926758
    9. '().__' → logprob: -19.375032424926758
    10. 'split' → logprob: -19.500032424926758

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001005630983854644
    2. 'strip' → logprob: -9.875100135803223
    3. ')' → logprob: -10.125100135803223
    4. 'rstrip' → logprob: -12.250100135803223
    5. '(split' → logprob: -13.750100135803223
    6. 's' → logprob: -13.750100135803223
    7. ' split' → logprob: -14.375100135803223
    8. '())' → logprob: -14.875100135803223
    9. '()' → logprob: -15.125100135803223
    10. 'plit' → logprob: -15.250100135803223

Token 83: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4050149619579315
    2. ')' → logprob: -1.155014991760254
    3. '()' → logprob: -4.030014991760254
    4. '(' → logprob: -9.155014991760254
    5. '))' → logprob: -9.905014991760254
    6. '()))' → logprob: -11.155014991760254
    7. '())
' → logprob: -11.405014991760254
    8. ')`' → logprob: -11.655014991760254
    9. ' ())' → logprob: -13.405014991760254
    10. ' )' → logprob: -13.405014991760254

Token 84: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05090814828872681
    2. '   ' → logprob: -3.675908088684082
    3. ' ' → logprob: -5.050908088684082
    4. ')' → logprob: -5.425908088684082
    5. ',' → logprob: -5.675908088684082
    6. '#' → logprob: -5.675908088684082
    7. '<|end|>' → logprob: -6.300908088684082
    8. ':
' → logprob: -7.050908088684082
    9. ' 
' → logprob: -8.050908088684082
    10. ' :' → logprob: -8.050908088684082

Token 85: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.2856053113937378
    2. ' grid' → logprob: -1.5356053113937378
    3. 'a' → logprob: -2.4106054306030273
    4. 'g' → logprob: -2.7856054306030273
    5. ' ' → logprob: -2.7856054306030273
    6. 'A' → logprob: -2.7856054306030273
    7. 'matrix' → logprob: -3.5356054306030273
    8. '   ' → logprob: -3.6606054306030273
    9. 'f' → logprob: -3.7856054306030273
    10. ' matrix' → logprob: -4.160605430603027

Token 86: ' On' (ID: 2160)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.46261605620384216
    2. 'grid' → logprob: -1.5876160860061646
    3. ' ' → logprob: -3.337615966796875
    4. 'dp' → logprob: -4.212615966796875
    5. '#' → logprob: -4.462615966796875
    6. '_' → logprob: -4.712615966796875
    7. 'a' → logprob: -4.962615966796875
    8. ' matrix' → logprob: -4.962615966796875
    9. 's' → logprob: -4.962615966796875
    10. '   ' → logprob: -5.087615966796875

Token 87: ' prépare' (ID: 150142)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pense' → logprob: -1.6795434951782227
    2. '_' → logprob: -2.0545434951782227
    3. 's' → logprob: -2.0545434951782227
    4. ' suppose' → logprob: -2.8045434951782227
    5. ' peux' → logprob: -3.1795434951782227
    6. ' crée' → logprob: -3.3045434951782227
    7. ' souhaite' → logprob: -3.9295434951782227
    8. 'for' → logprob: -3.9295434951782227
    9. 'def' → logprob: -4.054543495178223
    10. 'gr' → logprob: -4.304543495178223

Token 88: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2622027397155762
    2. ' une' → logprob: -1.6372027397155762
    3. ' un' → logprob: -1.8872027397155762
    4. ' le' → logprob: -2.262202739715576
    5. 'l' → logprob: -3.137202739715576
    6. 'le' → logprob: -3.512202739715576
    7. ' ' → logprob: -3.637202739715576
    8. '(' → logprob: -3.762202739715576
    9. ' l' → logprob: -3.887202739715576
    10. 'un' → logprob: -4.012202739715576

Token 89: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.21980656683444977
    2. ' grille' → logprob: -2.469806671142578
    3. 'mat' → logprob: -3.219806671142578
    4. ' matr' → logprob: -3.844806671142578
    5. 'liste' → logprob: -3.969806671142578
    6. ' liste' → logprob: -5.094806671142578
    7. ' grid' → logprob: -5.469806671142578
    8. 'grid' → logprob: -5.469806671142578
    9. 'table' → logprob: -5.969806671142578
    10. 'matrix' → logprob: -6.094806671142578

Token 90: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5768499970436096
    2. 'grid' → logprob: -1.5768499374389648
    3. 'gr' → logprob: -3.201849937438965
    4. '<|end|>' → logprob: -3.201849937438965
    5. ' grid' → logprob: -3.326849937438965
    6. '_grid' → logprob: -4.576849937438965
    7. '   ' → logprob: -4.701849937438965
    8. '_' → logprob: -4.826849937438965
    9. '[]' → logprob: -5.076849937438965
    10. '_gr' → logprob: -5.076849937438965

Token 91: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12314770370721817
    2. '[' → logprob: -2.74814772605896
    3. ' ' → logprob: -3.87314772605896
    4. ' )' → logprob: -4.623147487640381
    5. ' [' → logprob: -5.123147487640381
    6. ']' → logprob: -5.998147487640381
    7. '[]' → logprob: -6.123147487640381
    8. '[
' → logprob: -6.248147487640381
    9. '   ' → logprob: -6.748147487640381
    10. 'data' → logprob: -6.873147487640381

Token 92: ' vrai' (ID: 42682)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5680257678031921
    2. 'list' → logprob: -1.568025827407837
    3. ' ' → logprob: -2.818025827407837
    4. ')' → logprob: -3.568025827407837
    5. ' liste' → logprob: -4.318025588989258
    6. 'gr' → logprob: -4.318025588989258
    7. '[]' → logprob: -4.443025588989258
    8. 'chaine' → logprob: -4.693025588989258
    9. '```' → logprob: -4.818025588989258
    10. 't' → logprob: -5.193025588989258

Token 93: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2552643418312073
    2. ',' → logprob: -2.7552642822265625
    3. ' la' → logprob: -2.7552642822265625
    4. 'gr' → logprob: -4.0052642822265625
    5. ' une' → logprob: -4.3802642822265625
    6. ' grid' → logprob: -4.5052642822265625
    7. ' ' → logprob: -4.6302642822265625
    8. 'grid' → logprob: -4.7552642822265625
    9. 'la' → logprob: -4.8802642822265625
    10. '```' → logprob: -5.5052642822265625

Token 94: ' pourrait' (ID: 39622)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.4932702779769897
    2. ')' → logprob: -1.7432702779769897
    3. ' pourrait' → logprob: -1.9932702779769897
    4. ' va' → logprob: -2.3682703971862793
    5. 'n' → logprob: -2.4932703971862793
    6. 'stock' → logprob: -2.8682703971862793
    7. 'l' → logprob: -3.2432703971862793
    8. ' n' → logprob: -3.8682703971862793
    9. 's' → logprob: -3.9932703971862793
    10. 'a' → logprob: -4.118270397186279

Token 95: ' la' (ID: 557)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'just' → logprob: -1.0314432382583618
    2. 'faire' → logprob: -2.4064431190490723
    3. 'a' → logprob: -2.5314431190490723
    4. 'mettre' → logprob: -2.6564431190490723
    5. ' juste' → logprob: -2.9064431190490723
    6. ' utiliser' → logprob: -2.9064431190490723
    7. ' stock' → logprob: -3.2814431190490723
    8. '```' → logprob: -3.2814431190490723
    9. 'l' → logprob: -3.5314431190490723
    10. ' faire' → logprob: -3.5314431190490723

Token 96: ' faire' (ID: 8119)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'just' → logprob: -1.7342015504837036
    2. '```' → logprob: -1.7342015504837036
    3. 'r' → logprob: -2.484201431274414
    4. ' stock' → logprob: -3.109201431274414
    5. 'prendre' → logprob: -3.109201431274414
    6. ' lire' → logprob: -3.109201431274414
    7. 'l' → logprob: -3.234201431274414
    8. ')' → logprob: -3.359201431274414
    9. 'pas' → logprob: -3.734201431274414
    10. 'stock' → logprob: -3.734201431274414

Token 97: ' en' (ID: 469)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -1.1495795249938965
    2. 'en' → logprob: -2.2745795249938965
    3. 'sans' → logprob: -2.2745795249938965
    4. ')' → logprob: -2.3995795249938965
    5. 'a' → logprob: -2.7745795249938965
    6. ' ' → logprob: -3.3995795249938965
    7. 'ligne' → logprob: -3.6495795249938965
    8. ' en' → logprob: -3.6495795249938965
    9. 'comme' → logprob: -4.0245795249938965
    10. 'direct' → logprob: -4.0245795249938965

Token 98: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9046568274497986
    2. 'une' → logprob: -1.4046568870544434
    3. 'liste' → logprob: -2.0296568870544434
    4. '```' → logprob: -3.0296568870544434
    5. ' ' → logprob: -3.7796568870544434
    6. ' une' → logprob: -3.9046568870544434
    7. 'numpy' → logprob: -4.404656887054443
    8. '1' → logprob: -4.529656887054443
    9. 'int' → logprob: -4.779656887054443
    10. 'un' → logprob: -4.779656887054443

Token 99: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7843171954154968
    2. ' seule' → logprob: -1.6593172550201416
    3. 'se' → logprob: -1.7843172550201416
    4. 'liste' → logprob: -2.7843172550201416
    5. 'fois' → logprob: -3.4093172550201416
    6. ' ligne' → logprob: -3.7843172550201416
    7. 'list' → logprob: -4.5343170166015625
    8. ')' → logprob: -4.6593170166015625
    9. '```' → logprob: -4.9093170166015625
    10. ' ' → logprob: -5.1593170166015625

Token 100: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06414012610912323
    2. '   ' → logprob: -3.3141400814056396
    3. ',' → logprob: -4.064140319824219
    4. ' )' → logprob: -5.564140319824219
    5. ' ' → logprob: -5.814140319824219
    6. '    ' → logprob: -8.189140319824219
    7. ' ,' → logprob: -8.189140319824219
    8. '  ' → logprob: -8.314140319824219
    9. ']' → logprob: -8.439140319824219
    10. '
' → logprob: -9.689140319824219

Token 101: ' bon' (ID: 4846)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1918280124664307
    2. ')' → logprob: -1.3168280124664307
    3. ' je' → logprob: -2.0668280124664307
    4. ' )' → logprob: -2.9418280124664307
    5. ' on' → logprob: -3.1918280124664307
    6. ' ça' → logprob: -3.1918280124664307
    7. '   ' → logprob: -3.4418280124664307
    8. 'c' → logprob: -3.8168280124664307
    9. 'ça' → logprob: -4.191827774047852
    10. ' ' → logprob: -4.316827774047852

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013641303405165672
    2. ' )' → logprob: -5.013641357421875
    3. '   ' → logprob: -5.513641357421875
    4. ',' → logprob: -6.888641357421875
    5. ' ' → logprob: -7.013641357421875
    6. '<|end|>' → logprob: -7.888641357421875
    7. ' ' → logprob: -9.263641357421875
    8. ')
' → logprob: -9.638641357421875
    9. '<|end|>' → logprob: -9.888641357421875
    10. ' ,' → logprob: -10.013641357421875

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5631182193756104
    2. 'grid' → logprob: -1.1881182193756104
    3. ' grid' → logprob: -2.3131182193756104
    4. ' ' → logprob: -5.438117980957031
    5. 'gr' → logprob: -5.438117980957031
    6. '	grid' → logprob: -5.813117980957031
    7. ' 
' → logprob: -5.813117980957031
    8. ')' → logprob: -6.563117980957031
    9. ' grille' → logprob: -6.563117980957031
    10. '    
' → logprob: -6.688117980957031

Token 104: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.09525879472494125
    2. ' grid' → logprob: -2.4702587127685547
    3. 'board' → logprob: -6.095258712768555
    4. 'G' → logprob: -6.720258712768555
    5. '   ' → logprob: -7.470258712768555
    6. 'g' → logprob: -7.595258712768555
    7. ' ' → logprob: -8.095258712768555
    8. 'map' → logprob: -8.845258712768555
    9. 's' → logprob: -8.970258712768555
    10. 'graph' → logprob: -8.970258712768555

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894355058670044
    2. '=' → logprob: -2.5789434909820557
    3. '=[]' → logprob: -10.328943252563477
    4. ' ' → logprob: -11.453943252563477
    5. '[]' → logprob: -12.578943252563477
    6. ')' → logprob: -13.828943252563477
    7. '[' → logprob: -13.953943252563477
    8. '[:]' → logprob: -13.953943252563477
    9. ' =[' → logprob: -14.203943252563477
    10. ',' → logprob: -14.453943252563477

Token 106: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11988890171051025
    2. '[]' → logprob: -2.3698887825012207
    3. ' [' → logprob: -4.119888782501221
    4. ' []' → logprob: -6.369888782501221
    5. '[list' → logprob: -7.869888782501221
    6. '[str' → logprob: -8.369889259338379
    7. '[]
' → logprob: -8.619889259338379
    8. '[
' → logprob: -8.619889259338379
    9. '[array' → logprob: -9.744889259338379
    10. '[int' → logprob: -9.869889259338379

Token 107: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9949418902397156
    2. 'for' → logprob: -0.9949418902397156
    3. '   ' → logprob: -1.4949419498443604
    4. '<|end|>' → logprob: -3.8699419498443604
    5. ' ' → logprob: -4.869941711425781
    6. '	for' → logprob: -5.369941711425781
    7. '  
' → logprob: -7.244941711425781
    8. '  ' → logprob: -7.619941711425781
    9. '
' → logprob: -7.619941711425781
    10. '<|end|>' → logprob: -7.744941711425781

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004079828038811684
    2. ' for' → logprob: -5.504079818725586
    3. '	for' → logprob: -13.879079818725586
    4. '   ' → logprob: -14.629079818725586
    5. ' ' → logprob: -20.004079818725586
    6. '
' → logprob: -20.129079818725586
    7. ' ' → logprob: -20.129079818725586
    8. '    
' → logprob: -20.504079818725586
    9. ' 
' → logprob: -21.754079818725586
    10. '```' → logprob: -21.754079818725586

Token 109: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07891280949115753
    2. '_' → logprob: -2.5789127349853516
    3. ' i' → logprob: -10.828912734985352
    4. ' ' → logprob: -13.203912734985352
    5. '_i' → logprob: -13.953912734985352
    6. ' ' → logprob: -14.828912734985352
    7. 'i' → logprob: -16.07891273498535
    8. '	' → logprob: -17.82891273498535
    9. ' ‌' → logprob: -18.70391273498535
    10. ' in' → logprob: -18.95391273498535

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00491861579939723
    2. 'in' → logprob: -5.379918575286865
    3. ' ' → logprob: -8.879919052124023
    4. 'n' → logprob: -9.004919052124023
    5. '_' → logprob: -11.004919052124023
    6. '  ' → logprob: -12.754919052124023
    7. ' n' → logprob: -13.004919052124023
    8. 'range' → logprob: -13.004919052124023
    9. ' _' → logprob: -13.254919052124023
    10. ' i' → logprob: -13.379919052124023

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269332468509674
    2. 'range' → logprob: -2.1269333362579346
    3. '	range' → logprob: -12.751933097839355
    4. ' ' → logprob: -14.501933097839355
    5. 'rang' → logprob: -14.626933097839355
    6. ' xrange' → logprob: -14.626933097839355
    7. '(range' → logprob: -14.876933097839355
    8. '_range' → logprob: -16.501934051513672
    9. ' rang' → logprob: -16.501934051513672
    10. ')' → logprob: -16.751934051513672

Token 112: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0003896815178450197
    2. '(' → logprob: -7.875389575958252
    3. '(W' → logprob: -11.62539005279541
    4. ' (' → logprob: -15.50039005279541
    5. '(
' → logprob: -15.50039005279541
    6. 'H' → logprob: -16.000389099121094
    7. ')' → logprob: -17.625389099121094
    8. ' H' → logprob: -17.750389099121094
    9. '(int' → logprob: -17.875389099121094
    10. '	H' → logprob: -18.375389099121094

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006786000449210405
    2. '):
' → logprob: -8.250679016113281
    3. ')' → logprob: -8.500679016113281
    4. ' ):' → logprob: -8.875679016113281
    5. ':' → logprob: -9.625679016113281
    6. '+' → logprob: -12.500679016113281
    7. '   ' → logprob: -13.750679016113281
    8. '():' → logprob: -13.875679016113281
    9. '):
' → logprob: -14.625679016113281
    10. ' ' → logprob: -15.000679016113281

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04177386313676834
    2. '   ' → logprob: -3.416773796081543
    3. '<|end|>' → logprob: -5.791773796081543
    4. ' ' → logprob: -6.041773796081543
    5. '    ' → logprob: -6.666773796081543
    6. ':' → logprob: -8.291773796081543
    7. ',' → logprob: -8.541773796081543
    8. ')' → logprob: -8.916773796081543
    9. '      ' → logprob: -8.916773796081543
    10. '  ' → logprob: -9.041773796081543

Token 115: ' row' (ID: 5225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08064880967140198
    2. ' grid' → logprob: -3.080648899078369
    3. 'grid' → logprob: -3.580648899078369
    4. '       ' → logprob: -5.830648899078369
    5. '    ' → logprob: -7.830648899078369
    6. '	grid' → logprob: -9.080648422241211
    7. 'line' → logprob: -10.205648422241211
    8. '   ' → logprob: -10.330648422241211
    9. ' row' → logprob: -10.455648422241211
    10. ' line' → logprob: -10.580648422241211

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008677561767399311
    2. '=' → logprob: -4.7586774826049805
    3. ')' → logprob: -9.88367748260498
    4. ' ' → logprob: -12.00867748260498
    5. ' =
' → logprob: -13.88367748260498
    6. '.append' → logprob: -14.13367748260498
    7. ',' → logprob: -14.13367748260498
    8. '    ' → logprob: -14.13367748260498
    9. ' ' → logprob: -15.00867748260498
    10. ']' → logprob: -15.13367748260498

Token 117: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7651113271713257
    2. ' list' → logprob: -1.3901113271713257
    3. 'input' → logprob: -1.6401113271713257
    4. ' input' → logprob: -2.3901114463806152
    5. '[input' → logprob: -9.890110969543457
    6. ' [' → logprob: -11.765110969543457
    7. '[]' → logprob: -12.015110969543457
    8. ' ' → logprob: -12.140110969543457
    9. '[' → logprob: -12.515110969543457
    10. '	input' → logprob: -12.890110969543457

Token 118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00283803790807724
    2. '(' → logprob: -5.877838134765625
    3. '(map' → logprob: -11.502838134765625
    4. '()' → logprob: -11.752838134765625
    5. 'input' → logprob: -11.752838134765625
    6. '(
' → logprob: -12.127838134765625
    7. '(str' → logprob: -14.627838134765625
    8. ' (' → logprob: -15.252838134765625
    9. '=input' → logprob: -15.252838134765625
    10. '(

' → logprob: -15.377838134765625

Token 119: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0022224606946110725
    2. '()' → logprob: -6.377222537994385
    3. '().' → logprob: -7.627222537994385
    4. '()))' → logprob: -11.002222061157227
    5. ' ())' → logprob: -11.752222061157227
    6. '())
' → logprob: -12.752222061157227
    7. ')' → logprob: -12.752222061157227
    8. '();)' → logprob: -13.627222061157227
    9. '(' → logprob: -14.502222061157227
    10. '());' → logprob: -15.127222061157227

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006447131279855967
    2. ')' → logprob: -5.5064473152160645
    3. '<|end|>' → logprob: -6.2564473152160645
    4. '   ' → logprob: -8.131446838378906
    5. 'grid' → logprob: -10.506446838378906
    6. ' ' → logprob: -11.006446838378906
    7. '      ' → logprob: -11.131446838378906
    8. '        
' → logprob: -11.381446838378906
    9. '
' → logprob: -11.631446838378906
    10. ',' → logprob: -11.756446838378906

Token 121: ' grid' (ID: 10586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09719687700271606
    2. '   ' → logprob: -2.7221968173980713
    3. 'grid' (adapté à ' grid') → logprob: -3.9721968173980713
    4. ' grid' → logprob: -4.97219705581665
    5. '<|end|>' → logprob: -7.97219705581665
    6. '
' → logprob: -8.472196578979492
    7. '	grid' → logprob: -8.847196578979492
    8. ' ' → logprob: -8.972196578979492
    9. '.grid' → logprob: -9.597196578979492
    10. ')' → logprob: -9.722196578979492

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008159428252838552
    2. '.' → logprob: -7.1258158683776855
    3. '.extend' → logprob: -11.500816345214844
    4. '.app' → logprob: -14.500816345214844
    5. ' .' → logprob: -15.125816345214844
    6. '.Append' → logprob: -15.750816345214844
    7. '.setdefault' → logprob: -16.125816345214844
    8. 'append' → logprob: -16.250816345214844
    9. '.add' → logprob: -16.375816345214844
    10. '.push' → logprob: -16.625816345214844

Token 123: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.001173321157693863
    2. '(' → logprob: -6.751173496246338
    3. '(
' → logprob: -12.87617301940918
    4. '(rows' → logprob: -15.12617301940918
    5. ' (' → logprob: -16.25117301940918
    6. '(line' → logprob: -16.75117301940918
    7. '(

' → logprob: -16.75117301940918
    8. '(column' → logprob: -17.87617301940918
    9. '(r' → logprob: -18.00117301940918
    10. '(Row' → logprob: -18.37617301940918

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.877503907773644e-05
    2. ')
' → logprob: -9.375099182128906
    3. '   ' → logprob: -11.875099182128906
    4. ' )' → logprob: -12.500099182128906
    5. ')return' → logprob: -14.250099182128906
    6. '
' → logprob: -14.375099182128906
    7. ' ' → logprob: -14.500099182128906
    8. ')

' → logprob: -14.750099182128906
    9. '<|end|>' → logprob: -15.500099182128906
    10. '))' → logprob: -15.750099182128906

Token 125: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4552401304244995
    2. '<|end|>' → logprob: -1.3302401304244995
    3. '   ' → logprob: -2.455240249633789
    4. ')' → logprob: -5.205240249633789
    5. '  
' → logprob: -5.955240249633789
    6. '#' → logprob: -6.205240249633789
    7. '    
' → logprob: -6.455240249633789
    8. ' ' → logprob: -6.705240249633789
    9. ' 
' → logprob: -7.330240249633789
    10. '<|end|>' → logprob: -7.955240249633789

Token 126: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43560898303985596
    2. '   ' → logprob: -1.435608983039856
    3. '<|end|>' → logprob: -2.4356088638305664
    4. ')' → logprob: -4.685608863830566
    5. '    
' → logprob: -5.560608863830566
    6. ' ' → logprob: -5.560608863830566
    7. '#' → logprob: -5.685608863830566
    8. '  
' → logprob: -6.060608863830566
    9. 'for' → logprob: -6.935608863830566
    10. ' for' → logprob: -7.185608863830566

Token 127: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ''aime' (ID: 57963)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' bien' (ID: 5340)
  Prédit: ' bien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bien' → logprob: -0.7244918942451477
    2. 'bien' → logprob: -1.474491834640503
    3. '(' → logprob: -1.599491834640503
    4. ' mieux' → logprob: -4.349492073059082
    5. '<|end|>' → logprob: -4.349492073059082
    6. '('' → logprob: -4.599492073059082
    7. ' la' → logprob: -4.849492073059082
    8. '(
' → logprob: -5.599492073059082
    9. ' ' → logprob: -5.724492073059082
    10. '()' → logprob: -6.099492073059082

Token 130: ' garder' (ID: 63069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2824363708496094
    2. '(row' → logprob: -1.6574363708496094
    3. '<|end|>' → logprob: -1.9074363708496094
    4. 'la' → logprob: -2.6574363708496094
    5. '(grid' → logprob: -2.6574363708496094
    6. 'grid' → logprob: -2.9074363708496094
    7. ' les' → logprob: -3.2824363708496094
    8. 'row' → logprob: -3.6574363708496094
    9. 'les' → logprob: -3.9074363708496094
    10. ' une' → logprob: -4.157436370849609

Token 132: ' nom' (ID: 8080)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8315181136131287
    2. 'code' → logprob: -1.3315181732177734
    3. 'row' → logprob: -1.9565181732177734
    4. ' grid' → logprob: -3.2065181732177734
    5. 'input' → logprob: -3.4565181732177734
    6. ' original' → logprob: -3.8315181732177734
    7. 'grid' → logprob: -3.9565181732177734
    8. ' input' → logprob: -4.331518173217773
    9. 'original' → logprob: -4.706518173217773
    10. ' row' → logprob: -5.456518173217773

Token 133: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19149215519428253
    2. '<|end|>' → logprob: -2.6914920806884766
    3. '```' → logprob: -4.066492080688477
    4. '    
' → logprob: -4.191492080688477
    5. ')' → logprob: -4.566492080688477
    6. '
' → logprob: -4.566492080688477
    7. ',' → logprob: -4.816492080688477
    8. ' de' → logprob: -5.066492080688477
    9. ' des' → logprob: -5.066492080688477
    10. '  ' → logprob: -5.441492080688477

Token 134: 'row' (ID: 843)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4795970618724823
    2. 'row' → logprob: -0.9795970916748047
    3. ' grid' → logprob: -5.604597091674805
    4. 'gr' → logprob: -7.729597091674805
    5. ' row' → logprob: -7.979597091674805
    6. 'rows' → logprob: -8.104597091674805
    7. '```' → logprob: -8.104597091674805
    8. 'line' → logprob: -9.354597091674805
    9. '`' → logprob: -10.229597091674805
    10. 'ligne' → logprob: -10.479597091674805

Token 135: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03916069492697716
    2. '")' → logprob: -3.78916072845459
    3. ')"' → logprob: -4.53916072845459
    4. ')' → logprob: -5.66416072845459
    5. 's' → logprob: -6.53916072845459
    6. '<|end|>' → logprob: -10.16416072845459
    7. ' "' → logprob: -11.03916072845459
    8. '```' → logprob: -11.28916072845459
    9. '"""' → logprob: -11.28916072845459
    10. ' )' → logprob: -11.28916072845459

Token 136: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' être' (ID: 9104)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18565329909324646
    2. 'l' → logprob: -3.3106532096862793
    3. ' la' → logprob: -3.3106532096862793
    4. 'le' → logprob: -3.4356532096862793
    5. 'les' → logprob: -3.8106532096862793
    6. 'plus' → logprob: -4.185653209686279
    7. 'clar' → logprob: -5.060653209686279
    8. 'cl' → logprob: -5.935653209686279
    9. 'com' → logprob: -6.435653209686279
    10. 'ça' → logprob: -6.560653209686279

Token 138: ' clair' (ID: 71396)
  Prédit: 'clair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clair' → logprob: -1.0622440576553345
    2. 'co' → logprob: -1.1872440576553345
    3. 'consistent' → logprob: -2.062243938446045
    4. 'plus' → logprob: -3.187243938446045
    5. ' coh' → logprob: -3.687243938446045
    6. ' explic' → logprob: -3.812243938446045
    7. ' fidèle' → logprob: -3.812243938446045
    8. 'fid' → logprob: -3.937243938446045
    9. 'cl' → logprob: -4.062243938446045
    10. 'explicit' → logprob: -4.187243938446045

Token 139: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.592012345790863
    2. '
' → logprob: -1.0920124053955078
    3. '<|end|>' → logprob: -2.467012405395508
    4. '    
' → logprob: -4.467012405395508
    5. '#' → logprob: -4.842012405395508
    6. '  
' → logprob: -6.217012405395508
    7. '<|end|>' → logprob: -7.092012405395508
    8. ' 
' → logprob: -7.217012405395508
    9. '   
' → logprob: -7.592012405395508
    10. 'for' → logprob: -7.842012405395508

Token 141: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7566139698028564
    2. 'dp' → logprob: -1.7566139698028564
    3. '#' (adapté à ' #') → logprob: -2.0066139698028564
    4. 'dire' → logprob: -2.6316139698028564
    5. '   ' → logprob: -3.3816139698028564
    6. 'def' → logprob: -3.7566139698028564
    7. 'dist' → logprob: -3.8816139698028564
    8. 'distance' → logprob: -4.256613731384277
    9. 'from' → logprob: -4.256613731384277
    10. 'for' → logprob: -4.381613731384277

Token 142: ' Pré' (ID: 86400)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6660594940185547
    2. 'dire' → logprob: -1.6660594940185547
    3. '#' → logprob: -2.0410594940185547
    4. 'dp' → logprob: -2.5410594940185547
    5. 'from' → logprob: -3.5410594940185547
    6. 'for' → logprob: -3.5410594940185547
    7. 'dist' → logprob: -5.541059494018555
    8. 'dirs' → logprob: -6.041059494018555
    9. 'def' → logprob: -6.166059494018555
    10. 'vis' → logprob: -6.291059494018555

Token 143: 'paration' (ID: 27466)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -1.0367728471755981
    2. '   ' → logprob: -2.2867727279663086
    3. 'paration' → logprob: -2.5367727279663086
    4. 'fix' → logprob: -2.6617727279663086
    5. 'par' → logprob: -2.6617727279663086
    6. 'parer' → logprob: -3.0367727279663086
    7. 'sum' → logprob: -3.1617727279663086
    8. 'v' → logprob: -3.5367727279663086
    9. 'cis' → logprob: -3.5367727279663086
    10. 'voy' → logprob: -3.9117727279663086

Token 144: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' matrices' (ID: 75935)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.7392828464508057
    2. ' directions' → logprob: -1.2392828464508057
    3. 'dp' → logprob: -2.1142828464508057
    4. 'visited' → logprob: -3.1142828464508057
    5. ' voisins' → logprob: -3.9892828464508057
    6. 'dx' → logprob: -5.239282608032227
    7. 'dist' → logprob: -5.239282608032227
    8. ' distances' → logprob: -5.489282608032227
    9. 'moves' → logprob: -5.739282608032227
    10. 'dirs' → logprob: -5.739282608032227

Token 146: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.48028436303138733
    2. ' visited' → logprob: -2.1052844524383545
    3. 'dp' → logprob: -2.3552844524383545
    4. 'dist' → logprob: -2.8552844524383545
    5. ' dist' → logprob: -3.7302844524383545
    6. 'distance' → logprob: -4.105284214019775
    7. ' dp' → logprob: -4.355284214019775
    8. ' de' → logprob: -4.480284214019775
    9. 'de' → logprob: -4.605284214019775
    10. ' of' → logprob: -4.980284214019775

Token 147: ' un' (ID: 537)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9677605628967285
    2. 'dp' → logprob: -1.3427605628967285
    3. 'dist' → logprob: -1.3427605628967285
    4. 'distance' → logprob: -3.2177605628967285
    5. ' visited' → logprob: -4.0927605628967285
    6. ' dist' → logprob: -4.2177605628967285
    7. 'vis' → logprob: -4.5927605628967285
    8. ' dp' → logprob: -5.8427605628967285
    9. ' distance' → logprob: -6.0927605628967285
    10. 'depth' → logprob: -6.5927605628967285

Token 148: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7806263566017151
    2. ' peu' → logprob: -0.9056263566017151
    3. 'visited' → logprob: -2.2806262969970703
    4. 'pe' → logprob: -4.15562629699707
    5. ' visited' → logprob: -6.84312629699707
    6. ' peut' → logprob: -6.84312629699707
    7. 'd' → logprob: -6.90562629699707
    8. 'a' → logprob: -7.03062629699707
    9. 'vis' → logprob: -7.46812629699707
    10. 'par' → logprob: -7.53062629699707

Token 149: ' chi' (ID: 13069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0262022018432617
    2. 'de' → logprob: -1.7762022018432617
    3. 'comme' → logprob: -2.1512022018432617
    4. ' plus' → logprob: -2.9012022018432617
    5. 'plus' → logprob: -2.9012022018432617
    6. 'dp' → logprob: -3.0262022018432617
    7. ' comme' → logprob: -3.2762022018432617
    8. 'diff' → logprob: -3.7762022018432617
    9. 'like' → logprob: -4.026202201843262
    10. ' de' → logprob: -4.026202201843262

Token 150: 'ant' (ID: 493)
  Prédit: 'antes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.1784614771604538
    2. 'ant' → logprob: -2.1784615516662598
    3. 'a' → logprob: -4.42846155166626
    4. '**' → logprob: -4.67846155166626
    5. 'ante' → logprob: -4.80346155166626
    6. '*' → logprob: -5.17846155166626
    7. 'nt' → logprob: -5.55346155166626
    8. 'ants' → logprob: -6.30346155166626
    9. '#' → logprob: -6.67846155166626
    10. '@' → logprob: -6.80346155166626

Token 151: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3678185939788818
    2. 'dp' → logprob: -1.6178185939788818
    3. 'visited' → logprob: -1.8678185939788818
    4. ' dp' → logprob: -2.867818593978882
    5. 'distance' → logprob: -2.992818593978882
    6. 'dist' → logprob: -3.117818593978882
    7. ' visited' → logprob: -3.367818593978882
    8. ' ' → logprob: -3.492818593978882
    9. ' ' → logprob: -3.742818593978882
    10. ' d' → logprob: -3.992818593978882

Token 152: ' initial' (ID: 4871)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.6672511100769043
    2. 'coder' → logprob: -1.4172511100769043
    3. ' gérer' → logprob: -2.0422511100769043
    4. ' faire' → logprob: -3.4172511100769043
    5. 'part' → logprob: -3.9172511100769043
    6. 'initial' → logprob: -4.292251110076904
    7. 'man' → logprob: -4.792251110076904
    8. 'cause' → logprob: -5.167251110076904
    9. 'init' → logprob: -5.292251110076904
    10. 'g' → logprob: -5.542251110076904

Token 153: 'iser' (ID: 7466)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.04055078700184822
    2. 'ser' → logprob: -4.415550708770752
    3. 'er' → logprob: -4.665550708770752
    4. 't' → logprob: -4.665550708770752
    5. 'iser' → logprob: -5.790550708770752
    6. 'a' → logprob: -6.540550708770752
    7. 'zer' → logprob: -6.915550708770752
    8. 'ar' → logprob: -7.040550708770752
    9. 'ial' → logprob: -7.540550708770752
    10. 'ialize' → logprob: -8.54055118560791

Token 154: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8386549949645996
    2. 'dp' → logprob: -1.2136549949645996
    3. 'visited' → logprob: -1.9636549949645996
    4. 'distance' → logprob: -2.7136549949645996
    5. ' dist' → logprob: -3.5886549949645996
    6. ',' → logprob: -4.8386549949646
    7. ' dp' → logprob: -4.8386549949646
    8. ' visited' → logprob: -5.3386549949646
    9. ' distances' → logprob: -5.8386549949646
    10. '   ' → logprob: -5.9636549949646

Token 155: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4054702520370483
    2. ' dp' → logprob: -1.5304702520370483
    3. ' dist' → logprob: -1.7804702520370483
    4. 'dist' → logprob: -2.030470371246338
    5. 'distance' → logprob: -2.530470371246338
    6. ' visited' → logprob: -3.280470371246338
    7. 'visited' → logprob: -3.405470371246338
    8. ' distances' → logprob: -3.655470371246338
    9. ' distance' → logprob: -4.280470371246338
    10. ',' → logprob: -4.530470371246338

Token 156: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0244077444076538
    2. 'dp' → logprob: -1.1494077444076538
    3. 'visited' → logprob: -1.5244077444076538
    4. ' dist' → logprob: -3.6494078636169434
    5. 'distance' → logprob: -4.149407863616943
    6. ' dp' → logprob: -4.399407863616943
    7. ' visited' → logprob: -4.649407863616943
    8. 'cost' → logprob: -5.149407863616943
    9. 'max' → logprob: -5.399407863616943
    10. '   ' → logprob: -5.649407863616943

Token 157: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.337593138217926
    2. ' =' → logprob: -1.8375930786132812
    3. 'dist' → logprob: -3.5875930786132812
    4. 'en' → logprob: -3.5875930786132812
    5. 'e' → logprob: -4.337593078613281
    6. 'ast' → logprob: -4.337593078613281
    7. 'ist' → logprob: -4.962593078613281
    8. ',' → logprob: -5.212593078613281
    9. 'ength' → logprob: -5.587593078613281
    10. '_dist' → logprob: -5.837593078613281

Token 158: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.1433979868888855
    2. ' [[' → logprob: -2.0183980464935303
    3. '[' → logprob: -7.393397808074951
    4. ' [' → logprob: -9.89339828491211
    5. '[]' → logprob: -10.14339828491211
    6. '[['' → logprob: -11.89339828491211
    7. ' [[[' → logprob: -12.51839828491211
    8. ' []' → logprob: -13.76839828491211
    9. ' [[]' → logprob: -14.01839828491211
    10. ' ' → logprob: -14.01839828491211

Token 159: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11653734743595123
    2. ' for' → logprob: -2.49153733253479
    3. '[' → logprob: -3.99153733253479
    4. '   ' → logprob: -4.991537570953369
    5. '(H' → logprob: -7.116537570953369
    6. '[]' → logprob: -7.616537570953369
    7. 'H' → logprob: -8.366537094116211
    8. '0' → logprob: -9.366537094116211
    9. '	for' → logprob: -9.366537094116211
    10. ' [' → logprob: -9.991537094116211

Token 160: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02919398806989193
    2. '[' → logprob: -3.654193878173828
    3. ' for' → logprob: -6.404193878173828
    4. '[]' → logprob: -7.029193878173828
    5. '[[' → logprob: -9.154193878173828
    6. '   ' → logprob: -9.779193878173828
    7. '[
' → logprob: -10.029193878173828
    8. '0' → logprob: -10.154193878173828
    9. 'H' → logprob: -10.779193878173828
    10. ' [' → logprob: -11.029193878173828

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030943155288696
    2. '=' → logprob: -2.350309371948242
    3. '=[]' → logprob: -9.475309371948242
    4. ' ' → logprob: -11.350309371948242
    5. ',' → logprob: -11.725309371948242
    6. '.' → logprob: -13.475309371948242
    7. ']' → logprob: -14.350309371948242
    8. ')' → logprob: -14.350309371948242
    9. '[]' → logprob: -14.600309371948242
    10. '  ' → logprob: -14.850309371948242

Token 162: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004767361097037792
    2. '[' → logprob: -6.254767417907715
    3. '[[' → logprob: -6.254767417907715
    4. '[]
' → logprob: -7.379767417907715
    5. ' []' → logprob: -8.629767417907715
    6. '[][]' → logprob: -10.254767417907715
    7. '[]

' → logprob: -10.629767417907715
    8. '[]}' → logprob: -11.129767417907715
    9. '[['' → logprob: -11.254767417907715
    10. '[
' → logprob: -11.879767417907715

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3139901161193848
    2. 'c' → logprob: -1.4389901161193848
    3. ',' → logprob: -1.6889901161193848
    4. '[' → logprob: -2.9389901161193848
    5. 'w' → logprob: -3.4389901161193848
    6. '[]' → logprob: -3.5639901161193848
    7. 'for' → logprob: -3.5639901161193848
    8. ' c' → logprob: -3.6889901161193848
    9. 'd' → logprob: -4.063990116119385
    10. 'v' → logprob: -4.188990116119385

Token 164: ' u' (ID: 337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8030891418457031
    2. '[]' → logprob: -1.1780891418457031
    3. '[' → logprob: -2.803089141845703
    4. 'd' → logprob: -2.928089141845703
    5. 'c' → logprob: -3.428089141845703
    6. ' for' → logprob: -3.803089141845703
    7. 'u' (adapté à ' u') → logprob: -4.428089141845703
    8. 'w' → logprob: -4.553089141845703
    9. ' ' → logprob: -4.678089141845703
    10. 'b' → logprob: -4.803089141845703

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485924303531647
    2. '=' → logprob: -1.2235924005508423
    3. '=[]' → logprob: -8.973592758178711
    4. ',' → logprob: -12.473592758178711
    5. '   ' → logprob: -12.723592758178711
    6. ' ' → logprob: -12.723592758178711
    7. '=[]
' → logprob: -12.848592758178711
    8. 'n' → logprob: -13.598592758178711
    9. '[]' → logprob: -13.723592758178711
    10. 'l' → logprob: -14.098592758178711

Token 166: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002812391903717071
    2. '[' → logprob: -8.37528133392334
    3. '[]
' → logprob: -10.37528133392334
    4. '[[' → logprob: -11.37528133392334
    5. ' []' → logprob: -12.12528133392334
    6. '[][]' → logprob: -13.50028133392334
    7. '[]

' → logprob: -14.87528133392334
    8. '[]}' → logprob: -15.37528133392334
    9. '[
' → logprob: -15.75028133392334
    10. '[len' → logprob: -16.000280380249023

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19097109138965607
    2. 'v' → logprob: -2.5659711360931396
    3. 'for' → logprob: -2.6909711360931396
    4. 'd' → logprob: -3.9409711360931396
    5. ' for' → logprob: -5.9409708976745605
    6. ',' → logprob: -6.5659708976745605
    7. 'w' → logprob: -7.0659708976745605
    8. ' v' → logprob: -7.1909708976745605
    9. '    
' → logprob: -7.3159708976745605
    10. ' ' → logprob: -7.5659708976745605

Token 168: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.002223056508228183
    2. 'for' → logprob: -6.627223014831543
    3. 'v' → logprob: -7.377223014831543
    4. '[]' → logprob: -8.502223014831543
    5. ' d' → logprob: -10.252223014831543
    6. '   ' → logprob: -12.252223014831543
    7. ']' → logprob: -12.627223014831543
    8. ' for' → logprob: -12.752223014831543
    9. ' ' → logprob: -12.752223014831543
    10. '[d' → logprob: -12.752223014831543

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054891880601644516
    2. '=' → logprob: -2.92989182472229
    3. '=[]' → logprob: -11.929891586303711
    4. ' ' → logprob: -13.804891586303711
    5. '.' → logprob: -14.679891586303711
    6. ')' → logprob: -14.679891586303711
    7. ']' → logprob: -15.679891586303711
    8. ',' → logprob: -15.804891586303711
    9. '=[]
' → logprob: -15.929891586303711
    10. ' =
' → logprob: -16.05489158630371

Token 170: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1994775377388578e-05
    2. ' []' → logprob: -11.750012397766113
    3. '[]
' → logprob: -12.875012397766113
    4. '[' → logprob: -13.750012397766113
    5. '[]}' → logprob: -16.000011444091797
    6. '([]' → logprob: -16.250011444091797
    7. '[]

' → logprob: -16.250011444091797
    8. '[][]' → logprob: -17.125011444091797
    9. '[])' → logprob: -18.125011444091797
    10. '=[]' → logprob: -18.250011444091797

Token 171: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4886782467365265
    2. ' for' → logprob: -1.113678216934204
    3. '[' → logprob: -3.988678216934204
    4. '<|end|>' → logprob: -3.988678216934204
    5. '   ' → logprob: -4.988678455352783
    6. ' ' → logprob: -5.238678455352783
    7. ' =' → logprob: -6.613678455352783
    8. '  
' → logprob: -6.613678455352783
    9. ' 
' → logprob: -6.738678455352783
    10. '
' → logprob: -6.863678455352783

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0741734653711319
    2. ' for' → logprob: -2.8241734504699707
    3. ' ' → logprob: -5.074173450469971
    4. '<|end|>' → logprob: -5.699173450469971
    5. '   ' → logprob: -6.574173450469971
    6. '[' → logprob: -7.324173450469971
    7. ' 
' → logprob: -8.699173927307129
    8. '	for' → logprob: -9.699173927307129
    9. '  
' → logprob: -9.699173927307129
    10. '[]' → logprob: -10.199173927307129

Token 173: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47052642703056335
    2. ' i' → logprob: -1.3455264568328857
    3. '_' → logprob: -2.4705264568328857
    4. ' _' → logprob: -3.9705264568328857
    5. '_i' → logprob: -4.470526218414307
    6. '	i' → logprob: -10.470526695251465
    7. ' ' → logprob: -11.095526695251465
    8. 'I' → logprob: -12.470526695251465
    9. 'y' → logprob: -12.720526695251465
    10. 'h' → logprob: -12.845526695251465

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005355075001716614
    2. 'in' → logprob: -5.255354881286621
    3. 'range' → logprob: -9.380354881286621
    4. ' ' → logprob: -10.755354881286621
    5. '  ' → logprob: -12.380354881286621
    6. '   ' → logprob: -13.255354881286621
    7. ' range' → logprob: -13.380354881286621
    8. 'H' → logprob: -13.505354881286621
    9. 'd' → logprob: -13.880354881286621
    10. 'i' → logprob: -13.880354881286621

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020661352202296257
    2. ' range' → logprob: -3.8956613540649414
    3. 'ange' → logprob: -9.270661354064941
    4. '(range' → logprob: -11.020661354064941
    5. '	range' → logprob: -13.520661354064941
    6. ')' → logprob: -13.645661354064941
    7. 'rang' → logprob: -13.645661354064941
    8. ' ' → logprob: -13.645661354064941
    9. '   ' → logprob: -14.520661354064941
    10. '  ' → logprob: -15.020661354064941

Token 176: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -12.00001335144043
    3. 'H' → logprob: -12.75001335144043
    4. '   ' → logprob: -13.25001335144043
    5. ' (' → logprob: -13.50001335144043
    6. '(W' → logprob: -14.25001335144043
    7. ')' → logprob: -16.12501335144043
    8. '	H' → logprob: -17.12501335144043
    9. ' H' → logprob: -17.50001335144043
    10. '((' → logprob: -17.62501335144043

Token 177: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1798216998577118
    2. '):' → logprob: -1.8048217296600342
    3. '):
' → logprob: -10.179821968078613
    4. '   ' → logprob: -11.804821968078613
    5. ' ):
' → logprob: -11.804821968078613
    6. ':' → logprob: -12.179821968078613
    7. ')' → logprob: -12.304821968078613
    8. ':
' → logprob: -12.679821968078613
    9. ' ):' → logprob: -12.804821968078613
    10. ' ' → logprob: -13.304821968078613

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010774494148790836
    2. '       ' → logprob: -4.635774612426758
    3. ' l' → logprob: -7.010774612426758
    4. 'l' → logprob: -10.135774612426758
    5. '	l' → logprob: -10.760774612426758
    6. '<|end|>' → logprob: -11.010774612426758
    7. ',' → logprob: -12.135774612426758
    8. '+' → logprob: -12.135774612426758
    9. '    ' → logprob: -12.385774612426758
    10. ',l' → logprob: -13.010774612426758

Token 179: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00021605310030281544
    2. ' l' → logprob: -8.750216484069824
    3. '   ' → logprob: -9.875216484069824
    4. '[' → logprob: -12.500216484069824
    5. '	l' → logprob: -13.625216484069824
    6. '[l' → logprob: -14.750216484069824
    7. '    ' → logprob: -15.250216484069824
    8. '[]' → logprob: -15.625216484069824
    9. ' ' → logprob: -16.125215530395508
    10. '       ' → logprob: -16.625215530395508

Token 180: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011785586830228567
    2. '.' → logprob: -6.751178741455078
    3. ' .' → logprob: -12.001178741455078
    4. 'append' → logprob: -13.876178741455078
    5. '.extend' → logprob: -14.126178741455078
    6. '.app' → logprob: -14.876178741455078
    7. '.ap' → logprob: -16.001178741455078
    8. ' append' → logprob: -17.376178741455078
    9. '].' → logprob: -17.876178741455078
    10. ' ' → logprob: -18.001178741455078

Token 181: '([' (ID: 5194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034395805560052395
    2. '([' → logprob: -5.753439426422119
    3. '[-' → logprob: -8.378439903259277
    4. ' [' → logprob: -10.753439903259277
    5. '   ' → logprob: -12.753439903259277
    6. '([-' → logprob: -13.253439903259277
    7. '[int' → logprob: -13.628439903259277
    8. 'W' → logprob: -14.003439903259277
    9. '[n' → logprob: -14.378439903259277
    10. '[len' → logprob: -14.378439903259277

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005930667975917459
    2. '-' → logprob: -7.625593185424805
    3. 'False' → logprob: -9.625593185424805
    4. 'W' → logprob: -11.000593185424805
    5. ' ' → logprob: -11.375593185424805
    6. '-W' → logprob: -12.875593185424805
    7. 'float' → logprob: -13.125593185424805
    8. ' -' → logprob: -13.500593185424805
    9. 'None' → logprob: -13.500593185424805
    10. '[' → logprob: -14.625593185424805

Token 183: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12706848978996277
    2. ']*' → logprob: -2.127068519592285
    3. ' ]' → logprob: -9.252068519592285
    4. ']*(' → logprob: -10.127068519592285
    5. ' for' → logprob: -12.627068519592285
    6. ']+' → logprob: -14.627068519592285
    7. '])' → logprob: -15.377068519592285
    8. '*' → logprob: -15.502068519592285
    9. 'for' → logprob: -16.37706756591797
    10. '0' → logprob: -17.12706756591797

Token 184: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002639582962729037
    2. ' W' → logprob: -8.500264167785645
    3. '(W' → logprob: -9.750264167785645
    4. '   ' → logprob: -13.750264167785645
    5. ' (' → logprob: -14.875264167785645
    6. '(' → logprob: -14.875264167785645
    7. '  ' → logprob: -16.125263214111328
    8. '	W' → logprob: -16.125263214111328
    9. ' ' → logprob: -16.500263214111328
    10. '<W' → logprob: -18.500263214111328

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.719917630311102e-05
    2. ' )' → logprob: -10.000077247619629
    3. ')
' → logprob: -10.375077247619629
    4. '))' → logprob: -15.375077247619629
    5. '   ' → logprob: -15.875077247619629
    6. ')

' → logprob: -17.000076293945312
    7. ' ' → logprob: -17.000076293945312
    8. '),' → logprob: -17.750076293945312
    9. ' )
' → logprob: -18.125076293945312
    10. ')#' → logprob: -18.375076293945312

Token 186: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6503734588623047
    2. '       ' → logprob: -1.1503734588623047
    3. 'r' → logprob: -2.5253734588623047
    4. '<|end|>' → logprob: -3.4003734588623047
    5. 'for' → logprob: -3.7753734588623047
    6. ' for' → logprob: -4.400373458862305
    7. ' ' → logprob: -5.275373458862305
    8. 'd' → logprob: -5.650373458862305
    9. '
' → logprob: -6.525373458862305
    10. ' r' → logprob: -7.025373458862305

Token 187: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.005424073897302151
    2. '[' → logprob: -5.2554240226745605
    3. ' r' → logprob: -9.005424499511719
    4. '   ' → logprob: -10.630424499511719
    5. ' [' → logprob: -11.255424499511719
    6. ' ' → logprob: -12.255424499511719
    7. '  ' → logprob: -12.380424499511719
    8. 'd' → logprob: -12.380424499511719
    9. '[r' → logprob: -12.505424499511719
    10. '0' → logprob: -12.755424499511719

Token 188: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0038792924024164677
    2. '[-' → logprob: -5.753879070281982
    3. '[' → logprob: -7.753879070281982
    4. '.' → logprob: -8.50387954711914
    5. '[_' → logprob: -10.25387954711914
    6. ' .' → logprob: -11.00387954711914
    7. '   ' → logprob: -11.50387954711914
    8. 'append' → logprob: -12.75387954711914
    9. '[]' → logprob: -14.25387954711914
    10. '```' → logprob: -14.37887954711914

Token 189: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.011066801846027374
    2. '[' → logprob: -4.511066913604736
    3. '(' → logprob: -11.011066436767578
    4. ' ([' → logprob: -13.386066436767578
    5. ' [' → logprob: -14.511066436767578
    6. ' ' → logprob: -15.886066436767578
    7. '   ' → logprob: -15.886066436767578
    8. '```' → logprob: -16.636066436767578
    9. '  ' → logprob: -17.011066436767578
    10. '(([' → logprob: -17.386066436767578

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02639528177678585
    2. '[' → logprob: -3.776395320892334
    3. 'W' → logprob: -5.776395320892334
    4. ' ' → logprob: -10.776394844055176
    5. ' [' → logprob: -11.651394844055176
    6. ' W' → logprob: -11.901394844055176
    7. '(' → logprob: -12.401394844055176
    8. '(W' → logprob: -12.901394844055176
    9. '   ' → logprob: -14.026394844055176
    10. ']' → logprob: -15.526394844055176

Token 191: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05169929936528206
    2. ']*' → logprob: -3.05169939994812
    3. ')*' → logprob: -5.801699161529541
    4. '[' → logprob: -10.3016996383667
    5. '*[' → logprob: -10.4266996383667
    6. ']' → logprob: -11.6766996383667
    7. ' *' → logprob: -12.6766996383667
    8. '()*' → logprob: -12.8016996383667
    9. '```' → logprob: -13.3016996383667
    10. ')' → logprob: -13.4266996383667

Token 192: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.2352385965641588e-05
    2. ' W' → logprob: -12.000012397766113
    3. '(W' → logprob: -13.250012397766113
    4. '   ' → logprob: -13.625012397766113
    5. '[' → logprob: -13.750012397766113
    6. '(' → logprob: -14.125012397766113
    7. ' ' → logprob: -15.000012397766113
    8. '```' → logprob: -15.250012397766113
    9. ')' → logprob: -15.375012397766113
    10. 'H' → logprob: -15.875012397766113

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009381395066156983
    2. ')
' → logprob: -7.0009379386901855
    3. '   ' → logprob: -11.250938415527344
    4. ' )' → logprob: -11.500938415527344
    5. '       ' → logprob: -13.125938415527344
    6. ' ' → logprob: -15.000938415527344
    7. ')

' → logprob: -15.125938415527344
    8. '[' → logprob: -15.375938415527344
    9. ')
' → logprob: -15.750938415527344
    10. '<|end|>' → logprob: -15.750938415527344

Token 194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.082634836435318
    2. '       ' → logprob: -3.207634925842285
    3. 'u' → logprob: -4.207634925842285
    4. '
' → logprob: -4.332634925842285
    5. '<|end|>' → logprob: -5.082634925842285
    6. 'for' → logprob: -6.832634925842285
    7. ')' → logprob: -7.207634925842285
    8. '    
' → logprob: -7.457634925842285
    9. ' u' → logprob: -7.582634925842285
    10. ' for' → logprob: -8.082634925842285

Token 195: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0002639582962729037
    2. ' u' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.125264167785645
    4. '	u' → logprob: -14.625264167785645
    5. '_u' → logprob: -16.500263214111328
    6. '0' → logprob: -16.625263214111328
    7. 'd' → logprob: -17.000263214111328
    8. '       ' → logprob: -17.000263214111328
    9. '[u' → logprob: -17.875263214111328
    10. ' ' → logprob: -17.875263214111328

Token 196: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.698698704596609e-05
    2. '.' → logprob: -9.375097274780273
    3. ' .' → logprob: -12.250097274780273
    4. '([' → logprob: -12.625097274780273
    5. '=' → logprob: -13.500097274780273
    6. 'append' → logprob: -13.625097274780273
    7. '   ' → logprob: -14.250097274780273
    8. ' =' → logprob: -14.625097274780273
    9. '(' → logprob: -16.250097274780273
    10. '=[' → logprob: -17.125097274780273

Token 197: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0006388116744346917
    2. '[' → logprob: -7.375638961791992
    3. '(' → logprob: -11.375638961791992
    4. ' ([' → logprob: -14.375638961791992
    5. '```' → logprob: -17.000638961791992
    6. '0' → logprob: -18.375638961791992
    7. '(([' → logprob: -18.375638961791992
    8. ' [' → logprob: -18.625638961791992
    9. '(
' → logprob: -18.875638961791992
    10. '([[' → logprob: -19.000638961791992

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029770854860544205
    2. '[' → logprob: -3.529770851135254
    3. ' ' → logprob: -11.529770851135254
    4. ' [' → logprob: -11.904770851135254
    5. 'W' → logprob: -14.404770851135254
    6. '(' → logprob: -14.404770851135254
    7. '```' → logprob: -14.404770851135254
    8. '   ' → logprob: -14.529770851135254
    9. '
' → logprob: -14.529770851135254
    10. ')' → logprob: -15.779770851135254

Token 199: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5311363339424133
    2. ')*' → logprob: -1.0311362743377686
    3. ']*' → logprob: -3.0311362743377686
    4. '[' → logprob: -5.531136512756348
    5. '*[' → logprob: -5.781136512756348
    6. '```' → logprob: -10.031136512756348
    7. ')' → logprob: -10.281136512756348
    8. '()*' → logprob: -10.406136512756348
    9. ')[' → logprob: -12.031136512756348
    10. '[]' → logprob: -12.281136512756348

Token 200: 'W' (ID: 54)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6932955980300903
    2. 'W' → logprob: -0.6932955980300903
    3. '[' → logprob: -9.0682954788208
    4. '(H' → logprob: -11.5682954788208
    5. '(W' → logprob: -12.0682954788208
    6. ' W' → logprob: -12.4432954788208
    7. '0' → logprob: -12.6932954788208
    8. '(' → logprob: -12.6932954788208
    9. ' H' → logprob: -13.0682954788208
    10. ')' → logprob: -13.0682954788208

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022988244891166687
    2. ')
' → logprob: -6.127298831939697
    3. '       ' → logprob: -10.002298355102539
    4. '   ' → logprob: -10.002298355102539
    5. ')d' → logprob: -11.002298355102539
    6. 'd' → logprob: -13.127298355102539
    7. ' )' → logprob: -13.127298355102539
    8. '[' → logprob: -13.752298355102539
    9. ')
' → logprob: -14.502298355102539
    10. ' ' → logprob: -15.377298355102539

Token 202: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07368656247854233
    2. '       ' → logprob: -3.4486865997314453
    3. 'd' → logprob: -3.8236865997314453
    4. 'for' → logprob: -4.073686599731445
    5. ' for' → logprob: -8.448686599731445
    6. ')' → logprob: -9.323686599731445
    7. '  ' → logprob: -11.073686599731445
    8. ' d' → logprob: -11.448686599731445
    9. ' ' → logprob: -11.573686599731445
    10. '    ' → logprob: -11.823686599731445

Token 203: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.002507643774151802
    2. '[' → logprob: -6.00250768661499
    3. ' d' → logprob: -10.377507209777832
    4. '([' → logprob: -15.377507209777832
    5. '```' → logprob: -15.627507209777832
    6. '(' → logprob: -15.877507209777832
    7. ' [' → logprob: -16.25250816345215
    8. '0' → logprob: -16.75250816345215
    9. '	d' → logprob: -16.75250816345215
    10. '   ' → logprob: -16.87750816345215

Token 204: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010869937250390649
    2. '[' → logprob: -7.001087188720703
    3. '=' → logprob: -10.501087188720703
    4. '   ' → logprob: -10.626087188720703
    5. ' .' → logprob: -10.626087188720703
    6. 'append' → logprob: -10.626087188720703
    7. ' =' → logprob: -10.751087188720703
    8. '```' → logprob: -11.251087188720703
    9. '[-' → logprob: -11.251087188720703
    10. '.' → logprob: -12.001087188720703

Token 205: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0003365350130479783
    2. '[' → logprob: -8.250336647033691
    3. '(' → logprob: -9.500336647033691
    4. ' ([' → logprob: -15.375336647033691
    5. '((' → logprob: -16.500335693359375
    6. '```' → logprob: -16.500335693359375
    7. '   ' → logprob: -17.625335693359375
    8. '0' → logprob: -17.750335693359375
    9. '([[' → logprob: -18.000335693359375
    10. '(([' → logprob: -19.000335693359375

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002409896580502391
    2. '[' → logprob: -6.127409934997559
    3. 'W' → logprob: -8.502409934997559
    4. ' ' → logprob: -11.502409934997559
    5. '(' → logprob: -12.877409934997559
    6. ' [' → logprob: -13.377409934997559
    7. '   ' → logprob: -13.627409934997559
    8. ']' → logprob: -13.877409934997559
    9. '*' → logprob: -14.002409934997559
    10. '
' → logprob: -14.252409934997559

Token 207: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0008355968166142702
    2. '*' → logprob: -7.875835418701172
    3. '[' → logprob: -8.375835418701172
    4. ')*' → logprob: -9.750835418701172
    5. ']' → logprob: -9.875835418701172
    6. '][' → logprob: -9.875835418701172
    7. '()*' → logprob: -10.625835418701172
    8. '(W' → logprob: -11.625835418701172
    9. '(H' → logprob: -11.750835418701172
    10. '```' → logprob: -11.875835418701172

Token 208: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0032973706256598234
    2. 'H' → logprob: -5.753297328948975
    3. '(W' → logprob: -9.503297805786133
    4. '[' → logprob: -10.628297805786133
    5. '(H' → logprob: -11.753297805786133
    6. '(' → logprob: -11.878297805786133
    7. ' W' → logprob: -12.253297805786133
    8. ')' → logprob: -14.628297805786133
    9. '0' → logprob: -15.253297805786133
    10. '   ' → logprob: -15.628297805786133

Token 209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020938136731274426
    2. ')
' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.87520980834961
    4. ' )' → logprob: -13.75020980834961
    5. '       ' → logprob: -14.25020980834961
    6. '))' → logprob: -14.37520980834961
    7. ')`' → logprob: -15.37520980834961
    8. ')

' → logprob: -15.75020980834961
    9. ')
' → logprob: -16.25020980834961
    10. '[' → logprob: -16.25020980834961

Token 210: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022462593391537666
    2. '#' → logprob: -4.272462368011475
    3. 'for' → logprob: -5.647462368011475
    4. '   ' → logprob: -5.897462368011475
    5. ' for' → logprob: -7.397462368011475
    6. ' 
' → logprob: -7.647462368011475
    7. '    
' → logprob: -8.272462844848633
    8. '

' → logprob: -8.272462844848633
    9. '  
' → logprob: -8.772462844848633
    10. '\n' → logprob: -9.522462844848633

Token 211: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9315097332000732
    2. '
' → logprob: -1.0565097332000732
    3. '#' (adapté à ' #') → logprob: -1.5565097332000732
    4. ' for' → logprob: -3.6815097332000732
    5. '   ' → logprob: -3.9315097332000732
    6. '    
' → logprob: -7.181509971618652
    7. ' 
' → logprob: -7.431509971618652
    8. '

' → logprob: -7.931509971618652
    9. ' ' → logprob: -8.181509971618652
    10. '' → logprob: -8.681509971618652

Token 212: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2260984182357788
    2. '#' → logprob: -1.6010984182357788
    3. ' for' → logprob: -7.351098537445068
    4. ' #' → logprob: -11.35109806060791
    5. '   ' → logprob: -11.47609806060791
    6. 'For' → logprob: -11.97609806060791
    7. '
' → logprob: -12.10109806060791
    8. 'def' → logprob: -12.60109806060791
    9. ' ' → logprob: -14.22609806060791
    10. ' ' → logprob: -14.35109806060791

Token 213: ' regarde' (ID: 115760)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11026012897491455
    2. '#' → logprob: -2.985260009765625
    3. ' for' → logprob: -2.985260009765625
    4. 'continue' → logprob: -6.610260009765625
    5. ' continue' → logprob: -7.110260009765625
    6. 'range' → logprob: -8.110260009765625
    7. 'pour' → logprob: -8.610260009765625
    8. 's' → logprob: -9.235260009765625
    9. 'vais' → logprob: -9.360260009765625
    10. 'def' → logprob: -9.735260009765625

Token 214: ' vers' (ID: 3640)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30915307998657227
    2. '   ' → logprob: -1.6841530799865723
    3. ' for' → logprob: -2.6841530799865723
    4. '#' → logprob: -4.434153079986572
    5. 'range' → logprob: -10.059152603149414
    6. 'i' → logprob: -10.184152603149414
    7. ' #' → logprob: -10.684152603149414
    8. ' ' → logprob: -10.934152603149414
    9. '	for' → logprob: -11.184152603149414
    10. ' i' → logprob: -11.559152603149414

Token 215: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4475685954093933
    2. ' la' → logprob: -1.447568655014038
    3. 'g' → logprob: -2.197568655014038
    4. 'l' → logprob: -4.697568416595459
    5. 'le' → logprob: -5.572568416595459
    6. ' ' → logprob: -6.947568416595459
    7. 'left' → logprob: -8.322568893432617
    8. ' le' → logprob: -9.572568893432617
    9. '_g' → logprob: -9.697568893432617
    10. '#' → logprob: -9.947568893432617

Token 216: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03254847601056099
    2. 'dro' → logprob: -4.282548427581787
    3. 'left' → logprob: -4.282548427581787
    4. ' gauche' → logprob: -5.907548427581787
    5. 'l' → logprob: -7.032548427581787
    6. ' droite' → logprob: -7.782548427581787
    7. 'right' → logprob: -9.657548904418945
    8. 'gau' → logprob: -9.782548904418945
    9. '#' → logprob: -10.032548904418945
    10. 'd' → logprob: -10.032548904418945

Token 217: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5332404375076294
    2. ' for' → logprob: -1.4082404375076294
    3. '   ' → logprob: -1.7832404375076294
    4. '
' → logprob: -7.78324031829834
    5. '	for' → logprob: -8.78324031829834
    6. '    
' → logprob: -11.15824031829834
    7. ',' → logprob: -11.28324031829834
    8. ' ' → logprob: -11.53324031829834
    9. ':' → logprob: -12.03324031829834
    10. '#' → logprob: -12.15824031829834

Token 218: 'un' (ID: 373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040393948554992676
    2. ' for' → logprob: -3.290393829345703
    3. '   ' → logprob: -6.415393829345703
    4. ')' → logprob: -7.290393829345703
    5. ' ' → logprob: -12.040393829345703
    6. '#' → logprob: -12.040393829345703
    7. '
' → logprob: -12.165393829345703
    8. ' )' → logprob: -12.540393829345703
    9. 'i' → logprob: -12.665393829345703
    10. '	for' → logprob: -13.415393829345703

Token 219: ' classique' (ID: 76895)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23237326741218567
    2. ' for' → logprob: -1.6073732376098633
    3. ']' → logprob: -6.107373237609863
    4. ' ' → logprob: -6.357373237609863
    5. ')' → logprob: -6.857373237609863
    6. '   ' → logprob: -7.607373237609863
    7. 'i' → logprob: -7.982373237609863
    8. ' range' → logprob: -8.107373237609863
    9. 'range' → logprob: -8.732373237609863
    10. 'n' → logprob: -8.732373237609863

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3039282262325287
    2. ')
' → logprob: -2.3039281368255615
    3. 'for' → logprob: -2.6789281368255615
    4. ' for' → logprob: -2.8039281368255615
    5. '   ' → logprob: -3.6789281368255615
    6. ' )' → logprob: -5.303928375244141
    7. ' )
' → logprob: -6.678928375244141
    8. '
' → logprob: -7.053928375244141
    9. '    
' → logprob: -9.05392837524414
    10. ',' → logprob: -9.30392837524414

Token 221: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6909018754959106
    2. 'for' → logprob: -0.8159018754959106
    3. '   ' → logprob: -2.940901756286621
    4. '
' → logprob: -6.440901756286621
    5. ' 
' → logprob: -6.815901756286621
    6. '    
' → logprob: -7.065901756286621
    7. '```' → logprob: -9.315901756286621
    8. '	for' → logprob: -9.815901756286621
    9. '  
' → logprob: -10.190901756286621
    10. '   
' → logprob: -10.440901756286621

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1531863659620285
    2. ' for' → logprob: -2.153186321258545
    3. '   ' → logprob: -3.653186321258545
    4. '	for' → logprob: -12.528186798095703
    5. '
' → logprob: -12.778186798095703
    6. '    
' → logprob: -14.153186798095703
    7. ' ' → logprob: -14.528186798095703
    8. '  ' → logprob: -16.278186798095703
    9. ' 
' → logprob: -16.403186798095703
    10. 'i' → logprob: -16.653186798095703

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20150601863861084
    2. ' i' → logprob: -1.7015060186386108
    3. 'h' → logprob: -9.826505661010742
    4. 'y' → logprob: -11.201505661010742
    5. ' h' → logprob: -11.326505661010742
    6. ' y' → logprob: -11.951505661010742
    7. '	i' → logprob: -12.951505661010742
    8. '   ' → logprob: -13.451505661010742
    9. 'x' → logprob: -13.951505661010742
    10. ' ' → logprob: -14.451505661010742

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602456420660019
    2. 'in' → logprob: -1.910245656967163
    3. ' ' → logprob: -11.035245895385742
    4. 'import' → logprob: -13.785245895385742
    5. '  ' → logprob: -13.910245895385742
    6. '   ' → logprob: -14.160245895385742
    7. '_' → logprob: -14.410245895385742
    8. 'range' → logprob: -14.535245895385742
    9. ')' → logprob: -15.035245895385742
    10. '	in' → logprob: -15.410245895385742

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0232557263225317
    2. ' range' → logprob: -3.7732558250427246
    3. '(range' → logprob: -12.148255348205566
    4. '	range' → logprob: -12.398255348205566
    5. ' ' → logprob: -15.523255348205566
    6. ' xrange' → logprob: -15.523255348205566
    7. '   ' → logprob: -15.523255348205566
    8. '<|end|>' → logprob: -16.398256301879883
    9. ')' → logprob: -16.523256301879883
    10. '```' → logprob: -17.523256301879883

Token 226: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.500004768371582
    3. 'H' → logprob: -13.750004768371582
    4. '(len' → logprob: -18.2500057220459
    5. '	H' → logprob: -19.0000057220459
    6. ' (' → logprob: -19.1250057220459
    7. '   ' → logprob: -19.5000057220459
    8. ',H' → logprob: -19.6250057220459
    9. ')' → logprob: -19.7500057220459
    10. '(
' → logprob: -20.5000057220459

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01829778403043747
    2. '):
' → logprob: -4.0182976722717285
    3. ' ):' → logprob: -9.018298149108887
    4. ':' → logprob: -11.393298149108887
    5. '):
' → logprob: -11.893298149108887
    6. ')' → logprob: -12.143298149108887
    7. ' ):
' → logprob: -13.518298149108887
    8. '):

' → logprob: -13.893298149108887
    9. '   ' → logprob: -14.768298149108887
    10. ' ' → logprob: -15.768298149108887

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27969926595687866
    2. ' for' → logprob: -1.5296993255615234
    3. 'for' → logprob: -4.029699325561523
    4. '       ' → logprob: -5.279699325561523
    5. ' ' → logprob: -6.404699325561523
    6. ':' → logprob: -6.529699325561523
    7. ' range' → logprob: -7.404699325561523
    8. '    ' → logprob: -8.029699325561523
    9. '  ' → logprob: -8.904699325561523
    10. '	for' → logprob: -9.654699325561523

Token 229: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004234154708683491
    2. ' for' → logprob: -5.504234313964844
    3. '   ' → logprob: -8.879234313964844
    4. 'count' → logprob: -11.504234313964844
    5. '0' → logprob: -12.879234313964844
    6. ' ' → logprob: -13.129234313964844
    7. '       ' → logprob: -14.504234313964844
    8. 'l' → logprob: -14.754234313964844
    9. '	for' → logprob: -15.379234313964844
    10. '    ' → logprob: -16.254234313964844

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687533140182495
    2. '=' → logprob: -1.1368753910064697
    3. ' ' → logprob: -13.26187515258789
    4. ',' → logprob: -14.26187515258789
    5. '   ' → logprob: -14.63687515258789
    6. '[' → logprob: -14.76187515258789
    7. '_=' → logprob: -15.13687515258789
    8. '_' → logprob: -15.51187515258789
    9. ')' → logprob: -16.01187515258789
    10. '=int' → logprob: -16.26187515258789

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033677343162707984
    2. ' ' → logprob: -8.000336647033691
    3. '1' → logprob: -14.250336647033691
    4. '   ' → logprob: -14.500336647033691
    5. '  ' → logprob: -17.312837600708008
    6. '[' → logprob: -17.375337600708008
    7. '۰' → logprob: -17.687837600708008
    8. '(' → logprob: -18.375337600708008
    9. '=' → logprob: -18.437837600708008
    10. '    ' → logprob: -18.812837600708008

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015681622608099133
    2. ' ' → logprob: -9.00015640258789
    3. '1' → logprob: -10.37515640258789
    4. '-' → logprob: -14.25015640258789
    5. '[' → logprob: -14.25015640258789
    6. '   ' → logprob: -15.25015640258789
    7. ' -' → logprob: -15.87515640258789
    8. '(' → logprob: -16.25015640258789
    9. '  ' → logprob: -17.18765640258789
    10. '۰' → logprob: -17.68765640258789

Token 233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016726837493479252
    2. '<|end|>' → logprob: -7.001672744750977
    3. '   ' → logprob: -8.501672744750977
    4. ' for' → logprob: -8.501672744750977
    5. ' ' → logprob: -8.751672744750977
    6. '	' → logprob: -9.126672744750977
    7. '<|end|>' → logprob: -10.876672744750977
    8. '	   ' → logprob: -11.001672744750977
    9. ',' → logprob: -11.126672744750977
    10. '        
' → logprob: -12.126672744750977

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015295843593776226
    2. '   ' → logprob: -4.64029598236084
    3. ' for' → logprob: -5.39029598236084
    4. '	for' → logprob: -8.14029598236084
    5. '	' → logprob: -8.64029598236084
    6. ' ' → logprob: -8.89029598236084
    7. 'for' → logprob: -9.01529598236084
    8. '<|end|>' → logprob: -9.26529598236084
    9. '	   ' → logprob: -9.64029598236084
    10. '    ' → logprob: -10.76529598236084

Token 235: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023305576294660568
    2. ' for' → logprob: -3.773305654525757
    3. '   ' → logprob: -9.898305892944336
    4. '	for' → logprob: -12.023305892944336
    5. '       ' → logprob: -12.898305892944336
    6. ' ' → logprob: -14.023305892944336
    7. '    ' → logprob: -15.148305892944336
    8. '  ' → logprob: -16.523305892944336
    9. '    
' → logprob: -18.023305892944336
    10. '	' → logprob: -18.148305892944336

Token 236: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.20149199664592743
    2. 'j' → logprob: -1.7014919519424438
    3. ' range' → logprob: -10.076492309570312
    4. 'range' → logprob: -10.451492309570312
    5. ' ' → logprob: -12.951492309570312
    6. '   ' → logprob: -13.576492309570312
    7. '	j' → logprob: -14.326492309570312
    8. '0' → logprob: -14.326492309570312
    9. 'w' → logprob: -14.451492309570312
    10. ' w' → logprob: -14.826492309570312

Token 237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043051257729530334
    2. 'in' → logprob: -3.168051242828369
    3. ' ' → logprob: -10.043051719665527
    4. '	in' → logprob: -13.543051719665527
    5. '<|end|>' → logprob: -13.793051719665527
    6. '  ' → logprob: -13.918051719665527
    7. '   ' → logprob: -14.043051719665527
    8. '0' → logprob: -14.043051719665527
    9. '(' → logprob: -14.293051719665527
    10. ')' → logprob: -14.418051719665527

Token 238: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31424757838249207
    2. ' range' → logprob: -1.3142476081848145
    3. '(range' → logprob: -6.9392476081848145
    4. 'W' → logprob: -11.689247131347656
    5. '	range' → logprob: -13.064247131347656
    6. '(W' → logprob: -13.314247131347656
    7. ' W' → logprob: -13.564247131347656
    8. '0' → logprob: -13.564247131347656
    9. '   ' → logprob: -14.439247131347656
    10. ' ' → logprob: -14.814247131347656

Token 239: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.000618792837485671
    2. '(' → logprob: -7.500618934631348
    3. 'W' → logprob: -9.750618934631348
    4. '   ' → logprob: -12.750618934631348
    5. '0' → logprob: -13.375618934631348
    6. '1' → logprob: -13.875618934631348
    7. 'range' → logprob: -15.000618934631348
    8. '       ' → logprob: -15.250618934631348
    9. ' (' → logprob: -15.250618934631348
    10. ' W' → logprob: -15.375618934631348

Token 240: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22630073130130768
    2. '):
' → logprob: -1.6013007164001465
    3. ':' → logprob: -8.226301193237305
    4. ')' → logprob: -8.351301193237305
    5. ' ):' → logprob: -8.476301193237305
    6. '   ' → logprob: -9.851301193237305
    7. ' ):
' → logprob: -9.976301193237305
    8. '):

' → logprob: -11.351301193237305
    9. '=' → logprob: -11.601301193237305
    10. '       ' → logprob: -11.601301193237305

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03268877789378166
    2. '       ' → logprob: -3.532688856124878
    3. '<|end|>' → logprob: -6.907688617706299
    4. ' if' → logprob: -7.032688617706299
    5. '	       ' → logprob: -7.907688617706299
    6. '#' → logprob: -9.032689094543457
    7. '<|end|>' → logprob: -9.282689094543457
    8. 'if' → logprob: -9.532689094543457
    9. '   ' → logprob: -9.782689094543457
    10. ',' → logprob: -10.157689094543457

Token 242: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1545472890138626
    2. ' if' → logprob: -2.1545472145080566
    3. '           ' → logprob: -3.6545472145080566
    4. '       ' → logprob: -6.654547214508057
    5. '	if' → logprob: -9.904547691345215
    6. '   ' → logprob: -11.029547691345215
    7. 'If' → logprob: -12.279547691345215
    8. 'token' → logprob: -13.279547691345215
    9. '               ' → logprob: -13.404547691345215
    10. '	   ' → logprob: -13.529547691345215

Token 243: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.11284392327070236
    2. 'grid' → logprob: -2.2378439903259277
    3. '   ' → logprob: -11.86284351348877
    4. ' ' → logprob: -12.23784351348877
    5. '(grid' → logprob: -12.23784351348877
    6. '	grid' → logprob: -12.73784351348877
    7. 'Grid' → logprob: -14.11284351348877
    8. ' ' → logprob: -15.36284351348877
    9. 'j' → logprob: -15.61284351348877
    10. ' row' → logprob: -15.61284351348877

Token 244: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.726595241460018e-05
    2. '[j' → logprob: -10.25003719329834
    3. '[I' → logprob: -13.87503719329834
    4. '[' → logprob: -14.50003719329834
    5. ' [' → logprob: -15.62503719329834
    6. '][' → logprob: -16.000038146972656
    7. '```' → logprob: -17.250038146972656
    8. ')[' → logprob: -17.250038146972656
    9. '   ' → logprob: -17.500038146972656
    10. '[
' → logprob: -17.750038146972656

Token 245: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12020089477300644
    2. '][' → logprob: -2.4952008724212646
    3. '[i' → logprob: -3.4952008724212646
    4. '[' → logprob: -8.245201110839844
    5. ']' → logprob: -9.745201110839844
    6. ' [' → logprob: -10.245201110839844
    7. '[
' → logprob: -11.120201110839844
    8. '[I' → logprob: -11.245201110839844
    9. ' ][' → logprob: -11.245201110839844
    10. '   ' → logprob: -12.495201110839844

Token 246: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -13.375003814697266
    3. ']' → logprob: -13.500003814697266
    4. '[j' → logprob: -15.000003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ' ' → logprob: -16.750003814697266
    7. '```' → logprob: -16.875003814697266
    8. '	j' → logprob: -17.125003814697266
    9. '0' → logprob: -17.875003814697266
    10. ')' → logprob: -18.000003814697266

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07984976470470428
    2. ']==' → logprob: -2.9548497200012207
    3. '==' → logprob: -3.8298497200012207
    4. ' ==' → logprob: -6.204849720001221
    5. ']=='' → logprob: -7.579849720001221
    6. ''' → logprob: -8.954850196838379
    7. '=='' → logprob: -9.079850196838379
    8. ' ]' → logprob: -9.204850196838379
    9. ')' → logprob: -11.454850196838379
    10. ']!=' → logprob: -11.454850196838379

Token 248: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.039772529155015945
    2. ' ==' → logprob: -3.2897725105285645
    3. '=='' → logprob: -6.5397725105285645
    4. '!=' → logprob: -9.164772987365723
    5. ']==' → logprob: -9.789772987365723
    6. '.' → logprob: -10.414772987365723
    7. '==
' → logprob: -10.539772987365723
    8. ']' → logprob: -11.289772987365723
    9. '[' → logprob: -11.289772987365723
    10. '=' → logprob: -11.789772987365723

Token 249: ' '#' (ID: 11284)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.09460385888814926
    2. ''#' → logprob: -2.4696037769317627
    3. ''' → logprob: -5.594604015350342
    4. '"."' → logprob: -6.969604015350342
    5. '".' → logprob: -7.969604015350342
    6. '"#' → logprob: -8.719603538513184
    7. ' '.'' → logprob: -8.719603538513184
    8. ''*' → logprob: -9.344603538513184
    9. ' '#'' → logprob: -9.594603538513184
    10. ''o' → logprob: -10.219603538513184

Token 250: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03537008538842201
    2. '':
' → logprob: -3.535370111465454
    3. ''' → logprob: -5.660369873046875
    4. ':' → logprob: -6.285369873046875
    5. ':
' → logprob: -8.785369873046875
    6. '':
' → logprob: -9.660369873046875
    7. ' ':' → logprob: -11.160369873046875
    8. '':

' → logprob: -12.160369873046875
    9. '":' → logprob: -12.285369873046875
    10. ' '' → logprob: -12.285369873046875

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050400346517562866
    2. 'cnt' → logprob: -3.1754002571105957
    3. ' cnt' → logprob: -5.175400257110596
    4. '           ' → logprob: -6.800400257110596
    5. '	cnt' → logprob: -7.800400257110596
    6. '0' → logprob: -9.425400733947754
    7. '[cnt' → logprob: -10.300400733947754
    8. '
' → logprob: -10.925400733947754
    9. '(cnt' → logprob: -11.175400733947754
    10. '                   ' → logprob: -11.300400733947754

Token 252: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0003788376343436539
    2. ' cnt' → logprob: -8.250378608703613
    3. '               ' → logprob: -9.250378608703613
    4. '0' → logprob: -11.250378608703613
    5. '	cnt' → logprob: -12.125378608703613
    6. '           ' → logprob: -13.375378608703613
    7. '                   ' → logprob: -14.250378608703613
    8. 'count' → logprob: -15.375378608703613
    9. '[cnt' → logprob: -15.625378608703613
    10. '   ' → logprob: -16.00037956237793

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052342405542731285
    2. ' =' → logprob: -5.255234241485596
    3. '0' → logprob: -14.755233764648438
    4. ' ' → logprob: -17.505233764648438
    5. '+=' → logprob: -17.505233764648438
    6. '   ' → logprob: -18.630233764648438
    7. '＝' → logprob: -18.755233764648438
    8. '.=' → logprob: -19.005233764648438
    9. '=

' → logprob: -19.130233764648438
    10. '=
' → logprob: -19.255233764648438

Token 254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015045057516545057
    2. ' ' → logprob: -6.501504421234131
    3. '   ' → logprob: -13.501504898071289
    4. '1' → logprob: -15.001504898071289
    5. '  ' → logprob: -16.00150489807129
    6. 'j' → logprob: -16.00150489807129
    7. '    ' → logprob: -17.12650489807129
    8. '۰' → logprob: -17.25150489807129
    9. ' ' → logprob: -17.87650489807129
    10. ' -' → logprob: -18.18900489807129

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020544764993246645
    2. ' ' → logprob: -8.500205039978027
    3. 'j' → logprob: -14.375205039978027
    4. '-' → logprob: -14.625205039978027
    5. ' -' → logprob: -15.312705039978027
    6. '1' → logprob: -15.375205039978027
    7. '   ' → logprob: -15.625205039978027
    8. '000' → logprob: -16.562705993652344
    9. '00' → logprob: -16.687705993652344
    10. '  ' → logprob: -16.875205993652344

Token 256: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001983236987143755
    2. ' else' → logprob: -6.626983165740967
    3. 'else' → logprob: -7.501983165740967
    4. '               ' → logprob: -9.876983642578125
    5. '            
' → logprob: -10.626983642578125
    6. 'elif' → logprob: -12.626983642578125
    7. '    
' → logprob: -12.751983642578125
    8. ';' → logprob: -12.876983642578125
    9. '#' → logprob: -12.876983642578125
    10. '
' → logprob: -13.001983642578125

Token 257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016087667318060994
    2. ' else' → logprob: -7.001608848571777
    3. 'else' → logprob: -7.376608848571777
    4. '               ' → logprob: -9.876608848571777
    5. '            
' → logprob: -12.126608848571777
    6. 'elif' → logprob: -12.876608848571777
    7. '		' → logprob: -13.501608848571777
    8. '#' → logprob: -13.501608848571777
    9. '.' → logprob: -13.501608848571777
    10. ',' → logprob: -13.751608848571777

Token 258: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6582164764404297
    2. '           ' → logprob: -1.1582164764404297
    3. ' else' → logprob: -1.7832164764404297
    4. 'elif' → logprob: -10.15821647644043
    5. '	else' → logprob: -11.15821647644043
    6. '       ' → logprob: -11.78321647644043
    7. '	       ' → logprob: -12.40821647644043
    8. ' elif' → logprob: -12.40821647644043
    9. '               ' → logprob: -12.78321647644043
    10. '		' → logprob: -12.78321647644043

Token 259: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2833808958530426
    2. ':' → logprob: -2.0333809852600098
    3. ':
' → logprob: -2.1583809852600098
    4. '           ' → logprob: -9.033380508422852
    5. ',' → logprob: -9.283380508422852
    6. ' :
' → logprob: -10.783380508422852
    7. '              ' → logprob: -10.783380508422852
    8. '):
' → logprob: -10.908380508422852
    9. '                   ' → logprob: -11.408380508422852
    10. ' :' → logprob: -11.533380508422852

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007081083487719297
    2. 'cnt' → logprob: -5.007081031799316
    3. '           ' → logprob: -8.757081031799316
    4. '
' → logprob: -9.132081031799316
    5. ' cnt' → logprob: -9.882081031799316
    6. '                   ' → logprob: -11.257081031799316
    7. '   ' → logprob: -11.382081031799316
    8. '	cnt' → logprob: -11.882081031799316
    9. '[cnt' → logprob: -12.507081031799316
    10. '              ' → logprob: -12.507081031799316

Token 261: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0041346801444888115
    2. '               ' → logprob: -5.754134654998779
    3. ' cnt' → logprob: -7.004134654998779
    4. 'l' → logprob: -10.629135131835938
    5. '                   ' → logprob: -11.504135131835938
    6. '           ' → logprob: -12.004135131835938
    7. '	cnt' → logprob: -12.379135131835938
    8. '   ' → logprob: -13.629135131835938
    9. '[cnt' → logprob: -13.754135131835938
    10. '(cnt' → logprob: -14.629135131835938

Token 262: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16084475815296173
    2. ' +=' → logprob: -1.9108448028564453
    3. '=' → logprob: -7.410844802856445
    4. ' =' → logprob: -11.160844802856445
    5. ']+=' → logprob: -13.785844802856445
    6. '   ' → logprob: -14.910844802856445
    7. '+' → logprob: -16.535844802856445
    8. ' ' → logprob: -17.660844802856445
    9. '+=(' → logprob: -18.910844802856445
    10. '    ' → logprob: -19.285844802856445

Token 263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.75000762939453
    4. '
' → logprob: -19.37500762939453
    5. 'l' → logprob: -20.37500762939453
    6. '１' → logprob: -21.25000762939453
    7. '  ' → logprob: -21.81250762939453
    8. '۱' → logprob: -21.81250762939453
    9. '+' → logprob: -22.00000762939453
    10. '```' → logprob: -22.12500762939453

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.625035285949707
    4. 'l' → logprob: -18.125036239624023
    5. '
' → logprob: -18.125036239624023
    6. '  ' → logprob: -19.062536239624023
    7. '```' → logprob: -19.437536239624023
    8. '+' → logprob: -20.000036239624023
    9. '１' → logprob: -20.000036239624023
    10. '۱' → logprob: -20.250036239624023

Token 265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002172028413042426
    2. '
' → logprob: -6.502171993255615
    3. '               ' → logprob: -7.877171993255615
    4. '            
' → logprob: -9.002172470092773
    5. ' l' → logprob: -9.252172470092773
    6. 'l' → logprob: -10.502172470092773
    7. ' 
' → logprob: -11.752172470092773
    8. ',' → logprob: -11.877172470092773
    9. '    
' → logprob: -12.252172470092773
    10. '
' → logprob: -12.377172470092773

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044496997725218534
    2. ' l' → logprob: -8.125445365905762
    3. '               ' → logprob: -9.375445365905762
    4. 'l' → logprob: -9.750445365905762
    5. '       ' → logprob: -13.000445365905762
    6. '		' → logprob: -13.625445365905762
    7. '          ' → logprob: -14.500445365905762
    8. '            
' → logprob: -14.625445365905762
    9. ',l' → logprob: -15.375445365905762
    10. '                   ' → logprob: -15.500445365905762

Token 267: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42766910791397095
    2. 'l' (adapté à ' l') → logprob: -1.1776690483093262
    3. ' l' → logprob: -3.302669048309326
    4. '       ' → logprob: -5.802669048309326
    5. '   ' → logprob: -9.052669525146484
    6. '               ' → logprob: -10.302669525146484
    7. '          ' → logprob: -11.677669525146484
    8. '	l' → logprob: -12.177669525146484
    9. '         ' → logprob: -12.927669525146484
    10. '        ' → logprob: -13.427669525146484

Token 268: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.87500286102295
    3. '[j' → logprob: -14.25000286102295
    4. '[I' → logprob: -15.00000286102295
    5. '```' → logprob: -15.62500286102295
    6. ' [' → logprob: -16.250001907348633
    7. '][' → logprob: -16.625001907348633
    8. '[u' → logprob: -17.000001907348633
    9. '[l' → logprob: -17.375001907348633
    10. '[m' → logprob: -17.875001907348633

Token 269: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014508290914818645
    2. '[j' → logprob: -6.751451015472412
    3. ']' → logprob: -8.376450538635254
    4. '[' → logprob: -10.501450538635254
    5. ' ][' → logprob: -10.751450538635254
    6. ']][' → logprob: -15.126450538635254
    7. '[i' → logprob: -15.501450538635254
    8. '"][' → logprob: -15.626450538635254
    9. '```' → logprob: -16.25145149230957
    10. ''][' → logprob: -16.62645149230957

Token 270: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -17.250001907348633
    4. ']' → logprob: -19.125001907348633
    5. '[j' → logprob: -19.375001907348633
    6. '
' → logprob: -20.250001907348633
    7. ' ' → logprob: -20.500001907348633
    8. '][' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '```' → logprob: -21.000001907348633

Token 271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00352084101177752
    2. ']=' → logprob: -6.128520965576172
    3. '=' → logprob: -6.878520965576172
    4. ' ]' → logprob: -8.503520965576172
    5. ' =' → logprob: -9.253520965576172
    6. ')' → logprob: -12.003520965576172
    7. ']+=' → logprob: -16.253520965576172
    8. ')=' → logprob: -16.378520965576172
    9. '[' → logprob: -16.753520965576172
    10. ' ' → logprob: -16.878520965576172

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. '=int' → logprob: -17.061967849731445
    5. '=c' → logprob: -17.561967849731445
    6. '＝' → logprob: -17.936967849731445
    7. '=count' → logprob: -19.436967849731445
    8. '.=' → logprob: -19.686967849731445
    9. ')' → logprob: -19.811967849731445
    10. '=end' → logprob: -19.936967849731445

Token 273: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.5491004129871726e-05
    2. ' cnt' → logprob: -10.000045776367188
    3. '(cnt' → logprob: -18.000045776367188
    4. '	cnt' → logprob: -18.375045776367188
    5. '[cnt' → logprob: -19.500045776367188
    6. 'count' → logprob: -20.625045776367188
    7. 'c' → logprob: -21.875045776367188
    8. 'cont' → logprob: -22.125045776367188
    9. '   ' → logprob: -22.125045776367188
    10. 'cn' → logprob: -22.500045776367188

Token 274: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05667567253112793
    2. '\n' → logprob: -4.181675910949707
    3. ' 
' → logprob: -4.556675910949707
    4. ' ' → logprob: -4.931675910949707
    5. '   ' → logprob: -5.431675910949707
    6. '' → logprob: -5.431675910949707
    7. '  
' → logprob: -5.556675910949707
    8. '```' → logprob: -5.806675910949707
    9. '<|end|>' → logprob: -6.306675910949707
    10. '    
' → logprob: -6.681675910949707

Token 277: ' On' (ID: 2160)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22305457293987274
    2. 'for' → logprob: -1.9730545282363892
    3. ' for' → logprob: -3.3480546474456787
    4. '#' → logprob: -4.8480544090271
    5. '\n' → logprob: -5.0980544090271
    6. '   ' → logprob: -5.4730544090271
    7. ' 
' → logprob: -6.2230544090271
    8. '  
' → logprob: -6.4730544090271
    9. '

' → logprob: -6.7230544090271
    10. ' ' → logprob: -7.0980544090271

Token 278: ' regarde' (ID: 115760)
  Prédit: ' regarde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' regarde' → logprob: -0.02022908814251423
    2. 'reg' → logprob: -4.270228862762451
    3. 'for' → logprob: -6.645228862762451
    4. '#' → logprob: -7.020228862762451
    5. ' continue' → logprob: -7.020228862762451
    6. ' regard' → logprob: -7.270228862762451
    7. 'continue' → logprob: -7.395228862762451
    8. ' reg' → logprob: -7.645228862762451
    9. 'look' → logprob: -7.895228862762451
    10. ' for' → logprob: -8.02022933959961

Token 279: ' à' (ID: 1221)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.31456756591796875
    2. 'vers' → logprob: -1.3145675659179688
    3. ' ' → logprob: -7.314567565917969
    4. ' à' → logprob: -8.189567565917969
    5. 'à' → logprob: -8.564567565917969
    6. ' ' → logprob: -10.064567565917969
    7. 'tow' → logprob: -10.689567565917969
    8. '```' → logprob: -10.939567565917969
    9. '   ' → logprob: -11.064567565917969
    10. '#' → logprob: -11.189567565917969

Token 280: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.016763538122177124
    2. ' droite' → logprob: -4.141763687133789
    3. 'la' → logprob: -8.266763687133789
    4. 'l' → logprob: -8.391763687133789
    5. ' ' → logprob: -9.141763687133789
    6. 'g' → logprob: -10.266763687133789
    7. 'd' → logprob: -10.641763687133789
    8. 'Dro' → logprob: -11.141763687133789
    9. '#' → logprob: -11.391763687133789
    10. 'right' → logprob: -11.641763687133789

Token 281: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760244727134705
    2. ' for' → logprob: -0.8260244727134705
    3. '   ' → logprob: -9.576024055480957
    4. ' ' → logprob: -12.201024055480957
    5. '	for' → logprob: -12.326024055480957
    6. '
' → logprob: -13.201024055480957
    7. '    
' → logprob: -13.701024055480957
    8. '  
' → logprob: -13.951024055480957
    9. '  ' → logprob: -14.826024055480957
    10. ',' → logprob: -15.076024055480957

Token 282: ' style' (ID: 2713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004693799186497927
    2. ' for' → logprob: -5.379693984985352
    3. '   ' → logprob: -9.754693984985352
    4. ')' → logprob: -12.629693984985352
    5. 'cnt' → logprob: -12.879693984985352
    6. ' ' → logprob: -13.504693984985352
    7. '
' → logprob: -13.629693984985352
    8. '```' → logprob: -13.754693984985352
    9. '...' → logprob: -14.004693984985352
    10. '    ' → logprob: -14.254693984985352

Token 283: ' similaire' (ID: 170967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47481569647789
    2. ' for' → logprob: -0.9748157262802124
    3. '   ' → logprob: -7.224815845489502
    4. '```' → logprob: -12.724815368652344
    5. '
' → logprob: -12.849815368652344
    6. ' ' → logprob: -13.099815368652344
    7. '	for' → logprob: -13.849815368652344
    8. '  ' → logprob: -14.474815368652344
    9. '    
' → logprob: -15.224815368652344
    10. '    ' → logprob: -15.849815368652344

Token 284: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6211722493171692
    2. ' for' → logprob: -0.8711722493171692
    3. '   ' → logprob: -3.1211721897125244
    4. ' ' → logprob: -9.621171951293945
    5. '	for' → logprob: -10.871171951293945
    6. '  ' → logprob: -11.496171951293945
    7. ',' → logprob: -11.996171951293945
    8. '```' → logprob: -12.371171951293945
    9. '       ' → logprob: -12.996171951293945
    10. '<|end|>' → logprob: -13.121171951293945

Token 285: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31042540073394775
    2. 'range' → logprob: -2.185425281524658
    3. ' range' → logprob: -2.435425281524658
    4. ' for' → logprob: -2.810425281524658
    5. ' reversed' → logprob: -5.685425281524658
    6. '#' → logprob: -6.685425281524658
    7. 'à' → logprob: -8.185425758361816
    8. ' invers' → logprob: -8.560425758361816
    9. 'reverse' → logprob: -8.685425758361816
    10. 'pour' → logprob: -8.685425758361816

Token 286: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04165998101234436
    2. 'é' → logprob: -3.2916600704193115
    3. 'er' → logprob: -5.666659832000732
    4. 'ed' → logprob: -9.16666030883789
    5. 'ée' → logprob: -10.04166030883789
    6. 'i' → logprob: -13.66666030883789
    7. 'o' → logprob: -13.79166030883789
    8. 'es' → logprob: -14.04166030883789
    9. 'et' → logprob: -15.91666030883789
    10. '[' → logprob: -15.91666030883789

Token 287: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20192858576774597
    2. 'for' → logprob: -1.9519286155700684
    3. '   ' → logprob: -3.2019286155700684
    4. ' ' → logprob: -9.95192813873291
    5. '	for' → logprob: -9.95192813873291
    6. '       ' → logprob: -11.07692813873291
    7. ' ' → logprob: -11.82692813873291
    8. '  ' → logprob: -11.82692813873291
    9. '```' → logprob: -12.20192813873291
    10. ',' → logprob: -12.32692813873291

Token 288: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6991961002349854
    2. 'for' → logprob: -0.6991961002349854
    3. '   ' → logprob: -5.949195861816406
    4. ' 
' → logprob: -6.574195861816406
    5. '  
' → logprob: -6.949195861816406
    6. '
' → logprob: -7.699195861816406
    7. '    
' → logprob: -7.949195861816406
    8. '	for' → logprob: -9.574195861816406
    9. '   
' → logprob: -9.574195861816406
    10. ' ' → logprob: -9.824195861816406

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4744209051132202
    2. ' for' → logprob: -0.9744209051132202
    3. '   ' → logprob: -8.224420547485352
    4. ' ' → logprob: -9.599420547485352
    5. '
' → logprob: -13.599420547485352
    6. '  ' → logprob: -13.724420547485352
    7. 'range' → logprob: -13.849420547485352
    8. ' range' → logprob: -14.224420547485352
    9. '	for' → logprob: -14.349420547485352
    10. ')' → logprob: -14.474420547485352

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20145484805107117
    2. ' i' → logprob: -1.7014548778533936
    3. 'range' → logprob: -10.451455116271973
    4. ' range' → logprob: -11.576455116271973
    5. ' ' → logprob: -13.701455116271973
    6. 'I' → logprob: -14.326455116271973
    7. '	i' → logprob: -15.326455116271973
    8. '(i' → logprob: -15.326455116271973
    9. '[i' → logprob: -15.451455116271973
    10. '  ' → logprob: -15.826455116271973

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023256778717041016
    2. 'in' → logprob: -3.773256778717041
    3. 'range' → logprob: -11.648256301879883
    4. ' ' → logprob: -13.148256301879883
    5. ' range' → logprob: -15.898256301879883
    6. 'import' → logprob: -16.273256301879883
    7. 'n' → logprob: -16.648256301879883
    8. '(' → logprob: -17.023256301879883
    9. 'In' → logprob: -17.023256301879883
    10. 's' → logprob: -17.148256301879883

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01818084716796875
    2. ' range' → logprob: -4.018180847167969
    3. '(range' → logprob: -10.393180847167969
    4. 'ange' → logprob: -15.768180847167969
    5. 'rang' → logprob: -17.39318084716797
    6. '	range' → logprob: -17.76818084716797
    7. '(H' → logprob: -18.14318084716797
    8. ' in' → logprob: -18.64318084716797
    9. ' rang' → logprob: -18.76818084716797
    10. ' ' → logprob: -18.76818084716797

Token 293: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.4391956685576588e-05
    2. 'range' → logprob: -11.000024795532227
    3. ' range' → logprob: -12.875024795532227
    4. '(' → logprob: -13.125024795532227
    5. ' (' → logprob: -13.500024795532227
    6. '(range' → logprob: -13.625024795532227
    7. '(W' → logprob: -15.000024795532227
    8. 'in' → logprob: -16.375024795532227
    9. 's' → logprob: -17.125024795532227
    10. 'H' → logprob: -17.500024795532227

Token 294: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1608811914920807
    2. '):' → logprob: -1.9108811616897583
    3. '):
' → logprob: -8.160881042480469
    4. ':' → logprob: -8.535881042480469
    5. ':
' → logprob: -9.285881042480469
    6. '   ' → logprob: -10.160881042480469
    7. '):

' → logprob: -11.035881042480469
    8. ')' → logprob: -11.785881042480469
    9. 'in' → logprob: -12.285881042480469
    10. '       ' → logprob: -12.785881042480469

Token 295: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3704570233821869
    2. '       ' → logprob: -1.2454570531845093
    3. 'j' → logprob: -4.245457172393799
    4. 'cnt' → logprob: -5.245457172393799
    5. ' j' → logprob: -6.995457172393799
    6. ' cnt' → logprob: -7.620457172393799
    7. '    ' → logprob: -8.37045669555664
    8. '     ' → logprob: -8.62045669555664
    9. '      ' → logprob: -9.24545669555664
    10. 'W' → logprob: -9.62045669555664

Token 296: ' c' (ID: 274)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.013255055993795395
    2. ' cnt' → logprob: -4.6382551193237305
    3. '   ' → logprob: -5.7632551193237305
    4. '       ' → logprob: -8.01325511932373
    5. ' ' → logprob: -11.76325511932373
    6. '	cnt' → logprob: -11.88825511932373
    7. 'j' → logprob: -12.63825511932373
    8. '    ' → logprob: -14.13825511932373
    9. '           ' → logprob: -14.76325511932373
    10. '  ' → logprob: -14.88825511932373

Token 297: ' =' (ID: 314)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.010012354701757431
    2. 'ount' → logprob: -5.385012149810791
    3. ' in' → logprob: -6.385012149810791
    4. 'ont' → logprob: -6.385012149810791
    5. ' =' → logprob: -7.135012149810791
    6. '=' → logprob: -7.510012149810791
    7. 't' → logprob: -8.38501262664795
    8. '   ' → logprob: -9.38501262664795
    9. 'nts' → logprob: -9.76001262664795
    10. 'ounter' → logprob: -10.13501262664795

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005874283146113157
    2. 'nt' → logprob: -5.505874156951904
    3. ' ' → logprob: -6.755874156951904
    4. 'W' → logprob: -7.505874156951904
    5. 'ount' → logprob: -10.380874633789062
    6. 'cnt' → logprob: -11.130874633789062
    7. 'ont' → logprob: -11.380874633789062
    8. 'nts' → logprob: -11.505874633789062
    9. 'ounter' → logprob: -12.755874633789062
    10. 't' → logprob: -13.380874633789062

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002380046295002103
    2. ' ' → logprob: -6.252379894256592
    3. 'nt' → logprob: -8.25238037109375
    4. 'ount' → logprob: -8.62738037109375
    5. 'ont' → logprob: -11.75238037109375
    6. 'ounter' → logprob: -13.37738037109375
    7. 'cnt' → logprob: -14.12738037109375
    8. 'nts' → logprob: -14.75238037109375
    9. 'W' → logprob: -15.37738037109375
    10. 't' → logprob: -15.75238037109375

Token 300: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7482580542564392
    2. '       ' → logprob: -1.248258113861084
    3. '=' → logprob: -1.873258113861084
    4. ' for' → logprob: -3.498258113861084
    5. '   ' → logprob: -3.873258113861084
    6. ' =' → logprob: -4.623258113861084
    7. ' ' → logprob: -4.873258113861084
    8. '  ' → logprob: -5.748258113861084
    9. '      ' → logprob: -5.873258113861084
    10. '    ' → logprob: -6.123258113861084

Token 301: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3097376227378845
    2. '=' → logprob: -2.1847376823425293
    3. '       ' → logprob: -2.4347376823425293
    4. ' for' → logprob: -3.3097376823425293
    5. ' =' → logprob: -4.684737682342529
    6. '   ' → logprob: -5.184737682342529
    7. 'W' → logprob: -5.184737682342529
    8. ' ' → logprob: -6.059737682342529
    9. '
' → logprob: -6.684737682342529
    10. '     ' → logprob: -6.809737682342529

Token 302: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037037418223917484
    2. '       ' → logprob: -8.375370025634766
    3. ' for' → logprob: -9.000370025634766
    4. '   ' → logprob: -11.250370025634766
    5. 'r' → logprob: -13.500370025634766
    6. 'or' → logprob: -14.250370025634766
    7. ' ' → logprob: -14.500370025634766
    8. '     ' → logprob: -15.000370025634766
    9. '	for' → logprob: -15.375370025634766
    10. '      ' → logprob: -15.750370025634766

Token 303: ' pas' (ID: 2173)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5730106830596924
    2. 'for' → logprob: -0.9480106830596924
    3. ' range' → logprob: -3.8230106830596924
    4. 'W' → logprob: -4.198010444641113
    5. ' for' → logprob: -4.698010444641113
    6. ' W' → logprob: -7.573010444641113
    7. 'r' → logprob: -7.698010444641113
    8. '   ' → logprob: -7.948010444641113
    9. 'in' → logprob: -8.073010444641113
    10. 'j' → logprob: -8.073010444641113

Token 304: ' besoin' (ID: 27703)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24335859715938568
    2. ' range' → logprob: -1.7433586120605469
    3. 'for' → logprob: -3.493358612060547
    4. ' for' → logprob: -5.368358612060547
    5. 'r' → logprob: -7.118358612060547
    6. ' in' → logprob: -7.368358612060547
    7. '(range' → logprob: -7.368358612060547
    8. ' reversed' → logprob: -7.493358612060547
    9. '<|end|>' → logprob: -7.493358612060547
    10. ')' → logprob: -7.618358612060547

Token 305: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.121984839439392
    2. 'for' → logprob: -1.746984839439392
    3. '(range' → logprob: -1.746984839439392
    4. ' for' → logprob: -1.996984839439392
    5. '       ' → logprob: -2.6219849586486816
    6. ' range' → logprob: -2.7469849586486816
    7. '(j' → logprob: -3.8719849586486816
    8. '(W' → logprob: -4.246984958648682
    9. '(' → logprob: -5.621984958648682
    10. '           ' → logprob: -5.746984958648682

Token 306: ' sorted' (ID: 20099)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02769271284341812
    2. ' range' → logprob: -3.6526927947998047
    3. 're' → logprob: -7.777692794799805
    4. 'for' → logprob: -7.777692794799805
    5. 'W' → logprob: -8.402692794799805
    6. 'j' → logprob: -9.277692794799805
    7. 'r' → logprob: -9.402692794799805
    8. ' reversed' → logprob: -9.902692794799805
    9. ' for' → logprob: -10.777692794799805
    10. '(range' → logprob: -10.902692794799805

Token 307: ' ou' (ID: 2031)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0076334853656589985
    2. 'range' → logprob: -4.882633686065674
    3. ' range' → logprob: -11.632633209228516
    4. 'for' → logprob: -12.132633209228516
    5. '(' → logprob: -12.257633209228516
    6. '   ' → logprob: -12.382633209228516
    7. ',' → logprob: -13.382633209228516
    8. '(reverse' → logprob: -14.257633209228516
    9. '(re' → logprob: -14.882633209228516
    10. ' (' → logprob: -15.257633209228516

Token 308: ' truc' (ID: 58342)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062191300094127655
    2. 're' → logprob: -2.8121912479400635
    3. ' range' → logprob: -9.312191009521484
    4. 'reverse' → logprob: -10.062191009521484
    5. '```' → logprob: -10.187191009521484
    6. ' reversed' → logprob: -10.937191009521484
    7. '   ' → logprob: -10.937191009521484
    8. '(range' → logprob: -11.562191009521484
    9. 'for' → logprob: -12.812191009521484
    10. 'enumer' → logprob: -13.312191009521484

Token 309: ' fancy' (ID: 39357)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.1702684760093689
    2. 'range' → logprob: -2.0452685356140137
    3. ' reversed' → logprob: -4.670268535614014
    4. 're' → logprob: -5.170268535614014
    5. 'for' → logprob: -5.670268535614014
    6. 'reverse' → logprob: -5.795268535614014
    7. '   ' → logprob: -6.670268535614014
    8. ' range' → logprob: -6.920268535614014
    9. ' for' → logprob: -7.295268535614014
    10. '(re' → logprob: -7.295268535614014

Token 310: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1949771642684937
    2. 'range' → logprob: -1.3199771642684937
    3. ' for' → logprob: -1.8199771642684937
    4. ' in' → logprob: -2.194977283477783
    5. ' range' → logprob: -2.194977283477783
    6. 'in' → logprob: -3.819977283477783
    7. '   ' → logprob: -4.194977283477783
    8. '       ' → logprob: -5.319977283477783
    9. '(range' → logprob: -6.819977283477783
    10. ' reversed' → logprob: -6.819977283477783

Token 311: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12551307678222656
    2. ' for' → logprob: -2.3755130767822266
    3. 'range' → logprob: -3.7505130767822266
    4. ' range' → logprob: -6.875513076782227
    5. 'j' → logprob: -8.375513076782227
    6. '   ' → logprob: -8.875513076782227
    7. '       ' → logprob: -10.625513076782227
    8. ' ' → logprob: -11.625513076782227
    9. 'r' → logprob: -11.625513076782227
    10. ' j' → logprob: -11.750513076782227

Token 312: ' va' (ID: 3423)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3385941684246063
    2. ' range' → logprob: -1.3385941982269287
    3. ' in' → logprob: -4.33859395980835
    4. 'in' → logprob: -5.21359395980835
    5. ' for' → logprob: -5.71359395980835
    6. 'for' → logprob: -6.08859395980835
    7. 're' → logprob: -8.088594436645508
    8. '(range' → logprob: -8.588594436645508
    9. '   ' → logprob: -9.213594436645508
    10. '	range' → logprob: -9.463594436645508

Token 313: ' à' (ID: 1221)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08076648414134979
    2. ' range' → logprob: -2.580766439437866
    3. 're' → logprob: -7.455766677856445
    4. '   ' → logprob: -7.705766677856445
    5. 'W' → logprob: -7.830766677856445
    6. 'for' → logprob: -8.830766677856445
    7. ' reversed' → logprob: -8.830766677856445
    8. ' W' → logprob: -9.830766677856445
    9. 'r' → logprob: -10.455766677856445
    10. ' for' → logprob: -10.705766677856445

Token 314: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03194238618016243
    2. 're' → logprob: -3.781942367553711
    3. ' range' → logprob: -4.781942367553711
    4. ' reversed' → logprob: -9.156942367553711
    5. '   ' → logprob: -9.656942367553711
    6. 'W' → logprob: -10.031942367553711
    7. ' ' → logprob: -10.781942367553711
    8. 'reverse' → logprob: -11.406942367553711
    9. 'r' → logprob: -11.656942367553711
    10. 'rang' → logprob: -11.781942367553711

Token 315: ''en' (ID: 16740)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4917290210723877
    2. 'range' → logprob: -1.6167290210723877
    3. 'W' → logprob: -2.2417290210723877
    4. ' reversed' → logprob: -2.6167290210723877
    5. ' range' → logprob: -2.6167290210723877
    6. 'reverse' → logprob: -2.8667290210723877
    7. '[::-' → logprob: -2.8667290210723877
    8. '-' → logprob: -3.2417290210723877
    9. 'e' → logprob: -3.3667290210723877
    10. ' W' → logprob: -3.6167290210723877

Token 316: 'vers' (ID: 3674)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03019218146800995
    2. 'vers' → logprob: -3.5301921367645264
    3. 'ds' → logprob: -8.530192375183105
    4. '```' → logprob: -9.655192375183105
    5. 'range' → logprob: -10.905192375183105
    6. 'dl' → logprob: -10.905192375183105
    7. 'dere' → logprob: -11.280192375183105
    8. 're' → logprob: -11.405192375183105
    9. 'for' → logprob: -11.655192375183105
    10. ']' → logprob: -11.780192375183105

Token 317: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1006757020950317
    2. 'for' → logprob: -1.1006757020950317
    3. 'range' → logprob: -1.3506757020950317
    4. ' range' → logprob: -2.725675582885742
    5. '(range' → logprob: -5.350675582885742
    6. ' in' → logprob: -5.600675582885742
    7. '   ' → logprob: -7.475675582885742
    8. 'in' → logprob: -7.850675582885742
    9. '(W' → logprob: -8.975675582885742
    10. '       ' → logprob: -9.100675582885742

Token 318: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7952783107757568
    2. ' for' → logprob: -1.1702783107757568
    3. 'W' → logprob: -2.420278310775757
    4. 'range' → logprob: -2.420278310775757
    5. ' range' → logprob: -3.170278310775757
    6. ' W' → logprob: -4.295278549194336
    7. '   ' → logprob: -5.795278549194336
    8. ' in' → logprob: -7.295278549194336
    9. 'in' → logprob: -8.420278549194336
    10. 'r' → logprob: -8.670278549194336

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.43473902344703674
    2. 'range' → logprob: -1.4347389936447144
    3. ' for' → logprob: -2.559739112854004
    4. ' range' → logprob: -3.809739112854004
    5. 'W' → logprob: -4.309739112854004
    6. '   ' → logprob: -7.309739112854004
    7. ' W' → logprob: -8.059739112854004
    8. 'j' → logprob: -8.309739112854004
    9. 'r' → logprob: -8.934739112854004
    10. ' ' → logprob: -10.434739112854004

Token 320: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759580135345459
    2. ' j' → logprob: -0.8259580135345459
    3. 'W' → logprob: -11.950958251953125
    4. ' W' → logprob: -12.825958251953125
    5. ' ' → logprob: -13.075958251953125
    6. 'range' → logprob: -13.450958251953125
    7. '	j' → logprob: -13.950958251953125
    8. 'i' → logprob: -14.075958251953125
    9. ' range' → logprob: -14.450958251953125
    10. '_j' → logprob: -14.575958251953125

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014170088805258274
    2. 'in' → logprob: -4.264170169830322
    3. 'range' → logprob: -12.514169692993164
    4. ' ' → logprob: -13.764169692993164
    5. ' range' → logprob: -13.764169692993164
    6. 'W' → logprob: -15.514169692993164
    7. '   ' → logprob: -16.014169692993164
    8. ' W' → logprob: -16.389169692993164
    9. ' reversed' → logprob: -16.639169692993164
    10. ')' → logprob: -16.639169692993164

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12706932425498962
    2. ' range' → logprob: -2.1270692348480225
    3. 're' → logprob: -9.127069473266602
    4. ' reversed' → logprob: -10.627069473266602
    5. '   ' → logprob: -12.377069473266602
    6. '(range' → logprob: -13.377069473266602
    7. '	range' → logprob: -13.627069473266602
    8. 'W' → logprob: -14.627069473266602
    9. ' W' → logprob: -15.127069473266602
    10. ' ' → logprob: -15.252069473266602

Token 323: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.007778052240610123
    2. 'W' → logprob: -4.882778167724609
    3. ' W' → logprob: -8.88277816772461
    4. '(' → logprob: -11.38277816772461
    5. ' (' → logprob: -11.88277816772461
    6. '   ' → logprob: -12.13277816772461
    7. '	W' → logprob: -12.63277816772461
    8. 'range' → logprob: -13.00777816772461
    9. ')' → logprob: -13.63277816772461
    10. '<W' → logprob: -14.50777816772461

Token 324: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06994465738534927
    2. ' -' → logprob: -2.6949446201324463
    3. '   ' → logprob: -12.569944381713867
    4. ')' → logprob: -13.569944381713867
    5. ' ' → logprob: -14.069944381713867
    6. '       ' → logprob: -14.569944381713867
    7. ',' → logprob: -14.694944381713867
    8. ')-' → logprob: -14.694944381713867
    9. '[::-' → logprob: -14.694944381713867
    10. '-re' → logprob: -15.444944381713867

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -9.625067710876465
    3. '-' → logprob: -14.625067710876465
    4. '   ' → logprob: -14.750067710876465
    5. '2' → logprob: -15.125067710876465
    6. '```' → logprob: -15.937567710876465
    7. ' -' → logprob: -16.00006675720215
    8. '  ' → logprob: -16.62506675720215
    9. '...' → logprob: -17.37506675720215
    10. ')' → logprob: -17.50006675720215

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027456742827780545
    2. ',-' → logprob: -8.750274658203125
    3. ' ,' → logprob: -9.125274658203125
    4. ' -' → logprob: -12.875274658203125
    5. '   ' → logprob: -13.875274658203125
    6. ' ,-' → logprob: -13.875274658203125
    7. '-' → logprob: -14.000274658203125
    8. ',None' → logprob: -14.625274658203125
    9. ' ' → logprob: -15.375274658203125
    10. '<|end|>' → logprob: -15.375274658203125

Token 327: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000805341056548059
    2. ' -' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.875804901123047
    4. '0' → logprob: -15.250804901123047
    5. '   ' → logprob: -15.875804901123047
    6. '	' → logprob: -16.750804901123047
    7. '  ' → logprob: -17.000804901123047
    8. '    ' → logprob: -18.375804901123047
    9. '     ' → logprob: -18.625804901123047
    10. '−' → logprob: -19.375804901123047

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.750001907348633
    4. '2' → logprob: -16.500001907348633
    5. '-' → logprob: -17.312501907348633
    6. '  ' → logprob: -17.375001907348633
    7. '

' → logprob: -17.500001907348633
    8. '```' → logprob: -17.562501907348633
    9. '１' → logprob: -18.187501907348633
    10. ' -' → logprob: -18.375001907348633

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018161057960242033
    2. '-' → logprob: -9.250181198120117
    3. ',-' → logprob: -9.500181198120117
    4. ' ,' → logprob: -11.500181198120117
    5. ' -' → logprob: -15.250181198120117
    6. '1' → logprob: -15.750181198120117
    7. '-,' → logprob: -17.000181198120117
    8. ' ,-' → logprob: -17.000181198120117
    9. ',
' → logprob: -17.375181198120117
    10. '```' → logprob: -18.000181198120117

Token 330: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004621422383934259
    2. ' -' → logprob: -5.379621505737305
    3. ' ' → logprob: -14.379621505737305
    4. ')' → logprob: -15.379621505737305
    5. '1' → logprob: -16.254621505737305
    6. '```' → logprob: -16.504621505737305
    7. '):
' → logprob: -16.629621505737305
    8. '   ' → logprob: -16.629621505737305
    9. '-)' → logprob: -17.754621505737305
    10. '<|end|>' → logprob: -17.754621505737305

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. ')' → logprob: -16.12501335144043
    5. '```' → logprob: -16.75001335144043
    6. '-' → logprob: -17.00001335144043
    7. '2' → logprob: -17.56251335144043
    8. '  ' → logprob: -17.93751335144043
    9. '
' → logprob: -18.06251335144043
    10. ',' → logprob: -18.25001335144043

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026362307369709015
    2. '):
' → logprob: -3.651362419128418
    3. ':' → logprob: -10.526362419128418
    4. '):
' → logprob: -11.026362419128418
    5. ')' → logprob: -11.401362419128418
    6. '):

' → logprob: -12.401362419128418
    7. ' ):' → logprob: -13.526362419128418
    8. '   ' → logprob: -14.401362419128418
    9. '       ' → logprob: -14.901362419128418
    10. '():' → logprob: -15.901362419128418

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013930656015872955
    2. '   ' → logprob: -6.138930797576904
    3. '       ' → logprob: -6.388930797576904
    4. '	' → logprob: -6.513930797576904
    5. ' if' → logprob: -6.638930797576904
    6. '		' → logprob: -6.638930797576904
    7. '	   ' → logprob: -7.013930797576904
    8. '	       ' → logprob: -7.138930797576904
    9. '<|end|>' → logprob: -7.138930797576904
    10. ':' → logprob: -7.263930797576904

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4463518261909485
    2. ' if' → logprob: -1.0713517665863037
    3. '           ' → logprob: -4.196352005004883
    4. '               ' → logprob: -6.071352005004883
    5. '   ' → logprob: -10.196352005004883
    6. '	if' → logprob: -10.446352005004883
    7. '```' → logprob: -10.571352005004883
    8. '       ' → logprob: -11.321352005004883
    9. ' ' → logprob: -11.821352005004883
    10. '#' → logprob: -12.571352005004883

Token 335: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.31327399611473083
    2. ' grid' → logprob: -1.3132740259170532
    3. '(grid' → logprob: -11.938274383544922
    4. '	grid' → logprob: -12.688274383544922
    5. '   ' → logprob: -13.688274383544922
    6. 'Grid' → logprob: -14.688274383544922
    7. ' ' → logprob: -15.188274383544922
    8. ':grid' → logprob: -15.188274383544922
    9. '_grid' → logprob: -15.688274383544922
    10. '.grid' → logprob: -15.813274383544922

Token 336: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -11.875009536743164
    3. '[I' → logprob: -13.625009536743164
    4. 'i' → logprob: -14.750009536743164
    5. ' [' → logprob: -15.000009536743164
    6. '<|end|>' → logprob: -15.750009536743164
    7. '[j' → logprob: -15.875009536743164
    8. '[
' → logprob: -16.000009536743164
    9. '```' → logprob: -16.000009536743164
    10. '[int' → logprob: -16.625009536743164

Token 337: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14292897284030914
    2. '][' → logprob: -2.0179290771484375
    3. '[j' → logprob: -9.267929077148438
    4. '[' → logprob: -9.517929077148438
    5. '[I' → logprob: -10.017929077148438
    6. ')[' → logprob: -11.642929077148438
    7. ' ][' → logprob: -12.017929077148438
    8. ' [' → logprob: -12.017929077148438
    9. ''][' → logprob: -13.017929077148438
    10. '```' → logprob: -13.017929077148438

Token 338: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003087678924202919
    2. '[j' → logprob: -8.250308990478516
    3. ' j' → logprob: -11.625308990478516
    4. '[' → logprob: -11.750308990478516
    5. '][' → logprob: -12.250308990478516
    6. '```' → logprob: -12.250308990478516
    7. '#' → logprob: -12.500308990478516
    8. '   ' → logprob: -12.625308990478516
    9. ' ' → logprob: -12.750308990478516
    10. ']' → logprob: -13.250308990478516

Token 339: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011614881455898285
    2. ' ==' → logprob: -5.386614799499512
    3. ']==' → logprob: -5.511614799499512
    4. '==' → logprob: -5.886614799499512
    5. ' ]' → logprob: -9.636614799499512
    6. '[' → logprob: -10.136614799499512
    7. ']=='' → logprob: -10.886614799499512
    8. '']' → logprob: -11.386614799499512
    9. ')' → logprob: -12.136614799499512
    10. '#' → logprob: -12.761614799499512

Token 340: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5233885645866394
    2. '==' → logprob: -0.8983885645866394
    3. ']' → logprob: -9.773388862609863
    4. '#' → logprob: -9.898388862609863
    5. '=='' → logprob: -10.023388862609863
    6. ']==' → logprob: -10.648388862609863
    7. '[' → logprob: -10.648388862609863
    8. '=' → logprob: -10.648388862609863
    9. ')' → logprob: -10.773388862609863
    10. '==
' → logprob: -12.023388862609863

Token 341: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.4825151562690735
    2. ''' → logprob: -0.9825151562690735
    3. ' '#'' → logprob: -4.982515335083008
    4. ' '' → logprob: -6.732515335083008
    5. ' '#' → logprob: -8.482515335083008
    6. '"' → logprob: -10.107515335083008
    7. '	' → logprob: -11.107515335083008
    8. '"#' → logprob: -11.107515335083008
    9. ' ' → logprob: -11.357515335083008
    10. '('#' → logprob: -11.357515335083008

Token 342: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.882473886013031
    2. '               ' → logprob: -1.2574739456176758
    3. ':' → logprob: -1.8824739456176758
    4. ':
' → logprob: -3.132473945617676
    5. ''):
' → logprob: -3.132473945617676
    6. '':
' → logprob: -3.757473945617676
    7. '):
' → logprob: -4.257473945617676
    8. '):' → logprob: -4.757473945617676
    9. ''):' → logprob: -5.257473945617676
    10. ')' → logprob: -5.632473945617676

Token 343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0354016050696373
    2. 'c' → logprob: -3.7854015827178955
    3. ' c' → logprob: -4.785401821136475
    4. '           ' → logprob: -6.535401821136475
    5. '<|end|>' → logprob: -7.535401821136475
    6. '0' → logprob: -7.660401821136475
    7. ' ' → logprob: -7.785401821136475
    8. '                ' → logprob: -8.910401344299316
    9. ')c' → logprob: -8.910401344299316
    10. ')' → logprob: -8.910401344299316

Token 344: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0006952775875106454
    2. '0' → logprob: -7.50069522857666
    3. ' c' → logprob: -9.12569522857666
    4. '               ' → logprob: -10.50069522857666
    5. '           ' → logprob: -12.75069522857666
    6. 'cnt' → logprob: -13.50069522857666
    7. '                   ' → logprob: -14.12569522857666
    8. ' ' → logprob: -15.00069522857666
    9. '   ' → logprob: -16.125696182250977
    10. ')c' → logprob: -16.500696182250977

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804366663098335
    2. ' =' → logprob: -3.288043737411499
    3. '0' → logprob: -13.163043975830078
    4. ' ' → logprob: -15.288043975830078
    5. '   ' → logprob: -17.538043975830078
    6. '=
' → logprob: -17.913043975830078
    7. 'c' → logprob: -18.663043975830078
    8. '.=' → logprob: -19.413043975830078
    9. 's' → logprob: -19.663043975830078
    10. '	' → logprob: -19.788043975830078

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.37504005432129
    4. '               ' → logprob: -19.00004005432129
    5. '  ' → logprob: -19.37504005432129
    6. '           ' → logprob: -19.37504005432129
    7. '۰' → logprob: -19.62504005432129
    8. '=' → logprob: -20.50004005432129
    9. '000' → logprob: -20.62504005432129
    10. '00' → logprob: -21.00004005432129

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -17.375009536743164
    4. '   ' → logprob: -18.500009536743164
    5. '۰' → logprob: -18.875009536743164
    6. '  ' → logprob: -19.875009536743164
    7. '00' → logprob: -20.250009536743164
    8. '
' → logprob: -20.375009536743164
    9. '```' → logprob: -20.375009536743164
    10. '#' → logprob: -20.500009536743164

Token 348: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007634070352651179
    2. 'else' → logprob: -7.250763416290283
    3. ' else' → logprob: -10.375762939453125
    4. '		' → logprob: -12.000762939453125
    5. '<|end|>' → logprob: -12.000762939453125
    6. '	       ' → logprob: -12.750762939453125
    7. '          ' → logprob: -12.875762939453125
    8. '       ' → logprob: -13.750762939453125
    9. '               ' → logprob: -14.250762939453125
    10. '<|end|>' → logprob: -15.125762939453125

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001164864981546998
    2. 'else' → logprob: -6.87616491317749
    3. ' else' → logprob: -9.376164436340332
    4. '<|end|>' → logprob: -10.251164436340332
    5. '	       ' → logprob: -13.001164436340332
    6. '		' → logprob: -13.126164436340332
    7. '       ' → logprob: -13.376164436340332
    8. '          ' → logprob: -13.376164436340332
    9. '               ' → logprob: -13.501164436340332
    10. '<|end|>' → logprob: -14.126164436340332

Token 350: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.597698450088501
    2. 'else' (adapté à ' else') → logprob: -0.847698450088501
    3. ' else' → logprob: -3.847698450088501
    4. '               ' → logprob: -8.972698211669922
    5. '	       ' → logprob: -10.847698211669922
    6. '	else' → logprob: -10.972698211669922
    7. '       ' → logprob: -11.722698211669922
    8. '		' → logprob: -11.972698211669922
    9. '<|end|>' → logprob: -12.722698211669922
    10. '          ' → logprob: -12.847698211669922

Token 351: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00647945748642087
    2. ':' → logprob: -5.131479263305664
    3. '              ' → logprob: -8.131479263305664
    4. '           ' → logprob: -9.006479263305664
    5. '                ' → logprob: -10.006479263305664
    6. ':
' → logprob: -10.381479263305664
    7. '             ' → logprob: -11.631479263305664
    8. '            ' → logprob: -11.631479263305664
    9. '<|end|>' → logprob: -11.881479263305664
    10. ' c' → logprob: -12.256479263305664

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38799306750297546
    2. 'c' → logprob: -1.1379930973052979
    3. ' c' → logprob: -6.887992858886719
    4. '           ' → logprob: -9.637992858886719
    5. '              ' → logprob: -10.637992858886719
    6. '                   ' → logprob: -12.887992858886719
    7. '	c' → logprob: -13.262992858886719
    8. '                ' → logprob: -13.387992858886719
    9. '             ' → logprob: -13.512992858886719
    10. '            ' → logprob: -14.012992858886719

Token 353: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0036287005059421062
    2. '               ' → logprob: -5.753628730773926
    3. ' c' → logprob: -7.753628730773926
    4. '           ' → logprob: -11.003628730773926
    5. '                   ' → logprob: -12.503628730773926
    6. '              ' → logprob: -14.128628730773926
    7. '   ' → logprob: -15.503628730773926
    8. '             ' → logprob: -15.878628730773926
    9. '	c' → logprob: -16.50362777709961
    10. '                ' → logprob: -16.62862777709961

Token 354: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07896304875612259
    2. ' +=' → logprob: -2.578963041305542
    3. '=' → logprob: -9.578963279724121
    4. '+' → logprob: -13.453963279724121
    5. ']+=' → logprob: -13.828963279724121
    6. ' =' → logprob: -14.578963279724121
    7. '   ' → logprob: -14.578963279724121
    8. '[' → logprob: -15.578963279724121
    9. ' ' → logprob: -16.203962326049805
    10. '           ' → logprob: -16.578962326049805

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.128599166870117
    4. ' ' → logprob: -18.378599166870117
    5. '```' → logprob: -18.878599166870117
    6. '0' → logprob: -19.316099166870117
    7. '  ' → logprob: -19.691099166870117
    8. '１' → logprob: -20.128599166870117
    9. '+' → logprob: -20.566099166870117
    10. '[' → logprob: -20.566099166870117

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.2500057220459
    5. '
' → logprob: -18.3750057220459
    6. '0' → logprob: -18.8125057220459
    7. '`' → logprob: -19.4375057220459
    8. '１' → logprob: -20.4375057220459
    9. '  ' → logprob: -20.6250057220459
    10. 'python' → logprob: -20.7500057220459

Token 357: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.4881879400927573e-05
    2. '       ' → logprob: -11.125035285949707
    3. 'r' → logprob: -12.000035285949707
    4. '		' → logprob: -12.125035285949707
    5. '          ' → logprob: -12.375035285949707
    6. 'd' → logprob: -13.625035285949707
    7. '               ' → logprob: -13.875035285949707
    8. '   ' → logprob: -14.500035285949707
    9. ' r' → logprob: -14.625035285949707
    10. '	       ' → logprob: -14.625035285949707

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8908587662735954e-05
    2. '       ' → logprob: -11.875019073486328
    3. '          ' → logprob: -12.500019073486328
    4. '		' → logprob: -12.625019073486328
    5. 'r' → logprob: -12.750019073486328
    6. 'd' → logprob: -14.250019073486328
    7. '               ' → logprob: -15.000019073486328
    8. '   ' → logprob: -15.125019073486328
    9. '	       ' → logprob: -15.125019073486328
    10. ' r' → logprob: -15.500019073486328

Token 359: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0007282786536961794
    2. ' r' → logprob: -7.250728130340576
    3. '           ' → logprob: -11.125728607177734
    4. '   ' → logprob: -12.625728607177734
    5. '       ' → logprob: -15.750728607177734
    6. '               ' → logprob: -16.500728607177734
    7. 'd' → logprob: -16.875728607177734
    8. '```' → logprob: -17.625728607177734
    9. ' ' → logprob: -17.750728607177734
    10. '  ' → logprob: -17.875728607177734

Token 360: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. ' [' → logprob: -16.75
    4. '```' → logprob: -18.125
    5. '[I' → logprob: -18.875
    6. 'i' → logprob: -19.875
    7. '[j' → logprob: -20.125
    8. '[u' → logprob: -20.375
    9. '][' → logprob: -20.625
    10. '[int' → logprob: -20.75

Token 361: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07981575280427933
    2. '][' → logprob: -2.5798158645629883
    3. '[' → logprob: -7.329815864562988
    4. '[j' → logprob: -8.454815864562988
    5. '[I' → logprob: -10.954815864562988
    6. ']' → logprob: -11.704815864562988
    7. '}[' → logprob: -11.829815864562988
    8. ')[' → logprob: -12.079815864562988
    9. '```' → logprob: -12.204815864562988
    10. ' [' → logprob: -12.704815864562988

Token 362: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8193366486229934e-05
    2. '[j' → logprob: -11.125018119812012
    3. ' j' → logprob: -12.625018119812012
    4. '][' → logprob: -16.375019073486328
    5. '   ' → logprob: -16.875019073486328
    6. '```' → logprob: -17.375019073486328
    7. '	j' → logprob: -17.375019073486328
    8. ']' → logprob: -18.000019073486328
    9. ' ' → logprob: -18.375019073486328
    10. '_j' → logprob: -19.500019073486328

Token 363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04117915406823158
    2. '=' → logprob: -3.5411791801452637
    3. ']=' → logprob: -4.541179180145264
    4. ' =' → logprob: -7.291179180145264
    5. ' ]' → logprob: -10.916178703308105
    6. ')' → logprob: -13.166178703308105
    7. '[' → logprob: -14.416178703308105
    8. ')=' → logprob: -15.416178703308105
    9. '<|end|>' → logprob: -17.041179656982422
    10. '>' → logprob: -17.291179656982422

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889077812433243
    2. ' =' → logprob: -2.578890800476074
    3. '[' → logprob: -14.453890800476074
    4. '=c' → logprob: -14.953890800476074
    5. '=j' → logprob: -16.453889846801758
    6. ' ' → logprob: -16.953889846801758
    7. '=r' → logprob: -17.328889846801758
    8. ']=' → logprob: -18.078889846801758
    9. ']' → logprob: -18.203889846801758
    10. '=
' → logprob: -18.328889846801758

Token 365: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009117019944824278
    2. ' c' → logprob: -7.000911712646484
    3. '	c' → logprob: -16.125911712646484
    4. '   ' → logprob: -17.125911712646484
    5. ' ' → logprob: -17.625911712646484
    6. ')c' → logprob: -19.000911712646484
    7. '           ' → logprob: -19.250911712646484
    8. '```' → logprob: -19.500911712646484
    9. '       ' → logprob: -19.625911712646484
    10. '_c' → logprob: -19.813411712646484

Token 366: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.634880542755127
    2. '
' → logprob: -0.759880542755127
    3. '<|end|>' → logprob: -7.384880542755127
    4. '    
' → logprob: -7.759880542755127
    5. ' for' → logprob: -7.884880542755127
    6. '  
' → logprob: -8.634880065917969
    7. 'for' → logprob: -8.759880065917969
    8. '#' → logprob: -9.009880065917969
    9. ' ' → logprob: -9.384880065917969
    10. '  ' → logprob: -9.509880065917969

Token 368: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2352614849805832
    2. '   ' → logprob: -1.6102614402770996
    3. 'for' → logprob: -4.8602614402771
    4. '
' → logprob: -6.4852614402771
    5. ' for' → logprob: -7.8602614402771
    6. '    
' → logprob: -9.860261917114258
    7. ' ' → logprob: -10.735261917114258
    8. ' #' → logprob: -10.735261917114258
    9. '  ' → logprob: -11.110261917114258
    10. '  
' → logprob: -11.735261917114258

Token 369: ' Pare' (ID: 62462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0341537781059742
    2. '#' → logprob: -3.534153699874878
    3. '   ' → logprob: -5.784153938293457
    4. ' for' → logprob: -6.659153938293457
    5. ' #' → logprob: -11.659153938293457
    6. ' ' → logprob: -12.534153938293457
    7. '
' → logprob: -12.534153938293457
    8. 'For' → logprob: -12.534153938293457
    9. '       ' → logprob: -13.034153938293457
    10. '  ' → logprob: -13.159153938293457

Token 370: 'il' (ID: 311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13132275640964508
    2. 'nt' → logprob: -3.1313228607177734
    3. 'u' → logprob: -3.7563228607177734
    4. '#' → logprob: -3.7563228607177734
    5. 't' → logprob: -4.506322860717773
    6. 'r' → logprob: -4.631322860717773
    7. 'i' → logprob: -6.506322860717773
    8. ' for' → logprob: -6.631322860717773
    9. 'int' → logprob: -6.631322860717773
    10. 'l' → logprob: -6.881322860717773

Token 371: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4351731240749359
    2. ' for' → logprob: -1.0601731538772583
    3. '   ' → logprob: -5.060173034667969
    4. '<|end|>' → logprob: -11.060173034667969
    5. ' ' → logprob: -11.310173034667969
    6. '
' → logprob: -11.310173034667969
    7. '  ' → logprob: -11.560173034667969
    8. ',' → logprob: -11.685173034667969
    9. 'i' → logprob: -11.810173034667969
    10. '(' → logprob: -11.935173034667969

Token 372: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12595617771148682
    2. 'range' → logprob: -2.2509560585021973
    3. ' for' → logprob: -5.000956058502197
    4. ' range' → logprob: -5.875956058502197
    5. 'i' → logprob: -6.000956058502197
    6. '(range' → logprob: -7.625956058502197
    7. '#' → logprob: -8.375956535339355
    8. ' i' → logprob: -8.875956535339355
    9. '   ' → logprob: -9.375956535339355
    10. 'H' → logprob: -10.000956535339355

Token 373: ' haut' (ID: 28223)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016400665044784546
    2. 'i' → logprob: -4.3914008140563965
    3. '#' → logprob: -6.1414008140563965
    4. 'u' → logprob: -6.7664008140563965
    5. ' for' → logprob: -7.7664008140563965
    6. 'range' → logprob: -9.266400337219238
    7. '   ' → logprob: -11.141400337219238
    8. 'up' → logprob: -11.766400337219238
    9. 'import' → logprob: -12.266400337219238
    10. ' range' → logprob: -12.391400337219238

Token 374: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005243952851742506
    2. ' for' → logprob: -5.25524377822876
    3. '   ' → logprob: -11.880244255065918
    4. '
' → logprob: -13.380244255065918
    5. ',' → logprob: -14.880244255065918
    6. '```' → logprob: -15.380244255065918
    7. '	for' → logprob: -15.505244255065918
    8. '(' → logprob: -15.505244255065918
    9. ':' → logprob: -15.755244255065918
    10. '#' → logprob: -15.880244255065918

Token 375: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02648189663887024
    2. ' for' → logprob: -3.651481866836548
    3. '   ' → logprob: -8.651481628417969
    4. ' ' → logprob: -12.776481628417969
    5. '
' → logprob: -13.401481628417969
    6. '  ' → logprob: -14.401481628417969
    7. '	for' → logprob: -14.401481628417969
    8. 'pour' → logprob: -14.776481628417969
    9. '#' → logprob: -15.026481628417969
    10. '    
' → logprob: -15.651481628417969

Token 376: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011819059029221535
    2. ' for' → logprob: -4.511818885803223
    3. 'pour' → logprob: -7.386818885803223
    4. '   ' → logprob: -9.261818885803223
    5. ' pour' → logprob: -11.011818885803223
    6. 'on' → logprob: -12.011818885803223
    7. 'c' → logprob: -12.511818885803223
    8. '    ' → logprob: -12.761818885803223
    9. 'à' → logprob: -13.011818885803223
    10. '...' → logprob: -13.011818885803223

Token 377: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6194434762001038
    2. ' for' → logprob: -1.119443416595459
    3. 'continue' → logprob: -2.869443416595459
    4. 'range' → logprob: -3.369443416595459
    5. ' continue' → logprob: -3.494443416595459
    6. ' range' → logprob: -5.119443416595459
    7. 'contin' → logprob: -5.619443416595459
    8. '...' → logprob: -6.494443416595459
    9. 'fait' → logprob: -7.494443416595459
    10. ' va' → logprob: -8.369443893432617

Token 378: ' diff' (ID: 8868)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4232521057128906
    2. '(H' → logprob: -1.5482521057128906
    3. ' for' → logprob: -2.4232521057128906
    4. '(' → logprob: -3.7982521057128906
    5. '   ' → logprob: -4.048252105712891
    6. '()' → logprob: -7.173252105712891
    7. '(range' → logprob: -7.423252105712891
    8. 'range' → logprob: -7.798252105712891
    9. '(i' → logprob: -7.923252105712891
    10. 'in' → logprob: -7.923252105712891

Token 379: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9418643116950989
    2. 'er' → logprob: -1.066864252090454
    3. 'érent' → logprob: -1.441864252090454
    4. 'ér' → logprob: -4.066864490509033
    5. 'érents' → logprob: -4.691864490509033
    6. 'èrent' → logprob: -6.441864490509033
    7. '   ' → logprob: -8.316864013671875
    8. 'ére' → logprob: -8.441864013671875
    9. 'érence' → logprob: -8.691864013671875
    10. '
' → logprob: -8.816864013671875

Token 380: 'rem' (ID: 1935)
  Prédit: 'rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rent' → logprob: -0.03889390826225281
    2. 'r' → logprob: -3.288893938064575
    3. 'rence' → logprob: -7.663893699645996
    4. 'rem' → logprob: -8.538893699645996
    5. ' rent' → logprob: -10.163893699645996
    6. 'ren' → logprob: -10.413893699645996
    7. 'ré' → logprob: -10.663893699645996
    8. 'рент' → logprob: -11.038893699645996
    9. 'rement' → logprob: -11.163893699645996
    10. 'rend' → logprob: -11.413893699645996

Token 381: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.00015240935317706317
    2. 't' → logprob: -9.625152587890625
    3. 'ents' → logprob: -9.875152587890625
    4. 'nt' → logprob: -10.500152587890625
    5. 'rent' → logprob: -12.500152587890625
    6. 'ment' → logprob: -13.375152587890625
    7. '(ent' → logprob: -14.375152587890625
    8. ' ent' → logprob: -15.000152587890625
    9. 'ente' → logprob: -15.500152587890625
    10. 'Ent' → logprob: -15.500152587890625

Token 382: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024814847856760025
    2. ' for' → logprob: -6.002481460571289
    3. '   ' → logprob: -12.627481460571289
    4. 'or' → logprob: -13.377481460571289
    5. '	for' → logprob: -14.877481460571289
    6. '
' → logprob: -15.502481460571289
    7. ' ' → logprob: -15.877481460571289
    8. ',' → logprob: -16.37748146057129
    9. '```' → logprob: -16.37748146057129
    10. '    
' → logprob: -17.87748146057129

Token 383: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007170771714299917
    2. ' for' → logprob: -7.2507171630859375
    3. '   ' → logprob: -12.000717163085938
    4. '```' → logprob: -14.625717163085938
    5. '
' → logprob: -15.125717163085938
    6. '	for' → logprob: -16.750717163085938
    7. '  
' → logprob: -17.500717163085938
    8. '    
' → logprob: -17.625717163085938
    9. ' ' → logprob: -17.625717163085938
    10. '[' → logprob: -19.500717163085938

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003365350130479783
    2. ' for' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.000336647033691
    4. ' ' → logprob: -15.500336647033691
    5. '
' → logprob: -18.125335693359375
    6. '	for' → logprob: -19.000335693359375
    7. 'range' → logprob: -19.000335693359375
    8. '    
' → logprob: -19.375335693359375
    9. 'from' → logprob: -20.375335693359375
    10. '```' → logprob: -20.500335693359375

Token 385: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38889285922050476
    2. ' i' → logprob: -2.138892889022827
    3. 'j' → logprob: -2.513892889022827
    4. ' j' → logprob: -2.638892889022827
    5. ' range' → logprob: -3.388892889022827
    6. 'range' → logprob: -4.013892650604248
    7. ' in' → logprob: -8.888893127441406
    8. ' W' → logprob: -11.138893127441406
    9. 'W' → logprob: -11.763893127441406
    10. 'in' → logprob: -11.888893127441406

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048774491995573044
    2. 'in' → logprob: -3.048774480819702
    3. 'range' → logprob: -8.673774719238281
    4. ' range' → logprob: -11.173774719238281
    5. ' ' → logprob: -13.923774719238281
    6. '(' → logprob: -14.923774719238281
    7. '(range' → logprob: -15.548774719238281
    8. '0' → logprob: -15.798774719238281
    9. '   ' → logprob: -16.42377471923828
    10. 'import' → logprob: -16.67377471923828

Token 387: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018153101205825806
    2. ' range' → logprob: -4.018153190612793
    3. '(range' → logprob: -13.018153190612793
    4. '0' → logprob: -14.268153190612793
    5. '(' → logprob: -16.143152236938477
    6. 'in' → logprob: -16.268152236938477
    7. ' ' → logprob: -16.768152236938477
    8. ' in' → logprob: -17.768152236938477
    9. '   ' → logprob: -18.018152236938477
    10. '[' → logprob: -18.143152236938477

Token 388: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.5062665343284607
    2. 'range' → logprob: -1.0062665939331055
    3. '(range' → logprob: -3.7562665939331055
    4. '(' → logprob: -5.1312665939331055
    5. ' range' → logprob: -6.1312665939331055
    6. '(H' → logprob: -8.506266593933105
    7. 'in' → logprob: -11.631266593933105
    8. ' (' → logprob: -12.131266593933105
    9. 'W' → logprob: -13.006266593933105
    10. ' in' → logprob: -13.506266593933105

Token 389: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2526734471321106
    2. '):' → logprob: -1.5026733875274658
    3. ':' → logprob: -7.502673625946045
    4. '):
' → logprob: -9.002673149108887
    5. ':
' → logprob: -10.627673149108887
    6. '   ' → logprob: -10.627673149108887
    7. '):

' → logprob: -11.752673149108887
    8. '():
' → logprob: -12.377673149108887
    9. ')' → logprob: -12.627673149108887
    10. ' ):
' → logprob: -13.877673149108887

Token 390: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11991819739341736
    2. '   ' → logprob: -2.74491810798645
    3. 'cnt' → logprob: -3.11991810798645
    4. '       ' → logprob: -5.869918346405029
    5. ' c' → logprob: -6.744918346405029
    6. 'for' → logprob: -8.119917869567871
    7. ' cnt' → logprob: -9.619917869567871
    8. ' ' → logprob: -9.619917869567871
    9. 'count' → logprob: -11.119917869567871
    10. '	c' → logprob: -11.244917869567871

Token 391: ' total' (ID: 3609)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03030679002404213
    2. 'cnt' → logprob: -3.530306816101074
    3. 'for' → logprob: -8.655306816101074
    4. '   ' → logprob: -8.905306816101074
    5. 'count' → logprob: -9.030306816101074
    6. ' c' → logprob: -10.405306816101074
    7. 'cc' → logprob: -11.280306816101074
    8. 'u' → logprob: -11.405306816101074
    9. 'col' → logprob: -11.530306816101074
    10. 'r' → logprob: -11.655306816101074

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021217912435532
    2. ' =' → logprob: -2.3502120971679688
    3. '   ' → logprob: -12.600212097167969
    4. ' ' → logprob: -13.975212097167969
    5. 'c' → logprob: -14.725212097167969
    6. '  ' → logprob: -15.475212097167969
    7. 'for' → logprob: -15.975212097167969
    8. ',' → logprob: -16.10021209716797
    9. 'cnt' → logprob: -16.22521209716797
    10. '_' → logprob: -17.10021209716797

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009211080614477396
    2. ' ' → logprob: -7.000921249389648
    3. '   ' → logprob: -11.625921249389648
    4. '  ' → logprob: -15.250921249389648
    5. '=' → logprob: -16.50092124938965
    6. '#' → logprob: -17.25092124938965
    7. '    ' → logprob: -17.25092124938965
    8. '[' → logprob: -17.62592124938965
    9. '۰' → logprob: -17.68842124938965
    10. '     ' → logprob: -17.81342124938965

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.375060081481934
    4. '[' → logprob: -16.12506103515625
    5. 'for' → logprob: -16.93756103515625
    6. '#' → logprob: -17.25006103515625
    7. '  ' → logprob: -17.81256103515625
    8. '=' → logprob: -18.25006103515625
    9. '000' → logprob: -18.25006103515625
    10. '```' → logprob: -18.56256103515625

Token 395: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02925349399447441
    2. 'for' → logprob: -3.6542534828186035
    3. ' for' → logprob: -6.0292534828186035
    4. '   ' → logprob: -7.6542534828186035
    5. '<|end|>' → logprob: -10.529253959655762
    6. '
' → logprob: -11.404253959655762
    7. ' ' → logprob: -12.029253959655762
    8. '	for' → logprob: -12.279253959655762
    9. '      ' → logprob: -12.654253959655762
    10. '           ' → logprob: -12.654253959655762

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017308484762907028
    2. 'for' → logprob: -4.517308712005615
    3. ' for' → logprob: -5.267308712005615
    4. '   ' → logprob: -7.642308712005615
    5. '<|end|>' → logprob: -7.642308712005615
    6. '
' → logprob: -10.392308235168457
    7. '	' → logprob: -10.642308235168457
    8. ' ' → logprob: -10.767308235168457
    9. '	for' → logprob: -11.142308235168457
    10. ',' → logprob: -11.142308235168457

Token 397: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.664371848164592e-05
    2. ' for' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.500016212463379
    4. '       ' → logprob: -13.750016212463379
    5. '	for' → logprob: -16.625017166137695
    6. 'prev' → logprob: -17.125017166137695
    7. '
' → logprob: -17.250017166137695
    8. '#' → logprob: -17.875017166137695
    9. '```' → logprob: -18.125017166137695
    10. '0' → logprob: -18.875017166137695

Token 398: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001239196863025427
    2. ' i' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. 'for' → logprob: -15.875123977661133
    5. '0' → logprob: -17.750123977661133
    6. '```' → logprob: -17.750123977661133
    7. '	i' → logprob: -17.750123977661133
    8. 'I' → logprob: -18.500123977661133
    9. 'import' → logprob: -18.625123977661133
    10. '
' → logprob: -18.625123977661133

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867798089981079
    2. 'in' → logprob: -3.048677921295166
    3. '(' → logprob: -10.048678398132324
    4. 'range' → logprob: -10.548678398132324
    5. ' range' → logprob: -11.923678398132324
    6. '   ' → logprob: -11.923678398132324
    7. '       ' → logprob: -12.798678398132324
    8. ')' → logprob: -13.298678398132324
    9. ' ' → logprob: -13.923678398132324
    10. ' (' → logprob: -14.048678398132324

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00943470373749733
    2. ' range' → logprob: -4.759434700012207
    3. '0' → logprob: -7.259434700012207
    4. '(' → logprob: -9.384434700012207
    5. '(range' → logprob: -10.884434700012207
    6. '(H' → logprob: -11.759434700012207
    7. '   ' → logprob: -13.009434700012207
    8. ' ' → logprob: -13.759434700012207
    9. 'H' → logprob: -14.134434700012207
    10. 'in' → logprob: -14.509434700012207

Token 401: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.002534521510824561
    2. '(' → logprob: -6.00253438949585
    3. 'H' → logprob: -10.127534866333008
    4. '0' → logprob: -11.377534866333008
    5. '(W' → logprob: -12.752534866333008
    6. 'range' → logprob: -13.377534866333008
    7. ' (' → logprob: -13.377534866333008
    8. '   ' → logprob: -14.752534866333008
    9. '(
' → logprob: -15.002534866333008
    10. ' ' → logprob: -15.627534866333008

Token 402: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02330254763364792
    2. '):' → logprob: -3.7733025550842285
    3. '       ' → logprob: -11.02330207824707
    4. '():
' → logprob: -12.02330207824707
    5. ' ):
' → logprob: -12.02330207824707
    6. '):

' → logprob: -12.27330207824707
    7. ':
' → logprob: -12.39830207824707
    8. ':' → logprob: -12.39830207824707
    9. '   ' → logprob: -12.52330207824707
    10. '           ' → logprob: -12.64830207824707

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022259050980210304
    2. 'if' → logprob: -3.897258996963501
    3. ' if' → logprob: -6.39725923538208
    4. '       ' → logprob: -10.647258758544922
    5. '		' → logprob: -11.272258758544922
    6. '	       ' → logprob: -12.272258758544922
    7. '   ' → logprob: -12.772258758544922
    8. '	if' → logprob: -13.272258758544922
    9. '               ' → logprob: -13.647258758544922
    10. '#' → logprob: -14.147258758544922

Token 404: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07922772318124771
    2. '           ' → logprob: -2.8292276859283447
    3. ' if' → logprob: -4.079227924346924
    4. '               ' → logprob: -8.829227447509766
    5. '	if' → logprob: -10.954227447509766
    6. '   ' → logprob: -11.329227447509766
    7. '       ' → logprob: -11.454227447509766
    8. '```' → logprob: -13.329227447509766
    9. '	       ' → logprob: -14.204227447509766
    10. '#' → logprob: -14.454227447509766

Token 405: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0021861877758055925
    2. ' grid' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.377185821533203
    4. '(grid' → logprob: -15.502185821533203
    5. '	grid' → logprob: -16.627185821533203
    6. ' ' → logprob: -16.752185821533203
    7. 'Grid' → logprob: -17.252185821533203
    8. '.grid' → logprob: -18.502185821533203
    9. '           ' → logprob: -18.627185821533203
    10. 'd' → logprob: -18.877185821533203

Token 406: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -14.12500286102295
    3. '   ' → logprob: -14.12500286102295
    4. '[j' → logprob: -15.50000286102295
    5. '[I' → logprob: -15.62500286102295
    6. '[' → logprob: -16.125001907348633
    7. '][' → logprob: -16.125001907348633
    8. ' [' → logprob: -16.375001907348633
    9. '```' → logprob: -16.500001907348633
    10. '(i' → logprob: -17.250001907348633

Token 407: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009669202379882336
    2. '[j' → logprob: -4.759669303894043
    3. '[i' → logprob: -7.134669303894043
    4. ']' → logprob: -9.259669303894043
    5. '[' → logprob: -9.759669303894043
    6. ')[' → logprob: -10.009669303894043
    7. '"][' → logprob: -11.384669303894043
    8. ' ][' → logprob: -11.509669303894043
    9. 'j' → logprob: -12.009669303894043
    10. ' [' → logprob: -12.259669303894043

Token 408: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.9186317482963204e-05
    2. '[j' → logprob: -10.000049591064453
    3. ' j' → logprob: -12.625049591064453
    4. '	j' → logprob: -16.000049591064453
    5. '```' → logprob: -16.375049591064453
    6. '   ' → logprob: -16.625049591064453
    7. '#' → logprob: -17.000049591064453
    8. '[' → logprob: -17.125049591064453
    9. '][' → logprob: -17.250049591064453
    10. ']' → logprob: -17.375049591064453

Token 409: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008401098661124706
    2. ']==' → logprob: -5.258400917053223
    3. ' ==' → logprob: -6.133400917053223
    4. '==' → logprob: -7.133400917053223
    5. ' ]' → logprob: -9.508400917053223
    6. '']' → logprob: -10.008400917053223
    7. ']=='' → logprob: -10.133400917053223
    8. '#' → logprob: -11.383400917053223
    9. '[' → logprob: -12.133400917053223
    10. '   ' → logprob: -12.508400917053223

Token 410: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4743163585662842
    2. '==' → logprob: -0.9743163585662842
    3. '=='' → logprob: -9.349316596984863
    4. '#' → logprob: -10.099316596984863
    5. ']==' → logprob: -10.349316596984863
    6. ']' → logprob: -10.974316596984863
    7. '[' → logprob: -11.349316596984863
    8. '=' → logprob: -11.349316596984863
    9. ''#' → logprob: -11.474316596984863
    10. '==
' → logprob: -11.974316596984863

Token 411: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -4.56102097814437e-05
    2. ' '#' → logprob: -10.875045776367188
    3. '"#' → logprob: -11.375045776367188
    4. '('#' → logprob: -12.375045776367188
    5. ''' → logprob: -12.375045776367188
    6. ' '#'' → logprob: -12.500045776367188
    7. ''*' → logprob: -13.500045776367188
    8. ''.' → logprob: -14.625045776367188
    9. '#' → logprob: -15.375045776367188
    10. '   ' → logprob: -15.625045776367188

Token 412: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6258800625801086
    2. ':
' → logprob: -1.1258800029754639
    3. '               ' → logprob: -2.000880002975464
    4. '):
' → logprob: -5.875880241394043
    5. '           ' → logprob: -6.500880241394043
    6. '):' → logprob: -7.000880241394043
    7. '0' → logprob: -9.750880241394043
    8. ')' → logprob: -9.875880241394043
    9. ']:
' → logprob: -10.000880241394043
    10. ':

' → logprob: -10.125880241394043

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09793713688850403
    2. 'total' → logprob: -2.4729371070861816
    3. ' total' → logprob: -4.847937107086182
    4. ':' → logprob: -8.09793758392334
    5. '           ' → logprob: -8.22293758392334
    6. ':
' → logprob: -8.47293758392334
    7. '0' → logprob: -8.97293758392334
    8. '(total' → logprob: -9.47293758392334
    9. '):
' → logprob: -10.34793758392334
    10. '	total' → logprob: -10.34793758392334

Token 414: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.010133789852261543
    2. ' total' → logprob: -4.760133743286133
    3. '               ' → logprob: -6.510133743286133
    4. '           ' → logprob: -10.635133743286133
    5. '	total' → logprob: -13.010133743286133
    6. '                   ' → logprob: -13.635133743286133
    7. '   ' → logprob: -14.135133743286133
    8. '0' → logprob: -14.260133743286133
    9. ' ' → logprob: -15.260133743286133
    10. '(total' → logprob: -15.635133743286133

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '0' → logprob: -17.048587799072266
    4. ' ' → logprob: -17.923587799072266
    5. '           ' → logprob: -18.923587799072266
    6. '   ' → logprob: -18.923587799072266
    7. '=
' → logprob: -20.173587799072266
    8. '＝' → logprob: -20.173587799072266
    9. '               ' → logprob: -20.298587799072266
    10. '       ' → logprob: -20.798587799072266

Token 416: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '۰' → logprob: -20.500003814697266
    5. '```' → logprob: -20.750003814697266
    6. '               ' → logprob: -21.125003814697266
    7. '           ' → logprob: -21.500003814697266
    8. '  ' → logprob: -21.875003814697266
    9. '       ' → logprob: -23.000003814697266
    10. '00' → logprob: -23.000003814697266

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -18.625003814697266
    4. '```' → logprob: -19.500003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '000' → logprob: -20.750003814697266
    7. 'o' → logprob: -20.875003814697266
    8. '০' → logprob: -21.000003814697266
    9. '０' → logprob: -21.062503814697266
    10. '[' → logprob: -21.062503814697266

Token 418: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.910643762443215e-05
    2. 'else' → logprob: -9.500079154968262
    3. ' else' → logprob: -13.125079154968262
    4. '          ' → logprob: -14.625079154968262
    5. '       ' → logprob: -14.875079154968262
    6. '		' → logprob: -15.250079154968262
    7. '```' → logprob: -15.375079154968262
    8. '               ' → logprob: -15.625079154968262
    9. '	       ' → logprob: -15.875079154968262
    10. '#' → logprob: -16.500078201293945

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001198086072690785
    2. 'else' → logprob: -6.7511982917785645
    3. ' else' → logprob: -10.626197814941406
    4. '		' → logprob: -13.751197814941406
    5. '	       ' → logprob: -14.251197814941406
    6. '<|end|>' → logprob: -14.876197814941406
    7. '       ' → logprob: -15.001197814941406
    8. '```' → logprob: -15.126197814941406
    9. '	   ' → logprob: -16.126197814941406
    10. '#else' → logprob: -16.376197814941406

Token 420: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6943902373313904
    2. 'else' (adapté à ' else') → logprob: -0.6943902373313904
    3. ' else' → logprob: -6.694390296936035
    4. '       ' → logprob: -13.319390296936035
    5. '               ' → logprob: -13.694390296936035
    6. '```' → logprob: -14.319390296936035
    7. '	else' → logprob: -15.069390296936035
    8. 'elif' → logprob: -15.569390296936035
    9. '          ' → logprob: -16.06938934326172
    10. '		' → logprob: -16.31938934326172

Token 421: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005047772428952157
    2. ':' → logprob: -8.125504493713379
    3. ':
' → logprob: -9.250504493713379
    4. 'total' → logprob: -9.875504493713379
    5. '           ' → logprob: -10.750504493713379
    6. '              ' → logprob: -11.500504493713379
    7. ' total' → logprob: -11.625504493713379
    8. ',' → logprob: -12.000504493713379
    9. '(total' → logprob: -12.750504493713379
    10. ',total' → logprob: -13.125504493713379

Token 422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009629119304008782
    2. 'total' → logprob: -7.000962734222412
    3. ' total' → logprob: -10.00096321105957
    4. '           ' → logprob: -12.50096321105957
    5. '                   ' → logprob: -14.50096321105957
    6. '```' → logprob: -14.62596321105957
    7. '              ' → logprob: -14.87596321105957
    8. '(total' → logprob: -15.25096321105957
    9. ',total' → logprob: -15.37596321105957
    10. '                
' → logprob: -16.37596321105957

Token 423: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.04359588027000427
    2. ' total' → logprob: -3.543595790863037
    3. '               ' → logprob: -4.293595790863037
    4. '                   ' → logprob: -9.293596267700195
    5. '	total' → logprob: -14.168596267700195
    6. '           ' → logprob: -14.543596267700195
    7. '
' → logprob: -14.793596267700195
    8. '   ' → logprob: -15.293596267700195
    9. ',total' → logprob: -15.543596267700195
    10. '(total' → logprob: -15.918596267700195

Token 424: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931484341621399
    2. '+=' → logprob: -0.6931484341621399
    3. '=' → logprob: -14.443148612976074
    4. ']+=' → logprob: -15.693148612976074
    5. '           ' → logprob: -15.943148612976074
    6. '+' → logprob: -15.943148612976074
    7. '               ' → logprob: -16.193147659301758
    8. '            ' → logprob: -16.568147659301758
    9. '   ' → logprob: -17.818147659301758
    10. '                ' → logprob: -17.943147659301758

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.25001335144043
    4. '```' → logprob: -20.12501335144043
    5. '
' → logprob: -20.37501335144043
    6. 'd' → logprob: -21.50001335144043
    7. '  ' → logprob: -21.68751335144043
    8. '１' → logprob: -21.81251335144043
    9. '`' → logprob: -22.12501335144043
    10. '       ' → logprob: -22.43751335144043

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -19.875
    5. 'd' → logprob: -21.25
    6. '１' → logprob: -21.3125
    7. '=' → logprob: -21.6875
    8. '۱' → logprob: -21.9375
    9. '>' → logprob: -22.0
    10. '+' → logprob: -22.0

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00193458900321275
    2. 'u' → logprob: -6.25193452835083
    3. '          ' → logprob: -13.126935005187988
    4. '       ' → logprob: -13.376935005187988
    5. '               ' → logprob: -13.626935005187988
    6. ' u' → logprob: -13.876935005187988
    7. '         ' → logprob: -16.001934051513672
    8. '[u' → logprob: -16.876934051513672
    9. 'd' → logprob: -17.501934051513672
    10. '		' → logprob: -18.001934051513672

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10027201473712921
    2. 'u' → logprob: -2.3502719402313232
    3. '       ' → logprob: -10.225272178649902
    4. ' u' → logprob: -10.600272178649902
    5. '          ' → logprob: -13.350272178649902
    6. '               ' → logprob: -13.475272178649902
    7. '         ' → logprob: -15.225272178649902
    8. '   ' → logprob: -15.225272178649902
    9. '	u' → logprob: -15.475272178649902
    10. '```' → logprob: -15.475272178649902

Token 429: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -3.0948158382670954e-05
    2. ' u' → logprob: -11.000030517578125
    3. '           ' → logprob: -11.250030517578125
    4. '       ' → logprob: -14.250030517578125
    5. '   ' → logprob: -14.875030517578125
    6. '	u' → logprob: -15.625030517578125
    7. '               ' → logprob: -18.000030517578125
    8. '[u' → logprob: -19.375030517578125
    9. '          ' → logprob: -19.625030517578125
    10. '         ' → logprob: -20.000030517578125

Token 430: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0921942703134846e-05
    2. '[j' → logprob: -12.37501049041748
    3. '[' → logprob: -12.75001049041748
    4. '[u' → logprob: -12.87501049041748
    5. '[I' → logprob: -14.75001049041748
    6. ' [' → logprob: -15.25001049041748
    7. '```' → logprob: -15.75001049041748
    8. '[int' → logprob: -16.125011444091797
    9. '][' → logprob: -16.750011444091797
    10. 'i' → logprob: -17.375011444091797

Token 431: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006448319181799889
    2. '[j' → logprob: -5.131448268890381
    3. '[' → logprob: -8.256448745727539
    4. '[i' → logprob: -8.506448745727539
    5. ' ][' → logprob: -10.631448745727539
    6. ']' → logprob: -10.756448745727539
    7. '```' → logprob: -12.881448745727539
    8. '[u' → logprob: -13.006448745727539
    9. '[][' → logprob: -13.881448745727539
    10. '"][' → logprob: -14.256448745727539

Token 432: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.895480277715251e-06
    2. '[j' → logprob: -11.875008583068848
    3. ' j' → logprob: -13.250008583068848
    4. '][' → logprob: -16.750009536743164
    5. '```' → logprob: -16.875009536743164
    6. '	j' → logprob: -17.625009536743164
    7. '   ' → logprob: -18.125009536743164
    8. ']' → logprob: -18.375009536743164
    9. ',j' → logprob: -18.750009536743164
    10. '[' → logprob: -18.750009536743164

Token 433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005903434474021196
    2. ']=' → logprob: -5.255903244018555
    3. '=' → logprob: -7.380903244018555
    4. ' ]' → logprob: -10.130903244018555
    5. ' =' → logprob: -12.130903244018555
    6. '[' → logprob: -14.505903244018555
    7. ')' → logprob: -14.880903244018555
    8. '   ' → logprob: -16.505903244018555
    9. ']+=' → logprob: -16.880903244018555
    10. ']
' → logprob: -17.005903244018555

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324839122593403
    2. ' =' → logprob: -3.7732484340667725
    3. '[' → logprob: -12.773248672485352
    4. ']=' → logprob: -17.52324867248535
    5. ']' → logprob: -17.77324867248535
    6. ' ' → logprob: -17.89824867248535
    7. '           ' → logprob: -18.27324867248535
    8. '   ' → logprob: -18.52324867248535
    9. '[u' → logprob: -19.27324867248535
    10. '=[' → logprob: -19.27324867248535

Token 435: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00020354038861114532
    2. ' total' → logprob: -8.500203132629395
    3. 'tot' → logprob: -18.12520408630371
    4. 't' → logprob: -20.00020408630371
    5. 'to' → logprob: -20.25020408630371
    6. '(total' → logprob: -20.50020408630371
    7. '	total' → logprob: -21.37520408630371
    8. ' ' → logprob: -22.12520408630371
    9. '           ' → logprob: -22.37520408630371
    10. ' tota' → logprob: -22.75020408630371

Token 436: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06738734990358353
    2. '#' → logprob: -3.067387342453003
    3. '
' → logprob: -4.442387580871582
    4. ' for' → logprob: -6.192387580871582
    5. '<|end|>' → logprob: -6.442387580871582
    6. 'for' → logprob: -6.567387580871582
    7. ' ' → logprob: -7.817387580871582
    8. '    
' → logprob: -7.942387580871582
    9. '```' → logprob: -7.942387580871582
    10. '  
' → logprob: -8.567387580871582

Token 437: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5779455304145813
    2. 'for' → logprob: -1.4529454708099365
    3. '   ' → logprob: -1.9529454708099365
    4. ' for' → logprob: -2.9529454708099365
    5. '
' → logprob: -4.952945709228516
    6. '<|end|>' → logprob: -5.952945709228516
    7. ' ' → logprob: -7.702945709228516
    8. ')' → logprob: -9.077945709228516
    9. '  
' → logprob: -9.202945709228516
    10. '    
' → logprob: -9.202945709228516

Token 438: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.04362098500132561
    2. 'for' → logprob: -3.543621063232422
    3. '   ' → logprob: -4.293621063232422
    4. ' for' → logprob: -9.168621063232422
    5. '```' → logprob: -11.668621063232422
    6. ' #' → logprob: -12.543621063232422
    7. ' ' → logprob: -14.293621063232422
    8. '
' → logprob: -14.418621063232422
    9. '	for' → logprob: -14.668621063232422
    10. 'd' → logprob: -14.668621063232422

Token 439: ' Et' (ID: 10007)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07001801580190659
    2. '#' → logprob: -2.6950180530548096
    3. '   ' → logprob: -10.32001781463623
    4. ' for' → logprob: -10.82001781463623
    5. 'd' → logprob: -11.32001781463623
    6. 'Pour' → logprob: -11.69501781463623
    7. 'pour' → logprob: -12.32001781463623
    8. 'For' → logprob: -13.07001781463623
    9. ' #' → logprob: -14.44501781463623
    10. '       ' → logprob: -14.69501781463623

Token 440: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004130288027226925
    2. '#' → logprob: -5.8791303634643555
    3. ' for' → logprob: -6.7541303634643555
    4. '   ' → logprob: -9.379130363464355
    5. 'pour' → logprob: -9.629130363464355
    6. ' #' → logprob: -12.629130363464355
    7. '```' → logprob: -13.129130363464355
    8. '       ' → logprob: -14.004130363464355
    9. '
' → logprob: -14.379130363464355
    10. ' pour' → logprob: -14.879130363464355

Token 441: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001059486996382475
    2. 'for' → logprob: -6.876059532165527
    3. ' d' → logprob: -11.751059532165527
    4. '#' → logprob: -12.001059532165527
    5. '(d' → logprob: -12.126059532165527
    6. 'down' → logprob: -12.501059532165527
    7. '(' → logprob: -13.751059532165527
    8. ' for' → logprob: -14.001059532165527
    9. '   ' → logprob: -15.251059532165527
    10. 'le' → logprob: -15.376059532165527

Token 442: ' bas' (ID: 3222)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04978511482477188
    2. 'bas' → logprob: -3.0497851371765137
    3. 'down' → logprob: -7.674785137176514
    4. 'b' → logprob: -7.924785137176514
    5. 'bottom' → logprob: -8.174784660339355
    6. 'for' → logprob: -10.299784660339355
    7. '(' → logprob: -11.549784660339355
    8. '(H' → logprob: -11.799784660339355
    9. 'H' → logprob: -12.049784660339355
    10. '(d' → logprob: -12.174784660339355

Token 443: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008615515194833279
    2. ' for' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.258615493774414
    4. '```' → logprob: -15.633615493774414
    5. '
' → logprob: -16.383615493774414
    6. '#' → logprob: -17.633615493774414
    7. '	for' → logprob: -17.883615493774414
    8. ',' → logprob: -18.008615493774414
    9. '...' → logprob: -19.133615493774414
    10. ' ' → logprob: -19.133615493774414

Token 444: 'enc' (ID: 1038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005014431662857533
    2. ' for' → logprob: -7.62550163269043
    3. ')' → logprob: -11.37550163269043
    4. 'j' → logprob: -14.50050163269043
    5. '   ' → logprob: -14.75050163269043
    6. '
' → logprob: -15.00050163269043
    7. '```' → logprob: -15.12550163269043
    8. ' ' → logprob: -15.25050163269043
    9. 'range' → logprob: -16.75050163269043
    10. '	for' → logprob: -17.12550163269043

Token 445: 'ore' (ID: 510)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2627384662628174
    2. 'for' → logprob: -2.2627384662628174
    3. 'ore' → logprob: -3.6377384662628174
    4. 'e' → logprob: -3.6377384662628174
    5. '(range' → logprob: -3.8877384662628174
    6. 're' → logprob: -4.262738227844238
    7. 'ount' → logprob: -4.512738227844238
    8. '(i' → logprob: -5.512738227844238
    9. ' range' → logprob: -5.887738227844238
    10. 'om' → logprob: -6.012738227844238

Token 446: ' rep' (ID: 2449)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1973811537027359
    2. ' for' → logprob: -3.0723812580108643
    3. '   ' → logprob: -3.5723812580108643
    4. ' une' → logprob: -3.8223812580108643
    5. ')' → logprob: -4.447381019592285
    6. '```' → logprob: -4.697381019592285
    7. ' fois' → logprob: -5.072381019592285
    8. 'à' → logprob: -5.197381019592285
    9. ' un' → logprob: -5.447381019592285
    10. '(' → logprob: -5.447381019592285

Token 447: 'om' (ID: 310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2824155390262604
    2. '   ' → logprob: -2.1574156284332275
    3. 'e' → logprob: -2.9074156284332275
    4. 'et' → logprob: -4.282415390014648
    5. 'ete' → logprob: -4.407415390014648
    6. 'r' → logprob: -5.157415390014648
    7. 'i' → logprob: -5.282415390014648
    8. ' for' → logprob: -5.282415390014648
    9. 'ère' → logprob: -5.532415390014648
    10. '       ' → logprob: -5.532415390014648

Token 448: 'pe' (ID: 424)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2100636959075928
    2. 'e' → logprob: -1.3350636959075928
    3. 'lé' → logprob: -2.0850636959075928
    4. 'é' → logprob: -2.3350636959075928
    5. 'eté' → logprob: -2.8350636959075928
    6. 'été' → logprob: -3.2100636959075928
    7. 'ét' → logprob: -3.5850636959075928
    8. 'et' → logprob: -4.085063934326172
    9. 'eted' → logprob: -4.210063934326172
    10. 'lée' → logprob: -4.210063934326172

Token 449: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8302145600318909
    2. 'for' → logprob: -1.330214500427246
    3. ')' → logprob: -1.830214500427246
    4. ' for' → logprob: -2.455214500427246
    5. '),' → logprob: -3.580214500427246
    6. 'pour' → logprob: -5.330214500427246
    7. ')
' → logprob: -5.580214500427246
    8. ' pour' → logprob: -5.580214500427246
    9. ',' → logprob: -5.705214500427246
    10. 'd' → logprob: -5.830214500427246

Token 450: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13426654040813446
    2. ' for' → logprob: -2.2592666149139404
    3. '   ' → logprob: -5.259266376495361
    4. 'pour' → logprob: -5.384266376495361
    5. ')' → logprob: -5.759266376495361
    6. ' mais' → logprob: -6.009266376495361
    7. 'mais' → logprob: -6.384266376495361
    8. 'but' → logprob: -6.634266376495361
    9. ' but' → logprob: -6.759266376495361
    10. '#' → logprob: -8.13426685333252

Token 451: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6384403109550476
    2. 'on' → logprob: -2.6384403705596924
    3. 'plus' → logprob: -3.2634403705596924
    4. ')' → logprob: -3.2634403705596924
    5. ' for' → logprob: -3.3884403705596924
    6. 'pour' → logprob: -3.5134403705596924
    7. 'j' → logprob: -3.6384403705596924
    8. 'H' → logprob: -3.6384403705596924
    9. '```' → logprob: -3.7634403705596924
    10. ' on' → logprob: -3.8884403705596924

Token 452: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05816815793514252
    2. 'ée' → logprob: -2.9331681728363037
    3. 'er' → logprob: -7.308167934417725
    4. 'e' → logprob: -7.433167934417725
    5. 'for' → logprob: -7.808167934417725
    6. 'ré' → logprob: -8.183168411254883
    7. 'lé' → logprob: -8.308168411254883
    8. 'o' → logprob: -8.933168411254883
    9. 'és' → logprob: -9.308168411254883
    10. 'rée' → logprob: -9.933168411254883

Token 453: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9446148872375488
    2. ')
' → logprob: -1.3196148872375488
    3. ' for' → logprob: -1.5696148872375488
    4. ')' → logprob: -2.069614887237549
    5. '   ' → logprob: -4.819614887237549
    6. '):
' → logprob: -6.944614887237549
    7. ' )
' → logprob: -8.94461441040039
    8. ')

' → logprob: -9.06961441040039
    9. '):' → logprob: -10.06961441040039
    10. ' ' → logprob: -10.31961441040039

Token 454: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005610156804323196
    2. ' for' → logprob: -7.500561237335205
    3. '   ' → logprob: -11.750560760498047
    4. '```' → logprob: -16.125560760498047
    5. '	for' → logprob: -18.000560760498047
    6. ' ' → logprob: -19.125560760498047
    7. '
' → logprob: -20.125560760498047
    8. '``' → logprob: -22.000560760498047
    9. '  ' → logprob: -22.375560760498047
    10. 'For' → logprob: -22.500560760498047

Token 455: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004307884373702109
    2. ' for' → logprob: -7.750430583953857
    3. '
' → logprob: -17.625431060791016
    4. '   ' → logprob: -18.125431060791016
    5. '```' → logprob: -18.250431060791016
    6. ' ' → logprob: -20.125431060791016
    7. '	for' → logprob: -20.500431060791016
    8. ')' → logprob: -20.875431060791016
    9. 'For' → logprob: -22.250431060791016
    10. '#' → logprob: -22.375431060791016

Token 456: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19208486378192902
    2. ' i' → logprob: -2.192084789276123
    3. 'j' → logprob: -3.192084789276123
    4. ' j' → logprob: -3.817084789276123
    5. '```' → logprob: -14.942085266113281
    6. '	i' → logprob: -15.067085266113281
    7. '   ' → logprob: -15.817085266113281
    8. ' ' → logprob: -15.942085266113281
    9. 'I' → logprob: -15.942085266113281
    10. ' in' → logprob: -16.19208526611328

Token 457: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011064562946557999
    2. 'in' → logprob: -4.511064529418945
    3. ' ' → logprob: -12.011064529418945
    4. 'range' → logprob: -12.011064529418945
    5. 'In' → logprob: -13.636064529418945
    6. '```' → logprob: -14.511064529418945
    7. 's' → logprob: -14.636064529418945
    8. '   ' → logprob: -15.011064529418945
    9. 'I' → logprob: -15.261064529418945
    10. 'int' → logprob: -15.636064529418945

Token 458: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931805610656738
    2. 'range' → logprob: -0.6931805610656738
    3. '(range' → logprob: -10.318180084228516
    4. '(W' → logprob: -15.443180084228516
    5. '	range' → logprob: -16.318180084228516
    6. '   ' → logprob: -16.693180084228516
    7. ' ' → logprob: -17.068180084228516
    8. 'Range' → logprob: -17.193180084228516
    9. 'W' → logprob: -17.443180084228516
    10. 'in' → logprob: -18.068180084228516

Token 459: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.4021237802808173e-05
    2. 'range' → logprob: -11.375014305114746
    3. '(range' → logprob: -13.375014305114746
    4. '(' → logprob: -14.750014305114746
    5. 'W' → logprob: -15.625014305114746
    6. ' range' → logprob: -15.750014305114746
    7. ' (' → logprob: -16.00001335144043
    8. '(H' → logprob: -17.25001335144043
    9. 'Range' → logprob: -18.00001335144043
    10. '(
' → logprob: -20.12501335144043

Token 460: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18079692125320435
    2. '):
' → logprob: -1.8057968616485596
    3. ' -' → logprob: -7.055797100067139
    4. '):' → logprob: -9.43079662322998
    5. '   ' → logprob: -9.68079662322998
    6. '       ' → logprob: -10.68079662322998
    7. '):

' → logprob: -11.80579662322998
    8. ' ' → logprob: -12.30579662322998
    9. ':
' → logprob: -12.93079662322998
    10. ' ):
' → logprob: -13.30579662322998

Token 461: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8961817026138306
    2. 'total' → logprob: -1.1461817026138306
    3. ' c' → logprob: -2.271181583404541
    4. '   ' → logprob: -2.396181583404541
    5. ' total' → logprob: -2.896181583404541
    6. 'b' → logprob: -4.646181583404541
    7. 't' → logprob: -5.646181583404541
    8. 'for' → logprob: -5.646181583404541
    9. ' for' → logprob: -6.271181583404541
    10. ' b' → logprob: -6.896181583404541

Token 462: ' blah' (ID: 90894)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.26252394914627075
    2. 'total' → logprob: -1.512523889541626
    3. 'b' → logprob: -5.012524127960205
    4. 'count' → logprob: -6.637524127960205
    5. 't' → logprob: -6.887524127960205
    6. 'cnt' → logprob: -7.012524127960205
    7. 'tot' → logprob: -8.512523651123047
    8. ' c' → logprob: -9.262523651123047
    9. 'd' → logprob: -9.512523651123047
    10. 'bottom' → logprob: -9.637523651123047

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18004655838012695
    2. ' =' → logprob: -1.805046558380127
    3. 'for' → logprob: -8.680046081542969
    4. ' ' → logprob: -10.055046081542969
    5. '   ' → logprob: -10.430046081542969
    6. 'total' → logprob: -10.805046081542969
    7. ' for' → logprob: -11.430046081542969
    8. 'c' → logprob: -12.305046081542969
    9. ',' → logprob: -12.930046081542969
    10. ' total' → logprob: -13.180046081542969

Token 464: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004523400217294693
    2. 'H' → logprob: -5.754523277282715
    3. ' ' → logprob: -6.629523277282715
    4. ' H' → logprob: -10.754523277282715
    5. '   ' → logprob: -13.004523277282715
    6. '  ' → logprob: -16.12952423095703
    7. '[' → logprob: -16.12952423095703
    8. '       ' → logprob: -16.75452423095703
    9. '	H' → logprob: -17.25452423095703
    10. '    ' → logprob: -17.37952423095703

Token 465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006573499646037817
    2. 'H' → logprob: -5.131573677062988
    3. ' ' → logprob: -7.381573677062988
    4. ' H' → logprob: -11.131573677062988
    5. '   ' → logprob: -12.006573677062988
    6. '       ' → logprob: -14.881573677062988
    7. '  ' → logprob: -15.381573677062988
    8. '     ' → logprob: -16.319072723388672
    9. '           ' → logprob: -16.506572723388672
    10. '=' → logprob: -16.819072723388672

Token 466: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027685070410370827
    2. 'for' → logprob: -4.152685165405273
    3. '
' → logprob: -4.902685165405273
    4. ' for' → logprob: -5.527685165405273
    5. '<|end|>' → logprob: -9.152685165405273
    6. '   ' → logprob: -10.652685165405273
    7. '           ' → logprob: -11.402685165405273
    8. '	for' → logprob: -11.402685165405273
    9. '        
' → logprob: -11.652685165405273
    10. ' ' → logprob: -12.527685165405273

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25816866755485535
    2. 'for' → logprob: -1.5081686973571777
    3. ' for' → logprob: -5.133168697357178
    4. '   ' → logprob: -8.75816822052002
    5. '
' → logprob: -9.25816822052002
    6. '	for' → logprob: -9.75816822052002
    7. '	' → logprob: -12.63316822052002
    8. '           ' → logprob: -12.75816822052002
    9. ' ' → logprob: -13.25816822052002
    10. '<|end|>' → logprob: -13.63316822052002

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.0868278524139896e-05
    2. ' for' → logprob: -9.75006103515625
    3. '       ' → logprob: -13.12506103515625
    4. '	for' → logprob: -15.25006103515625
    5. '
' → logprob: -15.87506103515625
    6. '   ' → logprob: -16.50006103515625
    7. '```' → logprob: -18.37506103515625
    8. '           ' → logprob: -18.75006103515625
    9. '        
' → logprob: -19.50006103515625
    10. 'from' → logprob: -19.87506103515625

Token 469: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018150296062231064
    2. ' i' → logprob: -4.018150329589844
    3. '	i' → logprob: -15.768150329589844
    4. ' ' → logprob: -15.893150329589844
    5. '   ' → logprob: -17.268150329589844
    6. '  ' → logprob: -17.518150329589844
    7. '```' → logprob: -17.893150329589844
    8. '_i' → logprob: -18.018150329589844
    9. ' in' → logprob: -18.268150329589844
    10. '
' → logprob: -19.893150329589844

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13196638226509094
    2. 'in' → logprob: -2.1319663524627686
    3. 'range' → logprob: -5.381966590881348
    4. ' range' → logprob: -7.881966590881348
    5. '(H' → logprob: -10.131966590881348
    6. '(range' → logprob: -12.381966590881348
    7. ' (' → logprob: -13.381966590881348
    8. 'H' → logprob: -13.506966590881348
    9. '   ' → logprob: -14.006966590881348
    10. '(' → logprob: -15.006966590881348

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031942317727953196
    2. ' range' → logprob: -6.003194332122803
    3. '(H' → logprob: -7.378194332122803
    4. 'H' → logprob: -9.378193855285645
    5. '(range' → logprob: -12.003193855285645
    6. 'Range' → logprob: -13.003193855285645
    7. '   ' → logprob: -14.878193855285645
    8. '_range' → logprob: -16.25319480895996
    9. '	range' → logprob: -17.12819480895996
    10. 're' → logprob: -17.25319480895996

Token 472: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0015042672166600823
    2. 'H' → logprob: -6.501504421234131
    3. 'range' → logprob: -13.251503944396973
    4. '(' → logprob: -17.12650489807129
    5. 'Range' → logprob: -17.50150489807129
    6. ' H' → logprob: -17.62650489807129
    7. ' range' → logprob: -17.62650489807129
    8. ' (' → logprob: -18.12650489807129
    9. '	H' → logprob: -18.75150489807129
    10. '   ' → logprob: -18.87650489807129

Token 473: '-' (ID: 12)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8962252736091614
    2. ',' → logprob: -1.7712252140045166
    3. '-' → logprob: -1.8962252140045166
    4. 'range' → logprob: -1.8962252140045166
    5. ' range' → logprob: -3.0212252140045166
    6. 'in' → logprob: -3.8962252140045166
    7. '(H' → logprob: -4.021225452423096
    8. 'H' → logprob: -4.021225452423096
    9. '       ' → logprob: -4.771225452423096
    10. '   ' → logprob: -6.146225452423096

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003233328927308321
    2. 'H' → logprob: -6.003233432769775
    3. '-' → logprob: -7.628233432769775
    4. ' ' → logprob: -9.503232955932617
    5. 'range' → logprob: -9.503232955932617
    6. '(H' → logprob: -10.128232955932617
    7. '(' → logprob: -10.253232955932617
    8. '   ' → logprob: -10.378232955932617
    9. '       ' → logprob: -11.878232955932617
    10. ' range' → logprob: -13.628232955932617

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010926496179308742
    2. ' ,' → logprob: -9.125109672546387
    3. ',
' → logprob: -15.500109672546387
    4. ',-' → logprob: -17.00010871887207
    5. '-' → logprob: -17.37510871887207
    6. '‌,' → logprob: -18.37510871887207
    7. ' -' → logprob: -18.50010871887207
    8. '_,' → logprob: -18.62510871887207
    9. '-,' → logprob: -18.75010871887207
    10. '   ' → logprob: -19.25010871887207

Token 476: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005233882926404476
    2. ' -' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.380233764648438
    4. '0' → logprob: -18.630233764648438
    5. '−' → logprob: -19.630233764648438
    6. '   ' → logprob: -20.130233764648438
    7. ' ' → logprob: -20.380233764648438
    8. ',' → logprob: -20.505233764648438
    9. '```' → logprob: -20.630233764648438
    10. '
' → logprob: -20.755233764648438

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -16.125
    3. ' ' → logprob: -17.0
    4. '```' → logprob: -17.0
    5. '   ' → logprob: -18.0
    6. '2' → logprob: -19.125
    7. '
' → logprob: -19.25
    8. '``' → logprob: -19.375
    9. '

' → logprob: -20.75
    10. '
' → logprob: -20.75

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.673547563375905e-05
    2. '1' → logprob: -9.750086784362793
    3. ' ,' → logprob: -11.000086784362793
    4. ',-' → logprob: -12.000086784362793
    5. '-' → logprob: -12.500086784362793
    6. '```' → logprob: -14.500086784362793
    7. '   ' → logprob: -15.000086784362793
    8. '0' → logprob: -15.375086784362793
    9. ',
' → logprob: -15.625086784362793
    10. 's' → logprob: -16.625085830688477

Token 479: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '```' → logprob: -17.75000762939453
    5. ' ' → logprob: -19.50000762939453
    6. ')' → logprob: -20.25000762939453
    7. '−' → logprob: -20.25000762939453
    8. '  ' → logprob: -20.87500762939453
    9. '0' → logprob: -21.00000762939453
    10. '-)' → logprob: -21.00000762939453

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -17.75
    4. '-' → logprob: -18.0
    5. '   ' → logprob: -18.875
    6. '۱' → logprob: -20.25
    7. ')' → logprob: -20.5
    8. '１' → logprob: -21.0
    9. '``' → logprob: -21.5
    10. '
' → logprob: -21.625

Token 481: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1672949343919754
    2. '-' → logprob: -2.167294979095459
    3. '):
' → logprob: -3.917294979095459
    4. '):' → logprob: -4.542294979095459
    5. ' -' → logprob: -5.542294979095459
    6. ',-' → logprob: -6.417294979095459
    7. ' ,' → logprob: -6.792294979095459
    8. ':' → logprob: -6.917294979095459
    9. '       ' → logprob: -8.1672945022583
    10. ')' → logprob: -8.2922945022583

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015984143828973174
    2. 'if' → logprob: -7.001598358154297
    3. ' if' → logprob: -7.376598358154297
    4. '   ' → logprob: -10.001598358154297
    5. '		' → logprob: -12.126598358154297
    6. '       ' → logprob: -13.001598358154297
    7. '               ' → logprob: -13.126598358154297
    8. '	       ' → logprob: -13.501598358154297
    9. '```' → logprob: -13.751598358154297
    10. '	if' → logprob: -13.876598358154297

Token 483: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42053210735321045
    2. '           ' → logprob: -1.1705321073532104
    3. ' if' → logprob: -3.4205322265625
    4. '               ' → logprob: -8.5455322265625
    5. '   ' → logprob: -9.0455322265625
    6. '```' → logprob: -10.1705322265625
    7. '	if' → logprob: -10.7955322265625
    8. '       ' → logprob: -11.0455322265625
    9. ' ' → logprob: -11.5455322265625
    10. 'If' → logprob: -13.4205322265625

Token 484: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.04858794063329697
    2. ' grid' → logprob: -3.0485880374908447
    3. '(grid' → logprob: -15.423587799072266
    4. '	grid' → logprob: -15.798587799072266
    5. '   ' → logprob: -16.048587799072266
    6. '.grid' → logprob: -18.173587799072266
    7. 'Grid' → logprob: -18.173587799072266
    8. ' ' → logprob: -18.673587799072266
    9. 'graph' → logprob: -19.173587799072266
    10. ':grid' → logprob: -19.298587799072266

Token 485: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4259644558478612e-05
    2. '[' → logprob: -11.250014305114746
    3. 'i' → logprob: -15.250014305114746
    4. '[j' → logprob: -15.250014305114746
    5. '```' → logprob: -15.375014305114746
    6. '[I' → logprob: -16.00001335144043
    7. '[
' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.50001335144043
    9. '<|end|>' → logprob: -16.87501335144043
    10. '[int' → logprob: -17.12501335144043

Token 486: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00334370625205338
    2. '[i' → logprob: -6.12834358215332
    3. '[j' → logprob: -7.00334358215332
    4. '[' → logprob: -8.50334358215332
    5. ']' → logprob: -11.12834358215332
    6. ')[' → logprob: -11.62834358215332
    7. '"][' → logprob: -12.00334358215332
    8. '```' → logprob: -12.50334358215332
    9. ' ][' → logprob: -12.75334358215332
    10. '>[' → logprob: -13.50334358215332

Token 487: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. '[j' → logprob: -13.250003814697266
    3. ' j' → logprob: -13.875003814697266
    4. '```' → logprob: -15.125003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '[' → logprob: -16.750003814697266
    7. ']' → logprob: -16.875003814697266
    8. '	j' → logprob: -17.000003814697266
    9. '
' → logprob: -17.000003814697266
    10. '][' → logprob: -17.375003814697266

Token 488: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04338691011071205
    2. '[j' → logprob: -3.543386936187744
    3. '][' → logprob: -4.543386936187744
    4. ']==' → logprob: -5.918386936187744
    5. '[' → logprob: -9.418386459350586
    6. '[i' → logprob: -9.543386459350586
    7. '==' → logprob: -10.918386459350586
    8. '   ' → logprob: -11.293386459350586
    9. ' ]' → logprob: -11.793386459350586
    10. ']=='' → logprob: -11.918386459350586

Token 489: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5123204588890076
    2. '==' → logprob: -1.0123205184936523
    3. ']' → logprob: -3.5123205184936523
    4. ']==' → logprob: -5.637320518493652
    5. '[' → logprob: -6.137320518493652
    6. '=='' → logprob: -6.637320518493652
    7. ''' → logprob: -8.637320518493652
    8. '=' → logprob: -9.512320518493652
    9. ']=='' → logprob: -9.512320518493652
    10. '[i' → logprob: -10.137320518493652

Token 490: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -8.208653162000701e-05
    2. ' '#' → logprob: -10.375082015991211
    3. '"#' → logprob: -10.750082015991211
    4. '('#' → logprob: -11.500082015991211
    5. ' '#'' → logprob: -11.625082015991211
    6. ''' → logprob: -12.250082015991211
    7. '#' → logprob: -13.000082015991211
    8. ''.' → logprob: -13.375082015991211
    9. ''*' → logprob: -14.750082015991211
    10. '='#' → logprob: -15.125082015991211

Token 491: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032782447524368763
    2. ':
' → logprob: -6.7532782554626465
    3. ']:
' → logprob: -7.5032782554626465
    4. ':' → logprob: -7.8782782554626465
    5. '):
' → logprob: -7.8782782554626465
    6. '           ' → logprob: -8.128277778625488
    7. '0' → logprob: -9.378277778625488
    8. '']:
' → logprob: -9.503277778625488
    9. '```' → logprob: -9.503277778625488
    10. '=' → logprob: -9.878277778625488

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005028221290558577
    2. 'blah' → logprob: -5.505028247833252
    3. '0' → logprob: -7.255028247833252
    4. '           ' → logprob: -8.880027770996094
    5. ' blah' → logprob: -9.380027770996094
    6. '```' → logprob: -12.130027770996094
    7. '   ' → logprob: -12.630027770996094
    8. '                   ' → logprob: -13.005027770996094
    9. '       ' → logprob: -13.630027770996094
    10. '              ' → logprob: -13.755027770996094

Token 493: ' blah' (ID: 90894)
  Prédit: 'blah'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blah' (adapté à ' blah') → logprob: -7.97024549683556e-05
    2. ' blah' → logprob: -10.000080108642578
    3. '           ' → logprob: -10.875080108642578
    4. '0' → logprob: -11.250080108642578
    5. '               ' → logprob: -13.750080108642578
    6. 'blas' → logprob: -14.875080108642578
    7. '       ' → logprob: -15.125080108642578
    8. 'bla' → logprob: -15.250080108642578
    9. '   ' → logprob: -15.750080108642578
    10. 'bl' → logprob: -16.750080108642578

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '   ' → logprob: -16.72520637512207
    4. ' ' → logprob: -17.10020637512207
    5. '0' → logprob: -18.47520637512207
    6. '           ' → logprob: -18.97520637512207
    7. '       ' → logprob: -19.60020637512207
    8. ')' → logprob: -19.60020637512207
    9. '=

' → logprob: -19.60020637512207
    10. '=
' → logprob: -19.85020637512207

Token 495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.0
    4. '۰' → logprob: -21.25
    5. '```' → logprob: -22.5
    6. '00' → logprob: -23.25
    7. '000' → logprob: -23.625
    8. '  ' → logprob: -23.8125
    9. '٠' → logprob: -24.125
    10. '[' → logprob: -24.1875

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -17.875001907348633
    4. '```' → logprob: -19.625001907348633
    5. '=' → logprob: -20.125001907348633
    6. '٠' → logprob: -20.187501907348633
    7. '০' → logprob: -20.250001907348633
    8. '00' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '０' → logprob: -20.687501907348633

Token 497: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015383612480945885
    2. 'else' → logprob: -8.875153541564941
    3. ' else' → logprob: -12.125153541564941
    4. '       ' → logprob: -12.750153541564941
    5. '		' → logprob: -13.000153541564941
    6. '<|end|>' → logprob: -13.875153541564941
    7. '          ' → logprob: -14.250153541564941
    8. '	       ' → logprob: -14.500153541564941
    9. '               ' → logprob: -14.875153541564941
    10. '   ' → logprob: -15.750153541564941

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001071750302799046
    2. 'else' → logprob: -6.876071929931641
    3. '       ' → logprob: -10.87607192993164
    4. ' else' → logprob: -11.00107192993164
    5. '```' → logprob: -13.75107192993164
    6. '		' → logprob: -14.25107192993164
    7. '   ' → logprob: -14.87607192993164
    8. '<|end|>' → logprob: -15.00107192993164
    9. '          ' → logprob: -15.25107192993164
    10. '               ' → logprob: -15.37607192993164

Token 499: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3874410390853882
    2. 'else' (adapté à ' else') → logprob: -1.1374410390853882
    3. ' else' → logprob: -7.512441158294678
    4. '       ' → logprob: -11.26244068145752
    5. '		' → logprob: -13.01244068145752
    6. '               ' → logprob: -13.13744068145752
    7. '```' → logprob: -13.13744068145752
    8. '          ' → logprob: -13.88744068145752
    9. '	else' → logprob: -14.13744068145752
    10. '	       ' → logprob: -14.26244068145752

Token 500: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.931863051955588e-05
    2. '           ' → logprob: -10.625059127807617
    3. '              ' → logprob: -11.000059127807617
    4. '                   ' → logprob: -12.625059127807617
    5. '                ' → logprob: -12.750059127807617
    6. ':
' → logprob: -13.000059127807617
    7. '			' → logprob: -13.125059127807617
    8. ':' → logprob: -13.125059127807617
    9. 'blah' → logprob: -13.375059127807617
    10. '```' → logprob: -14.375059127807617

Token 501: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2018057405948639
    2. 'blah' → logprob: -1.7018057107925415
    3. '           ' → logprob: -7.951805591583252
    4. ' blah' → logprob: -10.95180606842041
    5. 'blas' → logprob: -12.32680606842041
    6. '```' → logprob: -12.70180606842041
    7. '   ' → logprob: -13.07680606842041
    8. 'bla' → logprob: -13.07680606842041
    9. '                
' → logprob: -13.32680606842041
    10. '                   ' → logprob: -13.45180606842041

Token 502: ' blah' (ID: 90894)
  Prédit: 'blah'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blah' (adapté à ' blah') → logprob: -0.0007181499968282878
    2. ' blah' → logprob: -7.250718116760254
    3. '1' → logprob: -11.875718116760254
    4. '   ' → logprob: -14.750718116760254
    5. 'bl' → logprob: -15.000718116760254
    6. '
' → logprob: -16.12571907043457
    7. '           ' → logprob: -16.50071907043457
    8. ' ' → logprob: -16.62571907043457
    9. 'bla' → logprob: -16.87571907043457
    10. '       ' → logprob: -17.00071907043457

Token 503: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3869078457355499
    2. ' +=' → logprob: -1.1369078159332275
    3. '=' → logprob: -10.386907577514648
    4. '           ' → logprob: -13.261907577514648
    5. '+' → logprob: -13.261907577514648
    6. '               ' → logprob: -14.011907577514648
    7. ']+=' → logprob: -14.136907577514648
    8. '   ' → logprob: -15.011907577514648
    9. ' =' → logprob: -15.261907577514648
    10. '                   ' → logprob: -16.13690757751465

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.393150329589844
    4. ' ' → logprob: -17.393150329589844
    5. '```' → logprob: -18.143150329589844
    6. '0' → logprob: -19.393150329589844
    7. '+' → logprob: -19.455650329589844
    8. '  ' → logprob: -19.580650329589844
    9. '           ' → logprob: -19.643150329589844
    10. '１' → logprob: -19.768150329589844

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.625011444091797
    4. '```' → logprob: -18.125011444091797
    5. '           ' → logprob: -19.625011444091797
    6. '
' → logprob: -20.000011444091797
    7. '       ' → logprob: -20.187511444091797
    8. ')' → logprob: -20.187511444091797
    9. '  ' → logprob: -20.250011444091797
    10. '１' → logprob: -20.437511444091797

Token 506: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001295222609769553
    2. 'd' → logprob: -9.125129699707031
    3. '		' → logprob: -11.625129699707031
    4. '       ' → logprob: -12.125129699707031
    5. '          ' → logprob: -13.000129699707031
    6. ' d' → logprob: -13.500129699707031
    7. '               ' → logprob: -14.375129699707031
    8. '   ' → logprob: -14.500129699707031
    9. '         ' → logprob: -14.500129699707031
    10. '
' → logprob: -15.750129699707031

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007183883571997285
    2. 'd' → logprob: -7.250718593597412
    3. '       ' → logprob: -12.625718116760254
    4. '          ' → logprob: -13.125718116760254
    5. ' d' → logprob: -13.375718116760254
    6. '         ' → logprob: -14.500718116760254
    7. '		' → logprob: -14.625718116760254
    8. '   ' → logprob: -15.625718116760254
    9. '               ' → logprob: -15.625718116760254
    10. '```' → logprob: -16.87571907043457

Token 508: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.0087516784551553e-05
    2. ' d' → logprob: -12.12501049041748
    3. '           ' → logprob: -12.37501049041748
    4. '   ' → logprob: -15.25001049041748
    5. '       ' → logprob: -16.125009536743164
    6. '               ' → logprob: -18.000009536743164
    7. '	d' → logprob: -19.375009536743164
    8. '```' → logprob: -19.375009536743164
    9. '
' → logprob: -19.625009536743164
    10. '          ' → logprob: -19.625009536743164

Token 509: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[j' → logprob: -12.625004768371582
    3. '[' → logprob: -13.875004768371582
    4. '```' → logprob: -16.625003814697266
    5. '[int' → logprob: -16.875003814697266
    6. '[u' → logprob: -17.375003814697266
    7. '[d' → logprob: -18.500003814697266
    8. ' [' → logprob: -18.875003814697266
    9. '[I' → logprob: -18.875003814697266
    10. '\[' → logprob: -18.875003814697266

Token 510: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.131497323513031
    2. '][' → logprob: -2.256497383117676
    3. '[j' → logprob: -4.006497383117676
    4. '[' → logprob: -8.256497383117676
    5. '```' → logprob: -11.631497383117676
    6. ']' → logprob: -11.756497383117676
    7. '}[' → logprob: -11.756497383117676
    8. ' ][' → logprob: -12.506497383117676
    9. ')[' → logprob: -12.631497383117676
    10. ' [' → logprob: -12.881497383117676

Token 511: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. ' j' → logprob: -13.875001907348633
    3. '[j' → logprob: -15.250001907348633
    4. '```' → logprob: -16.000001907348633
    5. '	j' → logprob: -16.625001907348633
    6. ':j' → logprob: -17.875001907348633
    7. ']' → logprob: -17.875001907348633
    8. ',j' → logprob: -18.125001907348633
    9. '<|end|>' → logprob: -18.375001907348633
    10. '$j' → logprob: -19.000001907348633

Token 512: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6504555940628052
    2. '[j' → logprob: -1.2754555940628052
    3. ']' → logprob: -1.6504555940628052
    4. '[' → logprob: -5.150455474853516
    5. ']=' → logprob: -6.900455474853516
    6. '=' → logprob: -9.900455474853516
    7. 'j' → logprob: -11.275455474853516
    8. ' ][' → logprob: -11.400455474853516
    9. '[i' → logprob: -11.525455474853516
    10. '```' → logprob: -12.025455474853516

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004496823064982891
    2. '[' → logprob: -6.129497051239014
    3. ' =' → logprob: -6.504497051239014
    4. '[j' → logprob: -7.129497051239014
    5. '=j' → logprob: -12.379496574401855
    6. ']=' → logprob: -13.129496574401855
    7. ']' → logprob: -13.379496574401855
    8. '=[' → logprob: -13.379496574401855
    9. ' [' → logprob: -15.254496574401855
    10. '][' → logprob: -15.379496574401855

Token 514: ' blah' (ID: 90894)
  Prédit: 'blah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blah' → logprob: -0.009765299037098885
    2. ' blah' → logprob: -4.634765148162842
    3. 'bla' → logprob: -12.759765625
    4. 'b' → logprob: -12.884765625
    5. 'bl' → logprob: -13.384765625
    6. 'blas' → logprob: -13.759765625
    7. ' ' → logprob: -14.634765625
    8. 'blur' → logprob: -15.634765625
    9. 'bh' → logprob: -16.509765625
    10. '   ' → logprob: -16.509765625

Token 515: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020314594730734825
    2. '   ' → logprob: -4.645314693450928
    3. '

' → logprob: -5.020314693450928
    4. '<|end|>' → logprob: -6.020314693450928
    5. '    
' → logprob: -7.645314693450928
    6. '\n' → logprob: -7.770314693450928
    7. '
' → logprob: -8.77031421661377
    8. '  
' → logprob: -8.77031421661377
    9. '<|end|>' → logprob: -10.14531421661377
    10. '


' → logprob: -10.14531421661377

Token 516: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.30613216757774353
    2. 'ans' → logprob: -1.931132197380066
    3. 'answer' → logprob: -3.0561320781707764
    4. 'best' → logprob: -3.5561320781707764
    5. '   ' → logprob: -3.6811320781707764
    6. 'res' → logprob: -4.3061323165893555
    7. 'result' → logprob: -5.6811323165893555
    8. 'maximum' → logprob: -7.9311323165893555
    9. '#' → logprob: -8.431132316589355
    10. '    
' → logprob: -9.181132316589355

Token 517: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8112903833389282
    2. 'ans' → logprob: -1.3112903833389282
    3. 'res' → logprob: -2.1862902641296387
    4. 'best' → logprob: -2.4362902641296387
    5. 'answer' → logprob: -2.5612902641296387
    6. 'result' → logprob: -4.811290264129639
    7. '#' (adapté à ' #') → logprob: -7.811290264129639
    8. 'score' → logprob: -9.186290740966797
    9. ' ans' → logprob: -9.436290740966797
    10. '   ' → logprob: -9.436290740966797

Token 518: ' Bon' (ID: 12658)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6803709268569946
    2. 'best' → logprob: -1.9303709268569946
    3. 'answer' → logprob: -2.055370807647705
    4. 'res' → logprob: -2.055370807647705
    5. 'max' → logprob: -2.555370807647705
    6. 'result' → logprob: -4.805370807647705
    7. 'ret' → logprob: -6.180370807647705
    8. ' ans' → logprob: -6.805370807647705
    9. 'mx' → logprob: -6.930370807647705
    10. '#' → logprob: -7.055370807647705

Token 519: ' là' (ID: 8052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.049912929534912
    2. 'ans' → logprob: -1.299912929534912
    3. 'max' → logprob: -1.549912929534912
    4. 'best' → logprob: -2.549912929534912
    5. 'result' → logprob: -3.174912929534912
    6. 'res' → logprob: -3.174912929534912
    7. ' ans' → logprob: -6.549912929534912
    8. ' answer' → logprob: -7.174912929534912
    9. '   ' → logprob: -8.17491340637207
    10. ' max' → logprob: -8.42491340637207

Token 520: ' c' (ID: 274)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5209607481956482
    2. 'ans' → logprob: -2.020960807800293
    3. 'answer' → logprob: -2.020960807800293
    4. 'best' → logprob: -2.520960807800293
    5. 'res' → logprob: -3.520960807800293
    6. '   ' → logprob: -4.270960807800293
    7. 'result' → logprob: -4.520960807800293
    8. ' ans' → logprob: -6.020960807800293
    9. ' max' → logprob: -6.395960807800293
    10. ' answer' → logprob: -7.020960807800293

Token 521: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5273626446723938
    2. ' for' → logprob: -1.902362585067749
    3. '#' → logprob: -2.652362585067749
    4. 'for' → logprob: -3.027362585067749
    5. ' #' → logprob: -3.527362585067749
    6. ' =' → logprob: -3.902362585067749
    7. ' ' → logprob: -4.027362823486328
    8. '       ' → logprob: -4.777362823486328
    9. '  ' → logprob: -4.902362823486328
    10. ':' → logprob: -5.027362823486328

Token 522: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9101331233978271
    2. 'le' → logprob: -1.0351331233978271
    3. 'for' → logprob: -2.910133123397827
    4. '   ' → logprob: -3.410133123397827
    5. 'time' → logprob: -3.535133123397827
    6. 'pour' → logprob: -3.660133123397827
    7. 'l' → logprob: -3.910133123397827
    8. 'maint' → logprob: -4.410133361816406
    9. ' time' → logprob: -4.785133361816406
    10. 'la' → logprob: -4.910133361816406

Token 523: ' hyper' (ID: 22725)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6602604985237122
    2. '#' → logprob: -1.1602604389190674
    3. 'max' → logprob: -3.5352604389190674
    4. 'for' → logprob: -3.7852604389190674
    5. 'final' → logprob: -4.1602606773376465
    6. 'best' → logprob: -4.4102606773376465
    7. 'la' → logprob: -4.6602606773376465
    8. '   ' → logprob: -4.6602606773376465
    9. 'part' → logprob: -4.7852606773376465
    10. 'tout' → logprob: -4.9102606773376465

Token 524: ' optim' (ID: 9367)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.6479954123497009
    2. 'clair' → logprob: -0.8979954123497009
    3. 'com' → logprob: -3.8979954719543457
    4. 'optim' → logprob: -4.022995471954346
    5. ' clair' → logprob: -4.522995471954346
    6. 'clear' → logprob: -4.647995471954346
    7. 'opt' → logprob: -5.272995471954346
    8. 'cl' → logprob: -7.147995471954346
    9. 'final' → logprob: -7.897995471954346
    10. 'important' → logprob: -8.022994995117188

Token 525: 'isé' (ID: 30065)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5008326768875122
    2. 'ale' → logprob: -1.2508326768875122
    3. 'isé' → logprob: -2.6258325576782227
    4. 'e' → logprob: -4.250832557678223
    5. 'a' → logprob: -4.375832557678223
    6. '```' → logprob: -6.000832557678223
    7. '#' → logprob: -7.125832557678223
    8. 'é' → logprob: -7.250832557678223
    9. 'is' → logprob: -7.625832557678223
    10. 'isée' → logprob: -7.750832557678223

Token 526: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26614516973495483
    2. 'max' → logprob: -1.8911452293395996
    3. 'answer' → logprob: -3.5161452293395996
    4. 'ans' → logprob: -3.5161452293395996
    5. 'result' → logprob: -4.6411452293396
    6. '
' → logprob: -5.1411452293396
    7. '    
' → logprob: -5.7661452293396
    8. 'res' → logprob: -6.6411452293396
    9. ' max' → logprob: -7.0161452293396
    10. ' ans' → logprob: -7.1411452293396

Token 527: ' mais' (ID: 2899)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.4795314073562622
    2. '   ' → logprob: -1.6045314073562622
    3. 'max' → logprob: -1.8545314073562622
    4. 'res' → logprob: -2.4795312881469727
    5. 'ans' → logprob: -2.4795312881469727
    6. ' max' → logprob: -2.7295312881469727
    7. ' res' → logprob: -2.9795312881469727
    8. 'answer' → logprob: -3.1045312881469727
    9. ' answer' → logprob: -3.2295312881469727
    10. 'best' → logprob: -3.9795312881469727

Token 528: ' ça' (ID: 13590)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7700318694114685
    2. 'res' → logprob: -1.5200319290161133
    3. 'max' → logprob: -1.7700319290161133
    4. 'best' → logprob: -2.5200319290161133
    5. 'answer' → logprob: -2.7700319290161133
    6. 'result' → logprob: -6.770031929016113
    7. ' ans' → logprob: -6.895031929016113
    8. '   ' → logprob: -7.020031929016113
    9. ' res' → logprob: -7.645031929016113
    10. 'ret' → logprob: -7.770031929016113

Token 529: ' fait' (ID: 7473)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4443643391132355
    2. ' max' → logprob: -1.819364309310913
    3. '#' → logprob: -2.944364309310913
    4. '   ' → logprob: -2.944364309310913
    5. 'best' → logprob: -3.319364309310913
    6. ' res' → logprob: -4.569364547729492
    7. ' #' → logprob: -4.569364547729492
    8. 'res' → logprob: -4.694364547729492
    9. 's' → logprob: -5.694364547729492
    10. 'result' → logprob: -5.819364547729492

Token 530: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.013761710375547409
    2. 'sens' → logprob: -5.513761520385742
    3. ' le' → logprob: -5.638761520385742
    4. 'son' → logprob: -6.513761520385742
    5. 'pl' → logprob: -7.263761520385742
    6. 'ple' → logprob: -7.513761520385742
    7. 'ce' → logprob: -7.763761520385742
    8. 'l' → logprob: -8.263761520385742
    9. 'un' → logprob: -8.388761520385742
    10. 'mon' → logprob: -8.513761520385742

Token 531: ' taf' (ID: 38625)
  Prédit: 'job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.042838167399168015
    2. 'b' → logprob: -3.4178380966186523
    3. 't' → logprob: -4.917838096618652
    4. 'tr' → logprob: -7.417838096618652
    5. 'trav' → logprob: -7.792838096618652
    6. ' boulot' → logprob: -8.292838096618652
    7. 'jeu' → logprob: -8.667838096618652
    8. 'taf' → logprob: -9.667838096618652
    9. ' job' → logprob: -9.667838096618652
    10. '```' → logprob: -10.167838096618652

Token 532: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36204370856285095
    2. 'max' → logprob: -1.6120437383651733
    3. 'ans' → logprob: -2.737043619155884
    4. 'answer' → logprob: -3.862043619155884
    5. 'best' → logprob: -4.987043857574463
    6. 'result' → logprob: -5.112043857574463
    7. ' max' → logprob: -6.362043857574463
    8. 'res' → logprob: -6.487043857574463
    9. ' ans' → logprob: -6.737043857574463
    10. '    
' → logprob: -7.987043857574463

Token 533: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5385284423828125
    2. 'answer' → logprob: -2.1635284423828125
    3. '   ' → logprob: -2.2885284423828125
    4. 'ans' → logprob: -2.6635284423828125
    5. 'res' → logprob: -2.7885284423828125
    6. 'best' → logprob: -3.2885284423828125
    7. 'result' → logprob: -3.5385284423828125
    8. ' max' → logprob: -7.2885284423828125
    9. 'ret' → logprob: -7.9135284423828125
    10. ' ans' → logprob: -8.038528442382812

Token 534: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6964192986488342
    2. 'answer' (adapté à ' answer') → logprob: -1.8214192390441895
    3. 'res' → logprob: -1.9464192390441895
    4. 'max' → logprob: -2.1964192390441895
    5. 'best' → logprob: -2.5714192390441895
    6. 'result' → logprob: -5.0714192390441895
    7. ' ans' → logprob: -6.5714192390441895
    8. '   ' → logprob: -6.9464192390441895
    9. 'ret' → logprob: -8.321419715881348
    10. ' res' → logprob: -8.946419715881348

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150296062231064
    2. '=' → logprob: -4.018150329589844
    3. ',' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.393150329589844
    5. '_' → logprob: -16.643150329589844
    6. ' ' → logprob: -16.768150329589844
    7. '   ' → logprob: -17.768150329589844
    8. '  ' → logprob: -17.768150329589844
    9. 'max' → logprob: -18.143150329589844
    10. '	' → logprob: -18.518150329589844

Token 536: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006339243846014142
    2. ' ' → logprob: -7.375633716583252
    3. 'max' → logprob: -12.12563419342041
    4. '1' → logprob: -14.25063419342041
    5. '   ' → logprob: -14.25063419342041
    6. '-' → logprob: -15.25063419342041
    7. 'float' → logprob: -16.500633239746094
    8. ' max' → logprob: -16.500633239746094
    9. '  ' → logprob: -16.750633239746094
    10. ' ' → logprob: -16.875633239746094

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8193366486229934e-05
    2. 'max' → logprob: -11.500018119812012
    3. '1' → logprob: -11.875018119812012
    4. ' ' → logprob: -14.250018119812012
    5. '-' → logprob: -14.875018119812012
    6. '   ' → logprob: -18.125019073486328
    7. 'float' → logprob: -18.125019073486328
    8. '(' → logprob: -18.875019073486328
    9. '[' → logprob: -19.625019073486328
    10. 'int' → logprob: -20.125019073486328

Token 538: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007530555594712496
    2. '   ' → logprob: -6.382530689239502
    3. ' 
' → logprob: -6.382530689239502
    4. '  
' → logprob: -6.632530689239502
    5. '    
' → logprob: -6.882530689239502
    6. 'for' → logprob: -7.507530689239502
    7. '\n' → logprob: -7.632530689239502
    8. ' for' → logprob: -7.882530689239502
    9. '   
' → logprob: -8.507530212402344
    10. '
' → logprob: -9.257530212402344

Token 539: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00802451092749834
    2. ' 
' → logprob: -5.3830246925354
    3. '  
' → logprob: -6.7580246925354
    4. '\n' → logprob: -7.1330246925354
    5. '    
' → logprob: -7.7580246925354
    6. '
' → logprob: -8.133024215698242
    7. 'for' → logprob: -8.383024215698242
    8. '   
' → logprob: -8.883024215698242
    9. ' for' → logprob: -9.133024215698242
    10. '\' → logprob: -9.133024215698242

Token 540: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022046364028938115
    2. ' for' → logprob: -8.50022029876709
    3. '   ' → logprob: -11.00022029876709
    4. '	for' → logprob: -15.75022029876709
    5. '
' → logprob: -16.500221252441406
    6. '    
' → logprob: -19.875221252441406
    7. ' ' → logprob: -20.625221252441406
    8. '```' → logprob: -21.500221252441406
    9. 'For' → logprob: -21.750221252441406
    10. '  ' → logprob: -22.250221252441406

Token 541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165864326059818
    2. ' i' → logprob: -4.264165878295898
    3. '	i' → logprob: -13.389165878295898
    4. '_i' → logprob: -14.139165878295898
    5. '   ' → logprob: -16.6391658782959
    6. ' ' → logprob: -17.1391658782959
    7. '```' → logprob: -17.6391658782959
    8. 'I' → logprob: -18.5141658782959
    9. '_' → logprob: -18.5141658782959
    10. '  ' → logprob: -18.6391658782959

Token 542: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024552499875426292
    2. 'in' → logprob: -3.774552583694458
    3. ' ' → logprob: -6.649552345275879
    4. ',' → logprob: -13.274552345275879
    5. '[' → logprob: -13.524552345275879
    6. ' ' → logprob: -13.524552345275879
    7. '0' → logprob: -13.649552345275879
    8. ')' → logprob: -14.149552345275879
    9. '  ' → logprob: -14.274552345275879
    10. ' ,' → logprob: -14.649552345275879

Token 543: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165629632771015
    2. ' range' → logprob: -4.26416540145874
    3. '(range' → logprob: -13.264165878295898
    4. ' ' → logprob: -15.264165878295898
    5. ')' → logprob: -16.6391658782959
    6. '   ' → logprob: -17.3891658782959
    7. '```' → logprob: -17.5141658782959
    8. '	range' → logprob: -17.7641658782959
    9. '
' → logprob: -18.3891658782959
    10. '0' → logprob: -18.6391658782959

Token 544: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -3.8889261304575484e-06
    2. 'H' → logprob: -12.625003814697266
    3. '(' → logprob: -14.625003814697266
    4. '(len' → logprob: -17.625003814697266
    5. '(
' → logprob: -18.750003814697266
    6. '	H' → logprob: -19.125003814697266
    7. ' (' → logprob: -19.750003814697266
    8. '   ' → logprob: -20.500003814697266
    9. ' H' → logprob: -21.875003814697266
    10. 'len' → logprob: -22.375003814697266

Token 545: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14282242953777313
    2. '):
' → logprob: -2.017822504043579
    3. ':' → logprob: -9.392822265625
    4. '   ' → logprob: -10.892822265625
    5. '):
' → logprob: -11.142822265625
    6. ')' → logprob: -11.267822265625
    7. '):

' → logprob: -12.267822265625
    8. ' ):' → logprob: -12.767822265625
    9. ':
' → logprob: -13.017822265625
    10. ',' → logprob: -13.017822265625

Token 546: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021907953545451164
    2. '       ' → logprob: -3.8969080448150635
    3. ' for' → logprob: -7.146907806396484
    4. '	for' → logprob: -8.146907806396484
    5. '	   ' → logprob: -9.521907806396484
    6. ' ' → logprob: -10.021907806396484
    7. '	' → logprob: -10.146907806396484
    8. 'for' → logprob: -10.271907806396484
    9. '   ' → logprob: -10.271907806396484
    10. '    ' → logprob: -11.396907806396484

Token 547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04897939786314964
    2. ' for' → logprob: -3.0489792823791504
    3. 'range' → logprob: -8.298979759216309
    4. ' range' → logprob: -9.173979759216309
    5. '   ' → logprob: -10.173979759216309
    6. ' in' → logprob: -14.423979759216309
    7. ' ' → logprob: -14.923979759216309
    8. '       ' → logprob: -16.173978805541992
    9. '  ' → logprob: -16.298978805541992
    10. 'j' → logprob: -16.298978805541992

Token 548: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132619559764862
    2. ' j' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.438261985778809
    4. '	j' → logprob: -17.188261032104492
    5. ' ' → logprob: -17.313261032104492
    6. '_j' → logprob: -18.188261032104492
    7. '    ' → logprob: -18.313261032104492
    8. '  ' → logprob: -19.063261032104492
    9. '[j' → logprob: -19.063261032104492
    10. '       ' → logprob: -19.188261032104492

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02981077879667282
    2. 'in' → logprob: -3.529810667037964
    3. ')' → logprob: -10.779810905456543
    4. ' ' → logprob: -11.154810905456543
    5. '<|end|>' → logprob: -11.529810905456543
    6. '(' → logprob: -12.404810905456543
    7. ' (' → logprob: -12.904810905456543
    8. '[' → logprob: -13.279810905456543
    9. '   ' → logprob: -13.529810905456543
    10. '  ' → logprob: -14.154810905456543

Token 550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04860338568687439
    2. ' range' → logprob: -3.0486032962799072
    3. '(range' → logprob: -11.048603057861328
    4. '(W' → logprob: -15.923603057861328
    5. 'Range' → logprob: -18.298603057861328
    6. '   ' → logprob: -18.673603057861328
    7. '	range' → logprob: -19.298603057861328
    8. ' ' → logprob: -19.548603057861328
    9. 'ange' → logprob: -19.548603057861328
    10. 'W' → logprob: -19.673603057861328

Token 551: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -6.539801688631997e-05
    2. 'W' → logprob: -9.750065803527832
    3. '(' → logprob: -12.375065803527832
    4. 'range' → logprob: -13.000065803527832
    5. '(H' → logprob: -15.750065803527832
    6. ')' → logprob: -16.000064849853516
    7. 'Range' → logprob: -16.375064849853516
    8. ' range' → logprob: -17.000064849853516
    9. ' (' → logprob: -17.000064849853516
    10. '   ' → logprob: -17.000064849853516

Token 552: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5771443843841553
    2. '):' → logprob: -0.8271443843841553
    3. ')' → logprob: -7.327144622802734
    4. '+' → logprob: -7.827144622802734
    5. '):

' → logprob: -10.327144622802734
    6. '):
' → logprob: -10.452144622802734
    7. ':' → logprob: -10.702144622802734
    8. '   ' → logprob: -10.952144622802734
    9. '       ' → logprob: -11.077144622802734
    10. ']:
' → logprob: -12.327144622802734

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012979733292013407
    2. ' if' → logprob: -6.751297950744629
    3. '               ' → logprob: -10.626297950744629
    4. 'if' → logprob: -10.876297950744629
    5. ' ' → logprob: -11.126297950744629
    6. '		' → logprob: -11.251297950744629
    7. '   ' → logprob: -11.626297950744629
    8. '	       ' → logprob: -11.626297950744629
    9. '          ' → logprob: -12.126297950744629
    10. '       ' → logprob: -12.126297950744629

Token 554: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.052215833216905594
    2. ' if' → logprob: -3.052215814590454
    3. '           ' → logprob: -5.677216053009033
    4. '   ' → logprob: -10.177215576171875
    5. '       ' → logprob: -10.177215576171875
    6. 'answer' → logprob: -10.552215576171875
    7. '               ' → logprob: -10.802215576171875
    8. 'val' → logprob: -10.927215576171875
    9. 'count' → logprob: -10.927215576171875
    10. 'current' → logprob: -11.802215576171875

Token 555: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.0430060550570488
    2. 'grid' → logprob: -3.16800594329834
    3. '   ' → logprob: -12.91800594329834
    4. '	grid' → logprob: -13.66800594329834
    5. '(grid' → logprob: -13.66800594329834
    6. ' ' → logprob: -14.16800594329834
    7. 'Grid' → logprob: -15.16800594329834
    8. 'l' → logprob: -15.29300594329834
    9. ' l' → logprob: -15.91800594329834
    10. '```' → logprob: -16.168006896972656

Token 556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[j' → logprob: -14.250000953674316
    3. ' [' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. '[' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. '[I' → logprob: -18.875
    8. 'i' → logprob: -19.875
    9. ' ' → logprob: -20.125
    10. '[
' → logprob: -21.125

Token 557: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009536851197481155
    2. '][' → logprob: -4.7595367431640625
    3. '[j' → logprob: -7.0095367431640625
    4. '[' → logprob: -11.259536743164062
    5. ')[' → logprob: -13.384536743164062
    6. '[I' → logprob: -13.634536743164062
    7. '   ' → logprob: -14.134536743164062
    8. ' ][' → logprob: -14.509536743164062
    9. 'i' → logprob: -15.259536743164062
    10. ' [' → logprob: -15.384536743164062

Token 558: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.15441757265944e-05
    2. ' j' → logprob: -11.500031471252441
    3. 'i' → logprob: -11.625031471252441
    4. '[j' → logprob: -11.750031471252441
    5. ''' → logprob: -13.625031471252441
    6. ']' → logprob: -14.000031471252441
    7. '.' → logprob: -14.500031471252441
    8. ' ' → logprob: -14.750031471252441
    9. ''.' → logprob: -14.875031471252441
    10. '```' → logprob: -15.625031471252441

Token 559: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007743270602077246
    2. '[j' → logprob: -5.7577433586120605
    3. '[i' → logprob: -6.0077433586120605
    4. '[' → logprob: -7.0077433586120605
    5. ']==' → logprob: -7.5077433586120605
    6. '==' → logprob: -8.632742881774902
    7. ']!=' → logprob: -9.132742881774902
    8. ' !=' → logprob: -9.257742881774902
    9. ' ==' → logprob: -9.632742881774902
    10. ' ]' → logprob: -9.882742881774902

Token 560: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23661907017230988
    2. '!=' → logprob: -1.7366191148757935
    3. ' ==' → logprob: -3.861618995666504
    4. ' !=' → logprob: -4.361618995666504
    5. '.' → logprob: -8.611618995666504
    6. '   ' → logprob: -8.611618995666504
    7. ')' → logprob: -9.236618995666504
    8. '[' → logprob: -9.486618995666504
    9. '!='' → logprob: -9.486618995666504
    10. '=' → logprob: -10.236618995666504

Token 561: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -3.786196975852363e-05
    2. '"."' → logprob: -10.875038146972656
    3. ' '.'' → logprob: -11.750038146972656
    4. '".' → logprob: -12.625038146972656
    5. '.' → logprob: -12.625038146972656
    6. ''#' → logprob: -13.000038146972656
    7. ''' → logprob: -13.375038146972656
    8. ' '.' → logprob: -14.750038146972656
    9. '.'.' → logprob: -17.250038146972656
    10. '('.')' → logprob: -17.375038146972656

Token 562: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.8655685186386108
    2. ':' → logprob: -1.4905685186386108
    3. ' '' → logprob: -2.6155686378479004
    4. ')' → logprob: -2.6155686378479004
    5. '':
' → logprob: -2.6155686378479004
    6. ''' → logprob: -3.1155686378479004
    7. ''):
' → logprob: -3.2405686378479004
    8. ':
' → logprob: -4.3655686378479
    9. '):
' → logprob: -4.3655686378479
    10. '')' → logprob: -4.8655686378479

Token 563: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003783808322623372
    2. '           ' → logprob: -6.003783702850342
    3. 'answer' → logprob: -7.378783702850342
    4. ' answer' → logprob: -7.503783702850342
    5. '	           ' → logprob: -10.3787841796875
    6. '                
' → logprob: -10.6287841796875
    7. '                   ' → logprob: -11.3787841796875
    8. '
' → logprob: -11.7537841796875
    9. '                       ' → logprob: -12.0037841796875
    10. '	       ' → logprob: -12.0037841796875

Token 564: ' tmp' (ID: 8919)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.09269420057535172
    2. ' answer' → logprob: -3.7176942825317383
    3. 'temp' → logprob: -3.8426942825317383
    4. '                   ' → logprob: -4.092694282531738
    5. 'tmp' (adapté à ' tmp') → logprob: -4.842694282531738
    6. 'val' → logprob: -4.967694282531738
    7. 'ans' → logprob: -5.467694282531738
    8. 'total' → logprob: -5.967694282531738
    9. 'candidate' → logprob: -7.217694282531738
    10. 'score' → logprob: -7.342694282531738

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008614926598966122
    2. '=' → logprob: -4.758615016937256
    3. ' +=' → logprob: -14.883614540100098
    4. '   ' → logprob: -17.883615493774414
    5. '+=' → logprob: -18.133615493774414
    6. ' ' → logprob: -18.383615493774414
    7. '	' → logprob: -18.633615493774414
    8. '=l' → logprob: -18.883615493774414
    9. ' =(' → logprob: -19.008615493774414
    10. ')' → logprob: -19.008615493774414

Token 566: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007268482004292309
    2. ' l' → logprob: -7.375726699829102
    3. '(l' → logprob: -9.375726699829102
    4. '   ' → logprob: -11.625726699829102
    5. '(' → logprob: -12.500726699829102
    6. ' (' → logprob: -13.625726699829102
    7. '	l' → logprob: -14.000726699829102
    8. ' ' → logprob: -14.750726699829102
    9. '  ' → logprob: -16.0007266998291
    10. 'u' → logprob: -16.3757266998291

Token 567: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[j' → logprob: -15.750000953674316
    4. '```' → logprob: -16.25
    5. '[' → logprob: -16.875
    6. '[I' → logprob: -17.0
    7. 'i' → logprob: -17.125
    8. '[u' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '
' → logprob: -19.125

Token 568: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012792978435754776
    2. '[i' → logprob: -5.012793064117432
    3. '[j' → logprob: -5.137793064117432
    4. ' ][' → logprob: -9.512792587280273
    5. '[' → logprob: -9.637792587280273
    6. ']' → logprob: -10.262792587280273
    7. ' [' → logprob: -12.387792587280273
    8. '   ' → logprob: -13.637792587280273
    9. 'i' → logprob: -13.762792587280273
    10. '```' → logprob: -13.887792587280273

Token 569: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.750001907348633
    3. '[j' → logprob: -14.625001907348633
    4. '	j' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '       ' → logprob: -20.500001907348633
    7. '][' → logprob: -21.000001907348633
    8. ' ' → logprob: -21.500001907348633
    9. '           ' → logprob: -21.500001907348633
    10. ':j' → logprob: -21.500001907348633

Token 570: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07161848247051239
    2. ']+' → logprob: -3.0716185569763184
    3. '+' → logprob: -3.8216185569763184
    4. ' +' → logprob: -7.196618556976318
    5. '+r' → logprob: -9.94661808013916
    6. '}' → logprob: -10.32161808013916
    7. ')' → logprob: -11.57161808013916
    8. '}+' → logprob: -11.69661808013916
    9. '+d' → logprob: -11.82161808013916
    10. '-' → logprob: -12.32161808013916

Token 571: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2048438936471939
    2. ' +' → logprob: -1.7048438787460327
    3. '+r' → logprob: -6.204843997955322
    4. '+d' → logprob: -6.579843997955322
    5. '+l' → logprob: -11.704843521118164
    6. '+
' → logprob: -13.329843521118164
    7. '+t' → logprob: -13.329843521118164
    8. '+j' → logprob: -13.954843521118164
    9. '+m' → logprob: -14.329843521118164
    10. '+c' → logprob: -14.329843521118164

Token 572: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001398929744027555
    2. ' r' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.875139236450195
    4. '	r' → logprob: -18.750139236450195
    5. '
' → logprob: -19.250139236450195
    6. 'l' → logprob: -20.250139236450195
    7. '(r' → logprob: -20.625139236450195
    8. 'd' → logprob: -20.750139236450195
    9. '       ' → logprob: -21.125139236450195
    10. ' ' → logprob: -21.125139236450195

Token 573: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.625000953674316
    3. ' [' → logprob: -14.875000953674316
    4. '[' → logprob: -15.375000953674316
    5. 'i' → logprob: -16.250001907348633
    6. ' i' → logprob: -17.125001907348633
    7. '[j' → logprob: -17.125001907348633
    8. '[I' → logprob: -18.125001907348633
    9. '(i' → logprob: -18.625001907348633
    10. '   ' → logprob: -20.375001907348633

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5761411190032959
    2. '[i' → logprob: -0.8261411190032959
    3. '[' → logprob: -9.326141357421875
    4. '[j' → logprob: -9.826141357421875
    5. ' [' → logprob: -11.451141357421875
    6. '>[' → logprob: -11.701141357421875
    7. ']' → logprob: -11.826141357421875
    8. '}[' → logprob: -11.826141357421875
    9. ' ][' → logprob: -11.951141357421875
    10. '```' → logprob: -12.201141357421875

Token 575: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.456358823925257e-05
    2. '[j' → logprob: -9.750064849853516
    3. '][' → logprob: -12.750064849853516
    4. 'i' → logprob: -13.250064849853516
    5. ' j' → logprob: -13.625064849853516
    6. '[i' → logprob: -15.750064849853516
    7. '	j' → logprob: -16.000064849853516
    8. ']' → logprob: -16.875064849853516
    9. '```' → logprob: -17.500064849853516
    10. '[' → logprob: -17.625064849853516

Token 576: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17986243963241577
    2. '-' → logprob: -1.8048624992370605
    3. ')' → logprob: -9.429862022399902
    4. ' ' → logprob: -10.929862022399902
    5. '[' → logprob: -11.304862022399902
    6. ']' → logprob: -12.429862022399902
    7. '>' → logprob: -14.679862022399902
    8. '```' → logprob: -14.679862022399902
    9. ')-' → logprob: -14.804862022399902
    10. ']-' → logprob: -15.054862022399902

Token 577: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06200141832232475
    2. '-' → logprob: -2.8120014667510986
    3. ' ' → logprob: -10.93700122833252
    4. '               ' → logprob: -12.18700122833252
    5. '           ' → logprob: -12.31200122833252
    6. '                   ' → logprob: -12.81200122833252
    7. '[' → logprob: -14.18700122833252
    8. '```' → logprob: -14.31200122833252
    9. ')' → logprob: -14.68700122833252
    10. '+' → logprob: -15.56200122833252

Token 578: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00861669983714819
    2. ' u' → logprob: -4.758616924285889
    3. 'd' → logprob: -13.25861644744873
    4. '	u' → logprob: -15.25861644744873
    5. '   ' → logprob: -16.633617401123047
    6. ' d' → logprob: -17.258617401123047
    7. '_u' → logprob: -17.508617401123047
    8. '(u' → logprob: -17.633617401123047
    9. '
' → logprob: -19.508617401123047
    10. '       ' → logprob: -19.633617401123047

Token 579: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.375001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '```' → logprob: -15.125001907348633
    5. 'i' → logprob: -15.250001907348633
    6. '(i' → logprob: -18.125001907348633
    7. '[I' → logprob: -18.125001907348633
    8. '][' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.750001907348633
    10. '[
' → logprob: -19.125001907348633

Token 580: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002040583174675703
    2. '[i' → logprob: -6.252040386199951
    3. '[j' → logprob: -9.50204086303711
    4. '[' → logprob: -11.12704086303711
    5. ' ][' → logprob: -11.12704086303711
    6. ']' → logprob: -12.25204086303711
    7. ''][' → logprob: -14.25204086303711
    8. ')[' → logprob: -14.62704086303711
    9. '"][' → logprob: -14.87704086303711
    10. '```' → logprob: -14.87704086303711

Token 581: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.153795766294934e-06
    2. '[j' → logprob: -12.500005722045898
    3. ' j' → logprob: -13.125005722045898
    4. '	j' → logprob: -16.3750057220459
    5. '][' → logprob: -16.3750057220459
    6. '   ' → logprob: -17.0000057220459
    7. '```' → logprob: -17.1250057220459
    8. '[' → logprob: -17.2500057220459
    9. ']' → logprob: -18.1250057220459
    10. '<|end|>' → logprob: -18.3750057220459

Token 582: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2101297378540039
    2. '+' → logprob: -2.210129737854004
    3. ' -' → logprob: -2.710129737854004
    4. '-' → logprob: -4.835129737854004
    5. '[j' → logprob: -5.335129737854004
    6. '+j' → logprob: -8.835129737854004
    7. '[' → logprob: -9.210129737854004
    8. '[i' → logprob: -9.460129737854004
    9. ' ' → logprob: -9.710129737854004
    10. ']' → logprob: -9.960129737854004

Token 583: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05870022252202034
    2. '-' → logprob: -3.0587003231048584
    3. ' +' → logprob: -4.808700084686279
    4. '+' → logprob: -6.433700084686279
    5. ' ' → logprob: -9.558700561523438
    6. '[' → logprob: -9.808700561523438
    7. '[i' → logprob: -10.308700561523438
    8. '               ' → logprob: -10.433700561523438
    9. '[j' → logprob: -10.558700561523438
    10. '                   ' → logprob: -10.558700561523438

Token 584: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861456897109747
    2. ' d' → logprob: -4.758614540100098
    3. '	d' → logprob: -21.133615493774414
    4. '(d' → logprob: -22.008615493774414
    5. ' ' → logprob: -22.383615493774414
    6. '_d' → logprob: -22.508615493774414
    7. '
' → logprob: -22.633615493774414
    8. '   ' → logprob: -22.758615493774414
    9. '```' → logprob: -23.133615493774414
    10. 'D' → logprob: -23.633615493774414

Token 585: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.750003814697266
    3. '][' → logprob: -14.125003814697266
    4. 'i' → logprob: -14.250003814697266
    5. ' [' → logprob: -14.375003814697266
    6. '[' → logprob: -15.125003814697266
    7. '[j' → logprob: -16.625003814697266
    8. '(i' → logprob: -16.875003814697266
    9. '[I' → logprob: -17.250003814697266
    10. ']' → logprob: -17.750003814697266

Token 586: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04923204332590103
    2. '[j' → logprob: -3.174232006072998
    3. '[i' → logprob: -5.174232006072998
    4. ']' → logprob: -8.174232482910156
    5. '[' → logprob: -8.424232482910156
    6. 'j' → logprob: -10.674232482910156
    7. '```' → logprob: -11.549232482910156
    8. ' [' → logprob: -12.799232482910156
    9. ')[' → logprob: -12.924232482910156
    10. ' ][' → logprob: -13.049232482910156

Token 587: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.47757811343763e-05
    2. '[j' → logprob: -10.250044822692871
    3. 'i' → logprob: -12.000044822692871
    4. ']' → logprob: -13.750044822692871
    5. '][' → logprob: -14.000044822692871
    6. ' j' → logprob: -14.375044822692871
    7. '[i' → logprob: -14.875044822692871
    8. '```' → logprob: -16.250043869018555
    9. '	j' → logprob: -16.250043869018555
    10. '   ' → logprob: -16.875043869018555

Token 588: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07005392014980316
    2. '-' → logprob: -2.695053815841675
    3. ')' → logprob: -9.445054054260254
    4. ']' → logprob: -10.820054054260254
    5. ' ' → logprob: -11.695054054260254
    6. '[' → logprob: -12.445054054260254
    7. ']-' → logprob: -13.570054054260254
    8. '                   ' → logprob: -13.820054054260254
    9. ')-' → logprob: -14.070054054260254
    10. '```' → logprob: -14.445054054260254

Token 589: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06996966898441315
    2. '-' → logprob: -2.694969654083252
    3. '               ' → logprob: -10.56997013092041
    4. ' ' → logprob: -12.69497013092041
    5. '                   ' → logprob: -13.44497013092041
    6. '           ' → logprob: -14.69497013092041
    7. ' −' → logprob: -14.69497013092041
    8. '<|end|>' → logprob: -15.06997013092041
    9. ')' → logprob: -15.31997013092041
    10. '                ' → logprob: -15.44497013092041

Token 590: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.143808109802194e-05
    2. '4' → logprob: -10.125041007995605
    3. '1' → logprob: -14.000041007995605
    4. ' ' → logprob: -14.500041007995605
    5. '۳' → logprob: -17.375041961669922
    6. '   ' → logprob: -17.500041961669922
    7. '３' → logprob: -18.000041961669922
    8. '```' → logprob: -18.625041961669922
    9. '٣' → logprob: -18.875041961669922
    10. '﻿' → logprob: -19.375041961669922

Token 591: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007093269377946854
    2. '4' → logprob: -5.00709342956543
    3. '1' → logprob: -7.88209342956543
    4. ' ' → logprob: -15.13209342956543
    5. '   ' → logprob: -16.75709342956543
    6. '  ' → logprob: -18.63209342956543
    7. '３' → logprob: -18.63209342956543
    8. '```' → logprob: -18.88209342956543
    9. '۳' → logprob: -19.25709342956543
    10. '﻿' → logprob: -20.25709342956543

Token 592: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027655328158289194
    2. ')' → logprob: -7.127765655517578
    3. '                
' → logprob: -7.627765655517578
    4. '           ' → logprob: -8.002765655517578
    5. ' 
' → logprob: -8.002765655517578
    6. '  
' → logprob: -8.627765655517578
    7. '<|end|>' → logprob: -9.002765655517578
    8. '              ' → logprob: -9.127765655517578
    9. '
' → logprob: -9.377765655517578
    10. '                ' → logprob: -9.502765655517578

Token 593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010368362069129944
    2. '           ' → logprob: -5.010368347167969
    3. ')' → logprob: -6.135368347167969
    4. '
' → logprob: -8.260368347167969
    5. '                
' → logprob: -8.385368347167969
    6. '  
' → logprob: -8.510368347167969
    7. ' if' → logprob: -9.010368347167969
    8. '\n' → logprob: -9.010368347167969
    9. '                   ' → logprob: -9.135368347167969
    10. '<|end|>' → logprob: -9.260368347167969

Token 594: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19246560335159302
    2. 'if' (adapté à ' if') → logprob: -2.1924655437469482
    3. '               ' → logprob: -2.9424655437469482
    4. 'answer' → logprob: -4.942465782165527
    5. ' answer' → logprob: -6.067465782165527
    6. '           ' → logprob: -7.317465782165527
    7. '
' → logprob: -7.567465782165527
    8. '                   ' → logprob: -10.692465782165527
    9. '```' → logprob: -11.817465782165527
    10. '   ' → logprob: -12.317465782165527

Token 595: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16022777557373047
    2. ' tmp' → logprob: -1.9102277755737305
    3. '	tmp' → logprob: -12.91022777557373
    4. '(tmp' → logprob: -14.28522777557373
    5. '/tmp' → logprob: -15.91022777557373
    6. ' ' → logprob: -16.160228729248047
    7. '$tmp' → logprob: -16.285228729248047
    8. '[tmp' → logprob: -16.785228729248047
    9. '_tmp' → logprob: -17.410228729248047
    10. '   ' → logprob: -17.785228729248047

Token 596: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2519491910934448
    2. '>' → logprob: -1.5019491910934448
    3. ' ' → logprob: -11.876949310302734
    4. ')' → logprob: -11.876949310302734
    5. '   ' → logprob: -13.751949310302734
    6. ' >
' → logprob: -14.751949310302734
    7. '[' → logprob: -14.751949310302734
    8. ' >=' → logprob: -15.001949310302734
    9. ' ' → logprob: -15.001949310302734
    10. ')>' → logprob: -15.001949310302734

Token 597: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.005233882926404476
    2. ' answer' → logprob: -5.2552337646484375
    3. '	answer' → logprob: -16.880233764648438
    4. '           ' → logprob: -18.005233764648438
    5. '               ' → logprob: -18.755233764648438
    6. 'Answer' → logprob: -19.130233764648438
    7. '   ' → logprob: -19.880233764648438
    8. '(answer' → logprob: -21.005233764648438
    9. '_answer' → logprob: -21.380233764648438
    10. '.answer' → logprob: -21.755233764648438

Token 598: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1275366097688675
    2. ':
' → logprob: -2.1275365352630615
    3. '                   ' → logprob: -8.62753677368164
    4. '               ' → logprob: -8.87753677368164
    5. '=' → logprob: -9.12753677368164
    6. '):
' → logprob: -10.37753677368164
    7. '):' → logprob: -10.50253677368164
    8. ' :' → logprob: -10.50253677368164
    9. ' :
' → logprob: -11.00253677368164
    10. ' =' → logprob: -11.25253677368164

Token 599: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0706704705953598
    2. '               ' → logprob: -3.5706703662872314
    3. ' answer' → logprob: -3.8206703662872314
    4. 'answer' → logprob: -4.0706706047058105
    5. '                       ' → logprob: -7.1956706047058105
    6. '                               ' → logprob: -9.695670127868652
    7. '   ' → logprob: -9.820670127868652
    8. '```' → logprob: -10.070670127868652
    9. '                  ' → logprob: -10.570670127868652
    10. 'Answer' → logprob: -10.570670127868652

Token 600: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.02479662373661995
    2. ' answer' → logprob: -4.024796485900879
    3. '                   ' → logprob: -5.024796485900879
    4. '               ' → logprob: -10.149796485900879
    5. '                       ' → logprob: -11.649796485900879
    6. '   ' → logprob: -13.399796485900879
    7. '	answer' → logprob: -13.774796485900879
    8. '           ' → logprob: -14.649796485900879
    9. '       ' → logprob: -15.149796485900879
    10. 'Answer' → logprob: -15.524796485900879

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. '＝' → logprob: -16.828889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '<|end|>' → logprob: -18.828889846801758
    6. '.=' → logprob: -18.953889846801758
    7. ' =
' → logprob: -18.953889846801758
    8. ' =)' → logprob: -19.453889846801758
    9. '=

' → logprob: -19.578889846801758
    10. '	' → logprob: -19.953889846801758

Token 602: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.20141372084617615
    2. ' tmp' → logprob: -1.7014137506484985
    3. '	tmp' → logprob: -15.576414108276367
    4. '(tmp' → logprob: -15.951414108276367
    5. '/tmp' → logprob: -16.826414108276367
    6. '$tmp' → logprob: -16.951414108276367
    7. 'temp' → logprob: -17.076414108276367
    8. '_tmp' → logprob: -17.826414108276367
    9. '[tmp' → logprob: -18.076414108276367
    10. '.tmp' → logprob: -19.451414108276367

Token 603: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04603493958711624
    2. '    
' → logprob: -3.546035051345825
    3. '   ' → logprob: -4.796034812927246
    4. '  
' → logprob: -5.546034812927246
    5. ' return' → logprob: -6.921034812927246
    6. 'return' → logprob: -7.296034812927246
    7. ' 
' → logprob: -7.421034812927246
    8. '\n' → logprob: -7.421034812927246
    9. '   
' → logprob: -7.921034812927246
    10. '	return' → logprob: -8.171034812927246

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03987151011824608
    2. 'print' → logprob: -3.2898714542388916
    3. '
' → logprob: -6.539871692657471
    4. '```' → logprob: -8.539871215820312
    5. ' print' → logprob: -8.789871215820312
    6. 'return' → logprob: -10.914871215820312
    7. '    
' → logprob: -11.289871215820312
    8. ' return' → logprob: -13.039871215820312
    9. '	print' → logprob: -13.539871215820312
    10. '``' → logprob: -14.539871215820312

Token 605: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.21051649749279022
    2. '   ' → logprob: -1.7105164527893066
    3. '```' → logprob: -4.835516452789307
    4. 'return' → logprob: -7.585516452789307
    5. '
' → logprob: -8.210516929626465
    6. ' print' → logprob: -8.210516929626465
    7. ')' → logprob: -10.335516929626465
    8. '    
' → logprob: -11.085516929626465
    9. ' return' → logprob: -11.960516929626465
    10. '``' → logprob: -12.085516929626465

Token 606: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -4.1557283111615106e-05
    2. 'answer' → logprob: -10.500041961669922
    3. '(' → logprob: -11.375041961669922
    4. '(ans' → logprob: -13.250041961669922
    5. '()' → logprob: -14.625041961669922
    6. ' (' → logprob: -15.125041961669922
    7. '(question' → logprob: -18.250041961669922
    8. '(output' → logprob: -18.375041961669922
    9. '	answer' → logprob: -18.625041961669922
    10. '(
' → logprob: -19.000041961669922

Token 607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '()' → logprob: -15.125003814697266
    5. '())' → logprob: -15.875003814697266
    6. '')' → logprob: -16.875003814697266
    7. '```' → logprob: -17.125003814697266
    8. '`)' → logprob: -17.250003814697266
    9. ')`' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.750003814697266

Token 608: 'resolve' (ID: 31567)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 607
Tokens correctement prédits (1ère position, stricte): 206
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 451
Précision stricte (1ère position): 33.94%
Précision adaptée (1ère position): 40.53%
Précision (top 10): 74.30%
================================================================================
