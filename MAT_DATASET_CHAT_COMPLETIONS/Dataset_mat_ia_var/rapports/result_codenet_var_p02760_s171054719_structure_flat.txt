================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = list(map(int, input().split()))
maru = 111
flag = 0
n = int(input())
k = 0
while k < n:
    e = int(input())
    i = 0
    while i < 3:
        if e == a[i]:
            a[i] = maru
        if e == b[i]:
            b[i] = maru
        if e == c[i]:
            c[i] = maru
        i += 1
    k += 1
j = 0
while j < 3:
    if a[j] == b[j] and b[j] == c[j]:
        if c[j] == maru:
            flag = 1
    j += 1
if a[0] == a[1] and a[1] == a[2]:
    if a[0] == maru:
        flag = 1
if b[0] == b[1] and b[1] == b[2]:
    if b[0] == maru:
        flag = 1
if c[0] == c[1] and c[1] == c[2]:
    if c[0] == maru:
        flag = 1
if a[0] == b[1] and b[1] == c[2]:
    if c[2] == maru:
        flag = 1
if a[2] == b[1] and b[1] == c[0]:
    if c[0] == maru:
        flag = 1
if flag == 1:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6381023526191711
    2. '(' → logprob: -0.7631023526191711
    3. '[a' → logprob: -6.8881025314331055
    4. '```' → logprob: -6.8881025314331055
    5. '(a' → logprob: -7.2631025314331055
    6. ''' → logprob: -7.5131025314331055
    7. '.' → logprob: -7.6381025314331055
    8. 'a' → logprob: -7.6381025314331055
    9. ' (' → logprob: -8.013102531433105
    10. '(
' → logprob: -8.888102531433105

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07738731801509857
    2. '(lambda' → logprob: -2.7023873329162598
    3. ')' → logprob: -5.45238733291626
    4. '```' → logprob: -7.45238733291626
    5. '(str' → logprob: -7.70238733291626
    6. '<|end|>' → logprob: -7.82738733291626
    7. '(()' → logprob: -8.577386856079102
    8. '(eval' → logprob: -8.702386856079102
    9. '(open' → logprob: -8.827386856079102
    10. '))' → logprob: -9.202386856079102

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14049871265888214
    2. '))' → logprob: -2.765498638153076
    3. '(a' → logprob: -3.890498638153076
    4. ')' → logprob: -4.015498638153076
    5. '(input' → logprob: -4.140498638153076
    6. '(user' → logprob: -5.640498638153076
    7. '((' → logprob: -7.140498638153076
    8. '```' → logprob: -7.140498638153076
    9. '(next' → logprob: -7.390498638153076
    10. '<|end|>' → logprob: -7.515498638153076

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014640565030276775
    2. ' input' → logprob: -4.5146403312683105
    3. '(input' → logprob: -5.6396403312683105
    4. ')' → logprob: -11.139640808105469
    5. ',input' → logprob: -11.514640808105469
    6. '(' → logprob: -12.889640808105469
    7. '=input' → logprob: -13.889640808105469
    8. '[input' → logprob: -13.889640808105469
    9. ' (' → logprob: -14.139640808105469
    10. '<input' → logprob: -14.389640808105469

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04872248321771622
    2. '()))' → logprob: -4.423722267150879
    3. ')' → logprob: -4.673722267150879
    4. '))' → logprob: -4.923722267150879
    5. '(()' → logprob: -5.173722267150879
    6. '())' → logprob: -5.673722267150879
    7. '()' → logprob: -5.798722267150879
    8. '((' → logprob: -6.923722267150879
    9. '('' → logprob: -7.173722267150879
    10. '(""))' → logprob: -7.173722267150879

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019964431412518024
    2. 'strip' → logprob: -6.2519965171813965
    3. 'rstrip' → logprob: -10.126996040344238
    4. ' split' → logprob: -10.626996040344238
    5. 'read' → logprob: -13.501996040344238
    6. 'spl' → logprob: -13.751996040344238
    7. 's' → logprob: -14.751996040344238
    8. '(split' → logprob: -15.251996040344238
    9. ')' → logprob: -15.376996040344238
    10. ' strip' → logprob: -15.876996040344238

Token 9: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7076902985572815
    2. '))' → logprob: -0.8326902985572815
    3. '())' → logprob: -3.5826902389526367
    4. ')' → logprob: -3.5826902389526367
    5. ')))' → logprob: -4.832690238952637
    6. '(' → logprob: -5.582690238952637
    7. '()' → logprob: -5.707690238952637
    8. '())))' → logprob: -6.582690238952637
    9. '```' → logprob: -9.832690238952637
    10. '()));' → logprob: -9.957690238952637

Token 10: 'b' (ID: 65)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0139542818069458
    2. '[' → logprob: -1.5139542818069458
    3. '+' → logprob: -1.7639542818069458
    4. 'a' → logprob: -1.7639542818069458
    5. '.' → logprob: -3.5139541625976562
    6. '`' → logprob: -4.763954162597656
    7. '```' → logprob: -4.763954162597656
    8. 'print' → logprob: -5.013954162597656
    9. ')' → logprob: -5.638954162597656
    10. 'for' → logprob: -5.763954162597656

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6847839951515198
    2. '[' → logprob: -1.059783935546875
    3. ' =' → logprob: -2.434783935546875
    4. '=' → logprob: -2.934783935546875
    5. '.append' → logprob: -5.684783935546875
    6. '+' → logprob: -6.934783935546875
    7. '[:]' → logprob: -6.934783935546875
    8. ')' → logprob: -7.184783935546875
    9. '[]' → logprob: -7.434783935546875
    10. ' .' → logprob: -8.559783935546875

Token 12: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6939690113067627
    2. 'list' → logprob: -0.6939690113067627
    3. 'a' → logprob: -8.068968772888184
    4. ' a' → logprob: -8.318968772888184
    5. ' []' → logprob: -9.318968772888184
    6. ' [' → logprob: -9.818968772888184
    7. '[]' → logprob: -10.318968772888184
    8. '[a' → logprob: -10.568968772888184
    9. ' ' → logprob: -11.068968772888184
    10. '[' → logprob: -11.068968772888184

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019945392850786448
    2. '(map' → logprob: -7.501994609832764
    3. '(.' → logprob: -7.876994609832764
    4. '((' → logprob: -7.876994609832764
    5. '```' → logprob: -8.876994132995605
    6. '(a' → logprob: -9.251994132995605
    7. '("("' → logprob: -9.501994132995605
    8. ' (' → logprob: -9.751994132995605
    9. '(range' → logprob: -10.001994132995605
    10. '(
' → logprob: -10.376994132995605

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22562430799007416
    2. '(' → logprob: -1.6006243228912354
    3. '(str' → logprob: -8.725624084472656
    4. '<int' → logprob: -10.850624084472656
    5. '(float' → logprob: -11.850624084472656
    6. '(
' → logprob: -12.350624084472656
    7. '[int' → logprob: -12.475624084472656
    8. 'int' → logprob: -12.725624084472656
    9. ' (' → logprob: -13.100624084472656
    10. '(

' → logprob: -13.725624084472656

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026455752085894346
    2. ',input' → logprob: -6.627645492553711
    3. '(' → logprob: -7.502645492553711
    4. '(input' → logprob: -8.252645492553711
    5. '`,' → logprob: -8.752645492553711
    6. ')' → logprob: -9.377645492553711
    7. '(),' → logprob: -9.502645492553711
    8. ' ,' → logprob: -9.627645492553711
    9. '))' → logprob: -10.877645492553711
    10. '',' → logprob: -11.002645492553711

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0059370906092226505
    2. 'input' → logprob: -5.130937099456787
    3. '(input' → logprob: -11.755936622619629
    4. '=input' → logprob: -15.255936622619629
    5. ',input' → logprob: -16.005937576293945
    6. ')' → logprob: -16.380937576293945
    7. '[input' → logprob: -16.505937576293945
    8. '_input' → logprob: -17.255937576293945
    9. ' a' → logprob: -17.630937576293945
    10. ' int' → logprob: -18.255937576293945

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.790129555156454e-05
    2. '()' → logprob: -9.625067710876465
    3. ' ().' → logprob: -14.875067710876465
    4. '(' → logprob: -15.000067710876465
    5. '.' → logprob: -15.375067710876465
    6. '().__' → logprob: -15.500067710876465
    7. '()))' → logprob: -15.750067710876465
    8. '().'' → logprob: -16.12506866455078
    9. '())).' → logprob: -16.50006866455078
    10. '(.' → logprob: -16.75006866455078

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. ' split' → logprob: -13.875001907348633
    3. ')' → logprob: -14.250001907348633
    4. 'spl' → logprob: -14.625001907348633
    5. 's' → logprob: -15.875001907348633
    6. '(split' → logprob: -16.375001907348633
    7. 'strip' → logprob: -17.000001907348633
    8. '```' → logprob: -17.500001907348633
    9. 'sp' → logprob: -17.750001907348633
    10. '.split' → logprob: -18.000001907348633

Token 19: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1382252424955368
    2. '())' → logprob: -3.0132253170013428
    3. '))' → logprob: -3.2632253170013428
    4. '()' → logprob: -3.5132253170013428
    5. ')' → logprob: -4.888225078582764
    6. '(' → logprob: -5.513225078582764
    7. '()));' → logprob: -9.638225555419922
    8. '()))
' → logprob: -9.888225555419922
    9. '()),' → logprob: -10.513225555419922
    10. '()`' → logprob: -10.638225555419922

Token 20: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03385430574417114
    2. 'a' → logprob: -3.9088542461395264
    3. 'if' → logprob: -6.0338544845581055
    4. 's' → logprob: -6.0338544845581055
    5. '[' → logprob: -6.4088544845581055
    6. 'n' → logprob: -7.1588544845581055
    7. '#' → logprob: -7.1588544845581055
    8. 'for' → logprob: -7.1588544845581055
    9. 'r' → logprob: -7.2838544845581055
    10. 'i' → logprob: -7.4088544845581055

Token 21: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15531334280967712
    2. ' =' → logprob: -2.65531325340271
    3. '=' → logprob: -2.90531325340271
    4. '[' → logprob: -4.280313491821289
    5. '[:]' → logprob: -6.280313491821289
    6. '_' → logprob: -6.905313491821289
    7. '.=' → logprob: -7.155313491821289
    8. 's' → logprob: -8.030313491821289
    9. '.append' → logprob: -8.530313491821289
    10. '[]' → logprob: -9.030313491821289

Token 22: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.1347777843475342
    2. ' [' → logprob: -1.2597777843475342
    3. ' a' → logprob: -1.3847777843475342
    4. ' list' → logprob: -2.884777784347534
    5. 'a' → logprob: -3.009777784347534
    6. '[]' → logprob: -4.509778022766113
    7. 'list' → logprob: -4.884778022766113
    8. '[' → logprob: -5.009778022766113
    9. ' b' → logprob: -5.009778022766113
    10. '[a' → logprob: -6.009778022766113

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019311357755213976
    2. '.' → logprob: -6.876931190490723
    3. '((' → logprob: -7.876931190490723
    4. '(range' → logprob: -8.751931190490723
    5. ')' → logprob: -9.626931190490723
    6. ' (' → logprob: -10.001931190490723
    7. '([(' → logprob: -10.251931190490723
    8. '(.' → logprob: -10.376931190490723
    9. '([' → logprob: -10.376931190490723
    10. '[(' → logprob: -10.626931190490723

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.42908236384391785
    2. '(' → logprob: -1.0540823936462402
    3. '(str' → logprob: -8.554081916809082
    4. '(lambda' → logprob: -9.929081916809082
    5. '<int' → logprob: -10.554081916809082
    6. '(
' → logprob: -11.554081916809082
    7. '(eval' → logprob: -11.554081916809082
    8. '(in' → logprob: -11.679081916809082
    9. '(float' → logprob: -11.804081916809082
    10. ' (' → logprob: -11.804081916809082

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28344830870628357
    2. '(' → logprob: -2.2834482192993164
    3. '(int' → logprob: -2.6584482192993164
    4. ',int' → logprob: -3.1584482192993164
    5. '(.' → logprob: -4.158448219299316
    6. ',input' → logprob: -5.283448219299316
    7. '(),' → logprob: -6.033448219299316
    8. '(input' → logprob: -6.033448219299316
    9. '```' → logprob: -6.408448219299316
    10. '`,' → logprob: -7.033448219299316

Token 26: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5441504716873169
    2. ' input' → logprob: -1.669150471687317
    3. 'input' → logprob: -2.1691503524780273
    4. ' int' → logprob: -2.1691503524780273
    5. 'str' → logprob: -6.419150352478027
    6. '(int' → logprob: -7.669150352478027
    7. ' str' → logprob: -7.669150352478027
    8. '(input' → logprob: -9.544150352478027
    9. '<int' → logprob: -10.794150352478027
    10. '[int' → logprob: -11.294150352478027

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003631550120189786
    2. '()' → logprob: -5.628631591796875
    3. '()))' → logprob: -11.503631591796875
    4. '(' → logprob: -11.628631591796875
    5. '.' → logprob: -12.878631591796875
    6. '())' → logprob: -13.003631591796875
    7. '(.' → logprob: -13.128631591796875
    8. '()).' → logprob: -13.878631591796875
    9. ' ().' → logprob: -13.878631591796875
    10. '().'' → logprob: -14.128631591796875

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.625005722045898
    3. 'strip' → logprob: -13.625005722045898
    4. ' split' → logprob: -14.500005722045898
    5. '.split' → logprob: -15.000005722045898
    6. '))' → logprob: -15.500005722045898
    7. 'spl' → logprob: -15.750005722045898
    8. '(split' → logprob: -16.0000057220459
    9. 'rstrip' → logprob: -17.3750057220459
    10. 's' → logprob: -17.5000057220459

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23966443538665771
    2. '())' → logprob: -2.2396645545959473
    3. '()' → logprob: -2.9896645545959473
    4. '))' → logprob: -3.1146645545959473
    5. ')' → logprob: -4.614664554595947
    6. '(' → logprob: -6.489664554595947
    7. '()>' → logprob: -8.989664077758789
    8. '())))' → logprob: -9.114664077758789
    9. '()));' → logprob: -9.614664077758789
    10. ')))' → logprob: -10.114664077758789

Token 30: 'mar' (ID: 8185)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2935996353626251
    2. '[' → logprob: -1.9185996055603027
    3. 'a' → logprob: -2.9185996055603027
    4. 'n' → logprob: -4.168599605560303
    5. '#' → logprob: -4.293599605560303
    6. '.' → logprob: -5.293599605560303
    7. 'x' → logprob: -5.793599605560303
    8. '`' → logprob: -5.793599605560303
    9. '=' → logprob: -6.168599605560303
    10. '```' → logprob: -6.293599605560303

Token 31: 'u' (ID: 84)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05946646258234978
    2. 'ks' → logprob: -3.5594663619995117
    3. 'g' → logprob: -4.309466361999512
    4. 's' → logprob: -5.059466361999512
    5. 'gin' → logprob: -5.559466361999512
    6. 'ked' → logprob: -5.934466361999512
    7. 'kers' → logprob: -7.184466361999512
    8. 't' → logprob: -7.184466361999512
    9. 'kup' → logprob: -7.809466361999512
    10. 'ker' → logprob: -8.059466361999512

Token 32: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8334159255027771
    2. ' =' → logprob: -1.0834159851074219
    3. '=' → logprob: -2.333415985107422
    4. 'o' → logprob: -3.583415985107422
    5. '[' → logprob: -3.833415985107422
    6. 's' → logprob: -4.208415985107422
    7. '.' → logprob: -4.458415985107422
    8. '=[]' → logprob: -4.583415985107422
    9. 'a' → logprob: -4.833415985107422
    10. '[]' → logprob: -4.958415985107422

Token 33: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20616333186626434
    2. '0' → logprob: -2.5811634063720703
    3. '[' → logprob: -2.7061634063720703
    4. 'set' → logprob: -3.5811634063720703
    5. ' []' → logprob: -4.70616340637207
    6. 'sum' → logprob: -6.45616340637207
    7. '[a' → logprob: -6.83116340637207
    8. ' [' → logprob: -6.95616340637207
    9. 'a' → logprob: -7.08116340637207
    10. ' ' → logprob: -7.20616340637207

Token 34: '111' (ID: 8780)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4985717833042145
    2. '[' → logprob: -1.498571753501892
    3. 'set' → logprob: -2.4985718727111816
    4. '0' → logprob: -3.7485718727111816
    5. '[a' → logprob: -3.8735718727111816
    6. 'a' → logprob: -3.9985718727111816
    7. 'sum' → logprob: -4.998571872711182
    8. 'c' → logprob: -5.623571872711182
    9. '[max' → logprob: -5.748571872711182
    10. '[c' → logprob: -6.248571872711182

Token 35: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3644406199455261
    2. '.' → logprob: -2.114440679550171
    3. '[' → logprob: -2.364440679550171
    4. '*' → logprob: -3.989440679550171
    5. ' ' → logprob: -3.989440679550171
    6. '=' → logprob: -4.239440441131592
    7. ',' → logprob: -4.989440441131592
    8. ')' → logprob: -5.114440441131592
    9. '0' → logprob: -5.239440441131592
    10. 'for' → logprob: -5.614440441131592

Token 36: 'flag' (ID: 17665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3219836354255676
    2. '+' → logprob: -2.196983575820923
    3. 'if' → logprob: -2.821983575820923
    4. '*' → logprob: -3.446983575820923
    5. 'i' → logprob: -4.071983814239502
    6. '=' → logprob: -4.571983814239502
    7. 'a' → logprob: -4.571983814239502
    8. 'd' → logprob: -5.321983814239502
    9. ' for' → logprob: -5.571983814239502
    10. ',' → logprob: -5.571983814239502

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07215875387191772
    2. ' =' → logprob: -3.3221588134765625
    3. '=' → logprob: -3.4471588134765625
    4. ' ' → logprob: -7.4471588134765625
    5. ' _' → logprob: -7.5721588134765625
    6. '_=' → logprob: -7.8221588134765625
    7. ')' → logprob: -9.572158813476562
    8. '[' → logprob: -10.197158813476562
    9. 's' → logprob: -10.572158813476562
    10. '_space' → logprob: -10.697158813476562

Token 38: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3364473879337311
    2. ' False' → logprob: -1.5864473581314087
    3. 'True' → logprob: -3.5864474773406982
    4. ' True' → logprob: -3.5864474773406982
    5. '0' → logprob: -3.7114474773406982
    6. ' ' → logprob: -6.961447238922119
    7. '1' → logprob: -8.336447715759277
    8. '[]' → logprob: -11.836447715759277
    9. '-' → logprob: -12.211447715759277
    10. '(False' → logprob: -13.336447715759277

Token 39: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3767467737197876
    2. 'True' → logprob: -1.3767467737197876
    3. '0' → logprob: -2.876746654510498
    4. '1' → logprob: -5.876746654510498
    5. ' False' → logprob: -6.751746654510498
    6. ' True' → logprob: -7.126746654510498
    7. '[]' → logprob: -8.751747131347656
    8. '-' → logprob: -9.126747131347656
    9. ' ' → logprob: -10.001747131347656
    10. '[' → logprob: -10.376747131347656

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08140537142753601
    2. 'for' → logprob: -2.7064054012298584
    3. ' for' → logprob: -4.956405162811279
    4. '' → logprob: -6.331405162811279
    5. '\n' → logprob: -6.331405162811279
    6. ':' → logprob: -7.706405162811279
    7. '
' → logprob: -9.206405639648438
    8. ' 
' → logprob: -9.331405639648438
    9. '```' → logprob: -10.581405639648438
    10. 'if' → logprob: -10.956405639648438

Token 41: 'n' (ID: 77)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02143094502389431
    2. 'f' → logprob: -4.396430969238281
    3. ':' → logprob: -5.146430969238281
    4. 'i' → logprob: -7.021430969238281
    5. '
' → logprob: -7.021430969238281
    6. '\n' → logprob: -7.646430969238281
    7. ' for' → logprob: -8.396430969238281
    8. '```' → logprob: -8.521430969238281
    9. '' → logprob: -9.271430969238281
    10. 'n' → logprob: -9.521430969238281

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9100905656814575
    2. 'a' → logprob: -1.4100905656814575
    3. ' =' → logprob: -1.7850905656814575
    4. ' ' → logprob: -2.410090446472168
    5. 'u' → logprob: -3.160090446472168
    6. 'e' → logprob: -4.035090446472168
    7. 'o' → logprob: -4.535090446472168
    8. '-' → logprob: -4.660090446472168
    9. '_' → logprob: -5.910090446472168
    10. ':' → logprob: -6.035090446472168

Token 43: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7358098030090332
    2. ' a' → logprob: -0.8608098030090332
    3. 'a' → logprob: -2.985809803009033
    4. 'len' → logprob: -3.360809803009033
    5. ' int' → logprob: -4.860809803009033
    6. ' ' → logprob: -5.735809803009033
    7. 'int' → logprob: -7.735809803009033
    8. '3' → logprob: -8.110809326171875
    9. '10' → logprob: -8.485809326171875
    10. '100' → logprob: -8.735809326171875

Token 44: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031226055696606636
    2. '(input' → logprob: -3.78122615814209
    3. '()' → logprob: -5.65622615814209
    4. ' (' → logprob: -5.90622615814209
    5. '('' → logprob: -7.15622615814209
    6. 'input' → logprob: -7.90622615814209
    7. ' ' → logprob: -8.40622615814209
    8. ' ()' → logprob: -9.78122615814209
    9. '(n' → logprob: -10.03122615814209
    10. '  ' → logprob: -10.40622615814209

Token 45: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39100995659828186
    2. '())' → logprob: -1.1410099267959595
    3. ')' → logprob: -5.51600980758667
    4. '(' → logprob: -9.766010284423828
    5. ' ())' → logprob: -11.141010284423828
    6. '()
' → logprob: -11.391010284423828
    7. '().' → logprob: -12.266010284423828
    8. '()>' → logprob: -12.641010284423828
    9. '()`' → logprob: -12.766010284423828
    10. '`)' → logprob: -12.766010284423828

Token 46: 'k' (ID: 74)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7852717041969299
    2. 'for' → logprob: -1.2852716445922852
    3. '\n' → logprob: -2.285271644592285
    4. ' ' → logprob: -2.535271644592285
    5. 'i' → logprob: -3.785271644592285
    6. ' for' → logprob: -3.910271644592285
    7. '' → logprob: -4.285271644592285
    8. ' 
' → logprob: -4.785271644592285
    9. 'n' → logprob: -5.285271644592285
    10. ')' → logprob: -6.035271644592285

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21369893848896027
    2. '=' → logprob: -1.8386989831924438
    3. ' ' → logprob: -3.4636988639831543
    4. '.' → logprob: -7.713698863983154
    5. ')' → logprob: -8.213699340820312
    6. ',' → logprob: -8.588699340820312
    7. 'e' → logprob: -8.838699340820312
    8. ' +=' → logprob: -8.963699340820312
    9. '[' → logprob: -9.213699340820312
    10. ' >' → logprob: -9.338699340820312

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6251293420791626
    2. '0' → logprob: -1.6251293420791626
    3. ' n' → logprob: -1.6251293420791626
    4. ' int' → logprob: -3.500129222869873
    5. 'n' → logprob: -4.125129222869873
    6. 'int' → logprob: -4.875129222869873
    7. ' a' → logprob: -5.125129222869873
    8. 'a' → logprob: -5.375129222869873
    9. '1' → logprob: -6.000129222869873
    10. ' []' → logprob: -6.250129222869873

Token 49: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07399658113718033
    2. '0' → logprob: -3.5739965438842773
    3. ' int' → logprob: -3.9489965438842773
    4. 'n' → logprob: -4.198996543884277
    5. 'a' → logprob: -6.323996543884277
    6. '1' → logprob: -6.448996543884277
    7. 'list' → logprob: -6.823996543884277
    8. 'input' → logprob: -7.073996543884277
    9. ' n' → logprob: -7.198996543884277
    10. '[int' → logprob: -7.573996543884277

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0714572668075562
    2. '<|end|>' → logprob: -1.0714572668075562
    3. '\n' → logprob: -1.9464572668075562
    4. ' ' → logprob: -2.4464573860168457
    5. 'for' → logprob: -3.5714573860168457
    6. ' for' → logprob: -4.071457386016846
    7. ' 
' → logprob: -4.571457386016846
    8. ')' → logprob: -5.196457386016846
    9. '' → logprob: -5.321457386016846
    10. '<|end|>' → logprob: -5.821457386016846

Token 51: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4663861095905304
    2. 'for' → logprob: -1.341386079788208
    3. 'while' → logprob: -2.841386079788208
    4. 'w' → logprob: -4.091386318206787
    5. '\n' → logprob: -4.591386318206787
    6. '<|end|>' → logprob: -5.091386318206787
    7. ' for' → logprob: -5.591386318206787
    8. ':' → logprob: -5.966386318206787
    9. '' → logprob: -6.091386318206787
    10. ' ' → logprob: -6.466386318206787

Token 52: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.10226795822381973
    2. ' n' → logprob: -2.3522679805755615
    3. ' ' → logprob: -6.602267742156982
    4. 'k' → logprob: -7.852267742156982
    5. ' a' → logprob: -9.22726821899414
    6. 'n' → logprob: -9.60226821899414
    7. ' not' → logprob: -9.72726821899414
    8. ' flag' → logprob: -10.22726821899414
    9. ' True' → logprob: -11.22726821899414
    10. ' ' → logprob: -11.72726821899414

Token 53: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006157012190669775
    2. '<' → logprob: -5.131156921386719
    3. ' ' → logprob: -8.881156921386719
    4. '<n' → logprob: -9.381156921386719
    5. ' <=' → logprob: -13.006156921386719
    6. '<len' → logprob: -13.381156921386719
    7. ' <
' → logprob: -15.131156921386719
    8. ' n' → logprob: -15.381156921386719
    9. ' in' → logprob: -15.881156921386719
    10. ' <",' → logprob: -15.881156921386719

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16031602025032043
    2. 'n' → logprob: -1.910315990447998
    3. ' ' → logprob: -9.410316467285156
    4. ' ' → logprob: -13.035316467285156
    5. ' len' → logprob: -13.160316467285156
    6. '	n' → logprob: -13.535316467285156
    7. 'len' → logprob: -13.910316467285156
    8. '100' → logprob: -14.285316467285156
    9. '10' → logprob: -14.660316467285156
    10. '20' → logprob: -15.160316467285156

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06995788961648941
    2. ' :' → logprob: -2.694957971572876
    3. ':
' → logprob: -11.944957733154297
    4. '+:' → logprob: -12.319957733154297
    5. ' :
' → logprob: -12.569957733154297
    6. '：' → logprob: -12.694957733154297
    7. ':k' → logprob: -13.819957733154297
    8. ':**' → logprob: -13.944957733154297
    9. '):' → logprob: -14.444957733154297
    10. ' and' → logprob: -15.069957733154297

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6342498660087585
    2. ' ' → logprob: -1.3842499256134033
    3. '    ' → logprob: -1.8842499256134033
    4. '    
' → logprob: -3.8842499256134033
    5. '<|end|>' → logprob: -4.259249687194824
    6. ' 
' → logprob: -4.759249687194824
    7. ':' → logprob: -5.009249687194824
    8. ' :' → logprob: -5.884249687194824
    9. '     
' → logprob: -6.009249687194824
    10. '  ' → logprob: -6.009249687194824

Token 57: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4347339868545532
    2. 'a' → logprob: -1.9347339868545532
    3. ' a' → logprob: -2.9347338676452637
    4. 'for' → logprob: -3.6847338676452637
    5. 'input' → logprob: -4.184733867645264
    6. 's' → logprob: -4.309733867645264
    7. 'if' → logprob: -4.434733867645264
    8. 'b' → logprob: -4.434733867645264
    9. ' for' → logprob: -4.684733867645264
    10. 'c' → logprob: -5.059733867645264

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07846996933221817
    2. '=' → logprob: -3.07846999168396
    3. 'f' → logprob: -5.328469753265381
    4. 'lse' → logprob: -5.703469753265381
    5. '=input' → logprob: -6.078469753265381
    6. 'm' → logprob: -6.328469753265381
    7. 'x' → logprob: -6.328469753265381
    8. 'q' → logprob: -6.328469753265381
    9. 'num' → logprob: -6.328469753265381
    10. ' ' → logprob: -6.703469753265381

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6790953874588013
    2. 'int' → logprob: -1.4290953874588013
    3. ' input' → logprob: -2.1790952682495117
    4. 'input' → logprob: -2.9290952682495117
    5. ' list' → logprob: -3.0540952682495117
    6. 'list' → logprob: -3.6790952682495117
    7. ' a' → logprob: -5.804095268249512
    8. 'a' → logprob: -6.054095268249512
    9. ' b' → logprob: -6.179095268249512
    10. ' c' → logprob: -6.429095268249512

Token 60: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002509904792532325
    2. '(' → logprob: -6.002510070800781
    3. 'input' → logprob: -10.877510070800781
    4. '()' → logprob: -11.377510070800781
    5. '(
' → logprob: -13.502510070800781
    6. ' input' → logprob: -14.877510070800781
    7. '(

' → logprob: -15.002510070800781
    8. '=input' → logprob: -15.002510070800781
    9. ',input' → logprob: -15.002510070800781
    10. ' ' → logprob: -15.502510070800781

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006855558138340712
    2. '()' → logprob: -5.006855487823486
    3. ')' → logprob: -9.256855964660645
    4. '())
' → logprob: -10.256855964660645
    5. ' ())' → logprob: -12.631855964660645
    6. '(' → logprob: -13.256855964660645
    7. '())

' → logprob: -13.631855964660645
    8. '().' → logprob: -13.881855964660645
    9. '()))' → logprob: -14.006855964660645
    10. '();)' → logprob: -14.381855964660645

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44275739789009094
    2. ' if' → logprob: -1.8177573680877686
    3. ')' → logprob: -2.8177573680877686
    4. ' ' → logprob: -3.1927573680877686
    5. '<|end|>' → logprob: -3.3177573680877686
    6. 'if' → logprob: -3.4427573680877686
    7. '  ' → logprob: -4.942757606506348
    8. '    ' → logprob: -5.317757606506348
    9. '    
' → logprob: -5.942757606506348
    10. ',' → logprob: -6.692757606506348

Token 63: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2904624044895172
    2. ' if' → logprob: -1.4154623746871948
    3. 'for' → logprob: -6.040462493896484
    4. ' ' → logprob: -6.165462493896484
    5. 'e' → logprob: -6.290462493896484
    6. ' for' → logprob: -6.790462493896484
    7. '    ' → logprob: -8.040462493896484
    8. ')' → logprob: -8.540462493896484
    9. 'k' → logprob: -8.540462493896484
    10. '   ' → logprob: -8.790462493896484

Token 64: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11579260230064392
    2. 'n' → logprob: -2.2407925128936768
    3. '=' → logprob: -7.240792751312256
    4. 'nd' → logprob: -7.365792751312256
    5. ' =' → logprob: -7.490792751312256
    6. ' ' → logprob: -7.990792751312256
    7. 'm' → logprob: -8.990792274475098
    8. 'nt' → logprob: -8.990792274475098
    9. ' n' → logprob: -9.115792274475098
    10. 's' → logprob: -9.490792274475098

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28642210364341736
    2. ' ' → logprob: -1.4114221334457397
    3. ' e' → logprob: -5.786422252655029
    4. 'e' → logprob: -6.911422252655029
    5. '1' → logprob: -7.661422252655029
    6. ' k' → logprob: -9.161421775817871
    7. ' (' → logprob: -9.786421775817871
    8. 'k' → logprob: -9.786421775817871
    9. ' -' → logprob: -9.786421775817871
    10. ' mar' → logprob: -9.786421775817871

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002174051245674491
    2. ' ' → logprob: -7.002173900604248
    3. 'e' → logprob: -7.252173900604248
    4. '1' → logprob: -8.252174377441406
    5. 'k' → logprob: -9.127174377441406
    6. '-' → logprob: -10.002174377441406
    7. 'len' → logprob: -10.627174377441406
    8. 'i' → logprob: -11.127174377441406
    9. 'a' → logprob: -11.252174377441406
    10. 'int' → logprob: -11.502174377441406

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5448554754257202
    2. '<|end|>' → logprob: -1.0448554754257202
    3. ' ' → logprob: -2.9198555946350098
    4. '    ' → logprob: -5.16985559463501
    5. '    
' → logprob: -5.91985559463501
    6. '<|end|>' → logprob: -6.29485559463501
    7. '  ' → logprob: -6.54485559463501
    8. ' while' → logprob: -7.04485559463501
    9. '	while' → logprob: -7.66985559463501
    10. ' 
' → logprob: -8.294855117797852

Token 68: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1295266151428223
    2. ' ' → logprob: -1.7545266151428223
    3. '<|end|>' → logprob: -1.7545266151428223
    4. 'w' → logprob: -2.0045266151428223
    5. 'while' (adapté à ' while') → logprob: -2.3795266151428223
    6. ' w' → logprob: -4.004526615142822
    7. ' if' → logprob: -4.129526615142822
    8. 'i' → logprob: -4.379526615142822
    9. 'n' → logprob: -5.129526615142822
    10. ' i' → logprob: -5.129526615142822

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06272022426128387
    2. 'i' → logprob: -2.81272029876709
    3. ' ' → logprob: -7.56272029876709
    4. ' len' → logprob: -10.06272029876709
    5. ' e' → logprob: -10.43772029876709
    6. 'len' → logprob: -10.43772029876709
    7. ' flag' → logprob: -10.81272029876709
    8. 'flag' → logprob: -10.81272029876709
    9. 'e' → logprob: -10.93772029876709
    10. '    ' → logprob: -11.43772029876709

Token 71: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0033561820164322853
    2. '<' → logprob: -6.253355979919434
    3. ' <=' → logprob: -6.628355979919434
    4. ' ' → logprob: -9.253355979919434
    5. '<=' → logprob: -13.003355979919434
    6. ' ==' → logprob: -13.753355979919434
    7. '<len' → logprob: -13.878355979919434
    8. ' <
' → logprob: -14.503355979919434
    9. '<n' → logprob: -14.753355979919434
    10. ' !=' → logprob: -14.753355979919434

Token 72: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4917915165424347
    2. ' ' → logprob: -0.9917914867401123
    3. ' len' → logprob: -4.991791725158691
    4. '4' → logprob: -5.991791725158691
    5. 'len' → logprob: -5.991791725158691
    6. ' mar' → logprob: -6.241791725158691
    7. '  ' → logprob: -7.241791725158691
    8. '7' → logprob: -7.616791725158691
    9. '6' → logprob: -7.866791725158691
    10. ' a' → logprob: -7.866791725158691

Token 73: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012951384298503399
    2. 'len' → logprob: -5.012951374053955
    3. '4' → logprob: -6.512951374053955
    4. ' ' → logprob: -6.637951374053955
    5. 'a' → logprob: -7.387951374053955
    6. '5' → logprob: -7.637951374053955
    7. 'e' → logprob: -8.012951850891113
    8. '7' → logprob: -8.262951850891113
    9. 'mar' → logprob: -8.262951850891113
    10. '6' → logprob: -8.512951850891113

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018972108140587807
    2. ' and' → logprob: -4.143971920013428
    3. ':
' → logprob: -6.643971920013428
    4. 'and' → logprob: -6.643971920013428
    5. '):' → logprob: -9.268972396850586
    6. '<|end|>' → logprob: -9.518972396850586
    7. '   ' → logprob: -9.643972396850586
    8. ' :' → logprob: -10.143972396850586
    9. ')' → logprob: -11.018972396850586
    10. '[' → logprob: -12.018972396850586

Token 75: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36991703510284424
    2. '    ' → logprob: -1.9949170351028442
    3. '       ' → logprob: -2.8699169158935547
    4. '<|end|>' → logprob: -3.2449169158935547
    5. '   ' → logprob: -3.7449169158935547
    6. ':' → logprob: -4.369916915893555
    7. '
' → logprob: -5.119916915893555
    8. ' 
' → logprob: -5.244916915893555
    9. ' if' → logprob: -5.494916915893555
    10. '        ' → logprob: -5.619916915893555

Token 76: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2927146255970001
    2. ' if' → logprob: -1.7927145957946777
    3. 'if' (adapté à ' if') → logprob: -3.5427145957946777
    4. '<|end|>' → logprob: -3.6677145957946777
    5. '    ' → logprob: -4.542714595794678
    6. '       ' → logprob: -5.042714595794678
    7. ' 
' → logprob: -5.167714595794678
    8. '   ' → logprob: -6.042714595794678
    9. '        ' → logprob: -6.167714595794678
    10. '
' → logprob: -6.792714595794678

Token 77: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.8797335624694824
    2. ' a' → logprob: -1.5047335624694824
    3. ' b' → logprob: -2.1297335624694824
    4. ' ' → logprob: -2.1297335624694824
    5. ' c' → logprob: -2.7547335624694824
    6. 'e' → logprob: -3.8797335624694824
    7. 'a' → logprob: -4.129733562469482
    8. 'b' → logprob: -4.754733562469482
    9. ' mar' → logprob: -4.879733562469482
    10. 'c' → logprob: -6.004733562469482

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13395066559314728
    2. '==' → logprob: -2.383950710296631
    3. ' in' → logprob: -3.633950710296631
    4. ' !=' → logprob: -6.758950710296631
    5. ' >' → logprob: -6.758950710296631
    6. 'in' → logprob: -7.133950710296631
    7. ' >=' → logprob: -7.508950710296631
    8. ' not' → logprob: -7.633950710296631
    9. ' =' → logprob: -7.758950710296631
    10. '=' → logprob: -7.758950710296631

Token 79: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24715803563594818
    2. ' a' → logprob: -1.6221580505371094
    3. 'mar' → logprob: -4.497158050537109
    4. ' mar' → logprob: -5.372158050537109
    5. 'b' → logprob: -6.122158050537109
    6. ' b' → logprob: -6.497158050537109
    7. 'c' → logprob: -6.872158050537109
    8. ' c' → logprob: -7.247158050537109
    9. ' ' → logprob: -8.99715805053711
    10. '	a' → logprob: -10.37215805053711

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010491885244846344
    2. '[' → logprob: -4.635491847991943
    3. '[k' → logprob: -7.260491847991943
    4. '[j' → logprob: -11.885492324829102
    5. ' [' → logprob: -12.135492324829102
    6. ' ' → logprob: -12.385492324829102
    7. 'i' → logprob: -13.135492324829102
    8. '[s' → logprob: -13.260492324829102
    9. '[]' → logprob: -13.635492324829102
    10. '[I' → logprob: -13.635492324829102

Token 81: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0746121034026146
    2. ']:' → logprob: -3.5746121406555176
    3. ' or' → logprob: -3.8246121406555176
    4. ':' → logprob: -4.699612140655518
    5. ')' → logprob: -4.949612140655518
    6. '):
' → logprob: -6.324612140655518
    7. ' ):' → logprob: -6.824612140655518
    8. ']' → logprob: -7.574612140655518
    9. '       ' → logprob: -7.574612140655518
    10. '   ' → logprob: -7.574612140655518

Token 82: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29832229018211365
    2. ' or' → logprob: -1.548322319984436
    3. ' and' → logprob: -3.4233222007751465
    4. ' :' → logprob: -5.4233222007751465
    5. 'and' → logprob: -5.5483222007751465
    6. 'or' → logprob: -6.6733222007751465
    7. '       ' → logprob: -7.0483222007751465
    8. ':
' → logprob: -7.0483222007751465
    9. '   ' → logprob: -8.173322677612305
    10. '):' → logprob: -8.298322677612305

Token 83: ' a' (ID: 261)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.09494205564260483
    2. 'flag' → logprob: -2.719942092895508
    3. ' mar' → logprob: -4.094942092895508
    4. ' ' → logprob: -6.094942092895508
    5. ' k' → logprob: -6.594942092895508
    6. 'mar' → logprob: -7.344942092895508
    7. '               ' → logprob: -7.719942092895508
    8. '    ' → logprob: -7.719942092895508
    9. ' break' → logprob: -8.094942092895508
    10. '	flag' → logprob: -8.219942092895508

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013569057919085026
    2. '[' → logprob: -7.376357078552246
    3. '.pop' → logprob: -8.001357078552246
    4. '.remove' → logprob: -8.751357078552246
    5. '.append' → logprob: -9.251357078552246
    6. ' =' → logprob: -10.126357078552246
    7. '[:]' → logprob: -10.626357078552246
    8. '.insert' → logprob: -11.001357078552246
    9. '=' → logprob: -11.001357078552246
    10. ' [' → logprob: -11.751357078552246

Token 85: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5809492468833923
    2. ' =' → logprob: -0.8309492468833923
    3. '+=' → logprob: -6.455949306488037
    4. ']' → logprob: -6.955949306488037
    5. ' +=' → logprob: -7.080949306488037
    6. ' -=' → logprob: -7.955949306488037
    7. '-=' → logprob: -7.955949306488037
    8. ' ' → logprob: -8.205948829650879
    9. ',' → logprob: -8.830948829650879
    10. ']=' → logprob: -9.080948829650879

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12719519436359406
    2. ' =' → logprob: -2.127195119857788
    3. '+=' → logprob: -9.002195358276367
    4. '-=' → logprob: -9.502195358276367
    5. '*=' → logprob: -10.752195358276367
    6. ' -=' → logprob: -11.127195358276367
    7. ' +=' → logprob: -11.377195358276367
    8. ',' → logprob: -12.002195358276367
    9. ' *=' → logprob: -12.627195358276367
    10. '=-' → logprob: -12.627195358276367

Token 87: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.08145493268966675
    2. '0' → logprob: -2.9564549922943115
    3. '-' → logprob: -4.331454753875732
    4. ' mar' → logprob: -5.081454753875732
    5. '111' → logprob: -6.581454753875732
    6. '-mar' → logprob: -6.831454753875732
    7. ' ' → logprob: -6.956454753875732
    8. 'm' → logprob: -7.331454753875732
    9. '"' → logprob: -7.456454753875732
    10. ' -' → logprob: -7.456454753875732

Token 88: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.000614028365816921
    2. '0' → logprob: -8.250614166259766
    3. 'ku' → logprob: -9.000614166259766
    4. 'i' → logprob: -10.250614166259766
    5. '-' → logprob: -10.250614166259766
    6. 'x' → logprob: -10.500614166259766
    7. 'く' → logprob: -10.750614166259766
    8. '	u' → logprob: -11.625614166259766
    9. 'su' → logprob: -11.875614166259766
    10. '<|end|>' → logprob: -11.938114166259766

Token 89: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5662157535552979
    2. '
' → logprob: -1.1912157535552979
    3. '       ' → logprob: -3.441215753555298
    4. ' 
' → logprob: -3.691215753555298
    5. '               ' → logprob: -4.191215515136719
    6. '<|end|>' → logprob: -4.566215515136719
    7. '  
' → logprob: -4.691215515136719
    8. '
' → logprob: -5.066215515136719
    9. '            
' → logprob: -5.066215515136719
    10. '   ' → logprob: -5.691215515136719

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7355265617370605
    2. '           ' → logprob: -1.2355265617370605
    3. '
' → logprob: -1.9855265617370605
    4. ' 
' → logprob: -3.4855265617370605
    5. '<|end|>' → logprob: -3.4855265617370605
    6. '               ' → logprob: -5.2355265617370605
    7. '        
' → logprob: -5.3605265617370605
    8. '    
' → logprob: -5.9855265617370605
    9. '            
' → logprob: -6.1105265617370605
    10. 'break' → logprob: -6.3605265617370605

Token 91: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5206987261772156
    2. ' elif' → logprob: -1.7706987857818604
    3. 'elif' → logprob: -2.1456987857818604
    4. ' ' → logprob: -3.0206987857818604
    5. '           ' → logprob: -4.270698547363281
    6. ' 
' → logprob: -4.395698547363281
    7. '        ' → logprob: -5.020698547363281
    8. '        
' → logprob: -5.270698547363281
    9. '\n' → logprob: -5.520698547363281
    10. ' else' → logprob: -5.645698547363281

Token 92: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0027373512275516987
    2. 'e' → logprob: -6.377737522125244
    3. ' b' → logprob: -7.127737522125244
    4. 'b' → logprob: -8.877737045288086
    5. ' ' → logprob: -9.877737045288086
    6. ' ' → logprob: -10.252737045288086
    7. ' c' → logprob: -13.565237045288086
    8. '	e' → logprob: -14.252737045288086
    9. '  ' → logprob: -14.752737045288086
    10. ' not' → logprob: -15.127737045288086

Token 93: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06996911764144897
    2. '==' → logprob: -2.6949691772460938
    3. ' ' → logprob: -10.944969177246094
    4. ' in' → logprob: -11.444969177246094
    5. '=' → logprob: -13.319969177246094
    6. ' =' → logprob: -14.319969177246094
    7. ' ' → logprob: -15.194969177246094
    8. ')' → logprob: -15.319969177246094
    9. ']==' → logprob: -15.319969177246094
    10. 'elif' → logprob: -15.444969177246094

Token 94: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6326432228088379
    2. ' b' → logprob: -0.7576432228088379
    3. '   ' → logprob: -11.25764274597168
    4. ' ' → logprob: -11.38264274597168
    5. '	b' → logprob: -11.50764274597168
    6. ' c' → logprob: -13.13264274597168
    7. 'c' → logprob: -13.25764274597168
    8. '    ' → logprob: -13.69514274597168
    9. ')b' → logprob: -13.82014274597168
    10. ' ' → logprob: -14.32014274597168

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012689977302215993
    2. '[' → logprob: -9.000126838684082
    3. ' [' → logprob: -13.000126838684082
    4. '[j' → logprob: -14.125126838684082
    5. ' ' → logprob: -15.500126838684082
    6. '[I' → logprob: -16.0001277923584
    7. '   ' → logprob: -16.8751277923584
    8. 'i' → logprob: -16.8751277923584
    9. '[k' → logprob: -17.0001277923584
    10. '```' → logprob: -17.5001277923584

Token 96: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09278024733066559
    2. ':' → logprob: -2.467780351638794
    3. ']:
' → logprob: -6.467780113220215
    4. '):' → logprob: -6.842780113220215
    5. ']' → logprob: -7.842780113220215
    6. '       ' → logprob: -8.217780113220215
    7. ']:
' → logprob: -9.092780113220215
    8. '[i' → logprob: -9.092780113220215
    9. '"]:' → logprob: -10.217780113220215
    10. '           ' → logprob: -10.467780113220215

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21698817610740662
    2. ' mar' → logprob: -1.716988205909729
    3. ' b' → logprob: -4.8419880867004395
    4. 'mar' → logprob: -5.4669880867004395
    5. 'b' → logprob: -6.8419880867004395
    6. ' ' → logprob: -7.3419880867004395
    7. ' ' → logprob: -7.8419880867004395
    8. '=' → logprob: -8.091988563537598
    9. '            ' → logprob: -8.716988563537598
    10. '          ' → logprob: -9.091988563537598

Token 98: ' b' (ID: 287)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.001329287188127637
    2. 'mar' → logprob: -6.62632942199707
    3. ' ma' → logprob: -14.00132942199707
    4. 'm' → logprob: -14.62632942199707
    5. ' marc' → logprob: -15.00132942199707
    6. ' ' → logprob: -15.12632942199707
    7. ' marl' → logprob: -15.37632942199707
    8. ' ' → logprob: -15.50132942199707
    9. ' m' → logprob: -15.50132942199707
    10. ''' → logprob: -15.62632942199707

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [' → logprob: -15.500003814697266
    4. 'i' → logprob: -17.250003814697266
    5. ' i' → logprob: -17.875003814697266
    6. '<|end|>' → logprob: -18.000003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '[I' → logprob: -18.625003814697266
    9. '(i' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.750003814697266

Token 100: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1482463926076889
    2. '=' → logprob: -2.0232462882995605
    3. ']' → logprob: -5.2732462882995605
    4. ']=' → logprob: -8.648246765136719
    5. ')' → logprob: -8.773246765136719
    6. ' ]' → logprob: -10.148246765136719
    7. ' ' → logprob: -10.523246765136719
    8. '           ' → logprob: -11.398246765136719
    9. '[' → logprob: -11.773246765136719
    10. '<|end|>' → logprob: -12.523246765136719

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.599078178405762
    4. ')' → logprob: -15.474078178405762
    5. '<|end|>' → logprob: -15.849078178405762
    6. '＝' → logprob: -17.224077224731445
    7. '[' → logprob: -18.224077224731445
    8. '=

' → logprob: -18.849077224731445
    9. ']' → logprob: -18.974077224731445
    10. '=end' → logprob: -19.349077224731445

Token 102: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.01106881070882082
    2. 'mar' → logprob: -4.511068820953369
    3. 'm' → logprob: -11.511068344116211
    4. ' ' → logprob: -13.261068344116211
    5. ' ' → logprob: -13.511068344116211
    6. ' ma' → logprob: -13.511068344116211
    7. ' mari' → logprob: -13.886068344116211
    8. ' m' → logprob: -14.011068344116211
    9. ' marl' → logprob: -14.323568344116211
    10. ' mars' → logprob: -14.698568344116211

Token 103: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6935129761695862
    2. '<|end|>' → logprob: -0.6935129761695862
    3. ' ' → logprob: -9.068512916564941
    4. 'e' → logprob: -9.943512916564941
    5. '<|end|>' → logprob: -10.443512916564941
    6. '  ' → logprob: -10.693512916564941
    7. 'ul' → logprob: -10.943512916564941
    8. 'i' → logprob: -11.068512916564941
    9. ' ' → logprob: -11.443512916564941
    10. 'o' → logprob: -11.568512916564941

Token 104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010402000043541193
    2. '
' → logprob: -10.375103950500488
    3. '        
' → logprob: -10.500103950500488
    4. '<|end|>' → logprob: -10.500103950500488
    5. '   ' → logprob: -12.000103950500488
    6. '```' → logprob: -12.625103950500488
    7. '    
' → logprob: -13.125103950500488
    8. ' 
' → logprob: -13.875103950500488
    9. '  
' → logprob: -14.250103950500488
    10. '	' → logprob: -14.500103950500488

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8074162653647363e-05
    2. '   ' → logprob: -11.625018119812012
    3. '        
' → logprob: -13.000018119812012
    4. '
' → logprob: -13.250018119812012
    5. '```' → logprob: -13.250018119812012
    6. '	' → logprob: -13.875018119812012
    7. '<|end|>' → logprob: -14.625018119812012
    8. ' ' → logprob: -14.750018119812012
    9. ' i' → logprob: -15.250018119812012
    10. '           ' → logprob: -15.500018119812012

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02783104032278061
    2. ' if' → logprob: -3.7778310775756836
    3. 'if' (adapté à ' if') → logprob: -5.402831077575684
    4. '   ' → logprob: -10.027831077575684
    5. ' i' → logprob: -11.527831077575684
    6. ' ' → logprob: -11.777831077575684
    7. '```' → logprob: -12.152831077575684
    8. '	if' → logprob: -13.152831077575684
    9. 'i' → logprob: -13.902831077575684
    10. '	' → logprob: -14.902831077575684

Token 107: ' e' (ID: 319)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20481933653354645
    2. ' e' → logprob: -1.7048193216323853
    3. 'c' → logprob: -5.954819202423096
    4. 'e' → logprob: -7.204819202423096
    5. ' ' → logprob: -9.829819679260254
    6. ' ' → logprob: -12.079819679260254
    7. '    ' → logprob: -13.454819679260254
    8. '   ' → logprob: -14.079819679260254
    9. '  ' → logprob: -14.829819679260254
    10. '```' → logprob: -14.954819679260254

Token 108: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026306219398975372
    2. '==' → logprob: -3.65130615234375
    3. ' ' → logprob: -12.40130615234375
    4. '=' → logprob: -14.15130615234375
    5. ' =' → logprob: -14.15130615234375
    6. ' ' → logprob: -15.52630615234375
    7. ')' → logprob: -16.52630615234375
    8. ' ==
' → logprob: -17.02630615234375
    9. '```' → logprob: -17.40130615234375
    10. '==
' → logprob: -17.65130615234375

Token 109: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20141996443271637
    2. 'c' → logprob: -1.7014199495315552
    3. ' ' → logprob: -12.451419830322266
    4. '   ' → logprob: -13.451419830322266
    5. '```' → logprob: -14.951419830322266
    6. '	c' → logprob: -15.326419830322266
    7. '  ' → logprob: -15.576419830322266
    8. ')c' → logprob: -15.826419830322266
    9. '    ' → logprob: -16.451419830322266
    10. '       ' → logprob: -16.576419830322266

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.570319702499546e-05
    2. '[' → logprob: -10.750025749206543
    3. '```' → logprob: -12.875025749206543
    4. '       ' → logprob: -13.750025749206543
    5. '[j' → logprob: -15.750025749206543
    6. ' [' → logprob: -15.875025749206543
    7. '[
' → logprob: -16.000024795532227
    8. '   ' → logprob: -16.000024795532227
    9. '[I' → logprob: -17.000024795532227
    10. '           ' → logprob: -17.250024795532227

Token 111: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2992401719093323
    2. '):' → logprob: -2.0492401123046875
    3. ')' → logprob: -2.4242401123046875
    4. ']' → logprob: -3.9242401123046875
    5. ']:' → logprob: -4.4242401123046875
    6. ':' → logprob: -6.1742401123046875
    7. '       ' → logprob: -6.2992401123046875
    8. '           ' → logprob: -6.4242401123046875
    9. '])' → logprob: -7.0492401123046875
    10. ']==' → logprob: -7.0492401123046875

Token 112: '           ' (ID: 352)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.547061562538147
    2. '           ' → logprob: -1.172061562538147
    3. ' c' → logprob: -2.9220614433288574
    4. 'mar' → logprob: -3.0470614433288574
    5. 'c' → logprob: -4.922061443328857
    6. '          ' → logprob: -7.422061443328857
    7. '            ' → logprob: -7.422061443328857
    8. '               ' → logprob: -7.797061443328857
    9. ' ' → logprob: -8.422061920166016
    10. ' ' → logprob: -8.422061920166016

Token 113: ' c' (ID: 274)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.04861382022500038
    2. 'mar' → logprob: -3.0486137866973877
    3. 'm' → logprob: -11.048613548278809
    4. ' ma' → logprob: -13.173613548278809
    5. ' m' → logprob: -13.423613548278809
    6. ' marc' → logprob: -13.548613548278809
    7. ' ' → logprob: -13.923613548278809
    8. ' ' → logprob: -13.923613548278809
    9. ' mari' → logprob: -14.173613548278809
    10. ' marl' → logprob: -14.548613548278809

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002821635687723756
    2. '[' → logprob: -5.877821445465088
    3. ' [' → logprob: -11.752821922302246
    4. '```' → logprob: -12.877821922302246
    5. '[j' → logprob: -13.127821922302246
    6. '[I' → logprob: -13.877821922302246
    7. '   ' → logprob: -14.252821922302246
    8. '[int' → logprob: -15.002821922302246
    9. '=' → logprob: -15.002821922302246
    10. ' ' → logprob: -15.127821922302246

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2186736762523651
    2. '=' → logprob: -1.7186737060546875
    3. ']=' → logprob: -4.7186737060546875
    4. ' =' → logprob: -4.9686737060546875
    5. ' ]' → logprob: -6.9686737060546875
    6. ')' → logprob: -8.843673706054688
    7. ']==' → logprob: -9.218673706054688
    8. '==' → logprob: -11.718673706054688
    9. '[' → logprob: -11.968673706054688
    10. '        ' → logprob: -12.093673706054688

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.313261985778809
    4. ' =
' → logprob: -16.063262939453125
    5. '=
' → logprob: -16.188262939453125
    6. '＝' → logprob: -16.438262939453125
    7. '=

' → logprob: -16.438262939453125
    8. ' ==' → logprob: -17.813262939453125
    9. ' =
' → logprob: -18.188262939453125
    10. ')' → logprob: -18.313262939453125

Token 117: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.0021888066548854113
    2. 'mar' → logprob: -6.127188682556152
    3. 'm' → logprob: -13.877188682556152
    4. ' ma' → logprob: -14.127188682556152
    5. ' ' → logprob: -14.377188682556152
    6. ' mari' → logprob: -14.502188682556152
    7. ' marl' → logprob: -15.252188682556152
    8. ' ' → logprob: -15.627188682556152
    9. ' mor' → logprob: -15.877188682556152
    10. ' m' → logprob: -16.50218963623047

Token 118: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002550217031966895
    2. '<|end|>' → logprob: -8.87525463104248
    3. 'ru' → logprob: -9.62525463104248
    4. 'aru' → logprob: -11.50025463104248
    5. ' ' → logprob: -12.12525463104248
    6. 'e' → logprob: -12.75025463104248
    7. '  ' → logprob: -12.87525463104248
    8. 'ु' → logprob: -13.12525463104248
    9. 'su' → logprob: -13.37525463104248
    10. '<' → logprob: -13.50025463104248

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006006922340020537
    2. '
' → logprob: -7.875600814819336
    3. '        
' → logprob: -9.625600814819336
    4. '	' → logprob: -10.625600814819336
    5. ' i' → logprob: -10.625600814819336
    6. 'i' → logprob: -10.625600814819336
    7. '```' → logprob: -10.750600814819336
    8. '   ' → logprob: -10.875600814819336
    9. '<|end|>' → logprob: -11.625600814819336
    10. '  
' → logprob: -12.000600814819336

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005805786233395338
    2. '
' → logprob: -5.380805969238281
    3. '   ' → logprob: -7.630805969238281
    4. 'i' → logprob: -8.130805969238281
    5. ' i' → logprob: -8.630805969238281
    6. '	' → logprob: -9.505805969238281
    7. '        
' → logprob: -9.755805969238281
    8. '```' → logprob: -10.630805969238281
    9. '	i' → logprob: -10.880805969238281
    10. '    
' → logprob: -11.505805969238281

Token 121: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6176388263702393
    2. 'i' (adapté à ' i') → logprob: -1.3676388263702393
    3. ' i' → logprob: -2.1176388263702393
    4. '
' → logprob: -2.7426388263702393
    5. '   ' → logprob: -4.36763858795166
    6. '	i' → logprob: -5.11763858795166
    7. '        
' → logprob: -7.36763858795166
    8. '\n' → logprob: -7.49263858795166
    9. ' 
' → logprob: -8.11763858795166
    10. '	' → logprob: -8.11763858795166

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4421350359916687
    2. ' +=' → logprob: -1.4421350955963135
    3. '+' → logprob: -2.1921350955963135
    4. '=' → logprob: -4.692134857177734
    5. ' +' → logprob: -10.192134857177734
    6. ' =' → logprob: -10.567134857177734
    7. '+="' → logprob: -13.192134857177734
    8. ' ' → logprob: -13.442134857177734
    9. '+='' → logprob: -13.567134857177734
    10. '++' → logprob: -13.942134857177734

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.500625610351562
    4. '```' → logprob: -19.375625610351562
    5. '１' → logprob: -19.750625610351562
    6. ' ' → logprob: -20.250625610351562
    7. '  ' → logprob: -22.125625610351562
    8. '+' → logprob: -22.125625610351562
    9. '0' → logprob: -22.313125610351562
    10. '3' → logprob: -22.500625610351562

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.6250057220459
    4. '```' → logprob: -18.6250057220459
    5. '１' → logprob: -20.2500057220459
    6. '  ' → logprob: -21.0000057220459
    7. '`' → logprob: -22.0000057220459
    8. ' ' → logprob: -22.1875057220459
    9. '3' → logprob: -22.2500057220459
    10. '
' → logprob: -22.3125057220459

Token 125: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15024077892303467
    2. '   ' → logprob: -2.275240898132324
    3. 'k' → logprob: -3.650240898132324
    4. ' k' → logprob: -4.650240898132324
    5. '
' → logprob: -7.650240898132324
    6. '    
' → logprob: -8.275240898132324
    7. ' 
' → logprob: -8.775240898132324
    8. '<|end|>' → logprob: -9.525240898132324
    9. '	k' → logprob: -9.775240898132324
    10. '\n' → logprob: -10.150240898132324

Token 126: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7775848507881165
    2. 'k' → logprob: -1.2775847911834717
    3. '   ' → logprob: -1.4025847911834717
    4. ' k' → logprob: -4.402585029602051
    5. 'n' → logprob: -6.527585029602051
    6. '    
' → logprob: -7.027585029602051
    7. '\n' → logprob: -8.02758502960205
    8. ' 
' → logprob: -8.40258502960205
    9. '```' → logprob: -8.90258502960205
    10. '
' → logprob: -9.02758502960205

Token 127: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.01645343378186226
    2. ' k' → logprob: -4.516453266143799
    3. '   ' → logprob: -5.391453266143799
    4. '
' → logprob: -7.141453266143799
    5. '	k' → logprob: -11.391453742980957
    6. '    
' → logprob: -12.016453742980957
    7. ' ' → logprob: -12.766453742980957
    8. '
' → logprob: -13.016453742980957
    9. 'flag' → logprob: -13.016453742980957
    10. '\n' → logprob: -13.141453742980957

Token 128: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.389803946018219
    2. ' +=' → logprob: -1.1398038864135742
    3. '+' → logprob: -6.264803886413574
    4. '=' → logprob: -6.889803886413574
    5. '+="' → logprob: -13.014803886413574
    6. '+='' → logprob: -13.264803886413574
    7. ' ' → logprob: -13.389803886413574
    8. ']+=' → logprob: -14.014803886413574
    9. ' =' → logprob: -14.139803886413574
    10. ' +' → logprob: -14.764803886413574

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.500553131103516
    4. '```' → logprob: -19.875553131103516
    5. '１' → logprob: -20.625553131103516
    6. '   ' → logprob: -21.000553131103516
    7. '0' → logprob: -23.500553131103516
    8. 'space' → logprob: -23.750553131103516
    9. '`' → logprob: -24.000553131103516
    10. 'int' → logprob: -24.000553131103516

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -20.250003814697266
    4. '１' → logprob: -20.750003814697266
    5. '   ' → logprob: -20.750003814697266
    6. '  ' → logprob: -22.812503814697266
    7. '`' → logprob: -23.250003814697266
    8. '۱' → logprob: -23.562503814697266
    9. '+' → logprob: -23.875003814697266
    10. '१' → logprob: -23.937503814697266

Token 131: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4372433125972748
    2. 'for' → logprob: -1.8122433423995972
    3. 'i' → logprob: -3.0622432231903076
    4. 'mar' → logprob: -3.0622432231903076
    5. 'flag' → logprob: -3.1872432231903076
    6. 'def' → logprob: -4.062243461608887
    7. '#' → logprob: -4.437243461608887
    8. 'a' → logprob: -5.312243461608887
    9. 'j' → logprob: -5.812243461608887
    10. '
' → logprob: -5.937243461608887

Token 132: 'j' (ID: 73)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.251094788312912
    2. 'for' → logprob: -1.7510948181152344
    3. 'i' → logprob: -4.001094818115234
    4. '#' → logprob: -5.126094818115234
    5. 'mar' → logprob: -5.251094818115234
    6. 'def' → logprob: -5.501094818115234
    7. 'flag' → logprob: -5.626094818115234
    8. 'a' → logprob: -6.126094818115234
    9. 'm' → logprob: -6.626094818115234
    10. 'j' → logprob: -6.751094818115234

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07141927629709244
    2. '=' → logprob: -2.6964192390441895
    3. ' ' → logprob: -6.5714192390441895
    4. '   ' → logprob: -9.946419715881348
    5. '  ' → logprob: -10.821419715881348
    6. '    ' → logprob: -13.071419715881348
    7. ' +=' → logprob: -13.321419715881348
    8. 'u' → logprob: -13.571419715881348
    9. '0' → logprob: -13.571419715881348
    10. ',' → logprob: -14.196419715881348

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004091935232281685
    2. ' ' → logprob: -5.504091739654541
    3. 'int' → logprob: -12.0040922164917
    4. '   ' → logprob: -13.5040922164917
    5. '1' → logprob: -13.7540922164917
    6. '  ' → logprob: -14.1290922164917
    7. '[' → logprob: -14.5040922164917
    8. 'j' → logprob: -14.9415922164917
    9. 'i' → logprob: -15.0040922164917
    10. 'a' → logprob: -15.1290922164917

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.625075340270996
    3. '1' → logprob: -12.375075340270996
    4. 'int' → logprob: -13.500075340270996
    5. '3' → logprob: -14.250075340270996
    6. 'i' → logprob: -14.750075340270996
    7. 'a' → logprob: -14.875075340270996
    8. 'j' → logprob: -15.562575340270996
    9. '2' → logprob: -15.625075340270996
    10. '[' → logprob: -15.687575340270996

Token 136: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00012976066500414163
    2. ' while' → logprob: -9.875129699707031
    3. '<|end|>' → logprob: -10.750129699707031
    4. 'j' → logprob: -11.250129699707031
    5. 'flag' → logprob: -11.250129699707031
    6. '0' → logprob: -11.625129699707031
    7. '3' → logprob: -12.125129699707031
    8. '```' → logprob: -12.250129699707031
    9. 'if' → logprob: -12.500129699707031
    10. 'While' → logprob: -13.625129699707031

Token 137: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0013742801966145635
    2. 'flag' → logprob: -6.626374244689941
    3. '3' → logprob: -11.251374244689941
    4. ' while' → logprob: -11.626374244689941
    5. 'j' → logprob: -11.626374244689941
    6. 'found' → logprob: -11.876374244689941
    7. 'if' → logprob: -12.751374244689941
    8. '1' → logprob: -13.751374244689941
    9. 'b' → logprob: -13.751374244689941
    10. '0' → logprob: -14.001374244689941

Token 138: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.033789537847042084
    2. ' j' → logprob: -3.40878963470459
    3. '3' → logprob: -8.90878963470459
    4. ' ' → logprob: -12.03378963470459
    5. '   ' → logprob: -14.15878963470459
    6. '	j' → logprob: -14.53378963470459
    7. '2' → logprob: -15.03378963470459
    8. '1' → logprob: -15.65878963470459
    9. '    ' → logprob: -15.65878963470459
    10. '7' → logprob: -16.283788681030273

Token 139: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519320547580719
    2. ' <' → logprob: -1.5019320249557495
    3. '3' → logprob: -12.876932144165039
    4. ' ' → logprob: -15.376932144165039
    5. '<n' → logprob: -16.12693214416504
    6. '1' → logprob: -16.50193214416504
    7. '<len' → logprob: -17.87693214416504
    8. '2' → logprob: -18.12693214416504
    9. '<size' → logprob: -18.25193214416504
    10. ' less' → logprob: -18.37693214416504

Token 140: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.250053405761719
    4. 'n' → logprob: -15.187553405761719
    5. '1' → logprob: -15.312553405761719
    6. '2' → logprob: -16.62505340576172
    7. '  ' → logprob: -17.00005340576172
    8. 'a' → logprob: -17.00005340576172
    9. '4' → logprob: -17.31255340576172
    10. 'j' → logprob: -17.43755340576172

Token 141: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. 'n' → logprob: -14.62501049041748
    4. '1' → logprob: -14.87501049041748
    5. '2' → logprob: -15.37501049041748
    6. 'a' → logprob: -15.50001049041748
    7. '   ' → logprob: -16.312511444091797
    8. '4' → logprob: -16.812511444091797
    9. '```' → logprob: -17.125011444091797
    10. 'b' → logprob: -17.187511444091797

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026647431775927544
    2. ':
' → logprob: -3.6516473293304443
    3. ' and' → logprob: -8.276647567749023
    4. ' :' → logprob: -9.776647567749023
    5. 'and' → logprob: -10.901647567749023
    6. ' :
' → logprob: -11.901647567749023
    7. '   ' → logprob: -12.276647567749023
    8. ':

' → logprob: -12.776647567749023
    9. ':
' → logprob: -13.526647567749023
    10. '*' → logprob: -14.651647567749023

Token 143: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6691992878913879
    2. '   ' → logprob: -0.9191992878913879
    3. ' if' → logprob: -2.419199228286743
    4. '       ' → logprob: -11.169198989868164
    5. ' ' → logprob: -11.419198989868164
    6. '	if' → logprob: -11.544198989868164
    7. 'flag' → logprob: -11.919198989868164
    8. '    ' → logprob: -12.419198989868164
    9. '  ' → logprob: -12.669198989868164
    10. ' flag' → logprob: -14.169198989868164

Token 144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001261845463886857
    2. ' if' → logprob: -10.125125885009766
    3. 'count' → logprob: -10.500125885009766
    4. 'flag' → logprob: -10.625125885009766
    5. '   ' → logprob: -11.125125885009766
    6. '#' → logprob: -11.750125885009766
    7. 'cnt' → logprob: -12.375125885009766
    8. 'print' → logprob: -13.125125885009766
    9. 'for' → logprob: -14.000125885009766
    10. 'm' → logprob: -14.625125885009766

Token 145: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03437241539359093
    2. ' a' → logprob: -3.409372329711914
    3. '(a' → logprob: -7.409372329711914
    4. ' (' → logprob: -10.034372329711914
    5. 'mar' → logprob: -10.659372329711914
    6. '   ' → logprob: -10.909372329711914
    7. '(' → logprob: -11.534372329711914
    8. ' ' → logprob: -11.659372329711914
    9. '[a' → logprob: -12.159372329711914
    10. ' mar' → logprob: -12.909372329711914

Token 146: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.070975071750581e-05
    2. '[' → logprob: -10.500030517578125
    3. 'j' → logprob: -13.750030517578125
    4. '```' → logprob: -14.000030517578125
    5. '[i' → logprob: -14.500030517578125
    6. '[a' → logprob: -15.375030517578125
    7. ' [' → logprob: -15.625030517578125
    8. '==' → logprob: -16.625030517578125
    9. '\[' → logprob: -16.750030517578125
    10. '   ' → logprob: -16.750030517578125

Token 147: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20144228637218475
    2. ' ==' → logprob: -1.7014422416687012
    3. '=' → logprob: -11.95144271850586
    4. ' ' → logprob: -11.95144271850586
    5. ']==' → logprob: -12.45144271850586
    6. '   ' → logprob: -12.70144271850586
    7. '[' → logprob: -12.82644271850586
    8. '===' → logprob: -13.82644271850586
    9. ']' → logprob: -13.95144271850586
    10. '==
' → logprob: -14.45144271850586

Token 148: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021582990884781
    2. ' ==' → logprob: -2.3502159118652344
    3. '=' → logprob: -12.475215911865234
    4. ' ' → logprob: -13.100215911865234
    5. '==
' → logprob: -13.225215911865234
    6. '[' → logprob: -14.225215911865234
    7. '   ' → logprob: -15.225215911865234
    8. '	' → logprob: -16.100215911865234
    9. '```' → logprob: -16.225215911865234
    10. '===' → logprob: -16.350215911865234

Token 149: ' b' (ID: 287)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.006526838056743145
    2. ' mar' → logprob: -5.131526947021484
    3. '111' → logprob: -8.131526947021484
    4. 'b' → logprob: -8.381526947021484
    5. ' ' → logprob: -9.881526947021484
    6. ' b' → logprob: -11.256526947021484
    7. 'm' → logprob: -12.381526947021484
    8. 'a' → logprob: -13.881526947021484
    9. '   ' → logprob: -13.881526947021484
    10. '```' → logprob: -14.256526947021484

Token 150: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5451681974809617e-05
    2. 'j' → logprob: -11.375015258789062
    3. '[' → logprob: -12.875015258789062
    4. '[m' → logprob: -14.250015258789062
    5. ' [' → logprob: -15.375015258789062
    6. 'mar' → logprob: -15.625015258789062
    7. '[c' → logprob: -15.875015258789062
    8. '```' → logprob: -16.125015258789062
    9. '[i' → logprob: -16.875015258789062
    10. '   ' → logprob: -17.000015258789062

Token 151: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.33209550380706787
    2. '==' → logprob: -1.3320955038070679
    3. ' and' → logprob: -4.457095623016357
    4. 'and' → logprob: -4.957095623016357
    5. ' ' → logprob: -11.4570951461792
    6. ']==' → logprob: -11.9570951461792
    7. ' ' → logprob: -12.9570951461792
    8. '<|end|>' → logprob: -13.2070951461792
    9. '==
' → logprob: -13.3320951461792
    10. ')' → logprob: -13.7070951461792

Token 152: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03837515041232109
    2. ' ==' → logprob: -3.91337513923645
    3. 'and' → logprob: -4.163375377655029
    4. ' and' → logprob: -6.163375377655029
    5. '==
' → logprob: -11.538374900817871
    6. '===' → logprob: -13.288374900817871
    7. '=' → logprob: -14.163374900817871
    8. ']==' → logprob: -14.288374900817871
    9. '()==' → logprob: -14.663374900817871
    10. '==(' → logprob: -14.788374900817871

Token 153: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2041044682264328
    2. 'a' → logprob: -1.8291044235229492
    3. ' b' → logprob: -3.829104423522949
    4. ' a' → logprob: -6.079104423522949
    5. '   ' → logprob: -10.95410442352295
    6. 'c' → logprob: -10.95410442352295
    7. ' ' → logprob: -12.07910442352295
    8. ' c' → logprob: -13.57910442352295
    9. 'mar' → logprob: -13.82910442352295
    10. '  ' → logprob: -13.82910442352295

Token 154: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.2378600735682994e-05
    2. '[' → logprob: -10.375032424926758
    3. '```' → logprob: -14.000032424926758
    4. '[
' → logprob: -16.000032424926758
    5. ' [' → logprob: -16.125032424926758
    6. 'j' → logprob: -17.875032424926758
    7. '`' → logprob: -18.750032424926758
    8. '   ' → logprob: -19.250032424926758
    9. '[i' → logprob: -19.375032424926758
    10. '[js' → logprob: -19.625032424926758

Token 155: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.523234486579895
    2. '==' → logprob: -0.898234486579895
    3. ']==' → logprob: -10.148234367370605
    4. ']' → logprob: -10.773234367370605
    5. '<|end|>' → logprob: -11.148234367370605
    6. '[' → logprob: -11.898234367370605
    7. '[j' → logprob: -12.023234367370605
    8. ')' → logprob: -12.148234367370605
    9. ' ' → logprob: -12.273234367370605
    10. '}' → logprob: -12.398234367370605

Token 156: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021205991506577
    2. ' ==' → logprob: -2.3502120971679688
    3. '=' → logprob: -13.350212097167969
    4. '==
' → logprob: -13.600212097167969
    5. '===' → logprob: -14.600212097167969
    6. ' ' → logprob: -14.600212097167969
    7. ')' → logprob: -15.350212097167969
    8. ']==' → logprob: -15.350212097167969
    9. '[' → logprob: -15.475212097167969
    10. '```' → logprob: -15.475212097167969

Token 157: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008052219054661691
    2. ' c' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.500804901123047
    4. ' ' → logprob: -16.250804901123047
    5. 'mar' → logprob: -16.875804901123047
    6. '	c' → logprob: -17.000804901123047
    7. ')c' → logprob: -17.750804901123047
    8. '  ' → logprob: -17.875804901123047
    9. '```' → logprob: -18.750804901123047
    10. '    ' → logprob: -19.375804901123047

Token 158: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.3795937522663735e-05
    2. 'j' → logprob: -11.12502384185791
    3. '[
' → logprob: -12.75002384185791
    4. '[' → logprob: -12.75002384185791
    5. '```' → logprob: -13.25002384185791
    6. ' [' → logprob: -14.37502384185791
    7. '   ' → logprob: -15.00002384185791
    8. '
' → logprob: -16.000022888183594
    9. ' ' → logprob: -16.625022888183594
    10. '	j' → logprob: -17.000022888183594

Token 159: ']:
' (ID: 22152)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24294355511665344
    2. '==' → logprob: -1.867943525314331
    3. ' and' → logprob: -2.867943525314331
    4. 'and' → logprob: -5.61794376373291
    5. ' ' → logprob: -8.61794376373291
    6. ')' → logprob: -8.86794376373291
    7. '   ' → logprob: -9.36794376373291
    8. ':' → logprob: -9.49294376373291
    9. ']==' → logprob: -9.86794376373291
    10. 'mar' → logprob: -9.86794376373291

Token 160: '       ' (ID: 309)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.7144387364387512
    2. ' and' → logprob: -1.2144386768341064
    3. 'mar' → logprob: -2.5894386768341064
    4. ' ==' → logprob: -2.5894386768341064
    5. '   ' → logprob: -3.3394386768341064
    6. '    ' → logprob: -4.3394389152526855
    7. '==' → logprob: -5.3394389152526855
    8. '       ' → logprob: -5.4644389152526855
    9. ' ' → logprob: -6.3394389152526855
    10. ' =' → logprob: -6.4644389152526855

Token 161: ' if' (ID: 538)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.3944409489631653
    2. 'flag' → logprob: -1.1444408893585205
    3. '       ' → logprob: -5.3944411277771
    4. '   ' → logprob: -6.6444411277771
    5. '           ' → logprob: -6.8944411277771
    6. '
' → logprob: -8.144440650939941
    7. '	flag' → logprob: -8.769440650939941
    8. ' mar' → logprob: -8.894440650939941
    9. 'mar' → logprob: -10.519440650939941
    10. ' ' → logprob: -11.394440650939941

Token 162: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11285904794931412
    2. ' a' → logprob: -2.237859010696411
    3. ' ' → logprob: -11.487858772277832
    4. '   ' → logprob: -11.737858772277832
    5. ' ' → logprob: -12.737858772277832
    6. '	a' → logprob: -12.737858772277832
    7. 'b' → logprob: -12.862858772277832
    8. 'mar' → logprob: -12.987858772277832
    9. '    ' → logprob: -13.237858772277832
    10. ' b' → logprob: -13.362858772277832

Token 163: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.77627644513268e-06
    2. 'j' → logprob: -12.750008583068848
    3. ' [' → logprob: -12.750008583068848
    4. '[' → logprob: -13.250008583068848
    5. '```' → logprob: -14.250008583068848
    6. ' j' → logprob: -15.625008583068848
    7. '[i' → logprob: -16.250009536743164
    8. '	j' → logprob: -16.625009536743164
    9. '   ' → logprob: -16.625009536743164
    10. '[
' → logprob: -17.250009536743164

Token 164: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28634580969810486
    2. '==' → logprob: -1.4113458395004272
    3. ' !=' → logprob: -5.411345958709717
    4. '!=' → logprob: -7.286345958709717
    5. ' ' → logprob: -11.161345481872559
    6. '   ' → logprob: -12.536345481872559
    7. '=' → logprob: -12.911345481872559
    8. ']==' → logprob: -12.911345481872559
    9. '[' → logprob: -13.411345481872559
    10. ')' → logprob: -13.661345481872559

Token 165: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38692301511764526
    2. ' ==' → logprob: -1.13692307472229
    3. 'mar' → logprob: -11.011922836303711
    4. ' ' → logprob: -11.636922836303711
    5. ' mar' → logprob: -11.886922836303711
    6. '!=' → logprob: -12.261922836303711
    7. ' !=' → logprob: -12.636922836303711
    8. '   ' → logprob: -12.636922836303711
    9. '=' → logprob: -12.886922836303711
    10. '==
' → logprob: -13.136922836303711

Token 166: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.18030649423599243
    2. ' mar' → logprob: -1.8053064346313477
    3. '111' → logprob: -7.805306434631348
    4. ' ' → logprob: -9.180306434631348
    5. 'm' → logprob: -10.055306434631348
    6. ' ' → logprob: -14.180306434631348
    7. '	m' → logprob: -14.180306434631348
    8. '   ' → logprob: -14.180306434631348
    9. ' marc' → logprob: -14.680306434631348
    10. '.mar' → logprob: -14.680306434631348

Token 167: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.537180211627856e-05
    2. '<|end|>' → logprob: -10.500045776367188
    3. 'ru' → logprob: -13.000045776367188
    4. '<' → logprob: -13.500045776367188
    5. 'su' → logprob: -13.625045776367188
    6. ' ' → logprob: -14.125045776367188
    7. 'у' → logprob: -14.125045776367188
    8. 'aru' → logprob: -14.125045776367188
    9. '<u' → logprob: -14.250045776367188
    10. '	u' → logprob: -14.500045776367188

Token 168: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07022296637296677
    2. ':' → logprob: -2.695222854614258
    3. '           ' → logprob: -8.320222854614258
    4. ':

' → logprob: -11.695222854614258
    5. '       ' → logprob: -11.820222854614258
    6. '):
' → logprob: -11.945222854614258
    7. ' or' → logprob: -12.070222854614258
    8. ' and' → logprob: -12.320222854614258
    9. ' :
' → logprob: -12.320222854614258
    10. ':
' → logprob: -12.820222854614258

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01335280854254961
    2. ' flag' → logprob: -4.763352870941162
    3. 'flag' → logprob: -5.388352870941162
    4. '       ' → logprob: -9.263352394104004
    5. '		' → logprob: -10.763352394104004
    6. '	       ' → logprob: -11.763352394104004
    7. '	flag' → logprob: -12.013352394104004
    8. '(flag' → logprob: -12.263352394104004
    9. '               ' → logprob: -12.638352394104004
    10. '   ' → logprob: -12.638352394104004

Token 170: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.1012272909283638
    2. ' flag' → logprob: -2.351227283477783
    3. '   ' → logprob: -6.976227283477783
    4. '	flag' → logprob: -9.976227760314941
    5. '       ' → logprob: -11.101227760314941
    6. '
' → logprob: -11.351227760314941
    7. 'print' → logprob: -12.351227760314941
    8. '           ' → logprob: -12.601227760314941
    9. ' ' → logprob: -13.601227760314941
    10. '    
' → logprob: -14.351227760314941

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519407570362091
    2. '=' → logprob: -1.5019407272338867
    3. ' +=' → logprob: -11.626940727233887
    4. ' ' → logprob: -13.126940727233887
    5. '+=' → logprob: -14.251940727233887
    6. ' =
' → logprob: -17.001941680908203
    7. '1' → logprob: -17.126941680908203
    8. ' |=' → logprob: -17.376941680908203
    9. '   ' → logprob: -18.126941680908203
    10. '    ' → logprob: -18.376941680908203

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. ' ' → logprob: -19.00007438659668
    5. '    ' → logprob: -19.37507438659668
    6. '=' → logprob: -19.37507438659668
    7. '１' → logprob: -19.37507438659668
    8. '  ' → logprob: -19.68757438659668
    9. '           ' → logprob: -20.00007438659668
    10. '2' → logprob: -20.81257438659668

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.750015258789062
    4. '2' → logprob: -16.625015258789062
    5. '111' → logprob: -16.625015258789062
    6. '１' → logprob: -17.375015258789062
    7. 'True' → logprob: -18.000015258789062
    8. '=' → logprob: -18.187515258789062
    9. '11' → logprob: -18.375015258789062
    10. '+' → logprob: -18.437515258789062

Token 174: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16129978001117706
    2. '   ' → logprob: -1.9112998247146606
    3. ' break' → logprob: -7.411299705505371
    4. 'break' → logprob: -8.536299705505371
    5. '
' → logprob: -8.911299705505371
    6. '       ' → logprob: -9.411299705505371
    7. '    
' → logprob: -10.411299705505371
    8. '            
' → logprob: -11.536299705505371
    9. '	break' → logprob: -12.536299705505371
    10. '		' → logprob: -12.786299705505371

Token 175: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2523938715457916
    2. '   ' → logprob: -1.5023938417434692
    3. 'break' → logprob: -8.75239372253418
    4. ' break' → logprob: -9.12739372253418
    5. '    
' → logprob: -9.50239372253418
    6. '
' → logprob: -9.62739372253418
    7. '       ' → logprob: -10.62739372253418
    8. '            
' → logprob: -10.87739372253418
    9. '		' → logprob: -12.75239372253418
    10. '        
' → logprob: -13.25239372253418

Token 176: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09303151071071625
    2. 'j' (adapté à ' j') → logprob: -2.718031406402588
    3. ' j' → logprob: -4.093031406402588
    4. '       ' → logprob: -5.468031406402588
    5. '
' → logprob: -6.968031406402588
    6. '           ' → logprob: -8.093031883239746
    7. '    
' → logprob: -8.718031883239746
    8. ' if' → logprob: -8.718031883239746
    9. ' ' → logprob: -8.843031883239746
    10. 'if' → logprob: -8.968031883239746

Token 177: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.26644980907440186
    2. '+' → logprob: -1.7664498090744019
    3. ' +=' → logprob: -2.7664499282836914
    4. '=' → logprob: -9.891449928283691
    5. '++' → logprob: -11.141449928283691
    6. ' +' → logprob: -11.266449928283691
    7. ' ' → logprob: -13.516449928283691
    8. '+="' → logprob: -13.641449928283691
    9. '+='' → logprob: -14.516449928283691
    10. '+++' → logprob: -14.766449928283691

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '```' → logprob: -15.505928993225098
    4. '   ' → logprob: -16.88092803955078
    5. ' ' → logprob: -18.13092803955078
    6. '１' → logprob: -18.75592803955078
    7. '`' → logprob: -19.75592803955078
    8. '
' → logprob: -20.38092803955078
    9. '	' → logprob: -20.38092803955078
    10. '``' → logprob: -20.50592803955078

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.25000762939453
    4. '
' → logprob: -18.62500762939453
    5. '3' → logprob: -18.62500762939453
    6. '   ' → logprob: -19.25000762939453
    7. '１' → logprob: -19.25000762939453
    8. '+' → logprob: -20.43750762939453
    9. '`' → logprob: -20.50000762939453
    10. '  ' → logprob: -21.06250762939453

Token 180: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18318265676498413
    2. 'i' → logprob: -2.308182716369629
    3. 'j' → logprob: -3.183182716369629
    4. '
' → logprob: -3.933182716369629
    5. ' if' → logprob: -6.308182716369629
    6. 'for' → logprob: -6.933182716369629
    7. 'm' → logprob: -6.933182716369629
    8. 'l' → logprob: -7.058182716369629
    9. ' 
' → logprob: -7.433182716369629
    10. '```' → logprob: -7.808182716369629

Token 181: 'if' (ID: 366)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0035392516292631626
    2. 'if' → logprob: -6.378539085388184
    3. 'for' → logprob: -6.878539085388184
    4. 'j' → logprob: -7.753539085388184
    5. 'l' → logprob: -9.128539085388184
    6. 'm' → logprob: -9.253539085388184
    7. ' i' → logprob: -10.003539085388184
    8. ' for' → logprob: -10.253539085388184
    9. 'x' → logprob: -10.878539085388184
    10. 'k' → logprob: -11.378539085388184

Token 182: ' a' (ID: 261)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.0013357169227674603
    2. 'flag' → logprob: -6.626335620880127
    3. '(flag' → logprob: -12.126336097717285
    4. ' ' → logprob: -12.626336097717285
    5. ' ' → logprob: -14.751336097717285
    6. '	flag' → logprob: -14.876336097717285
    7. ' space' → logprob: -15.376336097717285
    8. ' fl' → logprob: -18.00133514404297
    9. ' fla' → logprob: -18.00133514404297
    10. ' (' → logprob: -18.37633514404297

Token 183: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002594799967482686
    2. '==' → logprob: -6.127594947814941
    3. ' ==' → logprob: -7.877594947814941
    4. '0' → logprob: -12.252594947814941
    5. '[:]' → logprob: -12.252594947814941
    6. 'a' → logprob: -12.877594947814941
    7. 'count' → logprob: -13.252594947814941
    8. '```' → logprob: -13.502594947814941
    9. '[j' → logprob: -13.627594947814941
    10. '1' → logprob: -13.752594947814941

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022594700567424297
    2. '2' → logprob: -8.875226020812988
    3. '1' → logprob: -9.625226020812988
    4. ' ' → logprob: -11.500226020812988
    5. '[' → logprob: -12.750226020812988
    6. ']' → logprob: -12.750226020812988
    7. '][' → logprob: -14.375226020812988
    8. 'j' → logprob: -14.687726020812988
    9. 'a' → logprob: -14.937726020812988
    10. '-' → logprob: -15.187726020812988

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005365852266550064
    2. ']==' → logprob: -5.25536584854126
    3. ' ]' → logprob: -9.380366325378418
    4. '[' → logprob: -10.130366325378418
    5. '==' → logprob: -12.380366325378418
    6. 'a' → logprob: -13.630366325378418
    7. '[]' → logprob: -14.880366325378418
    8. ' ' → logprob: -15.130366325378418
    9. '0' → logprob: -15.380366325378418
    10. ' ==' → logprob: -15.505366325378418

Token 186: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28122270107269287
    2. ' ==' → logprob: -1.4062227010726929
    3. '[' → logprob: -11.031222343444824
    4. ' ' → logprob: -11.031222343444824
    5. 'a' → logprob: -11.281222343444824
    6. ' ' → logprob: -12.031222343444824
    7. '=' → logprob: -12.281222343444824
    8. ']==' → logprob: -12.656222343444824
    9. '===' → logprob: -13.156222343444824
    10. '   ' → logprob: -13.406222343444824

Token 187: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3476424515247345
    2. 'mar' → logprob: -1.847642421722412
    3. 'b' → logprob: -2.347642421722412
    4. ' a' → logprob: -3.722642421722412
    5. ' mar' → logprob: -4.722642421722412
    6. ' b' → logprob: -4.972642421722412
    7. ' ' → logprob: -8.22264289855957
    8. '111' → logprob: -9.47264289855957
    9. 'm' → logprob: -10.59764289855957
    10. '1' → logprob: -11.41014289855957

Token 188: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014175030402839184
    2. '[' → logprob: -4.264174938201904
    3. ' ' → logprob: -12.264175415039062
    4. '
' → logprob: -12.639175415039062
    5. 'a' → logprob: -13.639175415039062
    6. ' [' → logprob: -14.264175415039062
    7. '2' → logprob: -14.764175415039062
    8. '   ' → logprob: -15.264175415039062
    9. '```' → logprob: -15.764175415039062
    10. ']' → logprob: -15.889175415039062

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '2' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.625003814697266
    4. ']' → logprob: -15.625003814697266
    5. '
' → logprob: -16.125003814697266
    6. 'mar' → logprob: -16.375003814697266
    7. '[' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '```' → logprob: -16.750003814697266
    10. 'a' → logprob: -17.000003814697266

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021262088790535927
    2. ']==' → logprob: -4.271262168884277
    3. '==' → logprob: -5.146262168884277
    4. ' and' → logprob: -7.396262168884277
    5. ' ==' → logprob: -8.396262168884277
    6. ' ]' → logprob: -8.396262168884277
    7. 'and' → logprob: -8.771262168884277
    8. ' ' → logprob: -11.646262168884277
    9. '}' → logprob: -11.771262168884277
    10. ')' → logprob: -12.521262168884277

Token 191: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02608882449567318
    2. ' and' → logprob: -4.651088714599609
    3. ' ==' → logprob: -4.651088714599609
    4. 'and' → logprob: -5.026088714599609
    5. ']==' → logprob: -9.77608871459961
    6. '=' → logprob: -11.65108871459961
    7. '===' → logprob: -12.27608871459961
    8. '```' → logprob: -12.65108871459961
    9. ' ' → logprob: -12.77608871459961
    10. ')==' → logprob: -13.40108871459961

Token 192: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38687315583229065
    2. ' a' → logprob: -1.1368731260299683
    3. ' ' → logprob: -13.136873245239258
    4. '	a' → logprob: -16.261873245239258
    5. ' ' → logprob: -16.386873245239258
    6. '(a' → logprob: -17.511873245239258
    7. '0' → logprob: -17.511873245239258
    8. '_a' → logprob: -17.886873245239258
    9. '.a' → logprob: -18.511873245239258
    10. '   ' → logprob: -18.636873245239258

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34935078024864197
    2. '2' → logprob: -1.2243508100509644
    3. ' ' → logprob: -7.599350929260254
    4. '0' → logprob: -7.974350929260254
    5. '```' → logprob: -10.474350929260254
    6. '1' → logprob: -11.224350929260254
    7. '   ' → logprob: -12.224350929260254
    8. ' [' → logprob: -12.349350929260254
    9. '[
' → logprob: -12.724350929260254
    10. '
' → logprob: -12.724350929260254

Token 194: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.03521392197581e-05
    2. '1' → logprob: -11.375030517578125
    3. '0' → logprob: -11.625030517578125
    4. ' ' → logprob: -11.625030517578125
    5. '```' → logprob: -14.125030517578125
    6. '[' → logprob: -16.375030517578125
    7. '   ' → logprob: -16.500030517578125
    8. '  ' → logprob: -17.625030517578125
    9. '``' → logprob: -17.750030517578125
    10. '
' → logprob: -17.875030517578125

Token 195: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26815542578697205
    2. ' ==' → logprob: -1.5181554555892944
    3. ']' → logprob: -4.393155574798584
    4. ']==' → logprob: -5.893155574798584
    5. '[' → logprob: -7.143155574798584
    6. ' ' → logprob: -9.518155097961426
    7. '```' → logprob: -10.643155097961426
    8. '=' → logprob: -10.643155097961426
    9. 'a' → logprob: -10.768155097961426
    10. '...' → logprob: -11.143155097961426

Token 196: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16030637919902802
    2. '==' → logprob: -1.9103063344955444
    3. ' ' → logprob: -9.660305976867676
    4. '[' → logprob: -11.910305976867676
    5. 'a' → logprob: -12.535305976867676
    6. '=' → logprob: -13.285305976867676
    7. '_' → logprob: -13.285305976867676
    8. '```' → logprob: -13.410305976867676
    9. ' ' → logprob: -14.285305976867676
    10. '`' → logprob: -14.535305976867676

Token 197: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003362966235727072
    2. ' a' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.500336647033691
    5. 'c' → logprob: -16.500335693359375
    6. '3' → logprob: -17.375335693359375
    7. '  ' → logprob: -17.500335693359375
    8. '	a' → logprob: -17.625335693359375
    9. ' ' → logprob: -17.875335693359375
    10. '`' → logprob: -18.125335693359375

Token 198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006284446571953595
    2. '2' → logprob: -7.375628471374512
    3. '[
' → logprob: -14.250628471374512
    4. ' [' → logprob: -14.375628471374512
    5. '```' → logprob: -15.500628471374512
    6. ' ' → logprob: -16.125627517700195
    7. '][' → logprob: -16.500627517700195
    8. '
' → logprob: -17.000627517700195
    9. '\[' → logprob: -17.500627517700195
    10. ']' → logprob: -17.500627517700195

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -15.000000953674316
    4. '۲' → logprob: -17.250001907348633
    5. '２' → logprob: -17.250001907348633
    6. '```' → logprob: -17.500001907348633
    7. '२' → logprob: -17.875001907348633
    8. '২' → logprob: -18.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. '₂' → logprob: -19.250001907348633

Token 200: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026044921949505806
    2. 'and' → logprob: -4.651044845581055
    3. ']' → logprob: -4.776044845581055
    4. ')' → logprob: -5.151044845581055
    5. '==' → logprob: -6.901044845581055
    6. ':' → logprob: -7.901044845581055
    7. ' ==' → logprob: -8.151044845581055
    8. '):
' → logprob: -9.901044845581055
    9. ' ' → logprob: -10.151044845581055
    10. '):' → logprob: -10.151044845581055

Token 201: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00207590963691473
    2. '   ' → logprob: -6.377075672149658
    3. 'and' → logprob: -8.377076148986816
    4. ':
' → logprob: -9.502076148986816
    5. ' ' → logprob: -10.377076148986816
    6. ' ==' → logprob: -11.252076148986816
    7. ' if' → logprob: -11.502076148986816
    8. ':' → logprob: -11.877076148986816
    9. '    ' → logprob: -13.002076148986816
    10. '  ' → logprob: -13.877076148986816

Token 202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11716309934854507
    2. 'if' (adapté à ' if') → logprob: -2.7421631813049316
    3. '   ' → logprob: -3.7421631813049316
    4. ' flag' → logprob: -3.8671631813049316
    5. 'flag' → logprob: -6.742163181304932
    6. ' and' → logprob: -8.117162704467773
    7. '       ' → logprob: -11.492162704467773
    8. ' ' → logprob: -11.617162704467773
    9. '```' → logprob: -13.242162704467773
    10. '    ' → logprob: -13.367162704467773

Token 203: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31327059864997864
    2. 'a' → logprob: -1.3132705688476562
    3. ' ' → logprob: -12.313270568847656
    4. '	a' → logprob: -13.938270568847656
    5. '   ' → logprob: -14.313270568847656
    6. 'mar' → logprob: -14.313270568847656
    7. ' c' → logprob: -14.438270568847656
    8. 'c' → logprob: -14.688270568847656
    9. ' mar' → logprob: -14.938270568847656
    10. ' ' → logprob: -15.063270568847656

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -11.875006675720215
    3. ' [' → logprob: -16.87500762939453
    4. '[
' → logprob: -17.87500762939453
    5. 'a' → logprob: -18.00000762939453
    6. '```' → logprob: -18.00000762939453
    7. ' ' → logprob: -18.12500762939453
    8. '==' → logprob: -18.37500762939453
    9. '   ' → logprob: -18.50000762939453
    10. ']' → logprob: -20.12500762939453

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. '2' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.875007629394531
    4. '[' → logprob: -14.875007629394531
    5. '1' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.00000762939453
    7. '```' → logprob: -17.12500762939453
    8. ']' → logprob: -18.87500762939453
    9. '
' → logprob: -19.12500762939453
    10. '  ' → logprob: -19.50000762939453

Token 206: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011050770990550518
    2. '==' → logprob: -4.511050701141357
    3. ' ' → logprob: -12.886051177978516
    4. ')' → logprob: -16.386051177978516
    5. '=' → logprob: -16.511051177978516
    6. ' ' → logprob: -16.636051177978516
    7. ']==' → logprob: -16.761051177978516
    8. '   ' → logprob: -17.386051177978516
    9. ' ==
' → logprob: -17.511051177978516
    10. ')==' → logprob: -17.761051177978516

Token 207: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326353549957275
    2. '==' → logprob: -1.3132635354995728
    3. ' ' → logprob: -13.688263893127441
    4. '=' → logprob: -14.438263893127441
    5. ' =' → logprob: -17.563262939453125
    6. ' ' → logprob: -17.688262939453125
    7. '   ' → logprob: -17.688262939453125
    8. '==
' → logprob: -17.688262939453125
    9. '===' → logprob: -18.313262939453125
    10. ')' → logprob: -18.438262939453125

Token 208: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.10020904988050461
    2. 'mar' → logprob: -2.3502089977264404
    3. ' ' → logprob: -13.85020923614502
    4. 'm' → logprob: -14.22520923614502
    5. ' ' → logprob: -15.47520923614502
    6. ' ma' → logprob: -15.72520923614502
    7. ' marc' → logprob: -16.225208282470703
    8. ' mars' → logprob: -16.725208282470703
    9. ' m' → logprob: -16.975208282470703
    10. ' mor' → logprob: -17.225208282470703

Token 209: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00045807508286088705
    2. 'aru' → logprob: -8.500457763671875
    3. 'ru' → logprob: -9.750457763671875
    4. 'ku' → logprob: -10.250457763671875
    5. 'o' → logprob: -10.500457763671875
    6. 'su' → logprob: -10.750457763671875
    7. 'oru' → logprob: -10.750457763671875
    8. 'zu' → logprob: -11.250457763671875
    9. 'e' → logprob: -11.250457763671875
    10. '　' → logprob: -11.625457763671875

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023872841149568558
    2. ':
' → logprob: -3.7738728523254395
    3. '       ' → logprob: -7.3988728523254395
    4. '   ' → logprob: -11.398872375488281
    5. ':
' → logprob: -13.273872375488281
    6. ' :' → logprob: -14.398872375488281
    7. '=' → logprob: -14.773872375488281
    8. ':

' → logprob: -15.148872375488281
    9. '==' → logprob: -15.398872375488281
    10. '):' → logprob: -15.773872375488281

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3346256613731384
    2. ' flag' → logprob: -1.3346257209777832
    3. 'flag' → logprob: -3.959625720977783
    4. '   ' → logprob: -6.209625720977783
    5. '	flag' → logprob: -10.959625244140625
    6. '           ' → logprob: -11.459625244140625
    7. '    ' → logprob: -11.584625244140625
    8. '      ' → logprob: -12.209625244140625
    9. '     ' → logprob: -12.334625244140625
    10. ' ' → logprob: -12.459625244140625

Token 212: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.023274246603250504
    2. ' flag' → logprob: -3.7732741832733154
    3. '   ' → logprob: -10.523274421691895
    4. '	flag' → logprob: -13.648274421691895
    5. 'fl' → logprob: -15.648274421691895
    6. '       ' → logprob: -15.648274421691895
    7. '
' → logprob: -16.273273468017578
    8. ' ' → logprob: -16.648273468017578
    9. 'flags' → logprob: -17.273273468017578
    10. '  ' → logprob: -17.273273468017578

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ' +=' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.701414108276367
    5. ' |=' → logprob: -16.451414108276367
    6. '+=' → logprob: -17.576414108276367
    7. ' =)' → logprob: -17.826414108276367
    8. ' =
' → logprob: -17.951414108276367
    9. '＝' → logprob: -18.076414108276367
    10. ' ='' → logprob: -18.451414108276367

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141343772411346
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.326414108276367
    4. '１' → logprob: -19.076414108276367
    5. ' 
' → logprob: -19.576414108276367
    6. '   ' → logprob: -19.576414108276367
    7. '0' → logprob: -19.826414108276367
    8. '۱' → logprob: -20.013914108276367
    9. '```' → logprob: -20.201414108276367
    10. '_' → logprob: -20.451414108276367

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -21.2500057220459
    4. '' → logprob: -21.5000057220459
    5. '۱' → logprob: -21.7500057220459
    6. '１' → logprob: -21.7500057220459
    7. '
' → logprob: -22.8125057220459
    8. '```' → logprob: -23.1875057220459
    9. '१' → logprob: -23.3125057220459
    10. '  ' → logprob: -23.4375057220459

Token 216: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0027230868581682444
    2. 'elif' → logprob: -6.127723217010498
    3. '
' → logprob: -7.627723217010498
    4. 'i' → logprob: -10.37772274017334
    5. ' if' → logprob: -11.75272274017334
    6. '    
' → logprob: -12.75272274017334
    7. '```' → logprob: -12.75272274017334
    8. 'b' → logprob: -13.00272274017334
    9. '\
' → logprob: -14.25272274017334
    10. '  
' → logprob: -14.37772274017334

Token 217: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023166877508629113
    2. 'elif' → logprob: -8.375231742858887
    3. '
' → logprob: -15.125231742858887
    4. 'i' → logprob: -15.250231742858887
    5. 'else' → logprob: -16.00023078918457
    6. ' if' → logprob: -16.25023078918457
    7. '```' → logprob: -16.50023078918457
    8. '    
' → logprob: -17.25023078918457
    9. 'b' → logprob: -17.25023078918457
    10. 'for' → logprob: -17.62523078918457

Token 218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31327635049819946
    2. ' b' → logprob: -1.3132762908935547
    3. 'c' → logprob: -11.938276290893555
    4. ' ' → logprob: -12.563276290893555
    5. ' c' → logprob: -13.313276290893555
    6. ' ' → logprob: -14.188276290893555
    7. 'flag' → logprob: -14.563276290893555
    8. '	b' → logprob: -14.563276290893555
    9. 'a' → logprob: -14.688276290893555
    10. '(b' → logprob: -15.313276290893555

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010367410723119974
    2. '0' → logprob: -6.876036643981934
    3. '`' → logprob: -13.626036643981934
    4. ' ' → logprob: -13.751036643981934
    5. ' [' → logprob: -14.376036643981934
    6. '```' → logprob: -14.751036643981934
    7. '==' → logprob: -15.251036643981934
    8. '[
' → logprob: -16.12603759765625
    9. '   ' → logprob: -16.37603759765625
    10. '(' → logprob: -16.62603759765625

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -16.0
    4. '[' → logprob: -16.75
    5. '```' → logprob: -18.0
    6. '2' → logprob: -18.4375
    7. '
' → logprob: -18.6875
    8. '۰' → logprob: -19.0
    9. '   ' → logprob: -19.1875
    10. '...' → logprob: -19.6875

Token 221: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3006531000137329
    2. '==' → logprob: -1.425653100013733
    3. ']' → logprob: -4.300652980804443
    4. '[' → logprob: -5.925652980804443
    5. ']==' → logprob: -6.175652980804443
    6. ' ' → logprob: -7.050652980804443
    7. ' ]' → logprob: -9.425653457641602
    8. '[]' → logprob: -11.425653457641602
    9. ' [' → logprob: -11.550653457641602
    10. '   ' → logprob: -11.800653457641602

Token 222: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18064239621162415
    2. '==' → logprob: -1.8056423664093018
    3. ' ' → logprob: -7.180642604827881
    4. '[' → logprob: -9.055642127990723
    5. ']==' → logprob: -11.805642127990723
    6. ' ' → logprob: -12.930642127990723
    7. ']' → logprob: -13.305642127990723
    8. '=' → logprob: -13.305642127990723
    9. ' [' → logprob: -13.680642127990723
    10. ')==' → logprob: -13.805642127990723

Token 223: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.376502990722656
    4. 'mar' → logprob: -18.501502990722656
    5. '   ' → logprob: -19.626502990722656
    6. 'flag' → logprob: -20.251502990722656
    7. ' ' → logprob: -21.251502990722656
    8. '	b' → logprob: -21.626502990722656
    9. '  ' → logprob: -21.876502990722656
    10. '[' → logprob: -22.376502990722656

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06994754821062088
    2. '1' → logprob: -2.6949474811553955
    3. ' [' → logprob: -12.319947242736816
    4. ' ' → logprob: -12.569947242736816
    5. '```' → logprob: -13.569947242736816
    6. ']' → logprob: -14.819947242736816
    7. '2' → logprob: -14.944947242736816
    8. '[
' → logprob: -15.194947242736816
    9. '0' → logprob: -15.319947242736816
    10. '][' → logprob: -15.569947242736816

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '0' → logprob: -16.375
    4. '[' → logprob: -19.125
    5. '   ' → logprob: -19.625
    6. '2' → logprob: -19.75
    7. '```' → logprob: -20.0
    8. '۱' → logprob: -20.5
    9. '
' → logprob: -20.875
    10. '１' → logprob: -21.0

Token 226: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889264822006226
    2. 'and' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.203892707824707
    4. ')' → logprob: -14.703892707824707
    5. '==' → logprob: -15.328892707824707
    6. ']' → logprob: -15.703892707824707
    7. ' ==' → logprob: -15.953892707824707
    8. '[' → logprob: -17.20389175415039
    9. ' ' → logprob: -17.57889175415039
    10. '0' → logprob: -17.82889175415039

Token 227: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859089106321335
    2. 'and' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.798590660095215
    4. '==' → logprob: -14.423590660095215
    5. ' ==' → logprob: -15.923590660095215
    6. ' ' → logprob: -17.04859161376953
    7. '```' → logprob: -18.92359161376953
    8. '0' → logprob: -19.29859161376953
    9. 'b' → logprob: -19.42359161376953
    10. ')' → logprob: -19.54859161376953

Token 228: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07888978719711304
    2. 'b' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.203889846801758
    4. ' ' → logprob: -19.328889846801758
    5. '	b' → logprob: -19.328889846801758
    6. ' б' → logprob: -20.953889846801758
    7. '(b' → logprob: -21.328889846801758
    8. '`' → logprob: -21.953889846801758
    9. '   ' → logprob: -22.328889846801758
    10. '```' → logprob: -22.328889846801758

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.349075556499884e-05
    2. 'b' → logprob: -9.8750638961792
    3. ' [' → logprob: -11.8750638961792
    4. '1' → logprob: -13.3750638961792
    5. ' b' → logprob: -13.5000638961792
    6. '```' → logprob: -14.0000638961792
    7. '[
' → logprob: -14.6250638961792
    8. '2' → logprob: -14.8750638961792
    9. ' ' → logprob: -15.0000638961792
    10. '[b' → logprob: -16.375062942504883

Token 230: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07019473612308502
    2. '1' → logprob: -2.820194721221924
    3. '2' → logprob: -4.820194721221924
    4. '0' → logprob: -9.445195198059082
    5. ' ' → logprob: -10.695195198059082
    6. ' b' → logprob: -10.820195198059082
    7. '[' → logprob: -12.820195198059082
    8. '```' → logprob: -12.820195198059082
    9. '  ' → logprob: -15.070195198059082
    10. '   ' → logprob: -15.195195198059082

Token 231: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7023106217384338
    2. ' ==' → logprob: -0.7023106217384338
    3. ']' → logprob: -4.952310562133789
    4. '[' → logprob: -6.952310562133789
    5. ']==' → logprob: -6.952310562133789
    6. ' ' → logprob: -9.202310562133789
    7. '=' → logprob: -11.327310562133789
    8. '```' → logprob: -11.577310562133789
    9. ' ]' → logprob: -12.077310562133789
    10. '==
' → logprob: -12.952310562133789

Token 232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868873119354248
    2. '==' → logprob: -1.1368873119354248
    3. ' ' → logprob: -11.511887550354004
    4. '[' → logprob: -13.011887550354004
    5. '=' → logprob: -13.636887550354004
    6. '```' → logprob: -13.636887550354004
    7. '==
' → logprob: -14.886887550354004
    8. ']==' → logprob: -14.886887550354004
    9. '`' → logprob: -15.386887550354004
    10. ' ' → logprob: -15.761887550354004

Token 233: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. ' ' → logprob: -18.750911712646484
    4. '	b' → logprob: -20.625911712646484
    5. '```' → logprob: -20.750911712646484
    6. '`' → logprob: -21.375911712646484
    7. '   ' → logprob: -21.625911712646484
    8. '  ' → logprob: -22.250911712646484
    9. ')b' → logprob: -22.375911712646484
    10. '*b' → logprob: -22.625911712646484

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001239196863025427
    2. '2' → logprob: -9.000123977661133
    3. 'b' → logprob: -15.375123977661133
    4. ' [' → logprob: -16.125123977661133
    5. '```' → logprob: -16.750123977661133
    6. ' ' → logprob: -16.875123977661133
    7. '[
' → logprob: -17.250123977661133
    8. '   ' → logprob: -18.625123977661133
    9. '{' → logprob: -18.875123977661133
    10. '
' → logprob: -19.750123977661133

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.368984107510187e-05
    2. ' ' → logprob: -10.500033378601074
    3. '[' → logprob: -13.000033378601074
    4. 'b' → logprob: -13.000033378601074
    5. '   ' → logprob: -14.125033378601074
    6. 'c' → logprob: -15.375033378601074
    7. '```' → logprob: -15.500033378601074
    8. '  ' → logprob: -15.625033378601074
    9. 'mar' → logprob: -16.87503433227539
    10. '0' → logprob: -17.12503433227539

Token 236: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2822377681732178
    2. '==' → logprob: -1.9072377681732178
    3. ':
' → logprob: -3.0322377681732178
    4. ' ==' → logprob: -3.7822377681732178
    5. 'and' → logprob: -4.407238006591797
    6. ':' → logprob: -4.657238006591797
    7. '   ' → logprob: -5.657238006591797
    8. '):
' → logprob: -8.032238006591797
    9. '=' → logprob: -8.657238006591797
    10. ')' → logprob: -8.657238006591797

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011439072113716975
    2. ' if' → logprob: -10.000114440917969
    3. ' and' → logprob: -10.000114440917969
    4. 'if' → logprob: -11.125114440917969
    5. '```' → logprob: -12.500114440917969
    6. '       ' → logprob: -13.000114440917969
    7. ':' → logprob: -13.625114440917969
    8. ':
' → logprob: -14.375114440917969
    9. ' ' → logprob: -15.000114440917969
    10. 'and' → logprob: -15.250114440917969

Token 238: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07009582221508026
    2. ' if' → logprob: -2.8200957775115967
    3. 'if' (adapté à ' if') → logprob: -4.820096015930176
    4. '       ' → logprob: -11.070096015930176
    5. ' ' → logprob: -11.945096015930176
    6. '```' → logprob: -11.945096015930176
    7. '``' → logprob: -15.320096015930176
    8. '
' → logprob: -15.445096015930176
    9. '  ' → logprob: -16.19509506225586
    10. '   ' → logprob: -17.19509506225586

Token 239: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47407835721969604
    2. 'b' → logprob: -0.974078357219696
    3. 'mar' → logprob: -14.349078178405762
    4. ' ' → logprob: -14.599078178405762
    5. ' mar' → logprob: -16.224079132080078
    6. '   ' → logprob: -17.099079132080078
    7. 'flag' → logprob: -17.536579132080078
    8. '	b' → logprob: -18.099079132080078
    9. ' ' → logprob: -18.161579132080078
    10. '(b' → logprob: -18.349079132080078

Token 240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023226479243021458
    2. '0' → logprob: -8.375232696533203
    3. ' ' → logprob: -14.000232696533203
    4. ' [' → logprob: -15.000232696533203
    5. '```' → logprob: -15.000232696533203
    6. '   ' → logprob: -16.250232696533203
    7. '[
' → logprob: -17.000232696533203
    8. '
' → logprob: -17.000232696533203
    9. '`' → logprob: -18.125232696533203
    10. '2' → logprob: -18.250232696533203

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -19.625
    4. '1' → logprob: -19.75
    5. '   ' → logprob: -19.75
    6. '2' → logprob: -20.0
    7. '۰' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. '
' → logprob: -21.5
    10. '  ' → logprob: -22.0

Token 242: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018170664086937904
    2. '==' → logprob: -4.0181708335876465
    3. ' ' → logprob: -11.643170356750488
    4. ')' → logprob: -12.143170356750488
    5. ']==' → logprob: -12.893170356750488
    6. ']' → logprob: -13.518170356750488
    7. '=' → logprob: -13.893170356750488
    8. '   ' → logprob: -14.893170356750488
    9. ')==' → logprob: -15.018170356750488
    10. '```' → logprob: -15.143170356750488

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0789034515619278
    2. '==' → logprob: -2.5789034366607666
    3. ' ' → logprob: -11.328903198242188
    4. '=' → logprob: -14.578903198242188
    5. '   ' → logprob: -14.703903198242188
    6. ' ' → logprob: -15.328903198242188
    7. ' =' → logprob: -16.578903198242188
    8. ']==' → logprob: -16.953903198242188
    9. '==
' → logprob: -16.953903198242188
    10. ')' → logprob: -17.078903198242188

Token 244: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.1798650175333023
    2. ' mar' → logprob: -1.8048650026321411
    3. 'm' → logprob: -9.179864883422852
    4. ' ' → logprob: -12.429864883422852
    5. ' marc' → logprob: -13.554864883422852
    6. '   ' → logprob: -13.554864883422852
    7. '	m' → logprob: -13.679864883422852
    8. 'mars' → logprob: -13.679864883422852
    9. ' ' → logprob: -14.054864883422852
    10. '_mar' → logprob: -14.242364883422852

Token 245: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.963691804325208e-05
    2. 'ru' → logprob: -10.750029563903809
    3. 'aru' → logprob: -13.250029563903809
    4. ' ' → logprob: -13.875029563903809
    5. 'mar' → logprob: -14.000029563903809
    6. '	u' → logprob: -14.750029563903809
    7. '<u' → logprob: -14.750029563903809
    8. '　' → logprob: -14.750029563903809
    9. '<|end|>' → logprob: -14.875029563903809
    10. 'ku' → logprob: -15.000029563903809

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14773543179035187
    2. ':
' → logprob: -2.147735357284546
    3. '       ' → logprob: -3.897735357284546
    4. '   ' → logprob: -8.397735595703125
    5. ' :' → logprob: -10.772735595703125
    6. ' :
' → logprob: -11.522735595703125
    7. '):' → logprob: -11.772735595703125
    8. '=' → logprob: -11.897735595703125
    9. '):
' → logprob: -12.022735595703125
    10. '==' → logprob: -12.022735595703125

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10421431064605713
    2. ' flag' → logprob: -2.3542141914367676
    3. 'flag' → logprob: -5.604214191436768
    4. '   ' → logprob: -8.104214668273926
    5. '	flag' → logprob: -12.229214668273926
    6. ' ' → logprob: -12.354214668273926
    7. '      ' → logprob: -13.354214668273926
    8. '    ' → logprob: -13.729214668273926
    9. '     ' → logprob: -13.729214668273926
    10. '           ' → logprob: -14.854214668273926

Token 248: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.4745422303676605
    2. ' flag' → logprob: -0.9745422601699829
    3. '   ' → logprob: -7.724542140960693
    4. '       ' → logprob: -11.099542617797852
    5. '	flag' → logprob: -12.224542617797852
    6. ' ' → logprob: -13.599542617797852
    7. '           ' → logprob: -13.974542617797852
    8. '  ' → logprob: -14.599542617797852
    9. '    ' → logprob: -15.224542617797852
    10. '1' → logprob: -16.47454261779785

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408074140548706
    2. ' =' → logprob: -0.9740807414054871
    3. ' ' → logprob: -12.599081039428711
    4. ' +=' → logprob: -16.72408103942871
    5. '    ' → logprob: -16.84908103942871
    6. '+=' → logprob: -17.47408103942871
    7. '＝' → logprob: -17.47408103942871
    8. ' ' → logprob: -17.59908103942871
    9. ' =
' → logprob: -17.59908103942871
    10. '        ' → logprob: -17.97408103942871

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692883610725403
    2. ' ' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.50192928314209
    4. '   ' → logprob: -16.126928329467773
    5. '=' → logprob: -16.564428329467773
    6. '0' → logprob: -16.751928329467773
    7. '１' → logprob: -17.501928329467773
    8. 's' → logprob: -17.876928329467773
    9. '```' → logprob: -17.939428329467773
    10. '  ' → logprob: -18.189428329467773

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -20.625001907348633
    4. '１' → logprob: -21.000001907348633
    5. '۱' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.250001907348633
    7. '111' → logprob: -22.562501907348633
    8. '  ' → logprob: -22.625001907348633
    9. 'flag' → logprob: -22.937501907348633
    10. '१' → logprob: -23.000001907348633

Token 252: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.088346359931165e-07
    2. 'c' → logprob: -14.375000953674316
    3. ' if' → logprob: -15.125000953674316
    4. 'for' → logprob: -18.0
    5. '```' → logprob: -18.375
    6. '
' → logprob: -18.5
    7. '   ' → logprob: -18.875
    8. 'elif' → logprob: -19.0
    9. 'print' → logprob: -19.75
    10. 'If' → logprob: -19.75

Token 253: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3856492842023727e-06
    2. 'c' → logprob: -14.125000953674316
    3. ' if' → logprob: -14.875000953674316
    4. '```' → logprob: -15.750000953674316
    5. 'elif' → logprob: -16.500001907348633
    6. '
' → logprob: -17.500001907348633
    7. '   ' → logprob: -18.125001907348633
    8. 'for' → logprob: -18.250001907348633
    9. '#' → logprob: -19.125001907348633
    10. '﻿' → logprob: -19.250001907348633

Token 254: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07889033854007721
    2. ' c' → logprob: -2.578890323638916
    3. '(c' → logprob: -15.203890800476074
    4. '   ' → logprob: -15.703890800476074
    5. ' ' → logprob: -16.578889846801758
    6. '	c' → logprob: -17.078889846801758
    7. '  ' → logprob: -18.953889846801758
    8. ' ' → logprob: -19.078889846801758
    9. ')c' → logprob: -19.703889846801758
    10. '    ' → logprob: -19.953889846801758

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.375001907348633
    3. '[
' → logprob: -17.750001907348633
    4. ' [' → logprob: -17.875001907348633
    5. '```' → logprob: -18.500001907348633
    6. '==' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.875001907348633
    8. ' ' → logprob: -21.125001907348633
    9. ''[' → logprob: -21.500001907348633
    10. '(' → logprob: -21.500001907348633

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. '[' → logprob: -10.750021934509277
    3. ' ' → logprob: -16.75002098083496
    4. '```' → logprob: -18.00002098083496
    5. '
' → logprob: -18.75002098083496
    6. '1' → logprob: -19.00002098083496
    7. '(' → logprob: -19.00002098083496
    8. '2' → logprob: -19.37502098083496
    9. '   ' → logprob: -19.50002098083496
    10. '00' → logprob: -19.62502098083496

Token 257: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4603724479675293
    2. '[' → logprob: -1.5853724479675293
    3. '==' → logprob: -1.8353724479675293
    4. ']' → logprob: -5.710372447967529
    5. ']==' → logprob: -7.585372447967529
    6. ' [' → logprob: -7.710372447967529
    7. ' ' → logprob: -8.835372924804688
    8. '   ' → logprob: -9.710372924804688
    9. '```' → logprob: -10.585372924804688
    10. '=' → logprob: -12.210372924804688

Token 258: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931716203689575
    2. ' ==' → logprob: -0.6931716203689575
    3. '[' → logprob: -11.193171501159668
    4. ' ' → logprob: -12.068171501159668
    5. ']==' → logprob: -13.318171501159668
    6. '=' → logprob: -13.568171501159668
    7. ']' → logprob: -14.443171501159668
    8. ')==' → logprob: -14.693171501159668
    9. ')' → logprob: -15.193171501159668
    10. '```' → logprob: -15.568171501159668

Token 259: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015028368216007948
    2. ' c' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.751502990722656
    4. '	c' → logprob: -16.126502990722656
    5. ' ' → logprob: -16.376502990722656
    6. '[c' → logprob: -16.501502990722656
    7. '0' → logprob: -17.001502990722656
    8. '  ' → logprob: -17.501502990722656
    9. 'mar' → logprob: -17.751502990722656
    10. '    ' → logprob: -17.751502990722656

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010952114826068282
    2. '1' → logprob: -7.001095294952393
    3. '0' → logprob: -8.626094818115234
    4. ' ' → logprob: -13.126094818115234
    5. ' [' → logprob: -13.376094818115234
    6. '==' → logprob: -15.501094818115234
    7. '```' → logprob: -15.501094818115234
    8. ']' → logprob: -15.626094818115234
    9. '][' → logprob: -15.626094818115234
    10. '   ' → logprob: -16.376094818115234

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. '0' → logprob: -10.875020027160645
    3. '2' → logprob: -14.125020027160645
    4. ' ' → logprob: -15.875020027160645
    5. '
' → logprob: -16.25002098083496
    6. '```' → logprob: -16.87502098083496
    7. '   ' → logprob: -17.50002098083496
    8. '[' → logprob: -18.12502098083496
    9. 'c' → logprob: -18.75002098083496
    10. '  ' → logprob: -19.00002098083496

Token 262: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0485946387052536
    2. 'and' → logprob: -3.0485947132110596
    3. ')' → logprob: -12.54859447479248
    4. ']' → logprob: -12.92359447479248
    5. ' ' → logprob: -14.04859447479248
    6. ' ==' → logprob: -15.67359447479248
    7. '==' → logprob: -15.79859447479248
    8. '}' → logprob: -16.923595428466797
    9. '```' → logprob: -17.423595428466797
    10. '0' → logprob: -17.673595428466797

Token 263: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889099419116974
    2. 'and' → logprob: -2.5788910388946533
    3. '==' → logprob: -13.953890800476074
    4. ' ' → logprob: -15.453890800476074
    5. ' ==' → logprob: -16.07889175415039
    6. '```' → logprob: -17.95389175415039
    7. 'andr' → logprob: -19.07889175415039
    8. 'if' → logprob: -19.07889175415039
    9. '&&' → logprob: -19.20389175415039
    10. 'a' → logprob: -19.20389175415039

Token 264: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931478977203369
    2. ' c' → logprob: -0.6931478977203369
    3. '   ' → logprob: -14.693147659301758
    4. '	c' → logprob: -15.318147659301758
    5. ' ' → logprob: -16.068147659301758
    6. ')c' → logprob: -18.568147659301758
    7. '(c' → logprob: -18.818147659301758
    8. '    ' → logprob: -18.943147659301758
    9. '  ' → logprob: -19.318147659301758
    10. '$c' → logprob: -19.568147659301758

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002444125711917877
    2. 'c' → logprob: -8.375244140625
    3. '1' → logprob: -11.750244140625
    4. '[c' → logprob: -12.500244140625
    5. ' [' → logprob: -13.875244140625
    6. ' c' → logprob: -14.000244140625
    7. '[
' → logprob: -15.750244140625
    8. '2' → logprob: -16.250244140625
    9. '==' → logprob: -16.750244140625
    10. '```' → logprob: -16.750244140625

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. 'c' → logprob: -14.25000286102295
    4. '[' → logprob: -15.12500286102295
    5. '   ' → logprob: -15.25000286102295
    6. '۱' → logprob: -16.375003814697266
    7. '```' → logprob: -16.375003814697266
    8. '
' → logprob: -16.500003814697266
    9. '2' → logprob: -17.000003814697266
    10. '１' → logprob: -17.625003814697266

Token 267: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741986095905304
    2. '==' → logprob: -0.974198579788208
    3. ']' → logprob: -9.974198341369629
    4. ']==' → logprob: -10.224198341369629
    5. '[' → logprob: -11.099198341369629
    6. ' ' → logprob: -11.599198341369629
    7. '```' → logprob: -12.099198341369629
    8. '=' → logprob: -12.599198341369629
    9. '==
' → logprob: -13.724198341369629
    10. '[]' → logprob: -14.099198341369629

Token 268: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16022665798664093
    2. ' ==' → logprob: -1.9102267026901245
    3. '```' → logprob: -14.035226821899414
    4. '==
' → logprob: -14.160226821899414
    5. ' ' → logprob: -14.910226821899414
    6. '=' → logprob: -15.285226821899414
    7. '==(' → logprob: -15.785226821899414
    8. ']==' → logprob: -15.785226821899414
    9. ')==' → logprob: -16.410226821899414
    10. '===' → logprob: -17.035226821899414

Token 269: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011047935113310814
    2. ' c' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.38604736328125
    4. '	c' → logprob: -16.76104736328125
    5. '   ' → logprob: -18.01104736328125
    6. ')c' → logprob: -18.13604736328125
    7. '  ' → logprob: -19.13604736328125
    8. '```' → logprob: -19.26104736328125
    9. '
' → logprob: -19.88604736328125
    10. '`' → logprob: -20.38604736328125

Token 270: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008756854571402073
    2. '2' → logprob: -4.758756637573242
    3. 'c' → logprob: -8.883756637573242
    4. ' ' → logprob: -13.383756637573242
    5. '[c' → logprob: -14.008756637573242
    6. '```' → logprob: -14.383756637573242
    7. '   ' → logprob: -14.758756637573242
    8. '[
' → logprob: -16.008756637573242
    9. ' [' → logprob: -16.508756637573242
    10. '
' → logprob: -16.883756637573242

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. ' ' → logprob: -15.75
    4. '```' → logprob: -18.125
    5. '۲' → logprob: -18.5
    6. 'c' → logprob: -18.875
    7. '２' → logprob: -19.125
    8. '0' → logprob: -19.625
    9. '   ' → logprob: -20.125
    10. '3' → logprob: -20.625

Token 272: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26429298520088196
    2. ' ==' → logprob: -1.7642929553985596
    3. ':' → logprob: -3.5142929553985596
    4. ' and' → logprob: -3.7642929553985596
    5. ':
' → logprob: -6.014293193817139
    6. 'and' → logprob: -6.389293193817139
    7. '   ' → logprob: -6.639293193817139
    8. '```' → logprob: -7.014293193817139
    9. ']==' → logprob: -7.389293193817139
    10. ']' → logprob: -7.639293193817139

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033296257606707513
    2. ' if' → logprob: -8.125332832336426
    3. '       ' → logprob: -11.125332832336426
    4. 'if' → logprob: -11.250332832336426
    5. ' and' → logprob: -12.500332832336426
    6. ' ' → logprob: -12.750332832336426
    7. '```' → logprob: -13.500332832336426
    8. '  ' → logprob: -14.750332832336426
    9. ' ==' → logprob: -15.125332832336426
    10. '    ' → logprob: -15.750332832336426

Token 274: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4067493677139282
    2. 'if' (adapté à ' if') → logprob: -1.1567493677139282
    3. ' c' → logprob: -4.281749248504639
    4. 'c' → logprob: -5.156749248504639
    5. ' mar' → logprob: -10.406749725341797
    6. '   ' → logprob: -10.406749725341797
    7. 'mar' → logprob: -10.531749725341797
    8. '       ' → logprob: -11.781749725341797
    9. ' ' → logprob: -12.406749725341797
    10. 'If' → logprob: -13.281749725341797

Token 275: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47408443689346313
    2. ' c' → logprob: -0.9740844368934631
    3. '   ' → logprob: -12.974084854125977
    4. 'mar' → logprob: -12.974084854125977
    5. ' ' → logprob: -13.474084854125977
    6. '	c' → logprob: -14.849084854125977
    7. '  ' → logprob: -15.724084854125977
    8. '    ' → logprob: -15.849084854125977
    9. ' mar' → logprob: -15.849084854125977
    10. '[c' → logprob: -16.411584854125977

Token 276: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.451116051815916e-05
    2. '0' → logprob: -10.625024795532227
    3. ' [' → logprob: -17.000024795532227
    4. '[
' → logprob: -17.250024795532227
    5. '2' → logprob: -17.375024795532227
    6. 'c' → logprob: -17.500024795532227
    7. ' ' → logprob: -18.625024795532227
    8. '```' → logprob: -18.625024795532227
    9. '   ' → logprob: -19.125024795532227
    10. '1' → logprob: -19.625024795532227

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3319124011322856e-05
    2. '[' → logprob: -10.750022888183594
    3. '2' → logprob: -13.500022888183594
    4. ' ' → logprob: -14.625022888183594
    5. '   ' → logprob: -18.500022888183594
    6. '```' → logprob: -18.875022888183594
    7. ' [' → logprob: -20.500022888183594
    8. '  ' → logprob: -20.500022888183594
    9. '1' → logprob: -20.750022888183594
    10. '۰' → logprob: -20.875022888183594

Token 278: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014166799373924732
    2. '==' → logprob: -4.264166831970215
    3. ' ' → logprob: -12.764166831970215
    4. ']==' → logprob: -15.889166831970215
    5. ')' → logprob: -16.6391658782959
    6. '   ' → logprob: -16.7641658782959
    7. '```' → logprob: -16.7641658782959
    8. ']' → logprob: -17.0141658782959
    9. '=' → logprob: -17.3891658782959
    10. '[' → logprob: -17.5141658782959

Token 279: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12692978978157043
    2. '==' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.501930236816406
    4. '=' → logprob: -15.626930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '==
' → logprob: -17.001930236816406
    7. '[' → logprob: -17.376930236816406
    8. ' =' → logprob: -17.501930236816406
    9. ' ' → logprob: -17.501930236816406
    10. ')' → logprob: -17.751930236816406

Token 280: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.07890278846025467
    2. 'mar' → logprob: -2.5789027214050293
    3. 'm' → logprob: -11.703903198242188
    4. ' ' → logprob: -13.828903198242188
    5. ' marc' → logprob: -14.328903198242188
    6. ' ' → logprob: -14.453903198242188
    7. ' mars' → logprob: -15.078903198242188
    8. ' ma' → logprob: -15.203903198242188
    9. ' mor' → logprob: -15.203903198242188
    10. ' mari' → logprob: -15.203903198242188

Token 281: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3856492842023727e-06
    2. 'ru' → logprob: -14.250000953674316
    3. '	u' → logprob: -15.875000953674316
    4. 'mar' → logprob: -16.125001907348633
    5. ' ' → logprob: -16.500001907348633
    6. 'aru' → logprob: -16.500001907348633
    7. '<u' → logprob: -17.125001907348633
    8. 'у' → logprob: -17.375001907348633
    9. 'う' → logprob: -17.500001907348633
    10. ' ' → logprob: -17.625001907348633

Token 282: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5133855938911438
    2. '==' → logprob: -1.013385534286499
    3. ':' → logprob: -3.263385534286499
    4. '       ' → logprob: -8.888385772705078
    5. ':
' → logprob: -9.638385772705078
    6. ' ' → logprob: -10.513385772705078
    7. '   ' → logprob: -10.513385772705078
    8. '=' → logprob: -10.888385772705078
    9. ' :' → logprob: -13.388385772705078
    10. '           ' → logprob: -13.513385772705078

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022745581809431314
    2. '   ' → logprob: -7.002274513244629
    3. '1' → logprob: -7.502274513244629
    4. 'flag' → logprob: -7.752274513244629
    5. ' flag' → logprob: -8.002274513244629
    6. ' ' → logprob: -10.877274513244629
    7. '           ' → logprob: -11.377274513244629
    8. '      ' → logprob: -12.002274513244629
    9. '  ' → logprob: -12.752274513244629
    10. '	flag' → logprob: -13.502274513244629

Token 284: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.09505490213632584
    2. '1' → logprob: -3.095054864883423
    3. ' flag' → logprob: -3.095054864883423
    4. ' ' → logprob: -9.345054626464844
    5. '   ' → logprob: -10.095054626464844
    6. '	flag' → logprob: -13.345054626464844
    7. '       ' → logprob: -14.345054626464844
    8. '           ' → logprob: -14.970054626464844
    9. '  ' → logprob: -15.095054626464844
    10. '(flag' → logprob: -16.095054626464844

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023163497447968
    2. ' =' → logprob: -1.910231590270996
    3. ' ==' → logprob: -13.035231590270996
    4. '==' → logprob: -13.285231590270996
    5. ' ' → logprob: -13.535231590270996
    6. '=
' → logprob: -14.035231590270996
    7. '1' → logprob: -14.285231590270996
    8. ' =
' → logprob: -14.410231590270996
    9. ' +=' → logprob: -16.410232543945312
    10. '+=' → logprob: -16.535232543945312

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022422909736633
    2. ' ' → logprob: -1.910224199295044
    3. ' ' → logprob: -17.41022491455078
    4. '0' → logprob: -17.91022491455078
    5. '   ' → logprob: -18.03522491455078
    6. '=' → logprob: -18.16022491455078
    7. '１' → logprob: -18.16022491455078
    8. '.' → logprob: -18.97272491455078
    9. '```' → logprob: -19.47272491455078
    10. 'flag' → logprob: -19.53522491455078

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'flag' → logprob: -19.625001907348633
    4. '```' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '0' → logprob: -20.625001907348633
    7. '１' → logprob: -20.750001907348633
    8. '۱' → logprob: -20.937501907348633
    9. '111' → logprob: -20.937501907348633
    10. '  ' → logprob: -22.312501907348633

Token 288: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07905469834804535
    2. 'print' → logprob: -2.579054594039917
    3. ' if' → logprob: -9.204054832458496
    4. '
' → logprob: -10.704054832458496
    5. '```' → logprob: -11.204054832458496
    6. '\
' → logprob: -11.829054832458496
    7. '#' → logprob: -12.579054832458496
    8. 'di' → logprob: -12.579054832458496
    9. 'elif' → logprob: -12.704054832458496
    10. ' print' → logprob: -12.829054832458496

Token 289: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017228922806680202
    2. 'print' → logprob: -6.376722812652588
    3. ' if' → logprob: -11.751723289489746
    4. '
' → logprob: -12.376723289489746
    5. 'for' → logprob: -13.126723289489746
    6. '```' → logprob: -13.251723289489746
    7. 'i' → logprob: -13.751723289489746
    8. 'j' → logprob: -14.126723289489746
    9. 'elif' → logprob: -14.376723289489746
    10. '#' → logprob: -14.626723289489746

Token 290: ' a' (ID: 261)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.42876264452934265
    2. ' flag' → logprob: -1.053762674331665
    3. '(flag' → logprob: -10.053762435913086
    4. '	flag' → logprob: -11.928762435913086
    5. ' ' → logprob: -12.053762435913086
    6. 'fl' → logprob: -12.928762435913086
    7. 'a' → logprob: -13.553762435913086
    8. 'f' → logprob: -14.553762435913086
    9. ' a' → logprob: -14.803762435913086
    10. ' ' → logprob: -15.053762435913086

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.250003814697266
    4. '1' → logprob: -16.875003814697266
    5. 's' → logprob: -17.000003814697266
    6. '```' → logprob: -17.000003814697266
    7. 'a' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '[
' → logprob: -17.375003814697266
    10. '==' → logprob: -17.375003814697266

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009426692849956453
    2. '1' → logprob: -7.000942707061768
    3. '2' → logprob: -10.75094223022461
    4. '
' → logprob: -12.25094223022461
    5. ' ' → logprob: -13.37594223022461
    6. '[' → logprob: -13.93844223022461
    7. '```' → logprob: -14.68844223022461
    8. '   ' → logprob: -14.87594223022461
    9. '０' → logprob: -16.00094223022461
    10. '۰' → logprob: -16.06344223022461

Token 293: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05608830600976944
    2. '==' → logprob: -2.9310882091522217
    3. ']' → logprob: -6.931088447570801
    4. ']==' → logprob: -9.0560884475708
    5. ' ' → logprob: -9.6810884475708
    6. ')' → logprob: -10.6810884475708
    7. ' ]' → logprob: -11.3060884475708
    8. '   ' → logprob: -12.4310884475708
    9. '[' → logprob: -12.9310884475708
    10. ')==' → logprob: -13.5560884475708

Token 294: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759508013725281
    2. '==' → logprob: -0.8259508013725281
    3. ' ' → logprob: -11.825950622558594
    4. '   ' → logprob: -13.700950622558594
    5. ' ' → logprob: -14.575950622558594
    6. 'a' → logprob: -14.575950622558594
    7. '=' → logprob: -14.825950622558594
    8. '  ' → logprob: -14.825950622558594
    9. '===' → logprob: -15.075950622558594
    10. '==
' → logprob: -15.075950622558594

Token 295: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005682834889739752
    2. 'mar' → logprob: -7.625568389892578
    3. ' b' → logprob: -9.500568389892578
    4. 'a' → logprob: -12.750568389892578
    5. '111' → logprob: -14.125568389892578
    6. ' mar' → logprob: -14.875568389892578
    7. 'm' → logprob: -15.000568389892578
    8. '	b' → logprob: -15.125568389892578
    9. ' ' → logprob: -15.125568389892578
    10. '1' → logprob: -16.125568389892578

Token 296: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00249289907515049
    2. '0' → logprob: -6.002492904663086
    3. '1' → logprob: -11.127492904663086
    4. ' [' → logprob: -13.627492904663086
    5. '```' → logprob: -14.752492904663086
    6. '2' → logprob: -15.627492904663086
    7. ' ' → logprob: -15.752492904663086
    8. '[
' → logprob: -15.877492904663086
    9. 'and' → logprob: -16.877492904663086
    10. '
' → logprob: -17.127492904663086

Token 297: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023249439895153046
    2. '1' → logprob: -3.773249387741089
    3. '[' → logprob: -12.523249626159668
    4. ' ' → logprob: -15.523249626159668
    5. '   ' → logprob: -16.77324867248535
    6. '
' → logprob: -17.14824867248535
    7. '```' → logprob: -17.52324867248535
    8. '{' → logprob: -18.02324867248535
    9. '۰' → logprob: -18.77324867248535
    10. '	' → logprob: -18.89824867248535

Token 298: ']' (ID: 60)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6507963538169861
    2. ' and' → logprob: -0.9007963538169861
    3. '==' → logprob: -2.650796413421631
    4. ' ==' → logprob: -6.775796413421631
    5. ']' → logprob: -8.275795936584473
    6. ')' → logprob: -9.275795936584473
    7. ']==' → logprob: -10.900795936584473
    8. '}' → logprob: -11.400795936584473
    9. ' ' → logprob: -12.775795936584473
    10. 'a' → logprob: -13.525795936584473

Token 299: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09978718310594559
    2. ' and' → logprob: -2.9747872352600098
    3. ' ==' → logprob: -3.5997872352600098
    4. 'and' → logprob: -4.09978723526001
    5. ']==' → logprob: -12.974786758422852
    6. '===' → logprob: -14.099786758422852
    7. '==
' → logprob: -14.349786758422852
    8. ')' → logprob: -14.474786758422852
    9. '=' → logprob: -14.724786758422852
    10. ' ' → logprob: -14.974786758422852

Token 300: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740773141384125
    2. ' b' → logprob: -0.9740773439407349
    3. 'a' → logprob: -15.224077224731445
    4. '	b' → logprob: -16.849077224731445
    5. ' ' → logprob: -17.849077224731445
    6. ' a' → logprob: -17.974077224731445
    7. '$b' → logprob: -19.099077224731445
    8. ')b' → logprob: -19.974077224731445
    9. ' б' → logprob: -20.224077224731445
    10. '=b' → logprob: -20.349077224731445

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011748670367524028
    2. '1' → logprob: -6.7511749267578125
    3. '```' → logprob: -12.751174926757812
    4. ' [' → logprob: -13.876174926757812
    5. '{' → logprob: -15.376174926757812
    6. ' ' → logprob: -15.501174926757812
    7. '0' → logprob: -15.626174926757812
    8. '[
' → logprob: -16.001174926757812
    9. '   ' → logprob: -17.751174926757812
    10. '...' → logprob: -18.001174926757812

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010012354701757431
    2. '0' → logprob: -4.635012149810791
    3. '2' → logprob: -8.38501262664795
    4. '[' → logprob: -11.01001262664795
    5. ' ' → logprob: -11.76001262664795
    6. '
' → logprob: -13.13501262664795
    7. '```' → logprob: -14.13501262664795
    8. '   ' → logprob: -14.26001262664795
    9. '
' → logprob: -16.135011672973633
    10. '-' → logprob: -17.010011672973633

Token 303: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1622091680765152
    2. ' ==' → logprob: -2.0372092723846436
    3. ']' → logprob: -4.0372090339660645
    4. ']==' → logprob: -6.4122090339660645
    5. '[' → logprob: -10.537209510803223
    6. '}' → logprob: -11.787209510803223
    7. '=' → logprob: -11.912209510803223
    8. 'c' → logprob: -13.037209510803223
    9. ')' → logprob: -13.037209510803223
    10. '```' → logprob: -13.037209510803223

Token 304: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0009122979827225208
    2. ' ==' → logprob: -7.000912189483643
    3. '==
' → logprob: -14.6259126663208
    4. 'c' → logprob: -15.7509126663208
    5. '=' → logprob: -16.625911712646484
    6. ']==' → logprob: -17.875911712646484
    7. '```' → logprob: -18.000911712646484
    8. '===' → logprob: -18.000911712646484
    9. '==(' → logprob: -18.625911712646484
    10. '==-' → logprob: -19.875911712646484

Token 305: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00317783304490149
    2. ' c' → logprob: -5.753177642822266
    3. ' ' → logprob: -16.878177642822266
    4. '	c' → logprob: -17.128177642822266
    5. '```' → logprob: -17.628177642822266
    6. ')c' → logprob: -18.128177642822266
    7. '   ' → logprob: -18.878177642822266
    8. '_c' → logprob: -19.878177642822266
    9. '  ' → logprob: -20.128177642822266
    10. '
' → logprob: -20.378177642822266

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005647073267027736
    2. '2' → logprob: -7.5005645751953125
    3. '0' → logprob: -11.750564575195312
    4. '[
' → logprob: -12.875564575195312
    5. '```' → logprob: -14.625564575195312
    6. '{' → logprob: -15.500564575195312
    7. ' ' → logprob: -15.750564575195312
    8. ' [' → logprob: -15.875564575195312
    9. ']' → logprob: -17.250564575195312
    10. '(' → logprob: -17.375564575195312

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -12.000011444091797
    3. '[' → logprob: -12.500011444091797
    4. '0' → logprob: -14.500011444091797
    5. '```' → logprob: -14.875011444091797
    6. '
' → logprob: -15.625011444091797
    7. '۲' → logprob: -16.125011444091797
    8. '{' → logprob: -16.500011444091797
    9. '２' → logprob: -16.875011444091797
    10. '   ' → logprob: -16.937511444091797

Token 308: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3316374123096466
    2. ']' → logprob: -1.5816373825073242
    3. '==' → logprob: -3.206637382507324
    4. ' ==' → logprob: -3.956637382507324
    5. 'and' → logprob: -4.831637382507324
    6. ')' → logprob: -5.456637382507324
    7. ']==' → logprob: -5.706637382507324
    8. '   ' → logprob: -7.831637382507324
    9. ':' → logprob: -8.081637382507324
    10. ' ' → logprob: -8.456637382507324

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010432906448841095
    2. '       ' → logprob: -5.010432720184326
    3. ' if' → logprob: -6.010432720184326
    4. ' ' → logprob: -7.385432720184326
    5. 'if' → logprob: -8.260433197021484
    6. ' and' → logprob: -8.760433197021484
    7. '  ' → logprob: -9.135433197021484
    8. ':' → logprob: -10.135433197021484
    9. '    ' → logprob: -10.510433197021484
    10. '```' → logprob: -11.135433197021484

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.501746416091919
    2. ' if' → logprob: -1.001746416091919
    3. '   ' → logprob: -3.751746416091919
    4. '       ' → logprob: -5.62674617767334
    5. ' ' → logprob: -9.75174617767334
    6. '    ' → logprob: -10.00174617767334
    7. '```' → logprob: -10.00174617767334
    8. '  ' → logprob: -10.75174617767334
    9. ' and' → logprob: -11.75174617767334
    10. ':' → logprob: -12.12674617767334

Token 311: ' c' (ID: 274)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.15855778753757477
    2. 'mar' → logprob: -2.033557891845703
    3. 'c' → logprob: -4.783557891845703
    4. ' c' → logprob: -4.908557891845703
    5. ' ' → logprob: -12.783557891845703
    6. '   ' → logprob: -13.158557891845703
    7. 'm' → logprob: -13.908557891845703
    8. 'Mar' → logprob: -14.783557891845703
    9. 'a' → logprob: -14.908557891845703
    10. '_mar' → logprob: -15.158557891845703

Token 312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. '2' → logprob: -11.50001049041748
    3. '```' → logprob: -15.50001049041748
    4. ' [' → logprob: -16.875011444091797
    5. '   ' → logprob: -17.125011444091797
    6. '[
' → logprob: -17.500011444091797
    7. '`' → logprob: -17.875011444091797
    8. ' ' → logprob: -18.875011444091797
    9. '(' → logprob: -19.250011444091797
    10. '{' → logprob: -19.375011444091797

Token 313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001966343028470874
    2. '[' → logprob: -6.25196647644043
    3. '0' → logprob: -10.25196647644043
    4. ' ' → logprob: -14.00196647644043
    5. '   ' → logprob: -14.50196647644043
    6. '```' → logprob: -14.50196647644043
    7. '[
' → logprob: -14.50196647644043
    8. '
' → logprob: -17.62696647644043
    9. '  ' → logprob: -17.75196647644043
    10. '1' → logprob: -17.75196647644043

Token 314: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804412856698036
    2. '==' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.413043975830078
    4. ')' → logprob: -14.663043975830078
    5. ']==' → logprob: -14.663043975830078
    6. ')==' → logprob: -15.788043975830078
    7. '   ' → logprob: -16.538043975830078
    8. ']' → logprob: -16.788043975830078
    9. '```' → logprob: -17.288043975830078
    10. '=' → logprob: -17.413043975830078

Token 315: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022513806819916
    2. '==' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.410224914550781
    4. '=' → logprob: -15.910224914550781
    5. '==
' → logprob: -16.78522491455078
    6. ')' → logprob: -16.91022491455078
    7. ')==' → logprob: -17.41022491455078
    8. ']==' → logprob: -17.78522491455078
    9. '===' → logprob: -17.78522491455078
    10. '```' → logprob: -17.91022491455078

Token 316: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.17976084351539612
    2. ' mar' → logprob: -1.8047608137130737
    3. 'm' → logprob: -12.054760932922363
    4. ' ' → logprob: -12.554760932922363
    5. '	m' → logprob: -14.304760932922363
    6. 'mars' → logprob: -14.429760932922363
    7. ' ' → logprob: -14.617260932922363
    8. ' marc' → logprob: -14.679760932922363
    9. 'Mar' → logprob: -14.804760932922363
    10. 'ma' → logprob: -14.992260932922363

Token 317: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.6895233531831764e-05
    2. 'mar' → logprob: -11.50002670288086
    3. 'ru' → logprob: -11.50002670288086
    4. 'ku' → logprob: -13.37502670288086
    5. ' ' → logprob: -13.87502670288086
    6. 'su' → logprob: -14.50002670288086
    7. '<u' → logprob: -14.50002670288086
    8. '	u' → logprob: -14.87502670288086
    9. 'マ' → logprob: -15.50002670288086
    10. 'lu' → logprob: -15.62502670288086

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011210747994482517
    2. ':
' → logprob: -4.886210918426514
    3. '       ' → logprob: -5.636210918426514
    4. '=' → logprob: -10.886210441589355
    5. '   ' → logprob: -12.136210441589355
    6. '):' → logprob: -13.136210441589355
    7. '==' → logprob: -13.636210441589355
    8. ' :' → logprob: -13.761210441589355
    9. '           ' → logprob: -14.136210441589355
    10. ':

' → logprob: -14.386210441589355

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04382273554801941
    2. ' flag' → logprob: -3.293822765350342
    3. 'flag' → logprob: -5.168822765350342
    4. '   ' → logprob: -9.918822288513184
    5. '           ' → logprob: -11.043822288513184
    6. '      ' → logprob: -13.043822288513184
    7. '	flag' → logprob: -13.168822288513184
    8. '     ' → logprob: -13.918822288513184
    9. ' ' → logprob: -14.168822288513184
    10. '    ' → logprob: -14.668822288513184

Token 320: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.5760993361473083
    2. ' flag' → logprob: -0.8260993361473083
    3. '   ' → logprob: -9.076099395751953
    4. '       ' → logprob: -10.076099395751953
    5. '	flag' → logprob: -13.326099395751953
    6. '           ' → logprob: -13.451099395751953
    7. ' ' → logprob: -15.826099395751953
    8. '  ' → logprob: -16.076099395751953
    9. '    ' → logprob: -16.576099395751953
    10. '_flag' → logprob: -17.576099395751953

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.128177642822266
    4. '=
' → logprob: -18.253177642822266
    5. '        ' → logprob: -19.503177642822266
    6. '+=' → logprob: -19.628177642822266
    7. '=True' → logprob: -19.753177642822266
    8. '       ' → logprob: -19.753177642822266
    9. '.=' → logprob: -19.753177642822266
    10. '＝' → logprob: -19.878177642822266

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.28522491455078
    4. '   ' → logprob: -17.41022491455078
    5. '=' → logprob: -18.41022491455078
    6. '１' → logprob: -18.41022491455078
    7. '111' → logprob: -18.53522491455078
    8. '	' → logprob: -19.34772491455078
    9. '۱' → logprob: -19.34772491455078
    10. '```' → logprob: -19.72272491455078

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'flag' → logprob: -20.125
    4. '１' → logprob: -22.875
    5. '   ' → logprob: -23.125
    6. '۱' → logprob: -23.5
    7. '```' → logprob: -24.0
    8. 'mar' → logprob: -24.125
    9. '  ' → logprob: -24.125
    10. '111' → logprob: -24.125

Token 324: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001940040965564549
    2. 'print' → logprob: -8.87519359588623
    3. 'i' → logprob: -10.25019359588623
    4. '
' → logprob: -11.50019359588623
    5. '#' → logprob: -12.25019359588623
    6. ' if' → logprob: -13.75019359588623
    7. '\' → logprob: -14.12519359588623
    8. '```' → logprob: -14.12519359588623
    9. 'a' → logprob: -15.12519359588623
    10. '\
' → logprob: -15.25019359588623

Token 325: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.375004768371582
    3. ' if' → logprob: -14.875004768371582
    4. '
' → logprob: -15.250004768371582
    5. 'elif' → logprob: -17.0000057220459
    6. 'a' → logprob: -17.1250057220459
    7. '#' → logprob: -17.8750057220459
    8. 'f' → logprob: -18.8750057220459
    9. '```' → logprob: -19.1250057220459
    10. 'print' → logprob: -19.2500057220459

Token 326: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018151935189962387
    2. ' a' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.143152236938477
    4. '	a' → logprob: -14.518152236938477
    5. ' ' → logprob: -15.018152236938477
    6. 'c' → logprob: -15.393152236938477
    7. '    ' → logprob: -16.268152236938477
    8. 'b' → logprob: -16.643152236938477
    9. '  ' → logprob: -17.518152236938477
    10. '(a' → logprob: -18.143152236938477

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.75
    3. '```' → logprob: -17.375
    4. ' [' → logprob: -17.875
    5. '2' → logprob: -18.0
    6. '0' → logprob: -18.25
    7. '\[' → logprob: -18.75
    8. '[
' → logprob: -19.0
    9. '   ' → logprob: -19.75
    10. '`' → logprob: -20.5

Token 328: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.750000953674316
    3. '
' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.0
    5. '```' → logprob: -16.5
    6. '２' → logprob: -17.625
    7. '

' → logprob: -17.75
    8. '۲' → logprob: -17.875
    9. '२' → logprob: -18.125
    10. '[' → logprob: -18.5625

Token 329: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06470859795808792
    2. '==' → logprob: -2.814708709716797
    3. ']' → logprob: -6.189708709716797
    4. ']==' → logprob: -7.439708709716797
    5. ' ' → logprob: -9.439708709716797
    6. ' ]' → logprob: -11.439708709716797
    7. ')' → logprob: -12.689708709716797
    8. '=' → logprob: -13.689708709716797
    9. ')==' → logprob: -13.689708709716797
    10. '   ' → logprob: -14.189708709716797

Token 330: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859315976500511
    2. '==' → logprob: -3.048593044281006
    3. ' ' → logprob: -12.298593521118164
    4. '=' → logprob: -14.548593521118164
    5. ']==' → logprob: -15.173593521118164
    6. ' ' → logprob: -16.298593521118164
    7. ')' → logprob: -16.673593521118164
    8. ' ==
' → logprob: -16.798593521118164
    9. ')==' → logprob: -16.798593521118164
    10. ' =' → logprob: -16.923593521118164

Token 331: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.87520408630371
    4. '	b' → logprob: -18.37520408630371
    5. ' ' → logprob: -18.50020408630371
    6. '    ' → logprob: -19.75020408630371
    7. ''b' → logprob: -20.12520408630371
    8. '  ' → logprob: -20.62520408630371
    9. '>b' → logprob: -20.62520408630371
    10. ')b' → logprob: -20.87520408630371

Token 332: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001704698195680976
    2. '1' → logprob: -6.376704692840576
    3. '[
' → logprob: -13.376705169677734
    4. ' [' → logprob: -15.001705169677734
    5. ' ' → logprob: -15.751705169677734
    6. '   ' → logprob: -16.126705169677734
    7. '(' → logprob: -16.376705169677734
    8. '{' → logprob: -16.751705169677734
    9. '```' → logprob: -16.751705169677734
    10. '][' → logprob: -17.501705169677734

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '۱' → logprob: -20.0
    4. '[' → logprob: -21.0
    5. '   ' → logprob: -21.375
    6. '
' → logprob: -21.5
    7. '१' → logprob: -21.5
    8. '１' → logprob: -21.75
    9. '{' → logprob: -22.125
    10. '2' → logprob: -22.25

Token 334: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0141762038692832
    2. 'and' → logprob: -4.264176368713379
    3. ')' → logprob: -12.264176368713379
    4. ' ' → logprob: -12.889176368713379
    5. '   ' → logprob: -13.014176368713379
    6. ']' → logprob: -13.389176368713379
    7. '[' → logprob: -14.389176368713379
    8. '```' → logprob: -15.264176368713379
    9. 'a' → logprob: -15.389176368713379
    10. '    ' → logprob: -15.639176368713379

Token 335: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023252349346876144
    2. 'and' → logprob: -3.773252248764038
    3. ' ' → logprob: -12.023252487182617
    4. '   ' → logprob: -14.398252487182617
    5. '`' → logprob: -16.398252487182617
    6. ' ' → logprob: -16.648252487182617
    7. '[' → logprob: -16.898252487182617
    8. '```' → logprob: -17.023252487182617
    9. ')' → logprob: -17.273252487182617
    10. '0' → logprob: -17.773252487182617

Token 336: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.018649332225322723
    2. 'b' → logprob: -4.018649101257324
    3. ' c' → logprob: -7.643649101257324
    4. 'c' → logprob: -11.268649101257324
    5. ' a' → logprob: -12.018649101257324
    6. 'a' → logprob: -13.518649101257324
    7. ' ' → logprob: -17.39365005493164
    8. '	b' → logprob: -18.26865005493164
    9. '   ' → logprob: -18.76865005493164
    10. ' ' → logprob: -19.26865005493164

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.375001907348633
    3. '2' → logprob: -15.250001907348633
    4. '1' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '][' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. ']' → logprob: -18.625001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '`' → logprob: -19.250001907348633

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. '2' → logprob: -10.875024795532227
    3. '[' → logprob: -12.750024795532227
    4. ' ' → logprob: -13.625024795532227
    5. '```' → logprob: -13.875024795532227
    6. '   ' → logprob: -14.875024795532227
    7. '0' → logprob: -15.500024795532227
    8. '
' → logprob: -16.125024795532227
    9. '...' → logprob: -16.250024795532227
    10. '(' → logprob: -16.750024795532227

Token 339: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694574892520905
    2. '==' → logprob: -2.126945734024048
    3. ']==' → logprob: -11.376945495605469
    4. '```' → logprob: -13.251945495605469
    5. ']' → logprob: -13.501945495605469
    6. ' ' → logprob: -14.126945495605469
    7. ')==' → logprob: -14.751945495605469
    8. '==
' → logprob: -15.126945495605469
    9. '=' → logprob: -15.251945495605469
    10. '`' → logprob: -15.376945495605469

Token 340: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20142309367656708
    2. ' ==' → logprob: -1.7014230489730835
    3. '=' → logprob: -12.576422691345215
    4. '==
' → logprob: -12.826422691345215
    5. '```' → logprob: -13.451422691345215
    6. ']==' → logprob: -13.951422691345215
    7. ' ' → logprob: -14.701422691345215
    8. '==(' → logprob: -14.826422691345215
    9. 'a' → logprob: -16.07642364501953
    10. ')==' → logprob: -16.20142364501953

Token 341: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861468818038702
    2. ' c' → logprob: -4.758614540100098
    3. '	c' → logprob: -15.883614540100098
    4. '   ' → logprob: -16.758615493774414
    5. ' ' → logprob: -16.883615493774414
    6. ')c' → logprob: -18.758615493774414
    7. 'a' → logprob: -19.133615493774414
    8. '$c' → logprob: -19.383615493774414
    9. '<c' → logprob: -19.508615493774414
    10. '
' → logprob: -19.508615493774414

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.750000953674316
    3. '```' → logprob: -16.0
    4. '[
' → logprob: -16.125
    5. '   ' → logprob: -17.25
    6. '1' → logprob: -18.25
    7. '0' → logprob: -18.25
    8. ' [' → logprob: -19.375
    9. '`' → logprob: -19.625
    10. '``' → logprob: -20.5

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -19.75
    3. '[' → logprob: -20.875
    4. ' ' → logprob: -21.125
    5. '```' → logprob: -21.625
    6. '０' → logprob: -21.75
    7. '{' → logprob: -22.375
    8. '   ' → logprob: -22.625
    9. '०' → logprob: -24.0
    10. '
' → logprob: -24.0

Token 344: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.21600806713104248
    2. ']:
' → logprob: -1.9660080671310425
    3. ']' → logprob: -3.216008186340332
    4. ':' → logprob: -4.716008186340332
    5. '):' → logprob: -5.716008186340332
    6. '):
' → logprob: -6.466008186340332
    7. '```' → logprob: -9.341008186340332
    8. ']:

' → logprob: -9.591008186340332
    9. ':
' → logprob: -9.716008186340332
    10. ')' → logprob: -10.466008186340332

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.958325295476243e-05
    2. ' if' → logprob: -10.000079154968262
    3. ':' → logprob: -10.875079154968262
    4. '       ' → logprob: -11.875079154968262
    5. 'if' → logprob: -12.375079154968262
    6. ':
' → logprob: -13.625079154968262
    7. '  ' → logprob: -13.625079154968262
    8. ' ' → logprob: -14.125079154968262
    9. '   ' → logprob: -15.250079154968262
    10. '```' → logprob: -15.250079154968262

Token 346: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24132418632507324
    2. 'if' (adapté à ' if') → logprob: -1.7413241863250732
    3. '   ' → logprob: -3.2413241863250732
    4. '       ' → logprob: -11.741324424743652
    5. ' ' → logprob: -13.241324424743652
    6. '    ' → logprob: -13.616324424743652
    7. '  ' → logprob: -14.116324424743652
    8. '```' → logprob: -14.116324424743652
    9. '	if' → logprob: -14.866324424743652
    10. ' ' → logprob: -16.991323471069336

Token 347: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3869651257991791
    2. 'c' → logprob: -1.1369651556015015
    3. 'a' → logprob: -9.761964797973633
    4. ' a' → logprob: -10.511964797973633
    5. '	c' → logprob: -12.886964797973633
    6. 'mar' → logprob: -13.011964797973633
    7. ' ' → logprob: -13.261964797973633
    8. '   ' → logprob: -13.761964797973633
    9. ' mar' → logprob: -14.136964797973633
    10. ' ' → logprob: -14.761964797973633

Token 348: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.625000953674316
    3. '[
' → logprob: -16.875001907348633
    4. '```' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.250001907348633
    6. ' [' → logprob: -18.500001907348633
    7. ' ' → logprob: -20.000001907348633
    8. '``' → logprob: -22.250001907348633
    9. '`' → logprob: -22.250001907348633
    10. '_' → logprob: -22.500001907348633

Token 349: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. ' ' → logprob: -16.75
    4. '۰' → logprob: -18.25
    5. '```' → logprob: -18.5
    6. '   ' → logprob: -18.875
    7. '０' → logprob: -19.875
    8. '०' → logprob: -21.3125
    9. '০' → logprob: -21.3125
    10. '2' → logprob: -21.5

Token 350: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01106373593211174
    2. '==' → logprob: -4.511063575744629
    3. ')' → logprob: -12.261063575744629
    4. ']' → logprob: -12.386063575744629
    5. ']==' → logprob: -12.511063575744629
    6. ' ' → logprob: -13.136063575744629
    7. '```' → logprob: -14.636063575744629
    8. ')==' → logprob: -15.011063575744629
    9. '   ' → logprob: -15.261063575744629
    10. '#' → logprob: -16.261064529418945

Token 351: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023246178403496742
    2. '==' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.398245811462402
    4. '```' → logprob: -16.14824676513672
    5. '==
' → logprob: -17.52324676513672
    6. ' ==
' → logprob: -17.77324676513672
    7. ']==' → logprob: -17.89824676513672
    8. ')==' → logprob: -17.89824676513672
    9. ' ' → logprob: -18.27324676513672
    10. '=' → logprob: -18.27324676513672

Token 352: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.023247340694069862
    2. 'mar' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.898247718811035
    4. 'm' → logprob: -14.523247718811035
    5. ' mari' → logprob: -16.64824676513672
    6. ' ' → logprob: -16.64824676513672
    7. ' marc' → logprob: -16.77324676513672
    8. ' mars' → logprob: -16.77324676513672
    9. ' ma' → logprob: -17.02324676513672
    10. '	m' → logprob: -17.27324676513672

Token 353: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.236549335066229e-05
    2. 'mar' → logprob: -11.375021934509277
    3. 'ru' → logprob: -12.375021934509277
    4. 'ur' → logprob: -13.750021934509277
    5. 'aru' → logprob: -14.125021934509277
    6. ''u' → logprob: -14.250021934509277
    7. '	u' → logprob: -14.875021934509277
    8. 'ul' → logprob: -15.000021934509277
    9. ' mar' → logprob: -15.000021934509277
    10. '<u' → logprob: -15.125021934509277

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0238602664321661
    2. ':
' → logprob: -3.773860216140747
    3. '       ' → logprob: -7.523860454559326
    4. '=' → logprob: -9.773859977722168
    5. ':

' → logprob: -12.273859977722168
    6. '   ' → logprob: -12.398859977722168
    7. '==' → logprob: -12.648859977722168
    8. '):' → logprob: -13.148859977722168
    9. ':
' → logprob: -14.273859977722168
    10. ' =' → logprob: -14.398859977722168

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031043673516251147
    2. '   ' → logprob: -8.625310897827148
    3. 'flag' → logprob: -9.375310897827148
    4. ' flag' → logprob: -10.500310897827148
    5. ':
' → logprob: -12.250310897827148
    6. '	' → logprob: -12.500310897827148
    7. ':' → logprob: -12.500310897827148
    8. '      ' → logprob: -12.750310897827148
    9. '	flag' → logprob: -14.125310897827148
    10. '           ' → logprob: -14.125310897827148

Token 356: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.023263998329639435
    2. ' flag' → logprob: -3.773263931274414
    3. '       ' → logprob: -11.398263931274414
    4. '1' → logprob: -12.523263931274414
    5. '           ' → logprob: -13.148263931274414
    6. '   ' → logprob: -14.148263931274414
    7. '	flag' → logprob: -14.398263931274414
    8. ' ' → logprob: -15.023263931274414
    9. 'flags' → logprob: -17.273263931274414
    10. '(flag' → logprob: -17.398263931274414

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.288042068481445
    4. '=
' → logprob: -17.163042068481445
    5. '   ' → logprob: -17.913042068481445
    6. ' =
' → logprob: -18.038042068481445
    7. '    ' → logprob: -18.413042068481445
    8. '=

' → logprob: -18.538042068481445
    9. '＝' → logprob: -18.913042068481445
    10. '+=' → logprob: -18.913042068481445

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3868710398674011
    2. ' ' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.136871337890625
    4. '   ' → logprob: -18.011871337890625
    5. '0' → logprob: -18.261871337890625
    6. ' 
' → logprob: -18.886871337890625
    7. '１' → logprob: -19.511871337890625
    8. '=' → logprob: -19.636871337890625
    9. '```' → logprob: -19.761871337890625
    10. '  ' → logprob: -19.886871337890625

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'flag' → logprob: -20.75
    4. '１' → logprob: -21.125
    5. '```' → logprob: -21.125
    6. '0' → logprob: -21.375
    7. '   ' → logprob: -21.9375
    8. '
' → logprob: -21.9375
    9. '۱' → logprob: -22.375
    10. '  ' → logprob: -23.0

Token 360: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13252711296081543
    2. '
' → logprob: -2.1325271129608154
    3. 'flag' → logprob: -5.3825273513793945
    4. 'if' → logprob: -7.6325273513793945
    5. ' print' → logprob: -8.632527351379395
    6. '```' → logprob: -9.507527351379395
    7. '\n' → logprob: -9.632527351379395
    8. ' 
' → logprob: -9.882527351379395
    9. '

' → logprob: -10.632527351379395
    10. ':
' → logprob: -11.007527351379395

Token 361: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12707257270812988
    2. 'if' → logprob: -2.12707257270813
    3. '
' → logprob: -9.00207233428955
    4. 'pr' → logprob: -11.00207233428955
    5. ' print' → logprob: -14.25207233428955
    6. ' if' → logprob: -14.37707233428955
    7. '\
' → logprob: -14.50207233428955
    8. '```' → logprob: -14.50207233428955
    9. '#' → logprob: -14.75207233428955
    10. 'for' → logprob: -15.12707233428955

Token 362: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.07890620082616806
    2. ' flag' → logprob: -2.578906297683716
    3. '(flag' → logprob: -11.828906059265137
    4. 'fl' → logprob: -12.578906059265137
    5. ' ' → logprob: -13.328906059265137
    6. 'f' → logprob: -13.453906059265137
    7. '	flag' → logprob: -13.453906059265137
    8. ' fla' → logprob: -15.078906059265137
    9. '1' → logprob: -15.453906059265137
    10. ' ' → logprob: -16.078907012939453

Token 363: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012705058790743351
    2. '==' → logprob: -4.387704849243164
    3. ':' → logprob: -8.637704849243164
    4. ' :' → logprob: -11.637704849243164
    5. '=' → logprob: -12.637704849243164
    6. ' ' → logprob: -13.012704849243164
    7. ' =' → logprob: -13.137704849243164
    8. ' ' → logprob: -13.762704849243164
    9. ' !=' → logprob: -14.887704849243164
    10. '1' → logprob: -16.637704849243164

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023250719532370567
    2. ' ' → logprob: -3.7732508182525635
    3. '0' → logprob: -12.148250579833984
    4. '   ' → logprob: -18.148250579833984
    5. '	' → logprob: -20.335750579833984
    6. '```' → logprob: -20.398250579833984
    7. ' ' → logprob: -20.460750579833984
    8. '１' → logprob: -20.585750579833984
    9. '۱' → logprob: -21.023250579833984
    10. '  ' → logprob: -21.273250579833984

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.281485836254433e-05
    2. ' ' → logprob: -9.375092506408691
    3. '0' → logprob: -11.750092506408691
    4. '   ' → logprob: -17.812593460083008
    5. '１' → logprob: -18.687593460083008
    6. '```' → logprob: -19.062593460083008
    7. '۱' → logprob: -19.187593460083008
    8. '१' → logprob: -19.500093460083008
    9. '১' → logprob: -19.625093460083008
    10. '' → logprob: -19.687593460083008

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4740813970565796
    2. ':
' → logprob: -0.9740813970565796
    3. 'print' → logprob: -13.599081039428711
    4. ':
' → logprob: -13.599081039428711
    5. ' :
' → logprob: -13.724081039428711
    6. ':

' → logprob: -14.974081039428711
    7. ' :' → logprob: -15.349081039428711
    8. ' print' → logprob: -15.724081039428711
    9. '():
' → logprob: -16.09908103942871
    10. '   ' → logprob: -17.72408103942871

Token 367: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.9791776537895203
    2. 'print' → logprob: -1.104177713394165
    3. '   ' → logprob: -1.229177713394165
    4. '	print' → logprob: -8.104177474975586
    5. '       ' → logprob: -10.604177474975586
    6. '\n' → logprob: -11.104177474975586
    7. '
' → logprob: -12.229177474975586
    8. '```' → logprob: -12.604177474975586
    9. '\' → logprob: -12.854177474975586
    10. ' 
' → logprob: -12.854177474975586

Token 368: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010580805974313989
    2. '
' → logprob: -9.375105857849121
    3. ' print' → logprob: -10.875105857849121
    4. '   ' → logprob: -13.500105857849121
    5. '
' → logprob: -14.875105857849121
    6. 'pr' → logprob: -16.375104904174805
    7. '    
' → logprob: -16.750104904174805
    8. '```' → logprob: -17.250104904174805
    9. '	print' → logprob: -17.375104904174805
    10. ' 
' → logprob: -17.375104904174805

Token 369: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005113034043461084
    2. '(' → logprob: -5.505113124847412
    3. '('' → logprob: -6.880113124847412
    4. '(True' → logprob: -13.505112648010254
    5. ' ("' → logprob: -13.505112648010254
    6. '(":' → logprob: -14.380112648010254
    7. '()' → logprob: -14.505112648010254
    8. '"' → logprob: -14.505112648010254
    9. '("("' → logprob: -14.630112648010254
    10. '("#' → logprob: -15.255112648010254

Token 370: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.022341126576066017
    2. '"' → logprob: -4.022341251373291
    3. ' Yes' → logprob: -7.022341251373291
    4. 'YES' → logprob: -7.147341251373291
    5. '
' → logprob: -7.272341251373291
    6. 'yes' → logprob: -7.397341251373291
    7. '```' → logprob: -8.397340774536133
    8. ' yes' → logprob: -8.522340774536133
    9. 'b' → logprob: -9.022340774536133
    10. '3' → logprob: -9.272340774536133

Token 371: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006725549232214689
    2. '")
' → logprob: -5.006725311279297
    3. '")
' → logprob: -11.631725311279297
    4. ')' → logprob: -13.756725311279297
    5. '")

' → logprob: -16.381725311279297
    6. ')")' → logprob: -16.756725311279297
    7. '"' → logprob: -17.256725311279297
    8. ' ")' → logprob: -18.006725311279297
    9. '!")' → logprob: -18.506725311279297
    10. '')' → logprob: -18.506725311279297

Token 372: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0206720617134124e-05
    2. ' else' → logprob: -11.50001049041748
    3. '```' → logprob: -18.250009536743164
    4. 'elif' → logprob: -19.000009536743164
    5. 'e' → logprob: -19.875009536743164
    6. '}else' → logprob: -20.625009536743164
    7. 'el' → logprob: -21.125009536743164
    8. '	else' → logprob: -21.375009536743164
    9. '
' → logprob: -21.375009536743164
    10. 'els' → logprob: -21.625009536743164

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002607760252431035
    2. ':
' → logprob: -6.002607822418213
    3. '   ' → logprob: -9.002607345581055
    4. ' :' → logprob: -11.877607345581055
    5. '):' → logprob: -13.877607345581055
    6. ' :
' → logprob: -14.502607345581055
    7. '():' → logprob: -15.877607345581055
    8. '):
' → logprob: -16.002607345581055
    9. ')' → logprob: -16.127607345581055
    10. ':

' → logprob: -16.127607345581055

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011677479778882116
    2. ' print' → logprob: -9.125116348266602
    3. 'print' → logprob: -11.875116348266602
    4. '   ' → logprob: -15.000116348266602
    5. '	print' → logprob: -15.000116348266602
    6. '       ' → logprob: -15.875116348266602
    7. '   ' → logprob: -18.1251163482666
    8. '```' → logprob: -18.6251163482666
    9. '    ' → logprob: -18.8751163482666
    10. '  ' → logprob: -19.5001163482666

Token 375: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6952023506164551
    2. ' print' → logprob: -0.6952023506164551
    3. '   ' → logprob: -6.195202350616455
    4. '	print' → logprob: -11.445201873779297
    5. 'Print' → logprob: -12.945201873779297
    6. '    ' → logprob: -15.195201873779297
    7. ' ' → logprob: -15.445201873779297
    8. '.print' → logprob: -15.945201873779297
    9. '       ' → logprob: -16.570201873779297
    10. '(print' → logprob: -16.945201873779297

Token 376: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03806536644697189
    2. '(' → logprob: -3.2880654335021973
    3. '(
' → logprob: -10.788064956665039
    4. '('' → logprob: -13.788064956665039
    5. '("")' → logprob: -14.163064956665039
    6. '("("' → logprob: -14.788064956665039
    7. ' ("' → logprob: -14.913064956665039
    8. '("""' → logprob: -15.038064956665039
    9. '(""' → logprob: -15.413064956665039
    10. '(

' → logprob: -15.663064956665039

Token 377: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.842555426876061e-06
    2. '"No' → logprob: -12.250004768371582
    3. ' No' → logprob: -17.7500057220459
    4. 'Yes' → logprob: -18.2500057220459
    5. '"' → logprob: -19.5000057220459
    6. 'NO' → logprob: -20.1250057220459
    7. '>No' → logprob: -21.7500057220459
    8. '_No' → logprob: -21.8750057220459
    9. '")' → logprob: -22.3750057220459
    10. '.No' → logprob: -22.6250057220459

Token 378: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.246537173457909e-06
    2. ')' → logprob: -12.500003814697266
    3. ')")' → logprob: -15.125003814697266
    4. '")
' → logprob: -16.375003814697266
    5. '')' → logprob: -18.500003814697266
    6. '}")' → logprob: -19.875003814697266
    7. '"' → logprob: -20.125003814697266
    8. '");' → logprob: -20.125003814697266
    9. ' ")' → logprob: -20.500003814697266
    10. '”)' → logprob: -20.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 376
Tokens correctement prédits (1ère position, stricte): 175
Tokens correctement prédits (1ère position, avec adaptation): 186
Tokens correctement prédits (top 10): 338
Précision stricte (1ère position): 46.54%
Précision adaptée (1ère position): 49.47%
Précision (top 10): 89.89%
================================================================================
