================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate

n = int(input())
H = list(map(int, input().split()))

result = list(accumulate(H, lambda a, b: max(a, b)))

ct = sum(map(lambda x: x[0] == x[1], zip(result, H)))
print(ct)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013228817842900753
    2. '(lambda' → logprob: -4.513228893280029
    3. ' (' → logprob: -7.138228893280029
    4. ',' → logprob: -7.263228893280029
    5. '```' → logprob: -8.388228416442871
    6. '(
' → logprob: -9.013228416442871
    7. 'def' → logprob: -9.263228416442871
    8. '\' → logprob: -10.138228416442871
    9. 'lambda' → logprob: -10.388228416442871
    10. '\(' → logprob: -10.388228416442871

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007897501811385155
    2. '\' → logprob: -5.75789737701416
    3. 'def' → logprob: -7.13289737701416
    4. '```' → logprob: -7.13289737701416
    5. '\(' → logprob: -7.38289737701416
    6. ' ' → logprob: -7.75789737701416
    7. '(
' → logprob: -7.88289737701416
    8. ' (' → logprob: -8.50789737701416
    9. '(lambda' → logprob: -8.63289737701416
    10. ',' → logprob: -8.63289737701416

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8743318915367126
    2. ' operator' → logprob: -1.4993319511413574
    3. ' itertools' → logprob: -1.6243319511413574
    4. ' collections' → logprob: -1.8743319511413574
    5. ' os' → logprob: -4.874331951141357
    6. 'operator' → logprob: -7.499331951141357
    7. ' typing' → logprob: -8.4993314743042
    8. ' sys' → logprob: -8.6243314743042
    9. 'collections' → logprob: -8.9993314743042
    10. 'math' → logprob: -8.9993314743042

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14605842530727386
    2. 'import' → logprob: -2.2710583209991455
    3. '.' → logprob: -3.5210583209991455
    4. ' .' → logprob: -6.396058559417725
    5. '.import' → logprob: -6.896058559417725
    6. ' ' → logprob: -8.521058082580566
    7. '	import' → logprob: -9.771058082580566
    8. '<|end|>' → logprob: -9.771058082580566
    9. '_import' → logprob: -10.146058082580566
    10. '.im' → logprob: -10.771058082580566

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010559480637311935
    2. '(
' → logprob: -5.135559558868408
    3. '\' → logprob: -6.385559558868408
    4. ',' → logprob: -7.010559558868408
    5. '\n' → logprob: -7.385559558868408
    6. '.' → logprob: -7.760559558868408
    7. 'def' → logprob: -8.01055908203125
    8. '```' → logprob: -8.38555908203125
    9. '`' → logprob: -9.26055908203125
    10. '\(' → logprob: -9.38555908203125

Token 10: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07512985169887543
    2. 'def' → logprob: -3.325129747390747
    3. '(
' → logprob: -4.325129985809326
    4. '\' → logprob: -4.325129985809326
    5. '```' → logprob: -6.325129985809326
    6. '\n' → logprob: -6.450129985809326
    7. '[' → logprob: -7.075129985809326
    8. '`' → logprob: -7.075129985809326
    9. ',' → logprob: -7.075129985809326
    10. 'd' → logprob: -7.200129985809326

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8102114796638489
    2. ' =' → logprob: -0.8102114796638489
    3. ' ' → logprob: -2.560211420059204
    4. '_' → logprob: -4.185211658477783
    5. 'u' → logprob: -4.935211658477783
    6. ',' → logprob: -5.060211658477783
    7. '.' → logprob: -5.935211658477783
    8. ')' → logprob: -7.685211658477783
    9. '  ' → logprob: -7.810211658477783
    10. 'a' → logprob: -8.185211181640625

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007201101630926132
    2. '10' → logprob: -5.382201194763184
    3. ' int' → logprob: -6.882201194763184
    4. '5' → logprob: -7.382201194763184
    5. '0' → logprob: -8.007201194763184
    6. 'int' → logprob: -8.007201194763184
    7. '20' → logprob: -9.257201194763184
    8. '1' → logprob: -9.257201194763184
    9. '100' → logprob: -11.257201194763184
    10. '4' → logprob: -11.382201194763184

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007051641005091369
    2. '(n' → logprob: -7.500705242156982
    3. '(input' → logprob: -10.500704765319824
    4. '('' → logprob: -10.750704765319824
    5. '<|end|>' → logprob: -11.000704765319824
    6. '```' → logprob: -11.250704765319824
    7. '()' → logprob: -11.375704765319824
    8. ' (' → logprob: -11.500704765319824
    9. 'n' → logprob: -11.875704765319824
    10. '`' → logprob: -12.125704765319824

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3314165472984314
    2. '()' → logprob: -1.5814166069030762
    3. '())' → logprob: -2.831416606903076
    4. '(' → logprob: -4.081416606903076
    5. '))' → logprob: -8.456416130065918
    6. '')' → logprob: -9.206416130065918
    7. '")' → logprob: -9.331416130065918
    8. '`)' → logprob: -9.706416130065918
    9. '('' → logprob: -10.081416130065918
    10. '(
' → logprob: -10.706416130065918

Token 15: 'H' (ID: 39)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7268539667129517
    2. 'arr' → logprob: -1.4768539667129517
    3. 'data' → logprob: -1.6018539667129517
    4. 'numbers' → logprob: -2.976853847503662
    5. 'result' → logprob: -4.976853847503662
    6. 'array' → logprob: -4.976853847503662
    7. 's' → logprob: -5.351853847503662
    8. 'nums' → logprob: -5.601853847503662
    9. 'lst' → logprob: -5.726853847503662
    10. ')' → logprob: -6.351853847503662

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030519219115376472
    2. '[i' → logprob: -4.905519008636475
    3. '[]' → logprob: -5.030519008636475
    4. '.' → logprob: -5.530519008636475
    5. '[:]' → logprob: -5.530519008636475
    6. 's' → logprob: -6.030519008636475
    7. ')' → logprob: -6.405519008636475
    8. ' ' → logprob: -7.405519008636475
    9. ' heights' → logprob: -7.655519008636475
    10. '_' → logprob: -7.905519008636475

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4006854295730591
    2. 'list' → logprob: -1.650685429573059
    3. ' [' → logprob: -2.1506853103637695
    4. '[list' → logprob: -4.2756853103637695
    5. '[' → logprob: -5.0256853103637695
    6. ' []' → logprob: -7.0256853103637695
    7. '[]' → logprob: -8.40068531036377
    8. '[int' → logprob: -9.15068531036377
    9. '[input' → logprob: -9.15068531036377
    10. '[List' → logprob: -12.90068531036377

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07275260239839554
    2. '(map' → logprob: -2.8227527141571045
    3. '(range' → logprob: -5.572752475738525
    4. '(input' → logprob: -5.697752475738525
    5. '(int' → logprob: -5.947752475738525
    6. '(acc' → logprob: -7.947752475738525
    7. '()' → logprob: -8.447752952575684
    8. '(eval' → logprob: -9.322752952575684
    9. '(filter' → logprob: -9.572752952575684
    10. '(

' → logprob: -10.697752952575684

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03190508857369423
    2. '(' → logprob: -3.656905174255371
    3. '(str' → logprob: -5.906905174255371
    4. '(lambda' → logprob: -6.031905174255371
    5. '(input' → logprob: -8.031905174255371
    6. '(eval' → logprob: -9.906905174255371
    7. 'int' → logprob: -10.781905174255371
    8. '(float' → logprob: -10.781905174255371
    9. '[int' → logprob: -12.031905174255371
    10. '(list' → logprob: -12.031905174255371

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009480869397521019
    2. ',input' → logprob: -4.884480953216553
    3. '(' → logprob: -6.634480953216553
    4. ',' → logprob: -7.884480953216553
    5. 'input' → logprob: -9.134480476379395
    6. '(eval' → logprob: -11.009480476379395
    7. ')' → logprob: -11.134480476379395
    8. '=input' → logprob: -11.134480476379395
    9. '(lambda' → logprob: -12.509480476379395
    10. ' (' → logprob: -12.634480476379395

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01818283461034298
    2. ' input' → logprob: -4.018182754516602
    3. '(input' → logprob: -10.893182754516602
    4. ',input' → logprob: -11.518182754516602
    5. ')' → logprob: -13.143182754516602
    6. '=input' → logprob: -13.518182754516602
    7. '	input' → logprob: -14.643182754516602
    8. ' ' → logprob: -15.768182754516602
    9. 'list' → logprob: -16.3931827545166
    10. '))' → logprob: -16.6431827545166

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -11.37503433227539
    3. '()))' → logprob: -11.62503433227539
    4. '()' → logprob: -12.12503433227539
    5. '()));' → logprob: -13.25003433227539
    6. '())' → logprob: -13.37503433227539
    7. '.split' → logprob: -14.12503433227539
    8. ' ().' → logprob: -14.37503433227539
    9. '(.' → logprob: -14.50003433227539
    10. ')' → logprob: -14.50003433227539

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003485745983198285
    2. 'strip' → logprob: -8.000349044799805
    3. ' split' → logprob: -11.625349044799805
    4. 'rstrip' → logprob: -12.875349044799805
    5. '(split' → logprob: -13.500349044799805
    6. 'spl' → logprob: -16.000349044799805
    7. ')' → logprob: -16.250349044799805
    8. ' ' → logprob: -18.000349044799805
    9. 's' → logprob: -18.000349044799805
    10. 'plit' → logprob: -18.125349044799805

Token 24: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16020400822162628
    2. ')' → logprob: -2.2852039337158203
    3. '()))' → logprob: -3.2852039337158203
    4. '())' → logprob: -5.16020393371582
    5. '(' → logprob: -6.16020393371582
    6. ')))' → logprob: -7.28520393371582
    7. '()' → logprob: -8.78520393371582
    8. '),' → logprob: -10.53520393371582
    9. ''))' → logprob: -10.78520393371582
    10. '())))' → logprob: -11.16020393371582

Token 25: 'result' (ID: 2521)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3424731492996216
    2. 'prefix' → logprob: -2.592473030090332
    3. 'd' → logprob: -3.092473030090332
    4. 'c' → logprob: -3.217473030090332
    5. 's' → logprob: -3.217473030090332
    6. 'max' → logprob: -4.467473030090332
    7. 'acc' → logprob: -4.717473030090332
    8. 'cum' → logprob: -4.717473030090332
    9. 'diff' → logprob: -4.842473030090332
    10. 'ans' → logprob: -5.842473030090332

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9271516799926758
    2. ' =' → logprob: -0.9271516799926758
    3. '(' → logprob: -1.9271516799926758
    4. '_' → logprob: -2.802151679992676
    5. 's' → logprob: -7.177151679992676
    6. ')' → logprob: -7.302151679992676
    7. '[' → logprob: -7.927151679992676
    8. ',' → logprob: -8.052151679992676
    9. ' ' → logprob: -9.427151679992676
    10. '.' → logprob: -9.802151679992676

Token 27: ' list' (ID: 1562)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.7273032069206238
    2. ' max' → logprob: -1.8523032665252686
    3. ' reduce' → logprob: -2.1023032665252686
    4. 'max' → logprob: -2.7273032665252686
    5. '0' → logprob: -2.9773032665252686
    6. '[' → logprob: -3.4773032665252686
    7. ' accumulate' → logprob: -3.8523032665252686
    8. ' min' → logprob: -4.2273030281066895
    9. 'acc' → logprob: -4.3523030281066895
    10. 'min' → logprob: -4.4773030281066895

Token 28: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0447184294462204
    2. '(' → logprob: -3.1697185039520264
    3. '(ac' → logprob: -7.169718265533447
    4. '(.' → logprob: -7.794718265533447
    5. '(re' → logprob: -8.544718742370605
    6. '(range' → logprob: -9.294718742370605
    7. '(filter' → logprob: -9.794718742370605
    8. '(lambda' → logprob: -10.169718742370605
    9. '(map' → logprob: -10.419718742370605
    10. '(chain' → logprob: -10.794718742370605

Token 29: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0003045994380954653
    2. 'um' → logprob: -8.125304222106934
    3. 'ulate' → logprob: -12.500304222106934
    4. 'umu' → logprob: -13.000304222106934
    5. 'umul' → logprob: -13.625304222106934
    6. 'om' → logprob: -14.750304222106934
    7. 'umut' → logprob: -15.000304222106934
    8. 'uminate' → logprob: -15.125304222106934
    9. 'umal' → logprob: -16.00030517578125
    10. 'umulator' → logprob: -16.62530517578125

Token 30: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.003618839429691434
    2. '(' → logprob: -5.6286187171936035
    3. '(lambda' → logprob: -11.253619194030762
    4. ')' → logprob: -13.003619194030762
    5. ' (' → logprob: -14.503619194030762
    6. '((' → logprob: -14.878619194030762
    7. '(h' → logprob: -14.878619194030762
    8. '(n' → logprob: -15.128619194030762
    9. '(A' → logprob: -15.378619194030762
    10. '(
' → logprob: -15.378619194030762

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1277896761894226
    2. '))' → logprob: -2.1277897357940674
    3. ')' → logprob: -7.502789497375488
    4. ')))' → logprob: -8.877789497375488
    5. '),' → logprob: -10.252789497375488
    6. ' ,' → logprob: -10.252789497375488
    7. '+' → logprob: -11.127789497375488
    8. '   ' → logprob: -11.252789497375488
    9. '))
' → logprob: -11.377789497375488
    10. '(' → logprob: -11.502789497375488

Token 32: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6288754343986511
    2. 'max' → logprob: -1.128875494003296
    3. 'min' → logprob: -2.878875494003296
    4. ' lambda' → logprob: -3.253875494003296
    5. ' max' → logprob: -3.878875494003296
    6. 'reduce' → logprob: -3.878875494003296
    7. ' min' → logprob: -5.253875255584717
    8. '   ' → logprob: -7.503875255584717
    9. ' reduce' → logprob: -7.753875255584717
    10. 're' → logprob: -8.378875732421875

Token 33: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09527396410703659
    2. 'x' → logprob: -2.845273971557617
    3. ' a' → logprob: -3.970273971557617
    4. ' acc' → logprob: -4.595273971557617
    5. 'a' → logprob: -5.720273971557617
    6. 'acc' → logprob: -8.595273971557617
    7. ' ' → logprob: -8.970273971557617
    8. ' prev' → logprob: -9.970273971557617
    9. ' h' → logprob: -10.595273971557617
    10. ' s' → logprob: -11.095273971557617

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001625379954930395
    2. ' ,' → logprob: -8.750162124633789
    3. ',b' → logprob: -13.125162124633789
    4. ',h' → logprob: -14.500162124633789
    5. ',a' → logprob: -14.875162124633789
    6. ',x' → logprob: -15.625162124633789
    7. ',int' → logprob: -15.750162124633789
    8. ',max' → logprob: -15.875162124633789
    9. ',n' → logprob: -16.37516212463379
    10. ',i' → logprob: -16.62516212463379

Token 35: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25208309292793274
    2. 'b' → logprob: -1.5020830631256104
    3. ' ' → logprob: -8.877082824707031
    4. ' x' → logprob: -12.627082824707031
    5. 'x' → logprob: -13.127082824707031
    6. ' c' → logprob: -13.627082824707031
    7. ',b' → logprob: -13.877082824707031
    8. 'c' → logprob: -13.877082824707031
    9. '  ' → logprob: -14.002082824707031
    10. 'e' → logprob: -14.127082824707031

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017637170385569334
    2. ' :' → logprob: -6.876763820648193
    3. ',' → logprob: -7.251763820648193
    4. ':max' → logprob: -11.501763343811035
    5. ' ,' → logprob: -12.126763343811035
    6. ' ' → logprob: -13.751763343811035
    7. 'a' → logprob: -13.876763343811035
    8. ',:' → logprob: -14.001763343811035
    9. 'max' → logprob: -14.126763343811035
    10. ',max' → logprob: -14.876763343811035

Token 37: ' max' (ID: 2999)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.261858195066452
    2. ' max' → logprob: -1.8868582248687744
    3. 'a' → logprob: -2.6368582248687744
    4. ' min' → logprob: -5.511857986450195
    5. 'max' → logprob: -6.011857986450195
    6. ' ' → logprob: -7.511857986450195
    7. 'min' → logprob: -9.386857986450195
    8. ' b' → logprob: -10.261857986450195
    9. ' abs' → logprob: -10.886857986450195
    10. '	a' → logprob: -11.261857986450195

Token 38: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006000961875542998
    2. 'a' → logprob: -8.00059986114502
    3. '(' → logprob: -8.25059986114502
    4. ' a' → logprob: -13.00059986114502
    5. ' (' → logprob: -14.87559986114502
    6. '(max' → logprob: -15.12559986114502
    7. ')' → logprob: -15.62559986114502
    8. ' ' → logprob: -15.75059986114502
    9. '))' → logprob: -16.875600814819336
    10. '(
' → logprob: -17.000600814819336

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014202877879142761
    2. ',b' → logprob: -4.389203071594238
    3. ' ,' → logprob: -6.389203071594238
    4. 'b' → logprob: -11.889203071594238
    5. 'a' → logprob: -13.139203071594238
    6. ' ' → logprob: -14.014203071594238
    7. '+' → logprob: -14.139203071594238
    8. ',max' → logprob: -14.889203071594238
    9. ',a' → logprob: -14.889203071594238
    10. '+b' → logprob: -15.139203071594238

Token 40: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2811785042285919
    2. ' b' → logprob: -1.4061784744262695
    3. ' ' → logprob: -10.78117847442627
    4. 'a' → logprob: -12.78117847442627
    5. ' ' → logprob: -13.78117847442627
    6. ' a' → logprob: -14.03117847442627
    7. '	b' → logprob: -14.15617847442627
    8. '  ' → logprob: -14.40617847442627
    9. '   ' → logprob: -14.71867847442627
    10. ')b' → logprob: -14.90617847442627

Token 41: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.14392365515232086
    2. ')' → logprob: -2.018923759460449
    3. '),' → logprob: -7.518923759460449
    4. '))' → logprob: -8.51892375946045
    5. ' ' → logprob: -8.64392375946045
    6. ',' → logprob: -8.64392375946045
    7. ')));' → logprob: -9.26892375946045
    8. ')))
' → logprob: -10.89392375946045
    9. ' )' → logprob: -11.51892375946045
    10. ')))

' → logprob: -12.64392375946045

Token 42: 'ct' (ID: 308)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026689445599913597
    2. '
' → logprob: -3.9016895294189453
    3. '[' → logprob: -5.776689529418945
    4. '<|end|>' → logprob: -7.276689529418945
    5. ')
' → logprob: -7.526689529418945
    6. ' ' → logprob: -7.776689529418945
    7. ' )' → logprob: -8.901689529418945
    8. '\n' → logprob: -9.151689529418945
    9. '[::-' → logprob: -9.151689529418945
    10. 'result' → logprob: -9.151689529418945

Token 43: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22609290480613708
    2. '=' → logprob: -1.9760929346084595
    3. ' =' → logprob: -2.97609281539917
    4. '_counter' → logprob: -5.72609281539917
    5. '_count' → logprob: -6.10109281539917
    6. '_ct' → logprob: -6.47609281539917
    7. '_counts' → logprob: -6.85109281539917
    8. '_' → logprob: -6.97609281539917
    9. 'count' → logprob: -7.85109281539917
    10. '[' → logprob: -8.101093292236328

Token 44: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19282379746437073
    2. ' ' → logprob: -2.317823886871338
    3. '1' → logprob: -2.817823886871338
    4. '{}' → logprob: -4.567823886871338
    5. '{' → logprob: -5.192823886871338
    6. 'result' → logprob: -7.942823886871338
    7. ' {}' → logprob: -8.06782341003418
    8. ' {' → logprob: -9.31782341003418
    9. 'len' → logprob: -9.44282341003418
    10. ' result' → logprob: -9.44282341003418

Token 45: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09079048037528992
    2. '(result' → logprob: -3.3407905101776123
    3. '(h' → logprob: -4.215790271759033
    4. '(ct' → logprob: -4.465790271759033
    5. '(a' → logprob: -5.090790271759033
    6. '(H' → logprob: -5.465790271759033
    7. '(i' → logprob: -5.590790271759033
    8. '(max' → logprob: -5.715790271759033
    9. '(x' → logprob: -5.840790271759033
    10. '(c' → logprob: -6.090790271759033

Token 46: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.01203615590929985
    2. 'lambda' → logprob: -5.137036323547363
    3. '(int' → logprob: -5.512036323547363
    4. 'int' → logprob: -6.762036323547363
    5. '(' → logprob: -7.762036323547363
    6. ')' → logprob: -8.262036323547363
    7. '<int' → logprob: -9.387036323547363
    8. '=lambda' → logprob: -9.887036323547363
    9. ' lambda' → logprob: -10.512036323547363
    10. '```' → logprob: -12.137036323547363

Token 47: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.2672228813171387
    2. '(lambda' → logprob: -1.3922228813171387
    3. ' lambda' → logprob: -1.7672228813171387
    4. ' x' → logprob: -2.0172228813171387
    5. 'x' → logprob: -2.5172228813171387
    6. ':' → logprob: -3.3922228813171387
    7. ' s' → logprob: -5.142222881317139
    8. 's' → logprob: -5.267222881317139
    9. ',' → logprob: -5.392222881317139
    10. '=lambda' → logprob: -5.392222881317139

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020014385227113962
    2. ',' → logprob: -6.5020012855529785
    3. ' :' → logprob: -7.7520012855529785
    4. ':max' → logprob: -10.752001762390137
    5. ':x' → logprob: -10.877001762390137
    6. ':
' → logprob: -11.752001762390137
    7. ':H' → logprob: -12.002001762390137
    8. ':int' → logprob: -13.127001762390137
    9. ':return' → logprob: -13.127001762390137
    10. ':not' → logprob: -13.252001762390137

Token 49: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1533544063568115
    2. 'max' → logprob: -1.4033544063568115
    3. ' max' → logprob: -1.5283544063568115
    4. ' x' → logprob: -2.2783544063568115
    5. 'result' → logprob: -3.5283544063568115
    6. 'H' → logprob: -3.6533544063568115
    7. '1' → logprob: -3.7783544063568115
    8. ' result' → logprob: -3.9033544063568115
    9. ' ' → logprob: -5.653354644775391
    10. ' H' → logprob: -5.653354644775391

Token 50: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4185055494308472
    2. '>=' → logprob: -1.6685055494308472
    3. '<=' → logprob: -2.1685056686401367
    4. ' >=' → logprob: -2.4185056686401367
    5. ' <=' → logprob: -2.5435056686401367
    6. ':' → logprob: -2.7935056686401367
    7. ' -' → logprob: -3.1685056686401367
    8. '+' → logprob: -3.5435056686401367
    9. '>' → logprob: -3.6685056686401367
    10. ' +' → logprob: -3.7935056686401367

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1610211431980133
    2. '1' → logprob: -1.911021113395691
    3. ' ' → logprob: -8.78602123260498
    4. ',' → logprob: -8.91102123260498
    5. ':' → logprob: -9.16102123260498
    6. '-' → logprob: -9.28602123260498
    7. '>' → logprob: -9.78602123260498
    8. 'x' → logprob: -9.78602123260498
    9. '   ' → logprob: -10.78602123260498
    10. '(' → logprob: -10.97352123260498

Token 52: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16914093494415283
    2. '>' → logprob: -2.5441408157348633
    3. ' >' → logprob: -3.2941408157348633
    4. '>=' → logprob: -5.044140815734863
    5. '-' → logprob: -5.169140815734863
    6. ' ,' → logprob: -5.419140815734863
    7. ',x' → logprob: -5.544140815734863
    8. ' -' → logprob: -5.669140815734863
    9. ' >=' → logprob: -5.669140815734863
    10. ':' → logprob: -5.794140815734863

Token 53: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015328957699239254
    2. ',x' → logprob: -5.515328884124756
    3. ')' → logprob: -5.640328884124756
    4. '>=' → logprob: -6.265328884124756
    5. ' ,' → logprob: -6.390328884124756
    6. ' >=' → logprob: -7.140328884124756
    7. ' if' → logprob: -7.765328884124756
    8. '>' → logprob: -7.890328884124756
    9. '=lambda' → logprob: -8.015329360961914
    10. '=' → logprob: -8.265329360961914

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005857991054654121
    2. ' x' → logprob: -7.500586032867432
    3. ''x' → logprob: -11.000585556030273
    4. 'max' → logprob: -11.625585556030273
    5. '0' → logprob: -12.750585556030273
    6. ' ' → logprob: -13.625585556030273
    7. '1' → logprob: -14.125585556030273
    8. '2' → logprob: -15.125585556030273
    9. '   ' → logprob: -15.125585556030273
    10. 'b' → logprob: -15.500585556030273

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ',' → logprob: -14.875000953674316
    3. '1' → logprob: -15.125000953674316
    4. 'and' → logprob: -15.625000953674316
    5. 'x' → logprob: -16.500001907348633
    6. '.' → logprob: -16.875001907348633
    7. '-' → logprob: -16.875001907348633
    8. '2' → logprob: -17.125001907348633
    9. ' [' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.312501907348633

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017147827020380646
    2. ' ' → logprob: -9.000171661376953
    3. '0' → logprob: -11.187671661376953
    4. '[' → logprob: -11.937671661376953
    5. '   ' → logprob: -12.125171661376953
    6. '2' → logprob: -12.687671661376953
    7. ']' → logprob: -12.812671661376953
    8. ',' → logprob: -12.875171661376953
    9. '  ' → logprob: -13.625171661376953
    10. '-' → logprob: -13.750171661376953

Token 57: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008068271912634373
    2. ' ,' → logprob: -5.633068084716797
    3. ' and' → logprob: -5.758068084716797
    4. '),' → logprob: -7.008068084716797
    5. ')' → logprob: -8.508068084716797
    6. 'and' → logprob: -9.633068084716797
    7. ' ' → logprob: -10.383068084716797
    8. ',x' → logprob: -11.258068084716797
    9. ' ),' → logprob: -11.383068084716797
    10. '==' → logprob: -11.758068084716797

Token 58: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.576409637928009
    2. ' zip' → logprob: -0.826409637928009
    3. '(zip' → logprob: -7.701409816741943
    4. 'enumer' → logprob: -11.701409339904785
    5. '.zip' → logprob: -12.826409339904785
    6. '   ' → logprob: -12.951409339904785
    7. ' enumerate' → logprob: -13.826409339904785
    8. ')' → logprob: -14.076409339904785
    9. ' ' → logprob: -14.076409339904785
    10. 'list' → logprob: -14.201409339904785

Token 59: '(result' (ID: 8111)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.3142971098423004
    2. '(result' → logprob: -1.314297080039978
    3. '(' → logprob: -6.939297199249268
    4. '(h' → logprob: -10.43929672241211
    5. 'result' → logprob: -11.56429672241211
    6. '(ct' → logprob: -12.06429672241211
    7. '((' → logprob: -12.43929672241211
    8. '(results' → logprob: -12.56429672241211
    9. '(r' → logprob: -13.06429672241211
    10. '(n' → logprob: -13.43929672241211

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02748246304690838
    2. '(H' → logprob: -4.152482509613037
    3. ',H' → logprob: -4.652482509613037
    4. '(' → logprob: -6.777482509613037
    5. ' ,' → logprob: -7.652482509613037
    6. 'H' → logprob: -9.902482032775879
    7. 'result' → logprob: -10.777482032775879
    8. ',(' → logprob: -10.777482032775879
    9. ',result' → logprob: -10.777482032775879
    10. '(n' → logprob: -10.902482032775879

Token 61: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00015335931675508618
    2. ' H' → logprob: -8.875153541564941
    3. '   ' → logprob: -11.375153541564941
    4. ' ' → logprob: -14.250153541564941
    5. '	H' → logprob: -15.250153541564941
    6. '  ' → logprob: -15.375153541564941
    7. ',H' → logprob: -15.750153541564941
    8. '[' → logprob: -15.875153541564941
    9. '(H' → logprob: -16.000152587890625
    10. 'result' → logprob: -16.125152587890625

Token 62: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0036887938622385263
    2. ')' → logprob: -5.628688812255859
    3. '))' → logprob: -9.62868881225586
    4. ')))
' → logprob: -11.50368881225586
    5. '))))' → logprob: -11.75368881225586
    6. ' ' → logprob: -13.37868881225586
    7. ')));' → logprob: -13.37868881225586
    8. ')))

' → logprob: -14.25368881225586
    9. '')))' → logprob: -14.87868881225586
    10. ')))
' → logprob: -15.50368881225586

Token 63: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3692047595977783
    2. '
' → logprob: -1.3692047595977783
    3. 'print' → logprob: -3.7442047595977783
    4. '\n' → logprob: -3.9942047595977783
    5. '<|end|>' → logprob: -4.994204521179199
    6. '+' → logprob: -6.119204521179199
    7. 'n' → logprob: -6.744204521179199
    8. 'ct' → logprob: -6.994204521179199
    9. '#' → logprob: -8.8692045211792
    10. '```' → logprob: -8.9942045211792

Token 64: '(ct' (ID: 89790)
  Prédit: '(ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ct' → logprob: -0.20142152905464172
    2. '(' → logprob: -1.7014214992523193
    3. '(result' → logprob: -13.201421737670898
    4. '(`' → logprob: -13.451421737670898
    5. '(len' → logprob: -13.826421737670898
    6. '('' → logprob: -14.326421737670898
    7. '()' → logprob: -14.701421737670898
    8. '(c' → logprob: -14.701421737670898
    9. '(sum' → logprob: -14.701421737670898
    10. ' (' → logprob: -14.826421737670898

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519364058971405
    2. '))' → logprob: -1.501936435699463
    3. ' )' → logprob: -12.251935958862305
    4. ')))' → logprob: -13.626935958862305
    5. ' ))' → logprob: -15.251935958862305
    6. ')
' → logprob: -15.501935958862305
    7. ')`' → logprob: -15.501935958862305
    8. '))
' → logprob: -15.751935958862305
    9. ')}' → logprob: -15.751935958862305
    10. '})' → logprob: -16.001935958862305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 63
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 34.92%
Précision adaptée (1ère position): 34.92%
Précision (top 10): 69.84%
================================================================================
