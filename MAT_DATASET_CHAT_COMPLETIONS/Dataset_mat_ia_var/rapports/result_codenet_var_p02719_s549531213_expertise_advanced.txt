================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import fmod

N, K = map(int, input().split())
b = N % K
print(min(b, (K - b) % K))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' f' (ID: 285)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.6560465693473816
    2. ' sqrt' → logprob: -0.7810465693473816
    3. 'pow' → logprob: -5.031046390533447
    4. 'sin' → logprob: -5.156046390533447
    5. ' pi' → logprob: -5.281046390533447
    6. 'pi' → logprob: -6.156046390533447
    7. ' sin' → logprob: -6.406046390533447
    8. ' pow' → logprob: -7.906046390533447
    9. 'cos' → logprob: -8.156046867370605
    10. 'ceil' → logprob: -8.156046867370605

Token 4: 'mod' (ID: 4847)
  Prédit: 'loor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.2261318862438202
    2. 'sqrt' → logprob: -3.1011319160461426
    3. 'l' → logprob: -3.4761319160461426
    4. 'actor' → logprob: -3.7261319160461426
    5. 'abs' → logprob: -3.9761319160461426
    6. 's' → logprob: -4.351131916046143
    7. 'floor' → logprob: -4.601131916046143
    8. 'a' → logprob: -4.976131916046143
    9. 'r' → logprob: -5.101131916046143
    10. '```' → logprob: -5.101131916046143

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025311444187536836
    2. '\(' → logprob: -8.875252723693848
    3. '(
' → logprob: -9.250252723693848
    4. ''' → logprob: -12.625252723693848
    5. ' (' → logprob: -12.875252723693848
    6. '"' → logprob: -13.500252723693848
    7. ',' → logprob: -13.625252723693848
    8. '\n' → logprob: -13.750252723693848
    9. '(

' → logprob: -13.750252723693848
    10. 'a' → logprob: -14.125252723693848

Token 6: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004027818329632282
    2. '(
' → logprob: -6.504027843475342
    3. '\(' → logprob: -6.754027843475342
    4. 'a' → logprob: -7.754027843475342
    5. 'def' → logprob: -8.379027366638184
    6. 'x' → logprob: -8.754027366638184
    7. ',' → logprob: -9.504027366638184
    8. 'f' → logprob: -9.629027366638184
    9. '_' → logprob: -9.879027366638184
    10. 'd' → logprob: -10.254027366638184

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2053332328796387
    2. '(' → logprob: -1.3303332328796387
    3. '_' → logprob: -1.4553332328796387
    4. ',' → logprob: -2.3303332328796387
    5. ' ' → logprob: -3.5803332328796387
    6. 'umber' → logprob: -3.9553332328796387
    7. '[' → logprob: -4.205333232879639
    8. ')' → logprob: -4.205333232879639
    9. 'u' → logprob: -5.205333232879639
    10. 'a' → logprob: -5.205333232879639

Token 8: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.087232232093811
    2. 'x' → logprob: -1.837232232093811
    3. ' K' → logprob: -1.962232232093811
    4. 'M' → logprob: -1.962232232093811
    5. 'K' → logprob: -2.3372321128845215
    6. ' x' → logprob: -2.4622321128845215
    7. 'k' → logprob: -4.8372321128845215
    8. ' k' → logprob: -5.2122321128845215
    9. ' T' → logprob: -5.4622321128845215
    10. 'a' → logprob: -5.5872321128845215

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47448769211769104
    2. ' =' → logprob: -0.9744876623153687
    3. ',' → logprob: -7.849487781524658
    4. ' ' → logprob: -12.3494873046875
    5. '=input' → logprob: -12.4744873046875
    6. '<|end|>' → logprob: -12.4744873046875
    7. ' ,' → logprob: -12.7244873046875
    8. ')' → logprob: -12.9744873046875
    9. '=int' → logprob: -14.3494873046875
    10. '=

' → logprob: -14.7244873046875

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09031148254871368
    2. 'map' → logprob: -2.4653115272521973
    3. ' ' → logprob: -7.590311527252197
    4. '0' → logprob: -8.340311050415039
    5. ' input' → logprob: -8.590311050415039
    6. 'int' → logprob: -8.840311050415039
    7. ' int' → logprob: -8.840311050415039
    8. 'input' → logprob: -9.590311050415039
    9. ' list' → logprob: -9.715311050415039
    10. '10' → logprob: -11.465311050415039

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.48071685433387756
    2. '(' → logprob: -0.9807168245315552
    3. '(lambda' → logprob: -5.480716705322266
    4. '(str' → logprob: -6.855716705322266
    5. '(input' → logprob: -7.855716705322266
    6. '<|end|>' → logprob: -7.855716705322266
    7. 'int' → logprob: -8.355716705322266
    8. '()' → logprob: -9.605716705322266
    9. '<int' → logprob: -9.855716705322266
    10. '(eval' → logprob: -10.105716705322266

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.764743983745575
    2. ')' → logprob: -1.2647440433502197
    3. '(' → logprob: -1.3897440433502197
    4. 'input' → logprob: -6.514743804931641
    5. '(int' → logprob: -8.38974380493164
    6. ',input' → logprob: -8.76474380493164
    7. ',' → logprob: -8.88974380493164
    8. '(user' → logprob: -9.51474380493164
    9. '(f' → logprob: -9.76474380493164
    10. '(
' → logprob: -9.76474380493164

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018152983859181404
    2. ' input' → logprob: -4.018153190612793
    3. ')' → logprob: -12.893153190612793
    4. '(input' → logprob: -14.893153190612793
    5. ',input' → logprob: -15.768153190612793
    6. '=input' → logprob: -17.268152236938477
    7. ' )' → logprob: -17.893152236938477
    8. ' ' → logprob: -18.393152236938477
    9. 'str' → logprob: -18.643152236938477
    10. '	input' → logprob: -18.643152236938477

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.32077035307884216
    2. '()' → logprob: -1.4457703828811646
    3. ')' → logprob: -3.570770263671875
    4. '().' → logprob: -5.445770263671875
    5. '(' → logprob: -6.070770263671875
    6. '());' → logprob: -6.695770263671875
    7. '('' → logprob: -7.445770263671875
    8. '()))' → logprob: -7.570770263671875
    9. '();)' → logprob: -8.070770263671875
    10. '()));' → logprob: -8.695770263671875

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004086828324943781
    2. 'strip' → logprob: -5.504086971282959
    3. 'rstrip' → logprob: -12.1290864944458
    4. ' split' → logprob: -13.2540864944458
    5. ')' → logprob: -13.7540864944458
    6. 'read' → logprob: -16.629087448120117
    7. '(split' → logprob: -17.254087448120117
    8. ' strip' → logprob: -17.629087448120117
    9. 'replace' → logprob: -17.754087448120117
    10. 'spl' → logprob: -18.504087448120117

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04301152005791664
    2. '))' → logprob: -3.168011426925659
    3. ')))' → logprob: -12.043011665344238
    4. '),' → logprob: -13.793011665344238
    5. '()' → logprob: -13.793011665344238
    6. ' )' → logprob: -14.168011665344238
    7. '())' → logprob: -14.293011665344238
    8. '`)' → logprob: -14.793011665344238
    9. '(' → logprob: -14.918011665344238
    10. ')")' → logprob: -15.168011665344238

Token 17: 'b' (ID: 65)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4366353452205658
    2. 'r' → logprob: -2.6866352558135986
    3. 'x' → logprob: -3.0616352558135986
    4. 'if' → logprob: -3.0616352558135986
    5. 'res' → logprob: -3.1866352558135986
    6. 'a' → logprob: -3.4366352558135986
    7. 'for' → logprob: -3.5616352558135986
    8. 'f' → logprob: -4.186635494232178
    9. '```' → logprob: -4.436635494232178
    10. 'mod' → logprob: -5.061635494232178

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05755578726530075
    2. '=' → logprob: -3.182555675506592
    3. 'ase' → logprob: -5.432555675506592
    4. 'r' → logprob: -6.307555675506592
    5. 'uckets' → logprob: -6.307555675506592
    6. 'y' → logprob: -7.432555675506592
    7. '_i' → logprob: -7.682555675506592
    8. '_' → logprob: -7.807555675506592
    9. 'alance' → logprob: -7.932555675506592
    10. '=[]' → logprob: -8.43255615234375

Token 19: ' N' (ID: 478)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7333964705467224
    2. '[' → logprob: -2.233396530151367
    3. 'K' → logprob: -2.358396530151367
    4. ' []' → logprob: -2.483396530151367
    5. ' [' → logprob: -2.733396530151367
    6. 'f' → logprob: -3.358396530151367
    7. '[K' → logprob: -3.483396530151367
    8. 'list' → logprob: -3.858396530151367
    9. ' K' → logprob: -4.233396530151367
    10. '0' → logprob: -4.483396530151367

Token 20: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7218179106712341
    2. ' %' → logprob: -0.7218179106712341
    3. ' ' → logprob: -4.471817970275879
    4. '-' → logprob: -4.596817970275879
    5. '_' → logprob: -6.096817970275879
    6. '+' → logprob: -6.846817970275879
    7. '*' → logprob: -7.346817970275879
    8. 'for' → logprob: -7.596817970275879
    9. ')' → logprob: -7.971817970275879
    10. ' -' → logprob: -7.971817970275879

Token 21: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005950013641268015
    2. ' K' → logprob: -5.130949974060059
    3. ' ' → logprob: -11.255949974060059
    4. '1' → logprob: -12.755949974060059
    5. 'k' → logprob: -13.380949974060059
    6. '10' → logprob: -13.505949974060059
    7. '100' → logprob: -14.130949974060059
    8. '  ' → logprob: -15.630949974060059
    9. '2' → logprob: -15.630949974060059
    10. '   ' → logprob: -15.880949974060059

Token 22: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4353300333023071
    2. '\n' → logprob: -1.4353300333023071
    3. '<|end|>' → logprob: -2.3103299140930176
    4. '%' → logprob: -2.8103299140930176
    5. ' ' → logprob: -2.9353299140930176
    6. 'print' → logprob: -3.0603299140930176
    7. '
' → logprob: -3.0603299140930176
    8. '\' → logprob: -3.0603299140930176
    9. '```' → logprob: -3.0603299140930176
    10. '#' → logprob: -3.1853299140930176

Token 23: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3670975863933563
    2. 'print' → logprob: -1.7420976161956787
    3. '*' → logprob: -3.2420976161956787
    4. ' if' → logprob: -3.3670976161956787
    5. 'b' → logprob: -3.8670976161956787
    6. '\n' → logprob: -4.7420973777771
    7. '#' → logprob: -5.3670973777771
    8. '\' → logprob: -5.4920973777771
    9. '+' → logprob: -5.7420973777771
    10. '
' → logprob: -5.8670973777771

Token 24: '(min' (ID: 26035)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.31426802277565
    2. '(' → logprob: -1.3142679929733276
    3. '(f' → logprob: -7.064268112182617
    4. '((' → logprob: -9.814268112182617
    5. '(abs' → logprob: -10.189268112182617
    6. '('' → logprob: -10.564268112182617
    7. '(a' → logprob: -11.314268112182617
    8. '(B' → logprob: -12.439268112182617
    9. '(`' → logprob: -12.814268112182617
    10. '()' → logprob: -12.939268112182617

Token 25: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3133504390716553
    2. '(' → logprob: -1.3133504390716553
    3. 'b' → logprob: -10.313350677490234
    4. '(B' → logprob: -11.563350677490234
    5. '((' → logprob: -11.688350677490234
    6. '(K' → logprob: -11.813350677490234
    7. '(n' → logprob: -11.938350677490234
    8. ' (' → logprob: -12.313350677490234
    9. ',b' → logprob: -12.813350677490234
    10. '(f' → logprob: -12.813350677490234

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009773205034434795
    2. ' ,' → logprob: -4.634773254394531
    3. ',b' → logprob: -12.134773254394531
    4. ')' → logprob: -12.259773254394531
    5. ',K' → logprob: -12.759773254394531
    6. ',)' → logprob: -13.259773254394531
    7. ',k' → logprob: -14.134773254394531
    8. ' ' → logprob: -15.134773254394531
    9. '),' → logprob: -15.259773254394531
    10. ' )' → logprob: -15.384773254394531

Token 27: ' (' (ID: 350)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.1882498413324356
    2. 'K' → logprob: -1.8132498264312744
    3. 'abs' → logprob: -5.8132500648498535
    4. ' ' → logprob: -6.3132500648498535
    5. ' abs' → logprob: -7.1882500648498535
    6. 'f' → logprob: -7.3132500648498535
    7. ' f' → logprob: -7.4382500648498535
    8. '-K' → logprob: -7.5632500648498535
    9. ' -' → logprob: -7.9382500648498535
    10. ')' → logprob: -8.688249588012695

Token 28: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05734700337052345
    2. ' K' → logprob: -2.932347059249878
    3. '-' → logprob: -7.432346820831299
    4. ')' → logprob: -7.432346820831299
    5. ' -' → logprob: -7.432346820831299
    6. '-K' → logprob: -7.932346820831299
    7. ' ' → logprob: -8.932347297668457
    8. 'abs' → logprob: -9.557347297668457
    9. 'f' → logprob: -10.557347297668457
    10. 'k' → logprob: -10.807347297668457

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08194950968027115
    2. '-' → logprob: -2.581949472427368
    3. '-b' → logprob: -5.831949710845947
    4. ')' → logprob: -9.081949234008789
    5. ' ' → logprob: -12.706949234008789
    6. 'b' → logprob: -12.831949234008789
    7. ' )' → logprob: -13.081949234008789
    8. '-)' → logprob: -14.581949234008789
    9. ' ' → logprob: -15.331949234008789
    10. ')-' → logprob: -15.956949234008789

Token 30: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019311357755213976
    2. ' b' → logprob: -6.251931190490723
    3. ')b' → logprob: -13.251931190490723
    4. ')' → logprob: -14.126931190490723
    5. '<|end|>' → logprob: -18.001930236816406
    6. '	b' → logprob: -18.376930236816406
    7. ' ' → logprob: -18.501930236816406
    8. ' )' → logprob: -18.626930236816406
    9. 'f' → logprob: -18.876930236816406
    10. ' б' → logprob: -20.126930236816406

Token 31: ')' (ID: 8)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.19679345190525055
    2. ')' → logprob: -2.196793556213379
    3. '))' → logprob: -2.696793556213379
    4. ' ' → logprob: -10.571793556213379
    5. '))))' → logprob: -11.946793556213379
    6. ' )' → logprob: -12.071793556213379
    7. ')%' → logprob: -12.196793556213379
    8. ' ))' → logprob: -12.321793556213379
    9. '),' → logprob: -12.821793556213379
    10. ')));' → logprob: -12.946793556213379

Token 32: ' %' (ID: 1851)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011069637723267078
    2. ')' → logprob: -4.5110697746276855
    3. ')))' → logprob: -11.011069297790527
    4. '))
' → logprob: -12.636069297790527
    5. ' ))' → logprob: -13.511069297790527
    6. ')
' → logprob: -15.136069297790527
    7. ' )' → logprob: -16.261070251464844
    8. '()))' → logprob: -16.761070251464844
    9. ''))' → logprob: -17.011070251464844
    10. '),' → logprob: -17.011070251464844

Token 33: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4741116166114807
    2. ' K' → logprob: -0.9741116166114807
    3. ')' → logprob: -10.349111557006836
    4. ' ' → logprob: -13.974111557006836
    5. '	K' → logprob: -13.974111557006836
    6. '>K' → logprob: -14.474111557006836
    7. ' )' → logprob: -16.349111557006836
    8. '  ' → logprob: -16.974111557006836
    9. ',K' → logprob: -17.099111557006836
    10. '(K' → logprob: -17.349111557006836

Token 34: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975141443312168
    2. '))' → logprob: -3.5297513008117676
    3. ')))' → logprob: -15.279751777648926
    4. '')' → logprob: -15.779751777648926
    5. ' )' → logprob: -15.779751777648926
    6. '`)' → logprob: -16.02975082397461
    7. ')
' → logprob: -16.15475082397461
    8. ''))' → logprob: -17.65475082397461
    9. ')`' → logprob: -17.65475082397461
    10. '）' → logprob: -17.77975082397461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.00%
Précision (top 10): 68.75%
================================================================================
