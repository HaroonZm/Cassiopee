================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from itertools import combinations

n, d = map(int, input().split())

def is_distance_int(y, z):
    ans = 0
    for i, j in zip(y, z):
        ans += (i - j) ** 2
    for k in range(1, ans + 1):
        if k ** 2 == ans:
            return 1
    return 0

x = []
for i in range(n):
    x.append(list(map(int, input().split())))

c = [i for i in range(n)]
c = combinations(c, 2)

ans = 0
for i, j in c:
    ans += is_distance_int(x[i], x[j])

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027101305313408375
    2. '<|end|>' → logprob: -6.627710342407227
    3. '```' → logprob: -7.877710342407227
    4. '\n' → logprob: -8.252710342407227
    5. '\' → logprob: -8.252710342407227
    6. 'import' → logprob: -8.752710342407227
    7. '<|end|>' → logprob: -9.752710342407227
    8. '.e' → logprob: -10.502710342407227
    9. '.pi' → logprob: -10.627710342407227
    10. '
' → logprob: -10.877710342407227

Token 4: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7107323408126831
    2. ' os' → logprob: -1.335732340812683
    3. ' collections' → logprob: -2.3357324600219727
    4. ' sys' → logprob: -3.4607324600219727
    5. ' statistics' → logprob: -3.7107324600219727
    6. ' random' → logprob: -4.210732460021973
    7. ' ' → logprob: -4.335732460021973
    8. ' numpy' → logprob: -4.335732460021973
    9. 'cmath' → logprob: -4.460732460021973
    10. 'math' → logprob: -4.585732460021973

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6998271346092224
    2. ' import' → logprob: -1.3248271942138672
    3. '.' → logprob: -1.4498271942138672
    4. '.import' → logprob: -6.574827194213867
    5. ' .' → logprob: -6.699827194213867
    6. '	import' → logprob: -9.824827194213867
    7. '_import' → logprob: -9.949827194213867
    8. '```' → logprob: -10.824827194213867
    9. ' itertools' → logprob: -11.074827194213867
    10. '.experimental' → logprob: -11.324827194213867

Token 6: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3041693866252899
    2. 'per' → logprob: -2.4291694164276123
    3. 'count' → logprob: -2.4291694164276123
    4. 'product' → logprob: -2.9291694164276123
    5. 'cycle' → logprob: -4.054169178009033
    6. ' permutations' → logprob: -4.929169178009033
    7. 'group' → logprob: -5.804169178009033
    8. ' combinations' → logprob: -6.804169178009033
    9. 'import' → logprob: -7.179169178009033
    10. 'chain' → logprob: -7.179169178009033

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00610333913937211
    2. '(
' → logprob: -5.631103515625
    3. 'def' → logprob: -7.256103515625
    4. 'import' → logprob: -8.006103515625
    5. '```' → logprob: -8.256103515625
    6. '\n' → logprob: -8.381103515625
    7. '\' → logprob: -8.506103515625
    8. '\(' → logprob: -8.756103515625
    9. '.' → logprob: -9.006103515625
    10. '(

' → logprob: -9.006103515625

Token 8: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16117365658283234
    2. 'def' → logprob: -2.5361735820770264
    3. '(
' → logprob: -3.1611735820770264
    4. '\' → logprob: -4.9111738204956055
    5. 'import' → logprob: -5.2861738204956055
    6. '.' → logprob: -5.5361738204956055
    7. '(

' → logprob: -5.5361738204956055
    8. '```' → logprob: -5.6611738204956055
    9. '\(' → logprob: -7.4111738204956055
    10. '`' → logprob: -8.036173820495605

Token 9: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5488462448120117
    2. ' ' → logprob: -1.5488462448120117
    3. '=' → logprob: -1.7988462448120117
    4. '.' → logprob: -3.6738462448120117
    5. ',' → logprob: -4.798846244812012
    6. ')' → logprob: -5.423846244812012
    7. '_' → logprob: -5.798846244812012
    8. '  ' → logprob: -7.048846244812012
    9. ' )' → logprob: -7.548846244812012
    10. ' ,' → logprob: -7.548846244812012

Token 10: ' d' (ID: 272)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.34348389506340027
    2. 'k' → logprob: -1.3434839248657227
    3. ' ' → logprob: -4.343483924865723
    4. 'm' → logprob: -4.843483924865723
    5. ' m' → logprob: -4.968483924865723
    6. ' r' → logprob: -7.218483924865723
    7. '=' → logprob: -7.843483924865723
    8. 'r' → logprob: -7.968483924865723
    9. ' =' → logprob: -8.468483924865723
    10. '=k' → logprob: -10.093483924865723

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700916826725006
    2. '=' → logprob: -2.127009153366089
    3. ',' → logprob: -10.002009391784668
    4. ' ' → logprob: -10.502009391784668
    5. ')' → logprob: -12.752009391784668
    6. ' ,' → logprob: -13.377009391784668
    7. '_' → logprob: -13.877009391784668
    8. ' =
' → logprob: -14.252009391784668
    9. ' =
' → logprob: -15.002009391784668
    10. 's' → logprob: -15.627009391784668

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12251269072294235
    2. 'map' → logprob: -2.4975125789642334
    3. ' ' → logprob: -3.6225125789642334
    4. ' int' → logprob: -5.8725128173828125
    5. '5' → logprob: -6.9975128173828125
    6. '10' → logprob: -6.9975128173828125
    7. 'int' → logprob: -7.2475128173828125
    8. ' input' → logprob: -7.9975128173828125
    9. '0' → logprob: -8.372512817382812
    10. 'input' → logprob: -8.622512817382812

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1346079409122467
    2. '(int' → logprob: -2.134608030319214
    3. '(str' → logprob: -5.884607791900635
    4. '(lambda' → logprob: -6.134607791900635
    5. '<|end|>' → logprob: -6.634607791900635
    6. 'int' → logprob: -7.634607791900635
    7. '()' → logprob: -9.134608268737793
    8. '(input' → logprob: -9.509608268737793
    9. '[int' → logprob: -9.759608268737793
    10. ')' → logprob: -10.009608268737793

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.698006808757782
    2. '(input' → logprob: -1.5730068683624268
    3. ')' → logprob: -1.9480068683624268
    4. 'input' → logprob: -2.8230068683624268
    5. '(' → logprob: -2.9480068683624268
    6. ',input' → logprob: -3.3230068683624268
    7. '=input' → logprob: -6.698006629943848
    8. ' input' → logprob: -6.948006629943848
    9. '),' → logprob: -7.823006629943848
    10. ' ,' → logprob: -7.948006629943848

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889584451913834
    2. ' input' → logprob: -2.5788958072662354
    3. ')' → logprob: -12.578895568847656
    4. '(input' → logprob: -13.328895568847656
    5. '=input' → logprob: -14.953895568847656
    6. ',input' → logprob: -14.953895568847656
    7. ' ' → logprob: -15.828895568847656
    8. ' )' → logprob: -17.078895568847656
    9. '	input' → logprob: -17.328895568847656
    10. '<input' → logprob: -17.953895568847656

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.15001057088375092
    2. '())' → logprob: -2.525010585784912
    3. '()' → logprob: -2.900010585784912
    4. ')' → logprob: -5.900010585784912
    5. '(' → logprob: -7.150010585784912
    6. '());' → logprob: -8.525010108947754
    7. '(),' → logprob: -8.525010108947754
    8. '()))' → logprob: -10.025010108947754
    9. '('' → logprob: -10.150010108947754
    10. '()>' → logprob: -10.525010108947754

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020854694594163448
    2. 'strip' → logprob: -8.500208854675293
    3. 'rstrip' → logprob: -12.500208854675293
    4. ' split' → logprob: -14.250208854675293
    5. 'read' → logprob: -14.875208854675293
    6. '(split' → logprob: -16.000207901000977
    7. 'spl' → logprob: -16.875207901000977
    8. ')' → logprob: -17.125207901000977
    9. 'startswith' → logprob: -19.000207901000977
    10. '_split' → logprob: -19.375207901000977

Token 18: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07082639634609222
    2. '))' → logprob: -2.695826292037964
    3. '())' → logprob: -7.195826530456543
    4. '),' → logprob: -9.945826530456543
    5. '()' → logprob: -10.070826530456543
    6. '()))' → logprob: -11.070826530456543
    7. ')))' → logprob: -11.695826530456543
    8. ')`' → logprob: -12.570826530456543
    9. '')' → logprob: -12.820826530456543
    10. '(' → logprob: -12.945826530456543

Token 19: 'def' (ID: 1314)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006346207577735186
    2. ' points' → logprob: -5.756346225738525
    3. 'vectors' → logprob: -6.881346225738525
    4. 'coordinates' → logprob: -7.381346225738525
    5. 'coords' → logprob: -7.631346225738525
    6. 'positions' → logprob: -8.756345748901367
    7. 'stars' → logprob: -8.881345748901367
    8. 'numbers' → logprob: -9.381345748901367
    9. 'pts' → logprob: -9.506345748901367
    10. 's' → logprob: -9.506345748901367

Token 20: ' is' (ID: 382)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.0459213256835938
    2. ' calculate' → logprob: -1.4209213256835938
    3. ' distances' → logprob: -2.2959213256835938
    4. ' count' → logprob: -2.5459213256835938
    5. ' combinations' → logprob: -2.6709213256835938
    6. ' find' → logprob: -2.7959213256835938
    7. 'distance' → logprob: -3.9209213256835938
    8. ' get' → logprob: -4.420921325683594
    9. ' dist' → logprob: -4.920921325683594
    10. ' is' → logprob: -4.920921325683594

Token 21: '_distance' (ID: 45537)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.8701890110969543
    2. '_possible' → logprob: -2.2451889514923096
    3. '_in' → logprob: -2.6201889514923096
    4. '_good' → logprob: -2.8701889514923096
    5. '_' → logprob: -2.9951889514923096
    6. '_close' → logprob: -3.1201889514923096
    7. '_prime' → logprob: -3.3701889514923096
    8. '_right' → logprob: -3.3701889514923096
    9. '_with' → logprob: -3.8701889514923096
    10. '_d' → logprob: -4.120189189910889

Token 22: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7976694703102112
    2. '_between' → logprob: -1.4226694107055664
    3. '_valid' → logprob: -2.4226694107055664
    4. '_in' → logprob: -3.5476694107055664
    5. '_less' → logprob: -3.5476694107055664
    6. '_s' → logprob: -3.6726694107055664
    7. '_equal' → logprob: -3.7976694107055664
    8. '_safe' → logprob: -4.047669410705566
    9. '_with' → logprob: -4.297669410705566
    10. '_good' → logprob: -4.297669410705566

Token 23: '(y' (ID: 14684)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.8939956426620483
    2. '(' → logprob: -1.5189956426620483
    3. 'eger' → logprob: -2.268995761871338
    4. 'e' → logprob: -2.268995761871338
    5. 'er' → logprob: -3.268995761871338
    6. 'ent' → logprob: -3.268995761871338
    7. 'ernal' → logprob: -4.018995761871338
    8. 'eg' → logprob: -4.393995761871338
    9. '(er' → logprob: -4.643995761871338
    10. '(ent' → logprob: -5.018995761871338

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08975794166326523
    2. '1' → logprob: -3.4647579193115234
    3. '):' → logprob: -3.4647579193115234
    4. 'u' → logprob: -5.214757919311523
    5. ',y' → logprob: -5.589757919311523
    6. ',u' → logprob: -5.589757919311523
    7. ' -' → logprob: -5.714757919311523
    8. '0' → logprob: -6.964757919311523
    9. ' ,' → logprob: -6.964757919311523
    10. '2' → logprob: -7.089757919311523

Token 25: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06992075592279434
    2. ' x' → logprob: -2.819920778274536
    3. 'z' → logprob: -5.069920539855957
    4. ' z' → logprob: -7.194920539855957
    5. 'y' → logprob: -7.444920539855957
    6. ' y' → logprob: -8.569920539855957
    7. '	x' → logprob: -10.757420539855957
    8. ' ' → logprob: -11.069920539855957
    9. '1' → logprob: -11.382420539855957
    10. ')' → logprob: -11.507420539855957

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026826057583093643
    2. ',' → logprob: -3.6518261432647705
    3. '):
' → logprob: -8.401825904846191
    4. ')' → logprob: -8.401825904846191
    5. ')):' → logprob: -10.901825904846191
    6. ' ):' → logprob: -11.276825904846191
    7. '1' → logprob: -11.651825904846191
    8. '):
' → logprob: -12.151825904846191
    9. ':' → logprob: -12.651825904846191
    10. 'u' → logprob: -12.776825904846191

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002957019954919815
    2. ':' → logprob: -6.627956867218018
    3. ' return' → logprob: -7.627956867218018
    4. '    ' → logprob: -7.752956867218018
    5. '       ' → logprob: -8.752957344055176
    6. '):' → logprob: -9.252957344055176
    7. ' ' → logprob: -9.752957344055176
    8. '  ' → logprob: -9.877957344055176
    9. '<|end|>' → logprob: -9.877957344055176
    10. 'return' → logprob: -9.877957344055176

Token 28: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15850083529949188
    2. ' return' → logprob: -2.533500909805298
    3. 'return' → logprob: -2.783500909805298
    4. ' math' → logprob: -6.158500671386719
    5. 'math' → logprob: -6.908500671386719
    6. '       ' → logprob: -7.533500671386719
    7. 'import' → logprob: -8.158500671386719
    8. 'dist' → logprob: -8.533500671386719
    9. 'dx' → logprob: -8.533500671386719
    10. ' (' → logprob: -8.908500671386719

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07018695026636124
    2. '=' → logprob: -2.6951868534088135
    3. ' ' → logprob: -8.695186614990234
    4. ' +=' → logprob: -10.695186614990234
    5. '   ' → logprob: -11.070186614990234
    6. '_' → logprob: -11.445186614990234
    7. ')' → logprob: -12.320186614990234
    8. ',' → logprob: -12.945186614990234
    9. ' |=' → logprob: -13.320186614990234
    10. '  ' → logprob: -13.445186614990234

Token 30: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9073269367218018
    2. 'math' → logprob: -1.0323269367218018
    3. '(math' → logprob: -2.4073269367218018
    4. ' (' → logprob: -2.5323269367218018
    5. ' int' → logprob: -3.5323269367218018
    6. 'int' → logprob: -3.7823269367218018
    7. '(int' → logprob: -5.407326698303223
    8. 'abs' → logprob: -5.907326698303223
    9. ' abs' → logprob: -6.157326698303223
    10. '   ' → logprob: -6.157326698303223

Token 31: '0' (ID: 15)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.1112212985754013
    2. '(math' → logprob: -2.7362213134765625
    3. 'int' → logprob: -3.7362213134765625
    4. 'round' → logprob: -5.3612213134765625
    5. 'abs' → logprob: -5.6112213134765625
    6. '(y' → logprob: -5.7362213134765625
    7. '(int' → logprob: -6.8612213134765625
    8. '(x' → logprob: -7.2362213134765625
    9. ' math' → logprob: -7.2362213134765625
    10. '(abs' → logprob: -7.3612213134765625

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42730289697647095
    2. 'for' → logprob: -1.5523028373718262
    3. '   ' → logprob: -2.052302837371826
    4. ' ' → logprob: -5.677302837371826
    5. ',' → logprob: -6.927302837371826
    6. '	for' → logprob: -7.052302837371826
    7. '
' → logprob: -7.927302837371826
    8. '    ' → logprob: -8.052303314208984
    9. '  ' → logprob: -8.052303314208984
    10. '0' → logprob: -8.802303314208984

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5852676033973694
    2. 'for' (adapté à ' for') → logprob: -0.8352676033973694
    3. '   ' → logprob: -4.835267543792725
    4. '	for' → logprob: -7.460267543792725
    5. ' y' → logprob: -8.710268020629883
    6. 'y' → logprob: -8.835268020629883
    7. ' ' → logprob: -8.835268020629883
    8. 'x' → logprob: -9.335268020629883
    9. '0' → logprob: -10.210268020629883
    10. 'import' → logprob: -10.460268020629883

Token 35: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2576295733451843
    2. ' i' → logprob: -2.382629632949829
    3. 'y' → logprob: -3.132629632949829
    4. ' y' → logprob: -3.632629632949829
    5. 'yi' → logprob: -3.632629632949829
    6. 'a' → logprob: -4.38262939453125
    7. ' yi' → logprob: -4.50762939453125
    8. '(y' → logprob: -5.75762939453125
    9. ' a' → logprob: -5.88262939453125
    10. 'x' → logprob: -6.13262939453125

Token 36: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05500268191099167
    2. 'in' → logprob: -2.9300026893615723
    3. 'range' → logprob: -9.680002212524414
    4. ',' → logprob: -10.555002212524414
    5. ' ' → logprob: -11.180002212524414
    6. 'n' → logprob: -12.180002212524414
    7. '  ' → logprob: -13.055002212524414
    8. 'd' → logprob: -13.305002212524414
    9. ' range' → logprob: -13.555002212524414
    10. '	in' → logprob: -13.680002212524414

Token 37: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5911498665809631
    2. ' j' → logprob: -1.4661498069763184
    3. '(j' → logprob: -2.0911498069763184
    4. ' (' → logprob: -3.3411498069763184
    5. 'v' → logprob: -4.591149806976318
    6. 'a' → logprob: -4.716149806976318
    7. 'x' → logprob: -5.341149806976318
    8. ' v' → logprob: -5.341149806976318
    9. '(x' → logprob: -5.466149806976318
    10. '(' → logprob: -5.841149806976318

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011091209948062897
    2. 'in' → logprob: -4.511091232299805
    3. '<|end|>' → logprob: -11.261091232299805
    4. ',' → logprob: -11.636091232299805
    5. ' ' → logprob: -12.011091232299805
    6. '<|end|>' → logprob: -12.136091232299805
    7. 'n' → logprob: -12.761091232299805
    8. ')' → logprob: -13.386091232299805
    9. 's' → logprob: -14.011091232299805
    10. '=' → logprob: -14.386091232299805

Token 39: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.0430377833545208
    2. 'zip' → logprob: -3.1680378913879395
    3. '(zip' → logprob: -10.793037414550781
    4. ' enumerate' → logprob: -12.293037414550781
    5. 'range' → logprob: -12.418037414550781
    6. 'enumer' → logprob: -12.668037414550781
    7. ' range' → logprob: -13.043037414550781
    8. 'com' → logprob: -13.293037414550781
    9. ' combinations' → logprob: -13.918037414550781
    10. '.zip' → logprob: -14.418037414550781

Token 40: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -8.327856630785391e-05
    2. '(' → logprob: -9.750082969665527
    3. 'y' → logprob: -10.750082969665527
    4. '(z' → logprob: -14.375082969665527
    5. ' (' → logprob: -14.500082969665527
    6. '(zip' → logprob: -14.500082969665527
    7. '<|end|>' → logprob: -14.625082969665527
    8. '(range' → logprob: -14.750082969665527
    9. '(x' → logprob: -15.000082969665527
    10. ')' → logprob: -15.500082969665527

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011570085771381855
    2. ',z' → logprob: -7.251156806945801
    3. ' ,' → logprob: -7.751156806945801
    4. ',j' → logprob: -11.7511568069458
    5. ',d' → logprob: -12.3761568069458
    6. ',y' → logprob: -13.2511568069458
    7. ',k' → logprob: -14.6261568069458
    8. ',v' → logprob: -15.1261568069458
    9. 'z' → logprob: -15.3761568069458
    10. ',n' → logprob: -15.5011568069458

Token 42: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.02324839122593403
    2. ' z' → logprob: -3.7732484340667725
    3. '	z' → logprob: -13.898248672485352
    4. ' ' → logprob: -14.648248672485352
    5. '   ' → logprob: -14.648248672485352
    6. ')' → logprob: -15.023248672485352
    7. '    ' → logprob: -15.148248672485352
    8. '  ' → logprob: -15.523248672485352
    9. 'j' → logprob: -16.14824867248535
    10. 'x' → logprob: -16.96074867248535

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10052333772182465
    2. '):
' → logprob: -2.3505232334136963
    3. '):
' → logprob: -9.100522994995117
    4. ':' → logprob: -9.225522994995117
    5. ')' → logprob: -9.975522994995117
    6. ' ):' → logprob: -10.975522994995117
    7. '-' → logprob: -11.975522994995117
    8. ',' → logprob: -11.975522994995117
    9. '   ' → logprob: -11.975522994995117
    10. '):

' → logprob: -12.225522994995117

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003674536943435669
    2. ':' → logprob: -7.003674507141113
    3. 'ans' → logprob: -7.753674507141113
    4. '   ' → logprob: -7.753674507141113
    5. ' ans' → logprob: -7.753674507141113
    6. ')' → logprob: -8.503674507141113
    7. '      ' → logprob: -8.628674507141113
    8. ' ' → logprob: -9.003674507141113
    9. '):
' → logprob: -9.128674507141113
    10. '**' → logprob: -9.253674507141113

Token 45: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.031522370874881744
    2. 'ans' (adapté à ' ans') → logprob: -3.531522274017334
    3. '	ans' → logprob: -6.906522274017334
    4. '   ' → logprob: -7.656522274017334
    5. '(ans' → logprob: -8.156522750854492
    6. '_ans' → logprob: -12.281522750854492
    7. '       ' → logprob: -13.281522750854492
    8. '           ' → logprob: -14.531522750854492
    9. ' ' → logprob: -14.656522750854492
    10. '  ' → logprob: -15.031522750854492

Token 46: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1102428287267685
    2. ' +=' → logprob: -2.3602428436279297
    3. '+=(' → logprob: -4.61024284362793
    4. ']+=' → logprob: -10.98524284362793
    5. '+' → logprob: -11.36024284362793
    6. '=' → logprob: -12.86024284362793
    7. '+='' → logprob: -12.98524284362793
    8. '+="' → logprob: -13.98524284362793
    9. '   ' → logprob: -14.11024284362793
    10. 'import' → logprob: -14.11024284362793

Token 47: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38958266377449036
    2. '(i' → logprob: -1.139582633972168
    3. '(j' → logprob: -6.264582633972168
    4. '(abs' → logprob: -7.639582633972168
    5. '(' → logprob: -8.889582633972168
    6. '(math' → logprob: -10.139582633972168
    7. '(x' → logprob: -10.639582633972168
    8. '(ii' → logprob: -10.639582633972168
    9. '(pow' → logprob: -10.639582633972168
    10. '   ' → logprob: -10.764582633972168

Token 48: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004299322608858347
    2. 'j' → logprob: -5.879299163818359
    3. ' i' → logprob: -6.754299163818359
    4. '(i' → logprob: -8.25429916381836
    5. ' (' → logprob: -10.75429916381836
    6. 'y' → logprob: -11.25429916381836
    7. '(' → logprob: -11.25429916381836
    8. ' j' → logprob: -12.00429916381836
    9. ' ' → logprob: -12.37929916381836
    10. 'abs' → logprob: -12.87929916381836

Token 49: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2616729438304901
    2. ' -' → logprob: -1.5116729736328125
    3. '-j' → logprob: -4.6366729736328125
    4. ' ' → logprob: -12.636672973632812
    5. '   ' → logprob: -13.636672973632812
    6. '  ' → logprob: -14.011672973632812
    7. ')' → logprob: -15.386672973632812
    8. '-js' → logprob: -15.636672973632812
    9. '−' → logprob: -15.886672973632812
    10. '	' → logprob: -15.886672973632812

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28118255734443665
    2. ' j' → logprob: -1.4061825275421143
    3. '<|end|>' → logprob: -11.281182289123535
    4. '	j' → logprob: -11.781182289123535
    5. '   ' → logprob: -12.406182289123535
    6. ' ' → logprob: -12.406182289123535
    7. '    ' → logprob: -13.781182289123535
    8. '<|end|>' → logprob: -13.906182289123535
    9. '  ' → logprob: -14.031182289123535
    10. '$j' → logprob: -14.906182289123535

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142795145511627
    2. ')**' → logprob: -1.701427936553955
    3. ' )' → logprob: -11.326428413391113
    4. '**' → logprob: -13.701428413391113
    5. '**)' → logprob: -14.576428413391113
    6. '）' → logprob: -14.951428413391113
    7. '   ' → logprob: -15.076428413391113
    8. '`)' → logprob: -16.701427459716797
    9. ')*' → logprob: -16.701427459716797
    10. ' ' → logprob: -16.826427459716797

Token 52: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44856247305870056
    2. '**' → logprob: -1.073562502861023
    3. ')' → logprob: -4.5735626220703125
    4. ')**' → logprob: -4.9485626220703125
    5. ' **' → logprob: -6.6985626220703125
    6. '*' → logprob: -7.4485626220703125
    7. ' ' → logprob: -8.448562622070312
    8. '```' → logprob: -8.948562622070312
    9. '**)' → logprob: -10.948562622070312
    10. '<|end|>' → logprob: -11.573562622070312

Token 53: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '۲' → logprob: -16.000261306762695
    4. '   ' → logprob: -16.625261306762695
    5. '２' → logprob: -17.125261306762695
    6. '٢' → logprob: -17.375261306762695
    7. '```' → logprob: -17.500261306762695
    8. '  ' → logprob: -17.750261306762695
    9. '²' → logprob: -17.812761306762695
    10. '२' → logprob: -17.875261306762695

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.500009536743164
    4. '۲' → logprob: -17.500009536743164
    5. '```' → logprob: -17.625009536743164
    6. '  ' → logprob: -18.062509536743164
    7. '२' → logprob: -18.500009536743164
    8. '２' → logprob: -18.750009536743164
    9. '٢' → logprob: -19.312509536743164
    10. '২' → logprob: -19.437509536743164

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02329835295677185
    2. '
' → logprob: -4.148298263549805
    3. ' ' → logprob: -5.648298263549805
    4. ' return' → logprob: -6.023298263549805
    5. 'return' → logprob: -8.023298263549805
    6. '  ' → logprob: -8.148298263549805
    7. '    
' → logprob: -8.523298263549805
    8. ',' → logprob: -9.023298263549805
    9. '  
' → logprob: -9.523298263549805
    10. '
' → logprob: -10.023298263549805

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15031197667121887
    2. ' ' → logprob: -2.1503119468688965
    3. '
' → logprob: -5.0253119468688965
    4. ' 
' → logprob: -5.1503119468688965
    5. ' return' → logprob: -5.5253119468688965
    6. '  ' → logprob: -6.4003119468688965
    7. '  
' → logprob: -6.5253119468688965
    8. '   
' → logprob: -7.0253119468688965
    9. '    
' → logprob: -7.2753119468688965
    10. 'return' → logprob: -8.025312423706055

Token 57: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12876483798027039
    2. ' return' → logprob: -2.7537648677825928
    3. 'return' → logprob: -3.2537648677825928
    4. ' ' → logprob: -4.128764629364014
    5. 'import' → logprob: -7.253764629364014
    6. '  ' → logprob: -7.628764629364014
    7. ')' → logprob: -8.003765106201172
    8. '    ' → logprob: -8.503765106201172
    9. ',' → logprob: -9.253765106201172
    10. '    
' → logprob: -9.503765106201172

Token 58: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.506819248199463
    2. ' x' → logprob: -1.631819248199463
    3. 'k' → logprob: -1.756819248199463
    4. 'x' → logprob: -1.881819248199463
    5. ' i' → logprob: -3.131819248199463
    6. ' math' → logprob: -3.256819248199463
    7. ' ' → logprob: -3.506819248199463
    8. '_' → logprob: -3.756819248199463
    9. ' d' → logprob: -4.006819248199463
    10. 'i' → logprob: -4.006819248199463

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022888295352458954
    2. 'in' → logprob: -6.127288818359375
    3. ' ' → logprob: -10.252288818359375
    4. ',' → logprob: -10.252288818359375
    5. '  ' → logprob: -11.252288818359375
    6. '   ' → logprob: -12.127288818359375
    7. 'import' → logprob: -13.252288818359375
    8. '<|end|>' → logprob: -13.377288818359375
    9. '**' → logprob: -13.627288818359375
    10. '(' → logprob: -13.627288818359375

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04963573068380356
    2. ' range' → logprob: -3.049635648727417
    3. '[' → logprob: -7.299635887145996
    4. 'ans' → logprob: -9.299635887145996
    5. ' ' → logprob: -9.674635887145996
    6. 'math' → logprob: -9.924635887145996
    7. 'k' → logprob: -10.424635887145996
    8. '(range' → logprob: -10.549635887145996
    9. ')' → logprob: -10.799635887145996
    10. '  ' → logprob: -11.049635887145996

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1847243458032608
    2. '(d' → logprob: -1.9347243309020996
    3. '(int' → logprob: -3.8097243309020996
    4. '(n' → logprob: -7.0597243309021
    5. '(math' → logprob: -7.1847243309021
    6. '(ans' → logprob: -8.434724807739258
    7. '((' → logprob: -9.809724807739258
    8. '(len' → logprob: -10.059724807739258
    9. '(-' → logprob: -10.434724807739258
    10. 'd' → logprob: -10.684724807739258

Token 62: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8441588878631592
    2. 'int' → logprob: -0.8441588878631592
    3. 'ans' → logprob: -2.469158887863159
    4. '1' → logprob: -3.094158887863159
    5. 'math' → logprob: -5.344159126281738
    6. ' int' → logprob: -7.094159126281738
    7. 'n' → logprob: -7.094159126281738
    8. '(' → logprob: -7.344159126281738
    9. '(int' → logprob: -7.719159126281738
    10. '100' → logprob: -8.094159126281738

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016745131462812424
    2. ',int' → logprob: -4.141745090484619
    3. 'int' → logprob: -7.891745090484619
    4. ' ,' → logprob: -8.266745567321777
    5. 'ans' → logprob: -10.016745567321777
    6. '   ' → logprob: -11.766745567321777
    7. '+' → logprob: -12.016745567321777
    8. ':int' → logprob: -12.391745567321777
    9. 'math' → logprob: -12.891745567321777
    10. ',d' → logprob: -13.141745567321777

Token 64: ' ans' (ID: 3345)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1032487228512764
    2. 'ans' → logprob: -3.4782488346099854
    3. ' int' → logprob: -3.6032488346099854
    4. 'd' → logprob: -3.6032488346099854
    5. 'math' → logprob: -4.603248596191406
    6. ' math' → logprob: -6.728248596191406
    7. ' d' → logprob: -7.353248596191406
    8. ' ans' → logprob: -7.853248596191406
    9. '=int' → logprob: -9.478248596191406
    10. ' ' → logprob: -9.603248596191406

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14859722554683685
    2. '):' → logprob: -2.648597240447998
    3. '):
' → logprob: -3.773597240447998
    4. '**' → logprob: -3.898597240447998
    5. ' +' → logprob: -4.023597240447998
    6. ' ):' → logprob: -6.023597240447998
    7. ')' → logprob: -6.398597240447998
    8. ' ):
' → logprob: -7.898597240447998
    9. '
' → logprob: -8.14859676361084
    10. '):
' → logprob: -8.52359676361084

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018101456225849688
    2. ' ' → logprob: -8.625181198120117
    3. '2' → logprob: -14.000181198120117
    4. 'int' → logprob: -14.375181198120117
    5. ')' → logprob: -17.500181198120117
    6. ' int' → logprob: -17.500181198120117
    7. '   ' → logprob: -17.625181198120117
    8. '  ' → logprob: -18.250181198120117
    9. '(' → logprob: -18.875181198120117
    10. '100' → logprob: -19.625181198120117

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -16.2500057220459
    4. '   ' → logprob: -18.7500057220459
    5. 'int' → logprob: -19.0000057220459
    6. ')' → logprob: -19.0000057220459
    7. '  ' → logprob: -19.5000057220459
    8. '１' → logprob: -19.5000057220459
    9. '۱' → logprob: -20.1250057220459
    10. '{' → logprob: -20.4375057220459

Token 68: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5280930399894714
    2. '):' → logprob: -0.9030930399894714
    3. '):
' → logprob: -5.528092861175537
    4. ' ):
' → logprob: -7.528092861175537
    5. ' ):' → logprob: -8.528093338012695
    6. '   ' → logprob: -9.153093338012695
    7. ')' → logprob: -9.778093338012695
    8. ':' → logprob: -9.903093338012695
    9. '):

' → logprob: -11.653093338012695
    10. ' ' → logprob: -12.028093338012695

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07139607518911362
    2. '<|end|>' → logprob: -2.8213961124420166
    3. ' ' → logprob: -5.1963958740234375
    4. '   ' → logprob: -5.8213958740234375
    5. ' if' → logprob: -7.6963958740234375
    6. '<|end|>' → logprob: -8.696395874023438
    7. '    ' → logprob: -9.696395874023438
    8. 'if' → logprob: -9.821395874023438
    9. '  ' → logprob: -10.446395874023438
    10. ' ' → logprob: -10.821395874023438

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.643378496170044
    2. 'if' (adapté à ' if') → logprob: -0.768378496170044
    3. '       ' → logprob: -4.643378257751465
    4. '<|end|>' → logprob: -7.143378257751465
    5. '   ' → logprob: -9.143378257751465
    6. ' ' → logprob: -9.268378257751465
    7. '           ' → logprob: -9.518378257751465
    8. '	if' → logprob: -11.018378257751465
    9. '<|end|>' → logprob: -12.393378257751465
    10. 'If' → logprob: -12.768378257751465

Token 71: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25193455815315247
    2. ' k' → logprob: -1.50193452835083
    3. '(k' → logprob: -12.876935005187988
    4. ' ' → logprob: -14.001935005187988
    5. '    ' → logprob: -14.251935005187988
    6. ' math' → logprob: -15.251935005187988
    7. '	k' → logprob: -15.251935005187988
    8. '   ' → logprob: -15.376935005187988
    9. ' (' → logprob: -15.751935005187988
    10. '       ' → logprob: -15.751935005187988

Token 72: ' **' (ID: 6240)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.6104280352592468
    2. ' *' → logprob: -0.8604280352592468
    3. '*' → logprob: -3.4854280948638916
    4. '**' → logprob: -5.7354278564453125
    5. 'k' → logprob: -10.860427856445312
    6. ' **' → logprob: -11.735427856445312
    7. '***' → logprob: -14.735427856445312
    8. '2' → logprob: -14.985427856445312
    9. ' ' → logprob: -15.110427856445312
    10. '*i' → logprob: -15.235427856445312

Token 73: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002187141450121999
    2. ' ' → logprob: -6.127187252044678
    3. '   ' → logprob: -14.12718677520752
    4. '  ' → logprob: -15.06468677520752
    5. '```' → logprob: -15.25218677520752
    6. '²' → logprob: -16.314687728881836
    7. '=' → logprob: -16.564687728881836
    8. '<|end|>' → logprob: -16.939687728881836
    9. '    ' → logprob: -17.127187728881836
    10. '>' → logprob: -17.127187728881836

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '=' → logprob: -17.00000762939453
    4. '   ' → logprob: -17.37500762939453
    5. 'k' → logprob: -17.62500762939453
    6. '1' → logprob: -17.75000762939453
    7. '0' → logprob: -17.87500762939453
    8. '/' → logprob: -18.25000762939453
    9. '```' → logprob: -18.25000762939453
    10. '.' → logprob: -18.43750762939453

Token 75: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741038978099823
    2. ' ==' → logprob: -0.9741039276123047
    3. '=' → logprob: -11.099103927612305
    4. '===' → logprob: -12.349103927612305
    5. '==
' → logprob: -13.349103927612305
    6. '()==' → logprob: -13.599103927612305
    7. ' ' → logprob: -13.849103927612305
    8. ' ' → logprob: -13.974103927612305
    9. ')==' → logprob: -14.099103927612305
    10. '>' → logprob: -14.349103927612305

Token 76: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3132743537425995
    2. ' ans' → logprob: -1.3132743835449219
    3. '	ans' → logprob: -11.563274383544922
    4. '(ans' → logprob: -12.813274383544922
    5. '_ans' → logprob: -15.688274383544922
    6. ' ' → logprob: -16.188274383544922
    7. 'Ans' → logprob: -16.563274383544922
    8. 'answer' → logprob: -17.188274383544922
    9. 'anst' → logprob: -17.563274383544922
    10. ' ' → logprob: -18.313274383544922

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10465341061353683
    2. ':
' → logprob: -2.3546533584594727
    3. ':return' → logprob: -5.479653358459473
    4. ':
' → logprob: -8.729653358459473
    5. '           ' → logprob: -9.479653358459473
    6. ' :' → logprob: -11.854653358459473
    7. ' return' → logprob: -12.229653358459473
    8. ' :
' → logprob: -12.229653358459473
    9. ':

' → logprob: -12.604653358459473
    10. '       ' → logprob: -13.229653358459473

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006270274054259062
    2. ' return' → logprob: -5.131270408630371
    3. 'return' → logprob: -8.381270408630371
    4. ':return' → logprob: -9.756270408630371
    5. '               ' → logprob: -10.506270408630371
    6. '       ' → logprob: -11.756270408630371
    7. '          ' → logprob: -12.256270408630371
    8. '	       ' → logprob: -13.006270408630371
    9. '{return' → logprob: -13.131270408630371
    10. '   ' → logprob: -13.506270408630371

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2352374643087387
    2. '               ' → logprob: -1.7352374792099
    3. 'return' (adapté à ' return') → logprob: -4.1102375984191895
    4. '           ' → logprob: -4.2352375984191895
    5. '       ' → logprob: -6.8602375984191895
    6. '	return' → logprob: -7.4852375984191895
    7. '   ' → logprob: -8.110237121582031
    8. ' ' → logprob: -8.610237121582031
    9. ':return' → logprob: -8.985237121582031
    10. '	       ' → logprob: -9.860237121582031

Token 80: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931656002998352
    2. ' True' → logprob: -0.6931656002998352
    3. '   ' → logprob: -11.44316577911377
    4. '1' → logprob: -12.69316577911377
    5. '       ' → logprob: -14.06816577911377
    6. '           ' → logprob: -14.06816577911377
    7. ' ' → logprob: -14.19316577911377
    8. ' k' → logprob: -14.44316577911377
    9. 'k' → logprob: -14.56816577911377
    10. '(True' → logprob: -14.81816577911377

Token 81: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.657694418914616e-05
    2. 'k' → logprob: -10.000056266784668
    3. ' True' → logprob: -11.500056266784668
    4. '1' → logprob: -13.875056266784668
    5. 'False' → logprob: -17.375057220458984
    6. '(True' → logprob: -17.375057220458984
    7. 'true' → logprob: -17.625057220458984
    8. '   ' → logprob: -17.875057220458984
    9. 'TRUE' → logprob: -19.250057220458984
    10. ' ' → logprob: -19.875057220458984

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.214019307051785e-05
    2. ' return' → logprob: -11.250032424926758
    3. '       ' → logprob: -11.375032424926758
    4. 'return' → logprob: -13.250032424926758
    5. '           ' → logprob: -13.500032424926758
    6. '	return' → logprob: -13.625032424926758
    7. ' ' → logprob: -14.000032424926758
    8. '  ' → logprob: -14.250032424926758
    9. '0' → logprob: -14.500032424926758
    10. '   ' → logprob: -15.125032424926758

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018878057599067688
    2. 'return' → logprob: -4.143877983093262
    3. ' return' → logprob: -5.893877983093262
    4. '  ' → logprob: -10.518877983093262
    5. '       ' → logprob: -10.893877983093262
    6. ' ' → logprob: -11.018877983093262
    7. '0' → logprob: -12.018877983093262
    8. 'def' → logprob: -12.268877983093262
    9. '	return' → logprob: -12.393877983093262
    10. '           ' → logprob: -12.643877983093262

Token 84: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024390093982219696
    2. '   ' → logprob: -3.7743899822235107
    3. ' return' → logprob: -6.89939022064209
    4. '0' → logprob: -9.52439022064209
    5. 'def' → logprob: -10.27439022064209
    6. ' ' → logprob: -11.02439022064209
    7. '  ' → logprob: -12.14939022064209
    8. '       ' → logprob: -12.89939022064209
    9. '	return' → logprob: -13.14939022064209
    10. '```' → logprob: -14.14939022064209

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.500158309936523
    4. 'False' → logprob: -16.750158309936523
    5. '  ' → logprob: -17.750158309936523
    6. '    ' → logprob: -19.375158309936523
    7. '０' → logprob: -19.812658309936523
    8. '00' → logprob: -19.875158309936523
    9. '۰' → logprob: -19.937658309936523
    10. '000' → logprob: -20.000158309936523

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '０' → logprob: -19.375
    4. 'False' → logprob: -20.125
    5. '۰' → logprob: -20.625
    6. '00' → logprob: -21.875
    7. '000' → logprob: -22.0625
    8. '০' → logprob: -22.125
    9. '०' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 87: '

' (ID: 279)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.5968252420425415
    2. 'for' → logprob: -1.9718252420425415
    3. 'points' → logprob: -2.221825122833252
    4. 'def' → logprob: -2.471825122833252
    5. '
' → logprob: -2.846825122833252
    6. 'result' → logprob: -4.221825122833252
    7. '

' → logprob: -5.096825122833252
    8. ' pairs' → logprob: -5.471825122833252
    9. 'results' → logprob: -5.721825122833252
    10. 'c' → logprob: -5.721825122833252

Token 88: 'x' (ID: 87)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.010951962321996689
    2. 'data' → logprob: -5.385951995849609
    3. 'x' → logprob: -6.010951995849609
    4. 'coordinates' → logprob: -7.385951995849609
    5. 'pts' → logprob: -7.510951995849609
    6. 'vectors' → logprob: -7.510951995849609
    7. 'coords' → logprob: -7.635951995849609
    8. ' points' → logprob: -7.760951995849609
    9. 'positions' → logprob: -8.51095199584961
    10. 'count' → logprob: -9.01095199584961

Token 89: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8953111171722412
    2. ' =' → logprob: -1.0203111171722412
    3. '=' → logprob: -1.5203111171722412
    4. '_' → logprob: -5.02031135559082
    5. '_list' → logprob: -5.77031135559082
    6. ' ' → logprob: -7.77031135559082
    7. '=[]' → logprob: -7.89531135559082
    8. '_values' → logprob: -8.02031135559082
    9. ',' → logprob: -8.14531135559082
    10. 'es' → logprob: -8.77031135559082

Token 90: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09806250780820847
    2. '[int' → logprob: -2.848062515258789
    3. '[x' → logprob: -4.348062515258789
    4. '[list' → logprob: -4.848062515258789
    5. '[str' → logprob: -5.723062515258789
    6. '[n' → logprob: -5.973062515258789
    7. '[]' → logprob: -6.473062515258789
    8. '[input' → logprob: -6.598062515258789
    9. '[s' → logprob: -6.723062515258789
    10. '[array' → logprob: -7.473062515258789

Token 91: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.2524021157296374e-05
    2. ' for' → logprob: -9.875052452087402
    3. '_' → logprob: -14.500052452087402
    4. '<|end|>' → logprob: -15.125052452087402
    5. 'n' → logprob: -16.50005340576172
    6. 'range' → logprob: -17.12505340576172
    7. '
' → logprob: -17.50005340576172
    8. '_for' → logprob: -17.50005340576172
    9. '	for' → logprob: -17.50005340576172
    10. '```' → logprob: -17.87505340576172

Token 92: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014287306112237275
    2. '_i' → logprob: -9.250143051147461
    3. ' _' → logprob: -10.000143051147461
    4. 'i' → logprob: -14.500143051147461
    5. '_in' → logprob: -14.500143051147461
    6. ' i' → logprob: -15.875143051147461
    7. ' in' → logprob: -16.87514305114746
    8. ' ' → logprob: -17.50014305114746
    9. '_range' → logprob: -18.00014305114746
    10. '_id' → logprob: -19.50014305114746

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055140770971775055
    2. 'in' → logprob: -2.930140733718872
    3. '_' → logprob: -8.555140495300293
    4. ' ' → logprob: -10.305140495300293
    5. 'n' → logprob: -11.805140495300293
    6. 'range' → logprob: -11.930140495300293
    7. ' _' → logprob: -12.055140495300293
    8. '_in' → logprob: -12.930140495300293
    9. '0' → logprob: -13.555140495300293
    10. '  ' → logprob: -13.930140495300293

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021141171455383
    2. ' range' → logprob: -2.3502113819122314
    3. ' ' → logprob: -13.225211143493652
    4. '	range' → logprob: -13.600211143493652
    5. 'input' → logprob: -14.725211143493652
    6. '   ' → logprob: -15.225211143493652
    7. '(range' → logprob: -15.600211143493652
    8. '  ' → logprob: -15.725211143493652
    9. 'ran' → logprob: -15.850211143493652
    10. 'r' → logprob: -16.10021209716797

Token 95: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009274221956729889
    2. '(' → logprob: -7.000927448272705
    3. 'n' → logprob: -11.125926971435547
    4. ' (' → logprob: -13.875926971435547
    5. ' n' → logprob: -16.500926971435547
    6. '(int' → logprob: -17.000926971435547
    7. '1' → logprob: -17.875926971435547
    8. '(x' → logprob: -17.875926971435547
    9. '(len' → logprob: -18.125926971435547
    10. '(
' → logprob: -18.125926971435547

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006782424170523882
    2. ')' → logprob: -7.625678062438965
    3. '):
' → logprob: -9.000678062438965
    4. ' ):' → logprob: -10.000678062438965
    5. ':' → logprob: -10.875678062438965
    6. '):
' → logprob: -15.000678062438965
    7. ',' → logprob: -15.250678062438965
    8. '():' → logprob: -15.250678062438965
    9. ' ' → logprob: -15.375678062438965
    10. '）：' → logprob: -15.625678062438965

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07110346108675003
    2. ' x' → logprob: -2.946103572845459
    3. '    
' → logprob: -5.071103572845459
    4. ' 
' → logprob: -5.446103572845459
    5. 'x' → logprob: -5.821103572845459
    6. '<|end|>' → logprob: -6.946103572845459
    7. ' ' → logprob: -7.571103572845459
    8. '	x' → logprob: -8.3211030960083
    9. ' input' → logprob: -9.0711030960083
    10. '  ' → logprob: -9.0711030960083

Token 98: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1940685212612152
    2. 'x' (adapté à ' x') → logprob: -1.9440685510635376
    3. '   ' → logprob: -3.444068431854248
    4. ' 
' → logprob: -7.444068431854248
    5. '    
' → logprob: -7.694068431854248
    6. '	x' → logprob: -8.944068908691406
    7. '
' → logprob: -10.069068908691406
    8. '    ' → logprob: -10.069068908691406
    9. ' ' → logprob: -10.944068908691406
    10. ' s' → logprob: -11.444068908691406

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06198146939277649
    2. '.' → logprob: -2.811981439590454
    3. '.=' → logprob: -12.436981201171875
    4. ' .' → logprob: -13.061981201171875
    5. '.app' → logprob: -13.186981201171875
    6. 'append' → logprob: -13.561981201171875
    7. '.extend' → logprob: -13.686981201171875
    8. '.ap' → logprob: -14.186981201171875
    9. '.Append' → logprob: -14.686981201171875
    10. '.i' → logprob: -14.811981201171875

Token 100: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.07925426214933395
    2. '(tuple' → logprob: -2.579254150390625
    3. '(' → logprob: -7.954254150390625
    4. '([' → logprob: -12.329254150390625
    5. 'list' → logprob: -12.329254150390625
    6. 'tuple' → logprob: -12.579254150390625
    7. ' (' → logprob: -14.954254150390625
    8. ' tuple' → logprob: -15.704254150390625
    9. '((' → logprob: -16.329254150390625
    10. '(l' → logprob: -16.329254150390625

Token 101: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -11.000033378601074
    3. 'map' → logprob: -11.000033378601074
    4. ' map' → logprob: -17.50003433227539
    5. '	map' → logprob: -17.50003433227539
    6. '(m' → logprob: -18.87503433227539
    7. '(
' → logprob: -19.00003433227539
    8. ',map' → logprob: -19.00003433227539
    9. ' (' → logprob: -19.12503433227539
    10. '(int' → logprob: -19.62503433227539

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004338877333793789
    2. 'int' → logprob: -7.875433921813965
    3. ',int' → logprob: -10.375433921813965
    4. '=int' → logprob: -12.125433921813965
    5. '(' → logprob: -12.250433921813965
    6. '<int' → logprob: -12.750433921813965
    7. ' int' → logprob: -12.875433921813965
    8. '(float' → logprob: -13.125433921813965
    9. '[int' → logprob: -13.125433921813965
    10. ')' → logprob: -14.000433921813965

Token 103: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.06652797758579254
    2. ',' → logprob: -3.066528081893921
    3. '(input' → logprob: -4.066527843475342
    4. 'input' → logprob: -7.441527843475342
    5. '(' → logprob: -10.1915283203125
    6. ' ,' → logprob: -11.4415283203125
    7. ' input' → logprob: -12.9415283203125
    8. '```' → logprob: -13.1915283203125
    9. ' (' → logprob: -13.8165283203125
    10. '=input' → logprob: -13.9415283203125

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975083328783512
    2. ' input' → logprob: -3.5297508239746094
    3. '(input' → logprob: -15.52975082397461
    4. ',input' → logprob: -16.15475082397461
    5. '	input' → logprob: -17.15475082397461
    6. ' ' → logprob: -17.27975082397461
    7. '=input' → logprob: -18.65475082397461
    8. '<input' → logprob: -18.77975082397461
    9. '_input' → logprob: -19.02975082397461
    10. 'list' → logprob: -19.27975082397461

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -15.125001907348633
    4. '.' → logprob: -16.500001907348633
    5. '()))' → logprob: -16.625001907348633
    6. '())))' → logprob: -17.375001907348633
    7. '.split' → logprob: -19.000001907348633
    8. '(' → logprob: -19.000001907348633
    9. ' .' → logprob: -19.375001907348633
    10. '()));' → logprob: -19.625001907348633

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. 'strip' → logprob: -11.875008583068848
    3. 'rstrip' → logprob: -13.625008583068848
    4. ' split' → logprob: -15.750008583068848
    5. '(split' → logprob: -15.875008583068848
    6. 'spl' → logprob: -17.87500762939453
    7. 'read' → logprob: -19.12500762939453
    8. 'plit' → logprob: -20.62500762939453
    9. '.split' → logprob: -20.87500762939453
    10. 's' → logprob: -21.62500762939453

Token 107: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.1194244921207428
    2. '()))' → logprob: -2.36942458152771
    3. '()' → logprob: -4.244424343109131
    4. '())' → logprob: -5.869424343109131
    5. ')))' → logprob: -6.494424343109131
    6. '())))
' → logprob: -8.744424819946289
    7. '(' → logprob: -8.869424819946289
    8. '().' → logprob: -11.119424819946289
    9. '()));' → logprob: -11.494424819946289
    10. '())).' → logprob: -11.619424819946289

Token 108: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001941726659424603
    2. '))' → logprob: -6.251941680908203
    3. ')
' → logprob: -11.376941680908203
    4. '`)' → logprob: -15.001941680908203
    5. ')

' → logprob: -15.251941680908203
    6. '())' → logprob: -15.251941680908203
    7. ')`' → logprob: -15.376941680908203
    8. '()' → logprob: -15.376941680908203
    9. ')))' → logprob: -16.126941680908203
    10. ' )' → logprob: -16.126941680908203

Token 109: 'c' (ID: 66)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.17256872355937958
    2. 'cnt' → logprob: -1.922568678855896
    3. 'ans' → logprob: -5.1725687980651855
    4. 'result' → logprob: -5.5475687980651855
    5. 'res' → logprob: -6.2975687980651855
    6. 'answer' → logprob: -7.5475687980651855
    7. 'counter' → logprob: -8.672568321228027
    8. 'c' → logprob: -9.547568321228027
    9. 'total' → logprob: -10.922568321228027
    10. 'ct' → logprob: -11.047568321228027

Token 110: ' =' (ID: 314)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.4966939091682434
    2. 'om' → logprob: -1.2466938495635986
    3. 'ount' → logprob: -2.3716938495635986
    4. 'o' → logprob: -5.621694087982178
    5. 'ombo' → logprob: -6.246694087982178
    6. '=' → logprob: -7.121694087982178
    7. 'b' → logprob: -7.246694087982178
    8. 'ombs' → logprob: -7.371694087982178
    9. 'for' → logprob: -7.496694087982178
    10. 'mb' → logprob: -7.496694087982178

Token 111: ' [' (ID: 723)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0027342629618942738
    2. 'list' → logprob: -6.002734184265137
    3. '0' → logprob: -8.627734184265137
    4. ' list' → logprob: -9.877734184265137
    5. ' combinations' → logprob: -11.627734184265137
    6. 'comb' → logprob: -11.627734184265137
    7. '(com' → logprob: -12.002734184265137
    8. '_com' → logprob: -13.627734184265137
    9. '	com' → logprob: -13.627734184265137
    10. '-com' → logprob: -15.002734184265137

Token 112: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1651558876037598
    2. 'i' → logprob: -1.1651558876037598
    3. 'list' → logprob: -1.9151558876037598
    4. 'comb' → logprob: -2.5401558876037598
    5. 'com' → logprob: -2.7901558876037598
    6. '*' → logprob: -3.0401558876037598
    7. 'c' → logprob: -4.41515588760376
    8. 'x' → logprob: -5.16515588760376
    9. '1' → logprob: -5.29015588760376
    10. '(i' → logprob: -6.29015588760376

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019933946430683136
    2. 'for' → logprob: -4.144934177398682
    3. ')' → logprob: -6.019934177398682
    4. 'n' → logprob: -7.394934177398682
    5. 'nt' → logprob: -7.644934177398682
    6. 'nd' → logprob: -8.769933700561523
    7. 'range' → logprob: -10.019933700561523
    8. 's' → logprob: -10.519933700561523
    9. '<|end|>' → logprob: -10.894933700561523
    10. '+' → logprob: -11.019933700561523

Token 114: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3876406252384186
    2. ' range' → logprob: -1.1376405954360962
    3. 'i' → logprob: -7.762640476226807
    4. ' in' → logprob: -8.262640953063965
    5. ' i' → logprob: -9.762640953063965
    6. 'in' → logprob: -10.762640953063965
    7. '(range' → logprob: -12.637640953063965
    8. ' ' → logprob: -14.012640953063965
    9. 'com' → logprob: -14.387640953063965
    10. 'r' → logprob: -14.637640953063965

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2543744146823883
    2. 'in' → logprob: -1.504374384880066
    3. 'range' → logprob: -6.1293745040893555
    4. ' range' → logprob: -8.254374504089355
    5. ' ' → logprob: -12.879374504089355
    6. ',' → logprob: -14.379374504089355
    7. 'n' → logprob: -15.129374504089355
    8. '  ' → logprob: -15.254374504089355
    9. '(range' → logprob: -15.629374504089355
    10. 'In' → logprob: -15.879374504089355

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012944045010954142
    2. ' range' → logprob: -6.7512946128845215
    3. 'com' → logprob: -9.001294136047363
    4. 'comb' → logprob: -14.126294136047363
    5. '(range' → logprob: -16.25129508972168
    6. ' combinations' → logprob: -18.12629508972168
    7. '(com' → logprob: -18.62629508972168
    8. 'ranges' → logprob: -19.00129508972168
    9. '	range' → logprob: -19.25129508972168
    10. 'Range' → logprob: -20.50129508972168

Token 117: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005987693555653095
    2. '(' → logprob: -5.130987644195557
    3. '(d' → logprob: -10.630988121032715
    4. 'n' → logprob: -10.880988121032715
    5. '(len' → logprob: -11.130988121032715
    6. 'd' → logprob: -14.005988121032715
    7. '1' → logprob: -15.380988121032715
    8. ' (' → logprob: -15.505988121032715
    9. '	n' → logprob: -15.630988121032715
    10. ' n' → logprob: -17.1309871673584

Token 118: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002258498687297106
    2. ')' → logprob: -6.37725830078125
    3. ']' → logprob: -8.12725830078125
    4. '])' → logprob: -8.62725830078125
    5. ' )' → logprob: -10.50225830078125
    6. ')]
' → logprob: -10.87725830078125
    7. ')])' → logprob: -11.12725830078125
    8. ')]

' → logprob: -11.25225830078125
    9. '])]' → logprob: -12.25225830078125
    10. ' ]' → logprob: -14.12725830078125

Token 119: 'c' (ID: 66)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.46348142623901367
    2. 'cnt' → logprob: -1.7134814262390137
    3. 'for' → logprob: -2.2134814262390137
    4. 'res' → logprob: -3.5884814262390137
    5. 'result' → logprob: -3.7134814262390137
    6. 'valid' → logprob: -4.463481426239014
    7. 'ans' → logprob: -4.713481426239014
    8. 'total' → logprob: -5.713481426239014
    9. 'answer' → logprob: -6.463481426239014
    10. 'counter' → logprob: -6.713481426239014

Token 120: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1316792517900467
    2. 'list' → logprob: -2.1316792964935303
    3. ' list' → logprob: -5.881679058074951
    4. ' combinations' → logprob: -6.256679058074951
    5. 'comb' → logprob: -10.63167953491211
    6. '(com' → logprob: -12.25667953491211
    7. '	com' → logprob: -13.38167953491211
    8. ' com' → logprob: -14.50667953491211
    9. 'c' → logprob: -14.63167953491211
    10. ' ' → logprob: -16.13167953491211

Token 122: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.750000953674316
    3. ' (' → logprob: -16.250001907348633
    4. '(com' → logprob: -17.250001907348633
    5. '(range' → logprob: -17.250001907348633
    6. '(
' → logprob: -17.375001907348633
    7. '(C' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. 'c' → logprob: -18.500001907348633
    10. '((' → logprob: -19.250001907348633

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ',d' → logprob: -10.500045776367188
    3. ' ,' → logprob: -11.000045776367188
    4. ',n' → logprob: -14.250045776367188
    5. '(),' → logprob: -14.250045776367188
    6. ',r' → logprob: -16.750045776367188
    7. ',c' → logprob: -17.000045776367188
    8. ')' → logprob: -17.375045776367188
    9. 'd' → logprob: -17.500045776367188
    10. ' ' → logprob: -17.625045776367188

Token 124: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1940343677997589
    2. ' ' → logprob: -1.8190343379974365
    3. ' d' → logprob: -4.569034576416016
    4. 'd' → logprob: -5.569034576416016
    5. ' two' → logprob: -12.944034576416016
    6. ')' → logprob: -14.194034576416016
    7. '  ' → logprob: -14.194034576416016
    8. '	d' → logprob: -14.319034576416016
    9. '   ' → logprob: -14.444034576416016
    10. ' ' → logprob: -15.444034576416016

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016861737822182477
    2. ' ' → logprob: -8.750168800354004
    3. 'd' → logprob: -11.625168800354004
    4. '   ' → logprob: -14.625168800354004
    5. ')' → logprob: -15.250168800354004
    6. ' d' → logprob: -15.875168800354004
    7. '２' → logprob: -16.375167846679688
    8. '  ' → logprob: -16.500167846679688
    9. '```' → logprob: -16.875167846679688
    10. 'two' → logprob: -17.187667846679688

Token 126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.750003814697266
    4. '))' → logprob: -16.625003814697266
    5. ')

' → logprob: -17.125003814697266
    6. ')`' → logprob: -17.625003814697266
    7. '),' → logprob: -19.125003814697266
    8. ')#' → logprob: -19.500003814697266
    9. ').' → logprob: -20.375003814697266
    10. ')}' → logprob: -20.500003814697266

Token 127: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4844721257686615
    2. 'count' → logprob: -1.3594721555709839
    3. 'cnt' → logprob: -2.6094720363616943
    4. 'result' → logprob: -4.109472274780273
    5. 'answer' → logprob: -4.109472274780273
    6. 'res' → logprob: -4.359472274780273
    7. 'counter' → logprob: -5.734472274780273
    8. 'sum' → logprob: -6.234472274780273
    9. 'total' → logprob: -6.734472274780273
    10. 's' → logprob: -7.234472274780273

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407880425453186
    2. ' =' → logprob: -0.9740787744522095
    3. 's' → logprob: -14.224079132080078
    4. '_' → logprob: -15.599079132080078
    5. ' +=' → logprob: -15.974079132080078
    6. ' ' → logprob: -16.224079132080078
    7. '_=' → logprob: -16.349079132080078
    8. ',' → logprob: -16.599079132080078
    9. '=

' → logprob: -16.724079132080078
    10. ' ' → logprob: -16.724079132080078

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'sum' → logprob: -17.000085830688477
    4. 'n' → logprob: -17.875085830688477
    5. 'd' → logprob: -19.250085830688477
    6. 'len' → logprob: -19.750085830688477
    7. '   ' → logprob: -19.750085830688477
    8. '۰' → logprob: -19.875085830688477
    9. 'int' → logprob: -20.437585830688477
    10. '=' → logprob: -20.625085830688477

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. 'sum' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '[]' → logprob: -19.75
    5. '000' → logprob: -20.875
    6. '00' → logprob: -20.875
    7. '[' → logprob: -20.875
    8. 'len' → logprob: -21.0
    9. 'list' → logprob: -21.125
    10. '1' → logprob: -21.25

Token 131: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.44312788406387e-05
    2. ' for' → logprob: -10.250054359436035
    3. '
' → logprob: -10.875054359436035
    4. ' 
' → logprob: -17.37505531311035
    5. '\n' → logprob: -18.12505531311035
    6. '  
' → logprob: -18.25005531311035
    7. '	for' → logprob: -19.00005531311035
    8. '

' → logprob: -19.12505531311035
    9. '
' → logprob: -20.25005531311035
    10. '    
' → logprob: -20.50005531311035

Token 132: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. ' for' → logprob: -12.000006675720215
    3. '
' → logprob: -19.7500057220459
    4. '	for' → logprob: -20.2500057220459
    5. '```' → logprob: -21.0000057220459
    6. '  
' → logprob: -23.8750057220459
    7. ')' → logprob: -24.0000057220459
    8. '<|end|>' → logprob: -24.1250057220459
    9. 'try' → logprob: -24.5000057220459
    10. '    
' → logprob: -24.5000057220459

Token 133: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7472608685493469
    2. 'a' → logprob: -1.3722608089447021
    3. 'pair' → logprob: -2.497260808944702
    4. 'p' → logprob: -2.747260808944702
    5. ' pair' → logprob: -3.872260808944702
    6. ' i' → logprob: -3.872260808944702
    7. 'y' → logprob: -4.372261047363281
    8. ' a' → logprob: -4.872261047363281
    9. 'ab' → logprob: -4.997261047363281
    10. 'comb' → logprob: -5.122261047363281

Token 134: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06219477578997612
    2. 'in' → logprob: -2.81219482421875
    3. ',' → logprob: -8.43719482421875
    4. ' ,' → logprob: -12.56219482421875
    5. 's' → logprob: -12.93719482421875
    6. ' i' → logprob: -13.56219482421875
    7. ' ' → logprob: -13.81219482421875
    8. '_' → logprob: -15.43719482421875
    9. ',in' → logprob: -15.43719482421875
    10. ' c' → logprob: -15.68719482421875

Token 135: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024758970830589533
    2. ' j' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.00247573852539
    4. '	j' → logprob: -17.12747573852539
    5. '_j' → logprob: -17.25247573852539
    6. '(j' → logprob: -17.37747573852539
    7. 'jj' → logprob: -17.87747573852539
    8. 'jk' → logprob: -17.87747573852539
    9. 'e' → logprob: -18.00247573852539
    10. 'y' → logprob: -18.37747573852539

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029752103611826897
    2. 'in' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.529751777648926
    4. '	in' → logprob: -16.029752731323242
    5. ' i' → logprob: -17.404752731323242
    6. 'n' → logprob: -17.779752731323242
    7. ' ine' → logprob: -17.779752731323242
    8. ',' → logprob: -18.029752731323242
    9. '<|end|>' → logprob: -18.154752731323242
    10. 'ine' → logprob: -18.279752731323242

Token 137: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048587825149297714
    2. ' c' → logprob: -3.0485877990722656
    3. '```' → logprob: -16.048587799072266
    4. ' ' → logprob: -16.673587799072266
    5. '	c' → logprob: -17.173587799072266
    6. 's' → logprob: -17.548587799072266
    7. ')c' → logprob: -17.548587799072266
    8. 'enumer' → logprob: -17.673587799072266
    9. 'x' → logprob: -17.798587799072266
    10. ' combinations' → logprob: -17.923587799072266

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029840084607712924
    2. ':
' → logprob: -8.125298500061035
    3. '):' → logprob: -14.000298500061035
    4. ',' → logprob: -14.875298500061035
    5. ':

' → logprob: -15.125298500061035
    6. ' :' → logprob: -15.250298500061035
    7. ':**' → logprob: -15.250298500061035
    8. '<|end|>' → logprob: -15.375298500061035
    9. '):
' → logprob: -17.37529754638672
    10. ':
' → logprob: -17.37529754638672

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022558939235750586
    2. ' if' → logprob: -8.500226020812988
    3. '    
' → logprob: -11.875226020812988
    4. 'if' → logprob: -12.250226020812988
    5. ' ans' → logprob: -12.375226020812988
    6. '       ' → logprob: -13.125226020812988
    7. '
' → logprob: -13.500226020812988
    8. 'ans' → logprob: -13.875226020812988
    9. '	ans' → logprob: -14.125226020812988
    10. '  ' → logprob: -15.625226020812988

Token 140: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.25217440724372864
    2. '   ' → logprob: -2.1271743774414062
    3. 'if' → logprob: -2.5021743774414062
    4. ' ans' → logprob: -4.127174377441406
    5. ' if' → logprob: -5.252174377441406
    6. '	ans' → logprob: -8.377174377441406
    7. '       ' → logprob: -9.127174377441406
    8. ' ' → logprob: -9.877174377441406
    9. '  ' → logprob: -10.752174377441406
    10. '    ' → logprob: -10.877174377441406

Token 141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000918604782782495
    2. ' +=' → logprob: -7.000918388366699
    3. '+' → logprob: -12.2509183883667
    4. '+=(' → logprob: -13.3759183883667
    5. ']+=' → logprob: -14.6259183883667
    6. '=' → logprob: -15.1259183883667
    7. '+='' → logprob: -17.500919342041016
    8. 'if' → logprob: -17.625919342041016
    9. '+="' → logprob: -18.375919342041016
    10. '++' → logprob: -18.875919342041016

Token 142: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0019287518225610256
    2. ' is' → logprob: -6.251928806304932
    3. 'int' → logprob: -16.126928329467773
    4. '(is' → logprob: -18.251928329467773
    5. '1' → logprob: -18.876928329467773
    6. '	is' → logprob: -19.126928329467773
    7. ' ' → logprob: -19.251928329467773
    8. '   ' → logprob: -20.376928329467773
    9. '"is' → logprob: -21.751928329467773
    10. ')is' → logprob: -21.876928329467773

Token 143: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -5.080963092041202e-06
    2. 'distance' → logprob: -12.250004768371582
    3. '_dist' → logprob: -15.500004768371582
    4. 'dist' → logprob: -18.7500057220459
    5. '```' → logprob: -18.8750057220459
    6. '_' → logprob: -19.2500057220459
    7. '_DISTANCE' → logprob: -19.8750057220459
    8. 'Distance' → logprob: -19.8750057220459
    9. ' distance' → logprob: -20.3750057220459
    10. 'd' → logprob: -20.6250057220459

Token 144: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0004885728703811765
    2. 'int' → logprob: -7.625488758087158
    3. '(x' → logprob: -15.87548828125
    4. '(' → logprob: -16.12548828125
    5. 'Int' → logprob: -16.25048828125
    6. '(i' → logprob: -16.50048828125
    7. '(int' → logprob: -16.50048828125
    8. '(_' → logprob: -17.12548828125
    9. '_' → logprob: -17.50048828125
    10. 'i' → logprob: -17.75048828125

Token 145: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008659012615680695
    2. '(' → logprob: -4.7586588859558105
    3. '(i' → logprob: -11.008659362792969
    4. '((' → logprob: -11.508659362792969
    5. ' (' → logprob: -11.758659362792969
    6. '([' → logprob: -12.258659362792969
    7. '(
' → logprob: -12.758659362792969
    8. '(list' → logprob: -14.883659362792969
    9. '(a' → logprob: -15.383659362792969
    10. '(

' → logprob: -15.383659362792969

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019948746194131672
    2. '(i' → logprob: -8.750199317932129
    3. '[' → logprob: -10.750199317932129
    4. '[j' → logprob: -11.250199317932129
    5. ' [' → logprob: -13.625199317932129
    6. 'i' → logprob: -13.625199317932129
    7. '[
' → logprob: -14.000199317932129
    8. ')' → logprob: -14.250199317932129
    9. ')[' → logprob: -14.500199317932129
    10. '([' → logprob: -14.750199317932129

Token 147: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005982950329780579
    2. ',x' → logprob: -5.380982875823975
    3. ' ,' → logprob: -6.880982875823975
    4. '[x' → logprob: -8.630983352661133
    5. ',j' → logprob: -9.380983352661133
    6. '[j' → logprob: -10.255983352661133
    7. '[i' → logprob: -10.755983352661133
    8. ',i' → logprob: -12.880983352661133
    9. '[' → logprob: -13.005983352661133
    10. '   ' → logprob: -13.255983352661133

Token 148: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '(x' → logprob: -16.506715774536133
    4. '	x' → logprob: -16.756715774536133
    5. ')x' → logprob: -17.256715774536133
    6. ')' → logprob: -18.131715774536133
    7. '   ' → logprob: -18.256715774536133
    8. ' ' → logprob: -19.006715774536133
    9. '[x' → logprob: -19.881715774536133
    10. '{x' → logprob: -20.006715774536133

Token 149: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.38687872886657715
    2. 'j' → logprob: -1.1368787288665771
    3. ' j' → logprob: -12.636878967285156
    4. '[' → logprob: -13.386878967285156
    5. '[
' → logprob: -14.386878967285156
    6. '	j' → logprob: -14.511878967285156
    7. '[i' → logprob: -14.761878967285156
    8. '_j' → logprob: -15.011878967285156
    9. '(j' → logprob: -15.386878967285156
    10. '   ' → logprob: -15.511878967285156

Token 150: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001625379954930395
    2. '))' → logprob: -8.750162124633789
    3. ')
' → logprob: -12.750162124633789
    4. ' )' → logprob: -14.750162124633789
    5. '})' → logprob: -15.000162124633789
    6. ')`' → logprob: -15.875162124633789
    7. ')}' → logprob: -16.25016212463379
    8. '])' → logprob: -16.37516212463379
    9. '())' → logprob: -17.25016212463379
    10. ')))' → logprob: -17.25016212463379

Token 151: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -13.750000953674316
    3. '
' → logprob: -16.750001907348633
    4. '```' → logprob: -20.125001907348633
    5. '(print' → logprob: -20.250001907348633
    6. '<|end|>' → logprob: -20.250001907348633
    7. '#print' → logprob: -20.750001907348633
    8. '.print' → logprob: -21.750001907348633
    9. ')' → logprob: -22.125001907348633
    10. '-print' → logprob: -23.000001907348633

Token 152: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143954455852509
    2. '(ans' → logprob: -1.7014394998550415
    3. '('' → logprob: -11.32643985748291
    4. '("("' → logprob: -11.95143985748291
    5. ' (' → logprob: -12.82643985748291
    6. '(
' → logprob: -14.07643985748291
    7. '(`' → logprob: -14.20143985748291
    8. '((' → logprob: -14.32643985748291
    9. '(

' → logprob: -14.45143985748291
    10. '(len' → logprob: -14.70143985748291

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')`' → logprob: -15.25
    3. ' )' → logprob: -15.625
    4. '))' → logprob: -17.875
    5. ')**' → logprob: -18.25
    6. ')
' → logprob: -18.5
    7. '')' → logprob: -19.5
    8. ')}' → logprob: -19.625
    9. '),' → logprob: -19.875
    10. '`)' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 41.06%
Précision adaptée (1ère position): 42.38%
Précision (top 10): 84.77%
================================================================================
