================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def printn(x):
    sys.stdout.write(x)

def inn():
    return int(input())

def inl():
    return list(map(int, input().split()))

def inm():
    return map(int, input().split())

def ddprint(x, DBG):
    if DBG:
        print(x)

def read_n_and_m():
    return inm()

def read_list(n):
    return inl()

def init_h():
    return {0: 1}

def init_acc(n):
    return [0] * (n + 1)

def compute_acc_and_h(a, n, m, h, acc):
    for i in range(n):
        update_acc_and_h(a, i, m, h, acc)
    return acc, h

def update_acc_and_h(a, i, m, h, acc):
    acc[i + 1] = x = (acc[i] + a[i]) % m
    update_h(h, x)

def update_h(h, x):
    if x in h:
        h[x] += 1
    else:
        h[x] = 1

def compute_sm(h):
    sm = 0
    for x in h:
        sm += calc_pairs(h[x])
    return sm

def calc_pairs(count):
    return count * (count - 1) // 2

def main():
    DBG = True  # or False
    n, m = read_n_and_m()
    a = read_list(n)
    h = init_h()
    acc = init_acc(n)
    acc, h = compute_acc_and_h(a, n, m, h, acc)
    sm = compute_sm(h)
    print(sm)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008217801805585623
    2. '("("' → logprob: -8.000822067260742
    3. '_' → logprob: -8.125822067260742
    4. '("' → logprob: -9.750822067260742
    5. ' (' → logprob: -11.000822067260742
    6. '("""' → logprob: -11.250822067260742
    7. '_s' → logprob: -11.375822067260742
    8. '(_' → logprob: -11.375822067260742
    9. '('' → logprob: -11.625822067260742
    10. '(

' → logprob: -11.875822067260742

Token 6: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04640087112784386
    2. 't' → logprob: -3.171400785446167
    3. '(t' → logprob: -6.296401023864746
    4. '_' → logprob: -8.046401023864746
    5. 'ame' → logprob: -8.296401023864746
    6. 'umber' → logprob: -8.546401023864746
    7. 'u' → logprob: -9.046401023864746
    8. ' (' → logprob: -9.296401023864746
    9. 'o' → logprob: -9.671401023864746
    10. '(

' → logprob: -9.796401023864746

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2878616154193878
    2. ')' → logprob: -1.4128615856170654
    3. ':' → logprob: -5.0378618240356445
    4. ',' → logprob: -8.912861824035645
    5. '):
' → logprob: -10.412861824035645
    6. '=' → logprob: -11.912861824035645
    7. '*' → logprob: -12.162861824035645
    8. '**' → logprob: -12.662861824035645
    9. ' ):' → logprob: -12.912861824035645
    10. '[' → logprob: -13.037861824035645

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1645948588848114
    2. '   ' → logprob: -2.039594888687134
    3. '(' → logprob: -4.789594650268555
    4. '):' → logprob: -5.289594650268555
    5. ' :' → logprob: -5.539594650268555
    6. ')' → logprob: -6.289594650268555
    7. 'print' → logprob: -7.039594650268555
    8. ' print' → logprob: -7.539594650268555
    9. '():' → logprob: -8.164594650268555
    10. ' ' → logprob: -8.789594650268555

Token 9: ' sys' (ID: 12228)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4483538568019867
    2. 'print' → logprob: -1.073353886604309
    3. '   ' → logprob: -4.0733537673950195
    4. '```' → logprob: -7.1983537673950195
    5. ' for' → logprob: -7.4483537673950195
    6. ' sys' → logprob: -7.8233537673950195
    7. ' ```' → logprob: -9.32335376739502
    8. ' `' → logprob: -9.44835376739502
    9. 'p' → logprob: -9.57335376739502
    10. 'for' → logprob: -9.57335376739502

Token 10: '.stdout' (ID: 59462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003469057264737785
    2. '.stdout' → logprob: -8.125347137451172
    3. '.print' → logprob: -10.500347137451172
    4. '.stdin' → logprob: -11.750347137451172
    5. '.write' → logprob: -12.125347137451172
    6. '.stderr' → logprob: -13.000347137451172
    7. '.exit' → logprob: -13.125347137451172
    8. '.argv' → logprob: -13.500347137451172
    9. '.println' → logprob: -14.000347137451172
    10. ' .' → logprob: -14.625347137451172

Token 11: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0009203928639180958
    2. '.' → logprob: -7.000920295715332
    3. '.print' → logprob: -12.625920295715332
    4. '.flush' → logprob: -13.375920295715332
    5. '.readline' → logprob: -13.500920295715332
    6. '.read' → logprob: -14.000920295715332
    7. '.append' → logprob: -14.125920295715332
    8. '.Write' → logprob: -14.875920295715332
    9. ').' → logprob: -15.125920295715332
    10. '.println' → logprob: -16.12592124938965

Token 12: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5163723230361938
    2. '(x' → logprob: -1.1413723230361938
    3. '(str' → logprob: -2.5163722038269043
    4. '('' → logprob: -5.891372203826904
    5. '("("' → logprob: -8.141372680664062
    6. '(f' → logprob: -10.391372680664062
    7. 'str' → logprob: -10.391372680664062
    8. '((' → logprob: -10.766372680664062
    9. 'x' → logprob: -11.641372680664062
    10. '(chr' → logprob: -11.766372680664062

Token 13: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7530574849806726e-05
    2. '[' → logprob: -10.250057220458984
    3. '+' → logprob: -11.500057220458984
    4. '))' → logprob: -13.000057220458984
    5. ')
' → logprob: -13.125057220458984
    6. '')' → logprob: -13.875057220458984
    7. ')`' → logprob: -14.125057220458984
    8. '+)' → logprob: -14.250057220458984
    9. ')+' → logprob: -14.500057220458984
    10. '")' → logprob: -14.500057220458984

Token 14: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.76711106300354
    2. '(' → logprob: -1.64211106300354
    3. ')' → logprob: -1.89211106300354
    4. '.' → logprob: -2.01711106300354
    5. '\' → logprob: -3.89211106300354
    6. '+' → logprob: -4.142110824584961
    7. '[' → logprob: -5.267110824584961
    8. ''\' → logprob: -6.267110824584961
    9. '#' → logprob: -6.392110824584961
    10. ''' → logprob: -6.642110824584961

Token 15: ' inn' (ID: 5315)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.002992440015077591
    2. ' ' → logprob: -6.627992630004883
    3. ' main' → logprob: -7.752992630004883
    4. '_print' → logprob: -8.002992630004883
    5. 'print' → logprob: -8.127992630004883
    6. '_' → logprob: -9.002992630004883
    7. ' space' → logprob: -9.502992630004883
    8. ' add' → logprob: -9.877992630004883
    9. ' prin' → logprob: -9.877992630004883
    10. 'n' → logprob: -10.127992630004883

Token 16: '():
' (ID: 8595)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.09999570995569229
    2. 'er' → logprob: -2.5999956130981445
    3. 'put' → logprob: -4.2249956130981445
    4. 'u' → logprob: -5.7249956130981445
    5. '[' → logprob: -7.2249956130981445
    6. 't' → logprob: -7.5999956130981445
    7. 'ert' → logprob: -8.099995613098145
    8. 'p' → logprob: -8.224995613098145
    9. 'it' → logprob: -8.224995613098145
    10. 'e' → logprob: -8.599995613098145

Token 17: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9186083078384399
    2. ' return' → logprob: -1.04360830783844
    3. '   ' → logprob: -2.1686081886291504
    4. '()' → logprob: -2.6686081886291504
    5. 'input' → logprob: -3.7936081886291504
    6. 'return' → logprob: -4.16860818862915
    7. ' ()' → logprob: -4.66860818862915
    8. '    ' → logprob: -5.04360818862915
    9. ' ' → logprob: -5.16860818862915
    10. ')' → logprob: -6.16860818862915

Token 18: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3391501307487488
    2. 'return' (adapté à ' return') → logprob: -1.3391501903533936
    3. ' input' → logprob: -4.2141499519348145
    4. '   ' → logprob: -5.2141499519348145
    5. 'input' → logprob: -5.7141499519348145
    6. ' sys' → logprob: -6.3391499519348145
    7. 'sys' → logprob: -8.589150428771973
    8. ' ' → logprob: -9.964150428771973
    9. 'ret' → logprob: -12.339150428771973
    10. ' retur' → logprob: -12.589150428771973

Token 19: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07362455129623413
    2. 'input' → logprob: -2.698624610900879
    3. ' int' → logprob: -6.323624610900879
    4. ' sys' → logprob: -6.823624610900879
    5. 'int' → logprob: -7.448624610900879
    6. ' ' → logprob: -8.698624610900879
    7. 'sys' → logprob: -10.198624610900879
    8. ' raw' → logprob: -12.323624610900879
    9. '  ' → logprob: -12.823624610900879
    10. ' next' → logprob: -14.198624610900879

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03954096883535385
    2. '(' → logprob: -3.289541006088257
    3. '(sys' → logprob: -6.539540767669678
    4. 'input' → logprob: -10.914541244506836
    5. '(raw' → logprob: -10.914541244506836
    6. '()' → logprob: -12.414541244506836
    7. '((' → logprob: -12.664541244506836
    8. '(stdin' → logprob: -12.664541244506836
    9. '(
' → logprob: -13.914541244506836
    10. '(open' → logprob: -14.039541244506836

Token 21: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001553428708575666
    2. '()))' → logprob: -7.126553535461426
    3. '()' → logprob: -7.251553535461426
    4. ' ())' → logprob: -10.751553535461426
    5. '(' → logprob: -11.626553535461426
    6. ')' → logprob: -12.876553535461426
    7. '();)' → logprob: -13.001553535461426
    8. '());' → logprob: -13.626553535461426
    9. '())
' → logprob: -14.501553535461426
    10. '()),' → logprob: -14.501553535461426

Token 22: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8354422450065613
    2. '
' → logprob: -1.460442304611206
    3. '<|end|>' → logprob: -2.460442304611206
    4. ' ' → logprob: -2.835442304611206
    5. 'n' → logprob: -3.210442304611206
    6. '(' → logprob: -3.585442304611206
    7. 'def' → logprob: -3.585442304611206
    8. '

' → logprob: -3.710442304611206
    9. '#' → logprob: -4.335442066192627
    10. ')' → logprob: -4.710442066192627

Token 23: ' in' (ID: 306)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11307369917631149
    2. ' print' → logprob: -3.2380735874176025
    3. ' add' → logprob: -3.4880735874176025
    4. ' sum' → logprob: -3.8630735874176025
    5. ' ' → logprob: -5.863073825836182
    6. ' read' → logprob: -6.488073825836182
    7. ' solve' → logprob: -6.738073825836182
    8. ' input' → logprob: -6.988073825836182
    9. ' square' → logprob: -6.988073825836182
    10. ' factorial' → logprob: -7.113073825836182

Token 24: 'l' (ID: 75)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519707679748535
    2. 'put' → logprob: -1.5019707679748535
    3. 'p' → logprob: -10.876970291137695
    4. 'ut' → logprob: -11.126970291137695
    5. ' t' → logprob: -12.751970291137695
    6. 'pt' → logprob: -14.126970291137695
    7. '()' → logprob: -14.251970291137695
    8. '(t' → logprob: -14.251970291137695
    9. 'it' → logprob: -14.626970291137695
    10. 'teger' → logprob: -15.001970291137695

Token 25: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035996075719594955
    2. 'ine' → logprob: -3.7859959602355957
    3. 'ist' → logprob: -4.660995960235596
    4. '():' → logprob: -6.160995960235596
    5. '())' → logprob: -8.035996437072754
    6. 'n' → logprob: -8.410996437072754
    7. '()[' → logprob: -8.660996437072754
    8. '()]' → logprob: -9.160996437072754
    9. '().' → logprob: -10.160996437072754
    10. '()}' → logprob: -10.285996437072754

Token 26: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.785518229007721
    2. '()' → logprob: -1.5355181694030762
    3. ' return' → logprob: -1.9105181694030762
    4. '().' → logprob: -2.160518169403076
    5. '   ' → logprob: -3.410518169403076
    6. 'input' → logprob: -3.910518169403076
    7. ' input' → logprob: -4.910518169403076
    8. 'eturn' → logprob: -6.785518169403076
    9. ' ' → logprob: -7.285518169403076
    10. '()
' → logprob: -7.535518169403076

Token 27: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38561928272247314
    2. 'input' → logprob: -1.2606192827224731
    3. ' return' → logprob: -3.7606191635131836
    4. ' input' → logprob: -4.635619163513184
    5. 'list' → logprob: -5.760619163513184
    6. ' list' → logprob: -8.635619163513184
    7. '   ' → logprob: -9.385619163513184
    8. 'map' → logprob: -10.885619163513184
    9. 'sys' → logprob: -10.885619163513184
    10. '[input' → logprob: -10.885619163513184

Token 28: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3305436968803406
    2. ' input' → logprob: -1.3305437564849854
    3. 'list' → logprob: -4.705543518066406
    4. ' list' → logprob: -4.955543518066406
    5. '[input' → logprob: -7.080543518066406
    6. ' ' → logprob: -9.830543518066406
    7. '[' → logprob: -9.955543518066406
    8. '(input' → logprob: -10.580543518066406
    9. ' [' → logprob: -11.080543518066406
    10. '<input' → logprob: -11.455543518066406

Token 29: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.745069499127567e-05
    2. '(' → logprob: -9.37508773803711
    3. '(input' → logprob: -13.62508773803711
    4. '(int' → logprob: -14.25008773803711
    5. ' map' → logprob: -15.12508773803711
    6. 'map' → logprob: -16.00008773803711
    7. ' (' → logprob: -16.12508773803711
    8. '(eval' → logprob: -16.50008773803711
    9. '(range' → logprob: -16.62508773803711
    10. '(s' → logprob: -16.87508773803711

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001064963056705892
    2. 'int' → logprob: -6.876064777374268
    3. '(str' → logprob: -11.376065254211426
    4. ',int' → logprob: -11.876065254211426
    5. '(' → logprob: -12.126065254211426
    6. '=int' → logprob: -12.876065254211426
    7. ' int' → logprob: -13.251065254211426
    8. '<int' → logprob: -13.251065254211426
    9. 'str' → logprob: -13.751065254211426
    10. '[int' → logprob: -14.876065254211426

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43647539615631104
    2. ',input' → logprob: -1.061475396156311
    3. ' ,' → logprob: -5.4364752769470215
    4. '(input' → logprob: -5.8114752769470215
    5. 'input' → logprob: -8.81147575378418
    6. '(' → logprob: -8.93647575378418
    7. ',int' → logprob: -10.18647575378418
    8. ' (' → logprob: -10.68647575378418
    9. ' input' → logprob: -10.81147575378418
    10. ',(' → logprob: -11.06147575378418

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1427203118801117
    2. ' input' → logprob: -2.0177202224731445
    3. ',input' → logprob: -11.267720222473145
    4. '   ' → logprob: -11.517720222473145
    5. ' ' → logprob: -12.017720222473145
    6. '(input' → logprob: -12.267720222473145
    7. '	input' → logprob: -12.392720222473145
    8. '=input' → logprob: -12.642720222473145
    9. '  ' → logprob: -13.517720222473145
    10. '<input' → logprob: -13.767720222473145

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.217951886355877e-05
    2. ' ().' → logprob: -10.250061988830566
    3. '()' → logprob: -10.875061988830566
    4. '.split' → logprob: -12.875061988830566
    5. '.' → logprob: -13.250061988830566
    6. ' .' → logprob: -13.625061988830566
    7. 'split' → logprob: -14.500061988830566
    8. ' ' → logprob: -14.625061988830566
    9. '(' → logprob: -14.625061988830566
    10. '   ' → logprob: -15.125061988830566

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06199614331126213
    2. 'strip' → logprob: -2.8119962215423584
    3. 'rstrip' → logprob: -10.686996459960938
    4. ' split' → logprob: -12.436996459960938
    5. ' strip' → logprob: -13.811996459960938
    6. '(split' → logprob: -15.061996459960938
    7. 'spl' → logprob: -15.186996459960938
    8. ')' → logprob: -15.686996459960938
    9. 'read' → logprob: -18.311996459960938
    10. '.split' → logprob: -18.561996459960938

Token 35: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.39057615399360657
    2. '))' → logprob: -1.1405761241912842
    3. '()' → logprob: -6.015576362609863
    4. '())' → logprob: -7.265576362609863
    5. ')))' → logprob: -7.890576362609863
    6. ')' → logprob: -9.390576362609863
    7. '())))' → logprob: -9.515576362609863
    8. '(' → logprob: -11.140576362609863
    9. '()))
' → logprob: -11.890576362609863
    10. ' ))' → logprob: -13.015576362609863

Token 36: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37513467669487
    2. 'd' → logprob: -1.7501347064971924
    3. '\' → logprob: -3.0001347064971924
    4. 'n' → logprob: -3.8751347064971924
    5. 'def' → logprob: -3.8751347064971924
    6. '\n' → logprob: -4.375134468078613
    7. 'i' → logprob: -4.625134468078613
    8. '
' → logprob: -4.875134468078613
    9. '```' → logprob: -5.875134468078613
    10. '' → logprob: -6.125134468078613

Token 37: ' inm' (ID: 25357)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0433330312371254
    2. 'main' → logprob: -3.293333053588867
    3. ' ma' → logprob: -5.668333053588867
    4. ' print' → logprob: -7.918333053588867
    5. ' solve' → logprob: -8.043333053588867
    6. ' mains' → logprob: -8.293333053588867
    7. ' mai' → logprob: -8.668333053588867
    8. '	main' → logprob: -9.168333053588867
    9. 'm' → logprob: -9.293333053588867
    10. ' in' → logprob: -9.543333053588867

Token 38: '():
' (ID: 8595)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.9511205554008484
    2. '()' → logprob: -1.0761206150054932
    3. '():' → logprob: -1.8261206150054932
    4. 'ort' → logprob: -2.951120615005493
    5. '():
' → logprob: -4.451120376586914
    6. 'ul' → logprob: -4.576120376586914
    7. 'port' → logprob: -5.076120376586914
    8. 'put' → logprob: -5.576120376586914
    9. 'ult' → logprob: -5.701120376586914
    10. '(' → logprob: -5.826120376586914

Token 39: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.17166897654533386
    2. '():
' → logprob: -2.0466690063476562
    3. '()' → logprob: -4.046669006347656
    4. '(n' → logprob: -5.921669006347656
    5. '(int' → logprob: -6.046669006347656
    6. 'return' → logprob: -6.171669006347656
    7. '(lambda' → logprob: -6.546669006347656
    8. 'int' → logprob: -7.671669006347656
    9. 'n' → logprob: -7.796669006347656
    10. 'lambda' → logprob: -8.171669006347656

Token 40: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2930935025215149
    2. 'int' → logprob: -2.41809344291687
    3. '():' → logprob: -2.66809344291687
    4. 'n' → logprob: -4.168093681335449
    5. '()' → logprob: -4.293093681335449
    6. 'map' → logprob: -4.418093681335449
    7. '(int' → logprob: -4.543093681335449
    8. ' return' → logprob: -4.668093681335449
    9. 'def' → logprob: -5.043093681335449
    10. '():
' → logprob: -5.168093681335449

Token 41: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4273890554904938
    2. ' map' → logprob: -1.1773890256881714
    3. 'list' → logprob: -3.927389144897461
    4. 'int' → logprob: -4.302389144897461
    5. ' list' → logprob: -6.177389144897461
    6. '[int' → logprob: -6.302389144897461
    7. '(map' → logprob: -7.052389144897461
    8. 'dict' → logprob: -7.302389144897461
    9. '(int' → logprob: -8.677389144897461
    10. ' int' → logprob: -8.677389144897461

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.750028610229492
    3. 'int' → logprob: -12.375028610229492
    4. '<int' → logprob: -13.125028610229492
    5. ' (' → logprob: -14.000028610229492
    6. '[int' → logprob: -16.500028610229492
    7. '=int' → logprob: -16.875028610229492
    8. '(str' → logprob: -17.125028610229492
    9. '(in' → logprob: -17.250028610229492
    10. ',int' → logprob: -17.625028610229492

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43675994873046875
    2. '(input' → logprob: -1.3117599487304688
    3. '(' → logprob: -2.9367599487304688
    4. ',input' → logprob: -3.5617599487304688
    5. ' (' → logprob: -6.061759948730469
    6. ',(' → logprob: -7.561759948730469
    7. ' ,' → logprob: -8.561759948730469
    8. ')' → logprob: -10.186759948730469
    9. ')(' → logprob: -11.686759948730469
    10. '(),' → logprob: -13.561759948730469

Token 44: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02632143348455429
    2. ' input' → logprob: -3.6513214111328125
    3. '(input' → logprob: -11.401321411132812
    4. ')' → logprob: -12.901321411132812
    5. ' ' → logprob: -12.901321411132812
    6. ',input' → logprob: -13.526321411132812
    7. 'sys' → logprob: -14.151321411132812
    8. '	input' → logprob: -14.276321411132812
    9. '=input' → logprob: -14.276321411132812
    10. '   ' → logprob: -14.276321411132812

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021295747137628496
    2. '()' → logprob: -8.500212669372559
    3. '(' → logprob: -12.500212669372559
    4. ' ().' → logprob: -13.250212669372559
    5. '())' → logprob: -13.625212669372559
    6. '.' → logprob: -13.875212669372559
    7. ')' → logprob: -14.000212669372559
    8. ' ' → logprob: -15.000212669372559
    9. '   ' → logprob: -16.250213623046875
    10. ').' → logprob: -16.250213623046875

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.309382373117842e-05
    2. ')' → logprob: -11.125033378601074
    3. 'strip' → logprob: -11.250033378601074
    4. ' split' → logprob: -12.375033378601074
    5. 'rstrip' → logprob: -14.875033378601074
    6. 'spl' → logprob: -15.375033378601074
    7. 'plit' → logprob: -15.750033378601074
    8. '(split' → logprob: -16.000032424926758
    9. '_split' → logprob: -16.750032424926758
    10. '))' → logprob: -16.875032424926758

Token 47: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.058526989072561264
    2. ')' → logprob: -3.3085269927978516
    3. '()))' → logprob: -4.558526992797852
    4. '))' → logprob: -5.058526992797852
    5. '()' → logprob: -5.683526992797852
    6. '())
' → logprob: -10.808526992797852
    7. ' ())' → logprob: -11.683526992797852
    8. ')))' → logprob: -12.058526992797852
    9. '())))' → logprob: -13.683526992797852
    10. '()))
' → logprob: -13.808526992797852

Token 48: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1994868516921997
    2. '
' → logprob: -1.6994868516921997
    3. 'def' → logprob: -1.9494868516921997
    4. '\n' → logprob: -1.9494868516921997
    5. 'd' → logprob: -2.44948673248291
    6. '\' → logprob: -2.69948673248291
    7. '<|end|>' → logprob: -4.19948673248291
    8. '```' → logprob: -4.69948673248291
    9. '

' → logprob: -4.82448673248291
    10. '' → logprob: -4.94948673248291

Token 49: ' dd' (ID: 18636)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0597316138446331
    2. 'main' → logprob: -3.3097317218780518
    3. ' is' → logprob: -4.684731483459473
    4. ' print' → logprob: -6.059731483459473
    5. 'is' → logprob: -6.434731483459473
    6. ' str' → logprob: -7.059731483459473
    7. 'print' → logprob: -7.309731483459473
    8. ' solve' → logprob: -7.309731483459473
    9. 'pow' → logprob: -7.309731483459473
    10. ' max' → logprob: -7.559731483459473

Token 50: 'print' (ID: 1598)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45047682523727417
    2. 'ef' → logprob: -1.200476884841919
    3. '():' → logprob: -3.450476884841919
    4. 'def' → logprob: -5.32547664642334
    5. 'ict' → logprob: -5.57547664642334
    6. '(' → logprob: -5.57547664642334
    7. '=' → logprob: -5.95047664642334
    8. 'f' → logprob: -6.70047664642334
    9. '()>' → logprob: -6.70047664642334
    10. 'import' → logprob: -6.95047664642334

Token 51: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005487618502229452
    2. '(x' → logprob: -5.255487442016602
    3. ' (' → logprob: -10.005487442016602
    4. '(s' → logprob: -10.380487442016602
    5. '("("' → logprob: -10.505487442016602
    6. '()' → logprob: -10.630487442016602
    7. '("")' → logprob: -10.755487442016602
    8. 's' → logprob: -11.005487442016602
    9. '('' → logprob: -11.630487442016602
    10. '("' → logprob: -11.880487442016602

Token 52: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012634899467229843
    2. ')' → logprob: -4.387634754180908
    3. '):
' → logprob: -9.387635231018066
    4. ' ):' → logprob: -10.512635231018066
    5. '(x' → logprob: -12.637635231018066
    6. ',' → logprob: -12.637635231018066
    7. '   ' → logprob: -12.637635231018066
    8. ':' → logprob: -13.262635231018066
    9. ')):' → logprob: -14.387635231018066
    10. '(' → logprob: -14.762635231018066

Token 53: ' DBG' (ID: 100080)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.19472181797027588
    2. ' y' → logprob: -2.6947216987609863
    3. 'msg' → logprob: -3.9447216987609863
    4. '   ' → logprob: -4.444721698760986
    5. 'prefix' → logprob: -4.444721698760986
    6. 'label' → logprob: -4.444721698760986
    7. '*' → logprob: -4.444721698760986
    8. ' label' → logprob: -5.194721698760986
    9. 'data' → logprob: -5.819721698760986
    10. ' *' → logprob: -5.944721698760986

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01825389266014099
    2. '=' → logprob: -4.893253803253174
    3. '):
' → logprob: -5.143253803253174
    4. ')' → logprob: -5.768253803253174
    5. ',' → logprob: -8.143254280090332
    6. ')):' → logprob: -8.143254280090332
    7. '_' → logprob: -8.268254280090332
    8. '=True' → logprob: -8.518254280090332
    9. ''):' → logprob: -8.768254280090332
    10. ' ):' → logprob: -9.018254280090332

Token 55: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17221364378929138
    2. '   ' → logprob: -2.297213554382324
    3. '(' → logprob: -3.047213554382324
    4. '):' → logprob: -5.422213554382324
    5. ' if' → logprob: -6.547213554382324
    6. '[' → logprob: -6.797213554382324
    7. ' :' → logprob: -7.047213554382324
    8. '():' → logprob: -7.922213554382324
    9. ':
' → logprob: -7.922213554382324
    10. 'if' → logprob: -8.422213554382324

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4481513798236847
    2. 'if' (adapté à ' if') → logprob: -1.1981513500213623
    3. '   ' → logprob: -2.8231513500213623
    4. '	if' → logprob: -12.073151588439941
    5. ' sys' → logprob: -12.198151588439941
    6. '    ' → logprob: -12.698151588439941
    7. 'sys' → logprob: -12.948151588439941
    8. ' for' → logprob: -13.448151588439941
    9. 'print' → logprob: -13.948151588439941
    10. 'for' → logprob: -14.073151588439941

Token 57: ' DBG' (ID: 100080)
  Prédit: ' DBG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DBG' → logprob: -0.0015496177366003394
    2. 'DBG' → logprob: -6.50154972076416
    3. '	DBG' → logprob: -11.12654972076416
    4. ' ' → logprob: -11.50154972076416
    5. '(DB' → logprob: -11.75154972076416
    6. ' DB' → logprob: -12.12654972076416
    7. '_DBG' → logprob: -12.37654972076416
    8. ' DEBUG' → logprob: -12.87654972076416
    9. ' DBS' → logprob: -14.25154972076416
    10. '(DEBUG' → logprob: -14.37654972076416

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05282312631607056
    2. '==' → logprob: -3.177823066711426
    3. ' ==' → logprob: -5.427823066711426
    4. '):' → logprob: -6.177823066711426
    5. ' :' → logprob: -6.552823066711426
    6. '>' → logprob: -6.802823066711426
    7. '>:' → logprob: -8.552823066711426
    8. ')' → logprob: -8.927823066711426
    9. ' and' → logprob: -8.927823066711426
    10. '=' → logprob: -9.552823066711426

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007232828065752983
    2. ' :' → logprob: -5.007232666015625
    3. '       ' → logprob: -8.882232666015625
    4. '):' → logprob: -9.007232666015625
    5. ':
' → logprob: -9.507232666015625
    6. '   ' → logprob: -9.632232666015625
    7. ' and' → logprob: -10.382232666015625
    8. ' ==' → logprob: -10.632232666015625
    9. '==' → logprob: -11.007232666015625
    10. '():' → logprob: -11.382232666015625

Token 60: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1587481051683426
    2. ' sys' → logprob: -2.533748149871826
    3. '   ' → logprob: -3.033748149871826
    4. 'print' (adapté à ' print') → logprob: -4.033748149871826
    5. '       ' → logprob: -7.158748149871826
    6. 'sys' → logprob: -7.533748149871826
    7. '    ' → logprob: -9.533747673034668
    8. ' ' → logprob: -10.158747673034668
    9. '	sys' → logprob: -10.158747673034668
    10. '	print' → logprob: -10.533747673034668

Token 61: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14333714544773102
    2. '(x' → logprob: -2.0183372497558594
    3. ' (' → logprob: -7.893337249755859
    4. '('' → logprob: -8.64333724975586
    5. '((' → logprob: -10.26833724975586
    6. '("("' → logprob: -10.51833724975586
    7. '("' → logprob: -11.26833724975586
    8. '(
' → logprob: -11.26833724975586
    9. '()' → logprob: -11.51833724975586
    10. '(f' → logprob: -11.76833724975586

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -13.500003814697266
    3. '   ' → logprob: -13.625003814697266
    4. ')
' → logprob: -14.125003814697266
    5. '))' → logprob: -14.875003814697266
    6. '())' → logprob: -16.250003814697266
    7. '')' → logprob: -16.250003814697266
    8. '`)' → logprob: -16.625003814697266
    9. ')}}' → logprob: -16.750003814697266
    10. ')return' → logprob: -17.000003814697266

Token 63: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003833213821053505
    2. 'main' → logprob: -6.378833293914795
    3. ' debug' → logprob: -7.378833293914795
    4. ' is' → logprob: -7.628833293914795
    5. ' solve' → logprob: -8.253832817077637
    6. ' factorial' → logprob: -9.003832817077637
    7. ' reverse' → logprob: -9.253832817077637
    8. ' test' → logprob: -9.253832817077637
    9. ' max' → logprob: -9.378832817077637
    10. ' check' → logprob: -9.878832817077637

Token 65: '_n' (ID: 2170)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.543184220790863
    2. '_line' → logprob: -1.1681842803955078
    3. '()' → logprob: -2.543184280395508
    4. '_input' → logprob: -4.043184280395508
    5. 'int' → logprob: -5.418184280395508
    6. '_string' → logprob: -6.793184280395508
    7. 'ln' → logprob: -6.918184280395508
    8. 'lines' → logprob: -7.043184280395508
    9. '():' → logprob: -7.043184280395508
    10. 'Line' → logprob: -7.543184280395508

Token 66: '_and' (ID: 18645)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.047853074967861176
    2. 'um' → logprob: -3.6728529930114746
    3. 'ame' → logprob: -4.422852993011475
    4. 'umber' → logprob: -5.547852993011475
    5. '_lines' → logprob: -6.547852993011475
    6. '_' → logprob: -6.922852993011475
    7. '())' → logprob: -7.297852993011475
    8. '(' → logprob: -7.672852993011475
    9. 'umbers' → logprob: -7.922852993011475
    10. 'ames' → logprob: -7.922852993011475

Token 67: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.5358802080154419
    2. '_list' → logprob: -1.410880208015442
    3. '_arr' → logprob: -2.5358800888061523
    4. '_l' → logprob: -3.9108800888061523
    5. 'arr' → logprob: -4.160880088806152
    6. '_in' → logprob: -4.535880088806152
    7. '_array' → logprob: -5.035880088806152
    8. '_k' → logprob: -5.160880088806152
    9. '_lst' → logprob: -5.160880088806152
    10. '_values' → logprob: -5.285880088806152

Token 68: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002896286314353347
    2. '()' → logprob: -5.877896308898926
    3. '():
' → logprob: -10.252896308898926
    4. ' ():' → logprob: -11.127896308898926
    5. '`()' → logprob: -11.377896308898926
    6. '(' → logprob: -12.002896308898926
    7. ' ()' → logprob: -12.252896308898926
    8. '()(' → logprob: -12.752896308898926
    9. '```' → logprob: -12.877896308898926
    10. '();' → logprob: -13.127896308898926

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7729658540920354e-05
    2. 'return' → logprob: -11.250027656555176
    3. ' return' → logprob: -12.000027656555176
    4. '       ' → logprob: -13.250027656555176
    5. '    
' → logprob: -13.500027656555176
    6. '```' → logprob: -13.750027656555176
    7. '()' → logprob: -13.875027656555176
    8. 'n' → logprob: -14.375027656555176
    9. '	return' → logprob: -14.500027656555176
    10. '    ' → logprob: -14.500027656555176

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28759101033210754
    2. 'n' → logprob: -1.9125909805297852
    3. 'in' → logprob: -3.287590980529785
    4. ' return' → logprob: -3.412590980529785
    5. '   ' → logprob: -4.037590980529785
    6. 'm' → logprob: -5.287590980529785
    7. 'a' → logprob: -5.662590980529785
    8. ' n' → logprob: -6.412590980529785
    9. 'line' → logprob: -6.787590980529785
    10. 'inp' → logprob: -7.537590980529785

Token 71: ' inm' (ID: 25357)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.9503482580184937
    2. 'in' → logprob: -1.2003482580184937
    3. 'tuple' → logprob: -1.8253482580184937
    4. ' map' → logprob: -2.575348377227783
    5. ' in' → logprob: -3.575348377227783
    6. 'map' → logprob: -3.825348377227783
    7. ' list' → logprob: -4.075348377227783
    8. 'list' → logprob: -5.575348377227783
    9. ' ' → logprob: -6.700348377227783
    10. ' inm' → logprob: -6.950348377227783

Token 72: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0683535037969705e-05
    2. '()
' → logprob: -12.50001049041748
    3. '(' → logprob: -13.00001049041748
    4. ' ()' → logprob: -13.37501049041748
    5. '()<' → logprob: -14.25001049041748
    6. '()]' → logprob: -14.50001049041748
    7. '()(' → logprob: -15.00001049041748
    8. '()

' → logprob: -15.25001049041748
    9. '()\' → logprob: -15.37501049041748
    10. '`()' → logprob: -15.50001049041748

Token 73: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01602369174361229
    2. ' solve' → logprob: -4.891023635864258
    3. ' read' → logprob: -5.266023635864258
    4. 'main' → logprob: -6.391023635864258
    5. ' print' → logprob: -7.891023635864258
    6. ' run' → logprob: -8.266023635864258
    7. ' process' → logprob: -8.516023635864258
    8. '_main' → logprob: -9.016023635864258
    9. 'solve' → logprob: -9.266023635864258
    10. '_' → logprob: -9.391023635864258

Token 75: '_list' (ID: 4162)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.158810555934906
    2. '_' → logprob: -2.158810615539551
    3. '_line' → logprob: -4.408810615539551
    4. '_list' → logprob: -5.533810615539551
    5. '_array' → logprob: -6.533810615539551
    6. '()' → logprob: -6.533810615539551
    7. '_a' → logprob: -6.658810615539551
    8. '_x' → logprob: -6.658810615539551
    9. '_int' → logprob: -6.783810615539551
    10. '_s' → logprob: -7.283810615539551

Token 76: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14387938380241394
    2. '():' → logprob: -2.0188794136047363
    3. '(n' → logprob: -8.268878936767578
    4. '():
' → logprob: -8.518878936767578
    5. '()(' → logprob: -8.768878936767578
    6. ' ()' → logprob: -9.018878936767578
    7. '()">' → logprob: -9.518878936767578
    8. '()<<' → logprob: -9.768878936767578
    9. '()>' → logprob: -10.143878936767578
    10. '(' → logprob: -10.143878936767578

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015196068212389946
    2. ')' → logprob: -4.390195846557617
    3. '()' → logprob: -6.015195846557617
    4. '():' → logprob: -8.765195846557617
    5. '):
' → logprob: -9.640195846557617
    6. ' ):' → logprob: -11.640195846557617
    7. ':' → logprob: -13.265195846557617
    8. '(' → logprob: -13.390195846557617
    9. '=' → logprob: -13.765195846557617
    10. '):

' → logprob: -14.140195846557617

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005801517516374588
    2. '()' → logprob: -6.380801677703857
    3. ':' → logprob: -6.880801677703857
    4. '[]' → logprob: -7.505801677703857
    5. '():' → logprob: -7.630801677703857
    6. '():
' → logprob: -7.630801677703857
    7. 'return' → logprob: -7.755801677703857
    8. ' return' → logprob: -8.3808012008667
    9. '(n' → logprob: -9.3808012008667
    10. '=[]' → logprob: -9.3808012008667

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018756506964564323
    2. ' return' → logprob: -4.01875638961792
    3. '   ' → logprob: -8.018756866455078
    4. '[' → logprob: -8.768756866455078
    5. 'list' → logprob: -9.768756866455078
    6. ' in' → logprob: -11.018756866455078
    7. '[]' → logprob: -11.018756866455078
    8. 'in' → logprob: -11.143756866455078
    9. '	return' → logprob: -12.768756866455078
    10. 'l' → logprob: -13.018756866455078

Token 80: ' in' (ID: 306)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.9200318455696106
    2. '[in' → logprob: -1.4200317859649658
    3. ' [' → logprob: -1.5450317859649658
    4. 'list' → logprob: -2.420031785964966
    5. ' list' → logprob: -3.670031785964966
    6. '[' → logprob: -4.045032024383545
    7. 'in' → logprob: -4.545032024383545
    8. '[l' → logprob: -6.420032024383545
    9. ' in' → logprob: -7.045032024383545
    10. '[int' → logprob: -7.170032024383545

Token 81: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.65707261255011e-06
    2. '()' → logprob: -12.625008583068848
    3. '(' → logprob: -13.500008583068848
    4. '(n' → logprob: -14.125008583068848
    5. '()
' → logprob: -14.250008583068848
    6. '(l' → logprob: -14.750008583068848
    7. 'put' → logprob: -14.750008583068848
    8. 'list' → logprob: -15.125008583068848
    9. 't' → logprob: -15.500008583068848
    10. '().' → logprob: -15.625008583068848

Token 82: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020581886637955904
    2. '(n' → logprob: -6.627058029174805
    3. '(' → logprob: -7.252058029174805
    4. ' ()' → logprob: -11.627058029174805
    5. '()(' → logprob: -12.127058029174805
    6. '()
' → logprob: -12.752058029174805
    7. '().' → logprob: -13.377058029174805
    8. '()

' → logprob: -14.252058029174805
    9. '()`' → logprob: -14.502058029174805
    10. '()]' → logprob: -14.627058029174805

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007961481809616089
    2. '\' → logprob: -5.882961273193359
    3. '<|end|>' → logprob: -6.257961273193359
    4. '
' → logprob: -6.632961273193359
    5. '\n' → logprob: -6.757961273193359
    6. '```' → logprob: -8.25796127319336
    7. '#' → logprob: -8.63296127319336
    8. 'n' → logprob: -9.38296127319336
    9. '    
' → logprob: -10.00796127319336
    10. '<|end|>' → logprob: -10.50796127319336

Token 84: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15618549287319183
    2. ' read' → logprob: -2.6561853885650635
    3. ' solve' → logprob: -2.7811853885650635
    4. 'main' → logprob: -5.031185626983643
    5. 'read' → logprob: -6.156185626983643
    6. 'solve' → logprob: -6.531185626983643
    7. ' process' → logprob: -7.156185626983643
    8. ' print' → logprob: -7.781185626983643
    9. ' solution' → logprob: -8.656185150146484
    10. ' find' → logprob: -9.281185150146484

Token 85: '_h' (ID: 3434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8950884342193604
    2. '_array' → logprob: -1.6450884342193604
    3. '()' → logprob: -1.7700884342193604
    4. '_data' → logprob: -2.2700884342193604
    5. '(' → logprob: -3.0200884342193604
    6. '_list' → logprob: -4.645088195800781
    7. '_map' → logprob: -4.645088195800781
    8. '(n' → logprob: -4.770088195800781
    9. '_(' → logprob: -5.145088195800781
    10. '_arrays' → logprob: -5.270088195800781

Token 86: '():
' (ID: 8595)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.6924053430557251
    2. 'e' → logprob: -1.067405343055725
    3. 'eight' → logprob: -2.0674052238464355
    4. 'ist' → logprob: -4.3174052238464355
    5. 'eat' → logprob: -5.5674052238464355
    6. '(' → logprob: -6.3174052238464355
    7. 't' → logprob: -6.3174052238464355
    8. '()' → logprob: -7.0674052238464355
    9. 'ead' → logprob: -7.1924052238464355
    10. '(e' → logprob: -7.3174052238464355

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32244259119033813
    2. '{}' → logprob: -1.6974425315856934
    3. '[]' → logprob: -3.5724425315856934
    4. ' {}' → logprob: -3.8224425315856934
    5. 'return' → logprob: -3.8224425315856934
    6. ' return' → logprob: -4.947442531585693
    7. '{' → logprob: -5.197442531585693
    8. ' []' → logprob: -6.572442531585693
    9. ' {' → logprob: -6.697442531585693
    10. '()' → logprob: -6.822442531585693

Token 88: ' return' (ID: 622)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3512323796749115
    2. 'return' (adapté à ' return') → logprob: -2.4762322902679443
    3. '{' → logprob: -2.9762322902679443
    4. 'h' → logprob: -3.1012322902679443
    5. '[]' → logprob: -3.1012322902679443
    6. ' {}' → logprob: -3.8512322902679443
    7. '   ' → logprob: -3.9762322902679443
    8. '[' → logprob: -4.851232528686523
    9. ' return' → logprob: -5.351232528686523
    10. ' {' → logprob: -5.976232528686523

Token 89: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.06941096484661102
    2. '[]' → logprob: -2.944411039352417
    3. 'dict' → logprob: -5.194410800933838
    4. '[' → logprob: -5.819410800933838
    5. ' {}' → logprob: -5.944410800933838
    6. '{' → logprob: -5.944410800933838
    7. ' []' → logprob: -8.069411277770996
    8. 'default' → logprob: -9.194411277770996
    9. ' defaultdict' → logprob: -9.819411277770996
    10. ' dict' → logprob: -10.569411277770996

Token 90: '0' (ID: 15)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0007597190560773015
    2. ' }' → logprob: -8.125760078430176
    3. '0' → logprob: -8.750760078430176
    4. 'i' → logprob: -8.875760078430176
    5. 'k' → logprob: -10.000760078430176
    6. ''}' → logprob: -10.500760078430176
    7. '[]}' → logprob: -10.625760078430176
    8. '}
' → logprob: -11.250760078430176
    9. ''' → logprob: -11.875760078430176
    10. '"}' → logprob: -12.375760078430176

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.123899558791891e-05
    2. ' :' → logprob: -10.12507152557373
    3. '}' → logprob: -11.12507152557373
    4. ':-' → logprob: -11.75007152557373
    5. ':{}' → logprob: -13.00007152557373
    6. ':true' → logprob: -14.00007152557373
    7. ':int' → logprob: -14.75007152557373
    8. ':i' → logprob: -14.87507152557373
    9. ':''' → logprob: -14.87507152557373
    10. '1' → logprob: -15.00007152557373

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2237624228000641
    2. ' ' → logprob: -2.3487625122070312
    3. '1' → logprob: -3.0987625122070312
    4. 'float' → logprob: -3.7237625122070312
    5. '[]' → logprob: -4.473762512207031
    6. '[]}' → logprob: -4.973762512207031
    7. '-' → logprob: -5.473762512207031
    8. '[' → logprob: -5.973762512207031
    9. ' float' → logprob: -6.098762512207031
    10. 'True' → logprob: -6.348762512207031

Token 93: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13213007152080536
    2. '1' → logprob: -3.0071301460266113
    3. '-' → logprob: -3.6321301460266113
    4. '[]' → logprob: -3.8821301460266113
    5. 'float' → logprob: -4.757130146026611
    6. '[' → logprob: -5.257130146026611
    7. '[]}' → logprob: -5.257130146026611
    8. 'True' → logprob: -5.882130146026611
    9. 'None' → logprob: -6.757130146026611
    10. 'False' → logprob: -7.007130146026611

Token 94: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07937043905258179
    2. ',' → logprob: -2.5793704986572266
    3. ' }' → logprob: -7.704370498657227
    4. '   ' → logprob: -11.954370498657227
    5. '}
' → logprob: -12.329370498657227
    6. '},' → logprob: -12.829370498657227
    7. ',
' → logprob: -12.829370498657227
    8. ' ,' → logprob: -13.204370498657227
    9. ' ' → logprob: -13.329370498657227
    10. ',...' → logprob: -13.454370498657227

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004170171916484833
    2. '
' → logprob: -6.379169940948486
    3. '<|end|>' → logprob: -7.129169940948486
    4. 'class' → logprob: -7.754169940948486
    5. '#' → logprob: -7.879169940948486
    6. '<|end|>' → logprob: -8.504170417785645
    7. '\' → logprob: -8.879170417785645
    8. ' ' → logprob: -9.254170417785645
    9. ')' → logprob: -10.004170417785645
    10. '```' → logprob: -10.254170417785645

Token 96: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.72829270362854
    2. ' solve' → logprob: -2.22829270362854
    3. ' h' → logprob: -2.35329270362854
    4. ' main' → logprob: -2.72829270362854
    5. ' dfs' → logprob: -3.60329270362854
    6. ' heap' → logprob: -3.85329270362854
    7. ' def' → logprob: -3.97829270362854
    8. 'h' → logprob: -4.103292465209961
    9. ' count' → logprob: -4.228292465209961
    10. ' is' → logprob: -4.478292465209961

Token 97: '_acc' (ID: 35551)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.10352155566215515
    2. '_' → logprob: -3.8535215854644775
    3. '_a' → logprob: -4.353521347045898
    4. '_c' → logprob: -4.478521347045898
    5. '_m' → logprob: -4.603521347045898
    6. '_s' → logprob: -4.853521347045898
    7. '_f' → logprob: -4.978521347045898
    8. '_d' → logprob: -4.978521347045898
    9. '_v' → logprob: -5.853521347045898
    10. '_p' → logprob: -5.853521347045898

Token 98: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.49328839778900146
    2. 'um' → logprob: -1.3682883977890015
    3. 'umul' → logprob: -2.868288516998291
    4. 'umulator' → logprob: -2.993288516998291
    5. '()' → logprob: -4.493288516998291
    6. 'umulative' → logprob: -4.743288516998291
    7. 'umulate' → logprob: -5.118288516998291
    8. '_' → logprob: -7.368288516998291
    9. '():
' → logprob: -7.743288516998291
    10. 'u' → logprob: -8.368288040161133

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01658744551241398
    2. '):
' → logprob: -4.391587257385254
    3. ')' → logprob: -5.516587257385254
    4. '=' → logprob: -11.391587257385254
    5. ':' → logprob: -11.516587257385254
    6. ',' → logprob: -11.766587257385254
    7. ' ):' → logprob: -12.141587257385254
    8. '+' → logprob: -12.266587257385254
    9. '):

' → logprob: -12.891587257385254
    10. '):
' → logprob: -13.016587257385254

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006980192265473306
    2. 'return' → logprob: -8.12569808959961
    3. ' return' → logprob: -9.50069808959961
    4. '[' → logprob: -9.50069808959961
    5. '    
' → logprob: -9.62569808959961
    6. '():
' → logprob: -10.12569808959961
    7. ':' → logprob: -10.62569808959961
    8. '(n' → logprob: -10.87569808959961
    9. ':
' → logprob: -11.00069808959961
    10. '):
' → logprob: -11.25069808959961

Token 101: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6707193851470947
    2. '[' → logprob: -1.4207193851470947
    3. '   ' → logprob: -1.4207193851470947
    4. ' return' → logprob: -5.295719146728516
    5. ' [' → logprob: -7.920719146728516
    6. '[n' → logprob: -9.545719146728516
    7. ' ' → logprob: -10.795719146728516
    8. '[]' → logprob: -10.920719146728516
    9. '{' → logprob: -11.170719146728516
    10. '{}' → logprob: -11.170719146728516

Token 102: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026598090305924416
    2. ' [' → logprob: -3.6515979766845703
    3. '{' → logprob: -8.77659797668457
    4. '[n' → logprob: -9.27659797668457
    5. '   ' → logprob: -10.90159797668457
    6. '([' → logprob: -11.40159797668457
    7. ' ' → logprob: -12.40159797668457
    8. '0' → logprob: -12.77659797668457
    9. '[int' → logprob: -12.90159797668457
    10. '{}' → logprob: -13.15159797668457

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043007321073673666
    2. '1' → logprob: -7.875430107116699
    3. ' ' → logprob: -10.2504301071167
    4. '[' → logprob: -12.2504301071167
    5. '-' → logprob: -13.1254301071167
    6. '(' → logprob: -13.1254301071167
    7. ']' → logprob: -13.3754301071167
    8. 'False' → logprob: -13.7504301071167
    9. '{' → logprob: -14.5004301071167
    10. 'n' → logprob: -14.5004301071167

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002514539286494255
    2. ']*(' → logprob: -6.252514362335205
    3. ' for' → logprob: -7.877514362335205
    4. ']*' → logprob: -9.002514839172363
    5. 'for' → logprob: -9.502514839172363
    6. '   ' → logprob: -12.752514839172363
    7. ' ]' → logprob: -13.002514839172363
    8. ']+' → logprob: -13.127514839172363
    9. '(n' → logprob: -14.252514839172363
    10. '+' → logprob: -15.502514839172363

Token 105: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05087902769446373
    2. ' *' → logprob: -3.6758790016174316
    3. '*(' → logprob: -3.8008790016174316
    4. '*n' → logprob: -6.300879001617432
    5. '   ' → logprob: -10.30087947845459
    6. '*[' → logprob: -10.55087947845459
    7. '+' → logprob: -11.30087947845459
    8. '(n' → logprob: -11.42587947845459
    9. ' *(' → logprob: -13.17587947845459
    10. ' ' → logprob: -13.17587947845459

Token 106: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005761218722909689
    2. 'n' → logprob: -5.88076114654541
    3. '(' → logprob: -6.25576114654541
    4. ' (' → logprob: -6.88076114654541
    5. ' n' → logprob: -12.38076114654541
    6. '   ' → logprob: -15.63076114654541
    7. '[n' → logprob: -15.75576114654541
    8. ' ' → logprob: -15.75576114654541
    9. '(
' → logprob: -16.005762100219727
    10. ',n' → logprob: -16.505762100219727

Token 107: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5780261754989624
    2. '(n' → logprob: -0.8280261754989624
    3. ' (' → logprob: -6.828026294708252
    4. '(' → logprob: -7.578026294708252
    5. ' n' → logprob: -7.703026294708252
    6. '   ' → logprob: -10.453025817871094
    7. ')n' → logprob: -13.078025817871094
    8. '	n' → logprob: -13.328025817871094
    9. ' ' → logprob: -13.453025817871094
    10. '[n' → logprob: -13.953025817871094

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012041617883369327
    2. ' +' → logprob: -6.751204013824463
    3. ')' → logprob: -10.626204490661621
    4. '<|end|>' → logprob: -11.751204490661621
    5. '+
' → logprob: -14.376204490661621
    6. '+)' → logprob: -15.126204490661621
    7. '<|end|>' → logprob: -15.126204490661621
    8. ')+' → logprob: -16.251203536987305
    9. '1' → logprob: -16.501203536987305
    10. '+n' → logprob: -16.501203536987305

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006400577258318663
    2. ' ' → logprob: -5.2564005851745605
    3. '2' → logprob: -6.7564005851745605
    4. '   ' → logprob: -13.381400108337402
    5. '  ' → logprob: -14.381400108337402
    6. '7' → logprob: -16.13140106201172
    7. '```' → logprob: -16.63140106201172
    8. '5' → logprob: -17.00640106201172
    9. '10' → logprob: -17.00640106201172
    10. '3' → logprob: -17.00640106201172

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. '2' → logprob: -7.875380039215088
    3. ' ' → logprob: -16.12537956237793
    4. '10' → logprob: -17.37537956237793
    5. '3' → logprob: -17.62537956237793
    6. '   ' → logprob: -17.62537956237793
    7. '5' → logprob: -17.87537956237793
    8. '```' → logprob: -18.37537956237793
    9. '7' → logprob: -18.43787956237793
    10. '１' → logprob: -18.62537956237793

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -16.375001907348633
    5. ')return' → logprob: -17.250001907348633
    6. '}' → logprob: -17.500001907348633
    7. '))' → logprob: -18.000001907348633
    8. ')

' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '),' → logprob: -18.125001907348633

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08129756897687912
    2. '<|end|>' → logprob: -2.5812976360321045
    3. '
' → logprob: -6.706297397613525
    4. '<|end|>' → logprob: -7.206297397613525
    5. '\' → logprob: -8.706297874450684
    6. '```' → logprob: -9.206297874450684
    7. '#' → logprob: -9.956297874450684
    8. '\n' → logprob: -10.581297874450684
    9. 'ndef' → logprob: -10.956297874450684
    10. '

' → logprob: -11.331297874450684

Token 113: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7688887715339661
    2. 'solve' → logprob: -1.6438887119293213
    3. ' main' → logprob: -2.0188887119293213
    4. 'count' → logprob: -3.0188887119293213
    5. 'prefix' → logprob: -3.5188887119293213
    6. ' solve' → logprob: -3.8938887119293213
    7. 'acc' → logprob: -3.8938887119293213
    8. 'read' → logprob: -4.1438889503479
    9. 'process' → logprob: -4.3938889503479
    10. 'pow' → logprob: -4.8938889503479

Token 114: '_acc' (ID: 35551)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.129110336303711
    2. '_prefix' → logprob: -1.379110336303711
    3. '_hash' → logprob: -1.879110336303711
    4. '_acc' → logprob: -2.504110336303711
    5. '_x' → logprob: -2.754110336303711
    6. '(' → logprob: -3.254110336303711
    7. '_sum' → logprob: -3.504110336303711
    8. '(n' → logprob: -4.254110336303711
    9. '_sub' → logprob: -5.004110336303711
    10. '(x' → logprob: -5.379110336303711

Token 115: '_and' (ID: 18645)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03040868043899536
    2. '(acc' → logprob: -4.15540885925293
    3. '(' → logprob: -4.40540885925293
    4. '(arr' → logprob: -6.65540885925293
    5. '(a' → logprob: -8.28040885925293
    6. '(prefix' → logprob: -8.78040885925293
    7. ' (' → logprob: -9.65540885925293
    8. '(s' → logprob: -9.78040885925293
    9. '((' → logprob: -10.15540885925293
    10. '(nums' → logprob: -10.40540885925293

Token 116: '_h' (ID: 3434)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.320863962173462
    2. 'count' → logprob: -1.445863962173462
    3. 'freq' → logprob: -2.195863962173462
    4. 'cnt' → logprob: -2.320863962173462
    5. 'counts' → logprob: -2.820863962173462
    6. 'hash' → logprob: -3.570863962173462
    7. 'init' → logprob: -3.695863962173462
    8. 'dp' → logprob: -3.945863962173462
    9. 'res' → logprob: -4.070863723754883
    10. 'acc' → logprob: -4.570863723754883

Token 117: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002493256703019142
    2. '(' → logprob: -6.002493381500244
    3. ' (' → logprob: -11.752492904663086
    4. '(x' → logprob: -12.752492904663086
    5. '():' → logprob: -13.502492904663086
    6. '(a' → logprob: -13.877492904663086
    7. '((' → logprob: -14.127492904663086
    8. '(N' → logprob: -14.502492904663086
    9. '(
' → logprob: -14.752492904663086
    10. '(s' → logprob: -14.877492904663086

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5945373773574829
    2. '):' → logprob: -0.9695373773574829
    3. ',n' → logprob: -3.3445372581481934
    4. '):
' → logprob: -3.4695372581481934
    5. '(n' → logprob: -6.594537258148193
    6. '):
' → logprob: -8.344537734985352
    7. ')' → logprob: -8.719537734985352
    8. ',a' → logprob: -8.719537734985352
    9. ' ,' → logprob: -9.094537734985352
    10. '(' → logprob: -9.094537734985352

Token 119: ' n' (ID: 297)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.638956606388092
    2. 'n' → logprob: -1.0139565467834473
    3. 'acc' → logprob: -3.1389565467834473
    4. ' n' → logprob: -3.5139565467834473
    5. ' h' → logprob: -3.6389565467834473
    6. ' acc' → logprob: -5.013956546783447
    7. 'b' → logprob: -6.263956546783447
    8. '   ' → logprob: -7.513956546783447
    9. ')' → logprob: -8.763957023620605
    10. ' b' → logprob: -9.388957023620605

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09696374833583832
    2. '):' → logprob: -2.47196364402771
    3. '):
' → logprob: -4.846963882446289
    4. ' ,' → logprob: -9.971963882446289
    5. '   ' → logprob: -10.346963882446289
    6. ')' → logprob: -10.721963882446289
    7. '):
' → logprob: -11.596963882446289
    8. ',a' → logprob: -11.971963882446289
    9. ',
' → logprob: -12.596963882446289
    10. ',n' → logprob: -12.721963882446289

Token 121: ' m' (ID: 284)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4180102050304413
    2. 'acc' → logprob: -1.5430102348327637
    3. 'DBG' → logprob: -2.6680102348327637
    4. ' acc' → logprob: -3.2930102348327637
    5. ' h' → logprob: -4.543010234832764
    6. ' DBG' → logprob: -5.293010234832764
    7. 'b' → logprob: -6.918010234832764
    8. 'dbg' → logprob: -6.918010234832764
    9. 'ac' → logprob: -7.668010234832764
    10. '   ' → logprob: -7.855510234832764

Token 122: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06854677200317383
    2. ',' → logprob: -2.943546772003174
    3. '):
' → logprob: -4.318546772003174
    4. ')' → logprob: -8.693546295166016
    5. '):
' → logprob: -11.068546295166016
    6. ' ):' → logprob: -11.193546295166016
    7. '   ' → logprob: -11.693546295166016
    8. '):

' → logprob: -12.068546295166016
    9. ':' → logprob: -12.193546295166016
    10. '_' → logprob: -12.693546295166016

Token 123: ' h' (ID: 312)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5482082962989807
    2. 'h' → logprob: -1.423208236694336
    3. 'DBG' → logprob: -1.923208236694336
    4. ' acc' → logprob: -3.923208236694336
    5. ' DBG' → logprob: -5.423208236694336
    6. 'dbg' → logprob: -6.173208236694336
    7. 'ac' → logprob: -6.673208236694336
    8. 'x' → logprob: -6.673208236694336
    9. ' h' → logprob: -6.798208236694336
    10. 'a' → logprob: -7.610708236694336

Token 124: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07430516928434372
    2. ',' → logprob: -2.6993050575256348
    3. '):
' → logprob: -5.574305057525635
    4. ')' → logprob: -7.699305057525635
    5. 's' → logprob: -10.949305534362793
    6. '):

' → logprob: -11.449305534362793
    7. '_,' → logprob: -11.449305534362793
    8. '   ' → logprob: -11.449305534362793
    9. '_' → logprob: -11.574305534362793
    10. ' ):' → logprob: -11.574305534362793

Token 125: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.11457541584968567
    2. ' acc' → logprob: -2.2395753860473633
    3. 'a' → logprob: -7.489575386047363
    4. 'x' → logprob: -7.989575386047363
    5. 'ac' → logprob: -8.364575386047363
    6. '   ' → logprob: -8.614575386047363
    7. 'dp' → logprob: -9.739575386047363
    8. ')' → logprob: -9.864575386047363
    9. ' x' → logprob: -10.114575386047363
    10. 'i' → logprob: -10.114575386047363

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1914798468351364
    2. ',' → logprob: -2.4414799213409424
    3. '):
' → logprob: -2.4414799213409424
    4. ')' → logprob: -9.941479682922363
    5. ' ):' → logprob: -10.066479682922363
    6. '):
' → logprob: -10.441479682922363
    7. '   ' → logprob: -10.691479682922363
    8. ',a' → logprob: -10.941479682922363
    9. '):

' → logprob: -11.066479682922363
    10. ' ,' → logprob: -11.691479682922363

Token 127: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010212261229753494
    2. '):' → logprob: -5.135212421417236
    3. '   ' → logprob: -6.135212421417236
    4. ':
' → logprob: -6.635212421417236
    5. ' :' → logprob: -8.260211944580078
    6. '():' → logprob: -8.635211944580078
    7. '(a' → logprob: -9.010211944580078
    8. ',' → logprob: -9.385211944580078
    9. '(x' → logprob: -9.760211944580078
    10. '):
' → logprob: -10.135211944580078

Token 128: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043417491018772125
    2. ' for' → logprob: -3.793417453765869
    3. 'for' (adapté à ' for') → logprob: -3.918417453765869
    4. 'acc' → logprob: -10.168417930603027
    5. ' i' → logprob: -11.668417930603027
    6. ' acc' → logprob: -11.793417930603027
    7. '
' → logprob: -11.793417930603027
    8. '    
' → logprob: -11.918417930603027
    9. '	for' → logprob: -12.043417930603027
    10. 'i' → logprob: -12.543417930603027

Token 129: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007643424905836582
    2. 'i' → logprob: -4.882643222808838
    3. '_i' → logprob: -11.507643699645996
    4. '	i' → logprob: -11.632643699645996
    5. '_' → logprob: -12.007643699645996
    6. ' ' → logprob: -12.382643699645996
    7. ' _' → logprob: -13.507643699645996
    8. ' x' → logprob: -13.757643699645996
    9. ' ' → logprob: -14.007643699645996
    10. '(i' → logprob: -14.507643699645996

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04873531684279442
    2. 'in' → logprob: -3.0487353801727295
    3. ' ' → logprob: -9.048735618591309
    4. '   ' → logprob: -11.298735618591309
    5. ',' → logprob: -11.798735618591309
    6. 'n' → logprob: -12.923735618591309
    7. '_' → logprob: -13.048735618591309
    8. '  ' → logprob: -13.048735618591309
    9. '	in' → logprob: -14.173735618591309
    10. '0' → logprob: -14.673735618591309

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002835780382156372
    2. ' range' → logprob: -5.877835750579834
    3. '(range' → logprob: -11.127836227416992
    4. '   ' → logprob: -11.627836227416992
    5. ' ' → logprob: -12.502836227416992
    6. 'ange' → logprob: -13.377836227416992
    7. '  ' → logprob: -14.002836227416992
    8. '	range' → logprob: -14.627836227416992
    9. '
' → logprob: -15.627836227416992
    10. 'in' → logprob: -16.252836227416992

Token 132: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31327512860298157
    2. '(n' → logprob: -1.3132750988006592
    3. 'n' → logprob: -12.313275337219238
    4. '1' → logprob: -12.813275337219238
    5. '(m' → logprob: -13.313275337219238
    6. '   ' → logprob: -13.688275337219238
    7. '(len' → logprob: -13.813275337219238
    8. '(
' → logprob: -13.938275337219238
    9. ' (' → logprob: -14.438275337219238
    10. ' ' → logprob: -14.938275337219238

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012723187915980816
    2. '):
' → logprob: -4.387722969055176
    3. ' ):' → logprob: -8.637722969055176
    4. '   ' → logprob: -10.762722969055176
    5. ':' → logprob: -12.262722969055176
    6. '+' → logprob: -13.012722969055176
    7. '-' → logprob: -13.262722969055176
    8. '):
' → logprob: -13.512722969055176
    9. ')' → logprob: -14.137722969055176
    10. '=' → logprob: -14.262722969055176

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013885273598134518
    2. '   ' → logprob: -4.888885498046875
    3. ' x' → logprob: -5.388885498046875
    4. ',' → logprob: -7.388885498046875
    5. ' acc' → logprob: -8.388885498046875
    6. ':' → logprob: -9.013885498046875
    7. 'x' → logprob: -9.513885498046875
    8. '+' → logprob: -9.638885498046875
    9. '    ' → logprob: -9.638885498046875
    10. '<|end|>' → logprob: -9.888885498046875

Token 135: ' update' (ID: 4027)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.2849031388759613
    2. '   ' → logprob: -2.034903049468994
    3. 'acc' → logprob: -2.409903049468994
    4. ' x' → logprob: -4.784903049468994
    5. 'x' → logprob: -5.409903049468994
    6. ' h' → logprob: -5.659903049468994
    7. '       ' → logprob: -5.909903049468994
    8. 'h' → logprob: -6.284903049468994
    9. ' if' → logprob: -6.409903049468994
    10. ' a' → logprob: -7.034903049468994

Token 136: '_acc' (ID: 35551)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.320932388305664
    2. 'd' → logprob: -1.695932388305664
    3. ' =' → logprob: -2.320932388305664
    4. '_value' → logprob: -2.445932388305664
    5. 'h' → logprob: -3.195932388305664
    6. '_h' → logprob: -3.195932388305664
    7. '(h' → logprob: -3.320932388305664
    8. '_key' → logprob: -3.570932388305664
    9. 'acc' → logprob: -3.695932388305664
    10. '_index' → logprob: -3.695932388305664

Token 137: '_and' (ID: 18645)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.41293975710868835
    2. '(a' → logprob: -1.1629397869110107
    3. '(i' → logprob: -4.162939548492432
    4. '(' → logprob: -5.537939548492432
    5. 'acc' → logprob: -5.537939548492432
    6. '(h' → logprob: -8.16294002532959
    7. ' =' → logprob: -8.28794002532959
    8. '_acc' → logprob: -8.41294002532959
    9. '   ' → logprob: -8.53794002532959
    10. '=' → logprob: -8.53794002532959

Token 138: '_h' (ID: 3434)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.226347416639328
    2. '_h' → logprob: -1.6013474464416504
    3. ' h' → logprob: -7.72634744644165
    4. '	h' → logprob: -8.726346969604492
    5. '(h' → logprob: -8.976346969604492
    6. '_' → logprob: -10.226346969604492
    7. ''h' → logprob: -10.851346969604492
    8. '   ' → logprob: -11.101346969604492
    9. '```' → logprob: -11.351346969604492
    10. ' ' → logprob: -11.413846969604492

Token 139: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006667058449238539
    2. '(' → logprob: -5.256667137145996
    3. '(acc' → logprob: -7.381667137145996
    4. '(i' → logprob: -7.756667137145996
    5. ' (' → logprob: -8.006667137145996
    6. '   ' → logprob: -10.631667137145996
    7. '((' → logprob: -11.631667137145996
    8. '(
' → logprob: -12.006667137145996
    9. 'a' → logprob: -13.131667137145996
    10. ' ' → logprob: -13.256667137145996

Token 140: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6386639475822449
    2. ',' → logprob: -0.7636639475822449
    3. ',i' → logprob: -5.8886637687683105
    4. '[' → logprob: -6.0136637687683105
    5. ' ,' → logprob: -8.013664245605469
    6. ')[' → logprob: -9.013664245605469
    7. ')' → logprob: -9.138664245605469
    8. '   ' → logprob: -9.513664245605469
    9. ',[' → logprob: -10.388664245605469
    10. '```' → logprob: -10.388664245605469

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04390624538064003
    2. ' i' → logprob: -3.1689062118530273
    3. '[i' → logprob: -7.668906211853027
    4. '   ' → logprob: -9.293906211853027
    5. '<|end|>' → logprob: -9.543906211853027
    6. 'n' → logprob: -9.793906211853027
    7. ')' → logprob: -9.918906211853027
    8. '
' → logprob: -10.043906211853027
    9. ' ' → logprob: -10.668906211853027
    10. ' n' → logprob: -10.793906211853027

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010956883197650313
    2. ' ,' → logprob: -6.876095771789551
    3. '   ' → logprob: -10.25109577178955
    4. ')' → logprob: -11.50109577178955
    5. ',m' → logprob: -12.00109577178955
    6. ',n' → logprob: -13.00109577178955
    7. '),' → logprob: -13.12609577178955
    8. '       ' → logprob: -13.25109577178955
    9. '+' → logprob: -14.25109577178955
    10. ' ' → logprob: -14.50109577178955

Token 143: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30582886934280396
    2. 'h' → logprob: -1.6808288097381592
    3. ' m' → logprob: -3.305828809738159
    4. 'n' → logprob: -3.805828809738159
    5. ' h' → logprob: -4.555829048156738
    6. 'acc' → logprob: -5.680829048156738
    7. ' n' → logprob: -5.805829048156738
    8. '   ' → logprob: -7.305829048156738
    9. ' acc' → logprob: -8.055829048156738
    10. ' ' → logprob: -8.555829048156738

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001370357465930283
    2. ' ,' → logprob: -6.751370429992676
    3. ',h' → logprob: -8.751370429992676
    4. '   ' → logprob: -10.501370429992676
    5. '       ' → logprob: -11.751370429992676
    6. ')' → logprob: -12.501370429992676
    7. '),' → logprob: -14.751370429992676
    8. 'h' → logprob: -15.001370429992676
    9. ' ' → logprob: -15.001370429992676
    10. ',
' → logprob: -15.001370429992676

Token 145: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4759080708026886
    2. ' h' → logprob: -0.9759080410003662
    3. 'acc' → logprob: -6.975908279418945
    4. ' acc' → logprob: -7.225908279418945
    5. ' ' → logprob: -9.850908279418945
    6. '   ' → logprob: -10.475908279418945
    7. ')' → logprob: -10.725908279418945
    8. '
' → logprob: -11.100908279418945
    9. '	h' → logprob: -11.475908279418945
    10. '    ' → logprob: -11.850908279418945

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002682496269699186
    2. ' ,' → logprob: -8.25026798248291
    3. ',
' → logprob: -12.75026798248291
    4. '   ' → logprob: -12.87526798248291
    5. ')' → logprob: -14.25026798248291
    6. '       ' → logprob: -14.50026798248291
    7. 'acc' → logprob: -16.250268936157227
    8. '),' → logprob: -16.500268936157227
    9. '(acc' → logprob: -17.000268936157227
    10. ' ' → logprob: -17.250268936157227

Token 147: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2519461214542389
    2. ' acc' → logprob: -1.5019460916519165
    3. '   ' → logprob: -11.501946449279785
    4. '	acc' → logprob: -13.501946449279785
    5. 'ac' → logprob: -13.626946449279785
    6. '(acc' → logprob: -13.751946449279785
    7. '       ' → logprob: -14.001946449279785
    8. ' ' → logprob: -14.251946449279785
    9. ')' → logprob: -14.376946449279785
    10. '
' → logprob: -15.251946449279785

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8126592193730175e-05
    2. ')
' → logprob: -10.0000581741333
    3. '   ' → logprob: -11.8750581741333
    4. ' )' → logprob: -12.6250581741333
    5. '       ' → logprob: -14.0000581741333
    6. ',' → logprob: -15.0000581741333
    7. '))' → logprob: -15.2500581741333
    8. ')

' → logprob: -15.8750581741333
    9. ')}' → logprob: -16.250057220458984
    10. ')return' → logprob: -16.375057220458984

Token 149: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4031197130680084
    2. ' acc' → logprob: -1.653119683265686
    3. 'None' → logprob: -2.6531198024749756
    4. ' None' → logprob: -2.7781198024749756
    5. ' ' → logprob: -5.2781195640563965
    6. '<|end|>' → logprob: -6.9031195640563965
    7. '(acc' → logprob: -6.9031195640563965
    8. '  ' → logprob: -8.653120040893555
    9. ' 
' → logprob: -9.278120040893555
    10. ' ' → logprob: -9.403120040893555

Token 152: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.08920695632696152
    2. 'h' → logprob: -2.4642069339752197
    3. ' ' → logprob: -8.83920669555664
    4. 'space' → logprob: -9.46420669555664
    5. ' ' → logprob: -10.96420669555664
    6. ' space' → logprob: -11.21420669555664
    7. '	h' → logprob: -12.96420669555664
    8. ' 
' → logprob: -13.33920669555664
    9. '<|end|>' → logprob: -13.46420669555664
    10. '"' → logprob: -14.08920669555664

Token 154: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15809084475040436
    2. '<|end|>' → logprob: -2.158090829849243
    3. '
' → logprob: -3.533090829849243
    4. '<|end|>' → logprob: -7.408091068267822
    5. ' def' → logprob: -8.158090591430664
    6. '

' → logprob: -8.658090591430664
    7. '  
' → logprob: -9.408090591430664
    8. '\n' → logprob: -9.658090591430664
    9. '```' → logprob: -9.908090591430664
    10. ':def' → logprob: -10.408090591430664

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042261019349098206
    2. '
' → logprob: -3.4172611236572266
    3. '<|end|>' → logprob: -4.792261123657227
    4. '<|end|>' → logprob: -9.417261123657227
    5. '  
' → logprob: -9.917261123657227
    6. ' def' → logprob: -9.917261123657227
    7. '

' → logprob: -10.542261123657227
    8. '    
' → logprob: -10.667261123657227
    9. '\' → logprob: -11.292261123657227
    10. '```' → logprob: -11.667261123657227

Token 156: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5761882662773132
    2. ' update' → logprob: -0.8261882662773132
    3. '_update' → logprob: -8.326188087463379
    4. 'def' → logprob: -13.201188087463379
    5. '(update' → logprob: -13.951188087463379
    6. 'compute' → logprob: -14.451188087463379
    7. ' def' → logprob: -14.576188087463379
    8. '	update' → logprob: -14.701188087463379
    9. 'upd' → logprob: -14.951188087463379
    10. '.update' → logprob: -15.076188087463379

Token 157: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -6.704273118884885e-07
    2. '_ac' → logprob: -14.750000953674316
    3. '_' → logprob: -15.750000953674316
    4. 'acc' → logprob: -16.625
    5. '_a' → logprob: -18.125
    6. '(acc' → logprob: -18.125
    7. ' _' → logprob: -18.625
    8. '```' → logprob: -18.625
    9. '_ACC' → logprob: -18.75
    10. '_ack' → logprob: -19.5

Token 158: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -8.792751032160595e-05
    2. '_' → logprob: -9.50008773803711
    3. '_acc' → logprob: -11.62508773803711
    4. 'and' → logprob: -13.00008773803711
    5. '_(' → logprob: -14.37508773803711
    6. '(' → logprob: -14.62508773803711
    7. ' and' → logprob: -15.37508773803711
    8. ' _' → logprob: -15.62508773803711
    9. '_a' → logprob: -16.25008773803711
    10. '_ac' → logprob: -16.75008773803711

Token 159: '_h' (ID: 3434)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5759585499763489
    2. '_h' → logprob: -0.8259585499763489
    3. '	h' → logprob: -12.200958251953125
    4. ' h' → logprob: -12.575958251953125
    5. '_' → logprob: -12.825958251953125
    6. '(h' → logprob: -13.075958251953125
    7. '-h' → logprob: -14.075958251953125
    8. '```' → logprob: -14.450958251953125
    9. ''h' → logprob: -14.700958251953125
    10. 'def' → logprob: -15.138458251953125

Token 160: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00010926496179308742
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -15.250109672546387
    4. 'a' → logprob: -16.37510871887207
    5. '(x' → logprob: -17.25010871887207
    6. '(
' → logprob: -17.50010871887207
    7. '(acc' → logprob: -18.50010871887207
    8. '   ' → logprob: -19.12510871887207
    9. '```' → logprob: -19.12510871887207
    10. '(i' → logprob: -19.62510871887207

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022213248303160071
    2. ' ,' → logprob: -8.875222206115723
    3. ',i' → logprob: -9.625222206115723
    4. ',a' → logprob: -12.000222206115723
    5. '   ' → logprob: -12.375222206115723
    6. '[i' → logprob: -13.125222206115723
    7. ',
' → logprob: -14.375222206115723
    8. ',[' → logprob: -14.500222206115723
    9. '[' → logprob: -14.625222206115723
    10. ',index' → logprob: -14.625222206115723

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06201552227139473
    2. ' i' → logprob: -2.8120155334472656
    3. 'index' → logprob: -10.937015533447266
    4. 'idx' → logprob: -11.562015533447266
    5. ' ' → logprob: -11.937015533447266
    6. ' idx' → logprob: -12.562015533447266
    7. '   ' → logprob: -12.562015533447266
    8. ' index' → logprob: -12.812015533447266
    9. ')' → logprob: -13.437015533447266
    10. '<|end|>' → logprob: -14.062015533447266

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7888184528565034e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',m' → logprob: -12.3750581741333
    4. '   ' → logprob: -13.3750581741333
    5. ',
' → logprob: -15.6250581741333
    6. ',a' → logprob: -16.250057220458984
    7. 'm' → logprob: -16.375057220458984
    8. '_,' → logprob: -16.750057220458984
    9. '```' → logprob: -16.875057220458984
    10. 'a' → logprob: -17.000057220458984

Token 164: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06203053891658783
    2. ' m' → logprob: -2.812030553817749
    3. 'n' → logprob: -9.937030792236328
    4. ' n' → logprob: -11.812030792236328
    5. ' ' → logprob: -13.437030792236328
    6. ')' → logprob: -13.937030792236328
    7. '<|end|>' → logprob: -13.937030792236328
    8. '   ' → logprob: -14.312030792236328
    9. 'a' → logprob: -14.562030792236328
    10. 'h' → logprob: -14.999530792236328

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.722539834911004e-05
    2. ' ,' → logprob: -9.250097274780273
    3. ',
' → logprob: -14.625097274780273
    4. ',h' → logprob: -14.625097274780273
    5. ',m' → logprob: -17.000097274780273
    6. '   ' → logprob: -17.000097274780273
    7. '‌,' → logprob: -17.625097274780273
    8. ',

' → logprob: -17.875097274780273
    9. ',a' → logprob: -18.000097274780273
    10. '_,' → logprob: -18.000097274780273

Token 166: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12710018455982208
    2. ' h' → logprob: -2.2521002292633057
    3. 'acc' → logprob: -4.752099990844727
    4. ' acc' → logprob: -5.252099990844727
    5. '   ' → logprob: -9.752099990844727
    6. 'a' → logprob: -9.877099990844727
    7. ')' → logprob: -9.877099990844727
    8. ' ' → logprob: -10.252099990844727
    9. 'm' → logprob: -10.752099990844727
    10. ' a' → logprob: -11.127099990844727

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.117345684382599e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ',
' → logprob: -14.125020980834961
    4. '   ' → logprob: -14.250020980834961
    5. '_,' → logprob: -16.37502098083496
    6. '‌,' → logprob: -16.50002098083496
    7. ',a' → logprob: -16.62502098083496
    8. '):' → logprob: -16.62502098083496
    9. ',y' → logprob: -16.62502098083496
    10. ',

' → logprob: -16.75002098083496

Token 168: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6327165961265564
    2. ' acc' → logprob: -0.7577165961265564
    3. '   ' → logprob: -9.507716178894043
    4. ' ' → logprob: -11.257716178894043
    5. '	acc' → logprob: -11.882716178894043
    6. 'ac' → logprob: -12.507716178894043
    7. '  ' → logprob: -12.507716178894043
    8. 'a' → logprob: -12.757716178894043
    9. '(acc' → logprob: -13.132716178894043
    10. '    ' → logprob: -13.257716178894043

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024605413898825645
    2. '):
' → logprob: -3.7746055126190186
    3. ',' → logprob: -6.6496052742004395
    4. '   ' → logprob: -10.149605751037598
    5. '):
' → logprob: -11.399605751037598
    6. ')' → logprob: -11.774605751037598
    7. '):

' → logprob: -12.524605751037598
    8. ' ):' → logprob: -13.399605751037598
    9. ':' → logprob: -14.524605751037598
    10. ' ' → logprob: -16.14960479736328

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017072015907615423
    2. 'mod' → logprob: -8.126707077026367
    3. ' mod' → logprob: -8.126707077026367
    4. '    
' → logprob: -8.626707077026367
    5. ' x' → logprob: -8.876707077026367
    6. 'prev' → logprob: -9.001707077026367
    7. '    ' → logprob: -9.626707077026367
    8. 'acc' → logprob: -9.751707077026367
    9. '
' → logprob: -9.876707077026367
    10. ' prev' → logprob: -10.126707077026367

Token 171: ' acc' (ID: 1259)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.2901502847671509
    2. 'x' → logprob: -1.7901502847671509
    3. 'acc' (adapté à ' acc') → logprob: -1.9151502847671509
    4. 'prev' → logprob: -2.0401501655578613
    5. 'prefix' → logprob: -3.0401501655578613
    6. 'v' → logprob: -3.2901501655578613
    7. '   ' → logprob: -3.4151501655578613
    8. 'key' → logprob: -3.5401501655578613
    9. 'cur' → logprob: -3.6651501655578613
    10. 'mod' → logprob: -3.7901501655578613

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002822231501340866
    2. '[' → logprob: -5.877822399139404
    3. ' [' → logprob: -11.627821922302246
    4. '   ' → logprob: -12.127821922302246
    5. '```' → logprob: -14.252821922302246
    6. '
' → logprob: -15.127821922302246
    7. '[I' → logprob: -15.127821922302246
    8. '\[' → logprob: -15.252821922302246
    9. 'acc' → logprob: -15.377821922302246
    10. '=' → logprob: -15.502821922302246

Token 173: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.317087858915329
    2. '+' → logprob: -1.3170878887176514
    3. ' +' → logprob: -5.942087650299072
    4. '-' → logprob: -7.817087650299072
    5. ' ]' → logprob: -8.06708812713623
    6. ']+' → logprob: -8.19208812713623
    7. ']+=' → logprob: -9.06708812713623
    8. ']=' → logprob: -11.06708812713623
    9. '+]' → logprob: -11.06708812713623
    10. '   ' → logprob: -11.31708812713623

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.000060081481934
    4. '```' → logprob: -15.000060081481934
    5. ']' → logprob: -15.125060081481934
    6. '
' → logprob: -16.31256103515625
    7. ')' → logprob: -16.62506103515625
    8. '=' → logprob: -17.00006103515625
    9. 'def' → logprob: -17.06256103515625
    10. '  ' → logprob: -17.81256103515625

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.125043869018555
    3. '   ' → logprob: -12.875043869018555
    4. '```' → logprob: -14.437543869018555
    5. '
' → logprob: -15.312543869018555
    6. ']' → logprob: -15.937543869018555
    7. '  ' → logprob: -16.250043869018555
    8. '2' → logprob: -17.125043869018555
    9. ',' → logprob: -17.312543869018555
    10. '+' → logprob: -17.312543869018555

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000954098126385361
    2. ' ]' → logprob: -7.0009541511535645
    3. ']=' → logprob: -10.375953674316406
    4. ')' → logprob: -12.000953674316406
    5. ']+=' → logprob: -12.875953674316406
    6. '=' → logprob: -13.125953674316406
    7. ']
' → logprob: -16.250953674316406
    8. ')]' → logprob: -16.500953674316406
    9. ' =' → logprob: -16.500953674316406
    10. '`]' → logprob: -16.625953674316406

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026423871517181
    2. ' =' → logprob: -1.910264253616333
    3. ' +=' → logprob: -10.660264015197754
    4. '+=' → logprob: -11.535264015197754
    5. ' ^=' → logprob: -12.285264015197754
    6. ')' → logprob: -15.160264015197754
    7. ' =(' → logprob: -15.285264015197754
    8. '   ' → logprob: -15.410264015197754
    9. ',' → logprob: -15.535264015197754
    10. '=(' → logprob: -15.660264015197754

Token 178: ' x' (ID: 1215)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0012210593558847904
    2. ' (' → logprob: -6.876221179962158
    3. '(' → logprob: -9.751220703125
    4. '(ac' → logprob: -9.751220703125
    5. '(a' → logprob: -10.751220703125
    6. 'acc' → logprob: -10.751220703125
    7. '((' → logprob: -11.751220703125
    8. '(arr' → logprob: -12.376220703125
    9. '(abs' → logprob: -12.501220703125
    10. '(ans' → logprob: -13.126220703125

Token 179: ' =' (ID: 314)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.009945905767381191
    2. 'acc' → logprob: -4.884945869445801
    3. ' (' → logprob: -6.384945869445801
    4. '(a' → logprob: -8.7599458694458
    5. ' acc' → logprob: -8.8849458694458
    6. '(' → logprob: -9.0099458694458
    7. '(ac' → logprob: -9.3849458694458
    8. '((' → logprob: -9.8849458694458
    9. '   ' → logprob: -10.3849458694458
    10. '
' → logprob: -11.5099458694458

Token 180: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00442822091281414
    2. ' (' → logprob: -5.504428386688232
    3. '(a' → logprob: -8.379427909851074
    4. '(ac' → logprob: -9.754427909851074
    5. '((' → logprob: -11.254427909851074
    6. '(x' → logprob: -11.504427909851074
    7. '(' → logprob: -11.879427909851074
    8. 'acc' → logprob: -12.254427909851074
    9. '(arr' → logprob: -12.379427909851074
    10. '(ans' → logprob: -12.504427909851074

Token 181: 'acc' (ID: 3717)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.07961783558130264
    2. 'acc' → logprob: -2.579617738723755
    3. ' (' → logprob: -7.704617977142334
    4. ' acc' → logprob: -8.454617500305176
    5. '   ' → logprob: -10.954617500305176
    6. '	acc' → logprob: -11.204617500305176
    7. '(a' → logprob: -12.079617500305176
    8. '(ac' → logprob: -12.079617500305176
    9. '((' → logprob: -12.204617500305176
    10. 'a' → logprob: -12.704617500305176

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020747410599142313
    2. '[' → logprob: -8.625207901000977
    3. ' [' → logprob: -11.250207901000977
    4. 'i' → logprob: -11.625207901000977
    5. ' ' → logprob: -13.500207901000977
    6. '```' → logprob: -13.625207901000977
    7. ')' → logprob: -14.250207901000977
    8. '[I' → logprob: -14.500207901000977
    9. ')[' → logprob: -14.625207901000977
    10. '
' → logprob: -14.750207901000977

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.82172691822052
    2. '*' → logprob: -1.32172691822052
    3. '+' → logprob: -1.82172691822052
    4. ' +' → logprob: -2.6967267990112305
    5. ' *' → logprob: -2.9467267990112305
    6. '[' → logprob: -5.5717267990112305
    7. '[i' → logprob: -5.6967267990112305
    8. ']+' → logprob: -6.4467267990112305
    9. ' ' → logprob: -6.5717267990112305
    10. ']*' → logprob: -7.3217267990112305

Token 184: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4658093750476837
    2. '+' → logprob: -1.7158093452453613
    3. ' *' → logprob: -2.3408093452453613
    4. '*' → logprob: -2.3408093452453613
    5. ' ' → logprob: -10.34080982208252
    6. 'a' → logprob: -11.96580982208252
    7. '   ' → logprob: -12.21580982208252
    8. '+a' → logprob: -13.21580982208252
    9. '```' → logprob: -13.71580982208252
    10. ' ' → logprob: -14.09080982208252

Token 185: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011092856526374817
    2. ' a' → logprob: -4.511092662811279
    3. '(a' → logprob: -11.136093139648438
    4. '   ' → logprob: -11.261093139648438
    5. ' ' → logprob: -11.886093139648438
    6. '  ' → logprob: -13.386093139648438
    7. '
' → logprob: -13.511093139648438
    8. '1' → logprob: -13.511093139648438
    9. '	a' → logprob: -13.636093139648438
    10. '[a' → logprob: -14.011093139648438

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.250016212463379
    3. ' [' → logprob: -14.375016212463379
    4. '[
' → logprob: -14.500016212463379
    5. '
' → logprob: -14.750016212463379
    6. '[I' → logprob: -14.750016212463379
    7. '```' → logprob: -15.000016212463379
    8. 'i' → logprob: -15.375016212463379
    9. '   ' → logprob: -16.875015258789062
    10. '[j' → logprob: -17.500015258789062

Token 187: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01592772826552391
    2. '])' → logprob: -4.390927791595459
    3. '[i' → logprob: -6.265927791595459
    4. ' )' → logprob: -7.140927791595459
    5. ']' → logprob: -7.640927791595459
    6. '[' → logprob: -9.5159273147583
    7. ' *' → logprob: -10.5159273147583
    8. ')%' → logprob: -10.5159273147583
    9. '*' → logprob: -10.8909273147583
    10. '`)' → logprob: -11.3909273147583

Token 188: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00863217655569315
    2. '%' → logprob: -4.758632183074951
    3. ')' → logprob: -11.258631706237793
    4. ' ' → logprob: -13.758631706237793
    5. '%x' → logprob: -14.133631706237793
    6. ' ' → logprob: -14.508631706237793
    7. '%m' → logprob: -14.508631706237793
    8. ' *' → logprob: -14.758631706237793
    9. '%i' → logprob: -15.258631706237793
    10. '
' → logprob: -15.383631706237793

Token 189: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03804171830415726
    2. ' m' → logprob: -3.288041830062866
    3. '	m' → logprob: -15.913042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '   ' → logprob: -17.788042068481445
    6. '#m' → logprob: -18.288042068481445
    7. ' м' → logprob: -18.538042068481445
    8. '%m' → logprob: -18.663042068481445
    9. '(m' → logprob: -19.163042068481445
    10. '<|end|>' → logprob: -19.163042068481445

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02626824751496315
    2. ' if' → logprob: -4.401268482208252
    3. '   ' → logprob: -4.901268482208252
    4. '<|end|>' → logprob: -5.401268482208252
    5. '    
' → logprob: -7.776268482208252
    6. 'if' → logprob: -7.901268482208252
    7. ' 
' → logprob: -8.276268005371094
    8. '  
' → logprob: -8.401268005371094
    9. '
' → logprob: -9.401268005371094
    10. ')' → logprob: -9.901268005371094

Token 191: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25355637073516846
    2. ' if' → logprob: -2.128556251525879
    3. '   ' → logprob: -2.628556251525879
    4. '<|end|>' → logprob: -4.253556251525879
    5. 'if' → logprob: -5.003556251525879
    6. '    
' → logprob: -5.378556251525879
    7. ' ' → logprob: -6.503556251525879
    8. ' 
' → logprob: -6.628556251525879
    9. ',' → logprob: -6.753556251525879
    10. ',
' → logprob: -7.253556251525879

Token 192: ' update' (ID: 4027)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7517105937004089
    2. 'if' → logprob: -0.7517105937004089
    3. '   ' → logprob: -3.5017106533050537
    4. ' if' → logprob: -4.251710414886475
    5. ' h' → logprob: -4.501710414886475
    6. 'key' → logprob: -7.751710414886475
    7. 'count' → logprob: -8.376710891723633
    8. 'cnt' → logprob: -9.001710891723633
    9. '```' → logprob: -9.251710891723633
    10. '
' → logprob: -9.626710891723633

Token 193: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.021592779085040092
    2. 'h' → logprob: -4.146592617034912
    3. '(h' → logprob: -5.271592617034912
    4. '_' → logprob: -8.77159309387207
    5. '(' → logprob: -9.27159309387207
    6. '_(' → logprob: -9.52159309387207
    7. '```' → logprob: -10.89659309387207
    8. '_hash' → logprob: -11.27159309387207
    9. '_acc' → logprob: -11.27159309387207
    10. '(_' → logprob: -12.27159309387207

Token 194: '(h' (ID: 8120)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.15756645798683167
    2. '(h' → logprob: -2.782566547393799
    3. '(x' → logprob: -3.657566547393799
    4. '(' → logprob: -3.782566547393799
    5. '(a' → logprob: -4.157566547393799
    6. '[(' → logprob: -4.782566547393799
    7. '[' → logprob: -5.657566547393799
    8. '(ac' → logprob: -5.907566547393799
    9. ' (' → logprob: -6.032566547393799
    10. '[h' → logprob: -7.032566547393799

Token 195: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5900537371635437
    2. ',' → logprob: -1.2150537967681885
    3. '(acc' → logprob: -1.9650537967681885
    4. '(' → logprob: -6.090053558349609
    5. ',x' → logprob: -6.215053558349609
    6. ' (' → logprob: -6.590053558349609
    7. 'x' → logprob: -6.715053558349609
    8. ')' → logprob: -7.215053558349609
    9. 'acc' → logprob: -7.215053558349609
    10. ')(' → logprob: -8.09005355834961

Token 196: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018892912194132805
    2. ' x' → logprob: -4.018892765045166
    3. 'acc' → logprob: -7.518892765045166
    4. ' acc' → logprob: -9.018893241882324
    5. ' ' → logprob: -10.518893241882324
    6. '   ' → logprob: -11.143893241882324
    7. ')' → logprob: -11.643893241882324
    8. '```' → logprob: -12.143893241882324
    9. '(x' → logprob: -12.268893241882324
    10. '  ' → logprob: -12.643893241882324

Token 197: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038172993808984756
    2. ',' → logprob: -3.288172960281372
    3. ',i' → logprob: -9.788172721862793
    4. ' )' → logprob: -10.163172721862793
    5. ')i' → logprob: -10.913172721862793
    6. '<|end|>' → logprob: -12.288172721862793
    7. ')
' → logprob: -12.538172721862793
    8. '[i' → logprob: -13.038172721862793
    9. ' ,' → logprob: -13.163172721862793
    10. ',)' → logprob: -13.788172721862793

Token 198: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039087556302547455
    2. '<|end|>' → logprob: -3.4140875339508057
    3. '   ' → logprob: -6.289087772369385
    4. '    
' → logprob: -7.164087772369385
    5. '
' → logprob: -7.164087772369385
    6. '(' → logprob: -7.664087772369385
    7. '(
' → logprob: -7.789087772369385
    8. ' 
' → logprob: -8.164087295532227
    9. '  
' → logprob: -8.289087295532227
    10. '```' → logprob: -8.664087295532227

Token 199: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.1604432612657547
    2. ' update' → logprob: -1.9104433059692383
    3. 'def' → logprob: -8.660443305969238
    4. '_update' → logprob: -10.535443305969238
    5. '(update' → logprob: -12.410443305969238
    6. '.update' → logprob: -13.035443305969238
    7. ' def' → logprob: -13.160443305969238
    8. '	update' → logprob: -13.535443305969238
    9. 'p' → logprob: -13.660443305969238
    10. ' ' → logprob: -13.785443305969238

Token 200: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -9.889424836728722e-05
    2. '_' → logprob: -9.250099182128906
    3. '_a' → logprob: -13.375099182128906
    4. '_x' → logprob: -14.625099182128906
    5. ' _' → logprob: -15.250099182128906
    6. '_
' → logprob: -15.875099182128906
    7. '_m' → logprob: -16.500099182128906
    8. '_s' → logprob: -16.625099182128906
    9. '_

' → logprob: -17.500099182128906
    10. '```' → logprob: -18.000099182128906

Token 201: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002099773846566677
    2. '(' → logprob: -8.50020980834961
    3. ' (' → logprob: -12.12520980834961
    4. '(
' → logprob: -14.37520980834961
    5. '(a' → logprob: -15.25020980834961
    6. '(m' → logprob: -16.50020980834961
    7. ',' → logprob: -17.00020980834961
    8. '(x' → logprob: -17.12520980834961
    9. '(H' → logprob: -17.62520980834961
    10. '((' → logprob: -17.87520980834961

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.12127808178775e-05
    2. ' ,' → logprob: -10.250051498413086
    3. ',x' → logprob: -11.250051498413086
    4. ',
' → logprob: -13.875051498413086
    5. '   ' → logprob: -14.250051498413086
    6. 'x' → logprob: -14.625051498413086
    7. ',h' → logprob: -15.000051498413086
    8. ' ' → logprob: -16.750051498413086
    9. ',k' → logprob: -16.875051498413086
    10. ')' → logprob: -17.750051498413086

Token 203: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0034293620847165585
    2. ' x' → logprob: -5.878429412841797
    3. 'k' → logprob: -7.878429412841797
    4. 'key' → logprob: -9.003429412841797
    5. 'v' → logprob: -9.753429412841797
    6. 'val' → logprob: -10.878429412841797
    7. 'value' → logprob: -11.003429412841797
    8. 'acc' → logprob: -11.628429412841797
    9. 'y' → logprob: -12.503429412841797
    10. ' key' → logprob: -12.753429412841797

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10025358200073242
    2. '):
' → logprob: -2.3502535820007324
    3. '):
' → logprob: -10.10025405883789
    4. ')' → logprob: -13.22525405883789
    5. ':' → logprob: -13.60025405883789
    6. ' ):' → logprob: -13.85025405883789
    7. '   ' → logprob: -14.22525405883789
    8. '):

' → logprob: -14.35025405883789
    9. ',' → logprob: -14.85025405883789
    10. ' ):
' → logprob: -16.60025405883789

Token 205: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16156470775604248
    2. '   ' → logprob: -2.161564826965332
    3. 'if' → logprob: -3.411564826965332
    4. ' h' → logprob: -7.411564826965332
    5. ' if' → logprob: -7.786564826965332
    6. '	h' → logprob: -10.411564826965332
    7. '```' → logprob: -13.411564826965332
    8. '
' → logprob: -14.161564826965332
    9. '	if' → logprob: -14.161564826965332
    10. ' ' → logprob: -14.286564826965332

Token 206: ' if' (ID: 538)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.023338066413998604
    2. 'if' (adapté à ' if') → logprob: -3.7733380794525146
    3. '   ' → logprob: -9.523338317871094
    4. ' h' → logprob: -11.148338317871094
    5. ' if' → logprob: -12.398338317871094
    6. '	h' → logprob: -15.148338317871094
    7. 'try' → logprob: -15.648338317871094
    8. '```' → logprob: -15.898338317871094
    9. '
' → logprob: -16.273338317871094
    10. '

' → logprob: -17.273338317871094

Token 207: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141352713108063
    2. 'x' → logprob: -1.7014135122299194
    3. '(x' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '	x' → logprob: -17.201414108276367
    6. '   ' → logprob: -17.701414108276367
    7. ' not' → logprob: -18.826414108276367
    8. '_x' → logprob: -19.326414108276367
    9. 'not' → logprob: -19.826414108276367
    10. '(' → logprob: -20.513914108276367

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10894893109798431
    2. 'in' → logprob: -2.6089489459991455
    3. ' not' → logprob: -3.6089489459991455
    4. 'not' → logprob: -5.983948707580566
    5. ')' → logprob: -12.608948707580566
    6. ' ' → logprob: -12.733948707580566
    7. '[' → logprob: -13.858948707580566
    8. ']' → logprob: -13.858948707580566
    9. '   ' → logprob: -14.108948707580566
    10. 'n' → logprob: -14.608948707580566

Token 209: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06196858361363411
    2. ' h' → logprob: -2.8119685649871826
    3. '	h' → logprob: -15.061968803405762
    4. '   ' → logprob: -15.186968803405762
    5. '(h' → logprob: -15.436968803405762
    6. '[h' → logprob: -16.561967849731445
    7. '<h' → logprob: -17.811967849731445
    8. '_h' → logprob: -18.186967849731445
    9. ',h' → logprob: -18.436967849731445
    10. ':h' → logprob: -18.561967849731445

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11339134722948074
    2. ':
' → logprob: -2.238391399383545
    3. ':h' → logprob: -7.988391399383545
    4. '   ' → logprob: -9.113390922546387
    5. ' :' → logprob: -9.613390922546387
    6. ' :
' → logprob: -11.613390922546387
    7. '       ' → logprob: -11.738390922546387
    8. '=' → logprob: -11.988390922546387
    9. '[h' → logprob: -11.988390922546387
    10. '):
' → logprob: -12.238390922546387

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010926496179308742
    2. 'h' → logprob: -9.625109672546387
    3. ':
' → logprob: -11.750109672546387
    4. ':' → logprob: -11.875109672546387
    5. ' h' → logprob: -11.875109672546387
    6. '```' → logprob: -12.375109672546387
    7. '[' → logprob: -13.000109672546387
    8. '[h' → logprob: -13.250109672546387
    9. '(h' → logprob: -13.375109672546387
    10. ',' → logprob: -13.500109672546387

Token 212: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.020772172138094902
    2. '       ' → logprob: -4.5207719802856445
    3. ' h' → logprob: -4.8957719802856445
    4. '           ' → logprob: -6.1457719802856445
    5. '	h' → logprob: -10.520771980285645
    6. '   ' → logprob: -10.895771980285645
    7. '[h' → logprob: -11.895771980285645
    8. ' ' → logprob: -13.520771980285645
    9. '```' → logprob: -14.270771980285645
    10. '(h' → logprob: -14.645771980285645

Token 213: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.5
    3. '[h' → logprob: -16.875
    4. '```' → logprob: -17.375
    5. '[' → logprob: -17.625
    6. ' [' → logprob: -17.875
    7. '\[' → logprob: -19.625
    8. '(x' → logprob: -20.125
    9. '{x' → logprob: -20.25
    10. '	x' → logprob: -20.25

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06197473779320717
    2. ']+=' → logprob: -2.8119747638702393
    3. ']=' → logprob: -12.81197452545166
    4. '+=' → logprob: -12.93697452545166
    5. '   ' → logprob: -14.43697452545166
    6. ' ]' → logprob: -14.56197452545166
    7. ']+' → logprob: -15.06197452545166
    8. '[' → logprob: -15.43697452545166
    9. '```' → logprob: -15.68697452545166
    10. '']' → logprob: -15.81197452545166

Token 215: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029807429760694504
    2. ' +=' → logprob: -3.5298073291778564
    3. '=' → logprob: -9.904807090759277
    4. ']+=' → logprob: -12.029807090759277
    5. '   ' → logprob: -14.404807090759277
    6. ' =' → logprob: -15.154807090759277
    7. '[' → logprob: -16.279808044433594
    8. '```' → logprob: -16.904808044433594
    9. '+' → logprob: -17.154808044433594
    10. '+='' → logprob: -17.904808044433594

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007606389466673136
    2. ' ' → logprob: -4.882606506347656
    3. '   ' → logprob: -15.632606506347656
    4. '```' → logprob: -17.882606506347656
    5. '  ' → logprob: -19.632606506347656
    6. '0' → logprob: -20.070106506347656
    7. ' ' → logprob: -20.195106506347656
    8. '+' → logprob: -20.570106506347656
    9. '<|end|>' → logprob: -21.007606506347656
    10. '[' → logprob: -21.320106506347656

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.250001907348633
    4. '```' → logprob: -21.500001907348633
    5. '[' → logprob: -23.500001907348633
    6. '-' → logprob: -24.000001907348633
    7. '0' → logprob: -24.375001907348633
    8. '  ' → logprob: -24.375001907348633
    9. '１' → logprob: -24.500001907348633
    10. '' → logprob: -24.625001907348633

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019678696990013123
    2. 'else' → logprob: -4.144678592681885
    3. ' else' → logprob: -5.644678592681885
    4. '	else' → logprob: -10.144679069519043
    5. '       ' → logprob: -10.644679069519043
    6. '<|end|>' → logprob: -11.144679069519043
    7. '```' → logprob: -11.394679069519043
    8. '
' → logprob: -12.019679069519043
    9. '    
' → logprob: -13.519679069519043
    10. ':
' → logprob: -14.269679069519043

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05500166490674019
    2. 'else' → logprob: -3.055001735687256
    3. ' else' → logprob: -5.055001735687256
    4. '	else' → logprob: -11.180001258850098
    5. '       ' → logprob: -14.180001258850098
    6. '```' → logprob: -14.305001258850098
    7. '
' → logprob: -15.305001258850098
    8. ' ' → logprob: -15.555001258850098
    9. '  ' → logprob: -15.555001258850098
    10. '<|end|>' → logprob: -15.680001258850098

Token 220: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.39144277572631836
    2. ' else' → logprob: -1.1414427757263184
    3. '   ' → logprob: -5.391442775726318
    4. '	else' → logprob: -12.141443252563477
    5. ' ' → logprob: -15.141443252563477
    6. '```' → logprob: -15.641443252563477
    7. '
' → logprob: -16.141443252563477
    8. '    ' → logprob: -17.891443252563477
    9. '_else' → logprob: -17.891443252563477
    10. '  ' → logprob: -17.891443252563477

Token 221: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0659213662147522
    2. ':' → logprob: -2.8159213066101074
    3. ':
' → logprob: -5.940921306610107
    4. ' h' → logprob: -6.940921306610107
    5. '   ' → logprob: -8.190921783447266
    6. 'h' → logprob: -10.190921783447266
    7. ',' → logprob: -12.190921783447266
    8. '    ' → logprob: -12.315921783447266
    9. '      ' → logprob: -12.315921783447266
    10. ' :' → logprob: -12.440921783447266

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006016458501107991
    2. ' h' → logprob: -7.750601768493652
    3. 'h' → logprob: -9.000601768493652
    4. '   ' → logprob: -10.000601768493652
    5. '	h' → logprob: -14.125601768493652
    6. ' ' → logprob: -14.875601768493652
    7. '      ' → logprob: -15.250601768493652
    8. '           ' → logprob: -15.375601768493652
    9. ',h' → logprob: -15.500601768493652
    10. '     ' → logprob: -15.500601768493652

Token 223: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0026012223679572344
    2. ' h' → logprob: -6.002601146697998
    3. '   ' → logprob: -9.502601623535156
    4. '       ' → logprob: -10.002601623535156
    5. '	h' → logprob: -12.127601623535156
    6. ' ' → logprob: -16.627601623535156
    7. '  ' → logprob: -17.627601623535156
    8. '           ' → logprob: -18.502601623535156
    9. ',h' → logprob: -18.502601623535156
    10. '0' → logprob: -18.877601623535156

Token 224: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. 'x' → logprob: -16.375001907348633
    4. '=' → logprob: -17.500001907348633
    5. '{x' → logprob: -18.125001907348633
    6. '[
' → logprob: -18.250001907348633
    7. '[h' → logprob: -18.375001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. '
' → logprob: -18.500001907348633

Token 225: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.4281325936317444
    2. ']' → logprob: -1.1781325340270996
    3. '=' → logprob: -3.4281325340270996
    4. ']=' → logprob: -4.9281325340271
    5. '[' → logprob: -7.4281325340271
    6. ' =' → logprob: -9.553133010864258
    7. '[
' → logprob: -10.178133010864258
    8. 'x' → logprob: -11.053133010864258
    9. '```' → logprob: -11.803133010864258
    10. '
' → logprob: -13.303133010864258

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.97024549683556e-05
    2. ' =' → logprob: -9.500080108642578
    3. '[' → logprob: -12.250080108642578
    4. '[x' → logprob: -18.000080108642578
    5. '   ' → logprob: -20.000080108642578
    6. ']=' → logprob: -20.375080108642578
    7. '=
' → logprob: -20.500080108642578
    8. '```' → logprob: -21.125080108642578
    9. '=[' → logprob: -21.875080108642578
    10. ']' → logprob: -22.000080108642578

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '0' → logprob: -17.875045776367188
    5. '  ' → logprob: -20.125045776367188
    6. '```' → logprob: -20.125045776367188
    7. '    ' → logprob: -21.375045776367188
    8. '<|end|>' → logprob: -21.625045776367188
    9. '۱' → logprob: -22.062545776367188
    10. '       ' → logprob: -22.312545776367188

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.375
    5. '```' → logprob: -20.5
    6. '  ' → logprob: -22.75
    7. '       ' → logprob: -23.125
    8. '    ' → logprob: -23.5
    9. '' → logprob: -24.125
    10. '     ' → logprob: -24.625

Token 229: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02421068400144577
    2. '<|end|>' → logprob: -3.7742106914520264
    3. '#' → logprob: -8.024210929870605
    4. '```' → logprob: -8.149210929870605
    5. 'for' → logprob: -9.149210929870605
    6. '<|end|>' → logprob: -9.899210929870605
    7. '\' → logprob: -10.399210929870605
    8. ')' → logprob: -10.524210929870605
    9. '
' → logprob: -10.649210929870605
    10. ' def' → logprob: -10.774210929870605

Token 231: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7418403029441833
    2. ' main' → logprob: -1.3668403625488281
    3. 'count' → logprob: -1.7418403625488281
    4. ' count' → logprob: -2.991840362548828
    5. 'solve' → logprob: -3.616840362548828
    6. ' solve' → logprob: -4.866840362548828
    7. 'max' → logprob: -5.741840362548828
    8. 'sub' → logprob: -6.241840362548828
    9. ' sub' → logprob: -7.491840362548828
    10. ' max' → logprob: -7.741840362548828

Token 232: '_sm' (ID: 76283)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.8754152059555054
    2. '_acc' → logprob: -0.8754152059555054
    3. '_max' → logprob: -2.625415325164795
    4. '_' → logprob: -3.375415325164795
    5. '_sum' → logprob: -4.000415325164795
    6. '_count' → logprob: -4.625415325164795
    7. '_ans' → logprob: -5.375415325164795
    8. '_prefix' → logprob: -5.500415325164795
    9. '_unique' → logprob: -5.750415325164795
    10. '_answer' → logprob: -6.000415325164795

Token 233: '(h' (ID: 8120)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.16796301305294037
    2. '(all' → logprob: -3.2929630279541016
    3. '(a' → logprob: -4.542963027954102
    4. 'sub' → logprob: -4.667963027954102
    5. 'alls' → logprob: -4.667963027954102
    6. 'od' → logprob: -4.667963027954102
    7. 'aller' → logprob: -4.917963027954102
    8. '(x' → logprob: -5.042963027954102
    9. '(sub' → logprob: -5.167963027954102
    10. '(arr' → logprob: -5.417963027954102

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06047360226511955
    2. ',' → logprob: -3.060473680496216
    3. '):
' → logprob: -4.560473442077637
    4. ')' → logprob: -6.810473442077637
    5. ',m' → logprob: -9.685473442077637
    6. ' ):' → logprob: -10.185473442077637
    7. ',h' → logprob: -10.560473442077637
    8. ',
' → logprob: -10.810473442077637
    9. '):

' → logprob: -11.185473442077637
    10. '   ' → logprob: -11.185473442077637

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25205740332603455
    2. 's' → logprob: -2.0020573139190674
    3. 'sm' → logprob: -3.3770573139190674
    4. 'return' → logprob: -3.6270573139190674
    5. 'res' → logprob: -3.8770573139190674
    6. 'ans' → logprob: -6.3770575523376465
    7. 'r' → logprob: -7.1270575523376465
    8. 'total' → logprob: -7.1270575523376465
    9. 'result' → logprob: -7.5020575523376465
    10. ' s' → logprob: -7.6270575523376465

Token 236: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7506986856460571
    2. 'sm' (adapté à ' sm') → logprob: -1.2506986856460571
    3. 'res' → logprob: -1.8756986856460571
    4. 'return' → logprob: -3.3756985664367676
    5. 'ans' → logprob: -3.7506985664367676
    6. 'total' → logprob: -4.625698566436768
    7. '   ' → logprob: -4.750698566436768
    8. 'ret' → logprob: -5.750698566436768
    9. 'result' → logprob: -6.000698566436768
    10. 'r' → logprob: -6.500698566436768

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061969365924596786
    2. ' =' → logprob: -2.81196928024292
    3. ',' → logprob: -14.436969757080078
    4. '   ' → logprob: -14.686969757080078
    5. ' ' → logprob: -14.811969757080078
    6. '  ' → logprob: -16.186969757080078
    7. '=sum' → logprob: -16.811969757080078
    8. 'def' → logprob: -17.436969757080078
    9. '=
' → logprob: -17.561969757080078
    10. '_=' → logprob: -17.811969757080078

Token 238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009234884637407959
    2. ' ' → logprob: -7.0009236335754395
    3. '   ' → logprob: -11.625923156738281
    4. 'sum' → logprob: -12.875923156738281
    5. '  ' → logprob: -15.625923156738281
    6. ' sum' → logprob: -15.875923156738281
    7. '=' → logprob: -17.25092315673828
    8. '1' → logprob: -17.75092315673828
    9. '(' → logprob: -18.43842315673828
    10. '```' → logprob: -18.56342315673828

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'sum' → logprob: -14.125003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '[' → logprob: -19.250003814697266
    6. '=' → logprob: -20.125003814697266
    7. '(' → logprob: -20.375003814697266
    8. 'int' → logprob: -20.375003814697266
    9. '```' → logprob: -20.750003814697266
    10. '  ' → logprob: -20.750003814697266

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010533124441280961
    2. '
' → logprob: -9.875104904174805
    3. 'for' → logprob: -11.000104904174805
    4. '    
' → logprob: -11.250104904174805
    5. '<|end|>' → logprob: -11.375104904174805
    6. ' for' → logprob: -11.625104904174805
    7. 'def' → logprob: -14.500104904174805
    8. '	for' → logprob: -14.750104904174805
    9. '  
' → logprob: -14.750104904174805
    10. ',' → logprob: -14.875104904174805

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025204161647707224
    2. 'for' → logprob: -8.625251770019531
    3. ' for' → logprob: -9.750251770019531
    4. '
' → logprob: -11.750251770019531
    5. '    
' → logprob: -12.375251770019531
    6. '	for' → logprob: -14.125251770019531
    7. '       ' → logprob: -15.000251770019531
    8. ' ' → logprob: -15.250251770019531
    9. '  ' → logprob: -16.00025177001953
    10. 'def' → logprob: -16.12525177001953

Token 242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00023739055905025452
    2. '   ' → logprob: -8.375237464904785
    3. ' for' → logprob: -12.000237464904785
    4. '
' → logprob: -15.125237464904785
    5. ' ' → logprob: -15.500237464904785
    6. '	for' → logprob: -16.25023651123047
    7. '```' → logprob: -16.87523651123047
    8. '  ' → logprob: -17.00023651123047
    9. '    
' → logprob: -19.00023651123047
    10. '       ' → logprob: -19.12523651123047

Token 243: ' x' (ID: 1215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34965264797210693
    2. 'k' → logprob: -1.474652647972107
    3. 'x' → logprob: -3.0996527671813965
    4. ' v' → logprob: -4.7246527671813965
    5. 'key' → logprob: -5.5996527671813965
    6. ' k' → logprob: -5.8496527671813965
    7. 'value' → logprob: -6.4746527671813965
    8. 'val' → logprob: -6.4746527671813965
    9. 'c' → logprob: -7.0996527671813965
    10. 'count' → logprob: -7.5996527671813965

Token 244: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6419597268104553
    2. ' in' → logprob: -0.7669597268104553
    3. ',' → logprob: -4.7669596672058105
    4. ',count' → logprob: -8.266960144042969
    5. '   ' → logprob: -9.016960144042969
    6. '	in' → logprob: -9.141960144042969
    7. ' ' → logprob: -9.641960144042969
    8. ',v' → logprob: -9.891960144042969
    9. ' ,' → logprob: -10.516960144042969
    10. '```' → logprob: -10.641960144042969

Token 245: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011048642918467522
    2. ' h' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.636048316955566
    4. '	h' → logprob: -15.636048316955566
    5. 'range' → logprob: -17.011049270629883
    6. ' ' → logprob: -17.261049270629883
    7. 'list' → logprob: -17.511049270629883
    8. '
' → logprob: -18.011049270629883
    9. '  ' → logprob: -18.011049270629883
    10. '[h' → logprob: -18.261049270629883

Token 246: ':
' (ID: 734)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.01596926711499691
    2. 'values' → logprob: -4.265969276428223
    3. ':' → logprob: -7.140969276428223
    4. '   ' → logprob: -8.140969276428223
    5. ' in' → logprob: -8.515969276428223
    6. ',' → logprob: -8.515969276428223
    7. '_values' → logprob: -8.890969276428223
    8. ' values' → logprob: -10.640969276428223
    9. '	values' → logprob: -10.765969276428223
    10. '-values' → logprob: -10.765969276428223

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007643607095815241
    2. 'sm' → logprob: -7.7507643699646
    3. '   ' → logprob: -8.125763893127441
    4. ' sm' → logprob: -10.500763893127441
    5. 'if' → logprob: -13.125763893127441
    6. '[' → logprob: -13.125763893127441
    7. '```' → logprob: -13.750763893127441
    8. ' if' → logprob: -14.000763893127441
    9. ',' → logprob: -14.000763893127441
    10. '      ' → logprob: -14.625763893127441

Token 248: ' sm' (ID: 1765)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6682683825492859
    2. 'v' → logprob: -1.4182684421539307
    3. 'sm' (adapté à ' sm') → logprob: -1.7932684421539307
    4. 'c' → logprob: -3.1682684421539307
    5. 'cnt' → logprob: -4.043268203735352
    6. 'count' → logprob: -4.168268203735352
    7. 'val' → logprob: -6.793268203735352
    8. '       ' → logprob: -6.918268203735352
    9. 'if' → logprob: -7.418268203735352
    10. ' sm' → logprob: -8.293268203735352

Token 249: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20161692798137665
    2. ' +=' → logprob: -1.701616883277893
    3. '   ' → logprob: -9.076617240905762
    4. '+=(' → logprob: -10.201617240905762
    5. ']+=' → logprob: -10.826617240905762
    6. '=' → logprob: -11.076617240905762
    7. '       ' → logprob: -11.326617240905762
    8. '    ' → logprob: -13.201617240905762
    9. '  ' → logprob: -14.451617240905762
    10. '```' → logprob: -14.826617240905762

Token 250: ' calc' (ID: 25691)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0037999541964381933
    2. '(h' → logprob: -5.628799915313721
    3. ' h' → logprob: -8.628800392150879
    4. '(' → logprob: -11.628800392150879
    5. '   ' → logprob: -12.003800392150879
    6. ' (' → logprob: -13.003800392150879
    7. '(x' → logprob: -13.878800392150879
    8. '((' → logprob: -14.128800392150879
    9. '	h' → logprob: -14.753800392150879
    10. '[h' → logprob: -14.878800392150879

Token 251: '_pairs' (ID: 90005)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.003693897509947419
    2. 'h' → logprob: -5.6286940574646
    3. '((' → logprob: -10.878693580627441
    4. '_h' → logprob: -10.878693580627441
    5. '[h' → logprob: -10.878693580627441
    6. ' h' → logprob: -11.378693580627441
    7. '(' → logprob: -11.378693580627441
    8. '   ' → logprob: -12.128693580627441
    9. '(x' → logprob: -13.753693580627441
    10. 'ulation' → logprob: -13.753693580627441

Token 252: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0001354824344161898
    2. ' (' → logprob: -9.37513542175293
    3. '[h' → logprob: -10.12513542175293
    4. '(' → logprob: -11.75013542175293
    5. '(
' → logprob: -13.75013542175293
    6. 'h' → logprob: -14.25013542175293
    7. '   ' → logprob: -14.87513542175293
    8. '((' → logprob: -15.00013542175293
    9. '(x' → logprob: -16.00013542175293
    10. '[(' → logprob: -17.25013542175293

Token 253: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.650518920039758e-06
    2. ' [' → logprob: -13.375003814697266
    3. '[' → logprob: -13.750003814697266
    4. '[
' → logprob: -14.875003814697266
    5. 'x' → logprob: -15.125003814697266
    6. '[h' → logprob: -16.000003814697266
    7. ')[' → logprob: -16.750003814697266
    8. ')' → logprob: -17.500003814697266
    9. '(x' → logprob: -17.500003814697266
    10. '
' → logprob: -17.500003814697266

Token 254: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09841066598892212
    2. ')' → logprob: -2.4734106063842773
    3. '],' → logprob: -5.973410606384277
    4. ')])' → logprob: -6.598410606384277
    5. ' ])' → logprob: -6.848410606384277
    6. ' )' → logprob: -6.848410606384277
    7. ']' → logprob: -6.973410606384277
    8. ',' → logprob: -7.348410606384277
    9. '),' → logprob: -7.723410606384277
    10. '))' → logprob: -8.223410606384277

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006803829688578844
    2. '
' → logprob: -5.7568039894104
    3. '    
' → logprob: -6.2568039894104
    4. 'def' → logprob: -7.5068039894104
    5. ' return' → logprob: -7.6318039894104
    6. 'return' → logprob: -8.006803512573242
    7. '  
' → logprob: -9.756803512573242
    8. '```' → logprob: -10.131803512573242
    9. '       ' → logprob: -10.256803512573242
    10. '	return' → logprob: -10.381803512573242

Token 256: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006095877382904291
    2. ' return' → logprob: -5.506095886230469
    3. 'return' (adapté à ' return') → logprob: -6.506095886230469
    4. '
' → logprob: -8.256095886230469
    5. 'def' → logprob: -8.506095886230469
    6. ' ' → logprob: -11.006095886230469
    7. '    
' → logprob: -11.131095886230469
    8. '	return' → logprob: -11.131095886230469
    9. '       ' → logprob: -12.256095886230469
    10. ' def' → logprob: -12.506095886230469

Token 257: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.4740777611732483
    2. ' sm' → logprob: -0.9740777611732483
    3. 's' → logprob: -14.974078178405762
    4. '(sm' → logprob: -15.099078178405762
    5. '	sm' → logprob: -16.724077224731445
    6. 'int' → logprob: -17.224077224731445
    7. '_sm' → logprob: -17.724077224731445
    8. 'Sm' → logprob: -18.224077224731445
    9. '   ' → logprob: -18.599077224731445
    10. ' ' → logprob: -19.099077224731445

Token 258: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0463571734726429
    2. '<|end|>' → logprob: -3.4213571548461914
    3. '
' → logprob: -4.671357154846191
    4. ' def' → logprob: -6.796357154846191
    5. '```' → logprob: -6.921357154846191
    6. '

' → logprob: -7.421357154846191
    7. '<|end|>' → logprob: -8.796357154846191
    8. '+' → logprob: -9.671357154846191
    9. '   ' → logprob: -9.796357154846191
    10. ':def' → logprob: -10.171357154846191

Token 259: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.23917081207037e-05
    2. '+' → logprob: -11.625041961669922
    3. ' def' → logprob: -11.875041961669922
    4. '(
' → logprob: -12.125041961669922
    5. '(' → logprob: -12.500041961669922
    6. '```' → logprob: -12.750041961669922
    7. '0' → logprob: -12.875041961669922
    8. ')' → logprob: -13.375041961669922
    9. '<|end|>' → logprob: -13.750041961669922
    10. '[' → logprob: -13.875041961669922

Token 260: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.14269623160362244
    2. ' calc' → logprob: -2.0176961421966553
    3. 'cal' → logprob: -11.767696380615234
    4. '_calc' → logprob: -12.142696380615234
    5. 'c' → logprob: -13.142696380615234
    6. '(calc' → logprob: -13.392696380615234
    7. 'calculate' → logprob: -13.517696380615234
    8. '.calc' → logprob: -14.142696380615234
    9. ' calculate' → logprob: -14.392696380615234
    10. ' ' → logprob: -15.392696380615234

Token 261: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. '_pair' → logprob: -16.25
    4. 'pairs' → logprob: -17.75
    5. '_tokens' → logprob: -17.875
    6. '_p' → logprob: -17.875
    7. ' _' → logprob: -18.125
    8. 'Pairs' → logprob: -18.375
    9. '_parts' → logprob: -18.375
    10. '_s' → logprob: -18.75

Token 262: '(count' (ID: 25892)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5303298830986023
    2. '(n' → logprob: -1.030329942703247
    3. '(k' → logprob: -3.780329942703247
    4. '(c' → logprob: -4.530329704284668
    5. '(count' → logprob: -4.530329704284668
    6. '(cnt' → logprob: -4.655329704284668
    7. '(' → logprob: -7.655329704284668
    8. '(v' → logprob: -9.155329704284668
    9. '(freq' → logprob: -9.405329704284668
    10. '(a' → logprob: -9.780329704284668

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029807310551404953
    2. '):
' → logprob: -3.5298073291778564
    3. ')' → logprob: -9.904807090759277
    4. '):
' → logprob: -12.779807090759277
    5. ' ):' → logprob: -13.529807090759277
    6. '):

' → logprob: -13.654807090759277
    7. '   ' → logprob: -14.529807090759277
    8. ':' → logprob: -14.654807090759277
    9. '(count' → logprob: -15.779807090759277
    10. '(x' → logprob: -16.154808044433594

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10310454666614532
    2. 'return' → logprob: -2.353104591369629
    3. ' return' → logprob: -6.103104591369629
    4. 'count' → logprob: -7.353104591369629
    5. '(count' → logprob: -11.853104591369629
    6. ' count' → logprob: -12.353104591369629
    7. ' ' → logprob: -13.478104591369629
    8. '  ' → logprob: -13.603104591369629
    9. '
' → logprob: -13.728104591369629
    10. '	return' → logprob: -13.978104591369629

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021140361204743385
    2. 'count' → logprob: -4.0211405754089355
    3. ' return' → logprob: -6.0211405754089355
    4. '   ' → logprob: -7.5211405754089355
    5. ' count' → logprob: -11.146140098571777
    6. '(count' → logprob: -12.896140098571777
    7. '
' → logprob: -15.521140098571777
    8. ' ' → logprob: -16.271141052246094
    9. 'if' → logprob: -16.396141052246094
    10. '	return' → logprob: -17.021141052246094

Token 266: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00770174153149128
    2. ' count' → logprob: -5.257701873779297
    3. '(count' → logprob: -6.007701873779297
    4. ' (' → logprob: -12.632701873779297
    5. '   ' → logprob: -13.632701873779297
    6. ' ' → logprob: -15.257701873779297
    7. '(' → logprob: -15.507701873779297
    8. '[count' → logprob: -16.257701873779297
    9. '	count' → logprob: -16.257701873779297
    10. '  ' → logprob: -17.007701873779297

Token 267: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7101295590400696
    2. ' *' → logprob: -0.7101295590400696
    3. '*(' → logprob: -4.085129737854004
    4. ' ' → logprob: -11.210129737854004
    5. ' ' → logprob: -13.335129737854004
    6. '-' → logprob: -13.960129737854004
    7. '   ' → logprob: -14.585129737854004
    8. ' *(' → logprob: -14.710129737854004
    9. '#' → logprob: -15.085129737854004
    10. '  ' → logprob: -15.585129737854004

Token 268: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.08904111385345459
    2. ' (' → logprob: -2.464041233062744
    3. '(cnt' → logprob: -10.464040756225586
    4. ' ' → logprob: -10.839040756225586
    5. '  ' → logprob: -11.589040756225586
    6. '(' → logprob: -11.589040756225586
    7. 'count' → logprob: -11.839040756225586
    8. '[count' → logprob: -12.214040756225586
    9. '   ' → logprob: -12.339040756225586
    10. '<count' → logprob: -12.839040756225586

Token 269: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0003961185284424573
    2. '(count' → logprob: -8.000395774841309
    3. ' count' → logprob: -9.750395774841309
    4. '[count' → logprob: -13.250395774841309
    5. '<count' → logprob: -15.250395774841309
    6. '.count' → logprob: -16.000396728515625
    7. '   ' → logprob: -16.125396728515625
    8. '$count' → logprob: -16.375396728515625
    9. ',count' → logprob: -16.875396728515625
    10. '=count' → logprob: -17.000396728515625

Token 270: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141500234603882
    2. ' -' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.326415061950684
    4. '1' → logprob: -14.826415061950684
    5. '```' → logprob: -15.076415061950684
    6. '   ' → logprob: -15.451415061950684
    7. ')' → logprob: -15.576415061950684
    8. '
' → logprob: -17.576414108276367
    9. '  ' → logprob: -17.951414108276367
    10. ' ' → logprob: -18.326414108276367

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.00004768371582
    4. '```' → logprob: -16.25004768371582
    5. ')' → logprob: -17.00004768371582
    6. '  ' → logprob: -17.62504768371582
    7. '
' → logprob: -17.75004768371582
    8. 'def' → logprob: -18.50004768371582
    9. '    ' → logprob: -18.87504768371582
    10. '...' → logprob: -19.12504768371582

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.250001907348633
    4. '<|end|>' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '
' → logprob: -18.125001907348633
    7. 'import' → logprob: -18.250001907348633
    8. 'def' → logprob: -18.375001907348633
    9. ')' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.250001907348633

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006090328097343445
    2. ')//' → logprob: -7.500608921051025
    3. ' )' → logprob: -10.000609397888184
    4. ' //' → logprob: -11.875609397888184
    5. '//' → logprob: -12.625609397888184
    6. '   ' → logprob: -15.875609397888184
    7. ')
' → logprob: -16.250608444213867
    8. '```' → logprob: -16.625608444213867
    9. ')/' → logprob: -17.125608444213867
    10. '),' → logprob: -18.500608444213867

Token 274: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22583404183387756
    2. ' //' → logprob: -1.6008340120315552
    3. '   ' → logprob: -8.475833892822266
    4. '
' → logprob: -9.100833892822266
    5. '```' → logprob: -9.850833892822266
    6. '#' → logprob: -11.225833892822266
    7. 'def' → logprob: -11.850833892822266
    8. '...' → logprob: -12.475833892822266
    9. ' ' → logprob: -12.600833892822266
    10. '"' → logprob: -12.725833892822266

Token 275: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '```' → logprob: -19.500001907348633
    5. '
' → logprob: -20.500001907348633
    6. '۲' → logprob: -22.500001907348633
    7. '<|end|>' → logprob: -22.875001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '    ' → logprob: -24.125001907348633
    10. '1' → logprob: -24.250001907348633

Token 276: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -21.0
    4. '
' → logprob: -21.75
    5. '   ' → logprob: -22.25
    6. '1' → logprob: -23.625
    7. '۲' → logprob: -24.375
    8. '202' → logprob: -26.125
    9. '<|end|>' → logprob: -26.125
    10. '  ' → logprob: -26.25

Token 277: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05713896453380585
    2. 'n' → logprob: -3.0571389198303223
    3. 'if' → logprob: -5.307138919830322
    4. 'for' → logprob: -5.807138919830322
    5. '#' → logprob: -7.932138919830322
    6. 'print' → logprob: -9.93213939666748
    7. 'import' → logprob: -10.43213939666748
    8. 'a' → logprob: -10.55713939666748
    9. 'x' → logprob: -11.05713939666748
    10. 'm' → logprob: -11.30713939666748

Token 279: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023691818118095398
    2. ' main' → logprob: -3.7736918926239014
    3. 'solve' → logprob: -7.773691654205322
    4. ' solve' → logprob: -11.52369213104248
    5. 'sub' → logprob: -11.64869213104248
    6. 'count' → logprob: -12.27369213104248
    7. 'solution' → logprob: -14.52369213104248
    8. 'max' → logprob: -14.64869213104248
    9. '	main' → logprob: -14.77369213104248
    10. 'mod' → logprob: -15.39869213104248

Token 280: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.5822400857578032e-05
    2. ' ():' → logprob: -10.750025749206543
    3. '():
' → logprob: -12.500025749206543
    4. '()' → logprob: -15.250025749206543
    5. '(' → logprob: -15.500025749206543
    6. '(":' → logprob: -17.12502670288086
    7. '(:' → logprob: -17.75002670288086
    8. '():
' → logprob: -18.37502670288086
    9. ':' → logprob: -20.25002670288086
    10. '_' → logprob: -20.37502670288086

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008826810866594315
    2. 'n' → logprob: -4.758826732635498
    3. ' n' → logprob: -8.508827209472656
    4. '(n' → logprob: -12.133827209472656
    5. '	n' → logprob: -12.758827209472656
    6. '```' → logprob: -13.383827209472656
    7. ',n' → logprob: -14.633827209472656
    8. '   ' → logprob: -15.383827209472656
    9. ' ' → logprob: -16.758827209472656
    10. '()' → logprob: -16.883827209472656

Token 282: ' DBG' (ID: 100080)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018335241824388504
    2. '   ' → logprob: -4.018335342407227
    3. 't' → logprob: -9.018335342407227
    4. ' n' → logprob: -9.768335342407227
    5. '	n' → logprob: -12.768335342407227
    6. '```' → logprob: -13.268335342407227
    7. ' ' → logprob: -14.268335342407227
    8. '    
' → logprob: -14.768335342407227
    9. 'T' → logprob: -15.143335342407227
    10. 'def' → logprob: -15.393335342407227

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693282961845398
    2. '=' → logprob: -2.1269328594207764
    3. '   ' → logprob: -12.876933097839355
    4. ' ' → logprob: -13.751933097839355
    5. '    ' → logprob: -14.626933097839355
    6. ' =
' → logprob: -14.876933097839355
    7. '  ' → logprob: -16.25193214416504
    8. ',' → logprob: -16.50193214416504
    9. '=False' → logprob: -16.87693214416504
    10. '=True' → logprob: -16.87693214416504

Token 284: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5795384645462036
    2. 'False' → logprob: -0.8295384645462036
    3. ' True' → logprob: -5.954538345336914
    4. 'True' → logprob: -6.954538345336914
    5. '0' → logprob: -10.079538345336914
    6. ' ' → logprob: -13.454538345336914
    7. '   ' → logprob: -14.704538345336914
    8. '1' → logprob: -15.829538345336914
    9. 'F' → logprob: -16.079538345336914
    10. '(False' → logprob: -16.204538345336914

Token 285: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08252079039812088
    2. 'n' → logprob: -3.3325207233428955
    3. '(n' → logprob: -3.7075207233428955
    4. ',' → logprob: -5.082520961761475
    5. ',n' → logprob: -5.332520961761475
    6. '    
' → logprob: -5.707520961761475
    7. '
' → logprob: -6.957520961761475
    8. '	n' → logprob: -7.082520961761475
    9. '<|end|>' → logprob: -7.332520961761475
    10. ' n' → logprob: -7.332520961761475

Token 286: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016291949898004532
    2. '   ' → logprob: -4.141292095184326
    3. '(n' → logprob: -9.266291618347168
    4. ' n' → logprob: -9.516291618347168
    5. ',n' → logprob: -10.141291618347168
    6. ',' → logprob: -10.891291618347168
    7. '
' → logprob: -11.391291618347168
    8. '	n' → logprob: -11.641291618347168
    9. '_n' → logprob: -13.016291618347168
    10. 'def' → logprob: -13.266291618347168

Token 287: ' or' (ID: 503)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4469229280948639
    2. ' n' → logprob: -1.1969228982925415
    3. '   ' → logprob: -3.446923017501831
    4. 'm' → logprob: -5.196922779083252
    5. '#' → logprob: -5.196922779083252
    6. 'DBG' → logprob: -5.321922779083252
    7. ' DBG' → logprob: -5.446922779083252
    8. ' #' → logprob: -6.071922779083252
    9. ' m' → logprob: -6.821922779083252
    10. ' ' → logprob: -7.446922779083252

Token 288: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.474105566740036
    2. 'False' → logprob: -0.9741055965423584
    3. '   ' → logprob: -11.349105834960938
    4. '(False' → logprob: -12.224105834960938
    5. ' ' → logprob: -12.849105834960938
    6. '=False' → logprob: -13.099105834960938
    7. ' not' → logprob: -13.224105834960938
    8. ' false' → logprob: -14.099105834960938
    9. '  ' → logprob: -14.224105834960938
    10. '    ' → logprob: -14.849105834960938

Token 289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13365796208381653
    2. 'n' → logprob: -2.258657932281494
    3. '
' → logprob: -4.258657932281494
    4. '    
' → logprob: -5.633657932281494
    5. '(n' → logprob: -6.258657932281494
    6. ' n' → logprob: -8.258658409118652
    7. '	n' → logprob: -8.258658409118652
    8. '```' → logprob: -8.633658409118652
    9. ',
' → logprob: -9.258658409118652
    10. ',n' → logprob: -10.008658409118652

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3897591531276703
    2. 'n' → logprob: -1.1397591829299927
    3. ' n' → logprob: -6.639759063720703
    4. '(n' → logprob: -6.764759063720703
    5. '	n' → logprob: -8.389759063720703
    6. '```' → logprob: -9.764759063720703
    7. ',n' → logprob: -9.889759063720703
    8. '    
' → logprob: -10.389759063720703
    9. ',' → logprob: -10.639759063720703
    10. '
' → logprob: -10.889759063720703

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008310707635246217
    2. '   ' → logprob: -7.125831127166748
    3. ' n' → logprob: -11.12583065032959
    4. '```' → logprob: -12.12583065032959
    5. 'try' → logprob: -13.50083065032959
    6. 't' → logprob: -13.75083065032959
    7. '	n' → logprob: -14.12583065032959
    8. '(n' → logprob: -14.25083065032959
    9. '    
' → logprob: -14.75083065032959
    10. '
' → logprob: -15.00083065032959

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008133203955367208
    2. ',m' → logprob: -7.1258134841918945
    3. ' ,' → logprob: -11.750813484191895
    4. 'm' → logprob: -15.250813484191895
    5. '=' → logprob: -15.250813484191895
    6. ',M' → logprob: -16.125812530517578
    7. ',n' → logprob: -16.500812530517578
    8. '‌,' → logprob: -16.750812530517578
    9. ',
' → logprob: -17.500812530517578
    10. ' =' → logprob: -17.625812530517578

Token 293: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3870960772037506
    2. ' m' → logprob: -1.1370960474014282
    3. '<|end|>' → logprob: -8.762096405029297
    4. ' ' → logprob: -9.887096405029297
    5. '  ' → logprob: -12.262096405029297
    6. ' =' → logprob: -12.637096405029297
    7. '    ' → logprob: -13.262096405029297
    8. ' read' → logprob: -13.262096405029297
    9. '<|end|>' → logprob: -13.762096405029297
    10. ' ' → logprob: -13.887096405029297

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326099634170532
    2. ' =' → logprob: -0.7576099634170532
    3. ')' → logprob: -12.507610321044922
    4. ',' → logprob: -12.632610321044922
    5. '<|end|>' → logprob: -13.382610321044922
    6. ' ' → logprob: -15.007610321044922
    7. ')=' → logprob: -15.132610321044922
    8. '=input' → logprob: -15.507610321044922
    9. '<|end|>' → logprob: -15.757610321044922
    10. '   ' → logprob: -15.757610321044922

Token 295: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.008089317940175533
    2. 'read' → logprob: -5.508089542388916
    3. ' in' → logprob: -5.758089542388916
    4. 'in' → logprob: -7.508089542388916
    5. ' inn' → logprob: -8.383089065551758
    6. ' inm' → logprob: -10.008089065551758
    7. 'inn' → logprob: -11.508089065551758
    8. '	read' → logprob: -11.883089065551758
    9. ' ' → logprob: -13.383089065551758
    10. ' map' → logprob: -13.508089065551758

Token 296: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.005376880057156086
    2. '()' → logprob: -5.255376815795898
    3. '_' → logprob: -9.505376815795898
    4. 'n' → logprob: -10.255376815795898
    5. '()
' → logprob: -11.630376815795898
    6. '```' → logprob: -12.005376815795898
    7. '(' → logprob: -12.380376815795898
    8. '())' → logprob: -13.255376815795898
    9. '(_' → logprob: -13.755376815795898
    10. ' ()' → logprob: -13.755376815795898

Token 297: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -9.960946772480384e-05
    2. '()' → logprob: -9.250099182128906
    3. 'and' → logprob: -13.125099182128906
    4. '_' → logprob: -14.250099182128906
    5. '_m' → logprob: -15.500099182128906
    6. '_a' → logprob: -16.000099182128906
    7. ' and' → logprob: -16.000099182128906
    8. '(),' → logprob: -16.750099182128906
    9. '_AND' → logprob: -17.125099182128906
    10. ',_' → logprob: -17.250099182128906

Token 298: '_m' (ID: 1285)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00900321640074253
    2. '_m' → logprob: -4.759003162384033
    3. '()' → logprob: -8.384003639221191
    4. '()
' → logprob: -9.634003639221191
    5. 'in' → logprob: -10.759003639221191
    6. '(m' → logprob: -11.134003639221191
    7. '().' → logprob: -11.509003639221191
    8. 'n' → logprob: -12.259003639221191
    9. 'f' → logprob: -12.759003639221191
    10. 'def' → logprob: -12.884003639221191

Token 299: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5570885807392187e-05
    2. '()
' → logprob: -11.125015258789062
    3. '()

' → logprob: -15.375015258789062
    4. '()\' → logprob: -15.750015258789062
    5. ' ()' → logprob: -16.250015258789062
    6. '()`' → logprob: -16.750015258789062
    7. '(' → logprob: -17.000015258789062
    8. '()"' → logprob: -17.125015258789062
    9. '()
' → logprob: -17.500015258789062
    10. '()]' → logprob: -17.625015258789062

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028987822588533163
    2. 'a' → logprob: -6.252898693084717
    3. '```' → logprob: -7.252898693084717
    4. '
' → logprob: -9.127899169921875
    5. '<|end|>' → logprob: -9.127899169921875
    6. '    
' → logprob: -10.377899169921875
    7. '       ' → logprob: -13.377899169921875
    8. '#' → logprob: -13.627899169921875
    9. '`' → logprob: -13.877899169921875
    10. '#a' → logprob: -14.002899169921875

Token 301: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.375000953674316
    3. ' a' → logprob: -16.0
    4. '```' → logprob: -18.5
    5. '	a' → logprob: -19.25
    6. '    
' → logprob: -20.5
    7. '#a' → logprob: -21.875
    8. '_a' → logprob: -21.875
    9. ''a' → logprob: -21.875
    10. 'A' → logprob: -22.5

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575940728187561
    2. '=' → logprob: -0.825940728187561
    3. ',' → logprob: -14.20094108581543
    4. ' ' → logprob: -15.45094108581543
    5. '   ' → logprob: -15.82594108581543
    6. 'a' → logprob: -16.70094108581543
    7. ')' → logprob: -16.95094108581543
    8. '=a' → logprob: -16.95094108581543
    9. '[' → logprob: -17.07594108581543
    10. '=list' → logprob: -17.45094108581543

Token 303: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07724565267562866
    2. ' read' → logprob: -2.9522457122802734
    3. 'in' → logprob: -3.8272457122802734
    4. ' in' → logprob: -8.077245712280273
    5. 'list' → logprob: -10.827245712280273
    6. '   ' → logprob: -11.827245712280273
    7. '(read' → logprob: -12.952245712280273
    8. '	read' → logprob: -13.327245712280273
    9. '  ' → logprob: -13.452245712280273
    10. ' list' → logprob: -13.827245712280273

Token 304: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002708819229155779
    2. '(n' → logprob: -6.127708911895752
    3. '_' → logprob: -8.502708435058594
    4. '_n' → logprob: -8.877708435058594
    5. '_l' → logprob: -9.752708435058594
    6. '(_' → logprob: -10.377708435058594
    7. '_(' → logprob: -10.377708435058594
    8. '_line' → logprob: -10.877708435058594
    9. '(' → logprob: -11.502708435058594
    10. '```' → logprob: -11.627708435058594

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5776860184123507e-06
    2. 'n' → logprob: -13.25000286102295
    3. '(' → logprob: -14.12500286102295
    4. ' (' → logprob: -17.750001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '```' → logprob: -20.875001907348633
    7. '[n' → logprob: -21.375001907348633
    8. '	n' → logprob: -21.750001907348633
    9. '
' → logprob: -21.750001907348633
    10. 'a' → logprob: -21.875001907348633

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015834240475669503
    2. '())' → logprob: -6.626583576202393
    3. '()' → logprob: -8.376583099365234
    4. ')
' → logprob: -10.751583099365234
    5. ' )' → logprob: -12.626583099365234
    6. '   ' → logprob: -14.626583099365234
    7. '(' → logprob: -14.876583099365234
    8. ')n' → logprob: -14.876583099365234
    9. ')a' → logprob: -15.126583099365234
    10. '))' → logprob: -15.126583099365234

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010344763286411762
    2. 'h' → logprob: -7.251034259796143
    3. 'acc' → logprob: -8.3760347366333
    4. '```' → logprob: -10.2510347366333
    5. ' h' → logprob: -10.3760347366333
    6. ' acc' → logprob: -11.1260347366333
    7. '    
' → logprob: -12.2510347366333
    8. '	acc' → logprob: -13.3760347366333
    9. '<|end|>' → logprob: -13.7510347366333
    10. '	h' → logprob: -14.0010347366333

Token 308: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.003414751496165991
    2. '   ' → logprob: -5.753414630889893
    3. 'acc' → logprob: -9.00341510772705
    4. ' h' → logprob: -9.12841510772705
    5. '```' → logprob: -12.75341510772705
    6. '	h' → logprob: -14.12841510772705
    7. ' ' → logprob: -14.25341510772705
    8. '  ' → logprob: -14.50341510772705
    9. ' acc' → logprob: -15.00341510772705
    10. '`' → logprob: -16.878414154052734

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5458598732948303
    2. '=' → logprob: -1.0458598136901855
    3. ',' → logprob: -2.6708598136901855
    4. 'acc' → logprob: -10.045860290527344
    5. ' ,' → logprob: -11.170860290527344
    6. '(acc' → logprob: -12.170860290527344
    7. '   ' → logprob: -13.295860290527344
    8. '_acc' → logprob: -13.420860290527344
    9. ',h' → logprob: -14.045860290527344
    10. 'a' → logprob: -14.045860290527344

Token 310: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0007179115782491863
    2. ' init' → logprob: -7.250718116760254
    3. '(init' → logprob: -11.875718116760254
    4. '   ' → logprob: -14.125718116760254
    5. '	init' → logprob: -16.250717163085938
    6. '_init' → logprob: -17.125717163085938
    7. '.init' → logprob: -17.375717163085938
    8. '  ' → logprob: -17.750717163085938
    9. ' ' → logprob: -18.125717163085938
    10. 'ini' → logprob: -18.250717163085938

Token 311: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.000007629394531
    3. 'h' → logprob: -14.125007629394531
    4. '_(' → logprob: -14.875007629394531
    5. '_a' → logprob: -15.625007629394531
    6. '(' → logprob: -16.37500762939453
    7. '_
' → logprob: -17.75000762939453
    8. '_m' → logprob: -18.12500762939453
    9. '_t' → logprob: -18.25000762939453
    10. '(h' → logprob: -18.37500762939453

Token 312: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010800674557685852
    2. 'acc' → logprob: -4.635800838470459
    3. '(acc' → logprob: -7.635800838470459
    4. '()' → logprob: -8.7608003616333
    5. ' acc' → logprob: -9.2608003616333
    6. '(' → logprob: -9.2608003616333
    7. '  ' → logprob: -10.1358003616333
    8. '
' → logprob: -10.2608003616333
    9. '```' → logprob: -10.5108003616333
    10. 'n' → logprob: -10.8858003616333

Token 313: '   ' (ID: 271)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.31652113795280457
    2. '   ' → logprob: -1.316521167755127
    3. ' acc' → logprob: -5.941521167755127
    4. '	acc' → logprob: -7.566521167755127
    5. '```' → logprob: -9.691520690917969
    6. '  ' → logprob: -11.316520690917969
    7. '<|end|>' → logprob: -11.566520690917969
    8. '(acc' → logprob: -11.816520690917969
    9. ' ' → logprob: -12.691520690917969
    10. 'ac' → logprob: -12.816520690917969

Token 314: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -4.60414821645827e-06
    2. ' acc' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.750004768371582
    4. '```' → logprob: -18.750003814697266
    5. '	acc' → logprob: -19.000003814697266
    6. 'ac' → logprob: -19.625003814697266
    7. '(acc' → logprob: -19.750003814697266
    8. ' ' → logprob: -21.000003814697266
    9. 'a' → logprob: -21.250003814697266
    10. '[' → logprob: -21.375003814697266

Token 315: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016658965032547712
    2. ' =' → logprob: -6.626666069030762
    3. '=' → logprob: -8.001666069030762
    4. ' ,' → logprob: -12.501666069030762
    5. ',n' → logprob: -14.751666069030762
    6. ',a' → logprob: -15.626666069030762
    7. '_,' → logprob: -15.751666069030762
    8. 'acc' → logprob: -16.751665115356445
    9. ',h' → logprob: -17.126665115356445
    10. 'a' → logprob: -17.501665115356445

Token 316: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.289473822107539e-05
    2. ' init' → logprob: -9.750062942504883
    3. '_init' → logprob: -13.125062942504883
    4. '[' → logprob: -13.250062942504883
    5. 'acc' → logprob: -14.500062942504883
    6. '(init' → logprob: -15.500062942504883
    7. '	init' → logprob: -17.875062942504883
    8. '   ' → logprob: -18.500062942504883
    9. '.init' → logprob: -18.750062942504883
    10. ' [' → logprob: -19.500062942504883

Token 317: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.00012511172099038959
    2. 'acc' → logprob: -9.00012493133545
    3. '(acc' → logprob: -13.75012493133545
    4. '	acc' → logprob: -15.50012493133545
    5. '```' → logprob: -16.125125885009766
    6. '_(' → logprob: -16.125125885009766
    7. ' acc' → logprob: -16.750125885009766
    8. '_ac' → logprob: -17.625125885009766
    9. '(n' → logprob: -17.625125885009766
    10. '_ACC' → logprob: -18.250125885009766

Token 318: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033581978641450405
    2. 'n' → logprob: -8.000335693359375
    3. '(' → logprob: -15.375335693359375
    4. ' (' → logprob: -16.500335693359375
    5. '```' → logprob: -18.500335693359375
    6. ' n' → logprob: -19.125335693359375
    7. '(len' → logprob: -19.375335693359375
    8. '   ' → logprob: -19.875335693359375
    9. '(
' → logprob: -20.125335693359375
    10. '	n' → logprob: -21.125335693359375

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.12258882028982e-05
    2. ')
' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.62506103515625
    4. ')n' → logprob: -14.00006103515625
    5. ' )' → logprob: -15.12506103515625
    6. ')
' → logprob: -16.25006103515625
    7. '(n' → logprob: -16.25006103515625
    8. ')

' → logprob: -16.25006103515625
    9. '())' → logprob: -16.37506103515625
    10. '))' → logprob: -16.62506103515625

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035611081402748823
    2. 'acc' → logprob: -6.003561019897461
    3. '<|end|>' → logprob: -7.503561019897461
    4. '	acc' → logprob: -8.503561019897461
    5. ' acc' → logprob: -8.628561019897461
    6. '(acc' → logprob: -9.128561019897461
    7. '  ' → logprob: -11.253561019897461
    8. '```' → logprob: -11.503561019897461
    9. '<|end|>' → logprob: -12.253561019897461
    10. ' ' → logprob: -12.878561019897461

Token 321: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.018786808475852013
    2. '   ' → logprob: -4.893786907196045
    3. ' acc' → logprob: -4.893786907196045
    4. 'compute' → logprob: -5.643786907196045
    5. ' compute' → logprob: -9.643786430358887
    6. '(acc' → logprob: -11.393786430358887
    7. '	acc' → logprob: -13.018786430358887
    8. '```' → logprob: -13.268786430358887
    9. 'for' → logprob: -13.768786430358887
    10. ' ' → logprob: -14.018786430358887

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.47757811343763e-05
    2. ',h' → logprob: -10.250044822692871
    3. ' ,' → logprob: -12.375044822692871
    4. ',n' → logprob: -14.375044822692871
    5. ',c' → logprob: -14.375044822692871
    6. ',a' → logprob: -14.625044822692871
    7. '_,' → logprob: -14.750044822692871
    8. ',m' → logprob: -14.875044822692871
    9. ',_' → logprob: -15.125044822692871
    10. ',s' → logprob: -15.125044822692871

Token 323: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.38687369227409363
    2. ' h' → logprob: -1.136873722076416
    3. 'compute' → logprob: -13.761873245239258
    4. '	h' → logprob: -14.011873245239258
    5. '_h' → logprob: -15.261873245239258
    6. '<|end|>' → logprob: -15.261873245239258
    7. ' compute' → logprob: -15.386873245239258
    8. '(h' → logprob: -16.636873245239258
    9. ' ' → logprob: -17.261873245239258
    10. ',h' → logprob: -17.761873245239258

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269291490316391
    2. ' =' → logprob: -2.1269290447235107
    3. ',' → logprob: -14.00192928314209
    4. ')' → logprob: -15.87692928314209
    5. ')=' → logprob: -17.126928329467773
    6. '=
' → logprob: -17.251928329467773
    7. '<|end|>' → logprob: -17.751928329467773
    8. ' =
' → logprob: -18.501928329467773
    9. ' =)' → logprob: -18.501928329467773
    10. ' ' → logprob: -18.876928329467773

Token 325: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00317783304490149
    2. ' compute' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.128177642822266
    4. ' ' → logprob: -18.253177642822266
    5. '.compute' → logprob: -18.378177642822266
    6. 'computer' → logprob: -18.503177642822266
    7. 'calculate' → logprob: -19.378177642822266
    8. '_compute' → logprob: -19.503177642822266
    9. 'comput' → logprob: -20.378177642822266
    10. '  ' → logprob: -20.378177642822266

Token 326: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -8.566264295950532e-05
    2. 'acc' → logprob: -9.375085830688477
    3. ' acc' → logprob: -15.125085830688477
    4. '(acc' → logprob: -15.375085830688477
    5. '_ac' → logprob: -15.625085830688477
    6. '	acc' → logprob: -17.125085830688477
    7. '```' → logprob: -17.875085830688477
    8. 'Acc' → logprob: -18.375085830688477
    9. ''acc' → logprob: -19.000085830688477
    10. '_att' → logprob: -19.500085830688477

Token 327: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -3.166338137816638e-05
    2. '_acc' → logprob: -10.500031471252441
    3. 'and' → logprob: -12.750031471252441
    4. ' and' → logprob: -15.125031471252441
    5. '_a' → logprob: -15.250031471252441
    6. 'acc' → logprob: -15.375031471252441
    7. '```' → logprob: -16.375032424926758
    8. '(acc' → logprob: -16.500032424926758
    9. '(a' → logprob: -16.875032424926758
    10. 'a' → logprob: -17.375032424926758

Token 328: '_h' (ID: 3434)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20143340528011322
    2. '_h' → logprob: -1.7014334201812744
    3. '	h' → logprob: -11.826433181762695
    4. '(h' → logprob: -12.076433181762695
    5. '```' → logprob: -13.076433181762695
    6. ' h' → logprob: -13.451433181762695
    7. 'compute' → logprob: -14.576433181762695
    8. ''h' → logprob: -14.701433181762695
    9. '
' → logprob: -14.701433181762695
    10. 'a' → logprob: -15.076433181762695

Token 329: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.875
    4. 'a' → logprob: -18.875
    5. '```' → logprob: -19.75
    6. '(
' → logprob: -21.0
    7. '   ' → logprob: -21.75
    8. '(x' → logprob: -23.375
    9. '(ai' → logprob: -23.5
    10. '(A' → logprob: -23.5

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043299454264342785
    2. ',n' → logprob: -5.754330158233643
    3. ' ,' → logprob: -7.129330158233643
    4. '(n' → logprob: -8.004329681396484
    5. '(' → logprob: -11.254329681396484
    6. ')' → logprob: -13.254329681396484
    7. ',
' → logprob: -13.754329681396484
    8. 'n' → logprob: -15.504329681396484
    9. ' n' → logprob: -16.254329681396484
    10. '   ' → logprob: -16.629329681396484

Token 331: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163747429847717
    2. ' n' → logprob: -4.264163970947266
    3. '	n' → logprob: -15.639163970947266
    4. '   ' → logprob: -16.014163970947266
    5. '
' → logprob: -18.389163970947266
    6. ')n' → logprob: -18.514163970947266
    7. ' ' → logprob: -18.639163970947266
    8. '    ' → logprob: -18.764163970947266
    9. ',n' → logprob: -18.764163970947266
    10. '<|end|>' → logprob: -19.764163970947266

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019173922191839665
    2. ',m' → logprob: -8.875191688537598
    3. ' ,' → logprob: -9.875191688537598
    4. 'm' → logprob: -15.625191688537598
    5. ',
' → logprob: -15.875191688537598
    6. ')' → logprob: -17.625192642211914
    7. '```' → logprob: -17.875192642211914
    8. ',h' → logprob: -18.750192642211914
    9. ',p' → logprob: -18.875192642211914
    10. '   ' → logprob: -19.250192642211914

Token 333: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.048587486147880554
    2. ' m' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.048587799072266
    4. ')' → logprob: -17.423587799072266
    5. '   ' → logprob: -17.798587799072266
    6. ')m' → logprob: -18.173587799072266
    7. ',' → logprob: -18.298587799072266
    8. '	m' → logprob: -18.548587799072266
    9. '
' → logprob: -18.798587799072266
    10. ' м' → logprob: -19.798587799072266

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003924231859855354
    2. ',h' → logprob: -8.125391960144043
    3. ' ,' → logprob: -9.250391960144043
    4. ',
' → logprob: -15.625391960144043
    5. ')' → logprob: -16.00039291381836
    6. 'h' → logprob: -16.75039291381836
    7. '   ' → logprob: -17.50039291381836
    8. ' h' → logprob: -18.00039291381836
    9. '),' → logprob: -19.25039291381836
    10. '‌,' → logprob: -19.37539291381836

Token 335: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.004078639671206474
    2. ' h' → logprob: -5.5040788650512695
    3. '	h' → logprob: -16.379077911376953
    4. ')' → logprob: -16.879077911376953
    5. '   ' → logprob: -17.379077911376953
    6. ',h' → logprob: -18.629077911376953
    7. '
' → logprob: -18.629077911376953
    8. ' ' → logprob: -19.004077911376953
    9. '<|end|>' → logprob: -19.004077911376953
    10. '_h' → logprob: -19.629077911376953

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',
' → logprob: -14.000032424926758
    4. ')' → logprob: -14.750032424926758
    5. '   ' → logprob: -16.125032424926758
    6. 'acc' → logprob: -17.125032424926758
    7. ' acc' → logprob: -17.500032424926758
    8. ',h' → logprob: -17.875032424926758
    9. '```' → logprob: -19.000032424926758
    10. '(acc' → logprob: -19.125032424926758

Token 337: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.006716317031532526
    2. ' acc' → logprob: -5.006716251373291
    3. 'ac' → logprob: -15.13171672821045
    4. '	acc' → logprob: -15.50671672821045
    5. '(acc' → logprob: -15.75671672821045
    6. ' ' → logprob: -16.006715774536133
    7. '   ' → logprob: -16.506715774536133
    8. ')' → logprob: -16.631715774536133
    9. '
' → logprob: -17.631715774536133
    10. '_acc' → logprob: -18.006715774536133

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.813969957875088e-05
    2. ')
' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.500067710876465
    4. ')

' → logprob: -14.625067710876465
    5. ' )' → logprob: -16.50006866455078
    6. ')
' → logprob: -16.75006866455078
    7. ')`' → logprob: -18.25006866455078
    8. ')#' → logprob: -18.50006866455078
    9. ')return' → logprob: -18.75006866455078
    10. '))' → logprob: -18.87506866455078

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039766079862602055
    2. 'sm' → logprob: -8.125397682189941
    3. 'print' → logprob: -9.750397682189941
    4. '```' → logprob: -11.000397682189941
    5. '    
' → logprob: -11.125397682189941
    6. '	sm' → logprob: -12.750397682189941
    7. ' sm' → logprob: -12.875397682189941
    8. '<|end|>' → logprob: -13.250397682189941
    9. 's' → logprob: -13.750397682189941
    10. '
' → logprob: -14.125397682189941

Token 340: ' sm' (ID: 1765)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.053685422986745834
    2. '   ' → logprob: -3.178685426712036
    3. 'sm' (adapté à ' sm') → logprob: -5.053685188293457
    4. 'result' → logprob: -6.303685188293457
    5. 'res' → logprob: -6.803685188293457
    6. '```' → logprob: -8.178685188293457
    7. 's' → logprob: -8.428685188293457
    8. 'pr' → logprob: -8.803685188293457
    9. 'n' → logprob: -8.928685188293457
    10. ' print' → logprob: -9.178685188293457

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8280490636825562
    2. '=' → logprob: -1.0780490636825562
    3. ' +=' → logprob: -1.5780490636825562
    4. '+=' → logprob: -4.328049182891846
    5. '+' → logprob: -6.703049182891846
    6. ',' → logprob: -6.953049182891846
    7. '<|end|>' → logprob: -7.953049182891846
    8. '  ' → logprob: -8.828048706054688
    9. ')' → logprob: -8.828048706054688
    10. '   ' → logprob: -9.078048706054688

Token 342: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.20141683518886566
    2. 'compute' → logprob: -1.7014168500900269
    3. ' calc' → logprob: -13.076416969299316
    4. 'calc' → logprob: -13.826416969299316
    5. ' calculate' → logprob: -14.951416969299316
    6. 'calculate' → logprob: -15.826416969299316
    7. '.compute' → logprob: -17.326416015625
    8. '_compute' → logprob: -17.826416015625
    9. '   ' → logprob: -18.076416015625
    10. ' computer' → logprob: -19.451416015625

Token 343: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -1.5048530030981055e-06
    2. 'sm' → logprob: -13.500001907348633
    3. '_s' → logprob: -17.000001907348633
    4. '(sm' → logprob: -17.625001907348633
    5. '	sm' → logprob: -18.500001907348633
    6. '_sn' → logprob: -18.875001907348633
    7. '_sp' → logprob: -19.000001907348633
    8. '_SM' → logprob: -19.000001907348633
    9. ' sm' → logprob: -19.250001907348633
    10. '_sc' → logprob: -19.625001907348633

Token 344: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. ' (' → logprob: -16.625
    4. '(s' → logprob: -19.125
    5. 'h' → logprob: -19.375
    6. '(ht' → logprob: -19.625
    7. ',h' → logprob: -20.375
    8. '(H' → logprob: -20.5
    9. '<|end|>' → logprob: -21.125
    10. '[h' → logprob: -21.375

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762681365013123
    2. ')
' → logprob: -0.8262681365013123
    3. '   ' → logprob: -8.076268196105957
    4. ')
' → logprob: -11.201268196105957
    5. ' )
' → logprob: -13.201268196105957
    6. ' )' → logprob: -13.826268196105957
    7. ')

' → logprob: -14.076268196105957
    8. ',' → logprob: -16.57626724243164
    9. '())
' → logprob: -16.57626724243164
    10. ' ' → logprob: -16.70126724243164

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017731155967339873
    2. 'print' → logprob: -6.376772880554199
    3. '```' → logprob: -10.1267728805542
    4. '<|end|>' → logprob: -11.2517728805542
    5. '    
' → logprob: -12.1267728805542
    6. ' print' → logprob: -12.3767728805542
    7. '
' → logprob: -12.7517728805542
    8. ')' → logprob: -13.5017728805542
    9. '	print' → logprob: -13.6267728805542
    10. '(print' → logprob: -13.6267728805542

Token 347: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12774603068828583
    2. '   ' → logprob: -2.127746105194092
    3. ' print' → logprob: -7.127746105194092
    4. '```' → logprob: -11.252745628356934
    5. '	print' → logprob: -13.877745628356934
    6. '
' → logprob: -15.752745628356934
    7. '   ' → logprob: -15.877745628356934
    8. '#print' → logprob: -16.00274658203125
    9. '  ' → logprob: -16.12774658203125
    10. '(print' → logprob: -16.12774658203125

Token 348: '(sm' (ID: 137716)
  Prédit: '(sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sm' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -14.000001907348633
    3. '(s' → logprob: -14.250001907348633
    4. 'sm' → logprob: -14.500001907348633
    5. ' (' → logprob: -16.375001907348633
    6. ' sm' → logprob: -16.500001907348633
    7. '(sn' → logprob: -17.500001907348633
    8. '	sm' → logprob: -17.625001907348633
    9. '(f' → logprob: -17.875001907348633
    10. '_sm' → logprob: -18.000001907348633

Token 349: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '())' → logprob: -14.000004768371582
    5. '()' → logprob: -15.250004768371582
    6. '))' → logprob: -16.3750057220459
    7. ')`' → logprob: -16.5000057220459
    8. ')#' → logprob: -16.8750057220459
    9. '`)' → logprob: -18.0000057220459
    10. ')

' → logprob: -18.2500057220459

Token 350: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010352442041039467
    2. '<|end|>' → logprob: -5.635352611541748
    3. '```' → logprob: -5.885352611541748
    4. ' if' → logprob: -6.510352611541748
    5. '
' → logprob: -6.635352611541748
    6. '#' → logprob: -7.510352611541748
    7. '\n' → logprob: -8.76035213470459
    8. '__' → logprob: -9.51035213470459
    9. '_' → logprob: -9.76035213470459
    10. 'main' → logprob: -9.88535213470459

Token 351: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 349
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 286
Précision stricte (1ère position): 34.96%
Précision adaptée (1ère position): 39.54%
Précision (top 10): 81.95%
================================================================================
