================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

sTr = input()
__k = int(input())

## unorthodox initial answer list for possible mutability
ans_holder = [1]

def checker(idx):
    if sTr[idx] != '1':
        ans_holder[0] = sTr[idx]
        raise StopIteration

try:
    list(map(checker, range(__k)))
except StopIteration:
    pass

print(ans_holder[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044104959815740585
    2. '(lambda' → logprob: -3.169105052947998
    3. '\' → logprob: -8.16910457611084
    4. 'def' → logprob: -8.29410457611084
    5. '\(' → logprob: -9.16910457611084
    6. ',' → logprob: -9.16910457611084
    7. 'lambda' → logprob: -9.54410457611084
    8. '(
' → logprob: -9.54410457611084
    9. '```' → logprob: -10.04410457611084
    10. ' (' → logprob: -10.16910457611084

Token 6: 'Tr' (ID: 1410)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.4726707935333252
    2. 'u' → logprob: -1.4726707935333252
    3. 'et' → logprob: -3.347670793533325
    4. 'tr' → logprob: -3.472670793533325
    5. 't' → logprob: -4.097670555114746
    6. 'e' → logprob: -4.097670555114746
    7. ' =' → logprob: -5.097670555114746
    8. 'q' → logprob: -5.347670555114746
    9. '```' → logprob: -5.472670555114746
    10. 'trip' → logprob: -5.722670555114746

Token 7: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5736867785453796
    2. 'ip' → logprob: -1.1986868381500244
    3. 'i' → logprob: -2.8236868381500244
    4. 's' → logprob: -3.3236868381500244
    5. 'a' → logprob: -4.323686599731445
    6. 'e' → logprob: -4.573686599731445
    7. 'ings' → logprob: -6.573686599731445
    8. ' =' → logprob: -6.573686599731445
    9. 'in' → logprob: -6.823686599731445
    10. 'r' → logprob: -6.948686599731445

Token 8: ' input' (ID: 3422)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5271660685539246
    2. '"' → logprob: -1.4021661281585693
    3. ' '' → logprob: -2.5271661281585693
    4. ''' → logprob: -2.5271661281585693
    5. ' ' → logprob: -5.90216588973999
    6. ' [' → logprob: -8.402166366577148
    7. ''s' → logprob: -8.652166366577148
    8. '[' → logprob: -9.652166366577148
    9. ' """' → logprob: -9.777166366577148
    10. ' ''' → logprob: -10.027166366577148

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002106244442984462
    2. '('' → logprob: -7.002106189727783
    3. '("("' → logprob: -7.877106189727783
    4. ''' → logprob: -8.127106666564941
    5. '```' → logprob: -8.502106666564941
    6. '`' → logprob: -8.877106666564941
    7. '(`' → logprob: -10.377106666564941
    8. '(
' → logprob: -10.627106666564941
    9. '"' → logprob: -10.877106666564941
    10. '("")' → logprob: -11.127106666564941

Token 10: '__' (ID: 771)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1812569499015808
    2. 'result' → logprob: -2.4312570095062256
    3. '_' → logprob: -3.8062570095062256
    4. ')' → logprob: -3.9312570095062256
    5. '=' → logprob: -4.6812567710876465
    6. 'print' → logprob: -5.6812567710876465
    7. 's' → logprob: -5.8062567710876465
    8. '```' → logprob: -6.0562567710876465
    9. ''' → logprob: -6.5562567710876465
    10. '`' → logprob: -6.5562567710876465

Token 11: 'k' (ID: 74)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8723315000534058
    2. '=' → logprob: -0.9973315000534058
    3. 'result' → logprob: -2.6223316192626953
    4. '.' → logprob: -3.3723316192626953
    5. 'split' → logprob: -3.9973316192626953
    6. 's' → logprob: -3.9973316192626953
    7. 'count' → logprob: -4.622331619262695
    8. '_' → logprob: -5.122331619262695
    9. 'words' → logprob: -5.247331619262695
    10. 'r' → logprob: -5.247331619262695

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5622729063034058
    2. '=' → logprob: -0.9372729063034058
    3. '__' → logprob: -3.6872730255126953
    4. '_' → logprob: -5.062273025512695
    5. 'ey' → logprob: -5.312273025512695
    6. ' ' → logprob: -7.687273025512695
    7. 'e' → logprob: -8.437273025512695
    8. 'er' → logprob: -8.687273025512695
    9. '=int' → logprob: -8.812273025512695
    10. ')' → logprob: -9.312273025512695

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.1618471145629883
    2. '0' → logprob: -1.4118471145629883
    3. 'int' → logprob: -2.0368471145629883
    4. ' ' → logprob: -2.0368471145629883
    5. ' s' → logprob: -3.1618471145629883
    6. 'len' → logprob: -3.1618471145629883
    7. ' len' → logprob: -3.2868471145629883
    8. 's' → logprob: -3.6618471145629883
    9. ' []' → logprob: -4.286847114562988
    10. '[int' → logprob: -5.786847114562988

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13861936330795288
    2. '('' → logprob: -2.5136194229125977
    3. '(s' → logprob: -3.2636194229125977
    4. '(__' → logprob: -5.513619422912598
    5. '("("' → logprob: -6.763619422912598
    6. ''' → logprob: -6.763619422912598
    7. '()' → logprob: -7.388619422912598
    8. '("' → logprob: -7.638619422912598
    9. '32' → logprob: -7.763619422912598
    10. '(input' → logprob: -7.888619422912598

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029988130554556847
    2. '())' → logprob: -3.7799880504608154
    3. '()' → logprob: -5.1549882888793945
    4. '`)' → logprob: -7.5299882888793945
    5. '(' → logprob: -8.654988288879395
    6. '))' → logprob: -9.404988288879395
    7. '')' → logprob: -9.654988288879395
    8. ' )' → logprob: -11.029988288879395
    9. ')`' → logprob: -11.029988288879395
    10. '")' → logprob: -11.279988288879395

Token 16: '##' (ID: 877)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.904060423374176
    2. 'result' → logprob: -1.0290603637695312
    3. ')' → logprob: -2.7790603637695312
    4. 's' → logprob: -3.2790603637695312
    5. 're' → logprob: -3.7790603637695312
    6. '_' → logprob: -4.279060363769531
    7. 'd' → logprob: -4.654060363769531
    8. 'res' → logprob: -4.654060363769531
    9. 'reduce' → logprob: -4.654060363769531
    10. ''' → logprob: -4.904060363769531

Token 17: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25015535950660706
    2. 'r' → logprob: -2.375155448913574
    3. 'res' → logprob: -3.125155448913574
    4. 's' → logprob: -3.750155448913574
    5. ' result' → logprob: -4.250155448913574
    6. ')' → logprob: -4.500155448913574
    7. '_' → logprob: -4.625155448913574
    8. 're' → logprob: -5.875155448913574
    9. 'def' → logprob: -6.250155448913574
    10. '=' → logprob: -6.375155448913574

Token 18: 'orth' (ID: 2909)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.1241610124707222
    2. 'ion' → logprob: -2.9991610050201416
    3. 'def' → logprob: -3.6241610050201416
    4. 'pack' → logprob: -4.124161243438721
    5. 'der' → logprob: -5.624161243438721
    6. 'sorted' → logprob: -5.874161243438721
    7. 'fold' → logprob: -5.999161243438721
    8. 'reduce' → logprob: -6.124161243438721
    9. 'iq' → logprob: -6.249161243438721
    10. 're' → logprob: -6.624161243438721

Token 19: 'odox' (ID: 52131)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3033508062362671
    2. 'g' → logprob: -2.0533509254455566
    3. '=' → logprob: -3.9283509254455566
    4. 'def' → logprob: -4.053350925445557
    5. 'd' → logprob: -4.303350925445557
    6. '_' → logprob: -4.428350925445557
    7. ' =' → logprob: -4.553350925445557
    8. '__' → logprob: -4.678350925445557
    9. '_s' → logprob: -4.928350925445557
    10. 't' → logprob: -5.303350925445557

Token 20: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7212299108505249
    2. 's' → logprob: -1.221229910850525
    3. 'r' → logprob: -2.5962300300598145
    4. '=' → logprob: -3.4712300300598145
    5. ')' → logprob: -4.0962300300598145
    6. '.' → logprob: -4.7212300300598145
    7. 'a' → logprob: -4.8462300300598145
    8. 'result' → logprob: -4.8462300300598145
    9. 'x' → logprob: -5.2212300300598145
    10. 'p' → logprob: -5.3462300300598145

Token 21: ' answer' (ID: 6052)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9489457607269287
    2. '_value' → logprob: -1.4489457607269287
    3. 'value' → logprob: -1.8239457607269287
    4. ' =' → logprob: -3.1989457607269287
    5. '_val' → logprob: -3.3239457607269287
    6. '__' → logprob: -3.6989457607269287
    7. 'izer' → logprob: -3.9489457607269287
    8. '=' → logprob: -3.9489457607269287
    9. ')' → logprob: -4.073945999145508
    10. 'val' → logprob: -4.573945999145508

Token 22: ' list' (ID: 1562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9107725620269775
    2. 'res' → logprob: -1.9107725620269775
    3. 'result' → logprob: -1.9107725620269775
    4. ')' → logprob: -2.1607725620269775
    5. '_' → logprob: -2.7857725620269775
    6. 'r' → logprob: -2.9107725620269775
    7. '#' → logprob: -3.1607725620269775
    8. 'def' → logprob: -3.4107725620269775
    9. '[' → logprob: -3.4107725620269775
    10. 'p' → logprob: -3.5357725620269775

Token 23: ' for' (ID: 395)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1235322952270508
    2. ' ans' → logprob: -1.6235322952270508
    3. '__' → logprob: -2.748532295227051
    4. 'a' → logprob: -2.873532295227051
    5. 'answer' → logprob: -3.123532295227051
    6. 'res' → logprob: -3.123532295227051
    7. 's' → logprob: -3.248532295227051
    8. '_' → logprob: -3.248532295227051
    9. '_ans' → logprob: -3.248532295227051
    10. '[' → logprob: -3.373532295227051

Token 24: ' possible' (ID: 4149)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9055489301681519
    2. ' s' → logprob: -2.2805490493774414
    3. 'reduce' → logprob: -2.5305490493774414
    4. ' k' → logprob: -2.6555490493774414
    5. ' reduce' → logprob: -2.7805490493774414
    6. ' the' → logprob: -3.0305490493774414
    7. 's' → logprob: -3.4055490493774414
    8. '_' → logprob: -3.6555490493774414
    9. ' __' → logprob: -3.7805490493774414
    10. '[' → logprob: -3.7805490493774414

Token 25: ' mut' (ID: 6505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5361030101776123
    2. ' k' → logprob: -2.4111030101776123
    3. ' s' → logprob: -2.6611030101776123
    4. 'k' → logprob: -3.4111030101776123
    5. ' res' → logprob: -3.4111030101776123
    6. '__' → logprob: -3.4111030101776123
    7. ' factors' → logprob: -3.5361030101776123
    8. ' subse' → logprob: -3.5361030101776123
    9. '_' → logprob: -3.6611030101776123
    10. '[' → logprob: -4.286103248596191

Token 26: 'ability' (ID: 3563)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.03914613276720047
    2. 'a' → logprob: -4.2891459465026855
    3. 'ation' → logprob: -4.9141459465026855
    4. '__' → logprob: -5.5391459465026855
    5. 'ants' → logprob: -5.6641459465026855
    6. 'at' → logprob: -5.9141459465026855
    7. 'ated' → logprob: -6.4141459465026855
    8. 's' → logprob: -7.5391459465026855
    9. 'ables' → logprob: -7.5391459465026855
    10. 'ed' → logprob: -7.6641459465026855

Token 27: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.271317481994629
    2. ' ans' → logprob: -1.646317481994629
    3. '[' → logprob: -2.021317481994629
    4. '_' → logprob: -2.271317481994629
    5. '_ans' → logprob: -2.646317481994629
    6. 's' → logprob: -2.896317481994629
    7. 'a' → logprob: -3.771317481994629
    8. 'res' → logprob: -4.021317481994629
    9. 'answer' → logprob: -4.271317481994629
    10. '__' → logprob: -4.396317481994629

Token 28: 'ans' (ID: 616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0730146169662476
    2. 's' → logprob: -1.8230146169662476
    3. ' =' → logprob: -2.073014736175537
    4. '_' → logprob: -2.448014736175537
    5. ' ans' → logprob: -2.823014736175537
    6. ' ' → logprob: -3.573014736175537
    7. 'ans' → logprob: -3.823014736175537
    8. '[]' → logprob: -4.073014736175537
    9. ' [' → logprob: -4.073014736175537
    10. 'a' → logprob: -4.198014736175537

Token 29: '_holder' (ID: 128963)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1946553885936737
    2. '=' → logprob: -1.944655418395996
    3. 's' → logprob: -4.069655418395996
    4. '_' → logprob: -5.194655418395996
    5. '_list' → logprob: -5.319655418395996
    6. '=[]' → logprob: -5.694655418395996
    7. ' ' → logprob: -7.194655418395996
    8. ',' → logprob: -7.819655418395996
    9. '[' → logprob: -7.944655418395996
    10. '[:]' → logprob: -8.694655418395996

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11435992270708084
    2. '=' → logprob: -2.2393598556518555
    3. '=[]' → logprob: -7.6143598556518555
    4. 's' → logprob: -8.489359855651855
    5. '[' → logprob: -8.739359855651855
    6. ',' → logprob: -8.739359855651855
    7. '_' → logprob: -8.739359855651855
    8. '[:]' → logprob: -8.989359855651855
    9. ' ' → logprob: -9.489359855651855
    10. '=[' → logprob: -10.114359855651855

Token 31: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4971463680267334
    2. '[' → logprob: -1.2471463680267334
    3. ' []' → logprob: -2.8721463680267334
    4. ' [' → logprob: -3.2471463680267334
    5. '[s' → logprob: -5.3721466064453125
    6. '['' → logprob: -6.2471466064453125
    7. ' ['' → logprob: -7.9971466064453125
    8. 'list' → logprob: -8.122146606445312
    9. '["' → logprob: -8.247146606445312
    10. ' [[]' → logprob: -8.372146606445312

Token 32: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33712777495384216
    2. ']' → logprob: -2.087127685546875
    3. 'False' → logprob: -2.837127685546875
    4. 's' → logprob: -3.212127685546875
    5. '[]' → logprob: -3.587127685546875
    6. '()]' → logprob: -4.587127685546875
    7. '-' → logprob: -4.962127685546875
    8. 'True' → logprob: -5.337127685546875
    9. '(s' → logprob: -5.587127685546875
    10. 'None' → logprob: -6.212127685546875

Token 33: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015364045975729823
    2. ' ]' → logprob: -7.0015363693237305
    3. ',' → logprob: -7.6265363693237305
    4. ')' → logprob: -9.62653636932373
    5. ')]' → logprob: -10.12653636932373
    6. ']
' → logprob: -12.00153636932373
    7. '*' → logprob: -12.25153636932373
    8. ']

' → logprob: -12.75153636932373
    9. ' ' → logprob: -13.12653636932373
    10. '**' → logprob: -13.50153636932373

Token 34: 'def' (ID: 1314)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.864804744720459
    2. ' ' → logprob: -0.989804744720459
    3. 'for' → logprob: -2.864804744720459
    4. ',' → logprob: -3.364804744720459
    5. '
' → logprob: -3.989804744720459
    6. '*' → logprob: -3.989804744720459
    7. ' 
' → logprob: -4.239804744720459
    8. '+' → logprob: -4.489804744720459
    9. ']' → logprob: -4.489804744720459
    10. ' if' → logprob: -4.614804744720459

Token 35: ' checker' (ID: 75924)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -1.2054346799850464
    2. ' factorial' → logprob: -1.5804346799850464
    3. ' multiply' → logprob: -1.9554346799850464
    4. ' lambda' → logprob: -2.955434799194336
    5. ' s' → logprob: -3.580434799194336
    6. ' pow' → logprob: -3.705434799194336
    7. ' is' → logprob: -3.705434799194336
    8. ' max' → logprob: -3.830434799194336
    9. 'pow' → logprob: -4.205434799194336
    10. 's' → logprob: -4.330434799194336

Token 36: '(idx' (ID: 42793)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09427032619714737
    2. '(' → logprob: -2.4692702293395996
    3. '(char' → logprob: -6.8442702293396
    4. '(x' → logprob: -7.2192702293396
    5. '(a' → logprob: -7.2192702293396
    6. ' (' → logprob: -8.094270706176758
    7. '(c' → logprob: -8.219270706176758
    8. '(n' → logprob: -8.344270706176758
    9. '(str' → logprob: -8.469270706176758
    10. '(i' → logprob: -8.844270706176758

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18883943557739258
    2. ',' → logprob: -1.8138394355773926
    3. ')' → logprob: -5.313839435577393
    4. ' ,' → logprob: -6.313839435577393
    5. ' ):' → logprob: -6.313839435577393
    6. '):
' → logprob: -8.438838958740234
    7. ',s' → logprob: -10.313838958740234
    8. ' )' → logprob: -10.688838958740234
    9. '   ' → logprob: -10.813838958740234
    10. ' ' → logprob: -10.938838958740234

Token 38: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9061562418937683
    2. '   ' → logprob: -1.031156301498413
    3. '):' → logprob: -2.531156301498413
    4. ')' → logprob: -2.531156301498413
    5. ' ' → logprob: -3.656156301498413
    6. '(' → logprob: -4.531156063079834
    7. '<|end|>' → logprob: -4.531156063079834
    8. '():' → logprob: -5.281156063079834
    9. ' :' → logprob: -5.406156063079834
    10. ',' → logprob: -5.406156063079834

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6533482074737549
    2. '   ' → logprob: -1.6533482074737549
    3. ' s' → logprob: -2.153348207473755
    4. 'if' (adapté à ' if') → logprob: -2.528348207473755
    5. 's' → logprob: -2.778348207473755
    6. ' for' → logprob: -4.778347969055176
    7. ' return' → logprob: -5.653347969055176
    8. ' ans' → logprob: -5.778347969055176
    9. '    ' → logprob: -6.028347969055176
    10. ')' → logprob: -6.153347969055176

Token 40: ' s' (ID: 265)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.27593934535980225
    2. 'idx' → logprob: -2.400939464569092
    3. ' s' → logprob: -2.525939464569092
    4. 's' → logprob: -3.275939464569092
    5. ' ans' → logprob: -4.650939464569092
    6. ' abs' → logprob: -5.025939464569092
    7. 'abs' → logprob: -5.400939464569092
    8. ' __' → logprob: -6.150939464569092
    9. ' len' → logprob: -6.275939464569092
    10. '(idx' → logprob: -6.400939464569092

Token 41: 'Tr' (ID: 1410)
  Prédit: 'Tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tr' → logprob: -0.04405762255191803
    2. '[idx' → logprob: -3.169057607650757
    3. '_Tr' → logprob: -8.169057846069336
    4. '_tr' → logprob: -8.544057846069336
    5. 'Str' → logprob: -8.544057846069336
    6. '[' → logprob: -8.669057846069336
    7. 'tr' → logprob: -9.044057846069336
    8. ' Tr' → logprob: -10.669057846069336
    9. '_str' → logprob: -11.794057846069336
    10. 't' → logprob: -11.919057846069336

Token 42: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004248050507158041
    2. '[' → logprob: -5.504248142242432
    3. '==' → logprob: -10.254247665405273
    4. '   ' → logprob: -10.504247665405273
    5. '[int' → logprob: -10.879247665405273
    6. ' [' → logprob: -11.504247665405273
    7. '```' → logprob: -11.504247665405273
    8. '.startswith' → logprob: -11.629247665405273
    9. ' ==' → logprob: -11.754247665405273
    10. 'idx' → logprob: -12.316747665405273

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0443190336227417
    2. ']==' → logprob: -3.2943191528320312
    3. ']!=' → logprob: -6.169319152832031
    4. '].' → logprob: -6.669319152832031
    5. ' ]' → logprob: -6.794319152832031
    6. ']=='' → logprob: -7.669319152832031
    7. ':' → logprob: -8.044319152832031
    8. '+' → logprob: -8.669319152832031
    9. '-' → logprob: -8.669319152832031
    10. ']+' → logprob: -9.294319152832031

Token 44: ' !=' (ID: 1666)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4072798490524292
    2. '==' → logprob: -2.1572799682617188
    3. ']==' → logprob: -2.1572799682617188
    4. ' ==' → logprob: -3.0322799682617188
    5. ' in' → logprob: -4.407279968261719
    6. '].' → logprob: -4.657279968261719
    7. ']!=' → logprob: -5.282279968261719
    8. '!=' → logprob: -5.282279968261719
    9. 'is' → logprob: -5.907279968261719
    10. '>' → logprob: -5.907279968261719

Token 45: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08722769469022751
    2. ' s' → logprob: -2.9622275829315186
    3. ''' → logprob: -3.8372275829315186
    4. ''s' → logprob: -5.462227821350098
    5. '')' → logprob: -6.462227821350098
    6. ' '' → logprob: -6.712227821350098
    7. ' ' → logprob: -8.149727821350098
    8. ' '('' → logprob: -8.462227821350098
    9. ''}' → logprob: -8.524727821350098
    10. '"' → logprob: -8.524727821350098

Token 46: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8937410116195679
    2. ''' → logprob: -1.5187410116195679
    3. ')' → logprob: -2.0187411308288574
    4. 's' → logprob: -2.8937411308288574
    5. '?' → logprob: -3.5187411308288574
    6. '('' → logprob: -3.5187411308288574
    7. ''s' → logprob: -4.268741130828857
    8. '_' → logprob: -4.393741130828857
    9. ')'' → logprob: -4.643741130828857
    10. ' '' → logprob: -4.893741130828857

Token 47: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03501872345805168
    2. ''' → logprob: -3.4100186824798584
    3. ' ':' → logprob: -7.7850189208984375
    4. '':
' → logprob: -8.160018920898438
    5. ']:' → logprob: -8.910018920898438
    6. ':' → logprob: -8.910018920898438
    7. ']' → logprob: -9.285018920898438
    8. '0' → logprob: -10.160018920898438
    9. ''s' → logprob: -10.285018920898438
    10. ' '' → logprob: -10.410018920898438

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16327236592769623
    2. ' and' → logprob: -2.9132723808288574
    3. ' :' → logprob: -3.2882723808288574
    4. ':return' → logprob: -3.7882723808288574
    5. ' ' → logprob: -4.288272380828857
    6. ')' → logprob: -5.663272380828857
    7. ':
' → logprob: -5.788272380828857
    8. ' or' → logprob: -5.788272380828857
    9. '0' → logprob: -6.038272380828857
    10. '   ' → logprob: -6.163272380828857

Token 49: ' ans' (ID: 3345)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8210465312004089
    2. ' ans' → logprob: -0.8210465312004089
    3. 'return' → logprob: -2.5710465908050537
    4. 'ans' (adapté à ' ans') → logprob: -3.3210465908050537
    5. '   ' → logprob: -5.821046352386475
    6. ' ' → logprob: -6.696046352386475
    7. ' s' → logprob: -7.821046352386475
    8. '(ans' → logprob: -8.071046829223633
    9. 's' → logprob: -8.196046829223633
    10. ' ' → logprob: -8.321046829223633

Token 50: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -1.9027791495318525e-05
    2. 'holder' → logprob: -12.000019073486328
    3. '_keeper' → logprob: -12.750019073486328
    4. 'Holder' → logprob: -13.000019073486328
    5. '	holder' → logprob: -13.000019073486328
    6. '_' → logprob: -13.750019073486328
    7. '-holder' → logprob: -13.875019073486328
    8. ' holder' → logprob: -14.250019073486328
    9. 's' → logprob: -14.625019073486328
    10. '_hold' → logprob: -14.750019073486328

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13080842792987823
    2. '.append' → logprob: -2.1308083534240723
    3. '[-' → logprob: -6.005808353424072
    4. ' [' → logprob: -7.755808353424072
    5. 'append' → logprob: -8.13080883026123
    6. ' ' → logprob: -8.88080883026123
    7. ' append' → logprob: -9.38080883026123
    8. '0' → logprob: -9.50580883026123
    9. '=' → logprob: -10.13080883026123
    10. '   ' → logprob: -10.25580883026123

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002537104592192918
    2. ' ' → logprob: -8.875253677368164
    3. '-' → logprob: -9.250253677368164
    4. ']' → logprob: -11.750253677368164
    5. ' -' → logprob: -12.937753677368164
    6. '   ' → logprob: -13.000253677368164
    7. '1' → logprob: -13.625253677368164
    8. '  ' → logprob: -14.500253677368164
    9. 'idx' → logprob: -14.875253677368164
    10. '    ' → logprob: -15.187753677368164

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01857362873852253
    2. ' ]' → logprob: -5.018573760986328
    3. '*' → logprob: -5.768573760986328
    4. ')' → logprob: -5.893573760986328
    5. ']+=' → logprob: -6.143573760986328
    6. ' *=' → logprob: -6.268573760986328
    7. '*=' → logprob: -7.393573760986328
    8. ']*' → logprob: -7.768573760986328
    9. '   ' → logprob: -9.268573760986328
    10. ' +=' → logprob: -9.393573760986328

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4536627233028412
    2. '*=' → logprob: -1.9536627531051636
    3. ' *=' → logprob: -2.578662633895874
    4. ' =' → logprob: -2.703662633895874
    5. '+=' → logprob: -2.828662633895874
    6. ' +=' → logprob: -3.953662633895874
    7. ' ' → logprob: -7.078662872314453
    8. '*' → logprob: -7.328662872314453
    9. '-=' → logprob: -9.078662872314453
    10. ' -=' → logprob: -9.703662872314453

Token 55: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061226796358823776
    2. ' ' → logprob: -4.061226844787598
    3. 'idx' → logprob: -4.561226844787598
    4. 'False' → logprob: -5.061226844787598
    5. 'ans' → logprob: -5.311226844787598
    6. 'max' → logprob: -5.311226844787598
    7. '-' → logprob: -5.436226844787598
    8. '1' → logprob: -6.061226844787598
    9. ' idx' → logprob: -6.186226844787598
    10. ' ans' → logprob: -6.561226844787598

Token 56: 'Tr' (ID: 1410)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9398096203804016
    2. 'n' → logprob: -1.3148095607757568
    3. 'Tr' → logprob: -1.5648095607757568
    4. 'x' → logprob: -3.189809560775757
    5. 'q' → logprob: -4.439809799194336
    6. 'ax' → logprob: -4.564809799194336
    7. 'tr' → logprob: -4.564809799194336
    8. '1' → logprob: -4.689809799194336
    9. 'z' → logprob: -4.814809799194336
    10. 'rr' → logprob: -5.189809799194336

Token 57: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.19751372933387756
    2. '[' → logprob: -1.8225136995315552
    3. '[:' → logprob: -4.947513580322266
    4. '[:]' → logprob: -4.947513580322266
    5. '<|end|>' → logprob: -7.572513580322266
    6. 'idx' → logprob: -7.822513580322266
    7. '[::-' → logprob: -8.072513580322266
    8. '[index' → logprob: -8.322513580322266
    9. '.replace' → logprob: -8.947513580322266
    10. '```' → logprob: -9.072513580322266

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01047100592404604
    2. ']
' → logprob: -5.510470867156982
    3. '])' → logprob: -6.385470867156982
    4. '']' → logprob: -6.885470867156982
    5. ')' → logprob: -7.260470867156982
    6. ']+' → logprob: -7.260470867156982
    7. '       ' → logprob: -7.385470867156982
    8. ']==' → logprob: -8.01047134399414
    9. ' ]' → logprob: -8.26047134399414
    10. '+' → logprob: -8.63547134399414

Token 59: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3429815173149109
    2. '<|end|>' → logprob: -1.5929815769195557
    3. 'def' → logprob: -3.5929815769195557
    4. ')' → logprob: -4.342981338500977
    5. '<|end|>' → logprob: -4.967981338500977
    6. '   ' → logprob: -5.217981338500977
    7. '#' → logprob: -5.342981338500977
    8. '    
' → logprob: -5.842981338500977
    9. 'for' → logprob: -5.842981338500977
    10. '```' → logprob: -5.967981338500977

Token 60: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21883000433444977
    2. 'return' → logprob: -1.8438299894332886
    3. ' return' → logprob: -4.093830108642578
    4. '   ' → logprob: -4.468830108642578
    5. '<|end|>' → logprob: -6.218830108642578
    6. 'def' → logprob: -6.843830108642578
    7. '           ' → logprob: -6.843830108642578
    8. '#' → logprob: -6.968830108642578
    9. ')' → logprob: -7.093830108642578
    10. 'import' → logprob: -7.718830108642578

Token 61: ' Stop' (ID: 22535)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.6437750458717346
    2. ' Index' → logprob: -1.1437749862670898
    3. ' Value' → logprob: -2.39377498626709
    4. ' Stop' → logprob: -2.76877498626709
    5. ' Assertion' → logprob: -7.39377498626709
    6. ' Runtime' → logprob: -7.76877498626709
    7. 'Exception' → logprob: -7.76877498626709
    8. 'Index' → logprob: -8.26877498626709
    9. 'Stop' → logprob: -8.76877498626709
    10. ' Name' → logprob: -10.26877498626709

Token 62: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.246537173457909e-06
    2. 'Iter' → logprob: -13.250003814697266
    3. 'Traversal' → logprob: -13.500003814697266
    4. '_iteration' → logprob: -14.625003814697266
    5. 'Execution' → logprob: -15.000003814697266
    6. 'iteration' → logprob: -16.250003814697266
    7. ' iteration' → logprob: -16.500003814697266
    8. 'Iterator' → logprob: -16.750003814697266
    9. 'Iterations' → logprob: -17.375003814697266
    10. 'Exception' → logprob: -17.625003814697266

Token 63: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.855558454990387
    2. 'for' → logprob: -1.3555583953857422
    3. 'try' → logprob: -1.7305583953857422
    4. '
' → logprob: -3.105558395385742
    5. ' for' → logprob: -3.105558395385742
    6. '   ' → logprob: -4.105558395385742
    7. '<|end|>' → logprob: -4.105558395385742
    8. ')' → logprob: -4.855558395385742
    9. ' try' → logprob: -5.480558395385742
    10. '    
' → logprob: -6.980558395385742

Token 64: 'try' (ID: 1806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.357858806848526
    2. 'try' → logprob: -1.3578587770462036
    3. ' for' → logprob: -4.107858657836914
    4. 'def' → logprob: -4.732858657836914
    5. ')' → logprob: -4.857858657836914
    6. '   ' → logprob: -5.357858657836914
    7. '    
' → logprob: -6.982858657836914
    8. ' try' → logprob: -6.982858657836914
    9. ' 
' → logprob: -7.357858657836914
    10. 'return' → logprob: -7.607858657836914

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.468279752880335e-05
    2. ':
' → logprob: -10.250064849853516
    3. ' :' → logprob: -10.625064849853516
    4. '():' → logprob: -12.625064849853516
    5. ':def' → logprob: -14.375064849853516
    6. '(' → logprob: -15.375064849853516
    7. '   ' → logprob: -15.625064849853516
    8. '):' → logprob: -16.000064849853516
    9. ':return' → logprob: -16.000064849853516
    10. '：' → logprob: -16.375064849853516

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32194939255714417
    2. '   ' → logprob: -2.0719494819641113
    3. 'for' → logprob: -2.4469494819641113
    4. ' reduce' → logprob: -3.3219494819641113
    5. 'reduce' → logprob: -3.8219494819641113
    6. ' range' → logprob: -5.821949481964111
    7. '[' → logprob: -7.071949481964111
    8. 'range' → logprob: -7.946949481964111
    9. ' [' → logprob: -8.571949005126953
    10. ' from' → logprob: -9.196949005126953

Token 67: ' list' (ID: 1562)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6571477651596069
    2. 'for' → logprob: -0.7821477651596069
    3. ' for' → logprob: -4.6571478843688965
    4. '   ' → logprob: -5.0321478843688965
    5. ' reduce' → logprob: -5.1571478843688965
    6. '[' → logprob: -7.4071478843688965
    7. 'from' → logprob: -7.5321478843688965
    8. 'range' → logprob: -8.032147407531738
    9. 'all' → logprob: -8.282147407531738
    10. '_' → logprob: -9.032147407531738

Token 68: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03956996649503708
    2. '(range' → logprob: -3.289569854736328
    3. '(' → logprob: -7.289569854736328
    4. '(filter' → logprob: -7.539569854736328
    5. '(en' → logprob: -8.414569854736328
    6. '(re' → logprob: -9.414569854736328
    7. '(iter' → logprob: -12.914569854736328
    8. '(zip' → logprob: -13.539569854736328
    9. 'map' → logprob: -13.664569854736328
    10. '(m' → logprob: -13.914569854736328

Token 69: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.0005259881727397442
    2. '(lambda' → logprob: -7.750525951385498
    3. '(' → logprob: -9.500526428222656
    4. ')' → logprob: -11.125526428222656
    5. ' (' → logprob: -12.750526428222656
    6. '(
' → logprob: -13.750526428222656
    7. ' checker' → logprob: -14.625526428222656
    8. 'checker' → logprob: -15.000526428222656
    9. ')(' → logprob: -15.375526428222656
    10. '_checker' → logprob: -16.000526428222656

Token 70: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.320199877838604e-07
    2. 'ker' → logprob: -15.0
    3. ')' → logprob: -18.0
    4. '{' → logprob: -18.25
    5. '(' → logprob: -18.625
    6. 'cer' → logprob: -19.0
    7. 'e' → logprob: -19.125
    8. '_er' → logprob: -19.25
    9. '```' → logprob: -19.625
    10. 'ER' → logprob: -19.875

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004097003838978708
    2. ' ,' → logprob: -8.625410079956055
    3. ',len' → logprob: -9.250410079956055
    4. 'range' → logprob: -10.250410079956055
    5. '(range' → logprob: -10.625410079956055
    6. ',int' → logprob: -10.750410079956055
    7. ',(' → logprob: -10.875410079956055
    8. '))' → logprob: -12.250410079956055
    9. ',index' → logprob: -12.500410079956055
    10. ',list' → logprob: -12.875410079956055

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031791406217962503
    2. ' range' → logprob: -5.75317907333374
    3. '(range' → logprob: -13.753179550170898
    4. '   ' → logprob: -15.628179550170898
    5. '	range' → logprob: -16.0031795501709
    6. '[' → logprob: -16.5031795501709
    7. ' ' → logprob: -16.8781795501709
    8. 'list' → logprob: -16.8781795501709
    9. ')' → logprob: -18.5031795501709
    10. '  ' → logprob: -18.6281795501709

Token 73: '(__' (ID: 11782)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.002190233441069722
    2. '(__' → logprob: -6.252190113067627
    3. '(' → logprob: -8.252190589904785
    4. ')(__' → logprob: -14.502190589904785
    5. '($__' → logprob: -16.12718963623047
    6. '(
' → logprob: -16.25218963623047
    7. 'len' → logprob: -16.75218963623047
    8. '(-' → logprob: -17.62718963623047
    9. '(l' → logprob: -17.62718963623047
    10. '(length' → logprob: -17.87718963623047

Token 74: 'k' (ID: 74)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.2258116900920868
    2. 'k' → logprob: -1.6008117198944092
    3. '__' → logprob: -9.100811958312988
    4. '(k' → logprob: -9.350811958312988
    5. 'len' → logprob: -9.350811958312988
    6. '(len' → logprob: -9.850811958312988
    7. ' k' → logprob: -11.100811958312988
    8. ')' → logprob: -12.100811958312988
    9. '-k' → logprob: -12.600811958312988
    10. ' __' → logprob: -12.663311958312988

Token 75: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.001972053898498416
    2. ')' → logprob: -6.376972198486328
    3. '))' → logprob: -9.001972198486328
    4. ' ' → logprob: -9.876972198486328
    5. ')));' → logprob: -10.251972198486328
    6. ')))
' → logprob: -10.376972198486328
    7. '))))' → logprob: -11.126972198486328
    8. '+' → logprob: -12.126972198486328
    9. ')))

' → logprob: -13.001972198486328
    10. '')))' → logprob: -13.251972198486328

Token 76: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09052613377571106
    2. ')
' → logprob: -2.4655261039733887
    3. 'except' → logprob: -6.715526103973389
    4. ' except' → logprob: -8.965526580810547
    5. ')

' → logprob: -9.090526580810547
    6. '))' → logprob: -9.215526580810547
    7. ')
' → logprob: -11.340526580810547
    8. ')`
' → logprob: -11.965526580810547
    9. '))
' → logprob: -12.090526580810547
    10. '   ' → logprob: -12.840526580810547

Token 77: ' Stop' (ID: 22535)
  Prédit: ' Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stop' → logprob: -6.802049756515771e-05
    2. 'Stop' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.250067710876465
    4. '_Stop' → logprob: -16.50006866455078
    5. ' Stops' → logprob: -17.50006866455078
    6. ' stop' → logprob: -17.62506866455078
    7. 'Stopping' → logprob: -18.37506866455078
    8. '_stop' → logprob: -18.50006866455078
    9. ' STOP' → logprob: -18.50006866455078
    10. ' ' → logprob: -19.87506866455078

Token 78: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -2.2246291337069124e-05
    2. 'iteration' → logprob: -10.875021934509277
    3. 'Iter' → logprob: -13.250021934509277
    4. '_iteration' → logprob: -13.625021934509277
    5. 'Iterator' → logprob: -15.625021934509277
    6. 'Exception' → logprob: -17.000022888183594
    7. ' iteration' → logprob: -17.125022888183594
    8. 'Interaction' → logprob: -17.750022888183594
    9. ' Iter' → logprob: -17.875022888183594
    10. 'Iterations' → logprob: -17.875022888183594

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0161366555839777
    2. ':
' → logprob: -4.141136646270752
    3. '   ' → logprob: -10.51613712310791
    4. ' :' → logprob: -10.89113712310791
    5. ':return' → logprob: -10.89113712310791
    6. ' pass' → logprob: -11.64113712310791
    7. ':

' → logprob: -12.39113712310791
    8. 'pass' → logprob: -12.39113712310791
    9. ' ' → logprob: -12.76613712310791
    10. ':void' → logprob: -12.89113712310791

Token 80: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3771786093711853
    2. '   ' → logprob: -2.25217866897583
    3. ' pass' → logprob: -2.25217866897583
    4. 'pass' → logprob: -2.87717866897583
    5. ' print' → logprob: -3.12717866897583
    6. 'ans' → logprob: -6.25217866897583
    7. ' ans' → logprob: -6.75217866897583
    8. '(ans' → logprob: -8.752178192138672
    9. ' None' → logprob: -8.877178192138672
    10. '	pass' → logprob: -9.002178192138672

Token 81: ' pass' (ID: 1853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7310946583747864
    2. 'pass' (adapté à ' pass') → logprob: -0.9810946583747864
    3. ' pass' → logprob: -1.9810945987701416
    4. ' print' → logprob: -5.856094837188721
    5. 'ans' → logprob: -6.481094837188721
    6. '   ' → logprob: -6.981094837188721
    7. ' ans' → logprob: -8.981094360351562
    8. '(ans' → logprob: -9.231094360351562
    9. '	pass' → logprob: -9.606094360351562
    10. '...' → logprob: -9.856094360351562

Token 82: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02136128768324852
    2. '
' → logprob: -4.396361351013184
    3. 'ans' → logprob: -5.146361351013184
    4. ')' → logprob: -7.271361351013184
    5. ')
' → logprob: -7.646361351013184
    6. 'if' → logprob: -7.896361351013184
    7. '  
' → logprob: -8.271361351013184
    8. ' 
' → logprob: -8.396361351013184
    9. '(ans' → logprob: -8.771361351013184
    10. '    
' → logprob: -9.146361351013184

Token 83: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02389681711792946
    2. 'ans' → logprob: -4.39889669418335
    3. 'if' → logprob: -4.77389669418335
    4. 'else' → logprob: -6.14889669418335
    5. 'for' → logprob: -8.898897171020508
    6. '(ans' → logprob: -9.023897171020508
    7. ' ans' → logprob: -9.398897171020508
    8. '#' → logprob: -9.898897171020508
    9. '
' → logprob: -10.023897171020508
    10. '[' → logprob: -10.273897171020508

Token 84: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0028485057409852743
    2. '(' → logprob: -5.8778486251831055
    3. 'ans' → logprob: -10.502848625183105
    4. '('' → logprob: -12.002848625183105
    5. '(ord' → logprob: -12.752848625183105
    6. '((' → logprob: -13.127848625183105
    7. '(f' → logprob: -13.127848625183105
    8. '(*' → logprob: -14.377848625183105
    9. '("("' → logprob: -15.002848625183105
    10. '(len' → logprob: -15.002848625183105

Token 85: '_holder' (ID: 128963)
  Prédit: '_holder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_holder' → logprob: -9.901345038088039e-05
    2. 'holder' → logprob: -9.250099182128906
    3. '-holder' → logprob: -14.000099182128906
    4. '_h' → logprob: -14.125099182128906
    5. '	holder' → logprob: -14.500099182128906
    6. 'er' → logprob: -15.750099182128906
    7. '_hold' → logprob: -16.000099182128906
    8. 'Holder' → logprob: -16.000099182128906
    9. ' holder' → logprob: -16.375099182128906
    10. 'older' → logprob: -16.500099182128906

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. ')' → logprob: -12.500004768371582
    3. ')[' → logprob: -15.000004768371582
    4. '0' → logprob: -15.625004768371582
    5. '```' → logprob: -15.625004768371582
    6. '][' → logprob: -18.750003814697266
    7. ' [' → logprob: -18.750003814697266
    8. ']' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '[
' → logprob: -19.500003814697266

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '[' → logprob: -16.125
    4. '```' → logprob: -16.375
    5. '   ' → logprob: -17.5
    6. '][' → logprob: -18.1875
    7. ')' → logprob: -18.375
    8. '`' → logprob: -18.375
    9. ' ' → logprob: -18.4375
    10. '
' → logprob: -18.5625

Token 88: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '])' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.500001907348633
    6. '`)' → logprob: -16.875001907348633
    7. '})' → logprob: -17.750001907348633
    8. '）' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.125001907348633
    10. '')' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 27.91%
Précision adaptée (1ère position): 27.91%
Précision (top 10): 59.30%
================================================================================
