================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Initialisation d'une variable de compteur appelée 'ans' qui va stocker le nombre de fois où deux caractères consécutifs de la chaîne sont différents.
ans = 0

# On demande à l'utilisateur de rentrer une chaîne de caractères.
# La fonction input() affiche une invite (ici vide) et attend que l'utilisateur tape des caractères puis appuie sur Entrée.
# Le texte tapé est alors stocké dans la variable 's' sous forme de chaîne de caractères (str).
s = input()

# La fonction range() est utilisée pour créer une séquence d’entiers.
# Ici, range(1, len(s)) crée une séquence commençant par 1 jusqu'à (mais sans inclure) len(s).
# len(s) renvoie le nombre de caractères de la chaîne 's'.
# La boucle for va donc parcourir tous les indices de 1 jusqu’à len(s) - 1 inclus.
for i in range(1, len(s)):
    # À chaque itération, on compare le caractère à l’indice actuel 'i' avec le caractère précédent, qui se trouve à l’indice 'i - 1'.
    # L’opérateur != signifie "différent de" : la condition est donc vraie si les deux caractères sont différents.
    if s[i] != s[i - 1]:
        # Si la condition précédente est vérifiée (les deux caractères consécutifs sont différents), on incrémente la variable 'ans' de 1.
        # Cela signifie que l’on a trouvé un endroit où deux caractères consécutifs ne sont pas identiques.
        ans += 1

# Après avoir examiné toute la chaîne, on vérifie la valeur de 'ans'.
# En Python, une valeur entière de 0 est considérée comme False dans un contexte booléen, et toute autre valeur est considérée comme True.
if ans:
    # Si 'ans' est différent de 0 (donc il y a eu au moins un endroit où deux caractères consécutifs sont différents),
    # on affiche la chaîne de caractères "Yes" à l'écran.
    print("Yes")
else:
    # Si 'ans' est égal à 0 (tous les caractères consécutifs sont identiques ou la chaîne a un seul caractère),
    # on affiche "No".
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Initial' (ID: 9209)
  → Token d'amorce (pas de prédiction)

Token 2: 'isation' (ID: 6993)
  → Token d'amorce (pas de prédiction)

Token 3: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15993677079677582
    2. '_' → logprob: -2.5349366664886475
    3. '=' → logprob: -3.4099366664886475
    4. ' =' → logprob: -4.034936904907227
    5. '```' → logprob: -4.534936904907227
    6. '#' → logprob: -5.284936904907227
    7. 'x' → logprob: -7.409936904907227
    8. ' :' → logprob: -8.034936904907227
    9. 'n' → logprob: -8.159936904907227
    10. '`' → logprob: -9.159936904907227

Token 4: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.045828402042388916
    2. ''' → logprob: -3.670828342437744
    3. '_' → logprob: -4.295828342437744
    4. 's' → logprob: -6.420828342437744
    5. 'e' → logprob: -6.545828342437744
    6. 'u' → logprob: -7.420828342437744
    7. '  ' → logprob: -7.795828342437744
    8. ' de' → logprob: -8.420828819274902
    9. '   ' → logprob: -8.920828819274902
    10. '```' → logprob: -8.920828819274902

Token 5: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2601208984851837
    2. 'variable' → logprob: -1.7601208686828613
    3. ' variable' → logprob: -4.010120868682861
    4. 'bibli' → logprob: -4.510120868682861
    5. '_' → logprob: -5.135120868682861
    6. ' #' → logprob: -5.510120868682861
    7. 'fonction' → logprob: -6.135120868682861
    8. 'configuration' → logprob: -6.135120868682861
    9. ' ' → logprob: -6.260120868682861
    10. '#' → logprob: -6.635120868682861

Token 6: ' de' (ID: 334)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5219425559043884
    2. 'x' → logprob: -1.7719426155090332
    3. 'a' → logprob: -1.8969426155090332
    4. '_' → logprob: -3.146942615509033
    5. 'm' → logprob: -4.396942615509033
    6. 'n' → logprob: -4.521942615509033
    7. ' ' → logprob: -5.271942615509033
    8. 'variable' → logprob: -5.396942615509033
    9. 'i' → logprob: -6.021942615509033
    10. '#' → logprob: -6.271942615509033

Token 7: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.20246069133281708
    2. 'type' → logprob: -2.827460765838623
    3. 'chaine' → logprob: -3.077460765838623
    4. ' compteur' → logprob: -3.702460765838623
    5. ' chaîne' → logprob: -4.327460765838623
    6. 'd' → logprob: -5.327460765838623
    7. ' type' → logprob: -5.577460765838623
    8. 'string' → logprob: -5.577460765838623
    9. 'cha' → logprob: -5.577460765838623
    10. 'texte' → logprob: -5.827460765838623

Token 8: ' appelée' (ID: 179130)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.0368512868881226
    2. 'c' → logprob: -1.2868512868881226
    3. 'counter' → logprob: -2.161851406097412
    4. 'count' → logprob: -2.286851406097412
    5. 'i' → logprob: -2.411851406097412
    6. ' compteur' → logprob: -3.411851406097412
    7. 'com' → logprob: -4.161851406097412
    8. 'n' → logprob: -4.661851406097412
    9. '_' → logprob: -6.536851406097412
    10. 'contador' → logprob: -7.161851406097412

Token 9: ' '' (ID: 461)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.18096035718917847
    2. ' compteur' → logprob: -2.1809604167938232
    3. 'i' → logprob: -3.3059604167938232
    4. ' i' → logprob: -5.555960178375244
    5. '`' → logprob: -5.805960178375244
    6. 'count' → logprob: -6.180960178375244
    7. '```' → logprob: -6.180960178375244
    8. 'com' → logprob: -6.430960178375244
    9. 'counter' → logprob: -6.930960178375244
    10. 'nombre' → logprob: -7.805960178375244

Token 10: 'ans' (ID: 616)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.006234383210539818
    2. 'i' → logprob: -5.381234169006348
    3. 'count' → logprob: -7.881234169006348
    4. 'c' → logprob: -7.881234169006348
    5. 'com' → logprob: -8.381234169006348
    6. 'counter' → logprob: -8.381234169006348
    7. ' compteur' → logprob: -8.756234169006348
    8. '`' → logprob: -9.756234169006348
    9. '```' → logprob: -9.881234169006348
    10. 'nombre' → logprob: -10.256234169006348

Token 11: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6341716647148132
    2. 'w' → logprob: -0.7591716647148132
    3. 'a' → logprob: -7.634171485900879
    4. 'wer' → logprob: -8.134171485900879
    5. '=' → logprob: -8.509171485900879
    6. ')' → logprob: -9.009171485900879
    7. '#' → logprob: -9.134171485900879
    8. ''' → logprob: -9.759171485900879
    9. 'we' → logprob: -9.759171485900879
    10. 'es' → logprob: -9.759171485900879

Token 12: ' qui' (ID: 2780)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15724849700927734
    2. '=' → logprob: -2.7822484970092773
    3. 'ans' → logprob: -3.0322484970092773
    4. ' =' → logprob: -3.6572484970092773
    5. 's' → logprob: -5.157248497009277
    6. ' a' → logprob: -6.657248497009277
    7. ' ans' → logprob: -7.032248497009277
    8. 'an' → logprob: -7.782248497009277
    9. 'i' → logprob: -8.407248497009277
    10. '```' → logprob: -8.782248497009277

Token 13: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4916229546070099
    2. ' ' → logprob: -1.3666229248046875
    3. '=' → logprob: -2.7416229248046875
    4. '_' → logprob: -3.2416229248046875
    5. '  ' → logprob: -5.3666229248046875
    6. ' a' → logprob: -5.4916229248046875
    7. ' est' → logprob: -5.8666229248046875
    8. ''' → logprob: -5.8666229248046875
    9. ' s' → logprob: -6.4916229248046875
    10. 's' → logprob: -6.8666229248046875

Token 14: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022005213424563408
    2. ' =' → logprob: -5.147005081176758
    3. ' ans' → logprob: -5.522005081176758
    4. ''' → logprob: -6.022005081176758
    5. '  ' → logprob: -6.272005081176758
    6. '   ' → logprob: -6.397005081176758
    7. '=' → logprob: -6.772005081176758
    8. '_' → logprob: -7.147005081176758
    9. ' s' → logprob: -7.147005081176758
    10. ' a' → logprob: -7.772005081176758

Token 15: 'er' (ID: 259)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.15520526468753815
    2. 'e' → logprob: -2.780205249786377
    3. 'er' → logprob: -3.780205249786377
    4. ' =' → logprob: -4.030205249786377
    5. 'a' → logprob: -4.155205249786377
    6. '=' → logprob: -4.155205249786377
    7. 'w' → logprob: -5.405205249786377
    8. 'é' → logprob: -6.905205249786377
    9. 'ier' → logprob: -7.030205249786377
    10. '#' → logprob: -7.155205249786377

Token 16: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10695884376764297
    2. ' =' → logprob: -3.1069588661193848
    3. '_' → logprob: -3.6069588661193848
    4. ' la' → logprob: -4.731958866119385
    5. '=' → logprob: -5.731958866119385
    6. ' le' → logprob: -6.231958866119385
    7. 's' → logprob: -6.481958866119385
    8. '  ' → logprob: -6.606958866119385
    9. ' l' → logprob: -6.731958866119385
    10. 'le' → logprob: -7.106958866119385

Token 17: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.506827175617218
    2. 's' → logprob: -1.8818271160125732
    3. ' résultat' → logprob: -1.8818271160125732
    4. ' nombre' → logprob: -2.8818271160125732
    5. 'nombre' → logprob: -5.631827354431152
    6. '  ' → logprob: -5.631827354431152
    7. ' resultat' → logprob: -5.631827354431152
    8. ' ' → logprob: -5.756827354431152
    9. '   ' → logprob: -5.881827354431152
    10. '_' → logprob: -6.131827354431152

Token 18: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6108208298683167
    2. '_' → logprob: -1.1108207702636719
    3. ' =' → logprob: -2.860820770263672
    4. 's' → logprob: -2.985820770263672
    5. '_s' → logprob: -4.735820770263672
    6. ' de' → logprob: -5.860820770263672
    7. '=' → logprob: -6.110820770263672
    8. '  ' → logprob: -6.985820770263672
    9. ' d' → logprob: -7.485820770263672
    10. '_space' → logprob: -7.485820770263672

Token 19: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05038958042860031
    2. '_' → logprob: -3.300389528274536
    3. 's' → logprob: -5.925389766693115
    4. ' _' → logprob: -5.925389766693115
    5. '_s' → logprob: -6.550389766693115
    6. ' s' → logprob: -6.675389766693115
    7. ' réponses' → logprob: -7.050389766693115
    8. ' espaces' → logprob: -7.550389766693115
    9. '  ' → logprob: -7.800389766693115
    10. ' =' → logprob: -8.425389289855957

Token 20: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16605113446712494
    2. '_' → logprob: -2.041051149368286
    3. ' =' → logprob: -4.166050910949707
    4. '=' → logprob: -5.666050910949707
    5. ' _' → logprob: -6.416050910949707
    6. ''' → logprob: -7.541050910949707
    7. '  ' → logprob: -7.916050910949707
    8. 's' → logprob: -8.166050910949707
    9. 'space' → logprob: -8.791050910949707
    10. '_answer' → logprob: -8.791050910949707

Token 21: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8837235569953918
    2. ''' → logprob: -1.383723497390747
    3. ' '' → logprob: -2.258723497390747
    4. ' ans' → logprob: -2.883723497390747
    5. ' l' → logprob: -3.258723497390747
    6. ' la' → logprob: -3.258723497390747
    7. ' on' → logprob: -3.883723497390747
    8. 'l' → logprob: -4.383723735809326
    9. 'ans' → logprob: -4.508723735809326
    10. 'a' → logprob: -5.383723735809326

Token 22: ' caractères' (ID: 183106)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.40760114789009094
    2. '_' → logprob: -1.4076011180877686
    3. ' ' → logprob: -4.282601356506348
    4. ' espace' → logprob: -4.407601356506348
    5. ' mots' → logprob: -4.782601356506348
    6. ' chaînes' → logprob: -4.907601356506348
    7. 'm' → logprob: -4.907601356506348
    8. 'esp' → logprob: -5.157601356506348
    9. 's' → logprob: -5.157601356506348
    10. 'space' → logprob: -5.782601356506348

Token 23: ' cons' (ID: 1473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31683269143104553
    2. 's' → logprob: -1.5668326616287231
    3. ' ' → logprob: -4.191832542419434
    4. ' s' → logprob: -4.191832542419434
    5. ' _' → logprob: -4.566832542419434
    6. ' =' → logprob: -4.691832542419434
    7. '_s' → logprob: -4.816832542419434
    8. ''' → logprob: -6.566832542419434
    9. '=' → logprob: -6.816832542419434
    10. ' '' → logprob: -7.191832542419434

Token 24: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.2242818921804428
    2. 'é' → logprob: -2.3492817878723145
    3. 'éc' → logprob: -3.3492817878723145
    4. 'ecut' → logprob: -3.8492817878723145
    5. 'c' → logprob: -4.0992817878723145
    6. 'q' → logprob: -4.2242817878723145
    7. 'cut' → logprob: -5.8492817878723145
    8. 'ec' → logprob: -6.2242817878723145
    9. 'e' → logprob: -6.2242817878723145
    10. 'écution' → logprob: -6.5992817878723145

Token 25: 'ifs' (ID: 14119)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6599783897399902
    2. 'u' → logprob: -0.7849783897399902
    3. 's' → logprob: -4.78497838973999
    4. ''' → logprob: -5.40997838973999
    5. 'e' → logprob: -5.65997838973999
    6. ''u' → logprob: -6.03497838973999
    7. 'cut' → logprob: -6.53497838973999
    8. 'uc' → logprob: -7.28497838973999
    9. ''s' → logprob: -7.28497838973999
    10. '```' → logprob: -7.53497838973999

Token 26: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8749933242797852
    2. 's' → logprob: -1.1249933242797852
    3. ' ' → logprob: -1.4999933242797852
    4. ' =' → logprob: -4.624993324279785
    5. '=' → logprob: -4.999993324279785
    6. ' s' → logprob: -5.499993324279785
    7. ' '' → logprob: -5.624993324279785
    8. ' _' → logprob: -5.749993324279785
    9. '_s' → logprob: -6.374993324279785
    10. ''' → logprob: -6.374993324279785

Token 27: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7742834687232971
    2. 's' → logprob: -1.5242834091186523
    3. 'a' → logprob: -2.1492834091186523
    4. ' l' → logprob: -2.7742834091186523
    5. ' s' → logprob: -3.0242834091186523
    6. 'l' → logprob: -3.3992834091186523
    7. ''' → logprob: -4.399283409118652
    8. 'la' → logprob: -4.524283409118652
    9. ' a' → logprob: -4.649283409118652
    10. ' ' → logprob: -4.774283409118652

Token 28: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007134351413697004
    2. ' chaîne' → logprob: -6.382134437561035
    3. 's' → logprob: -6.507134437561035
    4. '  ' → logprob: -7.382134437561035
    5. ' '' → logprob: -7.632134437561035
    6. ' s' → logprob: -8.007134437561035
    7. '   ' → logprob: -8.132134437561035
    8. ''' → logprob: -8.257134437561035
    9. ' string' → logprob: -8.632134437561035
    10. 'a' → logprob: -8.632134437561035

Token 29: ' sont' (ID: 5242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15038324892520905
    2. ' ' → logprob: -3.025383234024048
    3. ' =' → logprob: -3.150383234024048
    4. 's' → logprob: -4.025383472442627
    5. '=' → logprob: -4.525383472442627
    6. ' _' → logprob: -4.775383472442627
    7. ''' → logprob: -6.150383472442627
    8. '_s' → logprob: -6.775383472442627
    9. 'e' → logprob: -6.900383472442627
    10. ' '' → logprob: -7.150383472442627

Token 30: ' différents' (ID: 36009)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2192374467849731
    2. ' différents' → logprob: -1.3442374467849731
    3. ' ég' → logprob: -1.3442374467849731
    4. ' ident' → logprob: -2.4692373275756836
    5. ' différent' → logprob: -4.094237327575684
    6. ' '' → logprob: -4.469237327575684
    7. ''' → logprob: -4.844237327575684
    8. ' différentes' → logprob: -4.844237327575684
    9. 'diff' → logprob: -4.969237327575684
    10. 's' → logprob: -5.094237327575684

Token 31: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02361242100596428
    2. '_' → logprob: -4.0236124992370605
    3. 'ans' → logprob: -5.8986124992370605
    4. '=' → logprob: -7.3986124992370605
    5. ',' → logprob: -7.6486124992370605
    6. ' ' → logprob: -8.148612022399902
    7. 'i' → logprob: -8.273612022399902
    8. '#' → logprob: -8.898612022399902
    9. ':' → logprob: -9.023612022399902
    10. 's' → logprob: -9.148612022399902

Token 32: 'ans' (ID: 616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010735921561717987
    2. 'ans' → logprob: -4.760735988616943
    3. '_' → logprob: -7.260735988616943
    4. 'i' → logprob: -8.260735511779785
    5. '=' → logprob: -8.635735511779785
    6. '```' → logprob: -8.635735511779785
    7. ' ' → logprob: -8.760735511779785
    8. ' ans' → logprob: -8.885735511779785
    9. ' a' → logprob: -9.635735511779785
    10. ',' → logprob: -9.635735511779785

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021950993686914444
    2. '=' → logprob: -4.271951198577881
    3. ' +=' → logprob: -5.146951198577881
    4. ' ' → logprob: -6.271951198577881
    5. '+=' → logprob: -11.896950721740723
    6. 's' → logprob: -12.021950721740723
    7. ' ' → logprob: -12.146950721740723
    8. 'space' → logprob: -12.146950721740723
    9. '.' → logprob: -12.271950721740723
    10. ' *=' → logprob: -12.771950721740723

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007610651198774576
    2. ' ' → logprob: -4.88261079788208
    3. '1' → logprob: -13.007610321044922
    4. ' ' → logprob: -13.132610321044922
    5. '۰' → logprob: -16.757610321044922
    6. '０' → logprob: -17.382610321044922
    7. '```' → logprob: -17.445110321044922
    8. '  ' → logprob: -17.570110321044922
    9. '2' → logprob: -17.882610321044922
    10. '   ' → logprob: -18.007610321044922

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000104616025055293
    2. '1' → logprob: -9.750104904174805
    3. ' ' → logprob: -10.000104904174805
    4. ' ' → logprob: -15.625104904174805
    5. '```' → logprob: -16.000104904174805
    6. '-' → logprob: -16.250104904174805
    7. '2' → logprob: -16.250104904174805
    8. 'int' → logprob: -16.312604904174805
    9. '"' → logprob: -17.125104904174805
    10. '۰' → logprob: -17.375104904174805

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0914953351020813
    2. '\n' → logprob: -3.5914952754974365
    3. 'for' → logprob: -4.091495513916016
    4. ' ' → logprob: -4.591495513916016
    5. 'i' → logprob: -4.841495513916016
    6. '\' → logprob: -5.091495513916016
    7. 'n' → logprob: -5.466495513916016
    8. ' 
' → logprob: -5.591495513916016
    9. ' for' → logprob: -5.591495513916016
    10. '

' → logprob: -6.341495513916016

Token 37: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19292514026165009
    2. ' ' → logprob: -2.942925214767456
    3. 'for' → logprob: -2.942925214767456
    4. ',' → logprob: -4.067924976348877
    5. 'n' → logprob: -4.442924976348877
    6. '
' → logprob: -4.567924976348877
    7. ' for' → logprob: -4.692924976348877
    8. 'a' → logprob: -5.442924976348877
    9. 's' → logprob: -5.567924976348877
    10. '\' → logprob: -5.692924976348877

Token 38: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45117637515068054
    2. ' for' → logprob: -1.451176404953003
    3. 'chaine' → logprob: -2.951176404953003
    4. 's' → logprob: -3.576176404953003
    5. 'string' → logprob: -4.201176166534424
    6. ' s' → logprob: -4.326176166534424
    7. ' string' → logprob: -4.576176166534424
    8. 'text' → logprob: -6.451176166534424
    9. ' text' → logprob: -6.701176166534424
    10. ' i' → logprob: -6.826176166534424

Token 39: ' demande' (ID: 26737)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015181849710643291
    2. ' for' → logprob: -5.640182018280029
    3. '_' → logprob: -6.140182018280029
    4. ' a' → logprob: -6.265182018280029
    5. 'i' → logprob: -6.640182018280029
    6. ' i' → logprob: -6.765182018280029
    7. 'n' → logprob: -7.015182018280029
    8. 'for' → logprob: -7.140182018280029
    9. ' ' → logprob: -7.140182018280029
    10. 's' → logprob: -7.640182018280029

Token 40: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.009856079705059528
    2. ' a' → logprob: -5.259856224060059
    3. 'à' → logprob: -6.009856224060059
    4. ' ' → logprob: -6.884856224060059
    5. ' ' → logprob: -8.134856224060059
    6. ' une' → logprob: -8.384856224060059
    7. 'l' → logprob: -8.759856224060059
    8. ' la' → logprob: -8.884856224060059
    9. 'a' → logprob: -8.884856224060059
    10. ' l' → logprob: -9.884856224060059

Token 41: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9489409327507019
    2. 'user' → logprob: -1.0739409923553467
    3. 's' → logprob: -2.3239409923553467
    4. 'chaine' → logprob: -2.3239409923553467
    5. 'la' → logprob: -3.3239409923553467
    6. ' l' → logprob: -4.698940753936768
    7. 'input' → logprob: -4.698940753936768
    8. ' user' → logprob: -5.823940753936768
    9. 'une' → logprob: -5.823940753936768
    10. 'string' → logprob: -5.948940753936768

Token 42: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.034342121332883835
    2. 'u' → logprob: -4.284342288970947
    3. ''' → logprob: -4.784342288970947
    4. 'a' → logprob: -4.909342288970947
    5. '’utilisateur' → logprob: -6.159342288970947
    6. ''user' → logprob: -7.534342288970947
    7. ''util' → logprob: -7.909342288970947
    8. ''us' → logprob: -8.034341812133789
    9. 'util' → logprob: -8.284341812133789
    10. ' utilisateur' → logprob: -8.659341812133789

Token 43: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4125131070613861
    2. ' ' → logprob: -2.162513017654419
    3. 'd' → logprob: -2.662513017654419
    4. ' de' → logprob: -3.287513017654419
    5. 's' → logprob: -3.787513017654419
    6. ' une' → logprob: -4.162513256072998
    7. 'input' → logprob: -4.537513256072998
    8. 'l' → logprob: -4.662513256072998
    9. ' ' → logprob: -4.787513256072998
    10. ' la' → logprob: -5.162513256072998

Token 44: ' rentrer' (ID: 139555)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5777486562728882
    2. ' input' → logprob: -1.3277486562728882
    3. 's' → logprob: -2.3277487754821777
    4. ' saisir' → logprob: -2.7027487754821777
    5. 'str' → logprob: -5.702748775482178
    6. ' ' → logprob: -5.827748775482178
    7. 'chaine' → logprob: -7.952748775482178
    8. ' s' → logprob: -8.07774829864502
    9. ' entrer' → logprob: -8.07774829864502
    10. 'l' → logprob: -8.45274829864502

Token 45: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28019392490386963
    2. ' une' → logprob: -1.5301939249038696
    3. ' ' → logprob: -4.03019380569458
    4. ' la' → logprob: -5.40519380569458
    5. ' un' → logprob: -6.03019380569458
    6. 'une' → logprob: -6.90519380569458
    7. ' a' → logprob: -7.53019380569458
    8. 's' → logprob: -7.65519380569458
    9. 'a' → logprob: -8.155194282531738
    10. 'l' → logprob: -8.405194282531738

Token 46: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.15355277061462402
    2. 'chaine' → logprob: -2.278552770614624
    3. ' ' → logprob: -4.028553009033203
    4. ' chaine' → logprob: -4.153553009033203
    5. 's' → logprob: -6.153553009033203
    6. 'cha' → logprob: -6.278553009033203
    7. ' phrase' → logprob: -7.153553009033203
    8. 'ch' → logprob: -8.278553009033203
    9. ' string' → logprob: -8.528553009033203
    10. ' cha' → logprob: -8.653553009033203

Token 47: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6275089383125305
    2. ' de' → logprob: -1.3775088787078857
    3. 's' → logprob: -1.8775088787078857
    4. '_' → logprob: -4.002509117126465
    5. ' ' → logprob: -4.502509117126465
    6. '.' → logprob: -5.252509117126465
    7. 'd' → logprob: -6.002509117126465
    8. ')' → logprob: -6.002509117126465
    9. ' =' → logprob: -6.002509117126465
    10. '<|end|>' → logprob: -6.127509117126465

Token 48: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2261413037776947
    2. ' caractères' → logprob: -1.601141333580017
    3. ' caracteres' → logprob: -8.101140975952148
    4. ' caract' → logprob: -8.226140975952148
    5. ' caractère' → logprob: -9.851140975952148
    6. ' car' → logprob: -10.226140975952148
    7. 'texte' → logprob: -10.476140975952148
    8. 'c' → logprob: -11.226140975952148
    9. 'chars' → logprob: -12.351140975952148
    10. 'text' → logprob: -12.726140975952148

Token 49: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15288694202899933
    2. 'chaine' → logprob: -2.0278868675231934
    3. 'user' → logprob: -5.402886867523193
    4. 'string' → logprob: -6.277886867523193
    5. 'input' → logprob: -6.902886867523193
    6. 'str' → logprob: -7.652886867523193
    7. ' s' → logprob: -7.652886867523193
    8. 'ch' → logprob: -8.027887344360352
    9. 'text' → logprob: -8.402887344360352
    10. 'a' → logprob: -8.902887344360352

Token 50: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4639020562171936
    2. 'chaine' → logprob: -1.0889019966125488
    3. 'string' → logprob: -4.088901996612549
    4. 'user' → logprob: -4.713901996612549
    5. 'text' → logprob: -5.338901996612549
    6. 'str' → logprob: -6.463901996612549
    7. 'input' → logprob: -7.213901996612549
    8. 'txt' → logprob: -7.713901996612549
    9. 'texte' → logprob: -7.713901996612549
    10. 'ch' → logprob: -7.838901996612549

Token 51: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3709591031074524
    2. 'chaine' → logprob: -1.3709590435028076
    3. 'string' → logprob: -3.1209590435028076
    4. 'text' → logprob: -5.370959281921387
    5. ' s' → logprob: -6.120959281921387
    6. 'str' → logprob: -6.495959281921387
    7. 'user' → logprob: -7.245959281921387
    8. 'input' → logprob: -7.370959281921387
    9. 'texte' → logprob: -7.495959281921387
    10. 'ch' → logprob: -7.495959281921387

Token 52: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3583703637123108
    2. ' ' → logprob: -2.358370304107666
    3. ' s' → logprob: -2.483370304107666
    4. 'chaine' → logprob: -2.858370304107666
    5. 'c' → logprob: -3.733370304107666
    6. ' chaîne' → logprob: -3.983370304107666
    7. ' c' → logprob: -5.108370304107666
    8. ' chaine' → logprob: -5.483370304107666
    9. 'cha' → logprob: -6.108370304107666
    10. 'ch' → logprob: -6.358370304107666

Token 53: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05490157753229141
    2. 'input' → logprob: -2.929901599884033
    3. '=input' → logprob: -11.179901123046875
    4. ' ' → logprob: -12.804901123046875
    5. 's' → logprob: -14.679901123046875
    6. '(input' → logprob: -14.804901123046875
    7. ' ' → logprob: -14.929901123046875
    8. '	input' → logprob: -15.054901123046875
    9. ' `' → logprob: -15.179901123046875
    10. '_input' → logprob: -15.429901123046875

Token 54: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3256506621837616
    2. '()' → logprob: -1.325650691986084
    3. '("' → logprob: -5.200650691986084
    4. '('' → logprob: -5.200650691986084
    5. '("")' → logprob: -7.075650691986084
    6. ')' → logprob: -8.700650215148926
    7. 's' → logprob: -10.075650215148926
    8. '(
' → logprob: -10.325650215148926
    9. 'user' → logprob: -10.575650215148926
    10. '("""' → logprob: -10.575650215148926

Token 55: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06056738644838333
    2. '()' → logprob: -3.0605673789978027
    3. '("' → logprob: -5.185567378997803
    4. '('' → logprob: -5.185567378997803
    5. '(
' → logprob: -7.810567378997803
    6. '("")' → logprob: -8.935567855834961
    7. ')' → logprob: -9.310567855834961
    8. '("""' → logprob: -10.810567855834961
    9. ',' → logprob: -11.935567855834961
    10. '(`' → logprob: -11.935567855834961

Token 56: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08194193243980408
    2. '("' → logprob: -2.706941843032837
    3. '('' → logprob: -4.581942081451416
    4. '()' → logprob: -6.956942081451416
    5. '(">' → logprob: -8.081941604614258
    6. '("")' → logprob: -8.331941604614258
    7. ' ' → logprob: -9.706941604614258
    8. '(
' → logprob: -10.081941604614258
    9. '("""' → logprob: -10.581941604614258
    10. '(prompt' → logprob: -11.331941604614258

Token 57: ' invite' (ID: 26191)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2960854768753052
    2. ' invite' → logprob: -2.0460853576660156
    3. ' phrase' → logprob: -3.4210853576660156
    4. 'cha' → logprob: -3.6710853576660156
    5. 'chaine' → logprob: -4.046085357666016
    6. ' chaine' → logprob: -4.296085357666016
    7. 'invite' → logprob: -4.546085357666016
    8. 'phrase' → logprob: -5.171085357666016
    9. 's' → logprob: -5.921085357666016
    10. ' ' → logprob: -6.171085357666016

Token 58: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5360084772109985
    2. '()' → logprob: -1.6610084772109985
    3. '("' → logprob: -1.7860084772109985
    4. 's' → logprob: -2.161008358001709
    5. ' à' → logprob: -2.536008358001709
    6. 'e' → logprob: -2.911008358001709
    7. '('' → logprob: -3.161008358001709
    8. '(' → logprob: -3.286008358001709
    9. '"' → logprob: -3.911008358001709
    10. 'de' → logprob: -4.036008358001709

Token 59: 'ici' (ID: 3757)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3145541548728943
    2. ')' → logprob: -1.439554214477539
    3. '">' → logprob: -4.439554214477539
    4. '")' → logprob: -4.689554214477539
    5. ''' → logprob: -5.064554214477539
    6. ' "' → logprob: -6.064554214477539
    7. '("' → logprob: -7.564554214477539
    8. ' )' → logprob: -7.689554214477539
    9. ' ' → logprob: -8.314554214477539
    10. '"La' → logprob: -8.564554214477539

Token 60: ' vide' (ID: 21835)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07384302467107773
    2. ' "' → logprob: -3.073843002319336
    3. ':' → logprob: -4.448843002319336
    4. ')' → logprob: -5.823843002319336
    5. ''' → logprob: -5.823843002319336
    6. ' :' → logprob: -6.448843002319336
    7. ' ' → logprob: -6.948843002319336
    8. ' ' → logprob: -7.323843002319336
    9. '":' → logprob: -7.323843002319336
    10. '("' → logprob: -7.698843002319336

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004909600596874952
    2. '")' → logprob: -6.504909515380859
    3. '"' → logprob: -7.004909515380859
    4. '""' → logprob: -7.254909515380859
    5. '''' → logprob: -7.504909515380859
    6. ''' → logprob: -7.754909515380859
    7. '')' → logprob: -8.25490951538086
    8. ' )' → logprob: -8.50490951538086
    9. '),' → logprob: -9.25490951538086
    10. ',' → logprob: -9.75490951538086

Token 62: ' et' (ID: 859)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6811448931694031
    2. 's' → logprob: -0.8061448931694031
    3. 'user' → logprob: -3.556144952774048
    4. ')' → logprob: -5.681144714355469
    5. ',' → logprob: -6.181144714355469
    6. 'str' → logprob: -6.306144714355469
    7. 'ch' → logprob: -6.556144714355469
    8. ' )' → logprob: -6.556144714355469
    9. 'string' → logprob: -6.806144714355469
    10. 'input' → logprob: -7.056144714355469

Token 63: ' attend' (ID: 13384)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3267306089401245
    2. ' récup' → logprob: -1.4517306089401245
    3. 'rec' → logprob: -4.826730728149414
    4. ' lit' → logprob: -4.951730728149414
    5. ' stock' → logprob: -5.451730728149414
    6. 're' → logprob: -5.451730728149414
    7. 's' → logprob: -5.576730728149414
    8. 'lit' → logprob: -5.576730728149414
    9. ' prend' → logprob: -6.076730728149414
    10. ' rec' → logprob: -6.326730728149414

Token 64: ' que' (ID: 661)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8451600670814514
    2. ' ' → logprob: -1.4701600074768066
    3. ' une' → logprob: -1.8451600074768066
    4. ' la' → logprob: -2.4701600074768066
    5. ' que' → logprob: -3.0951600074768066
    6. '()' → logprob: -3.7201600074768066
    7. 'l' → logprob: -4.595160007476807
    8. ' )' → logprob: -4.720160007476807
    9. 's' → logprob: -6.470160007476807
    10. 'une' → logprob: -6.970160007476807

Token 65: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.031312815845012665
    2. 'l' → logprob: -3.7813127040863037
    3. ' ' → logprob: -5.156312942504883
    4. ' la' → logprob: -7.281312942504883
    5. ' )' → logprob: -7.906312942504883
    6. ' une' → logprob: -8.031312942504883
    7. 'user' → logprob: -8.781312942504883
    8. 's' → logprob: -9.031312942504883
    9. ')' → logprob: -9.031312942504883
    10. ' utilisateur' → logprob: -9.406312942504883

Token 66: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0246027410030365
    2. ''' → logprob: -4.649602890014648
    3. 'u' → logprob: -4.899602890014648
    4. 'a' → logprob: -5.524602890014648
    5. '’utilisateur' → logprob: -6.024602890014648
    6. ''user' → logprob: -8.399602890014648
    7. ' utilisateur' → logprob: -8.774602890014648
    8. ''us' → logprob: -8.899602890014648
    9. ''util' → logprob: -9.524602890014648
    10. ''u' → logprob: -9.649602890014648

Token 67: ' tape' (ID: 27444)
  Prédit: ' sais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.3359030485153198
    2. 's' → logprob: -2.0859031677246094
    3. ')' → logprob: -2.4609031677246094
    4. ' entre' → logprob: -3.7109031677246094
    5. 'r' → logprob: -3.8359031677246094
    6. ' )' → logprob: -5.085903167724609
    7. 'entre' → logprob: -5.460903167724609
    8. ' tape' → logprob: -5.710903167724609
    9. 'ent' → logprob: -6.085903167724609
    10. ' s' → logprob: -6.335903167724609

Token 68: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.10878363996744156
    2. 'une' → logprob: -2.858783721923828
    3. ' ' → logprob: -3.358783721923828
    4. ' sa' → logprob: -5.983783721923828
    5. ' la' → logprob: -6.108783721923828
    6. ' un' → logprob: -6.108783721923828
    7. 's' → logprob: -6.983783721923828
    8. ' ' → logprob: -7.608783721923828
    9. ' l' → logprob: -7.983783721923828
    10. 'le' → logprob: -8.233783721923828

Token 69: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6587750315666199
    2. 'car' → logprob: -1.1587750911712646
    3. 'une' → logprob: -2.1587750911712646
    4. 'a' → logprob: -4.5337748527526855
    5. 'entrée' → logprob: -5.4087748527526855
    6. 'ent' → logprob: -5.5337748527526855
    7. ' une' → logprob: -5.6587748527526855
    8. ''une' → logprob: -5.6587748527526855
    9. ' caracteres' → logprob: -5.9087748527526855
    10. 'chaine' → logprob: -6.1587748527526855

Token 70: ' puis' (ID: 18766)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2601698040962219
    2. ',' → logprob: -3.135169744491577
    3. ' s' → logprob: -3.135169744491577
    4. '.' → logprob: -3.260169744491577
    5. ')' → logprob: -3.635169744491577
    6. ' :' → logprob: -4.135169982910156
    7. ' puis' → logprob: -4.385169982910156
    8. ':' → logprob: -4.885169982910156
    9. ' )' → logprob: -5.135169982910156
    10. ' ,' → logprob: -5.135169982910156

Token 71: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.019125089049339294
    2. 'app' → logprob: -4.019124984741211
    3. ' presse' → logprob: -8.144124984741211
    4. ' fasse' → logprob: -8.769124984741211
    5. ''app' → logprob: -9.019124984741211
    6. 'App' → logprob: -9.144124984741211
    7. ' frappe' → logprob: -9.144124984741211
    8. '\' → logprob: -9.394124984741211
    9. '.app' → logprob: -11.144124984741211
    10. ' valide' → logprob: -11.519124984741211

Token 72: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.04190030321478844
    2. 'u' → logprob: -3.791900396347046
    3. 'uye' → logprob: -4.041900157928467
    4. 'ui' → logprob: -7.291900157928467
    5. '\' → logprob: -10.166900634765625
    6. '#' → logprob: -10.416900634765625
    7. 'uya' → logprob: -10.666900634765625
    8. 'uire' → logprob: -11.041900634765625
    9. 'ue' → logprob: -11.416900634765625
    10. 'uy' → logprob: -11.541900634765625

Token 73: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.13071219623088837
    2. 'sur' → logprob: -2.1307122707366943
    3. ' ' → logprob: -6.380712032318115
    4. 'entrée' → logprob: -7.380712032318115
    5. '_sur' → logprob: -7.880712032318115
    6. ' enter' → logprob: -8.630712509155273
    7. 's' → logprob: -9.380712509155273
    8. 'enter' → logprob: -9.380712509155273
    9. 'Enter' → logprob: -9.630712509155273
    10. ' Enter' → logprob: -9.630712509155273

Token 74: ' Entr' (ID: 50650)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.15091276168823242
    2. ' Entr' → logprob: -2.1509127616882324
    3. 'Enter' → logprob: -4.650912761688232
    4. 'entrée' → logprob: -4.900912761688232
    5. ' Enter' → logprob: -5.775912761688232
    6. 'entr' → logprob: -6.650912761688232
    7. ' ' → logprob: -7.025912761688232
    8. ' entrée' → logprob: -7.650912761688232
    9. ' ' → logprob: -8.65091323852539
    10. ''entrée' → logprob: -9.15091323852539

Token 75: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.000988030806183815
    2. 'é' → logprob: -7.000988006591797
    3. 'er' → logprob: -9.625988006591797
    4. 'ées' → logprob: -12.125988006591797
    5. 'éer' → logprob: -12.375988006591797
    6. 'e' → logprob: -14.875988006591797
    7. 'ee' → logprob: -14.875988006591797
    8. 'rée' → logprob: -17.500988006591797
    9. '%C' → logprob: -17.500988006591797
    10. '```' → logprob: -17.500988006591797

Token 76: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6463935971260071
    2. 'chaine' → logprob: -0.7713935971260071
    3. 'ch' → logprob: -5.271393775939941
    4. 'c' → logprob: -6.646393775939941
    5. 'texte' → logprob: -7.021393775939941
    6. 'string' → logprob: -7.021393775939941
    7. 'cha' → logprob: -7.271393775939941
    8. 'str' → logprob: -7.271393775939941
    9. 'text' → logprob: -7.521393775939941
    10. 'user' → logprob: -7.521393775939941

Token 77: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26168176531791687
    2. 'chaine' → logprob: -1.5116817951202393
    3. 'string' → logprob: -6.26168155670166
    4. 'text' → logprob: -6.76168155670166
    5. 'user' → logprob: -6.88668155670166
    6. 'str' → logprob: -7.13668155670166
    7. 'texte' → logprob: -7.13668155670166
    8. 'c' → logprob: -7.38668155670166
    9. 'n' → logprob: -7.38668155670166
    10. ' s' → logprob: -7.38668155670166

Token 78: ' Le' (ID: 2018)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15288643538951874
    2. 'chaine' → logprob: -2.277886390686035
    3. ' s' → logprob: -3.777886390686035
    4. 'string' → logprob: -5.152886390686035
    5. 'text' → logprob: -5.277886390686035
    6. 'str' → logprob: -6.152886390686035
    7. 'texte' → logprob: -6.652886390686035
    8. 'txt' → logprob: -7.527886390686035
    9. 'user' → logprob: -8.027886390686035
    10. ' chaine' → logprob: -8.277886390686035

Token 79: ' texte' (ID: 53492)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9359082579612732
    2. 'chaine' → logprob: -1.060908317565918
    3. ' s' → logprob: -1.560908317565918
    4. ' chaine' → logprob: -4.185908317565918
    5. ' string' → logprob: -5.185908317565918
    6. 'string' → logprob: -5.185908317565918
    7. 'texte' → logprob: -5.560908317565918
    8. 'str' → logprob: -5.810908317565918
    9. ' user' → logprob: -6.185908317565918
    10. 'ch' → logprob: -6.435908317565918

Token 80: ' tap' (ID: 12909)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02336042933166027
    2. '=' → logprob: -4.273360252380371
    3. 's' → logprob: -5.523360252380371
    4. '=input' → logprob: -6.648360252380371
    5. '_' → logprob: -7.148360252380371
    6. ' ' → logprob: -7.398360252380371
    7. '_input' → logprob: -7.398360252380371
    8. '_s' → logprob: -7.398360252380371
    9. 'de' → logprob: -8.648360252380371
    10. 'chaine' → logprob: -8.773360252380371

Token 81: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1478184014558792
    2. 'e' → logprob: -2.6478183269500732
    3. 'ée' → logprob: -2.7728183269500732
    4. 'er' → logprob: -5.522818565368652
    5. 'ed' → logprob: -10.397818565368652
    6. '&eacute' → logprob: -10.772818565368652
    7. '#' → logprob: -11.522818565368652
    8. 'ee' → logprob: -12.022818565368652
    9. '```' → logprob: -12.022818565368652
    10. 'е' → logprob: -12.147818565368652

Token 82: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16854041814804077
    2. ' ' → logprob: -2.4185404777526855
    3. 's' → logprob: -3.7935404777526855
    4. ' s' → logprob: -3.9185404777526855
    5. ' est' → logprob: -4.9185404777526855
    6. '=' → logprob: -5.7935404777526855
    7. ' de' → logprob: -6.1685404777526855
    8. ' )' → logprob: -6.5435404777526855
    9. 'chaine' → logprob: -6.5435404777526855
    10. 'user' → logprob: -6.6685404777526855

Token 83: ' alors' (ID: 17971)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.0627209022641182
    2. 'stock' → logprob: -4.062720775604248
    3. ' enregistré' → logprob: -4.187720775604248
    4. ' récup' → logprob: -4.937720775604248
    5. ' ' → logprob: -5.187720775604248
    6. ' assign' → logprob: -5.312720775604248
    7. 'assign' → logprob: -5.937720775604248
    8. 'r' → logprob: -6.187720775604248
    9. ' sauveg' → logprob: -6.437720775604248
    10. ' ' → logprob: -7.062720775604248

Token 84: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.07004780322313309
    2. 'stock' → logprob: -3.4450478553771973
    3. ' enregistré' → logprob: -4.445047855377197
    4. 'assign' → logprob: -4.820047855377197
    5. ' assign' → logprob: -4.945047855377197
    6. ' récup' → logprob: -5.445047855377197
    7. ' sauveg' → logprob: -6.695047855377197
    8. ' affect' → logprob: -6.945047855377197
    9. 's' → logprob: -7.570047855377197
    10. 'r' → logprob: -7.695047855377197

Token 85: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1415010243654251
    2. '_' → logprob: -2.516500949859619
    3. 'e' → logprob: -3.391500949859619
    4. ' =' → logprob: -4.891500949859619
    5. '=' → logprob: -5.391500949859619
    6. ' ' → logprob: -5.891500949859619
    7. 'u' → logprob: -6.641500949859619
    8. ' e' → logprob: -8.266501426696777
    9. 'ée' → logprob: -8.766501426696777
    10. 'r' → logprob: -8.891501426696777

Token 86: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.17636112868785858
    2. 'dans' → logprob: -2.176361083984375
    3. ' s' → logprob: -3.801361083984375
    4. 's' → logprob: -4.051361083984375
    5. 'chaine' → logprob: -5.676361083984375
    6. ' ' → logprob: -7.051361083984375
    7. ' str' → logprob: -7.301361083984375
    8. ' user' → logprob: -7.426361083984375
    9. 'str' → logprob: -7.801361083984375
    10. ' chaine' → logprob: -7.926361083984375

Token 87: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7048571705818176
    2. 'chaine' → logprob: -1.2048571109771729
    3. 's' → logprob: -2.079857110977173
    4. ' chaine' → logprob: -3.579857110977173
    5. ' la' → logprob: -4.204857349395752
    6. 'ch' → logprob: -5.329857349395752
    7. ' ' → logprob: -5.454857349395752
    8. ' text' → logprob: -5.454857349395752
    9. ' string' → logprob: -5.454857349395752
    10. 'la' → logprob: -5.829857349395752

Token 88: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45169350504875183
    2. 'chaine' → logprob: -1.3266935348510742
    3. 'variable' → logprob: -3.576693534851074
    4. ' variable' → logprob: -3.826693534851074
    5. 'string' → logprob: -4.451693534851074
    6. 'texte' → logprob: -4.826693534851074
    7. ' s' → logprob: -5.076693534851074
    8. 'ch' → logprob: -5.201693534851074
    9. 'a' → logprob: -5.326693534851074
    10. 'c' → logprob: -6.201693534851074

Token 89: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.32050755620002747
    2. 's' → logprob: -1.320507526397705
    3. ' ' → logprob: -5.320507526397705
    4. ' text' → logprob: -7.445507526397705
    5. ' string' → logprob: -7.695507526397705
    6. 'chaine' → logprob: -7.945507526397705
    7. ' chaine' → logprob: -8.945508003234863
    8. 'string' → logprob: -9.070508003234863
    9. 'text' → logprob: -9.320508003234863
    10. ' txt' → logprob: -9.445508003234863

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.057439304888248444
    2. 'chaine' → logprob: -3.0574393272399902
    3. 'string' → logprob: -5.93243932723999
    4. 'text' → logprob: -6.68243932723999
    5. 'ch' → logprob: -6.93243932723999
    6. ' s' → logprob: -7.18243932723999
    7. 'texte' → logprob: -7.43243932723999
    8. 'a' → logprob: -7.43243932723999
    9. 'txt' → logprob: -7.68243932723999
    10. 'str' → logprob: -8.182438850402832

Token 91: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09451264888048172
    2. 't' → logprob: -3.219512701034546
    3. ''' → logprob: -4.094512462615967
    4. '')' → logprob: -4.719512462615967
    5. 'tring' → logprob: -4.844512462615967
    6. 's' → logprob: -4.844512462615967
    7. 'tr' → logprob: -6.094512462615967
    8. 'e' → logprob: -6.344512462615967
    9. ')'' → logprob: -6.719512462615967
    10. 'a' → logprob: -6.969512462615967

Token 92: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1041145626222715e-05
    2. ' s' → logprob: -11.875011444091797
    3. ' 
' → logprob: -13.375011444091797
    4. ',' → logprob: -13.875011444091797
    5. '
' → logprob: -14.000011444091797
    6. ' ' → logprob: -15.500011444091797
    7. 'n' → logprob: -16.250011444091797
    8. ''s' → logprob: -16.500011444091797
    9. '```' → logprob: -16.625011444091797
    10. '  
' → logprob: -17.000011444091797

Token 93: ' forme' (ID: 27450)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1195698976516724
    2. 's' → logprob: -1.3695698976516724
    3. '_' → logprob: -1.8695698976516724
    4. ' ' → logprob: -2.369569778442383
    5. ' une' → logprob: -3.119569778442383
    6. ' la' → logprob: -3.619569778442383
    7. ' =' → logprob: -4.244569778442383
    8. ' l' → logprob: -4.369569778442383
    9. ' ' → logprob: -4.494569778442383
    10. '_s' → logprob: -4.869569778442383

Token 94: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.015419223345816135
    2. ' ' → logprob: -5.015419006347656
    3. 'd' → logprob: -5.265419006347656
    4. 's' → logprob: -6.515419006347656
    5. '<|end|>' → logprob: -7.265419006347656
    6. ' de' → logprob: -7.765419006347656
    7. 'space' → logprob: -8.390419006347656
    8. ' =' → logprob: -8.390419006347656
    9. '=' → logprob: -8.890419006347656
    10. '  ' → logprob: -9.515419006347656

Token 95: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.8468253016471863
    2. 'chaine' → logprob: -1.596825361251831
    3. 'une' → logprob: -1.721825361251831
    4. ' une' → logprob: -2.221825361251831
    5. 'cha' → logprob: -3.471825361251831
    6. ' chaine' → logprob: -3.971825361251831
    7. ' string' → logprob: -4.221825122833252
    8. 's' → logprob: -4.721825122833252
    9. 'string' → logprob: -5.596825122833252
    10. ' ' → logprob: -7.346825122833252

Token 96: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29186204075813293
    2. '_' → logprob: -1.5418620109558105
    3. ' de' → logprob: -4.6668620109558105
    4. ' s' → logprob: -4.9168620109558105
    5. 'de' → logprob: -4.9168620109558105
    6. '_s' → logprob: -5.6668620109558105
    7. ' =' → logprob: -5.7918620109558105
    8. ' ' → logprob: -6.4168620109558105
    9. ')' → logprob: -6.5418620109558105
    10. ',' → logprob: -6.9168620109558105

Token 97: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6335504055023193
    2. ' caractères' → logprob: -0.7585504055023193
    3. ' caracteres' → logprob: -7.758550643920898
    4. ' caract' → logprob: -8.758550643920898
    5. ' car' → logprob: -8.758550643920898
    6. ' caractère' → logprob: -9.633550643920898
    7. 's' → logprob: -10.008550643920898
    8. ' ' → logprob: -10.758550643920898
    9. 'texte' → logprob: -10.883550643920898
    10. 'c' → logprob: -11.133550643920898

Token 98: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -3.054500666621607e-06
    2. ' s' → logprob: -13.62500286102295
    3. '
' → logprob: -13.75000286102295
    4. ',' → logprob: -15.37500286102295
    5. ' 
' → logprob: -15.50000286102295
    6. 'n' → logprob: -16.250003814697266
    7. '```' → logprob: -16.875003814697266
    8. ''s' → logprob: -17.250003814697266
    9. '`s' → logprob: -17.375003814697266
    10. '\' → logprob: -17.750003814697266

Token 99: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029874181374907494
    2. ' )' → logprob: -3.654874086380005
    3. 's' → logprob: -5.779874324798584
    4. ')s' → logprob: -9.029873847961426
    5. ').' → logprob: -9.154873847961426
    6. ' s' → logprob: -9.529873847961426
    7. ' ' → logprob: -9.654873847961426
    8. '")' → logprob: -10.279873847961426
    9. '')' → logprob: -10.279873847961426
    10. ',' → logprob: -11.654873847961426

Token 100: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019765726756304502
    2. '')' → logprob: -7.251976490020752
    3. ').' → logprob: -7.501976490020752
    4. 's' → logprob: -7.751976490020752
    5. 'e' → logprob: -8.50197696685791
    6. ' )' → logprob: -10.75197696685791
    7. ')
' → logprob: -11.25197696685791
    8. 'a' → logprob: -11.62697696685791
    9. '")' → logprob: -11.75197696685791
    10. '):' → logprob: -12.37697696685791

Token 101: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. ' s' → logprob: -13.750000953674316
    3. '```' → logprob: -16.375001907348633
    4. '`s' → logprob: -16.625001907348633
    5. ' 
' → logprob: -17.500001907348633
    6. '`' → logprob: -19.375001907348633
    7. '
' → logprob: -19.875001907348633
    8. '  
' → logprob: -19.875001907348633
    9. 'n' → logprob: -20.125001907348633
    10. '#' → logprob: -20.250001907348633

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020545274019241333
    2. '=' → logprob: -3.895545244216919
    3. '=input' → logprob: -13.64554500579834
    4. ' ' → logprob: -13.89554500579834
    5. 's' → logprob: -14.89554500579834
    6. ' ' → logprob: -15.02054500579834
    7. '.' → logprob: -15.02054500579834
    8. ',' → logprob: -15.64554500579834
    9. ' =
' → logprob: -17.520545959472656
    10. '  ' → logprob: -17.520545959472656

Token 103: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0619727298617363
    2. 'input' → logprob: -2.8119726181030273
    3. ' ' → logprob: -12.561972618103027
    4. ' ' → logprob: -14.936972618103027
    5. '(input' → logprob: -15.186972618103027
    6. '=input' → logprob: -15.186972618103027
    7. '	input' → logprob: -15.811972618103027
    8. ' str' → logprob: -16.061973571777344
    9. 'str' → logprob: -16.061973571777344
    10. ' ""' → logprob: -16.436973571777344

Token 104: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11960611492395401
    2. '(' → logprob: -2.6196060180664062
    3. '("")' → logprob: -3.6196060180664062
    4. '("' → logprob: -4.994606018066406
    5. '('' → logprob: -5.119606018066406
    6. '("("' → logprob: -7.994606018066406
    7. '(">' → logprob: -12.244606018066406
    8. '("""' → logprob: -12.494606018066406
    9. '("(' → logprob: -13.244606018066406
    10. '(
' → logprob: -14.744606018066406

Token 105: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06204431876540184
    2. 'for' → logprob: -3.312044382095337
    3. '\n' → logprob: -3.937044382095337
    4. ' 
' → logprob: -6.437044143676758
    5. ' for' → logprob: -6.687044143676758
    6. '  
' → logprob: -7.812044143676758
    7. '' → logprob: -8.187044143676758
    8. '\' → logprob: -8.437044143676758
    9. 'n' → logprob: -8.812044143676758
    10. 'i' → logprob: -9.187044143676758

Token 106: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11366727948188782
    2. ' for' → logprob: -2.9886672496795654
    3. 'f' → logprob: -3.1136672496795654
    4. 'i' → logprob: -4.6136674880981445
    5. 'n' → logprob: -6.1136674880981445
    6. '#' → logprob: -8.113667488098145
    7. 'p' → logprob: -9.613667488098145
    8. 'b' → logprob: -10.238667488098145
    9. ' i' → logprob: -10.488667488098145
    10. ' f' → logprob: -11.238667488098145

Token 107: ' fonction' (ID: 17610)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0551282167434692
    2. 'for' → logprob: -1.1801282167434692
    3. ' ' → logprob: -1.5551282167434692
    4. 'n' → logprob: -2.1801280975341797
    5. 'r' → logprob: -4.80512809753418
    6. 'f' → logprob: -5.68012809753418
    7. 'i' → logprob: -6.05512809753418
    8. ' n' → logprob: -6.18012809753418
    9. 'l' → logprob: -7.05512809753418
    10. 's' → logprob: -7.18012809753418

Token 108: ' range' (ID: 3352)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.18689392507076263
    2. 'len' → logprob: -2.311893939971924
    3. ' for' → logprob: -2.811893939971924
    4. 'for' → logprob: -4.811893939971924
    5. ' range' → logprob: -6.311893939971924
    6. ' ' → logprob: -7.311893939971924
    7. 'range' → logprob: -7.436893939971924
    8. ' length' → logprob: -10.936893463134766
    9. 's' → logprob: -10.936893463134766
    10. '(len' → logprob: -11.061893463134766

Token 109: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1002303957939148
    2. '(len' → logprob: -2.3502304553985596
    3. '(
' → logprob: -11.22523021697998
    4. '(length' → logprob: -12.60023021697998
    5. '(l' → logprob: -12.97523021697998
    6. ' (' → logprob: -13.47523021697998
    7. '()' → logprob: -13.85023021697998
    8. '((' → logprob: -14.60023021697998
    9. '(s' → logprob: -14.72523021697998
    10. '(n' → logprob: -15.35023021697998

Token 110: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17979849874973297
    2. '(len' → logprob: -1.8047984838485718
    3. '(length' → logprob: -11.304798126220703
    4. '(
' → logprob: -11.554798126220703
    5. 'len' → logprob: -12.054798126220703
    6. '('' → logprob: -12.429798126220703
    7. ' (' → logprob: -12.679798126220703
    8. ' len' → logprob: -12.804798126220703
    9. '(n' → logprob: -12.929798126220703
    10. '(s' → logprob: -13.054798126220703

Token 111: ' utilisée' (ID: 106548)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4008362293243408
    2. '(len' → logprob: -1.1508362293243408
    3. 'len' → logprob: -4.400835990905762
    4. '(' → logprob: -6.525835990905762
    5. ' ' → logprob: -9.775835990905762
    6. ' range' → logprob: -10.775835990905762
    7. '	len' → logprob: -11.150835990905762
    8. '1' → logprob: -11.650835990905762
    9. 'range' → logprob: -12.025835990905762
    10. ' utilisée' → logprob: -12.150835990905762

Token 112: ' pour' (ID: 1930)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4740865230560303
    2. '(' → logprob: -0.9740865230560303
    3. '(length' → logprob: -11.97408676147461
    4. '(
' → logprob: -13.72408676147461
    5. 'len' → logprob: -14.47408676147461
    6. '(s' → logprob: -15.09908676147461
    7. '(l' → logprob: -15.34908676147461
    8. ' (' → logprob: -15.34908676147461
    9. '(n' → logprob: -15.97408676147461
    10. '(le' → logprob: -16.09908676147461

Token 113: ' créer' (ID: 40938)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.16528990864753723
    2. ' range' → logprob: -2.290289878845215
    3. ' len' → logprob: -3.165289878845215
    4. ' iter' → logprob: -5.915289878845215
    5. 'range' → logprob: -6.415289878845215
    6. '(len' → logprob: -6.790289878845215
    7. ' ' → logprob: -7.165289878845215
    8. 'len' → logprob: -7.290289878845215
    9. ' couvrir' → logprob: -7.790289878845215
    10. ' i' → logprob: -7.915289878845215

Token 114: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5810837149620056
    2. '(len' → logprob: -0.8310837149620056
    3. ' len' → logprob: -5.33108377456665
    4. 'len' → logprob: -8.581083297729492
    5. ' ' → logprob: -10.081083297729492
    6. '(
' → logprob: -11.081083297729492
    7. ' (' → logprob: -11.206083297729492
    8. '(range' → logprob: -11.581083297729492
    9. ' range' → logprob: -11.956083297729492
    10. ' le' → logprob: -13.206083297729492

Token 115: ' sé' (ID: 7462)
  Prédit: ' plage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plage' → logprob: -1.1029839515686035
    2. 'range' → logprob: -1.4779839515686035
    3. ' sequence' → logprob: -1.9779839515686035
    4. ' range' → logprob: -2.1029839515686035
    5. 'pl' → logprob: -2.4779839515686035
    6. 'sequence' → logprob: -3.9779839515686035
    7. 's' → logprob: -3.9779839515686035
    8. ' gamme' → logprob: -4.2279839515686035
    9. ' boucle' → logprob: -4.3529839515686035
    10. ' chaîne' → logprob: -5.3529839515686035

Token 116: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.2131553441286087
    2. 'rie' → logprob: -1.7131553888320923
    3. 'q' → logprob: -4.838155269622803
    4. 'qu' → logprob: -6.338155269622803
    5. 'r' → logprob: -7.463155269622803
    6. 'ries' → logprob: -7.588155269622803
    7. 'que' → logprob: -7.713155269622803
    8. 'quences' → logprob: -9.463155746459961
    9. 'n' → logprob: -9.838155746459961
    10. 'quent' → logprob: -10.213155746459961

Token 117: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05492967367172241
    2. '(len' → logprob: -2.929929733276367
    3. '(
' → logprob: -10.929929733276367
    4. '(length' → logprob: -11.054929733276367
    5. 'len' → logprob: -12.179929733276367
    6. '(range' → logprob: -12.929929733276367
    7. ' len' → logprob: -13.804929733276367
    8. 's' → logprob: -14.054929733276367
    9. ' (' → logprob: -14.179929733276367
    10. '('' → logprob: -14.304929733276367

Token 118: '’ent' (ID: 49158)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02033737488090992
    2. ' len' → logprob: -5.2703375816345215
    3. ' l' → logprob: -5.5203375816345215
    4. ' e' → logprob: -6.2703375816345215
    5. 'e' → logprob: -6.3953375816345215
    6. ' la' → logprob: -7.0203375816345215
    7. ')' → logprob: -7.3953375816345215
    8. ' s' → logprob: -7.3953375816345215
    9. ' i' → logprob: -7.3953375816345215
    10. ' caractères' → logprob: -7.3953375816345215

Token 119: 'iers' (ID: 11012)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.9532663226127625
    2. 'umer' → logprob: -1.0782663822174072
    3. 'u' → logprob: -1.9532663822174072
    4. 't' → logprob: -2.5782663822174072
    5. 'ur' → logprob: -5.078266143798828
    6. '```' → logprob: -5.203266143798828
    7. 'er' → logprob: -5.328266143798828
    8. 'd' → logprob: -5.453266143798828
    9. 'umerator' → logprob: -5.578266143798828
    10. 'ume' → logprob: -6.203266143798828

Token 120: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.707997428951785e-05
    2. '(len' → logprob: -9.750077247619629
    3. '(
' → logprob: -11.875077247619629
    4. '(range' → logprob: -12.000077247619629
    5. ' (' → logprob: -13.375077247619629
    6. ',' → logprob: -13.875077247619629
    7. 's' → logprob: -14.250077247619629
    8. '(

' → logprob: -14.875077247619629
    9. '(n' → logprob: -15.375077247619629
    10. '.' → logprob: -15.500077247619629

Token 121: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003492327407002449
    2. ' ' → logprob: -7.12849235534668
    3. '(
' → logprob: -7.25349235534668
    4. '(len' → logprob: -7.87849235534668
    5. ' for' → logprob: -8.37849235534668
    6. ')' → logprob: -8.50349235534668
    7. '[' → logprob: -8.62849235534668
    8. ',' → logprob: -8.62849235534668
    9. ' (' → logprob: -8.75349235534668
    10. 'for' → logprob: -8.87849235534668

Token 122: ' Ici' (ID: 145754)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00808801781386137
    2. '1' → logprob: -6.508088111877441
    3. '(' → logprob: -6.633088111877441
    4. '_' → logprob: -6.883088111877441
    5. ' len' → logprob: -7.133088111877441
    6. ' i' → logprob: -7.758088111877441
    7. '0' → logprob: -7.883088111877441
    8. ' for' → logprob: -8.008088111877441
    9. 'i' → logprob: -8.508088111877441
    10. ' (' → logprob: -8.758088111877441

Token 123: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3350377082824707
    2. '(' → logprob: -1.5850377082824707
    3. ',' → logprob: -3.7100377082824707
    4. '(range' → logprob: -4.460037708282471
    5. ' (' → logprob: -4.585037708282471
    6. 'range' → logprob: -4.710037708282471
    7. ' for' → logprob: -4.960037708282471
    8. ' range' → logprob: -4.960037708282471
    9. ' ,' → logprob: -5.585037708282471
    10. ' i' → logprob: -5.835037708282471

Token 124: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.49213919043540955
    2. 'range' → logprob: -1.742139220237732
    3. ' len' → logprob: -2.3671391010284424
    4. ' for' → logprob: -2.3671391010284424
    5. ' ' → logprob: -4.3671393394470215
    6. 'for' → logprob: -5.1171393394470215
    7. 'len' → logprob: -5.4921393394470215
    8. ' ' → logprob: -6.4921393394470215
    9. ' i' → logprob: -6.6171393394470215
    10. 'i' → logprob: -10.117138862609863

Token 125: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0031784253660589457
    2. '(' → logprob: -5.753178596496582
    3. '(length' → logprob: -14.503178596496582
    4. '(l' → logprob: -17.503177642822266
    5. '(le' → logprob: -17.503177642822266
    6. 'len' → logprob: -17.628177642822266
    7. '(
' → logprob: -18.378177642822266
    8. ' (' → logprob: -18.503177642822266
    9. ' len' → logprob: -18.503177642822266
    10. '(n' → logprob: -19.003177642822266

Token 126: '1' (ID: 16)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00016754455282352865
    2. '(' → logprob: -9.000167846679688
    3. 'len' → logprob: -10.125167846679688
    4. ' len' → logprob: -12.500167846679688
    5. '1' → logprob: -16.375167846679688
    6. ' (' → logprob: -16.625167846679688
    7. ')' → logprob: -17.000167846679688
    8. '[len' → logprob: -17.125167846679688
    9. '<len' → logprob: -17.125167846679688
    10. '	len' → logprob: -17.375167846679688

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025043603032827377
    2. ',len' → logprob: -3.775043487548828
    3. ' ,' → logprob: -7.150043487548828
    4. '(len' → logprob: -7.275043487548828
    5. 'len' → logprob: -8.275043487548828
    6. ' len' → logprob: -10.525043487548828
    7. ')' → logprob: -10.775043487548828
    8. '=len' → logprob: -11.900043487548828
    9. '<len' → logprob: -12.150043487548828
    10. 's' → logprob: -14.150043487548828

Token 128: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04859020933508873
    2. ' len' → logprob: -3.0485901832580566
    3. '(len' → logprob: -13.298590660095215
    4. '=len' → logprob: -14.923590660095215
    5. '	len' → logprob: -15.798590660095215
    6. ',len' → logprob: -15.923590660095215
    7. ')' → logprob: -15.923590660095215
    8. '```' → logprob: -16.4235897064209
    9. '<len' → logprob: -16.4235897064209
    10. 'length' → logprob: -16.6735897064209

Token 129: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003403495065867901
    2. '(' → logprob: -8.000340461730957
    3. 's' → logprob: -12.375340461730957
    4. ')' → logprob: -14.750340461730957
    5. ' (' → logprob: -16.00033950805664
    6. '(
' → logprob: -16.25033950805664
    7. ' )' → logprob: -18.87533950805664
    8. '(ans' → logprob: -19.50033950805664
    9. 'a' → logprob: -19.75033950805664
    10. '

' → logprob: -20.12533950805664

Token 130: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.44837257266044617
    2. ')' → logprob: -1.0733726024627686
    3. '())' → logprob: -4.8233723640441895
    4. '):' → logprob: -5.6983723640441895
    5. '()))' → logprob: -5.6983723640441895
    6. ')):' → logprob: -5.9483723640441895
    7. '()' → logprob: -6.4483723640441895
    8. 's' → logprob: -8.948372840881348
    9. '(' → logprob: -9.073372840881348
    10. ' ))' → logprob: -9.198372840881348

Token 131: ' crée' (ID: 102256)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25841236114501953
    2. ' :' → logprob: -1.5084123611450195
    3. ')' → logprob: -5.3834123611450195
    4. '):' → logprob: -6.7584123611450195
    5. ' ' → logprob: -8.63341236114502
    6. ' ):' → logprob: -9.38341236114502
    7. ' for' → logprob: -9.50841236114502
    8. 'for' → logprob: -9.50841236114502
    9. ' )' → logprob: -9.63341236114502
    10. ' :
' → logprob: -9.75841236114502

Token 132: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.16195085644721985
    2. ' a' → logprob: -2.7869508266448975
    3. ' un' → logprob: -3.1619508266448975
    4. 's' → logprob: -4.036951065063477
    5. '<|end|>' → logprob: -4.411951065063477
    6. ' ' → logprob: -5.161951065063477
    7. ' ' → logprob: -6.161951065063477
    8. 'une' → logprob: -6.286951065063477
    9. 'a' → logprob: -6.411951065063477
    10. 'range' → logprob: -7.036951065063477

Token 133: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.17636923491954803
    2. 'sequence' → logprob: -2.3013691902160645
    3. ' sé' → logprob: -3.1763691902160645
    4. 's' → logprob: -4.4263691902160645
    5. 'sé' → logprob: -5.4263691902160645
    6. ' liste' → logprob: -6.3013691902160645
    7. 'range' → logprob: -7.1763691902160645
    8. ' plage' → logprob: -8.301369667053223
    9. ' range' → logprob: -8.426369667053223
    10. 'liste' → logprob: -8.926369667053223

Token 134: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0008702484192326665
    2. 'rie' → logprob: -7.125870227813721
    3. 'q' → logprob: -10.500870704650879
    4. 'QUENCE' → logprob: -10.875870704650879
    5. 'qu' → logprob: -11.375870704650879
    6. 'que' → logprob: -12.875870704650879
    7. 'quences' → logprob: -13.500870704650879
    8. 'rence' → logprob: -13.750870704650879
    9. '#' → logprob: -14.000870704650879
    10. '```' → logprob: -14.500870704650879

Token 135: ' comm' (ID: 1394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003914695407729596
    2. '(range' → logprob: -8.500391006469727
    3. '('' → logprob: -9.875391006469727
    4. ' (' → logprob: -10.000391006469727
    5. 's' → logprob: -10.875391006469727
    6. ')' → logprob: -11.000391006469727
    7. '(len' → logprob: -11.250391006469727
    8. ',' → logprob: -11.500391006469727
    9. '(
' → logprob: -11.500391006469727
    10. '(s' → logprob: -11.625391006469727

Token 136: 'en' (ID: 262)
  Prédit: 'enç'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enç' → logprob: -0.5756198763847351
    2. 'en' → logprob: -0.9506198763847351
    3. 'e' → logprob: -4.075619697570801
    4. 'ença' → logprob: -4.325619697570801
    5. 'encent' → logprob: -5.075619697570801
    6. 'enc' → logprob: -5.200619697570801
    7. 'enant' → logprob: -5.450619697570801
    8. 'ent' → logprob: -6.075619697570801
    9. 'anç' → logprob: -6.325619697570801
    10. 'encé' → logprob: -8.9506196975708

Token 137: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.12380295246839523
    2. 'n' → logprob: -2.248802900314331
    3. 'c' → logprob: -5.87380313873291
    4. 'ç' → logprob: -5.99880313873291
    5. 'nc' → logprob: -6.62380313873291
    6. 'cée' → logprob: -6.74880313873291
    7. 'range' → logprob: -7.49880313873291
    8. 'cant' → logprob: -7.74880313873291
    9. 'r' → logprob: -7.87380313873291
    10. 'rc' → logprob: -8.12380313873291

Token 138: ' par' (ID: 686)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.013706319965422153
    2. '<|end|>' → logprob: -5.013706207275391
    3. ' ' → logprob: -5.888706207275391
    4. 'à' → logprob: -6.888706207275391
    5. ' de' → logprob: -7.013706207275391
    6. ' au' → logprob: -7.013706207275391
    7. ' par' → logprob: -8.01370620727539
    8. ' at' → logprob: -8.13870620727539
    9. ' from' → logprob: -8.76370620727539
    10. ')' → logprob: -9.13870620727539

Token 139: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4289456903934479
    2. '1' → logprob: -1.0539456605911255
    3. '2' → logprob: -9.053945541381836
    4. ' ' → logprob: -9.553945541381836
    5. ' le' → logprob: -10.553945541381836
    6. '<|end|>' → logprob: -11.553945541381836
    7. '```' → logprob: -11.928945541381836
    8. ' `' → logprob: -12.803945541381836
    9. 'le' → logprob: -13.178945541381836
    10. '  ' → logprob: -13.303945541381836

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000627610192168504
    2. ' ' → logprob: -7.375627517700195
    3. '`' → logprob: -15.000627517700195
    4. '```' → logprob: -15.000627517700195
    5. 'le' → logprob: -15.375627517700195
    6. '2' → logprob: -16.250627517700195
    7. ' ' → logprob: -16.750627517700195
    8. 'l' → logprob: -17.625627517700195
    9. '0' → logprob: -18.125627517700195
    10. ' le' → logprob: -18.250627517700195

Token 141: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012203040532767773
    2. ' ,' → logprob: -4.512203216552734
    3. ')' → logprob: -7.637203216552734
    4. ' jusqu' → logprob: -8.012203216552734
    5. ' ' → logprob: -8.137203216552734
    6. ' )' → logprob: -11.137203216552734
    7. ' et' → logprob: -11.762203216552734
    8. 's' → logprob: -12.137203216552734
    9. '<|end|>' → logprob: -12.512203216552734
    10. ' à' → logprob: -13.387203216552734

Token 142: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12389542907476425
    2. ''à' → logprob: -2.3738954067230225
    3. 'à' → logprob: -4.998895645141602
    4. '’à' → logprob: -4.998895645141602
    5. 'e' → logprob: -5.748895645141602
    6. 'a' → logprob: -6.498895645141602
    7. ' au' → logprob: -6.498895645141602
    8. ''au' → logprob: -6.873895645141602
    9. ')' → logprob: -7.123895645141602
    10. 'au' → logprob: -7.873895645141602

Token 143: ' (' (ID: 350)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.020590823143720627
    2. 'len' → logprob: -3.8955907821655273
    3. '(len' → logprob: -10.770590782165527
    4. ' ' → logprob: -11.770590782165527
    5. ' ' → logprob: -12.145590782165527
    6. '	len' → logprob: -12.520590782165527
    7. ' la' → logprob: -12.645590782165527
    8. '<len' → logprob: -12.770590782165527
    9. ' (' → logprob: -13.770590782165527
    10. '=len' → logprob: -13.895590782165527

Token 144: 'mais' (ID: 29170)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.01831101067364216
    2. 'len' → logprob: -4.018311023712158
    3. '(len' → logprob: -10.018310546875
    4. ' ' → logprob: -10.768310546875
    5. ',len' → logprob: -10.768310546875
    6. ' )' → logprob: -10.893310546875
    7. '=len' → logprob: -10.893310546875
    8. '<len' → logprob: -11.143310546875
    9. ')' → logprob: -11.643310546875
    10. '[len' → logprob: -12.143310546875

Token 145: ' sans' (ID: 9828)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1392366588115692
    2. ' len' → logprob: -2.6392366886138916
    3. ' à' → logprob: -3.3892366886138916
    4. 'len' → logprob: -4.3892364501953125
    5. 'pas' → logprob: -5.0142364501953125
    6. ' not' → logprob: -7.0142364501953125
    7. '<len' → logprob: -7.2642364501953125
    8. '=len' → logprob: -7.3892364501953125
    9. ' au' → logprob: -7.5142364501953125
    10. ')' → logprob: -7.5142364501953125

Token 146: ' incl' (ID: 11368)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06986461579799652
    2. 'len' → logprob: -3.444864511489868
    3. ' ' → logprob: -4.319864749908447
    4. '<|end|>' → logprob: -4.319864749908447
    5. ')' → logprob: -5.944864749908447
    6. '=len' → logprob: -6.694864749908447
    7. ' afficher' → logprob: -7.069864749908447
    8. ' incl' → logprob: -7.444864749908447
    9. ' )' → logprob: -7.944864749908447
    10. '_len' → logprob: -8.319864273071289

Token 147: 'ure' (ID: 627)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8487503528594971
    2. 'ut' → logprob: -1.223750352859497
    3. 'ure' → logprob: -1.473750352859497
    4. 'ur' → logprob: -3.848750352859497
    5. 't' → logprob: -4.473750114440918
    6. 'u' → logprob: -5.223750114440918
    7. 'et' → logprob: -5.848750114440918
    8. ')' → logprob: -5.973750114440918
    9. 'uire' → logprob: -6.848750114440918
    10. 'er' → logprob: -7.473750114440918

Token 148: ')' (ID: 8)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11443807184696198
    2. 'len' → logprob: -2.239438056945801
    3. ')' → logprob: -7.489438056945801
    4. '=len' → logprob: -7.739438056945801
    5. ' la' → logprob: -8.6144380569458
    6. ',len' → logprob: -8.8644380569458
    7. '(len' → logprob: -9.6144380569458
    8. '<len' → logprob: -9.9894380569458
    9. '	len' → logprob: -10.3644380569458
    10. ' ' → logprob: -10.4894380569458

Token 149: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006998223252594471
    2. 'len' → logprob: -5.006998062133789
    3. '(len' → logprob: -9.131998062133789
    4. ' ' → logprob: -10.381998062133789
    5. '	len' → logprob: -10.381998062133789
    6. '=len' → logprob: -10.506998062133789
    7. ' ' → logprob: -10.631998062133789
    8. '<len' → logprob: -10.756998062133789
    9. '[len' → logprob: -11.381998062133789
    10. ',len' → logprob: -11.756998062133789

Token 150: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0022234106436371803
    2. '(' → logprob: -6.127223491668701
    3. 's' → logprob: -10.252223014831543
    4. ' (' → logprob: -12.752223014831543
    5. '(
' → logprob: -16.37722396850586
    6. ' ' → logprob: -16.50222396850586
    7. ')' → logprob: -18.37722396850586
    8. '(S' → logprob: -19.25222396850586
    9. '('' → logprob: -19.50222396850586
    10. '(ss' → logprob: -19.50222396850586

Token 151: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015530280768871307
    2. '):' → logprob: -4.515530109405518
    3. ' )' → logprob: -5.765530109405518
    4. '))' → logprob: -7.765530109405518
    5. 's' → logprob: -8.390530586242676
    6. '()' → logprob: -8.890530586242676
    7. '),' → logprob: -9.015530586242676
    8. ' ):' → logprob: -9.140530586242676
    9. ' ' → logprob: -9.765530586242676
    10. '):
' → logprob: -10.140530586242676

Token 152: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39269882440567017
    2. ' for' → logprob: -2.0176987648010254
    3. 'for' → logprob: -2.3926987648010254
    4. ' ' → logprob: -3.6426987648010254
    5. '
' → logprob: -4.142698764801025
    6. ' 
' → logprob: -4.142698764801025
    7. ':
' → logprob: -4.392698764801025
    8. ' :' → logprob: -4.517698764801025
    9. '' → logprob: -5.392698764801025
    10. '```' → logprob: -5.767698764801025

Token 153: ' len' (ID: 4631)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.253329336643219
    2. ' for' → logprob: -1.5033292770385742
    3. '
' → logprob: -6.628329277038574
    4. ' 
' → logprob: -10.128329277038574
    5. 'f' → logprob: -11.128329277038574
    6. 'n' → logprob: -11.878329277038574
    7. ' ' → logprob: -12.378329277038574
    8. '```' → logprob: -13.003329277038574
    9. 'r' → logprob: -13.628329277038574
    10. 'i' → logprob: -13.753329277038574

Token 154: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06203199177980423
    2. '(' → logprob: -2.8120319843292236
    3. 's' → logprob: -10.187031745910645
    4. '()' → logprob: -10.812031745910645
    5. '(
' → logprob: -12.312031745910645
    6. ')' → logprob: -14.812031745910645
    7. '(

' → logprob: -14.937031745910645
    8. '('' → logprob: -15.687031745910645
    9. '(len' → logprob: -15.937031745910645
    10. '(n' → logprob: -16.06203269958496

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034726131707429886
    2. '())' → logprob: -6.378472805023193
    3. ' )' → logprob: -7.128472805023193
    4. '()' → logprob: -7.628472805023193
    5. '):' → logprob: -8.128472328186035
    6. '))' → logprob: -9.003472328186035
    7. ')-' → logprob: -11.503472328186035
    8. ')>' → logprob: -11.628472328186035
    9. '-' → logprob: -11.753472328186035
    10. '(' → logprob: -12.253472328186035

Token 156: ' ren' (ID: 5427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3702317178249359
    2. '):' → logprob: -1.6202317476272583
    3. ':' → logprob: -2.3702316284179688
    4. '-' → logprob: -5.245231628417969
    5. '>' → logprob: -5.620231628417969
    6. ' )' → logprob: -6.120231628417969
    7. ' ):' → logprob: -6.245231628417969
    8. ' -' → logprob: -6.995231628417969
    9. ')>' → logprob: -7.120231628417969
    10. ' :' → logprob: -7.370231628417969

Token 157: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.442472368478775
    2. 'g' → logprob: -1.3174723386764526
    3. 't' → logprob: -3.067472457885742
    4. 'ge' → logprob: -3.567472457885742
    5. 'tre' → logprob: -5.567472457885742
    6. 'voit' → logprob: -5.567472457885742
    7. 'd' → logprob: -5.942472457885742
    8. 'v' → logprob: -6.192472457885742
    9. 'e' → logprob: -7.817472457885742
    10. 'çoit' → logprob: -8.067472457885742

Token 158: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.008215012028813362
    2. 'la' → logprob: -5.883214950561523
    3. ' ' → logprob: -6.133214950561523
    4. ' le' → logprob: -6.508214950561523
    5. ' l' → logprob: -6.883214950561523
    6. ' ' → logprob: -7.758214950561523
    7. 'le' → logprob: -9.383214950561523
    8. 'l' → logprob: -9.633214950561523
    9. ' the' → logprob: -10.008214950561523
    10. '_la' → logprob: -10.258214950561523

Token 159: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.39186638593673706
    2. ' nombre' → logprob: -1.1418664455413818
    3. 'long' → logprob: -5.516866207122803
    4. 'length' → logprob: -8.016866683959961
    5. ' longueur' → logprob: -8.141866683959961
    6. 'len' → logprob: -9.766866683959961
    7. ' length' → logprob: -9.766866683959961
    8. ' long' → logprob: -10.016866683959961
    9. ' ' → logprob: -10.141866683959961
    10. 'a' → logprob: -10.891866683959961

Token 160: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07824522256851196
    2. ' d' → logprob: -3.328245162963867
    3. ' ' → logprob: -4.453245162963867
    4. 'de' → logprob: -5.328245162963867
    5. ' des' → logprob: -5.578245162963867
    6. '(' → logprob: -5.703245162963867
    7. ' (' → logprob: -5.703245162963867
    8. ')' → logprob: -5.828245162963867
    9. '(s' → logprob: -6.203245162963867
    10. '()' → logprob: -6.328245162963867

Token 161: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.10683480650186539
    2. ' s' → logprob: -3.481834888458252
    3. ' ' → logprob: -3.731834888458252
    4. '(s' → logprob: -3.981834888458252
    5. 'car' → logprob: -4.606834888458252
    6. ' car' → logprob: -5.356834888458252
    7. ' caracteres' → logprob: -5.606834888458252
    8. 's' → logprob: -5.731834888458252
    9. ' caractère' → logprob: -6.106834888458252
    10. ' caract' → logprob: -6.731834888458252

Token 162: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5053842663764954
    2. ' s' → logprob: -1.8803842067718506
    3. ' dans' → logprob: -2.6303842067718506
    4. 's' → logprob: -2.7553842067718506
    5. ' présents' → logprob: -3.1303842067718506
    6. ' present' → logprob: -4.38038444519043
    7. '(s' → logprob: -4.38038444519043
    8. ' ' → logprob: -4.50538444519043
    9. ' )' → logprob: -5.00538444519043
    10. '<|end|>' → logprob: -5.38038444519043

Token 163: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.025747202336788177
    2. 's' → logprob: -3.775747299194336
    3. ' la' → logprob: -6.400747299194336
    4. '(s' → logprob: -7.150747299194336
    5. ' ' → logprob: -10.275747299194336
    6. ' l' → logprob: -12.150747299194336
    7. 'la' → logprob: -12.400747299194336
    8. 'a' → logprob: -12.525747299194336
    9. 'l' → logprob: -13.775747299194336
    10. '_s' → logprob: -14.025747299194336

Token 164: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7760250568389893
    2. 's' → logprob: -1.1510250568389893
    3. 'chaine' → logprob: -1.6510250568389893
    4. 'cha' → logprob: -3.9010250568389893
    5. ' s' → logprob: -5.27602481842041
    6. 'string' → logprob: -5.90102481842041
    7. ' chaine' → logprob: -6.02602481842041
    8. ' string' → logprob: -7.15102481842041
    9. ' ' → logprob: -10.02602481842041
    10. '```' → logprob: -10.02602481842041

Token 165: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9675973057746887
    2. ' s' → logprob: -1.092597246170044
    3. ')' → logprob: -1.467597246170044
    4. ' )' → logprob: -3.217597246170044
    5. '(s' → logprob: -5.467597484588623
    6. ' ' → logprob: -5.717597484588623
    7. ' (' → logprob: -7.217597484588623
    8. '.' → logprob: -7.342597484588623
    9. ').' → logprob: -7.592597484588623
    10. ' de' → logprob: -7.592597484588623

Token 166: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34861233830451965
    2. ' s' → logprob: -1.2236123085021973
    3. '(s' → logprob: -9.348612785339355
    4. ')' → logprob: -9.598612785339355
    5. ')s' → logprob: -11.848612785339355
    6. ' ' → logprob: -13.598612785339355
    7. '_s' → logprob: -13.598612785339355
    8. ' )' → logprob: -14.348612785339355
    9. '	s' → logprob: -14.598612785339355
    10. ' ' → logprob: -14.723612785339355

Token 167: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0748833566904068
    2. '):' → logprob: -2.699883460998535
    3. ' )' → logprob: -5.824883460998535
    4. ').' → logprob: -7.074883460998535
    5. ' ):' → logprob: -7.699883460998535
    6. ':' → logprob: -8.574883460998535
    7. ')
' → logprob: -8.699883460998535
    8. '):
' → logprob: -8.824883460998535
    9. 's' → logprob: -10.574883460998535
    10. '.' → logprob: -10.699883460998535

Token 168: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025720134377479553
    2. '
' → logprob: -4.150720119476318
    3. ' for' → logprob: -4.650720119476318
    4. '```' → logprob: -10.025720596313477
    5. 'f' → logprob: -11.150720596313477
    6. ' 
' → logprob: -11.775720596313477
    7. 'n' → logprob: -12.150720596313477
    8. '' → logprob: -13.025720596313477
    9. '
' → logprob: -13.150720596313477
    10. '\n' → logprob: -13.275720596313477

Token 169: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520714998245239
    2. ' for' → logprob: -1.502071499824524
    3. 'f' → logprob: -9.127071380615234
    4. '
' → logprob: -10.752071380615234
    5. '```' → logprob: -12.627071380615234
    6. 'n' → logprob: -13.252071380615234
    7. 'r' → logprob: -13.502071380615234
    8. ' f' → logprob: -13.502071380615234
    9. ' 
' → logprob: -13.627071380615234
    10. ' ' → logprob: -14.002071380615234

Token 170: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20162227749824524
    2. ' for' → logprob: -1.7016222476959229
    3. ' boucle' → logprob: -10.076622009277344
    4. 'f' → logprob: -10.451622009277344
    5. ' ' → logprob: -10.951622009277344
    6. ' ' → logprob: -11.076622009277344
    7. 'pour' → logprob: -11.326622009277344
    8. 'b' → logprob: -11.326622009277344
    9. '
' → logprob: -11.451622009277344
    10. '```' → logprob: -11.451622009277344

Token 171: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011053833179175854
    2. 'for' → logprob: -4.511054039001465
    3. ' ' → logprob: -12.136054039001465
    4. ' ' → logprob: -15.136054039001465
    5. ' `' → logprob: -15.886054039001465
    6. ' pour' → logprob: -16.88605308532715
    7. ' a' → logprob: -17.38605308532715
    8. '_for' → logprob: -17.38605308532715
    9. '	for' → logprob: -17.51105308532715
    10. '.for' → logprob: -17.88605308532715

Token 172: ' va' (ID: 3423)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06504376232624054
    2. ' ' → logprob: -2.8150436878204346
    3. ' for' → logprob: -6.065043926239014
    4. ' ' → logprob: -8.190043449401855
    5. ' s' → logprob: -8.940043449401855
    6. ' continue' → logprob: -9.565043449401855
    7. 'i' → logprob: -9.815043449401855
    8. '  ' → logprob: -10.065043449401855
    9. ' a' → logprob: -10.440043449401855
    10. ' espace' → logprob: -10.690043449401855

Token 173: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09674040973186493
    2. ' i' → logprob: -2.846740484237671
    3. ' parcour' → logprob: -3.596740484237671
    4. ' continuer' → logprob: -5.596740245819092
    5. ' iter' → logprob: -7.346740245819092
    6. ' s' → logprob: -8.47174072265625
    7. ' parcours' → logprob: -8.47174072265625
    8. 'i' → logprob: -8.59674072265625
    9. ' for' → logprob: -8.84674072265625
    10. ' c' → logprob: -9.09674072265625

Token 174: ' parcour' (ID: 130642)
  Prédit: ' parcour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.3599696159362793
    2. ' ' → logprob: -1.6099696159362793
    3. ' i' → logprob: -3.3599696159362793
    4. ' iter' → logprob: -3.6099696159362793
    5. ' continuer' → logprob: -3.8599696159362793
    6. ' for' → logprob: -4.609969615936279
    7. ' range' → logprob: -5.984969615936279
    8. ' parcours' → logprob: -6.234969615936279
    9. ' travers' → logprob: -7.359969615936279
    10. ' continue' → logprob: -8.109970092773438

Token 175: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.024447103962302208
    2. 'i' → logprob: -3.899447202682495
    3. 'r' → logprob: -5.649446964263916
    4. 'u' → logprob: -8.524447441101074
    5. ' i' → logprob: -9.649447441101074
    6. 'er' → logprob: -10.524447441101074
    7. ' ' → logprob: -10.649447441101074
    8. 'e' → logprob: -11.149447441101074
    9. 'ire' → logprob: -12.024447441101074
    10. ' ir' → logprob: -12.024447441101074

Token 176: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3384784460067749
    2. ' range' → logprob: -1.463478446006775
    3. ' i' → logprob: -3.5884785652160645
    4. ' la' → logprob: -4.7134785652160645
    5. ' ' → logprob: -4.8384785652160645
    6. ' s' → logprob: -5.0884785652160645
    7. ' l' → logprob: -5.9634785652160645
    8. 'range' → logprob: -6.8384785652160645
    9. 'i' → logprob: -7.7134785652160645
    10. 's' → logprob: -8.713478088378906

Token 177: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01715557649731636
    2. ' ' → logprob: -4.142155647277832
    3. 'i' → logprob: -7.642155647277832
    4. ' la' → logprob: -8.892155647277832
    5. ' l' → logprob: -9.017155647277832
    6. ' s' → logprob: -9.142155647277832
    7. 's' → logprob: -9.642155647277832
    8. '_' → logprob: -10.267155647277832
    9. ' ' → logprob: -10.517155647277832
    10. ' les' → logprob: -10.642155647277832

Token 178: ' indices' (ID: 30378)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8106146454811096
    2. ' indices' → logprob: -0.9356146454811096
    3. ' caractères' → logprob: -2.310614585876465
    4. ' ' → logprob: -3.810614585876465
    5. ' index' → logprob: -4.060614585876465
    6. 'i' → logprob: -4.310614585876465
    7. ' caract' → logprob: -5.935614585876465
    8. ' caracteres' → logprob: -6.060614585876465
    9. 'indices' → logprob: -6.185614585876465
    10. ' indexes' → logprob: -6.435614585876465

Token 179: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013362806290388107
    2. ' i' → logprob: -4.388362884521484
    3. ' ,' → logprob: -8.388362884521484
    4. ' de' → logprob: -8.763362884521484
    5. '  ' → logprob: -8.888362884521484
    6. 's' → logprob: -9.388362884521484
    7. ' s' → logprob: -9.388362884521484
    8. ' _' → logprob: -11.138362884521484
    9. ' )' → logprob: -11.138362884521484
    10. 'i' → logprob: -11.138362884521484

Token 180: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.09162945300340652
    2. 's' → logprob: -2.7166295051574707
    3. ' ' → logprob: -4.216629505157471
    4. ' la' → logprob: -5.716629505157471
    5. ' range' → logprob: -5.841629505157471
    6. 'range' → logprob: -8.091629028320312
    7. '1' → logprob: -9.591629028320312
    8. ' l' → logprob: -10.091629028320312
    9. ' i' → logprob: -11.216629028320312
    10. 'i' → logprob: -11.591629028320312

Token 181: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5094649791717529
    2. ' s' → logprob: -1.384464979171753
    3. ' la' → logprob: -2.009464979171753
    4. ' ' → logprob: -5.134465217590332
    5. 'la' → logprob: -5.509465217590332
    6. ' range' → logprob: -6.509465217590332
    7. 'range' → logprob: -6.634465217590332
    8. '1' → logprob: -6.759465217590332
    9. 'l' → logprob: -7.759465217590332
    10. ' l' → logprob: -8.509465217590332

Token 182: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03385799750685692
    2. ',' → logprob: -4.908857822418213
    3. ' ' → logprob: -4.908857822418213
    4. ' ,' → logprob: -5.033857822418213
    5. ' jusqu' → logprob: -5.908857822418213
    6. ':' → logprob: -6.158857822418213
    7. 'à' → logprob: -6.158857822418213
    8. ' :' → logprob: -6.158857822418213
    9. ' to' → logprob: -7.283857822418213
    10. ' ' → logprob: -8.158858299255371

Token 183: '’à' (ID: 32891)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1760958731174469
    2. '(len' → logprob: -2.551095962524414
    3. ''à' → logprob: -3.176095962524414
    4. 'à' → logprob: -4.301095962524414
    5. '(' → logprob: -4.426095962524414
    6. '’à' → logprob: -5.051095962524414
    7. ' len' → logprob: -5.551095962524414
    8. 'len' → logprob: -6.301095962524414
    9. '<len' → logprob: -7.051095962524414
    10. '=len' → logprob: -7.176095962524414

Token 184: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.31335747241973877
    2. 'len' → logprob: -1.3133574724197388
    3. ' la' → logprob: -10.31335735321045
    4. ' ' → logprob: -10.43835735321045
    5. '<len' → logprob: -11.43835735321045
    6. '(len' → logprob: -11.81335735321045
    7. '	len' → logprob: -12.43835735321045
    8. ' ' → logprob: -12.81335735321045
    9. 'la' → logprob: -12.93835735321045
    10. '=len' → logprob: -13.18835735321045

Token 185: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2019328773021698
    2. '(s' → logprob: -1.7019329071044922
    3. 's' → logprob: -7.576932907104492
    4. '(
' → logprob: -12.951932907104492
    5. ' (' → logprob: -13.076932907104492
    6. '('' → logprob: -14.076932907104492
    7. ')' → logprob: -14.826932907104492
    8. ',' → logprob: -15.076932907104492
    9. '(len' → logprob: -15.451932907104492
    10. '(n' → logprob: -15.576932907104492

Token 186: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010600169189274311
    2. ' ):' → logprob: -5.5106000900268555
    3. '):
' → logprob: -5.6356000900268555
    4. ')' → logprob: -5.8856000900268555
    5. 's' → logprob: -9.385600090026855
    6. ':' → logprob: -10.885600090026855
    7. ' ' → logprob: -11.510600090026855
    8. ',' → logprob: -12.135600090026855
    9. '):

' → logprob: -12.135600090026855
    10. ' ):
' → logprob: -12.260600090026855

Token 187: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20334601402282715
    2. ' :' → logprob: -1.7033460140228271
    3. ',' → logprob: -7.203346252441406
    4. '):' → logprob: -7.703346252441406
    5. ':
' → logprob: -8.453346252441406
    6. ' ):' → logprob: -8.703346252441406
    7. ' :
' → logprob: -8.828346252441406
    8. ')' → logprob: -9.828346252441406
    9. ' ' → logprob: -10.828346252441406
    10. ' ,' → logprob: -11.078346252441406

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03375991806387901
    2. ' ' → logprob: -3.408759832382202
    3. 'len' → logprob: -9.658760070800781
    4. ' len' → logprob: -10.533760070800781
    5. ')' → logprob: -11.533760070800781
    6. 's' → logprob: -12.033760070800781
    7. ' s' → logprob: -12.533760070800781
    8. '```' → logprob: -13.658760070800781
    9. '2' → logprob: -13.783760070800781
    10. ' ' → logprob: -14.783760070800781

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '2' → logprob: -15.126326560974121
    4. '```' → logprob: -15.501326560974121
    5. ' ' → logprob: -15.751326560974121
    6. 'un' → logprob: -15.751326560974121
    7. 's' → logprob: -16.188827514648438
    8. ')' → logprob: -16.813827514648438
    9. '１' → logprob: -17.063827514648438
    10. '-' → logprob: -17.438827514648438

Token 190: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009678889065980911
    2. ',' → logprob: -5.634678840637207
    3. ':
' → logprob: -5.884678840637207
    4. ' :' → logprob: -6.134678840637207
    5. '
' → logprob: -8.009678840637207
    6. ' :
' → logprob: -8.509678840637207
    7. ' for' → logprob: -9.009678840637207
    8. ' ' → logprob: -9.509678840637207
    9. ' 
' → logprob: -9.884678840637207
    10. '.' → logprob: -9.884678840637207

Token 191: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14184978604316711
    2. ':
' → logprob: -2.5168497562408447
    3. '
' → logprob: -3.8918497562408447
    4. ' :
' → logprob: -4.516849994659424
    5. ' :' → logprob: -4.766849994659424
    6. 'for' → logprob: -5.891849994659424
    7. ' for' → logprob: -6.141849994659424
    8. 's' → logprob: -6.516849994659424
    9. ',' → logprob: -6.516849994659424
    10. ' 
' → logprob: -7.266849994659424

Token 192: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36917757987976074
    2. 'for' → logprob: -1.2441775798797607
    3. ' for' → logprob: -4.61917781829834
    4. ' 
' → logprob: -5.36917781829834
    5. '```' → logprob: -6.11917781829834
    6. '\n' → logprob: -6.36917781829834
    7. '  
' → logprob: -6.99417781829834
    8. 'f' → logprob: -7.86917781829834
    9. '' → logprob: -7.99417781829834
    10. '
' → logprob: -9.24417781829834

Token 193: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0789230540394783
    2. ' i' → logprob: -2.578922986984253
    3. ' ‌' → logprob: -11.328923225402832
    4. 'i' → logprob: -11.453923225402832
    5. '  ' → logprob: -11.828923225402832
    6. ' ' → logprob: -14.078923225402832
    7. ' ﻿' → logprob: -14.328923225402832
    8. '_' → logprob: -14.578923225402832
    9. ' ```' → logprob: -15.078923225402832
    10. ' ​' → logprob: -15.328923225402832

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0056660370901227
    2. 'in' → logprob: -5.755666255950928
    3. ' ' → logprob: -6.005666255950928
    4. ' i' → logprob: -11.75566577911377
    5. '  ' → logprob: -12.00566577911377
    6. ')' → logprob: -13.63066577911377
    7. '1' → logprob: -13.75566577911377
    8. '(' → logprob: -14.25566577911377
    9. '	in' → logprob: -14.38066577911377
    10. '```' → logprob: -14.88066577911377

Token 195: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00188211549539119
    2. 'range' → logprob: -6.376882076263428
    3. ' ' → logprob: -8.626882553100586
    4. ' space' → logprob: -15.126882553100586
    5. '1' → logprob: -15.376882553100586
    6. '	range' → logprob: -16.626882553100586
    7. '(range' → logprob: -16.751882553100586
    8. ' xrange' → logprob: -17.376882553100586
    9. ' ' → logprob: -17.626882553100586
    10. 'space' → logprob: -18.876882553100586

Token 196: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -13.12500286102295
    3. '(
' → logprob: -14.87500286102295
    4. '(i' → logprob: -18.875001907348633
    5. '1' → logprob: -20.125001907348633
    6. '(

' → logprob: -20.250001907348633
    7. '```' → logprob: -20.500001907348633
    8. '((' → logprob: -20.500001907348633
    9. '(len' → logprob: -21.250001907348633
    10. '("("' → logprob: -22.250001907348633

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '(' → logprob: -17.50000762939453
    4. '   ' → logprob: -19.87500762939453
    5. ',' → logprob: -21.12500762939453
    6. '```' → logprob: -21.12500762939453
    7. ')' → logprob: -21.25000762939453
    8. '１' → logprob: -21.87500762939453
    9. '
' → logprob: -22.00000762939453
    10. '2' → logprob: -22.12500762939453

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030869776383042336
    2. '(len' → logprob: -4.030869960784912
    3. ',len' → logprob: -4.405869960784912
    4. ' ,' → logprob: -8.530869483947754
    5. '(' → logprob: -8.780869483947754
    6. ')' → logprob: -10.405869483947754
    7. 'len' → logprob: -10.780869483947754
    8. ' len' → logprob: -11.280869483947754
    9. 's' → logprob: -11.655869483947754
    10. ' (' → logprob: -12.530869483947754

Token 199: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20141470432281494
    2. 'len' → logprob: -1.701414704322815
    3. '(len' → logprob: -13.701415061950684
    4. '[len' → logprob: -16.076414108276367
    5. '	len' → logprob: -16.576414108276367
    6. '=len' → logprob: -17.451414108276367
    7. '<len' → logprob: -17.451414108276367
    8. ',len' → logprob: -18.326414108276367
    9. ' ' → logprob: -18.576414108276367
    10. ')' → logprob: -19.076414108276367

Token 200: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007157695363275707
    2. '(' → logprob: -7.250715732574463
    3. 's' → logprob: -12.250716209411621
    4. ')' → logprob: -14.125716209411621
    5. ' (' → logprob: -15.375716209411621
    6. '(
' → logprob: -16.375715255737305
    7. '(i' → logprob: -18.875715255737305
    8. ')(' → logprob: -18.875715255737305
    9. ' ' → logprob: -19.125715255737305
    10. ')s' → logprob: -19.625715255737305

Token 201: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02303406596183777
    2. '):' → logprob: -4.39803409576416
    3. '))' → logprob: -4.64803409576416
    4. ')):
' → logprob: -7.77303409576416
    5. ')' → logprob: -8.14803409576416
    6. 's' → logprob: -9.64803409576416
    7. ':' → logprob: -9.64803409576416
    8. ')):
' → logprob: -11.14803409576416
    9. ' ' → logprob: -11.64803409576416
    10. ' ))' → logprob: -12.02303409576416

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4077197015285492
    2. ':' → logprob: -1.4077197313308716
    3. ' ' → logprob: -3.532719612121582
    4. ' 
' → logprob: -3.782719612121582
    5. ' if' → logprob: -4.282719612121582
    6. 'if' → logprob: -5.032719612121582
    7. ':
' → logprob: -5.407719612121582
    8. '  
' → logprob: -5.407719612121582
    9. '    
' → logprob: -5.782719612121582
    10. '
' → logprob: -6.532719612121582

Token 203: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30866673588752747
    2. 'if' → logprob: -1.433666706085205
    3. ' ' → logprob: -3.683666706085205
    4. '   ' → logprob: -6.808666706085205
    5. '    ' → logprob: -7.808666706085205
    6. ' 
' → logprob: -8.058667182922363
    7. ' ans' → logprob: -10.058667182922363
    8. '  ' → logprob: -10.558667182922363
    9. 'ans' → logprob: -10.683667182922363
    10. '	if' → logprob: -10.808667182922363

Token 204: ' À' (ID: 27643)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005267315078526735
    2. ' if' → logprob: -5.255267143249512
    3. '   ' → logprob: -10.630267143249512
    4. ' ' → logprob: -12.130267143249512
    5. 'i' → logprob: -13.130267143249512
    6. '    ' → logprob: -14.755267143249512
    7. '```' → logprob: -14.755267143249512
    8. '  ' → logprob: -15.130267143249512
    9. '    
' → logprob: -15.880267143249512
    10. 'ans' → logprob: -15.880267143249512

Token 205: ' chaque' (ID: 21194)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1997736394405365
    2. 'if' → logprob: -1.8247736692428589
    3. ' ' → logprob: -4.324773788452148
    4. '   ' → logprob: -5.574773788452148
    5. '    ' → logprob: -6.324773788452148
    6. ' ans' → logprob: -8.449773788452148
    7. 'i' → logprob: -8.824773788452148
    8. ' i' → logprob: -9.074773788452148
    9. 'c' → logprob: -9.324773788452148
    10. 's' → logprob: -9.324773788452148

Token 206: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15048110485076904
    2. ' i' → logprob: -2.4004812240600586
    3. ' if' → logprob: -4.150481224060059
    4. 'i' → logprob: -4.650481224060059
    5. '   ' → logprob: -4.650481224060059
    6. ' ' → logprob: -6.025481224060059
    7. '  ' → logprob: -6.150481224060059
    8. ' caract' → logprob: -6.150481224060059
    9. 'if' → logprob: -6.525481224060059
    10. '_' → logprob: -6.775481224060059

Token 207: 'ération' (ID: 24977)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4120595455169678
    2. '   ' → logprob: -1.4120595455169678
    3. 'ération' → logprob: -1.4120595455169678
    4. 'i' → logprob: -2.9120595455169678
    5. ' ' → logprob: -3.1620595455169678
    6. 'ère' → logprob: -3.5370595455169678
    7. 'er' → logprob: -3.6620595455169678
    8. 'érieur' → logprob: -3.6620595455169678
    9. 'é' → logprob: -4.412059783935547
    10. '  ' → logprob: -4.662059783935547

Token 208: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7090557813644409
    2. '   ' → logprob: -1.084055781364441
    3. ':' → logprob: -2.2090559005737305
    4. '    ' → logprob: -3.7090559005737305
    5. ' :' → logprob: -3.9590559005737305
    6. ' if' → logprob: -5.2090559005737305
    7. '  ' → logprob: -5.5840559005737305
    8. '       ' → logprob: -6.5840559005737305
    9. ',' → logprob: -6.5840559005737305
    10. ' ,' → logprob: -7.2090559005737305

Token 209: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4456676244735718
    2. ' if' → logprob: -1.0706676244735718
    3. 'if' → logprob: -5.070667743682861
    4. ' ' → logprob: -5.445667743682861
    5. '   ' → logprob: -5.695667743682861
    6. '    ' → logprob: -6.195667743682861
    7. '  ' → logprob: -8.320667266845703
    8. '<|end|>' → logprob: -8.570667266845703
    9. '  ' → logprob: -9.195667266845703
    10. ' 
' → logprob: -9.695667266845703

Token 210: ' compare' (ID: 12221)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34320178627967834
    2. 'if' → logprob: -1.718201756477356
    3. ' ' → logprob: -3.7182018756866455
    4. '   ' → logprob: -3.8432018756866455
    5. ' ' → logprob: -4.218201637268066
    6. ' vér' → logprob: -4.218201637268066
    7. ' compare' → logprob: -4.593201637268066
    8. 'v' → logprob: -4.843201637268066
    9. '    ' → logprob: -5.218201637268066
    10. ' regarde' → logprob: -5.593201637268066

Token 211: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9273232221603394
    2. ' s' → logprob: -1.0523232221603394
    3. 's' → logprob: -1.4273232221603394
    4. ' if' → logprob: -4.427323341369629
    5. '	s' → logprob: -6.677323341369629
    6. 'if' → logprob: -7.052323341369629
    7. '(s' → logprob: -7.927323341369629
    8. ' ' → logprob: -8.052323341369629
    9. '   ' → logprob: -9.677323341369629
    10. '_' → logprob: -9.802323341369629

Token 212: ' caractère' (ID: 80509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.470050573348999
    2. ' s' → logprob: -1.095050573348999
    3. ' caractère' → logprob: -3.720050573348999
    4. 'car' → logprob: -4.845050811767578
    5. ' caract' → logprob: -5.220050811767578
    6. ' car' → logprob: -6.470050811767578
    7. ' caractères' → logprob: -7.970050811767578
    8. '   ' → logprob: -8.095050811767578
    9. ' ' → logprob: -8.220050811767578
    10. 'i' → logprob: -9.095050811767578

Token 213: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3353361189365387
    2. ' s' → logprob: -1.5853360891342163
    3. ' ' → logprob: -3.085336208343506
    4. '[' → logprob: -3.835336208343506
    5. '[s' → logprob: -4.710336208343506
    6. '_' → logprob: -7.210336208343506
    7. '	s' → logprob: -7.460336208343506
    8. '[i' → logprob: -7.460336208343506
    9. '_s' → logprob: -7.835336208343506
    10. ' [' → logprob: -7.960336208343506

Token 214: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8997579216957092
    2. 's' → logprob: -1.5247578620910645
    3. ' l' → logprob: -2.1497578620910645
    4. ' i' → logprob: -2.1497578620910645
    5. ' s' → logprob: -2.2747578620910645
    6. 'l' → logprob: -3.2747578620910645
    7. ' index' → logprob: -7.7747578620910645
    8. ' ' → logprob: -7.8997578620910645
    9. ' la' → logprob: -7.8997578620910645
    10. '[i' → logprob: -8.774758338928223

Token 215: '’ind' (ID: 65649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8654089570045471
    2. 'indice' → logprob: -0.9904089570045471
    3. 'index' → logprob: -1.7404088973999023
    4. '[i' → logprob: -4.990408897399902
    5. 's' → logprob: -5.365408897399902
    6. ' i' → logprob: -5.615408897399902
    7. 'indices' → logprob: -5.615408897399902
    8. 'a' → logprob: -5.865408897399902
    9. ''ind' → logprob: -6.115408897399902
    10. ' index' → logprob: -6.365408897399902

Token 216: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.05166556313633919
    2. 'ice' → logprob: -3.0516655445098877
    3. 'i' → logprob: -6.301665782928467
    4. 'ices' → logprob: -7.051665782928467
    5. 'e' → logprob: -8.051665306091309
    6. 'é' → logprob: -11.051665306091309
    7. ' i' → logprob: -11.426665306091309
    8. 's' → logprob: -11.926665306091309
    9. '   ' → logprob: -12.926665306091309
    10. ']' → logprob: -13.051665306091309

Token 217: ' actuel' (ID: 113646)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2263031154870987
    2. 'i' → logprob: -1.6013031005859375
    3. '   ' → logprob: -7.9763031005859375
    4. ' ' → logprob: -8.226303100585938
    5. '	i' → logprob: -9.601303100585938
    6. '[i' → logprob: -9.851303100585938
    7. '-' → logprob: -9.851303100585938
    8. '    ' → logprob: -10.351303100585938
    9. 's' → logprob: -10.851303100585938
    10. '  ' → logprob: -11.601303100585938

Token 218: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0042595863342285
    2. ' i' → logprob: -1.6292595863342285
    3. 'i' → logprob: -1.8792595863342285
    4. '[i' → logprob: -2.5042595863342285
    5. ' ' → logprob: -2.6292595863342285
    6. ' s' → logprob: -3.0042595863342285
    7. '-' → logprob: -3.1292595863342285
    8. '   ' → logprob: -3.8792595863342285
    9. '[' → logprob: -5.2542595863342285
    10. '    ' → logprob: -6.0042595863342285

Token 219: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10099629312753677
    2. ' i' → logprob: -2.350996255874634
    3. 's' → logprob: -8.225996017456055
    4. ')' → logprob: -8.600996017456055
    5. '   ' → logprob: -9.475996017456055
    6. ' s' → logprob: -9.725996017456055
    7. ' ' → logprob: -9.975996017456055
    8. '-' → logprob: -10.225996017456055
    9. '[i' → logprob: -10.600996017456055
    10. ']' → logprob: -10.975996017456055

Token 220: ''' (ID: 6)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6482788920402527
    2. ']' → logprob: -0.7732788920402527
    3. ' -' → logprob: -4.898278713226318
    4. '   ' → logprob: -5.773278713226318
    5. ' ]' → logprob: -6.148278713226318
    6. ')' → logprob: -7.023278713226318
    7. ' s' → logprob: -7.398278713226318
    8. 's' → logprob: -7.648278713226318
    9. ' ' → logprob: -7.648278713226318
    10. '']' → logprob: -8.773279190063477

Token 221: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5313988924026489
    2. ' s' → logprob: -1.656398892402649
    3. ' ' → logprob: -2.2813987731933594
    4. 's' → logprob: -3.0313987731933594
    5. '-' → logprob: -3.7813987731933594
    6. '    ' → logprob: -4.406398773193359
    7. ' !=' → logprob: -4.406398773193359
    8. ' if' → logprob: -5.156398773193359
    9. 'if' → logprob: -5.281398773193359
    10. ']' → logprob: -5.656398773193359

Token 222: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.058556780219078064
    2. 's' → logprob: -2.9335567951202393
    3. ' ' → logprob: -5.80855655670166
    4. ' celui' → logprob: -7.55855655670166
    5. ' le' → logprob: -9.80855655670166
    6. ' a' → logprob: -11.05855655670166
    7. ' l' → logprob: -11.68355655670166
    8. ' la' → logprob: -11.80855655670166
    9. ' ' → logprob: -11.93355655670166
    10. '	s' → logprob: -12.05855655670166

Token 223: ' caractère' (ID: 80509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5899164080619812
    2. ' ' → logprob: -1.589916467666626
    3. ' s' → logprob: -1.839916467666626
    4. ' caractère' → logprob: -3.714916467666626
    5. ' précédent' → logprob: -3.964916467666626
    6. 'car' → logprob: -4.089916229248047
    7. ' i' → logprob: -5.214916229248047
    8. ' caract' → logprob: -5.339916229248047
    9. 'i' → logprob: -5.464916229248047
    10. '   ' → logprob: -6.839916229248047

Token 224: ' précédent' (ID: 128462)
  Prédit: ' précédent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédent' → logprob: -0.8289393782615662
    2. 'preced' → logprob: -1.453939437866211
    3. 's' → logprob: -2.203939437866211
    4. '   ' → logprob: -2.328939437866211
    5. '_' → logprob: -3.453939437866211
    6. '[i' → logprob: -3.828939437866211
    7. '[' → logprob: -4.328939437866211
    8. ' s' → logprob: -4.703939437866211
    9. ' ' → logprob: -4.703939437866211
    10. ' i' → logprob: -5.078939437866211

Token 225: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39329802989959717
    2. ' i' → logprob: -1.7682980298995972
    3. 's' → logprob: -2.7682981491088867
    4. ' s' → logprob: -3.0182981491088867
    5. 'i' → logprob: -4.268298149108887
    6. '[i' → logprob: -5.018298149108887
    7. '    ' → logprob: -5.018298149108887
    8. ' (' → logprob: -5.518298149108887
    9. ' ' → logprob: -5.643298149108887
    10. '(i' → logprob: -6.018298149108887

Token 226: ' qui' (ID: 2780)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4075787365436554
    2. 's' → logprob: -1.157578706741333
    3. '   ' → logprob: -5.407578945159912
    4. ' ' → logprob: -5.657578945159912
    5. ' if' → logprob: -5.782578945159912
    6. ' '' → logprob: -5.907578945159912
    7. '    ' → logprob: -6.532578945159912
    8. 'i' → logprob: -6.657578945159912
    9. ' i' → logprob: -6.657578945159912
    10. 'if' → logprob: -6.907578945159912

Token 227: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.22168970108032227
    2. 's' → logprob: -2.9716897010803223
    3. 'i' → logprob: -3.2216897010803223
    4. ' s' → logprob: -3.3466897010803223
    5. 'est' → logprob: -3.3466897010803223
    6. ' i' → logprob: -3.7216897010803223
    7. ' is' → logprob: -5.596689701080322
    8. '=' → logprob: -6.596689701080322
    9. ' vaut' → logprob: -6.971689701080322
    10. '`' → logprob: -7.096689701080322

Token 228: ' trouve' (ID: 30913)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7099937796592712
    2. ' trouve' → logprob: -0.8349937796592712
    3. ' s' → logprob: -3.959993839263916
    4. '[' → logprob: -4.209993839263916
    5. '```' → logprob: -4.709993839263916
    6. 'i' → logprob: -4.834993839263916
    7. '[i' → logprob: -4.834993839263916
    8. ']' → logprob: -5.334993839263916
    9. '=' → logprob: -6.709993839263916
    10. ')' → logprob: -6.834993839263916

Token 229: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04991089180111885
    2. 's' → logprob: -3.4249107837677
    3. ' s' → logprob: -5.049911022186279
    4. ' a' → logprob: -6.049911022186279
    5. 'à' → logprob: -6.299911022186279
    6. ' au' → logprob: -6.674911022186279
    7. '[i' → logprob: -6.799911022186279
    8. ' at' → logprob: -7.174911022186279
    9. ' ' → logprob: -7.549911022186279
    10. '[' → logprob: -7.549911022186279

Token 230: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07077531516551971
    2. ' i' → logprob: -2.695775270462036
    3. 's' → logprob: -8.070775032043457
    4. 'l' → logprob: -8.695775032043457
    5. ' s' → logprob: -9.445775032043457
    6. ' la' → logprob: -9.570775032043457
    7. '[i' → logprob: -10.070775032043457
    8. '   ' → logprob: -10.195775032043457
    9. ' ' → logprob: -10.195775032043457
    10. ' l' → logprob: -10.320775032043457

Token 231: '’ind' (ID: 65649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05326357111334801
    2. '-' → logprob: -3.3032636642456055
    3. ' i' → logprob: -4.9282636642456055
    4. '[i' → logprob: -5.6782636642456055
    5. ' -' → logprob: -6.4282636642456055
    6. 'indice' → logprob: -6.9282636642456055
    7. 's' → logprob: -7.3032636642456055
    8. '   ' → logprob: -7.8032636642456055
    9. ' ' → logprob: -9.178263664245605
    10. '[' → logprob: -9.678263664245605

Token 232: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.365281879901886
    2. 'ice' → logprob: -1.2402818202972412
    3. 'i' → logprob: -4.49028205871582
    4. '-' → logprob: -5.61528205871582
    5. 'ices' → logprob: -6.61528205871582
    6. 'dex' → logprob: -9.11528205871582
    7. 'ent' → logprob: -9.36528205871582
    8. '   ' → logprob: -9.86528205871582
    9. 'x' → logprob: -9.86528205871582
    10. ' -' → logprob: -10.24028205871582

Token 233: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18002018332481384
    2. 'i' → logprob: -1.8050202131271362
    3. '   ' → logprob: -9.180020332336426
    4. '[i' → logprob: -9.680020332336426
    5. '	i' → logprob: -10.055020332336426
    6. ' ' → logprob: -10.305020332336426
    7. '{i' → logprob: -11.555020332336426
    8. '  ' → logprob: -12.305020332336426
    9. '(i' → logprob: -12.555020332336426
    10. ' ' → logprob: -12.680020332336426

Token 234: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22547970712184906
    2. ' i' → logprob: -1.6004797220230103
    3. '   ' → logprob: -10.225480079650879
    4. ' ' → logprob: -11.475480079650879
    5. '	i' → logprob: -12.475480079650879
    6. '```' → logprob: -12.475480079650879
    7. ' (' → logprob: -12.850480079650879
    8. '(i' → logprob: -13.225480079650879
    9. '`' → logprob: -13.225480079650879
    10. '  ' → logprob: -13.600480079650879

Token 235: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022686660289764
    2. ' -' → logprob: -1.910226821899414
    3. '   ' → logprob: -13.660226821899414
    4. ')' → logprob: -14.035226821899414
    5. ' ' → logprob: -14.910226821899414
    6. ' ' → logprob: -16.160226821899414
    7. '```' → logprob: -16.160226821899414
    8. '-)' → logprob: -16.785226821899414
    9. ' )' → logprob: -17.285226821899414
    10. '1' → logprob: -17.410226821899414

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '```' → logprob: -14.75015926361084
    4. '   ' → logprob: -15.37515926361084
    5. 'i' → logprob: -18.000158309936523
    6. 's' → logprob: -18.250158309936523
    7. '  ' → logprob: -18.812658309936523
    8. '`' → logprob: -18.875158309936523
    9. ' ' → logprob: -19.312658309936523
    10. '    ' → logprob: -19.562658309936523

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.75001335144043
    4. '   ' → logprob: -17.00001335144043
    5. '۱' → logprob: -19.31251335144043
    6. '  ' → logprob: -19.37501335144043
    7. '
' → logprob: -19.50001335144043
    8. '<|end|>' → logprob: -19.68751335144043
    9. '11' → logprob: -20.18751335144043
    10. '১' → logprob: -20.31251335144043

Token 238: ''.
' (ID: 49980)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6403850317001343
    2. ':' → logprob: -2.140385150909424
    3. '   ' → logprob: -2.265385150909424
    4. ')' → logprob: -2.640385150909424
    5. '':' → logprob: -2.640385150909424
    6. '):
' → logprob: -3.390385150909424
    7. ' ):' → logprob: -3.765385150909424
    8. ']:' → logprob: -4.390385150909424
    9. ''' → logprob: -4.390385150909424
    10. ']' → logprob: -4.890385150909424

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.102680633077398e-05
    2. ' if' → logprob: -9.625090599060059
    3. 'if' → logprob: -11.250090599060059
    4. '    
' → logprob: -12.375090599060059
    5. '   ' → logprob: -12.375090599060059
    6. ':' → logprob: -13.875090599060059
    7. '       ' → logprob: -14.625090599060059
    8. '  ' → logprob: -15.125090599060059
    9. ' ' → logprob: -15.375090599060059
    10. '```' → logprob: -15.500090599060059

Token 240: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18034203350543976
    2. ' if' → logprob: -2.055341958999634
    3. 'if' → logprob: -3.305341958999634
    4. ' ' → logprob: -8.680341720581055
    5. '    ' → logprob: -10.180341720581055
    6. '  ' → logprob: -10.555341720581055
    7. '	if' → logprob: -11.055341720581055
    8. '       ' → logprob: -11.680341720581055
    9. '   ' → logprob: -11.805341720581055
    10. '    
' → logprob: -11.930341720581055

Token 241: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31386321783065796
    2. ' if' → logprob: -1.5638632774353027
    3. '   ' → logprob: -2.8138632774353027
    4. ' ' → logprob: -9.688862800598145
    5. '  ' → logprob: -11.938862800598145
    6. '	if' → logprob: -12.188862800598145
    7. '    ' → logprob: -12.688862800598145
    8. 'If' → logprob: -12.938862800598145
    9. ' ' → logprob: -13.563862800598145
    10. '       ' → logprob: -14.438862800598145

Token 242: '’op' (ID: 55660)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8715774416923523
    2. '   ' → logprob: -1.121577501296997
    3. 'e' → logprob: -2.496577501296997
    4. ' ' → logprob: -2.496577501296997
    5. 'if' → logprob: -2.621577501296997
    6. '  ' → logprob: -5.121577262878418
    7. '    ' → logprob: -5.246577262878418
    8. 'i' → logprob: -6.496577262878418
    9. ' s' → logprob: -6.996577262878418
    10. ' a' → logprob: -7.246577262878418

Token 243: 'érateur' (ID: 108528)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4189023971557617
    2. 'er' → logprob: -2.1689023971557617
    3. ' if' → logprob: -2.7939023971557617
    4. 'r' → logprob: -3.0439023971557617
    5. 'ar' → logprob: -3.4189023971557617
    6. 'e' → logprob: -3.9189023971557617
    7. 'rès' → logprob: -4.918902397155762
    8. 'ur' → logprob: -5.668902397155762
    9. 'os' → logprob: -5.793902397155762
    10. 's' → logprob: -5.793902397155762

Token 244: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05822068452835083
    2. '!=' → logprob: -2.933220624923706
    3. ' ' → logprob: -6.183220863342285
    4. ' if' → logprob: -7.683220863342285
    5. 'if' → logprob: -8.933220863342285
    6. '[' → logprob: -8.933220863342285
    7. '`' → logprob: -9.808220863342285
    8. '   ' → logprob: -10.058220863342285
    9. ' `' → logprob: -10.183220863342285
    10. '  ' → logprob: -10.183220863342285

Token 245: ' signifie' (ID: 81149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' "' (ID: 392)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.9793027639389038
    2. 'diff' → logprob: -1.2293027639389038
    3. ' "' → logprob: -1.3543027639389038
    4. '"' → logprob: -3.7293028831481934
    5. 'une' → logprob: -4.604302883148193
    6. ' une' → logprob: -4.854302883148193
    7. ' que' → logprob: -5.229302883148193
    8. ' différente' → logprob: -5.479302883148193
    9. 'different' → logprob: -5.479302883148193
    10. ' different' → logprob: -5.729302883148193

Token 247: 'diff' (ID: 31460)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.24551509320735931
    2. 'diff' → logprob: -1.6205151081085205
    3. 'different' → logprob: -4.495514869689941
    4. ' different' → logprob: -5.745514869689941
    5. '!=' → logprob: -6.120514869689941
    6. 'd' → logprob: -7.245514869689941
    7. ' !=' → logprob: -7.245514869689941
    8. ' différente' → logprob: -7.870514869689941
    9. ' est' → logprob: -7.995514869689941
    10. ' diff' → logprob: -8.370514869689941

Token 248: 'érent' (ID: 193873)
  Prédit: 'érent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érent' → logprob: -0.02877015434205532
    2. 'é' → logprob: -4.2787699699401855
    3. 'érents' → logprob: -5.1537699699401855
    4. 'ér' → logprob: -5.6537699699401855
    5. 'èrent' → logprob: -5.6537699699401855
    6. 'érant' → logprob: -6.7787699699401855
    7. 'er' → logprob: -8.278770446777344
    8. 'ére' → logprob: -9.528770446777344
    9. 'éré' → logprob: -9.778770446777344
    10. 'érer' → logprob: -9.903770446777344

Token 249: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01399766281247139
    2. 'de' → logprob: -5.138997554779053
    3. ' des' → logprob: -5.263997554779053
    4. ' ' → logprob: -7.388997554779053
    5. ')' → logprob: -7.513997554779053
    6. ' from' → logprob: -7.638997554779053
    7. '")' → logprob: -8.013998031616211
    8. '"' → logprob: -8.263998031616211
    9. ' du' → logprob: -8.638998031616211
    10. 'from' → logprob: -9.138998031616211

Token 250: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6154151558876038
    2. '"' → logprob: -0.8654151558876038
    3. '":' → logprob: -3.740415096282959
    4. ' ":' → logprob: -5.490415096282959
    5. ' ")' → logprob: -5.615415096282959
    6. ')' → logprob: -5.865415096282959
    7. '")' → logprob: -7.115415096282959
    8. '".' → logprob: -7.240415096282959
    9. '">' → logprob: -7.365415096282959
    10. ' ".' → logprob: -7.740415096282959

Token 251: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6034249067306519
    2. '   ' → logprob: -0.8534249067306519
    3. ' :' → logprob: -4.228425025939941
    4. ' if' → logprob: -4.728425025939941
    5. 'if' → logprob: -6.603425025939941
    6. ':
' → logprob: -7.103425025939941
    7. ',' → logprob: -7.978425025939941
    8. ' :
' → logprob: -7.978425025939941
    9. ' ' → logprob: -8.353425025939941
    10. '):' → logprob: -8.728425025939941

Token 252: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.061112865805625916
    2. 'if' → logprob: -3.311112880706787
    3. '   ' → logprob: -3.811112880706787
    4. ' ' → logprob: -7.936112880706787
    5. ' s' → logprob: -9.436112403869629
    6. '    ' → logprob: -9.811112403869629
    7. 's' → logprob: -9.811112403869629
    8. ' i' → logprob: -10.436112403869629
    9. '    
' → logprob: -10.936112403869629
    10. '	if' → logprob: -11.061112403869629

Token 253: ' condition' (ID: 7060)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3052942752838135
    2. 'if' → logprob: -2.5552942752838135
    3. ' if' → logprob: -2.6802942752838135
    4. 's' → logprob: -3.6802942752838135
    5. ' ' → logprob: -3.6802942752838135
    6. ':' → logprob: -4.305294036865234
    7. ' caract' → logprob: -4.680294036865234
    8. 'car' → logprob: -5.055294036865234
    9. 'chaine' → logprob: -5.055294036865234
    10. 'i' → logprob: -5.555294036865234

Token 254: ' est' (ID: 893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02914384938776493
    2. 'if' → logprob: -3.779143810272217
    3. ' i' → logprob: -5.779143810272217
    4. ' s' → logprob: -6.404143810272217
    5. '   ' → logprob: -7.654143810272217
    6. 's' → logprob: -8.154144287109375
    7. 'i' → logprob: -9.404144287109375
    8. ':' → logprob: -9.529144287109375
    9. ' ' → logprob: -9.654144287109375
    10. ')' → logprob: -10.404144287109375

Token 255: ' donc' (ID: 14206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6535937786102295
    2. ' s' → logprob: -0.7785937786102295
    3. ' True' → logprob: -4.528594017028809
    4. ' (' → logprob: -5.528594017028809
    5. 'True' → logprob: -6.153594017028809
    6. ' ' → logprob: -6.653594017028809
    7. '(s' → logprob: -7.903594017028809
    8. '(' → logprob: -7.903594017028809
    9. ' i' → logprob: -8.028594017028809
    10. '	s' → logprob: -8.153594017028809

Token 256: ' vraie' (ID: 105841)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4934164881706238
    2. ' s' → logprob: -1.1184165477752686
    3. ' True' → logprob: -3.1184165477752686
    4. 'True' → logprob: -4.9934163093566895
    5. ' ' → logprob: -5.7434163093566895
    6. ' if' → logprob: -6.2434163093566895
    7. ' i' → logprob: -6.2434163093566895
    8. ' (' → logprob: -6.9934163093566895
    9. ' not' → logprob: -7.3684163093566895
    10. 'if' → logprob: -7.4934163093566895

Token 257: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09856806695461273
    2. ':' → logprob: -2.8485679626464844
    3. ' if' → logprob: -3.9735679626464844
    4. ' :' → logprob: -4.723567962646484
    5. '    ' → logprob: -5.473567962646484
    6. ' ' → logprob: -6.723567962646484
    7. '       ' → logprob: -7.098567962646484
    8. ',' → logprob: -7.348567962646484
    9. '  ' → logprob: -8.098567962646484
    10. 'if' → logprob: -8.473567962646484

Token 258: ' les' (ID: 1341)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023258639499545097
    2. 's' → logprob: -3.773258686065674
    3. ' ' → logprob: -11.523258209228516
    4. ' ' → logprob: -12.773258209228516
    5. '	s' → logprob: -15.273258209228516
    6. '(s' → logprob: -15.898258209228516
    7. '_s' → logprob: -16.648258209228516
    8. ' ' → logprob: -17.148258209228516
    9. '  ' → logprob: -18.273258209228516
    10. ' a' → logprob: -18.398258209228516

Token 259: ' deux' (ID: 10301)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014901340007782
    2. ' s' → logprob: -1.7014901638031006
    3. ' caractères' → logprob: -10.07649040222168
    4. 'car' → logprob: -10.95149040222168
    5. ' ' → logprob: -11.95149040222168
    6. ' car' → logprob: -12.82649040222168
    7. ' caractère' → logprob: -12.95149040222168
    8. ' caract' → logprob: -13.07649040222168
    9. ' caracteres' → logprob: -13.70149040222168
    10. ' ' → logprob: -14.45149040222168

Token 260: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.35982030630111694
    2. ' s' → logprob: -1.7348203659057617
    3. ' caracteres' → logprob: -3.3598203659057617
    4. 's' → logprob: -3.6098203659057617
    5. ' !=' → logprob: -4.109820365905762
    6. 'car' → logprob: -4.234820365905762
    7. ' car' → logprob: -4.359820365905762
    8. ' ' → logprob: -4.609820365905762
    9. ' caract' → logprob: -4.984820365905762
    10. ' characters' → logprob: -6.359820365905762

Token 261: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.575430691242218
    2. ' sont' → logprob: -1.2004306316375732
    3. ' ' → logprob: -2.2004306316375732
    4. ' s' → logprob: -4.575430870056152
    5. ')' → logprob: -5.200430870056152
    6. '<|end|>' → logprob: -6.075430870056152
    7. ' are' → logprob: -6.200430870056152
    8. '[' → logprob: -7.075430870056152
    9. ' )' → logprob: -7.325430870056152
    10. ' !=' → logprob: -7.575430870056152

Token 262: ' différents' (ID: 36009)
  Prédit: ' différents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différents' → logprob: -0.5595136880874634
    2. 'diff' → logprob: -1.0595136880874634
    3. ' different' → logprob: -2.934513568878174
    4. 'different' → logprob: -4.184513568878174
    5. ' différent' → logprob: -4.809513568878174
    6. 'd' → logprob: -5.934513568878174
    7. ' différentes' → logprob: -6.684513568878174
    8. ' diff' → logprob: -7.184513568878174
    9. ' distinct' → logprob: -8.809514045715332
    10. ' ' → logprob: -9.184514045715332

Token 263: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3219188153743744
    2. ':' → logprob: -1.3219188451766968
    3. ' :' → logprob: -5.196918964385986
    4. '.' → logprob: -6.946918964385986
    5. ':
' → logprob: -7.571918964385986
    6. ',' → logprob: -7.696918964385986
    7. '       ' → logprob: -7.946918964385986
    8. ' if' → logprob: -8.196918487548828
    9. '):' → logprob: -9.071918487548828
    10. ' :
' → logprob: -9.071918487548828

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.227250610711053e-05
    2. '       ' → logprob: -11.000041961669922
    3. ' if' → logprob: -11.625041961669922
    4. '   ' → logprob: -11.625041961669922
    5. 'if' → logprob: -12.000041961669922
    6. '    
' → logprob: -14.375041961669922
    7. '```' → logprob: -14.500041961669922
    8. ':' → logprob: -16.125041961669922
    9. '	if' → logprob: -16.750041961669922
    10. '   ' → logprob: -17.000041961669922

Token 265: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01335962675511837
    2. 'if' (adapté à ' if') → logprob: -4.638359546661377
    3. ' if' → logprob: -5.638359546661377
    4. '   ' → logprob: -11.013360023498535
    5. '       ' → logprob: -11.263360023498535
    6. '    
' → logprob: -12.513360023498535
    7. '	if' → logprob: -13.013360023498535
    8. ' ' → logprob: -13.888360023498535
    9. '    ' → logprob: -14.138360023498535
    10. '  ' → logprob: -14.513360023498535

Token 266: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02324652671813965
    2. 's' → logprob: -3.7732465267181396
    3. '	s' → logprob: -14.773246765136719
    4. ' ' → logprob: -15.023246765136719
    5. ' ' → logprob: -15.398246765136719
    6. '(s' → logprob: -15.648246765136719
    7. '   ' → logprob: -18.14824676513672
    8. '_s' → logprob: -18.39824676513672
    9. '    ' → logprob: -19.64824676513672
    10. '  ' → logprob: -19.89824676513672

Token 267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.236549335066229e-05
    2. '[' → logprob: -10.750021934509277
    3. '[I' → logprob: -14.250021934509277
    4. ' [' → logprob: -15.875021934509277
    5. '[s' → logprob: -16.375022888183594
    6. '[int' → logprob: -17.000022888183594
    7. '[
' → logprob: -17.125022888183594
    8. 'i' → logprob: -18.875022888183594
    9. '[a' → logprob: -19.000022888183594
    10. '!=' → logprob: -19.125022888183594

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03186028450727463
    2. ']!=' → logprob: -3.5318603515625
    3. ' ]' → logprob: -6.6568603515625
    4. '[' → logprob: -7.7818603515625
    5. '!=' → logprob: -8.2818603515625
    6. '']' → logprob: -9.9068603515625
    7. ' !=' → logprob: -10.0318603515625
    8. '[i' → logprob: -10.1568603515625
    9. '"]' → logprob: -12.2818603515625
    10. ']!='' → logprob: -12.2818603515625

Token 269: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2254568636417389
    2. '!=' → logprob: -1.6004568338394165
    3. ' ' → logprob: -11.600457191467285
    4. ']!=' → logprob: -11.850457191467285
    5. ')!=' → logprob: -11.975457191467285
    6. '[' → logprob: -12.100457191467285
    7. ''' → logprob: -12.725457191467285
    8. '!='' → logprob: -12.850457191467285
    9. '()!=' → logprob: -12.975457191467285
    10. '=' → logprob: -13.475457191467285

Token 270: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11283103376626968
    2. ' s' → logprob: -2.2378311157226562
    3. ' ' → logprob: -11.987831115722656
    4. '	s' → logprob: -13.737831115722656
    5. ' ' → logprob: -14.487831115722656
    6. '   ' → logprob: -15.112831115722656
    7. ''s' → logprob: -15.362831115722656
    8. '  ' → logprob: -15.987831115722656
    9. '    ' → logprob: -15.987831115722656
    10. '(s' → logprob: -16.237831115722656

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2961512513575144e-05
    2. 'i' → logprob: -11.125022888183594
    3. '[' → logprob: -12.250022888183594
    4. 's' → logprob: -13.625022888183594
    5. ']' → logprob: -14.000022888183594
    6. ' [' → logprob: -14.375022888183594
    7. '[
' → logprob: -15.125022888183594
    8. '-' → logprob: -15.750022888183594
    9. '][' → logprob: -16.375022888183594
    10. '[s' → logprob: -16.875022888183594

Token 272: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031817557755857706
    2. ' -' → logprob: -5.7531819343566895
    3. ']' → logprob: -13.503181457519531
    4. '1' → logprob: -14.128181457519531
    5. '[' → logprob: -14.128181457519531
    6. '[i' → logprob: -14.378181457519531
    7. ' ' → logprob: -15.003181457519531
    8. '   ' → logprob: -16.25318145751953
    9. '[-' → logprob: -16.37818145751953
    10. 'i' → logprob: -16.37818145751953

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.5001802444458
    4. ']' → logprob: -14.8751802444458
    5. '```' → logprob: -16.875181198120117
    6. '  ' → logprob: -17.375181198120117
    7. ' ' → logprob: -18.125181198120117
    8. '    ' → logprob: -18.437681198120117
    9. ')' → logprob: -18.687681198120117
    10. '`' → logprob: -19.000181198120117

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.5000057220459
    4. '```' → logprob: -17.5625057220459
    5. '
' → logprob: -18.3750057220459
    6. ')' → logprob: -18.6250057220459
    7. ']' → logprob: -19.1250057220459
    8. '    ' → logprob: -19.1250057220459
    9. '  ' → logprob: -19.2500057220459
    10. '১' → logprob: -19.3125057220459

Token 275: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0011712945997714996
    2. ']:
' → logprob: -7.376171112060547
    3. ':' → logprob: -8.126171112060547
    4. ']' → logprob: -8.376171112060547
    5. '):' → logprob: -11.501171112060547
    6. ']:
' → logprob: -12.626171112060547
    7. '"]:' → logprob: -13.626171112060547
    8. '']:' → logprob: -14.126171112060547
    9. '}:' → logprob: -14.251171112060547
    10. '   ' → logprob: -14.626171112060547

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010424555512145162
    2. 'ans' → logprob: -7.751042366027832
    3. '   ' → logprob: -8.376042366027832
    4. ' ans' → logprob: -8.376042366027832
    5. '
' → logprob: -9.501042366027832
    6. '        
' → logprob: -10.501042366027832
    7. '	ans' → logprob: -11.876042366027832
    8. '    
' → logprob: -12.001042366027832
    9. '<|end|>' → logprob: -12.001042366027832
    10. '           ' → logprob: -12.626042366027832

Token 277: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2909795045852661
    2. '       ' → logprob: -1.7909795045852661
    3. ' ans' → logprob: -2.7909793853759766
    4. '   ' → logprob: -3.7909793853759766
    5. '
' → logprob: -6.665979385375977
    6. '           ' → logprob: -8.040979385375977
    7. '	ans' → logprob: -9.415979385375977
    8. '        
' → logprob: -11.290979385375977
    9. '(ans' → logprob: -11.665979385375977
    10. '    
' → logprob: -11.790979385375977

Token 278: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06576376408338547
    2. ' ans' → logprob: -3.0657637119293213
    3. '       ' → logprob: -4.5657639503479
    4. '   ' → logprob: -5.0657639503479
    5. '           ' → logprob: -8.565763473510742
    6. '	ans' → logprob: -9.190763473510742
    7. '```' → logprob: -12.065763473510742
    8. '(ans' → logprob: -12.190763473510742
    9. ' ' → logprob: -12.440763473510742
    10. '        
' → logprob: -13.065763473510742

Token 279: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1132323145866394
    2. 'ans' → logprob: -2.238232374191284
    3. '	ans' → logprob: -8.488232612609863
    4. '   ' → logprob: -9.238232612609863
    5. '(ans' → logprob: -9.613232612609863
    6. '_ans' → logprob: -11.238232612609863
    7. ' ' → logprob: -11.863232612609863
    8. ' ' → logprob: -12.113232612609863
    9. 'Ans' → logprob: -12.113232612609863
    10. '    ' → logprob: -12.238232612609863

Token 280: ' condition' (ID: 7060)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5760581493377686
    2. ' ans' → logprob: -0.8260581493377686
    3. '	ans' → logprob: -9.826058387756348
    4. '   ' → logprob: -10.576058387756348
    5. ' ' → logprob: -11.326058387756348
    6. ' ' → logprob: -11.826058387756348
    7. '_ans' → logprob: -12.076058387756348
    8. '       ' → logprob: -12.451058387756348
    9. '(ans' → logprob: -12.451058387756348
    10. 'answer' → logprob: -13.201058387756348

Token 281: ' précédente' (ID: 177319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6886595487594604
    2. ' ans' → logprob: -1.6886595487594604
    3. ':' → logprob: -1.8136595487594604
    4. 'ans' → logprob: -2.06365966796875
    5. '       ' → logprob: -4.18865966796875
    6. '    ' → logprob: -6.56365966796875
    7. '           ' → logprob: -6.56365966796875
    8. '  ' → logprob: -6.56365966796875
    9. '	ans' → logprob: -6.56365966796875
    10. ' ' → logprob: -7.06365966796875

Token 282: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31371834874153137
    2. '       ' → logprob: -2.563718318939209
    3. '   ' → logprob: -2.688718318939209
    4. ':
' → logprob: -3.188718318939209
    5. 'ans' → logprob: -3.313718318939209
    6. ' ans' → logprob: -3.438718318939209
    7. '           ' → logprob: -4.438718318939209
    8. '==' → logprob: -7.688718318939209
    9. '	ans' → logprob: -7.813718318939209
    10. '  ' → logprob: -8.313718795776367

Token 283: ' vér' (ID: 42524)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1956891566514969
    2. 'v' → logprob: -1.9456892013549805
    3. ' True' → logprob: -3.4456892013549805
    4. 'true' → logprob: -6.1956892013549805
    5. ' vraie' → logprob: -7.8206892013549805
    6. 'V' → logprob: -8.19568920135498
    7. '   ' → logprob: -9.94568920135498
    8. '```' → logprob: -10.32068920135498
    9. '_true' → logprob: -10.44568920135498
    10. 'vé' → logprob: -10.57068920135498

Token 284: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.09893839806318283
    2. 'ifie' → logprob: -2.473938465118408
    3. 'i' → logprob: -5.598938465118408
    4. 'ifié' → logprob: -5.723938465118408
    5. 'if' → logprob: -7.098938465118408
    6. 'ifi' → logprob: -7.598938465118408
    7. 'ée' → logprob: -7.973938465118408
    8. 'ie' → logprob: -8.59893798828125
    9. 'e' → logprob: -9.09893798828125
    10. 'ifiés' → logprob: -9.22393798828125

Token 285: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22208787500858307
    2. ',' → logprob: -2.097087860107422
    3. ':' → logprob: -3.097087860107422
    4. '           ' → logprob: -3.847087860107422
    5. '   ' → logprob: -5.347087860107422
    6. ':
' → logprob: -5.472087860107422
    7. ',
' → logprob: -8.347087860107422
    8. 'ans' → logprob: -8.972087860107422
    9. ' ans' → logprob: -8.972087860107422
    10. ' :' → logprob: -9.097087860107422

Token 286: 'les' (ID: 1032)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18621976673603058
    2. 'ans' → logprob: -2.1862196922302246
    3. '   ' → logprob: -3.5612196922302246
    4. '       ' → logprob: -4.061219692230225
    5. ' ans' → logprob: -4.686219692230225
    6. ')' → logprob: -6.436219692230225
    7. '```' → logprob: -8.436220169067383
    8. '               ' → logprob: -8.936220169067383
    9. ' ' → logprob: -9.061220169067383
    10. '
' → logprob: -9.186220169067383

Token 287: ' deux' (ID: 10301)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0302064418792725
    2. ' caractères' → logprob: -1.4052064418792725
    3. ' ' → logprob: -1.6552064418792725
    4. ' ' → logprob: -3.0302064418792725
    5. ' espaces' → logprob: -3.5302064418792725
    6. '   ' → logprob: -3.5302064418792725
    7. 'ans' → logprob: -3.6552064418792725
    8. ' caracteres' → logprob: -3.6552064418792725
    9. ')' → logprob: -4.780206680297852
    10. '       ' → logprob: -4.780206680297852

Token 288: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.04432598873972893
    2. 'car' → logprob: -3.294326066970825
    3. ' caracteres' → logprob: -5.919325828552246
    4. ' car' → logprob: -6.919325828552246
    5. ' ' → logprob: -6.919325828552246
    6. ' caract' → logprob: -7.419325828552246
    7. ' ans' → logprob: -8.544325828552246
    8. ' espaces' → logprob: -8.794325828552246
    9. ' )' → logprob: -9.294325828552246
    10. ' ' → logprob: -9.419325828552246

Token 289: ' cons' (ID: 1473)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.540367841720581
    2. 's' → logprob: -1.665367841720581
    3. 'diff' → logprob: -1.790367841720581
    4. ' différent' → logprob: -3.665367841720581
    5. 'different' → logprob: -4.16536808013916
    6. ' différents' → logprob: -5.16536808013916
    7. ' different' → logprob: -5.29036808013916
    8. ' are' → logprob: -5.91536808013916
    9. ')' → logprob: -6.79036808013916
    10. ' diff' → logprob: -6.91536808013916

Token 290: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0014592852676287293
    2. 'é' → logprob: -7.626459121704102
    3. 'ont' → logprob: -8.001459121704102
    4. 'éc' → logprob: -8.126459121704102
    5. '   ' → logprob: -9.626459121704102
    6. 'ecut' → logprob: -10.126459121704102
    7. 'év' → logprob: -10.251459121704102
    8. 't' → logprob: -10.376459121704102
    9. 'équ' → logprob: -10.376459121704102
    10. 's' → logprob: -10.876459121704102

Token 291: 'ifs' (ID: 14119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6674036979675293
    2. '   ' → logprob: -1.5424036979675293
    3. 'ents' → logprob: -1.6674036979675293
    4. '       ' → logprob: -3.6674036979675293
    5. 'ifs' → logprob: -4.292403697967529
    6. 'if' → logprob: -4.542403697967529
    7. ' ' → logprob: -4.667403697967529
    8. 'nts' → logprob: -5.667403697967529
    9. 'ent' → logprob: -5.917403697967529
    10. ')' → logprob: -6.042403697967529

Token 292: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5391942262649536
    2. ' sont' → logprob: -0.9141942262649536
    3. 'diff' → logprob: -4.539194107055664
    4. 'd' → logprob: -6.789194107055664
    5. ' différent' → logprob: -6.789194107055664
    6. ')' → logprob: -7.039194107055664
    7. ' are' → logprob: -7.539194107055664
    8. 'different' → logprob: -7.664194107055664
    9. '#' → logprob: -8.414194107055664
    10. ' différents' → logprob: -8.664194107055664

Token 293: ' différents' (ID: 36009)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.11705707758665085
    2. ' différents' → logprob: -2.3670570850372314
    3. 'd' → logprob: -4.617056846618652
    4. 'different' → logprob: -5.992056846618652
    5. ' différent' → logprob: -6.117056846618652
    6. ' different' → logprob: -6.742056846618652
    7. ' diff' → logprob: -7.492056846618652
    8. 'dif' → logprob: -8.992056846618652
    9. ' d' → logprob: -10.242056846618652
    10. ' différentes' → logprob: -10.242056846618652

Token 294: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13221581280231476
    2. '):' → logprob: -2.132215738296509
    3. '       ' → logprob: -5.882215976715088
    4. '),' → logprob: -6.882215976715088
    5. '   ' → logprob: -7.132215976715088
    6. ':' → logprob: -8.13221549987793
    7. '           ' → logprob: -8.75721549987793
    8. ':
' → logprob: -9.63221549987793
    9. '):
' → logprob: -10.13221549987793
    10. ' ):
' → logprob: -10.13221549987793

Token 295: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21337714791297913
    2. ' ans' → logprob: -1.9633771181106567
    3. 'ans' → logprob: -3.0883772373199463
    4. '           ' → logprob: -5.213376998901367
    5. '   ' → logprob: -7.713376998901367
    6. '	ans' → logprob: -8.713376998901367
    7. '```' → logprob: -10.338376998901367
    8. '(ans' → logprob: -10.713376998901367
    9. '        
' → logprob: -10.963376998901367
    10. ' ' → logprob: -11.088376998901367

Token 296: ' incr' (ID: 52395)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.43177327513694763
    2. 'ans' → logprob: -1.05677330493927
    3. '   ' → logprob: -6.0567731857299805
    4. '       ' → logprob: -7.6817731857299805
    5. '	ans' → logprob: -9.05677318572998
    6. ' +=' → logprob: -9.55677318572998
    7. '    ' → logprob: -11.43177318572998
    8. '(ans' → logprob: -11.43177318572998
    9. '+=' → logprob: -11.43177318572998
    10. ' ' → logprob: -11.68177318572998

Token 297: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6094877123832703
    2. 'ément' → logprob: -0.8594877123832703
    3. 'mente' → logprob: -4.734487533569336
    4. '   ' → logprob: -5.109487533569336
    5. '       ' → logprob: -5.359487533569336
    6. 'ement' → logprob: -5.609487533569336
    7. 'ment' → logprob: -5.984487533569336
    8. 'emente' → logprob: -6.109487533569336
    9. 'éments' → logprob: -6.234487533569336
    10. 'è' → logprob: -6.734487533569336

Token 298: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.10537269711494446
    2. 'ment' → logprob: -2.355372667312622
    3. 'mentation' → logprob: -6.105372905731201
    4. 'm' → logprob: -6.730372905731201
    5. 'mented' → logprob: -7.355372905731201
    6. 'ments' → logprob: -8.105372428894043
    7. 'mental' → logprob: -8.355372428894043
    8. 'me' → logprob: -8.855372428894043
    9. 'mentar' → logprob: -9.230372428894043
    10. 'men' → logprob: -9.730372428894043

Token 299: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.10032689571380615
    2. 'ans' → logprob: -2.3503270149230957
    3. '(ans' → logprob: -9.225326538085938
    4. '	ans' → logprob: -10.850326538085938
    5. '_ans' → logprob: -13.850326538085938
    6. ' ' → logprob: -15.225326538085938
    7. ' ' → logprob: -15.350326538085938
    8. '1' → logprob: -15.475326538085938
    9. 'space' → logprob: -15.725326538085938
    10. '   ' → logprob: -16.100326538085938

Token 300: ' variable' (ID: 11076)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3484722077846527
    2. ' ans' → logprob: -1.223472237586975
    3. '	ans' → logprob: -11.348472595214844
    4. '(ans' → logprob: -11.973472595214844
    5. 'answer' → logprob: -13.223472595214844
    6. '_ans' → logprob: -13.223472595214844
    7. ' ' → logprob: -13.848472595214844
    8. '1' → logprob: -14.348472595214844
    9. ' ' → logprob: -14.598472595214844
    10. 'Ans' → logprob: -14.660972595214844

Token 301: ' '' (ID: 461)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5760647654533386
    2. 'ans' → logprob: -0.8260647654533386
    3. '(ans' → logprob: -9.326065063476562
    4. '_ans' → logprob: -10.951065063476562
    5. '	ans' → logprob: -11.076065063476562
    6. ' ' → logprob: -14.326065063476562
    7. '`' → logprob: -14.701065063476562
    8. ' ' → logprob: -15.076065063476562
    9. 's' → logprob: -15.076065063476562
    10. '```' → logprob: -15.451065063476562

Token 302: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11283455044031143
    2. ' ans' → logprob: -2.2378344535827637
    3. '(ans' → logprob: -12.112834930419922
    4. '	ans' → logprob: -12.612834930419922
    5. '_ans' → logprob: -13.612834930419922
    6. ' ' → logprob: -14.362834930419922
    7. 'answer' → logprob: -14.862834930419922
    8. 'a' → logprob: -15.612834930419922
    9. 'Ans' → logprob: -15.737834930419922
    10. ' ' → logprob: -15.987834930419922

Token 303: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13101382553577423
    2. '+=' → logprob: -2.131013870239258
    3. '+' → logprob: -6.631013870239258
    4. '   ' → logprob: -6.881013870239258
    5. 'ans' → logprob: -7.631013870239258
    6. ' ans' → logprob: -7.631013870239258
    7. ')' → logprob: -7.881013870239258
    8. ' +' → logprob: -9.006013870239258
    9. ']+=' → logprob: -9.381013870239258
    10. '       ' → logprob: -9.631013870239258

Token 304: ' de' (ID: 334)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5669001936912537
    2. '   ' → logprob: -1.0669002532958984
    3. 'ans' → logprob: -2.5669002532958984
    4. '       ' → logprob: -5.191900253295898
    5. ' +=' → logprob: -5.316900253295898
    6. '	ans' → logprob: -7.441900253295898
    7. '+=' → logprob: -8.066900253295898
    8. '(ans' → logprob: -8.191900253295898
    9. '    ' → logprob: -9.441900253295898
    10. ' ' → logprob: -10.441900253295898

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '+' → logprob: -17.126171112060547
    4. '   ' → logprob: -19.126171112060547
    5. ' ' → logprob: -19.251171112060547
    6. '```' → logprob: -19.376171112060547
    7. ' +' → logprob: -19.501171112060547
    8. '  ' → logprob: -21.751171112060547
    9. '.' → logprob: -22.376171112060547
    10. 's' → logprob: -22.501171112060547

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '+' → logprob: -15.875006675720215
    4. '   ' → logprob: -18.25000762939453
    5. 'ans' → logprob: -19.12500762939453
    6. '```' → logprob: -19.12500762939453
    7. ' +' → logprob: -19.50000762939453
    8. '.' → logprob: -22.00000762939453
    9. 's' → logprob: -22.25000762939453
    10. '  ' → logprob: -22.37500762939453

Token 307: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09295114129781723
    2. '       ' → logprob: -2.4679510593414307
    3. ' ans' → logprob: -5.59295129776001
    4. '	ans' → logprob: -9.467950820922852
    5. '    ' → logprob: -9.842950820922852
    6. '  ' → logprob: -10.592950820922852
    7. ' ' → logprob: -10.717950820922852
    8. 'ans' → logprob: -10.717950820922852
    9. '(ans' → logprob: -10.967950820922852
    10. ')' → logprob: -11.342950820922852

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03973861783742905
    2. '   ' → logprob: -3.289738655090332
    3. ' ans' → logprob: -6.414738655090332
    4. 'ans' → logprob: -9.914738655090332
    5. '	ans' → logprob: -12.539738655090332
    6. '           ' → logprob: -13.664738655090332
    7. '   ' → logprob: -14.164738655090332
    8. '      ' → logprob: -14.539738655090332
    9. '
' → logprob: -14.539738655090332
    10. ' ' → logprob: -14.789738655090332

Token 309: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2446480542421341
    2. ' ans' → logprob: -1.7446480989456177
    3. '       ' → logprob: -3.244647979736328
    4. '   ' → logprob: -5.744647979736328
    5. '	ans' → logprob: -9.244647979736328
    6. '(ans' → logprob: -10.369647979736328
    7. '_ans' → logprob: -13.994647979736328
    8. '           ' → logprob: -14.494647979736328
    9. ' ' → logprob: -14.494647979736328
    10. '    ' → logprob: -14.994647979736328

Token 310: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5737116932868958
    2. '       ' → logprob: -1.573711633682251
    3. ' ans' → logprob: -1.573711633682251
    4. '   ' → logprob: -3.823711633682251
    5. '	ans' → logprob: -8.948711395263672
    6. '(ans' → logprob: -10.698711395263672
    7. ' ' → logprob: -11.823711395263672
    8. '           ' → logprob: -12.323711395263672
    9. '_ans' → logprob: -13.198711395263672
    10. '  ' → logprob: -13.448711395263672

Token 311: ' signifie' (ID: 81149)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20151548087596893
    2. ' ans' → logprob: -2.2015154361724854
    3. '   ' → logprob: -3.3265154361724854
    4. '+=' → logprob: -3.7015154361724854
    5. 'ans' → logprob: -5.4515156745910645
    6. '       ' → logprob: -5.5765156745910645
    7. '	ans' → logprob: -6.8265156745910645
    8. ' ' → logprob: -6.8265156745910645
    9. '    ' → logprob: -8.451515197753906
    10. '  ' → logprob: -8.451515197753906

Token 312: ' que' (ID: 661)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0438736192882061
    2. ' que' → logprob: -3.7938735485076904
    3. 'ans' → logprob: -4.0438737869262695
    4. '   ' → logprob: -6.5438737869262695
    5. ' ' → logprob: -7.7938737869262695
    6. '       ' → logprob: -8.16887378692627
    7. '(ans' → logprob: -8.29387378692627
    8. ' that' → logprob: -9.16887378692627
    9. '	ans' → logprob: -9.29387378692627
    10. ' ' → logprob: -9.54387378692627

Token 313: ' l' (ID: 305)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.03427508473396301
    2. 'ans' → logprob: -3.4092750549316406
    3. '   ' → logprob: -7.909275054931641
    4. '	ans' → logprob: -9.03427505493164
    5. '       ' → logprob: -9.15927505493164
    6. ' ' → logprob: -11.03427505493164
    7. '(ans' → logprob: -11.15927505493164
    8. '_ans' → logprob: -13.28427505493164
    9. ' ' → logprob: -13.40927505493164
    10. '    ' → logprob: -14.03427505493164

Token 314: '’on' (ID: 25036)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24950045347213745
    2. ' ans' → logprob: -1.6245005130767822
    3. 'a' → logprob: -4.499500274658203
    4. '   ' → logprob: -4.874500274658203
    5. ' ' → logprob: -6.499500274658203
    6. 's' → logprob: -6.624500274658203
    7. '       ' → logprob: -7.374500274658203
    8. ' a' → logprob: -7.499500274658203
    9. '	ans' → logprob: -8.124500274658203
    10. 'n' → logprob: -8.999500274658203

Token 315: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22625188529491425
    2. ' ans' → logprob: -2.1012518405914307
    3. '       ' → logprob: -3.7262518405914307
    4. ' a' → logprob: -4.22625207901001
    5. '   ' → logprob: -4.60125207901001
    6. 'a' → logprob: -4.85125207901001
    7. ' compte' → logprob: -4.85125207901001
    8. ' ' → logprob: -5.72625207901001
    9. ' continue' → logprob: -6.10125207901001
    10. 'continue' → logprob: -6.22625207901001

Token 316: ' trouvé' (ID: 60081)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018432026728987694
    2. ' ans' → logprob: -4.143432140350342
    3. '   ' → logprob: -7.018432140350342
    4. ' ' → logprob: -7.143432140350342
    5. '	ans' → logprob: -9.143431663513184
    6. 'c' → logprob: -9.393431663513184
    7. 'comp' → logprob: -9.768431663513184
    8. '  ' → logprob: -10.018431663513184
    9. ' ' → logprob: -10.393431663513184
    10. 'com' → logprob: -10.518431663513184

Token 317: ' un' (ID: 537)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2661532163619995
    2. 'ans' → logprob: -1.5161532163619995
    3. ' ' → logprob: -5.016153335571289
    4. '(ans' → logprob: -6.141153335571289
    5. '   ' → logprob: -6.641153335571289
    6. ' une' → logprob: -6.891153335571289
    7. ' un' → logprob: -7.016153335571289
    8. '	ans' → logprob: -7.516153335571289
    9. '1' → logprob: -7.766153335571289
    10. 'une' → logprob: -7.766153335571289

Token 318: ' endroit' (ID: 79158)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7183072566986084
    2. ' caractère' → logprob: -0.8433072566986084
    3. 'diff' → logprob: -3.2183072566986084
    4. 'ans' → logprob: -4.7183074951171875
    5. ' changement' → logprob: -4.7183074951171875
    6. ' caract' → logprob: -4.8433074951171875
    7. ' car' → logprob: -5.9683074951171875
    8. ' caractères' → logprob: -6.2183074951171875
    9. 's' → logprob: -6.4683074951171875
    10. ' ans' → logprob: -6.5933074951171875

Token 319: ' où' (ID: 15113)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.2686679363250732
    2. ' ' → logprob: -1.5186679363250732
    3. ' où' → logprob: -1.5186679363250732
    4. '   ' → logprob: -2.2686679363250732
    5. ' ans' → logprob: -2.3936679363250732
    6. '       ' → logprob: -3.2686679363250732
    7. '    ' → logprob: -4.393668174743652
    8. 's' → logprob: -4.643668174743652
    9. 'où' → logprob: -5.518668174743652
    10. '=' → logprob: -5.768668174743652

Token 320: ' deux' (ID: 10301)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6127814054489136
    2. ' ans' → logprob: -1.4877814054489136
    3. ' la' → logprob: -2.362781524658203
    4. 'la' → logprob: -2.987781524658203
    5. 'les' → logprob: -3.612781524658203
    6. ' les' → logprob: -3.987781524658203
    7. ' deux' → logprob: -4.737781524658203
    8. ' ' → logprob: -5.112781524658203
    9. 'le' → logprob: -5.112781524658203
    10. ' the' → logprob: -5.362781524658203

Token 321: ' caractères' (ID: 183106)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06991486996412277
    2. ' caractères' → logprob: -3.4449148178100586
    3. 'ans' → logprob: -4.319914817810059
    4. ' ' → logprob: -5.069914817810059
    5. ' caracteres' → logprob: -5.194914817810059
    6. ' caract' → logprob: -5.694914817810059
    7. 's' → logprob: -6.194914817810059
    8. ' s' → logprob: -6.319914817810059
    9. ' caractère' → logprob: -6.944914817810059
    10. ' car' → logprob: -7.319914817810059

Token 322: ' cons' (ID: 1473)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.33716505765914917
    2. ' cons' → logprob: -2.337165117263794
    3. ' différents' → logprob: -2.462165117263794
    4. 's' → logprob: -2.712165117263794
    5. 'd' → logprob: -4.087164878845215
    6. 'different' → logprob: -5.337164878845215
    7. ' sont' → logprob: -5.837164878845215
    8. ' ' → logprob: -6.337164878845215
    9. ' diff' → logprob: -6.337164878845215
    10. '   ' → logprob: -6.337164878845215

Token 323: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.16518442332744598
    2. '+' → logprob: -2.665184497833252
    3. 'ans' → logprob: -3.415184497833252
    4. 'u' → logprob: -4.290184497833252
    5. ' ans' → logprob: -4.540184497833252
    6. '       ' → logprob: -5.290184497833252
    7. 't' → logprob: -5.665184497833252
    8. '=' → logprob: -6.040184497833252
    9. '	ans' → logprob: -6.040184497833252
    10. '   ' → logprob: -6.165184497833252

Token 324: 'ifs' (ID: 14119)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.4378644227981567
    2. '       ' → logprob: -1.5628644227981567
    3. ' ans' → logprob: -1.5628644227981567
    4. '   ' → logprob: -1.9378644227981567
    5. 'u' → logprob: -2.312864303588867
    6. 'uent' → logprob: -3.562864303588867
    7. 's' → logprob: -3.812864303588867
    8. '=' → logprob: -4.812864303588867
    9. 'ut' → logprob: -4.937864303588867
    10. 'ents' → logprob: -5.062864303588867

Token 325: ' ne' (ID: 453)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.7299476861953735
    2. 's' → logprob: -1.2299476861953735
    3. 'diff' → logprob: -2.604947566986084
    4. ' ans' → logprob: -2.729947566986084
    5. 'ans' → logprob: -3.854947566986084
    6. ' diff' → logprob: -4.104947566986084
    7. ' s' → logprob: -4.229947566986084
    8. ' différent' → logprob: -4.729947566986084
    9. ' différents' → logprob: -5.104947566986084
    10. ' different' → logprob: -5.229947566986084

Token 326: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20385366678237915
    2. ' sont' → logprob: -1.7038536071777344
    3. ' s' → logprob: -6.828853607177734
    4. 'ont' → logprob: -8.203853607177734
    5. ' ans' → logprob: -8.578853607177734
    6. ' ' → logprob: -8.578853607177734
    7. 'ans' → logprob: -9.078853607177734
    8. '   ' → logprob: -9.453853607177734
    9. 'diff' → logprob: -9.578853607177734
    10. 'u' → logprob: -10.078853607177734

Token 327: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6335253119468689
    2. ' pas' → logprob: -0.7585253119468689
    3. 'diff' → logprob: -7.758525371551514
    4. 's' → logprob: -8.258524894714355
    5. 'd' → logprob: -9.758524894714355
    6. 'p' → logprob: -10.008524894714355
    7. ' plus' → logprob: -10.383524894714355
    8. 'plus' → logprob: -11.008524894714355
    9. ' différent' → logprob: -11.008524894714355
    10. ' différents' → logprob: -11.133524894714355

Token 328: ' ident' (ID: 3951)
  Prédit: ' ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.5608804225921631
    2. ' ég' → logprob: -0.9358804225921631
    3. '=' → logprob: -4.060880661010742
    4. ' égal' → logprob: -5.060880661010742
    5. ' iguales' → logprob: -5.310880661010742
    6. 'ident' → logprob: -6.060880661010742
    7. ' equal' → logprob: -6.185880661010742
    8. ' iguais' → logprob: -6.935880661010742
    9. ' ' → logprob: -7.310880661010742
    10. 'égal' → logprob: -7.310880661010742

Token 329: 'iques' (ID: 11654)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8240429162979126
    2. 'iques' → logprob: -0.9490429162979126
    3. 's' → logprob: -2.199042797088623
    4. 'ique' → logprob: -3.699042797088623
    5. 'ifiés' → logprob: -5.199042797088623
    6. 'ical' → logprob: -5.449042797088623
    7. 't' → logprob: -5.449042797088623
    8. 'f' → logprob: -5.824042797088623
    9. ' ans' → logprob: -5.824042797088623
    10. 'ques' → logprob: -5.949042797088623

Token 330: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6753712892532349
    2. '       ' → logprob: -1.3003712892532349
    3. ' ans' → logprob: -1.9253712892532349
    4. 'ans' → logprob: -2.6753711700439453
    5. '	ans' → logprob: -6.300371170043945
    6. '(ans' → logprob: -6.925371170043945
    7. '           ' → logprob: -7.925371170043945
    8. ')' → logprob: -8.425371170043945
    9. '
' → logprob: -9.300371170043945
    10. '_ans' → logprob: -9.675371170043945

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006916888058185577
    2. '   ' → logprob: -5.1319169998168945
    3. ' ans' → logprob: -7.1319169998168945
    4. 'ans' → logprob: -8.756916999816895
    5. '	ans' → logprob: -11.006916999816895
    6. '
' → logprob: -11.881916999816895
    7. '           ' → logprob: -13.256916999816895
    8. '```' → logprob: -13.506916999816895
    9. '   ' → logprob: -13.756916999816895
    10. '(ans' → logprob: -14.256916999816895

Token 332: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.27974918484687805
    2. '       ' → logprob: -1.5297491550445557
    3. ' ans' → logprob: -3.6547491550445557
    4. '   ' → logprob: -6.654749393463135
    5. '	ans' → logprob: -8.279748916625977
    6. '(ans' → logprob: -11.279748916625977
    7. '           ' → logprob: -12.154748916625977
    8. ' ' → logprob: -12.654748916625977
    9. '
' → logprob: -13.404748916625977
    10. '```' → logprob: -14.029748916625977

Token 333: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869026005268097
    2. '+=' → logprob: -1.1369025707244873
    3. '=' → logprob: -10.636902809143066
    4. '+' → logprob: -12.136902809143066
    5. ' =' → logprob: -13.511902809143066
    6. ']+=' → logprob: -14.511902809143066
    7. '+='' → logprob: -16.13690185546875
    8. '+="' → logprob: -16.26190185546875
    9. ' ' → logprob: -17.01190185546875
    10. ' ' → logprob: -17.13690185546875

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -20.126502990722656
    4. '   ' → logprob: -20.376502990722656
    5. '  ' → logprob: -21.001502990722656
    6. '```' → logprob: -21.126502990722656
    7. '１' → logprob: -21.751502990722656
    8. '۱' → logprob: -22.376502990722656
    9. '2' → logprob: -23.001502990722656
    10. '0' → logprob: -23.126502990722656

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -20.875
    5. '１' → logprob: -22.0
    6. '۱' → logprob: -22.9375
    7. '2' → logprob: -23.0
    8. '  ' → logprob: -23.75
    9. '+' → logprob: -23.8125
    10. '१' → logprob: -23.8125

Token 336: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022594700567424297
    2. '
' → logprob: -8.625226020812988
    3. '<|end|>' → logprob: -10.375226020812988
    4. '#' → logprob: -12.000226020812988
    5. '```' → logprob: -12.250226020812988
    6. ' print' → logprob: -12.500226020812988
    7. '#print' → logprob: -15.500226020812988
    8. '

' → logprob: -15.875226020812988
    9. ')' → logprob: -15.875226020812988
    10. '
' → logprob: -17.375225067138672

Token 337: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.75
    3. '#' → logprob: -17.375
    4. '
' → logprob: -18.375
    5. '#print' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. 'prin' → logprob: -22.875
    8. '.print' → logprob: -23.0
    9. '(print' → logprob: -23.0
    10. 'pr' → logprob: -23.125

Token 338: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.88418151892256e-05
    2. ' print' → logprob: -9.750059127807617
    3. 'prin' → logprob: -15.375059127807617
    4. 'pr' → logprob: -15.625059127807617
    5. '#' → logprob: -15.875059127807617
    6. 'p' → logprob: -17.250059127807617
    7. '#print' → logprob: -18.250059127807617
    8. 'pri' → logprob: -18.750059127807617
    9. 'Print' → logprob: -18.875059127807617
    10. '```' → logprob: -19.500059127807617

Token 339: ' avoir' (ID: 16595)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7211558818817139
    2. ' avoir' → logprob: -0.9711558818817139
    3. 'print' → logprob: -2.846155881881714
    4. 'la' → logprob: -3.096155881881714
    5. 'l' → logprob: -4.596156120300293
    6. ' having' → logprob: -5.221156120300293
    7. ' l' → logprob: -5.221156120300293
    8. '#' → logprob: -5.596156120300293
    9. ' print' → logprob: -5.846156120300293
    10. ' le' → logprob: -6.471156120300293

Token 340: ' exam' (ID: 5846)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001853315974585712
    2. ' print' → logprob: -6.3768534660339355
    3. 'aff' → logprob: -9.001852989196777
    4. '#' → logprob: -10.876852989196777
    5. 'fait' → logprob: -12.751852989196777
    6. ' affich' → logprob: -13.501852989196777
    7. 'prin' → logprob: -13.501852989196777
    8. 'pr' → logprob: -14.126852989196777
    9. 'printed' → logprob: -14.751852989196777
    10. ' imprim' → logprob: -15.126852989196777

Token 341: 'iné' (ID: 59815)
  Prédit: 'iné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iné' → logprob: -0.0002925598528236151
    2. 'in' → logprob: -8.375292778015137
    3. 'iner' → logprob: -10.375292778015137
    4. '#' → logprob: -10.625292778015137
    5. 'ination' → logprob: -13.875292778015137
    6. 'ined' → logprob: -14.000292778015137
    7. 'inement' → logprob: -14.000292778015137
    8. 'ine' → logprob: -14.500292778015137
    9. 'ining' → logprob: -14.875292778015137
    10. 'inado' → logprob: -15.000292778015137

Token 342: ' toute' (ID: 16825)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6858664155006409
    2. 'la' → logprob: -0.8108664155006409
    3. 'l' → logprob: -4.310866355895996
    4. ' toute' → logprob: -4.310866355895996
    5. 'len' → logprob: -5.435866355895996
    6. ' l' → logprob: -5.435866355895996
    7. ' avoir' → logprob: -5.685866355895996
    8. '#' → logprob: -5.810866355895996
    9. 'le' → logprob: -6.185866355895996
    10. 'tout' → logprob: -6.310866355895996

Token 343: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05110378563404083
    2. 'la' → logprob: -3.0511038303375244
    3. 's' → logprob: -6.176103591918945
    4. '#' → logprob: -8.426103591918945
    5. ' ' → logprob: -9.051103591918945
    6. 'l' → logprob: -10.301103591918945
    7. ' l' → logprob: -10.801103591918945
    8. ' s' → logprob: -11.551103591918945
    9. ' ' → logprob: -11.551103591918945
    10. '_la' → logprob: -12.551103591918945

Token 344: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.744856059551239
    2. 'cha' → logprob: -0.994856059551239
    3. 'chaine' → logprob: -1.8698561191558838
    4. ' chaine' → logprob: -7.494855880737305
    5. 's' → logprob: -7.744855880737305
    6. 'string' → logprob: -8.994855880737305
    7. '#' → logprob: -9.244855880737305
    8. 'chain' → logprob: -11.244855880737305
    9. 'ligne' → logprob: -12.119855880737305
    10. ' cha' → logprob: -12.119855880737305

Token 345: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25770407915115356
    2. ',' → logprob: -1.5077040195465088
    3. ' print' → logprob: -5.382704257965088
    4. '#' → logprob: -6.882704257965088
    5. ',
' → logprob: -9.25770378112793
    6. ' ,' → logprob: -11.00770378112793
    7. ',

' → logprob: -11.50770378112793
    8. '#print' → logprob: -11.88270378112793
    9. 's' → logprob: -13.13270378112793
    10. '.print' → logprob: -13.50770378112793

Token 346: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.60414821645827e-06
    2. '#' → logprob: -13.000004768371582
    3. ' print' → logprob: -13.000004768371582
    4. '#print' → logprob: -17.750003814697266
    5. 'prin' → logprob: -21.500003814697266
    6. '
' → logprob: -21.625003814697266
    7. 'pr' → logprob: -21.875003814697266
    8. '```' → logprob: -22.500003814697266
    9. 'prit' → logprob: -23.625003814697266
    10. '.print' → logprob: -24.250003814697266

Token 347: ' vér' (ID: 42524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001244993763975799
    2. ' print' → logprob: -6.751245021820068
    3. 'aff' → logprob: -10.25124454498291
    4. 'pr' → logprob: -10.87624454498291
    5. '#' → logprob: -11.37624454498291
    6. ' affiche' → logprob: -12.25124454498291
    7. 'p' → logprob: -13.25124454498291
    8. ' imprime' → logprob: -13.62624454498291
    9. '#print' → logprob: -14.87624454498291
    10. 'prit' → logprob: -15.25124454498291

Token 348: 'ifie' (ID: 46409)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.421021431684494
    2. 'ifie' → logprob: -1.1710214614868164
    3. 'if' → logprob: -4.046021461486816
    4. 'ifié' → logprob: -5.171021461486816
    5. '#print' → logprob: -5.671021461486816
    6. 'al' → logprob: -6.546021461486816
    7. '#' → logprob: -6.671021461486816
    8. 'f' → logprob: -6.921021461486816
    9. 'aff' → logprob: -7.671021461486816
    10. 'fait' → logprob: -7.796021461486816

Token 349: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7562143206596375
    2. ' if' → logprob: -0.8812143206596375
    3. ' si' → logprob: -2.6312143802642822
    4. 'si' → logprob: -3.3812143802642822
    5. 'print' → logprob: -5.006214141845703
    6. ' ' → logprob: -7.256214141845703
    7. '#' → logprob: -7.256214141845703
    8. ' la' → logprob: -7.506214141845703
    9. 'le' → logprob: -8.131214141845703
    10. ' le' → logprob: -8.256214141845703

Token 350: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3961147665977478
    2. 'val' → logprob: -1.3961148262023926
    3. 'if' → logprob: -3.2711148262023926
    4. '#' → logprob: -3.7711148262023926
    5. 'par' → logprob: -4.646114826202393
    6. 'result' → logprob: -6.271114826202393
    7. ' valeur' → logprob: -6.646114826202393
    8. 'condition' → logprob: -7.146114826202393
    9. 'der' → logprob: -7.396114826202393
    10. 'dern' → logprob: -7.521114826202393

Token 351: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09249816834926605
    2. 'de' → logprob: -2.8424980640411377
    3. 'if' → logprob: -4.592498302459717
    4. 'd' → logprob: -4.842498302459717
    5. '#' → logprob: -5.092498302459717
    6. '(' → logprob: -5.592498302459717
    7. '(ans' → logprob: -7.092498302459717
    8. '(print' → logprob: -7.467498302459717
    9. 'ans' → logprob: -8.592497825622559
    10. ' de' → logprob: -8.842497825622559

Token 352: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003862245939671993
    2. ' ans' → logprob: -7.8753862380981445
    3. '(ans' → logprob: -12.750386238098145
    4. '	ans' → logprob: -14.000386238098145
    5. ''' → logprob: -14.125386238098145
    6. '`' → logprob: -14.500386238098145
    7. 'la' → logprob: -15.375386238098145
    8. ''s' → logprob: -15.500386238098145
    9. 'a' → logprob: -15.625386238098145
    10. 'l' → logprob: -16.125385284423828

Token 353: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00013834332639817148
    2. ' ans' → logprob: -9.000138282775879
    3. 's' → logprob: -11.875138282775879
    4. '(ans' → logprob: -12.125138282775879
    5. 'a' → logprob: -13.125138282775879
    6. '	ans' → logprob: -15.250138282775879
    7. 'an' → logprob: -17.125139236450195
    8. ' ' → logprob: -17.250139236450195
    9. '`' → logprob: -17.375139236450195
    10. '_ans' → logprob: -17.750139236450195

Token 354: ''.
' (ID: 49980)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4160391688346863
    2. 'print' → logprob: -2.041039228439331
    3. 'if' → logprob: -2.166039228439331
    4. ' %' → logprob: -3.166039228439331
    5. ' if' → logprob: -3.666039228439331
    6. ':' → logprob: -4.541038990020752
    7. ' print' → logprob: -5.166038990020752
    8. '>' → logprob: -5.791038990020752
    9. '#' → logprob: -5.791038990020752
    10. ',' → logprob: -6.291038990020752

Token 355: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000553151941858232
    2. 'print' → logprob: -7.500553131103516
    3. 'i' → logprob: -15.750553131103516
    4. '```' → logprob: -17.000553131103516
    5. ' if' → logprob: -17.125553131103516
    6. '#' → logprob: -19.875553131103516
    7. 'p' → logprob: -20.500553131103516
    8. 'If' → logprob: -20.625553131103516
    9. 'for' → logprob: -20.625553131103516
    10. '
' → logprob: -22.250553131103516

Token 356: ' En' (ID: 2130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4741349220275879
    2. 'print' → logprob: -0.9741349220275879
    3. ' if' → logprob: -9.84913444519043
    4. ' print' → logprob: -12.84913444519043
    5. '```' → logprob: -13.47413444519043
    6. '#' → logprob: -14.72413444519043
    7. 'prin' → logprob: -15.97413444519043
    8. 'p' → logprob: -15.97413444519043
    9. 'pr' → logprob: -16.22413444519043
    10. 'If' → logprob: -16.34913444519043

Token 357: ' Python' (ID: 26534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047836028039455414
    2. 'if' → logprob: -3.1728360652923584
    3. ' print' → logprob: -5.547835826873779
    4. ' if' → logprob: -7.297835826873779
    5. '#' → logprob: -8.672836303710938
    6. 'python' → logprob: -10.547836303710938
    7. 'fonction' → logprob: -11.547836303710938
    8. '```' → logprob: -11.672836303710938
    9. ' fonction' → logprob: -12.297836303710938
    10. 'fin' → logprob: -12.422836303710938

Token 358: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0034811587538570166
    2. ' if' → logprob: -6.253481388092041
    3. 'print' → logprob: -6.878481388092041
    4. '
' → logprob: -7.628481388092041
    5. '#' → logprob: -10.503480911254883
    6. ':' → logprob: -13.128480911254883
    7. '```' → logprob: -13.128480911254883
    8. ',' → logprob: -14.003480911254883
    9. ' print' → logprob: -14.128480911254883
    10. '#
' → logprob: -15.253480911254883

Token 359: ' une' (ID: 2463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00036216014996171
    2. 'print' → logprob: -8.500362396240234
    3. ' if' → logprob: -8.750362396240234
    4. '#' → logprob: -15.250362396240234
    5. '```' → logprob: -17.500362396240234
    6. ' print' → logprob: -18.875362396240234
    7. 'If' → logprob: -20.000362396240234
    8. '#if' → logprob: -20.500362396240234
    9. '#print' → logprob: -20.750362396240234
    10. 'for' → logprob: -21.625362396240234

Token 360: ' valeur' (ID: 41664)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31983569264411926
    2. ' if' → logprob: -1.4448356628417969
    3. 'print' → logprob: -4.319835662841797
    4. ' print' → logprob: -5.194835662841797
    5. ' condition' → logprob: -5.819835662841797
    6. 'chaine' → logprob: -5.819835662841797
    7. ' instruction' → logprob: -6.444835662841797
    8. 'f' → logprob: -6.444835662841797
    9. 'si' → logprob: -6.569835662841797
    10. ' ligne' → logprob: -6.819835662841797

Token 361: ' entière' (ID: 61583)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.33323007822036743
    2. ' non' → logprob: -2.4582300186157227
    3. ' if' → logprob: -2.5832300186157227
    4. 'if' → logprob: -3.4582300186157227
    5. ' %' → logprob: -3.8332300186157227
    6. ' différente' → logprob: -4.458230018615723
    7. '>' → logprob: -4.708230018615723
    8. 'non' → logprob: -4.958230018615723
    9. ' mod' → logprob: -5.333230018615723
    10. ' positive' → logprob: -5.583230018615723

Token 362: ' de' (ID: 334)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.9855433106422424
    2. ' différente' → logprob: -1.6105432510375977
    3. ' if' → logprob: -1.9855432510375977
    4. ' different' → logprob: -2.1105432510375977
    5. 'if' → logprob: -2.7355432510375977
    6. 'non' → logprob: -3.7355432510375977
    7. ' positive' → logprob: -4.360543251037598
    8. ' n' → logprob: -4.485543251037598
    9. 'different' → logprob: -4.735543251037598
    10. 'n' → logprob: -4.860543251037598

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013359866105020046
    2. ' ' → logprob: -5.013360023498535
    3. 'ans' → logprob: -5.138360023498535
    4. '1' → logprob: -7.263360023498535
    5. ' ans' → logprob: -10.388360023498535
    6. 'True' → logprob: -12.388360023498535
    7. 'z' → logprob: -12.388360023498535
    8. 'zero' → logprob: -12.513360023498535
    9. '(ans' → logprob: -13.013360023498535
    10. ' zéro' → logprob: -13.138360023498535

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008290443220175803
    2. 'ans' → logprob: -7.250829219818115
    3. '1' → logprob: -9.375828742980957
    4. ' ' → logprob: -10.750828742980957
    5. 'True' → logprob: -11.875828742980957
    6. 'z' → logprob: -12.625828742980957
    7. 'zero' → logprob: -14.000828742980957
    8. 'False' → logprob: -15.000828742980957
    9. 'non' → logprob: -15.125828742980957
    10. 'true' → logprob: -15.750828742980957

Token 365: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16265788674354553
    2. '==' → logprob: -2.0376579761505127
    3. ':' → logprob: -5.037657737731934
    4. '>' → logprob: -5.662657737731934
    5. ' ' → logprob: -5.787657737731934
    6. 'if' → logprob: -5.787657737731934
    7. ' !=' → logprob: -6.912657737731934
    8. ' >' → logprob: -7.912657737731934
    9. ' if' → logprob: -7.912657737731934
    10. ' est' → logprob: -8.162657737731934

Token 366: ' considér' (ID: 68502)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8897941708564758
    2. ' considér' → logprob: -1.264794111251831
    3. ' False' → logprob: -1.889794111251831
    4. 'f' → logprob: -2.889794111251831
    5. ' fals' → logprob: -3.889794111251831
    6. 'consider' → logprob: -3.889794111251831
    7. ' évalu' → logprob: -4.13979434967041
    8. 'é' → logprob: -4.76479434967041
    9. ' interpr' → logprob: -5.01479434967041
    10. 'F' → logprob: -5.01479434967041

Token 367: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0029300376772880554
    2. 'e' → logprob: -6.377930164337158
    3. 'é' → logprob: -6.752930164337158
    4. 't' → logprob: -10.3779296875
    5. 'rée' → logprob: -11.7529296875
    6. 'uée' → logprob: -12.0029296875
    7. 'ee' → logprob: -12.8779296875
    8. 'née' → logprob: -13.3779296875
    9. 'ible' → logprob: -13.6279296875
    10. 'ue' → logprob: -13.8779296875

Token 368: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.0985783189535141
    2. 'comme' → logprob: -2.4735782146453857
    3. '#' → logprob: -5.348578453063965
    4. ' as' → logprob: -6.598578453063965
    5. 'False' → logprob: -6.848578453063965
    6. 'as' → logprob: -7.848578453063965
    7. ' False' → logprob: -7.848578453063965
    8. 'True' → logprob: -8.598578453063965
    9. ' True' → logprob: -8.598578453063965
    10. ' #' → logprob: -8.723578453063965

Token 369: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.007260043174028397
    2. ' False' → logprob: -5.507259845733643
    3. 'F' → logprob: -5.757259845733643
    4. 'Fa' → logprob: -12.3822603225708
    5. '(False' → logprob: -12.6322603225708
    6. 'Falsy' → logprob: -12.6322603225708
    7. '=False' → logprob: -13.0072603225708
    8. '.False' → logprob: -13.6322603225708
    9. 'f' → logprob: -13.8822603225708
    10. 'fa' → logprob: -14.8822603225708

Token 370: ' dans' (ID: 2671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1777624487876892
    2. '
' → logprob: -2.052762508392334
    3. ',' → logprob: -4.302762508392334
    4. ' if' → logprob: -4.302762508392334
    5. ',
' → logprob: -5.927762508392334
    6. '

' → logprob: -6.302762508392334
    7. '.' → logprob: -7.052762508392334
    8. '#' → logprob: -7.177762508392334
    9. '.
' → logprob: -7.802762508392334
    10. 'print' → logprob: -7.927762508392334

Token 371: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.13099174201488495
    2. ' une' → logprob: -2.3809916973114014
    3. 'un' → logprob: -3.7559916973114014
    4. 'les' → logprob: -5.8809919357299805
    5. ' un' → logprob: -6.0059919357299805
    6. ''une' → logprob: -7.0059919357299805
    7. 'le' → logprob: -7.6309919357299805
    8. ''un' → logprob: -9.13099193572998
    9. 'la' → logprob: -9.75599193572998
    10. 'if' → logprob: -10.50599193572998

Token 372: ' contexte' (ID: 82673)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07917860150337219
    2. ' if' → logprob: -2.57917857170105
    3. 'condition' → logprob: -9.204178810119629
    4. ' condition' → logprob: -9.579178810119629
    5. ' contexte' → logprob: -10.704178810119629
    6. 'bool' → logprob: -10.829178810119629
    7. ' test' → logprob: -10.954178810119629
    8. ' boolean' → logprob: -11.204178810119629
    9. '```' → logprob: -11.704178810119629
    10. 'boolean' → logprob: -12.204178810119629

Token 373: ' bool' (ID: 3792)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.8350750803947449
    2. ' bool' → logprob: -1.8350751399993896
    3. 'bool' → logprob: -1.8350751399993896
    4. ' boolean' → logprob: -2.3350751399993896
    5. ' logique' → logprob: -2.9600751399993896
    6. 'condition' → logprob: -3.0850751399993896
    7. 'bo' → logprob: -3.9600751399993896
    8. ' bo' → logprob: -4.8350749015808105
    9. 'boolean' → logprob: -5.2100749015808105
    10. 'b' → logprob: -5.3350749015808105

Token 374: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0017951317131519318
    2. 'éan' → logprob: -6.376795291900635
    3. 'éin' → logprob: -10.376794815063477
    4. 'ean' → logprob: -10.626794815063477
    5. '#' → logprob: -11.126794815063477
    6. 'è' → logprob: -12.251794815063477
    7. 'en' → logprob: -12.626794815063477
    8. 'éal' → logprob: -12.626794815063477
    9. 'éf' → logprob: -13.126794815063477
    10. 'én' → logprob: -13.876794815063477

Token 375: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.07958734035491943
    2. 'an' → logprob: -2.579587459564209
    3. 'n' → logprob: -8.20458698272705
    4. 'é' → logprob: -8.95458698272705
    5. 'né' → logprob: -9.45458698272705
    6. 'én' → logprob: -10.45458698272705
    7. 'enne' → logprob: -10.57958698272705
    8. 'èn' → logprob: -10.70458698272705
    9. 'ean' → logprob: -10.82958698272705
    10. '#' → logprob: -11.07958698272705

Token 376: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003307585371658206
    2. '
' → logprob: -6.253307819366455
    3. ' if' → logprob: -6.878307819366455
    4. '.' → logprob: -8.878307342529297
    5. ',' → logprob: -9.253307342529297
    6. '.
' → logprob: -9.628307342529297
    7. ',
' → logprob: -10.628307342529297
    8. '#' → logprob: -11.378307342529297
    9. 'print' → logprob: -13.003307342529297
    10. '```' → logprob: -13.003307342529297

Token 377: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34887605905532837
    2. ' if' → logprob: -1.2238759994506836
    3. '#' → logprob: -8.348875999450684
    4. 'print' → logprob: -9.973875999450684
    5. ' 
' → logprob: -10.848875999450684
    6. ' donc' → logprob: -10.848875999450684
    7. ' #' → logprob: -10.973875999450684
    8. ' si' → logprob: -11.348875999450684
    9. 'while' → logprob: -11.723875999450684
    10. ' print' → logprob: -11.723875999450684

Token 378: ' toute' (ID: 16825)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4126635789871216
    2. '#' → logprob: -1.5376635789871216
    3. 'if' → logprob: -2.537663459777832
    4. 'True' → logprob: -4.662663459777832
    5. ' True' → logprob: -4.912663459777832
    6. 'False' → logprob: -5.037663459777832
    7. 'not' → logprob: -5.537663459777832
    8. '0' → logprob: -5.662663459777832
    9. ' print' → logprob: -6.162663459777832
    10. ' #' → logprob: -6.412663459777832

Token 379: ' autre' (ID: 20278)
  Prédit: ' autre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.14569082856178284
    2. 'non' → logprob: -3.14569091796875
    3. ' non' → logprob: -3.39569091796875
    4. 'aut' → logprob: -4.39569091796875
    5. '#' → logprob: -4.52069091796875
    6. ' other' → logprob: -5.27069091796875
    7. '>' → logprob: -5.27069091796875
    8. 'print' → logprob: -5.39569091796875
    9. ' ' → logprob: -5.64569091796875
    10. '   ' → logprob: -6.27069091796875

Token 380: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.07085927575826645
    2. 'val' → logprob: -3.19585919380188
    3. ' value' → logprob: -4.820859432220459
    4. 'value' → logprob: -5.195859432220459
    5. ' nombre' → logprob: -6.070859432220459
    6. '#' → logprob: -6.070859432220459
    7. 'nombre' → logprob: -6.195859432220459
    8. ' ' → logprob: -6.445859432220459
    9. ' val' → logprob: -6.820859432220459
    10. '   ' → logprob: -7.070859432220459

Token 381: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.048412248492240906
    2. ' True' → logprob: -4.423412322998047
    3. 'est' → logprob: -4.548412322998047
    4. 'True' → logprob: -4.798412322998047
    5. ' différente' → logprob: -5.173412322998047
    6. ' is' → logprob: -5.673412322998047
    7. '=True' → logprob: -7.173412322998047
    8. ' comme' → logprob: -7.173412322998047
    9. ' different' → logprob: -7.173412322998047
    10. '>' → logprob: -7.548412322998047

Token 382: ' considér' (ID: 68502)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09889552742242813
    2. ' True' → logprob: -2.47389554977417
    3. 'consider' → logprob: -4.72389554977417
    4. 'cons' → logprob: -7.59889554977417
    5. ' considér' → logprob: -8.223895072937012
    6. ' considered' → logprob: -8.598895072937012
    7. '=True' → logprob: -10.973895072937012
    8. '(True' → logprob: -11.473895072937012
    9. 'tr' → logprob: -11.848895072937012
    10. '```' → logprob: -11.973895072937012

Token 383: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.14410822093486786
    2. 'é' → logprob: -2.269108295440674
    3. 'True' → logprob: -3.519108295440674
    4. 'e' → logprob: -7.019108295440674
    5. ' True' → logprob: -8.519107818603516
    6. 'ee' → logprob: -10.644107818603516
    7. 'False' → logprob: -10.769107818603516
    8. '=True' → logprob: -11.894107818603516
    9. '(True' → logprob: -12.144107818603516
    10. 'és' → logprob: -12.519107818603516

Token 384: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.05398736521601677
    2. 'comme' → logprob: -3.0539872646331787
    3. ' as' → logprob: -6.303987503051758
    4. 'as' → logprob: -6.303987503051758
    5. ' True' → logprob: -7.428987503051758
    6. ':' → logprob: -8.053987503051758
    7. ' like' → logprob: -8.553987503051758
    8. 'True' → logprob: -8.803987503051758
    9. '```' → logprob: -8.928987503051758
    10. '#' → logprob: -9.178987503051758

Token 385: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033581978641450405
    2. ' True' → logprob: -8.000335693359375
    3. 'Tr' → logprob: -15.500335693359375
    4. '(True' → logprob: -15.875335693359375
    5. '=True' → logprob: -17.125335693359375
    6. 'V' → logprob: -18.500335693359375
    7. 'TRUE' → logprob: -19.000335693359375
    8. '.True' → logprob: -19.000335693359375
    9. 'v' → logprob: -19.125335693359375
    10. 'true' → logprob: -19.500335693359375

Token 386: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10092614591121674
    2. '
' → logprob: -2.350926160812378
    3. ' if' → logprob: -7.475925922393799
    4. '

' → logprob: -9.850926399230957
    5. '.
' → logprob: -9.850926399230957
    6. 'print' → logprob: -11.600926399230957
    7. '```' → logprob: -12.225926399230957
    8. '
' → logprob: -12.350926399230957
    9. '  
' → logprob: -12.350926399230957
    10. '#' → logprob: -12.350926399230957

Token 387: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3902033970225602e-05
    2. 'print' → logprob: -11.250014305114746
    3. ' if' → logprob: -14.125014305114746
    4. '```' → logprob: -17.50001335144043
    5. 'i' → logprob: -17.62501335144043
    6. 'for' → logprob: -19.37501335144043
    7. '
' → logprob: -19.37501335144043
    8. 'ifs' → logprob: -20.12501335144043
    9. '#' → logprob: -20.25001335144043
    10. 'ans' → logprob: -20.50001335144043

Token 388: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06203434616327286
    2. 'ans' → logprob: -2.8120343685150146
    3. '(ans' → logprob: -10.187034606933594
    4. ' ' → logprob: -11.437034606933594
    5. '	ans' → logprob: -11.437034606933594
    6. ' not' → logprob: -12.187034606933594
    7. ' ' → logprob: -13.562034606933594
    8. 'not' → logprob: -14.562034606933594
    9. '_ans' → logprob: -14.937034606933594
    10. 's' → logprob: -16.187034606933594

Token 389: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15829886496067047
    2. '>' → logprob: -2.033298969268799
    3. ':' → logprob: -4.533298969268799
    4. ' ==' → logprob: -6.033298969268799
    5. ' !=' → logprob: -6.408298969268799
    6. ' :' → logprob: -7.908298969268799
    7. '==' → logprob: -8.65829849243164
    8. '!=' → logprob: -9.53329849243164
    9. ' %' → logprob: -10.40829849243164
    10. '%' → logprob: -10.40829849243164

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05653407797217369
    2. 'print' → logprob: -3.9315340518951416
    3. ' print' → logprob: -4.056534290313721
    4. ':' → logprob: -4.056534290313721
    5. ':
' → logprob: -7.556534290313721
    6. ' :' → logprob: -9.431533813476562
    7. '	print' → logprob: -10.056533813476562
    8. '    
' → logprob: -10.931533813476562
    9. '   ' → logprob: -11.056533813476562
    10. ' ' → logprob: -11.806533813476562

Token 391: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5250422358512878
    2. ' print' → logprob: -0.9000422358512878
    3. '   ' → logprob: -6.2750420570373535
    4. ' for' → logprob: -11.775042533874512
    5. ' ans' → logprob: -12.025042533874512
    6. '	print' → logprob: -12.400042533874512
    7. 'for' → logprob: -12.900042533874512
    8. '
' → logprob: -13.150042533874512
    9. 'ans' → logprob: -13.400042533874512
    10. ' ' → logprob: -13.650042533874512

Token 392: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021855637896806002
    2. ' print' → logprob: -8.625218391418457
    3. 'pr' → logprob: -11.125218391418457
    4. 'prin' → logprob: -11.625218391418457
    5. '   ' → logprob: -12.375218391418457
    6. 'p' → logprob: -12.500218391418457
    7. 'ans' → logprob: -13.500218391418457
    8. 'if' → logprob: -14.000218391418457
    9. 'result' → logprob: -14.250218391418457
    10. '#' → logprob: -14.375218391418457

Token 393: ' '' (ID: 461)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1659657061100006
    2. ' s' → logprob: -2.2909657955169678
    3. 'ans' → logprob: -3.2909657955169678
    4. ' len' → logprob: -5.790965557098389
    5. '(ans' → logprob: -5.790965557098389
    6. 's' → logprob: -5.915965557098389
    7. ' True' → logprob: -6.165965557098389
    8. ' print' → logprob: -7.165965557098389
    9. ' ' → logprob: -7.415965557098389
    10. ' (' → logprob: -7.665965557098389

Token 394: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07485824078321457
    2. ' ans' → logprob: -3.1998581886291504
    3. 's' → logprob: -3.8248581886291504
    4. 'len' → logprob: -5.32485818862915
    5. ' s' → logprob: -6.19985818862915
    6. '(ans' → logprob: -6.19985818862915
    7. ' len' → logprob: -8.449858665466309
    8. 'abs' → logprob: -10.199858665466309
    9. ' (' → logprob: -10.199858665466309
    10. 'True' → logprob: -10.324858665466309

Token 395: ''' (ID: 6)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.315210223197937
    2. '%' → logprob: -1.315210223197937
    3. ' ==' → logprob: -6.815210342407227
    4. ' >' → logprob: -7.690210342407227
    5. '>' → logprob: -8.940210342407227
    6. ' >=' → logprob: -9.815210342407227
    7. '==' → logprob: -9.815210342407227
    8. ' !=' → logprob: -10.190210342407227
    9. ' ' → logprob: -10.565210342407227
    10. ' ' → logprob: -10.690210342407227

Token 396: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01738276518881321
    2. ' %' → logprob: -4.517382621765137
    3. '=' → logprob: -6.142382621765137
    4. '%=' → logprob: -6.142382621765137
    5. '+=' → logprob: -7.392382621765137
    6. ' %=' → logprob: -7.642382621765137
    7. 'print' → logprob: -7.892382621765137
    8. ' +=' → logprob: -8.517382621765137
    9. ' =' → logprob: -8.642382621765137
    10. ' print' → logprob: -9.267382621765137

Token 397: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -1.0367035865783691
    2. ' True' → logprob: -1.1617035865783691
    3. ' non' → logprob: -2.161703586578369
    4. 'True' → logprob: -2.286703586578369
    5. '>' → logprob: -3.036703586578369
    6. 'non' → logprob: -3.786703586578369
    7. ' supérieur' → logprob: -3.911703586578369
    8. ' different' → logprob: -5.036703586578369
    9. ' vrai' → logprob: -5.411703586578369
    10. 'diff' → logprob: -5.786703586578369

Token 398: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17990735173225403
    2. 'de' → logprob: -1.8049073219299316
    3. ' ' → logprob: -9.92990779876709
    4. '0' → logprob: -10.55490779876709
    5. '   ' → logprob: -10.55490779876709
    6. '_de' → logprob: -10.67990779876709
    7. 'from' → logprob: -11.05490779876709
    8. '=' → logprob: -11.30490779876709
    9. ' from' → logprob: -12.42990779876709
    10. '  ' → logprob: -13.55490779876709

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. ' zero' → logprob: -17.875123977661133
    4. 'zero' → logprob: -18.250123977661133
    5. '   ' → logprob: -18.750123977661133
    6. '```' → logprob: -20.250123977661133
    7. ' zéro' → logprob: -20.375123977661133
    8. '=' → logprob: -20.625123977661133
    9. '  ' → logprob: -20.625123977661133
    10. ' ' → logprob: -20.750123977661133

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. 'zero' → logprob: -14.875059127807617
    4. ' zero' → logprob: -16.750059127807617
    5. ' zéro' → logprob: -17.000059127807617
    6. '```' → logprob: -18.125059127807617
    7. '  ' → logprob: -19.250059127807617
    8. '   ' → logprob: -19.500059127807617
    9. 'z' → logprob: -19.500059127807617
    10. '０' → logprob: -19.625059127807617

Token 401: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045445993542671204
    2. ':
' → logprob: -3.1704459190368652
    3. 'print' → logprob: -6.295445919036865
    4. ' print' → logprob: -7.920445919036865
    5. ',' → logprob: -9.045446395874023
    6. ' :' → logprob: -9.545446395874023
    7. '   ' → logprob: -10.920446395874023
    8. ' and' → logprob: -11.545446395874023
    9. ' :
' → logprob: -11.795446395874023
    10. ':
' → logprob: -12.920446395874023

Token 402: 'don' (ID: 22130)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9707940816879272
    2. 'True' → logprob: -1.5957940816879272
    3. '   ' → logprob: -2.720794200897217
    4. ':' → logprob: -2.845794200897217
    5. ')' → logprob: -3.095794200897217
    6. ' len' → logprob: -3.345794200897217
    7. '1' → logprob: -3.345794200897217
    8. 'len' → logprob: -3.470794200897217
    9. '0' → logprob: -3.970794200897217
    10. 's' → logprob: -4.095794200897217

Token 403: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.865583706414327e-05
    2. 't' → logprob: -9.25009822845459
    3. '#' → logprob: -14.62509822845459
    4. 'ne' → logprob: -14.75009822845459
    5. 'cp' → logprob: -14.75009822845459
    6. 'C' → logprob: -15.62509822845459
    7. '`t' → logprob: -15.75009822845459
    8. 'e' → logprob: -16.000099182128906
    9. '```' → logprob: -16.000099182128906
    10. 'nées' → logprob: -16.250099182128906

Token 404: ' il' (ID: 1793)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4638919532299042
    2. ' True' → logprob: -1.2138919830322266
    3. 'au' → logprob: -3.2138919830322266
    4. ' au' → logprob: -4.963891983032227
    5. 'true' → logprob: -4.963891983032227
    6. ' vrai' → logprob: -5.588891983032227
    7. 'que' → logprob: -5.713891983032227
    8. 'il' → logprob: -6.088891983032227
    9. 'qu' → logprob: -6.338891983032227
    10. 'la' → logprob: -6.463891983032227

Token 405: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2303781360387802
    2. 'y' → logprob: -1.6053781509399414
    3. '>' → logprob: -5.855378150939941
    4. ' est' → logprob: -7.855378150939941
    5. ' signifie' → logprob: -7.855378150939941
    6. ' a' → logprob: -7.980378150939941
    7. 's' → logprob: -8.605378150939941
    8. 'a' → logprob: -8.980378150939941
    9. ' veut' → logprob: -8.980378150939941
    10. ' >' → logprob: -9.230378150939941

Token 406: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14754340052604675
    2. ' a' → logprob: -2.022543430328369
    3. 'y' → logprob: -6.022543430328369
    4. ' y' → logprob: -6.772543430328369
    5. '#' → logprob: -7.647543430328369
    6. ''a' → logprob: -7.647543430328369
    7. 'avait' → logprob: -9.272542953491211
    8. '#a' → logprob: -9.897542953491211
    9. 'ex' → logprob: -10.147542953491211
    10. '>' → logprob: -10.772542953491211

Token 407: ' eu' (ID: 5658)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.08195631951093674
    2. 'au' → logprob: -2.706956386566162
    3. ' des' → logprob: -4.831956386566162
    4. ' eu' → logprob: -6.206956386566162
    5. 'des' → logprob: -6.581956386566162
    6. 'eu' → logprob: -8.331955909729004
    7. ' ' → logprob: -8.831955909729004
    8. ''au' → logprob: -9.706955909729004
    9. 'une' → logprob: -10.581955909729004
    10. ' plus' → logprob: -11.206955909729004

Token 408: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.061037398874759674
    2. 'au' → logprob: -3.436037302017212
    3. ' des' → logprob: -3.936037302017212
    4. 'des' → logprob: -4.936037540435791
    5. ''au' → logprob: -9.436037063598633
    6. ' ' → logprob: -9.686037063598633
    7. 'une' → logprob: -9.686037063598633
    8. ' une' → logprob: -10.061037063598633
    9. ' ' → logprob: -11.686037063598633
    10. ')' → logprob: -11.811037063598633

Token 409: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0054009538143873215
    2. ' moins' → logprob: -5.755401134490967
    3. 'mo' → logprob: -6.630401134490967
    4. '#' → logprob: -8.255400657653809
    5. 'menos' → logprob: -8.630400657653809
    6. '```' → logprob: -8.630400657653809
    7. '-' → logprob: -9.880400657653809
    8. 'une' → logprob: -10.005400657653809
    9. 'm' → logprob: -10.755400657653809
    10. ' ' → logprob: -11.130400657653809

Token 410: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5638131499290466
    2. ' une' → logprob: -1.3138132095336914
    3. 'un' → logprob: -2.4388132095336914
    4. ' un' → logprob: -2.8138132095336914
    5. 'de' → logprob: -5.188813209533691
    6. ' deux' → logprob: -5.438813209533691
    7. ' ' → logprob: -5.688813209533691
    8. '   ' → logprob: -7.688813209533691
    9. ' ' → logprob: -7.813813209533691
    10. ''une' → logprob: -8.563813209533691

Token 411: ' endroit' (ID: 79158)
  Prédit: ' changement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changement' → logprob: -0.11849895864725113
    2. 'ch' → logprob: -2.3684990406036377
    3. ' endroit' → logprob: -4.368498802185059
    4. ' caractère' → logprob: -6.493498802185059
    5. 'car' → logprob: -6.618498802185059
    6. 'end' → logprob: -8.118498802185059
    7. 'es' → logprob: -8.243498802185059
    8. 'e' → logprob: -8.368498802185059
    9. ' passage' → logprob: -8.493498802185059
    10. 'diff' → logprob: -8.618498802185059

Token 412: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.45546892285346985
    2. 'où' → logprob: -1.0804688930511475
    3. ' o' → logprob: -4.580469131469727
    4. ' ' → logprob: -4.830469131469727
    5. '   ' → logprob: -5.955469131469727
    6. ' where' → logprob: -6.205469131469727
    7. 'o' → logprob: -7.080469131469727
    8. '    ' → logprob: -8.080469131469727
    9. '<|end|>' → logprob: -8.205469131469727
    10. '```' → logprob: -8.580469131469727

Token 413: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4708414077758789
    2. ' deux' → logprob: -1.345841407775879
    3. 'les' → logprob: -2.720841407775879
    4. ' les' → logprob: -4.095841407775879
    5. ' two' → logprob: -5.095841407775879
    6. 's' → logprob: -5.345841407775879
    7. 'la' → logprob: -5.345841407775879
    8. ' ' → logprob: -5.345841407775879
    9. 'two' → logprob: -5.970841407775879
    10. ' la' → logprob: -5.970841407775879

Token 414: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.5984000563621521
    2. 'car' → logprob: -0.8484000563621521
    3. ' ' → logprob: -4.723400115966797
    4. ' car' → logprob: -5.598400115966797
    5. ' caracteres' → logprob: -5.848400115966797
    6. 's' → logprob: -5.973400115966797
    7. 'con' → logprob: -7.098400115966797
    8. ' caractère' → logprob: -7.098400115966797
    9. ' caract' → logprob: -7.223400115966797
    10. ' espaces' → logprob: -7.848400115966797

Token 415: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.006625131703913212
    2. 'cons' → logprob: -5.756625175476074
    3. 'diff' → logprob: -6.131625175476074
    4. 's' → logprob: -8.006625175476074
    5. 'con' → logprob: -8.256625175476074
    6. ' différents' → logprob: -8.256625175476074
    7. ' consecut' → logprob: -8.631625175476074
    8. ' sont' → logprob: -9.381625175476074
    9. ' diff' → logprob: -10.381625175476074
    10. ' différent' → logprob: -10.881625175476074

Token 416: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0020958955865353346
    2. 'secut' → logprob: -6.752095699310303
    3. 'éc' → logprob: -7.627095699310303
    4. 'ecut' → logprob: -8.377096176147461
    5. 'és' → logprob: -9.502096176147461
    6. 'cut' → logprob: -10.127096176147461
    7. 's' → logprob: -10.627096176147461
    8. 'é' → logprob: -10.752096176147461
    9. 'q' → logprob: -11.502096176147461
    10. 'c' → logprob: -11.877096176147461

Token 417: 'ifs' (ID: 14119)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.1336536854505539
    2. 'ifs' → logprob: -2.5086536407470703
    3. 'u' → logprob: -3.7586536407470703
    4. 's' → logprob: -4.88365364074707
    5. '   ' → logprob: -5.00865364074707
    6. '#' → logprob: -6.75865364074707
    7. 'ent' → logprob: -7.13365364074707
    8. 'uels' → logprob: -7.38365364074707
    9. 'if' → logprob: -7.63365364074707
    10. '       ' → logprob: -7.75865364074707

Token 418: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5697872638702393
    2. 'diff' → logprob: -1.4447872638702393
    3. ' sont' → logprob: -1.8197872638702393
    4. ' différents' → logprob: -4.81978702545166
    5. 'éta' → logprob: -5.06978702545166
    6. ' diff' → logprob: -5.31978702545166
    7. 'd' → logprob: -5.56978702545166
    8. ')' → logprob: -5.56978702545166
    9. ' étaient' → logprob: -6.06978702545166
    10. 'different' → logprob: -6.06978702545166

Token 419: ' différents' (ID: 36009)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3962530493736267
    2. ' différents' → logprob: -1.1462531089782715
    3. 'different' → logprob: -5.1462531089782715
    4. 'd' → logprob: -6.1462531089782715
    5. ' different' → logprob: -6.8962531089782715
    6. ' différent' → logprob: -8.896252632141113
    7. ' différentes' → logprob: -9.396252632141113
    8. ' diff' → logprob: -9.896252632141113
    9. 'dif' → logprob: -10.146252632141113
    10. 'distinct' → logprob: -10.771252632141113

Token 420: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8536269068717957
    2. 'print' → logprob: -1.7286269664764404
    3. '):
' → logprob: -2.1036269664764404
    4. ' print' → logprob: -2.1036269664764404
    5. '):' → logprob: -2.3536269664764404
    6. '   ' → logprob: -3.4786269664764404
    7. ':' → logprob: -3.9786269664764404
    8. ',' → logprob: -5.478626728057861
    9. ':
' → logprob: -6.228626728057861
    10. ' ),' → logprob: -7.478626728057861

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22028212249279022
    2. ' print' → logprob: -2.0952820777893066
    3. 'print' → logprob: -2.5952820777893066
    4. '       ' → logprob: -10.595282554626465
    5. '	print' → logprob: -11.470282554626465
    6. ' ' → logprob: -12.470282554626465
    7. '    ' → logprob: -13.220282554626465
    8. '```' → logprob: -13.720282554626465
    9. '   ' → logprob: -13.720282554626465
    10. ' if' → logprob: -14.220282554626465

Token 422: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017789669334888458
    2. ' print' → logprob: -4.392789840698242
    3. '   ' → logprob: -5.267789840698242
    4. 'if' → logprob: -10.392789840698242
    5. ' ' → logprob: -10.642789840698242
    6. '#' (adapté à ' #') → logprob: -11.267789840698242
    7. 'for' → logprob: -11.517789840698242
    8. '	print' → logprob: -12.017789840698242
    9. 'ans' → logprob: -13.017789840698242
    10. '  ' → logprob: -13.017789840698242

Token 423: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026674123480916023
    2. ' print' → logprob: -3.6516740322113037
    3. '   ' → logprob: -7.901674270629883
    4. '	print' → logprob: -13.651674270629883
    5. '#' → logprob: -14.901674270629883
    6. 'pr' → logprob: -15.026674270629883
    7. ' ' → logprob: -15.026674270629883
    8. 'result' → logprob: -15.526674270629883
    9. '
' → logprob: -15.651674270629883
    10. '       ' → logprob: -15.776674270629883

Token 424: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.31583407521247864
    2. 'print' → logprob: -1.3158340454101562
    3. '   ' → logprob: -6.065834045410156
    4. 'pr' → logprob: -9.690834045410156
    5. '	print' → logprob: -9.815834045410156
    6. ' prin' → logprob: -10.440834045410156
    7. '.print' → logprob: -10.690834045410156
    8. '    ' → logprob: -11.440834045410156
    9. ' for' → logprob: -12.315834045410156
    10. ' ' → logprob: -12.315834045410156

Token 425: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09623946249485016
    2. '(' → logprob: -3.4712395668029785
    3. '(ans' → logprob: -3.5962395668029785
    4. 'ans' → logprob: -3.9712395668029785
    5. '"' → logprob: -5.4712395668029785
    6. '(s' → logprob: -5.5962395668029785
    7. '('' → logprob: -6.0962395668029785
    8. '(len' → logprob: -6.5962395668029785
    9. '()' → logprob: -7.2212395668029785
    10. 's' → logprob: -7.3462395668029785

Token 426: ' chaîne' (ID: 89288)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003010233340319246
    2. 'nombre' → logprob: -10.000301361083984
    3. ' print' → logprob: -10.125301361083984
    4. 's' → logprob: -10.125301361083984
    5. 'prin' → logprob: -10.125301361083984
    6. 'chaine' → logprob: -10.375301361083984
    7. 'ans' → logprob: -10.750301361083984
    8. 'pr' → logprob: -11.125301361083984
    9. 'result' → logprob: -11.250301361083984
    10. '"' → logprob: -11.500301361083984

Token 427: ' de' (ID: 334)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3003776967525482
    2. 'print' → logprob: -2.050377607345581
    3. '()' → logprob: -2.175377607345581
    4. '(' → logprob: -5.42537784576416
    5. '("' → logprob: -5.67537784576416
    6. 's' → logprob: -6.17537784576416
    7. ' print' → logprob: -6.55037784576416
    8. '('' → logprob: -6.55037784576416
    9. '()
' → logprob: -6.92537784576416
    10. ' s' → logprob: -7.30037784576416

Token 428: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.011286075226962566
    2. 'print' → logprob: -4.76128625869751
    3. ' caractères' → logprob: -6.76128625869751
    4. 's' → logprob: -7.63628625869751
    5. 'diff' → logprob: -8.136285781860352
    6. '#' → logprob: -8.511285781860352
    7. 'man' → logprob: -8.511285781860352
    8. 'fa' → logprob: -10.261285781860352
    9. ' ' → logprob: -10.636285781860352
    10. 'code' → logprob: -10.761285781860352

Token 429: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0810256004333496
    2. '(s' → logprob: -1.0810256004333496
    3. 's' → logprob: -1.2060256004333496
    4. '("' → logprob: -4.70602560043335
    5. '(' → logprob: -5.83102560043335
    6. '()' → logprob: -6.20602560043335
    7. ' print' → logprob: -6.45602560043335
    8. ' s' → logprob: -6.58102560043335
    9. '('' → logprob: -6.70602560043335
    10. '(print' → logprob: -6.83102560043335

Token 430: 'Yes' (ID: 13022)
  Prédit: 'Oui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oui' → logprob: -0.9237812161445618
    2. '"' → logprob: -1.298781156539917
    3. 'YES' → logprob: -1.923781156539917
    4. 'Yes' → logprob: -2.923781156539917
    5. 'O' → logprob: -3.173781156539917
    6. 'True' → logprob: -3.298781156539917
    7. 'oui' → logprob: -4.423781394958496
    8. 'OK' → logprob: -4.923781394958496
    9. '"O' → logprob: -5.423781394958496
    10. '1' → logprob: -5.673781394958496

Token 431: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03651905804872513
    2. 'print' → logprob: -3.4115190505981445
    3. '")' → logprob: -6.0365190505981445
    4. '"
' → logprob: -8.536519050598145
    5. ' print' → logprob: -9.661519050598145
    6. 'else' → logprob: -10.036519050598145
    7. '```' → logprob: -10.161519050598145
    8. '".' → logprob: -10.411519050598145
    9. ')' → logprob: -10.911519050598145
    10. 'Yes' → logprob: -11.161519050598145

Token 432: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011936508119106293
    2. '
' → logprob: -5.261936664581299
    3. ' print' → logprob: -5.261936664581299
    4. '   ' → logprob: -7.011936664581299
    5. ')' → logprob: -8.13693618774414
    6. '```' → logprob: -9.26193618774414
    7. ')
' → logprob: -9.76193618774414
    8. '()
' → logprob: -10.63693618774414
    9. '\n' → logprob: -11.13693618774414
    10. '"' → logprob: -11.26193618774414

Token 433: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15726988017559052
    2. 'la' → logprob: -2.4072699546813965
    3. 'l' → logprob: -3.5322699546813965
    4. ' la' → logprob: -4.2822699546813965
    5. ' l' → logprob: -5.5322699546813965
    6. ' print' → logprob: -6.1572699546813965
    7. 'u' → logprob: -6.4072699546813965
    8. '   ' → logprob: -7.4072699546813965
    9. '```' → logprob: -8.157269477844238
    10. 'a' → logprob: -8.282269477844238

Token 434: ''écran' (ID: 147901)
  Prédit: 'erm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.7776697278022766
    2. 'print' → logprob: -1.0276696681976318
    3. 'a' → logprob: -2.527669668197632
    4. 'é' → logprob: -3.402669668197632
    5. 'int' → logprob: -4.152669906616211
    6. 'console' → logprob: -5.027669906616211
    7. 'extérieur' → logprob: -5.152669906616211
    8. ''écran' → logprob: -5.527669906616211
    9. 'aise' → logprob: -5.902669906616211
    10. 'élé' → logprob: -6.027669906616211

Token 435: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010149452136829495
    2. '
' → logprob: -7.376014709472656
    3. ' print' → logprob: -8.751014709472656
    4. '   ' → logprob: -8.751014709472656
    5. '```' → logprob: -9.876014709472656
    6. ')' → logprob: -11.751014709472656
    7. ')
' → logprob: -12.251014709472656
    8. ':
' → logprob: -12.876014709472656
    9. ':' → logprob: -13.126014709472656
    10. '\n' → logprob: -14.001014709472656

Token 436: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021621601190418005
    2. '   ' → logprob: -6.252161979675293
    3. ' print' → logprob: -8.752161979675293
    4. '```' → logprob: -9.502161979675293
    5. '	print' → logprob: -14.752161979675293
    6. '``' → logprob: -15.502161979675293
    7. '
' → logprob: -16.37716293334961
    8. '       ' → logprob: -17.37716293334961
    9. 'Yes' → logprob: -18.00216293334961
    10. 'Print' → logprob: -18.50216293334961

Token 437: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00032485672272741795
    2. ' print' → logprob: -8.500325202941895
    3. '   ' → logprob: -9.125325202941895
    4. '
' → logprob: -12.000325202941895
    5. '```' → logprob: -12.000325202941895
    6. '	print' → logprob: -16.000324249267578
    7. '``' → logprob: -16.750324249267578
    8. 'Print' → logprob: -18.000324249267578
    9. '    
' → logprob: -18.625324249267578
    10. '\n' → logprob: -18.625324249267578

Token 438: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014229794032871723
    2. '(' → logprob: -4.264229774475098
    3. '('' → logprob: -9.639229774475098
    4. '()' → logprob: -14.514229774475098
    5. '("("' → logprob: -15.139229774475098
    6. '("")' → logprob: -15.639229774475098
    7. '(
' → logprob: -16.514230728149414
    8. ' ("' → logprob: -17.139230728149414
    9. '("""' → logprob: -17.639230728149414
    10. '(

' → logprob: -18.014230728149414

Token 439: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.320199877838604e-07
    2. ' Yes' → logprob: -15.0
    3. 'Oui' → logprob: -19.25
    4. 'Ye' → logprob: -19.625
    5. 'YES' → logprob: -20.625
    6. '")' → logprob: -21.25
    7. '.Yes' → logprob: -21.875
    8. '_yes' → logprob: -22.5
    9. 'Y' → logprob: -22.625
    10. 'Hello' → logprob: -22.625

Token 440: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.339278580620885e-06
    2. '")
' → logprob: -13.375001907348633
    3. ')")' → logprob: -14.500001907348633
    4. ')' → logprob: -15.625001907348633
    5. '"' → logprob: -17.000001907348633
    6. ' ")' → logprob: -18.625001907348633
    7. '!")' → logprob: -19.125001907348633
    8. '");' → logprob: -19.750001907348633
    9. '")

' → logprob: -19.750001907348633
    10. '”)' → logprob: -20.250001907348633

Token 441: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.7968066206085496e-05
    2. ' else' → logprob: -10.500027656555176
    3. '```' → logprob: -15.625027656555176
    4. 'elif' → logprob: -16.750028610229492
    5. '#else' → logprob: -18.375028610229492
    6. '}else' → logprob: -18.375028610229492
    7. ')' → logprob: -18.500028610229492
    8. 'Else' → logprob: -19.000028610229492
    9. 'elser' → logprob: -19.375028610229492
    10. 'e' → logprob: -20.125028610229492

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1003907322883606
    2. ':
' → logprob: -2.350390672683716
    3. '   ' → logprob: -8.850390434265137
    4. ' :
' → logprob: -10.725390434265137
    5. ' :' → logprob: -10.975390434265137
    6. ':
' → logprob: -14.350390434265137
    7. '():
' → logprob: -14.725390434265137
    8. ':

' → logprob: -15.225390434265137
    9. 'print' → logprob: -15.850390434265137
    10. '():' → logprob: -16.100391387939453

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0561552494764328
    2. ' print' → logprob: -3.431155204772949
    3. 'print' → logprob: -3.806155204772949
    4. '	print' → logprob: -11.30615520477295
    5. '    ' → logprob: -12.68115520477295
    6. '(print' → logprob: -12.80615520477295
    7. '       ' → logprob: -13.05615520477295
    8. '    
' → logprob: -13.93115520477295
    9. '   ' → logprob: -14.18115520477295
    10. ' ' → logprob: -14.30615520477295

Token 444: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20250694453716278
    2. ' print' → logprob: -1.7025068998336792
    3. '   ' → logprob: -6.827507019042969
    4. '	print' → logprob: -11.827507019042969
    5. '    ' → logprob: -14.202507019042969
    6. '.print' → logprob: -14.827507019042969
    7. ' 
' → logprob: -14.827507019042969
    8. '(print' → logprob: -15.577507019042969
    9. ' ' → logprob: -15.702507019042969
    10. ' ' → logprob: -15.827507019042969

Token 445: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.710141122341156
    2. 'print' → logprob: -0.710141122341156
    3. ' print' → logprob: -4.085141181945801
    4. '	print' → logprob: -11.2101411819458
    5. '    ' → logprob: -11.9601411819458
    6. '       ' → logprob: -12.5851411819458
    7. '   ' → logprob: -12.8351411819458
    8. ' ' → logprob: -14.2101411819458
    9. '.print' → logprob: -14.8351411819458
    10. 'Print' → logprob: -14.9601411819458

Token 446: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02871038392186165
    2. ' print' → logprob: -3.90371036529541
    3. 'print' → logprob: -5.02871036529541
    4. '    ' → logprob: -6.77871036529541
    5. '  ' → logprob: -8.27871036529541
    6. ' ' → logprob: -9.27871036529541
    7. ' "' → logprob: -10.40371036529541
    8. ' ' → logprob: -10.90371036529541
    9. ' not' → logprob: -11.65371036529541
    10. '"' → logprob: -11.90371036529541

Token 447: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.48039278388023376
    2. ' ans' → logprob: -0.9803928136825562
    3. 's' → logprob: -5.855392932891846
    4. ' s' → logprob: -6.230392932891846
    5. ' not' → logprob: -7.230392932891846
    6. 'not' → logprob: -8.480392456054688
    7. '   ' → logprob: -9.105392456054688
    8. 'len' → logprob: -9.480392456054688
    9. ' ' → logprob: -9.605392456054688
    10. '	ans' → logprob: -9.855392456054688

Token 448: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13032332062721252
    2. '==' → logprob: -2.2553234100341797
    3. ':' → logprob: -4.13032341003418
    4. '   ' → logprob: -7.50532341003418
    5. 'print' → logprob: -7.50532341003418
    6. '=' → logprob: -9.38032341003418
    7. ' print' → logprob: -10.00532341003418
    8. ' =' → logprob: -11.13032341003418
    9. ' !=' → logprob: -12.25532341003418
    10. ' ' → logprob: -12.38032341003418

Token 449: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6711322069168091
    2. ' ==' → logprob: -0.7961322069168091
    3. 'print' → logprob: -4.0461320877075195
    4. ':' → logprob: -4.9211320877075195
    5. '=' → logprob: -4.9211320877075195
    6. '   ' → logprob: -5.5461320877075195
    7. ' print' → logprob: -7.1711320877075195
    8. '>' → logprob: -8.17113208770752
    9. '+=' → logprob: -8.42113208770752
    10. ' =' → logprob: -8.79613208770752

Token 450: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003418991982471198
    2. ' ' → logprob: -8.00034236907959
    3. '=' → logprob: -12.75034236907959
    4. '   ' → logprob: -13.37534236907959
    5. 'False' → logprob: -14.25034236907959
    6. ' =' → logprob: -14.87534236907959
    7. '==' → logprob: -15.12534236907959
    8. '  ' → logprob: -15.62534236907959
    9. ' ==' → logprob: -16.500341415405273
    10. 'zero' → logprob: -16.750341415405273

Token 451: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.08398929238319397
    2. ' à' → logprob: -2.583989381790161
    3. '0' → logprob: -5.333989143371582
    4. 'a' → logprob: -9.333989143371582
    5. '   ' → logprob: -9.958989143371582
    6. ' ' → logprob: -10.083989143371582
    7. 'to' → logprob: -10.833989143371582
    8. '  ' → logprob: -11.208989143371582
    9. ''à' → logprob: -11.333989143371582
    10. '=' → logprob: -11.458989143371582

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.875045776367188
    4. '```' → logprob: -22.250045776367188
    5. ' ' → logprob: -22.500045776367188
    6. '  ' → logprob: -22.625045776367188
    7. '	' → logprob: -24.000045776367188
    8. '۰' → logprob: -24.125045776367188
    9. '1' → logprob: -24.500045776367188
    10. '=' → logprob: -24.625045776367188

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.125
    4. '```' → logprob: -19.375
    5. '"' → logprob: -19.9375
    6. 'print' → logprob: -20.0
    7. '
' → logprob: -20.625
    8. '00' → logprob: -20.8125
    9. '۰' → logprob: -20.9375
    10. 's' → logprob: -21.0625

Token 454: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2152564823627472
    2. ':' → logprob: -1.9652564525604248
    3. ':
' → logprob: -2.965256452560425
    4. 'print' → logprob: -6.340256690979004
    5. '       ' → logprob: -8.965256690979004
    6. ' print' → logprob: -9.465256690979004
    7. ' :
' → logprob: -11.715256690979004
    8. ',' → logprob: -11.840256690979004
    9. ' :' → logprob: -12.340256690979004
    10. '	print' → logprob: -13.340256690979004

Token 455: 't' (ID: 83)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011202149325981736
    2. 'print' → logprob: -7.001120090484619
    3. '#' → logprob: -9.751120567321777
    4. ')' → logprob: -9.751120567321777
    5. ' print' → logprob: -10.001120567321777
    6. '       ' → logprob: -10.876120567321777
    7. '    ' → logprob: -11.501120567321777
    8. '")' → logprob: -12.251120567321777
    9. '"' → logprob: -12.376120567321777
    10. '  ' → logprob: -13.626120567321777

Token 456: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -1.356691837310791
    2. 'outes' → logprob: -1.481691837310791
    3. 'rès' → logprob: -2.231691837310791
    4. '#' → logprob: -2.481691837310791
    5. 'ype' → logprob: -2.856691837310791
    6. 'r' → logprob: -2.981691837310791
    7. 'rans' → logprob: -3.231691837310791
    8. 'oute' → logprob: -3.356691837310791
    9. 'out' → logprob: -3.481691837310791
    10. 'ou' → logprob: -3.731691837310791

Token 457: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.31596505641937256
    2. 'les' → logprob: -1.3159650564193726
    3. 's' → logprob: -6.315965175628662
    4. 'car' → logprob: -8.065964698791504
    5. ' caractères' → logprob: -9.190964698791504
    6. 'Les' → logprob: -9.315964698791504
    7. ' ' → logprob: -9.690964698791504
    8. '(s' → logprob: -9.815964698791504
    9. '(' → logprob: -10.065964698791504
    10. '   ' → logprob: -10.190964698791504

Token 458: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.018517106771469116
    2. ' caractères' → logprob: -4.018517017364502
    3. 'c' → logprob: -8.51851749420166
    4. ' ' → logprob: -10.01851749420166
    5. ' caracteres' → logprob: -10.26851749420166
    6. ' caract' → logprob: -10.26851749420166
    7. 'print' → logprob: -11.14351749420166
    8. '   ' → logprob: -11.76851749420166
    9. ' car' → logprob: -12.14351749420166
    10. 'characters' → logprob: -12.14351749420166

Token 459: ' cons' (ID: 1473)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6348090171813965
    2. 'de' → logprob: -1.3848090171813965
    3. 's' → logprob: -1.6348090171813965
    4. ' sont' → logprob: -3.8848090171813965
    5. 'dans' → logprob: -6.3848090171813965
    6. '#' → logprob: -7.0098090171813965
    7. '   ' → logprob: -7.6348090171813965
    8. 'ont' → logprob: -7.8848090171813965
    9. ' dans' → logprob: -8.634809494018555
    10. 'éta' → logprob: -9.009809494018555

Token 460: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.037446729838848114
    2. 'é' → logprob: -3.5374467372894287
    3. 'équ' → logprob: -5.28744649887085
    4. 'ég' → logprob: -7.53744649887085
    5. 'érents' → logprob: -7.66244649887085
    6. 'éc' → logprob: -8.412446975708008
    7. 'ecut' → logprob: -8.537446975708008
    8. 'iqu' → logprob: -8.662446975708008
    9. 'éch' → logprob: -9.037446975708008
    10. 'ucc' → logprob: -9.537446975708008

Token 461: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.004830122925341129
    2. 'if' → logprob: -6.004830360412598
    3. '   ' → logprob: -7.379830360412598
    4. '#' → logprob: -7.629830360412598
    5. 'ufs' → logprob: -8.004830360412598
    6. '```' → logprob: -8.129830360412598
    7. 's' → logprob: -8.129830360412598
    8. 'i' → logprob: -9.879830360412598
    9. 'uls' → logprob: -9.879830360412598
    10. 'ents' → logprob: -10.254830360412598

Token 462: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.17799973487854004
    2. 's' → logprob: -2.17799973487854
    3. ' de' → logprob: -3.17799973487854
    4. 'de' → logprob: -6.177999496459961
    5. ' are' → logprob: -6.677999496459961
    6. ')' → logprob: -6.802999496459961
    7. ' étaient' → logprob: -6.802999496459961
    8. 'ont' → logprob: -7.427999496459961
    9. ' ' → logprob: -7.552999496459961
    10. '#' → logprob: -7.677999496459961

Token 463: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.5289044976234436
    2. ' ident' → logprob: -0.9039044976234436
    3. ' ég' → logprob: -5.778904438018799
    4. ' les' → logprob: -6.903904438018799
    5. 'les' → logprob: -7.903904438018799
    6. ' identical' → logprob: -7.903904438018799
    7. 'le' → logprob: -8.653904914855957
    8. '   ' → logprob: -9.278904914855957
    9. ' indent' → logprob: -9.403904914855957
    10. 'ég' → logprob: -9.403904914855957

Token 464: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.00024203950306400657
    2. 'ique' → logprob: -8.750242233276367
    3. 'iqu' → logprob: -11.125242233276367
    4. 'ques' → logprob: -11.125242233276367
    5. 'aux' → logprob: -11.375242233276367
    6. 'ic' → logprob: -11.625242233276367
    7. '#' → logprob: -11.875242233276367
    8. 'i' → logprob: -11.875242233276367
    9. 'iq' → logprob: -12.250242233276367
    10. '```' → logprob: -12.250242233276367

Token 465: ' ou' (ID: 2031)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04484575614333153
    2. '"),' → logprob: -3.6698458194732666
    3. ')' → logprob: -5.2948455810546875
    4. ',' → logprob: -5.5448455810546875
    5. '):' → logprob: -5.6698455810546875
    6. '   ' → logprob: -5.7948455810546875
    7. '):
' → logprob: -6.6698455810546875
    8. 'print' → logprob: -6.9198455810546875
    9. ' ),' → logprob: -8.169845581054688
    10. ' print' → logprob: -8.794845581054688

Token 466: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.343144953250885
    2. ' len' → logprob: -1.4681448936462402
    3. 's' → logprob: -3.4681448936462402
    4. ' s' → logprob: -4.21814489364624
    5. ' la' → logprob: -4.46814489364624
    6. 'la' → logprob: -6.46814489364624
    7. 'le' → logprob: -7.96814489364624
    8. ' le' → logprob: -7.96814489364624
    9. ' ' → logprob: -8.843145370483398
    10. ' ' → logprob: -9.343145370483398

Token 467: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.12448135018348694
    2. 'chaine' → logprob: -2.374481439590454
    3. 'cha' → logprob: -4.624481201171875
    4. 's' → logprob: -4.999481201171875
    5. ' chaine' → logprob: -4.999481201171875
    6. '   ' → logprob: -8.749481201171875
    7. ' ' → logprob: -8.874481201171875
    8. 'string' → logprob: -8.999481201171875
    9. ' s' → logprob: -9.374481201171875
    10. ' string' → logprob: -9.499481201171875

Token 468: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18939237296581268
    2. 'est' → logprob: -1.814392328262329
    3. ' is' → logprob: -5.189392566680908
    4. ')' → logprob: -6.439392566680908
    5. 's' → logprob: -6.939392566680908
    6. '#' → logprob: -8.18939208984375
    7. 'de' → logprob: -8.56439208984375
    8. 'is' → logprob: -8.56439208984375
    9. ' n' → logprob: -8.81439208984375
    10. ''est' → logprob: -9.06439208984375

Token 469: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.03146415576338768
    2. ' une' → logprob: -3.906464099884033
    3. 'len' → logprob: -5.281464099884033
    4. 'long' → logprob: -6.531464099884033
    5. 'été' → logprob: -6.656464099884033
    6. 'length' → logprob: -7.031464099884033
    7. ' ' → logprob: -7.281464099884033
    8. '0' → logprob: -7.656464099884033
    9. 't' → logprob: -9.031464576721191
    10. ''une' → logprob: -9.156464576721191

Token 470: ' seul' (ID: 33041)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3740914463996887
    2. 'length' → logprob: -2.124091386795044
    3. 'ou' → logprob: -2.624091386795044
    4. 'len' → logprob: -2.874091386795044
    5. 'e' → logprob: -4.624091625213623
    6. ' or' → logprob: -4.624091625213623
    7. 'car' → logprob: -4.749091625213623
    8. ' seul' → logprob: -4.874091625213623
    9. ' ou' → logprob: -5.374091625213623
    10. 'or' → logprob: -5.374091625213623

Token 471: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4836336076259613
    2. ' caractère' → logprob: -0.9836336374282837
    3. ' caract' → logprob: -4.733633518218994
    4. ' ' → logprob: -8.608633995056152
    5. ' caractères' → logprob: -8.983633995056152
    6. ')' → logprob: -9.233633995056152
    7. 'char' → logprob: -9.358633995056152
    8. 'character' → logprob: -9.483633995056152
    9. ' car' → logprob: -9.733633995056152
    10. ' character' → logprob: -10.733633995056152

Token 472: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8775674104690552
    2. '):
' → logprob: -1.1275674104690552
    3. '):' → logprob: -1.3775674104690552
    4. ')' → logprob: -5.752567291259766
    5. ' ou' → logprob: -6.752567291259766
    6. 'print' → logprob: -7.252567291259766
    7. '"),' → logprob: -7.252567291259766
    8. ' or' → logprob: -7.502567291259766
    9. '   ' → logprob: -7.627567291259766
    10. '"):
' → logprob: -8.252567291259766

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.219262624857947e-05
    2. 'print' → logprob: -9.625072479248047
    3. ' print' → logprob: -12.125072479248047
    4. '       ' → logprob: -14.375072479248047
    5. '   ' → logprob: -16.375072479248047
    6. '    ' → logprob: -17.875072479248047
    7. '	print' → logprob: -18.125072479248047
    8. '   ' → logprob: -20.250072479248047
    9. '  ' → logprob: -20.750072479248047
    10. '```' → logprob: -20.750072479248047

Token 474: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003248062450438738
    2. 'print' → logprob: -5.75324821472168
    3. ' print' → logprob: -9.62824821472168
    4. '       ' → logprob: -12.50324821472168
    5. '   ' → logprob: -14.62824821472168
    6. '	print' → logprob: -15.25324821472168
    7. '    ' → logprob: -16.50324821472168
    8. '  ' → logprob: -17.75324821472168
    9. '   ' → logprob: -18.00324821472168
    10. ' ' → logprob: -18.25324821472168

Token 475: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1927405297756195
    2. 'print' → logprob: -1.942740559577942
    3. ' print' → logprob: -3.4427404403686523
    4. '	print' → logprob: -11.442740440368652
    5. '       ' → logprob: -12.692740440368652
    6. '    ' → logprob: -13.692740440368652
    7. '   ' → logprob: -13.942740440368652
    8. ' ' → logprob: -15.067740440368652
    9. '  ' → logprob: -15.442740440368652
    10. '```' → logprob: -16.94274139404297

Token 476: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42041563987731934
    2. ' print' → logprob: -1.2954156398773193
    3. '   ' → logprob: -2.6704156398773193
    4. 'pr' → logprob: -9.920415878295898
    5. ' ' → logprob: -10.170415878295898
    6. '	print' → logprob: -10.170415878295898
    7. '  ' → logprob: -10.670415878295898
    8. '    ' → logprob: -10.795415878295898
    9. 'aff' → logprob: -12.295415878295898
    10. ' ' → logprob: -12.295415878295898

Token 477: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001831565605243668
    2. '(' → logprob: -8.62518310546875
    3. '('' → logprob: -13.37518310546875
    4. '"' → logprob: -14.00018310546875
    5. '("")' → logprob: -14.87518310546875
    6. '(
' → logprob: -14.87518310546875
    7. ' ("' → logprob: -16.00018310546875
    8. '()' → logprob: -16.50018310546875
    9. '"No' → logprob: -16.62518310546875
    10. 'a' → logprob: -18.25018310546875

Token 478: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0012001125141978264
    2. '"No' → logprob: -6.751200199127197
    3. ' No' → logprob: -10.751199722290039
    4. 'Yes' → logprob: -12.376199722290039
    5. '"' → logprob: -12.876199722290039
    6. 'NO' → logprob: -15.126199722290039
    7. 'N' → logprob: -15.376199722290039
    8. '   ' → logprob: -15.501199722290039
    9. '_No' → logprob: -16.62619972229004
    10. '“No' → logprob: -16.62619972229004

Token 479: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003460712905507535
    2. '")
' → logprob: -8.000346183776855
    3. '"' → logprob: -11.875346183776855
    4. ')' → logprob: -14.125346183776855
    5. '")
' → logprob: -14.125346183776855
    6. '("' → logprob: -14.375346183776855
    7. '()' → logprob: -14.500346183776855
    8. '"No' → logprob: -14.500346183776855
    9. ')")' → logprob: -15.250346183776855
    10. 'No' → logprob: -15.750346183776855

Token 480: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023303592577576637
    2. '   ' → logprob: -3.773303508758545
    3. ' print' → logprob: -9.773303985595703
    4. '	print' → logprob: -13.898303985595703
    5. '```' → logprob: -15.773303985595703
    6. 'Print' → logprob: -16.773303985595703
    7. '       ' → logprob: -18.273303985595703
    8. '.print' → logprob: -18.523303985595703
    9. '(print' → logprob: -19.898303985595703
    10. ' ' → logprob: -20.523303985595703

Token 481: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008873720653355122
    2. '   ' → logprob: -4.75887393951416
    3. ' print' → logprob: -8.25887393951416
    4. '	print' → logprob: -16.383872985839844
    5. '```' → logprob: -17.008872985839844
    6. 'Print' → logprob: -17.133872985839844
    7. '       ' → logprob: -17.383872985839844
    8. ' ' → logprob: -19.383872985839844
    9. '.print' → logprob: -19.633872985839844
    10. '  ' → logprob: -20.133872985839844

Token 482: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. '('' → logprob: -16.500009536743164
    4. '()' → logprob: -17.000009536743164
    5. '("")' → logprob: -18.375009536743164
    6. ' ("' → logprob: -20.375009536743164
    7. '(
' → logprob: -20.875009536743164
    8. '"No' → logprob: -21.875009536743164
    9. 'No' → logprob: -22.000009536743164
    10. '("""' → logprob: -22.000009536743164

Token 483: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. '"No' → logprob: -18.5
    3. ' No' → logprob: -19.875
    4. 'Yes' → logprob: -21.625
    5. 'N' → logprob: -23.5
    6. '"' → logprob: -25.0
    7. '")' → logprob: -25.375
    8. '_No' → logprob: -25.875
    9. 'NO' → logprob: -26.0
    10. '“No' → logprob: -26.25

Token 484: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.166338137816638e-05
    2. ')")' → logprob: -10.750031471252441
    3. ')' → logprob: -11.500031471252441
    4. '")
' → logprob: -17.000032424926758
    5. '"' → logprob: -18.125032424926758
    6. '')' → logprob: -18.375032424926758
    7. '()' → logprob: -18.625032424926758
    8. '}")' → logprob: -18.875032424926758
    9. ')"' → logprob: -19.500032424926758
    10. '!")' → logprob: -19.750032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 482
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 291
Précision stricte (1ère position): 28.63%
Précision adaptée (1ère position): 29.25%
Précision (top 10): 60.37%
================================================================================
