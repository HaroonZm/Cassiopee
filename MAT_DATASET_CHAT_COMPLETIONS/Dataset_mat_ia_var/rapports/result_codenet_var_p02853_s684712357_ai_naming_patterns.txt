================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_first_val, input_second_val = map(int, input().split())
result_total = 0
for current_val in [input_first_val, input_second_val]:
    if current_val == 3:
        result_total += 10**5
    elif current_val == 2:
        result_total += 2 * 10**5
    elif current_val == 1:
        result_total += 3 * 10**5
if input_first_val == 1 and input_second_val == 1:
    result_total += 4 * 10**5
print(result_total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: '_val' (ID: 13694)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5060421824455261
    2. '=' → logprob: -1.506042242050171
    3. '[' → logprob: -2.006042242050171
    4. ')' → logprob: -4.506042003631592
    5. '.' → logprob: -5.006042003631592
    6. '```' → logprob: -5.131042003631592
    7. '(' → logprob: -5.256042003631592
    8. ' =' → logprob: -5.631042003631592
    9. ']' → logprob: -6.006042003631592
    10. '_input' → logprob: -6.881042003631592

Token 4: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0612704753875732
    2. ' ' → logprob: -1.1862704753875732
    3. '_' → logprob: -1.6862704753875732
    4. ''' → logprob: -2.8112704753875732
    5. ' input' → logprob: -3.5612704753875732
    6. '`' → logprob: -3.9362704753875732
    7. '```' → logprob: -4.311270713806152
    8. ' _' → logprob: -4.686270713806152
    9. ' ,' → logprob: -4.936270713806152
    10. '_input' → logprob: -5.061270713806152

Token 5: '_second' (ID: 67724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30476969480514526
    2. '_' → logprob: -2.17976975440979
    3. '.' → logprob: -2.55476975440979
    4. '=' → logprob: -2.92976975440979
    5. ')' → logprob: -4.679769515991211
    6. ',' → logprob: -5.304769515991211
    7. ' =' → logprob: -7.054769515991211
    8. '+' → logprob: -7.179769515991211
    9. ']' → logprob: -7.304769515991211
    10. '```' → logprob: -7.429769515991211

Token 6: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02927132323384285
    2. '=' → logprob: -4.404271125793457
    3. ',' → logprob: -5.154271125793457
    4. '.' → logprob: -5.779271125793457
    5. '[' → logprob: -6.154271125793457
    6. '```' → logprob: -6.279271125793457
    7. ')' → logprob: -6.404271125793457
    8. ' =' → logprob: -7.654271125793457
    9. '_,' → logprob: -8.279271125793457
    10. '_val' → logprob: -8.904271125793457

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.596636176109314
    2. '=' → logprob: -1.346636176109314
    3. ',' → logprob: -1.846636176109314
    4. '+' → logprob: -4.0966362953186035
    5. ')' → logprob: -5.5966362953186035
    6. ' =' → logprob: -5.5966362953186035
    7. '```' → logprob: -5.8466362953186035
    8. '.' → logprob: -6.7216362953186035
    9. '[' → logprob: -7.2216362953186035
    10. '*' → logprob: -7.3466362953186035

Token 8: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49657267332077026
    2. 'input' → logprob: -1.371572732925415
    3. ' map' → logprob: -2.121572732925415
    4. 'map' → logprob: -4.496572494506836
    5. ' ' → logprob: -5.746572494506836
    6. ' int' → logprob: -6.871572494506836
    7. '0' → logprob: -7.871572494506836
    8. ' [' → logprob: -8.121572494506836
    9. ' []' → logprob: -8.121572494506836
    10. 'int' → logprob: -8.246572494506836

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012068786658346653
    2. '<|end|>' → logprob: -5.262068748474121
    3. '(lambda' → logprob: -5.387068748474121
    4. ')' → logprob: -7.887068748474121
    5. '```' → logprob: -8.012068748474121
    6. '<|end|>' → logprob: -8.137068748474121
    7. ' (' → logprob: -8.512068748474121
    8. '(user' → logprob: -9.137068748474121
    9. 'user' → logprob: -9.512068748474121
    10. '(
' → logprob: -9.762068748474121

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009331249631941319
    2. ')' → logprob: -5.259331226348877
    3. 'input' → logprob: -6.259331226348877
    4. '(' → logprob: -6.509331226348877
    5. '(user' → logprob: -8.509331703186035
    6. '```' → logprob: -9.134331703186035
    7. '[input' → logprob: -9.509331703186035
    8. ',input' → logprob: -9.884331703186035
    9. '('' → logprob: -10.259331703186035
    10. ' input' → logprob: -10.384331703186035

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20155736804008484
    2. ' input' → logprob: -1.7015573978424072
    3. ')' → logprob: -9.451557159423828
    4. '(input' → logprob: -9.701557159423828
    5. ',input' → logprob: -13.451557159423828
    6. ' )' → logprob: -14.326557159423828
    7. '=input' → logprob: -14.701557159423828
    8. '<input' → logprob: -14.826557159423828
    9. '[input' → logprob: -15.201557159423828
    10. '```' → logprob: -15.326557159423828

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4913691282272339
    2. '()' → logprob: -1.9913691282272339
    3. '('' → logprob: -1.9913691282272339
    4. '())' → logprob: -2.7413692474365234
    5. ')' → logprob: -4.616369247436523
    6. '`()' → logprob: -4.741369247436523
    7. '```' → logprob: -5.116369247436523
    8. '(()' → logprob: -5.116369247436523
    9. '("("' → logprob: -5.366369247436523
    10. '().' → logprob: -5.991369247436523

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007222028798423707
    2. 'strip' → logprob: -7.250722408294678
    3. 'rstrip' → logprob: -11.62572193145752
    4. ' split' → logprob: -13.00072193145752
    5. 'spl' → logprob: -14.37572193145752
    6. ')' → logprob: -15.25072193145752
    7. '(split' → logprob: -16.000722885131836
    8. 'startswith' → logprob: -16.375722885131836
    9. 'read' → logprob: -17.375722885131836
    10. 'replace' → logprob: -17.625722885131836

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22053255140781403
    2. ')' → logprob: -1.7205325365066528
    3. '))' → logprob: -4.470532417297363
    4. '()' → logprob: -6.095532417297363
    5. '()))' → logprob: -6.095532417297363
    6. '(' → logprob: -6.470532417297363
    7. '('' → logprob: -6.720532417297363
    8. ' ())' → logprob: -9.845532417297363
    9. '`)' → logprob: -10.220532417297363
    10. '(','' → logprob: -10.470532417297363

Token 15: 'result' (ID: 2521)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11573569476604462
    2. '+
' → logprob: -3.3657357692718506
    3. '*' → logprob: -3.9907357692718506
    4. '#' → logprob: -3.9907357692718506
    5. ')' → logprob: -5.1157355308532715
    6. '<|end|>' → logprob: -5.2407355308532715
    7. ',' → logprob: -5.3657355308532715
    8. '\n' → logprob: -5.3657355308532715
    9. 'if' → logprob: -5.6157355308532715
    10. '
' → logprob: -5.8657355308532715

Token 16: '_total' (ID: 23814)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0484994649887085
    2. '_' → logprob: -1.5484994649887085
    3. '(' → logprob: -1.6734994649887085
    4. '.' → logprob: -2.423499584197998
    5. '+' → logprob: -3.173499584197998
    6. ' =' → logprob: -3.173499584197998
    7. '=' → logprob: -3.423499584197998
    8. ')' → logprob: -4.173499584197998
    9. ' +=' → logprob: -4.673499584197998
    10. '_space' → logprob: -5.298499584197998

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5393216609954834
    2. '(' → logprob: -1.2893216609954834
    3. '=' → logprob: -2.1643216609954834
    4. ' =' → logprob: -4.5393218994140625
    5. '+' → logprob: -5.2893218994140625
    6. ')' → logprob: -5.5393218994140625
    7. ' +=' → logprob: -6.4143218994140625
    8. '()' → logprob: -6.9143218994140625
    9. '_space' → logprob: -7.0393218994140625
    10. '.' → logprob: -7.6643218994140625

Token 18: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10458963364362717
    2. 'input' → logprob: -2.4795897006988525
    3. '0' → logprob: -4.354589462280273
    4. ' ' → logprob: -5.979589462280273
    5. ' int' → logprob: -9.729589462280273
    6. 'int' → logprob: -10.979589462280273
    7. ' result' → logprob: -11.104589462280273
    8. ' sum' → logprob: -11.229589462280273
    9. 'result' → logprob: -11.354589462280273
    10. 'sum' → logprob: -11.354589462280273

Token 19: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0008740628836676478
    2. ' input' → logprob: -7.125874042510986
    3. '0' → logprob: -9.875874519348145
    4. 'int' → logprob: -11.750874519348145
    5. 'result' → logprob: -11.875874519348145
    6. '(input' → logprob: -13.500874519348145
    7. 'sum' → logprob: -13.750874519348145
    8. ' ' → logprob: -15.250874519348145
    9. 'max' → logprob: -15.875874519348145
    10. 'output' → logprob: -16.250873565673828

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6688850522041321
    2. 'for' → logprob: -1.4188849925994873
    3. ' for' → logprob: -2.6688849925994873
    4. '<|end|>' → logprob: -2.9188849925994873
    5. '```' → logprob: -3.4188849925994873
    6. '\n' → logprob: -3.5438849925994873
    7. 'if' → logprob: -4.168885231018066
    8. ' 
' → logprob: -4.418885231018066
    9. '+' → logprob: -4.918885231018066
    10. ' ' → logprob: -5.043885231018066

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05062396451830864
    2. ' for' → logprob: -3.675623893737793
    3. '
' → logprob: -4.300623893737793
    4. 'if' → logprob: -5.300623893737793
    5. '```' → logprob: -6.050623893737793
    6. '+' → logprob: -6.675623893737793
    7. '\n' → logprob: -6.925623893737793
    8. '`' → logprob: -8.300623893737793
    9. '+
' → logprob: -8.425623893737793
    10. '``' → logprob: -9.300623893737793

Token 22: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11129990220069885
    2. ' i' → logprob: -2.361299991607666
    3. '  ' → logprob: -5.236299991607666
    4. '_' → logprob: -5.361299991607666
    5. ' _' → logprob: -7.111299991607666
    6. 'i' → logprob: -9.361299514770508
    7. ' input' → logprob: -10.236299514770508
    8. ' val' → logprob: -11.111299514770508
    9. ' in' → logprob: -11.611299514770508
    10. ' ‌' → logprob: -11.611299514770508

Token 23: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29092466831207275
    2. '_val' → logprob: -1.4159246683120728
    3. ' in' → logprob: -5.540924549102783
    4. ' _' → logprob: -6.040924549102783
    5. ' ' → logprob: -6.790924549102783
    6. '_value' → logprob: -6.790924549102783
    7. '_token' → logprob: -7.790924549102783
    8. '_in' → logprob: -9.165925025939941
    9. '  ' → logprob: -9.290925025939941
    10. '_range' → logprob: -9.415925025939941

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01626884564757347
    2. 'in' → logprob: -4.141268730163574
    3. ' ' → logprob: -8.516268730163574
    4. ',' → logprob: -11.766268730163574
    5. '_' → logprob: -11.766268730163574
    6. '_in' → logprob: -12.891268730163574
    7. ' ,' → logprob: -13.016268730163574
    8. ')' → logprob: -13.141268730163574
    9. '  ' → logprob: -13.391268730163574
    10. '	in' → logprob: -13.641268730163574

Token 25: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20151390135288239
    2. 'range' → logprob: -1.7015138864517212
    3. ' input' → logprob: -9.82651424407959
    4. ' ' → logprob: -10.70151424407959
    5. 'input' → logprob: -11.45151424407959
    6. '(range' → logprob: -12.20151424407959
    7. '	range' → logprob: -12.32651424407959
    8. '  ' → logprob: -14.07651424407959
    9. ' ' → logprob: -14.57651424407959
    10. '[' → logprob: -14.82651424407959

Token 26: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014180555939674377
    2. ' input' → logprob: -4.264180660247803
    3. '<input' → logprob: -12.139180183410645
    4. '   ' → logprob: -12.639180183410645
    5. 'int' → logprob: -13.264180183410645
    6. '0' → logprob: -13.639180183410645
    7. '(input' → logprob: -14.014180183410645
    8. ',input' → logprob: -14.014180183410645
    9. ' ' → logprob: -14.264180183410645
    10. '1' → logprob: -14.389180183410645

Token 27: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -8.41866585687967e-06
    2. '_second' → logprob: -11.750008583068848
    3. '_f' → logprob: -16.25000762939453
    4. ''_' → logprob: -16.50000762939453
    5. ')_' → logprob: -17.00000762939453
    6. '_FIRST' → logprob: -17.25000762939453
    7. 'first' → logprob: -17.25000762939453
    8. 'First' → logprob: -17.25000762939453
    9. ']_' → logprob: -17.50000762939453
    10. '_' → logprob: -17.50000762939453

Token 28: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -5.943783253314905e-05
    2. '_' → logprob: -9.875059127807617
    3. ' _' → logprob: -12.125059127807617
    4. '_vals' → logprob: -13.500059127807617
    5. ''_' → logprob: -15.500059127807617
    6. ')_' → logprob: -15.625059127807617
    7. '_value' → logprob: -16.125059127807617
    8. '```' → logprob: -16.125059127807617
    9. '_second' → logprob: -16.250059127807617
    10. '_first' → logprob: -17.125059127807617

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013560713268816471
    2. ' ,' → logprob: -7.00135612487793
    3. ',input' → logprob: -7.75135612487793
    4. ',
' → logprob: -11.62635612487793
    5. ',

' → logprob: -13.12635612487793
    6. ',int' → logprob: -13.87635612487793
    7. ',current' → logprob: -14.37635612487793
    8. ' ' → logprob: -14.75135612487793
    9. ',user' → logprob: -15.87635612487793
    10. '‌,' → logprob: -16.12635612487793

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12740185856819153
    2. 'input' → logprob: -2.127401828765869
    3. ' ' → logprob: -8.502402305603027
    4. '_' → logprob: -9.752402305603027
    5. '_input' → logprob: -9.752402305603027
    6. ' ' → logprob: -10.002402305603027
    7. ''' → logprob: -10.252402305603027
    8. '"' → logprob: -11.252402305603027
    9. ' '' → logprob: -11.377402305603027
    10. ' _' → logprob: -11.502402305603027

Token 31: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.3856492842023727e-06
    2. '_first' → logprob: -14.750000953674316
    3. ')_' → logprob: -15.625000953674316
    4. 'second' → logprob: -15.875000953674316
    5. '_' → logprob: -16.375001907348633
    6. '_secondary' → logprob: -16.375001907348633
    7. '_seconds' → logprob: -16.500001907348633
    8. ' _' → logprob: -16.750001907348633
    9. ']_' → logprob: -16.875001907348633
    10. 'Second' → logprob: -16.875001907348633

Token 32: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.531315314830863e-06
    2. 'val' → logprob: -13.750003814697266
    3. '_' → logprob: -14.500003814697266
    4. ' _' → logprob: -14.625003814697266
    5. '_second' → logprob: -14.625003814697266
    6. '_VAL' → logprob: -15.500003814697266
    7. ']_' → logprob: -15.875003814697266
    8. '```' → logprob: -15.875003814697266
    9. '_vals' → logprob: -16.125003814697266
    10. 'Val' → logprob: -16.125003814697266

Token 33: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00020056030189152807
    2. ']' → logprob: -9.500200271606445
    3. ']:
' → logprob: -9.750200271606445
    4. ',' → logprob: -10.750200271606445
    5. ' ]' → logprob: -10.750200271606445
    6. '):' → logprob: -11.375200271606445
    7. ']:
' → logprob: -11.875200271606445
    8. ':' → logprob: -13.125200271606445
    9. ']):' → logprob: -13.750200271606445
    10. '"]:' → logprob: -14.000200271606445

Token 34: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.850359320640564
    2. '   ' → logprob: -1.225359320640564
    3. ' ' → logprob: -1.975359320640564
    4. ' 
' → logprob: -2.8503594398498535
    5. '    
' → logprob: -3.6003594398498535
    6. '     
' → logprob: -3.7253594398498535
    7. '```' → logprob: -4.7253594398498535
    8. '<|end|>' → logprob: -5.1003594398498535
    9. '  
' → logprob: -5.7253594398498535
    10. '   
' → logprob: -6.1003594398498535

Token 35: ' if' (ID: 538)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6808986663818359
    2. ' ' → logprob: -1.430898666381836
    3. '     
' → logprob: -2.305898666381836
    4. 'result' → logprob: -2.930898666381836
    5. ' 
' → logprob: -2.930898666381836
    6. '    
' → logprob: -4.305898666381836
    7. '   ' → logprob: -4.305898666381836
    8. ' result' → logprob: -4.680898666381836
    9. '```' → logprob: -5.805898666381836
    10. ' ```' → logprob: -6.180898666381836

Token 36: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.024766268208622932
    2. ' ' → logprob: -3.774766206741333
    3. 'current' → logprob: -6.524766445159912
    4. ' not' → logprob: -11.149765968322754
    5. '(current' → logprob: -11.274765968322754
    6. '<|end|>' → logprob: -12.649765968322754
    7. ' (' → logprob: -13.024765968322754
    8. '	current' → logprob: -13.149765968322754
    9. ' ' → logprob: -13.274765968322754
    10. ' input' → logprob: -13.274765968322754

Token 37: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.375015258789062
    3. ' _' → logprob: -13.125015258789062
    4. '_va' → logprob: -14.125015258789062
    5. '__' → logprob: -14.750015258789062
    6. '_v' → logprob: -15.125015258789062
    7. '_vals' → logprob: -16.000015258789062
    8. '_value' → logprob: -16.125015258789062
    9. '_VAL' → logprob: -16.250015258789062
    10. '##_' → logprob: -16.375015258789062

Token 38: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0588054284453392
    2. '>' → logprob: -3.308805465698242
    3. ' %' → logprob: -4.433805465698242
    4. ' >=' → logprob: -5.558805465698242
    5. ' ==' → logprob: -5.933805465698242
    6. ' <' → logprob: -7.558805465698242
    7. '%' → logprob: -7.558805465698242
    8. ' <=' → logprob: -7.808805465698242
    9. ' !=' → logprob: -8.433805465698242
    10. ' ' → logprob: -8.808805465698242

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05718320980668068
    2. '0' → logprob: -3.307183265686035
    3. ' input' → logprob: -4.557183265686035
    4. '1' → logprob: -5.432183265686035
    5. 'input' → logprob: -5.932183265686035
    6. ' current' → logprob: -7.807183265686035
    7. ' first' → logprob: -8.432183265686035
    8. ' result' → logprob: -8.807183265686035
    9. 'result' → logprob: -9.182183265686035
    10. '2' → logprob: -9.432183265686035

Token 40: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5222026705741882
    2. 'input' → logprob: -1.522202730178833
    3. ' ' → logprob: -2.022202730178833
    4. '1' → logprob: -3.397202730178833
    5. ' input' → logprob: -4.022202491760254
    6. 'result' → logprob: -7.022202491760254
    7. '2' → logprob: -7.022202491760254
    8. '3' → logprob: -7.647202491760254
    9. 'max' → logprob: -8.147202491760254
    10. 'first' → logprob: -8.522202491760254

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00042412037146277726
    2. ':
' → logprob: -8.2504243850708
    3. ' :' → logprob: -9.2504243850708
    4. ' or' → logprob: -9.7504243850708
    5. '   ' → logprob: -12.7504243850708
    6. ' and' → logprob: -13.1254243850708
    7. '    ' → logprob: -14.3754243850708
    8. ' :
' → logprob: -14.5004243850708
    9. '):' → logprob: -14.8754243850708
    10. 'or' → logprob: -14.8754243850708

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000518482003826648
    2. '   ' → logprob: -9.125518798828125
    3. '    ' → logprob: -9.250518798828125
    4. ':' → logprob: -9.750518798828125
    5. '        ' → logprob: -10.000518798828125
    6. ' ' → logprob: -10.250518798828125
    7. '      ' → logprob: -10.375518798828125
    8. '<|end|>' → logprob: -10.875518798828125
    9. '```' → logprob: -10.875518798828125
    10. '\n' → logprob: -11.125518798828125

Token 43: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045611027628183365
    2. ' continue' → logprob: -4.0456109046936035
    3. 'continue' → logprob: -4.5456109046936035
    4. 'result' (adapté à ' result') → logprob: -5.0456109046936035
    5. ' result' → logprob: -5.6706109046936035
    6. '   ' → logprob: -5.9206109046936035
    7. '           ' → logprob: -6.1706109046936035
    8. '```' → logprob: -6.9206109046936035
    9. ' break' → logprob: -8.920611381530762
    10. '        ' → logprob: -8.920611381530762

Token 44: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.625005722045898
    3. ' _' → logprob: -14.000005722045898
    4. '_final' → logprob: -14.750005722045898
    5. '```' → logprob: -15.375005722045898
    6. '_Total' → logprob: -15.500005722045898
    7. '_tot' → logprob: -15.625005722045898
    8. '_val' → logprob: -16.1250057220459
    9. 'total' → logprob: -16.2500057220459
    10. '_continue' → logprob: -16.2500057220459

Token 45: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869161903858185
    2. '+=' → logprob: -1.136916160583496
    3. '+' → logprob: -10.386916160583496
    4. '=' → logprob: -12.011916160583496
    5. ']+=' → logprob: -13.011916160583496
    6. '   ' → logprob: -13.386916160583496
    7. '+='' → logprob: -13.886916160583496
    8. ' =' → logprob: -14.261916160583496
    9. ' -=' → logprob: -14.386916160583496
    10. '    ' → logprob: -14.761916160583496

Token 46: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2975879907608032
    2. 'current' → logprob: -1.6725879907608032
    3. '5' → logprob: -2.0475878715515137
    4. '1' → logprob: -2.0475878715515137
    5. ' ' → logprob: -2.4225878715515137
    6. ' current' → logprob: -2.5475878715515137
    7. '10' → logprob: -2.9225878715515137
    8. '2' → logprob: -4.297587871551514
    9. '100' → logprob: -4.797587871551514
    10. '7' → logprob: -4.922587871551514

Token 47: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2819925546646118
    2. '5' → logprob: -1.2819925546646118
    3. 'current' → logprob: -1.2819925546646118
    4. '10' → logprob: -2.7819924354553223
    5. '1' → logprob: -3.1569924354553223
    6. '2' → logprob: -4.531992435455322
    7. '100' → logprob: -4.656992435455322
    8. '7' → logprob: -5.031992435455322
    9. '4' → logprob: -5.156992435455322
    10. '20' → logprob: -5.406992435455322

Token 48: '**' (ID: 410)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30382245779037476
    2. ' else' → logprob: -2.8038225173950195
    3. '<|end|>' → logprob: -2.8038225173950195
    4. 'else' → logprob: -3.1788225173950195
    5. '
' → logprob: -3.6788225173950195
    6. '\n' → logprob: -3.8038225173950195
    7. ' ' → logprob: -3.8038225173950195
    8. 'elif' → logprob: -4.8038225173950195
    9. '```' → logprob: -4.8038225173950195
    10. ' elif' → logprob: -6.0538225173950195

Token 49: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.895051896572113
    2. '3' → logprob: -1.5200519561767578
    3. '6' → logprob: -2.020051956176758
    4. '1' → logprob: -2.645051956176758
    5. '9' → logprob: -3.145051956176758
    6. '5' → logprob: -3.645051956176758
    7. '4' → logprob: -3.645051956176758
    8. '0' → logprob: -3.770051956176758
    9. 'current' → logprob: -3.770051956176758
    10. '8' → logprob: -4.395051956176758

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2484334707260132
    2. 'elif' → logprob: -1.2484334707260132
    3. 'else' → logprob: -1.6234334707260132
    4. ' else' → logprob: -2.3734335899353027
    5. '<|end|>' → logprob: -3.3734335899353027
    6. ' elif' → logprob: -3.4984335899353027
    7. '\n' → logprob: -3.9984335899353027
    8. '+' → logprob: -4.123433589935303
    9. ' ' → logprob: -4.873433589935303
    10. '*' → logprob: -5.123433589935303

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07113810628652573
    2. '<|end|>' → logprob: -3.8211381435394287
    3. 'elif' → logprob: -4.19613790512085
    4. 'else' → logprob: -4.44613790512085
    5. ' else' → logprob: -4.57113790512085
    6. ' ' → logprob: -5.94613790512085
    7. ' elif' → logprob: -6.07113790512085
    8. '```' → logprob: -6.94613790512085
    9. '+' → logprob: -7.19613790512085
    10. '  ' → logprob: -7.44613790512085

Token 52: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.806796669960022
    2. ' elif' → logprob: -1.806796669960022
    3. '   ' → logprob: -1.931796669960022
    4. 'else' → logprob: -2.0567965507507324
    5. ' else' → logprob: -2.4317965507507324
    6. '+' → logprob: -4.181796550750732
    7. ' ' → logprob: -5.181796550750732
    8. '<|end|>' → logprob: -5.681796550750732
    9. ')' → logprob: -6.806796550750732
    10. '  ' → logprob: -7.306796550750732

Token 53: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04936718940734863
    2. 'current' → logprob: -3.0493671894073486
    3. ' ' → logprob: -7.4243669509887695
    4. '3' → logprob: -8.92436695098877
    5. '   ' → logprob: -11.29936695098877
    6. '(current' → logprob: -11.92436695098877
    7. 'urrent' → logprob: -12.54936695098877
    8. ' not' → logprob: -12.92436695098877
    9. '1' → logprob: -13.04936695098877
    10. '    ' → logprob: -13.04936695098877

Token 54: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.869017852295656e-06
    2. 'val' → logprob: -12.750006675720215
    3. '__' → logprob: -13.375006675720215
    4. '_' → logprob: -13.750006675720215
    5. ' _' → logprob: -14.750006675720215
    6. '==' → logprob: -15.750006675720215
    7. '_VAL' → logprob: -16.25000762939453
    8. 'Val' → logprob: -16.37500762939453
    9. '_vals' → logprob: -16.50000762939453
    10. '```' → logprob: -16.62500762939453

Token 55: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.054973796010017395
    2. '==' → logprob: -2.929973840713501
    3. ' ' → logprob: -9.679973602294922
    4. ' >' → logprob: -11.929973602294922
    5. ' >=' → logprob: -12.679973602294922
    6. '=' → logprob: -12.804973602294922
    7. '>' → logprob: -13.054973602294922
    8. ' <=' → logprob: -13.304973602294922
    9. ' %' → logprob: -13.304973602294922
    10. ' <' → logprob: -13.429973602294922

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11112593114376068
    2. '2' → logprob: -2.736125946044922
    3. '4' → logprob: -4.486125946044922
    4. '3' → logprob: -4.486125946044922
    5. '1' → logprob: -4.861125946044922
    6. '5' → logprob: -5.111125946044922
    7. '7' → logprob: -6.486125946044922
    8. '0' → logprob: -6.736125946044922
    9. '6' → logprob: -6.986125946044922
    10. '9' → logprob: -8.611125946044922

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6749177575111389
    2. '5' → logprob: -1.7999176979064941
    3. '7' → logprob: -1.9249176979064941
    4. '1' → logprob: -2.424917697906494
    5. '4' → logprob: -2.924917697906494
    6. '6' → logprob: -3.674917697906494
    7. '0' → logprob: -5.549917697906494
    8. ' ' → logprob: -5.549917697906494
    9. '8' → logprob: -6.424917697906494
    10. '9' → logprob: -6.549917697906494

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021999788004904985
    2. ':
' → logprob: -6.502200126647949
    3. '       ' → logprob: -7.752200126647949
    4. ' :' → logprob: -9.25220012664795
    5. ' *' → logprob: -9.62720012664795
    6. '*' → logprob: -10.25220012664795
    7. '   ' → logprob: -10.87720012664795
    8. '**' → logprob: -11.25220012664795
    9. '        ' → logprob: -11.37720012664795
    10. '    ' → logprob: -11.50220012664795

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08256381750106812
    2. ':' → logprob: -2.832563877105713
    3. '        ' → logprob: -5.832563877105713
    4. ' +=' → logprob: -5.957563877105713
    5. ' +' → logprob: -6.082563877105713
    6. '+' → logprob: -6.207563877105713
    7. ' ' → logprob: -6.582563877105713
    8. '**' → logprob: -6.582563877105713
    9. ':
' → logprob: -6.582563877105713
    10. '10' → logprob: -6.957563877105713

Token 60: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.2114933282136917
    2. '10' → logprob: -2.0864932537078857
    3. '100' → logprob: -3.8364932537078857
    4. ' result' → logprob: -4.211493492126465
    5. '       ' → logprob: -4.586493492126465
    6. '           ' → logprob: -4.711493492126465
    7. '5' → logprob: -6.086493492126465
    8. ' ' → logprob: -6.961493492126465
    9. '   ' → logprob: -7.086493492126465
    10. '+' → logprob: -7.336493492126465

Token 61: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -5.080963092041202e-06
    2. 'total' → logprob: -12.250004768371582
    3. '_tot' → logprob: -16.2500057220459
    4. '_' → logprob: -17.0000057220459
    5. 'otal' → logprob: -17.6250057220459
    6. '+=' → logprob: -17.6250057220459
    7. 'Total' → logprob: -17.8750057220459
    8. '+' → logprob: -17.8750057220459
    9. ' +=' → logprob: -18.2500057220459
    10. '_TOTAL' → logprob: -18.5000057220459

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2254723757505417
    2. '+=' → logprob: -1.600472331047058
    3. '+' → logprob: -10.600472450256348
    4. '    ' → logprob: -11.475472450256348
    5. ' +' → logprob: -11.850472450256348
    6. ']+=' → logprob: -12.350472450256348
    7. '=' → logprob: -12.850472450256348
    8. ' ' → logprob: -13.225472450256348
    9. ' -=' → logprob: -13.475472450256348
    10. '```' → logprob: -13.475472450256348

Token 63: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06680835038423538
    2. '5' → logprob: -4.191808223724365
    3. '100' → logprob: -4.441808223724365
    4. '3' → logprob: -4.441808223724365
    5. '2' → logprob: -4.691808223724365
    6. '7' → logprob: -6.066808223724365
    7. '1' → logprob: -6.191808223724365
    8. '500' → logprob: -6.316808223724365
    9. ' ' → logprob: -6.316808223724365
    10. '6' → logprob: -6.566808223724365

Token 64: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07037284970283508
    2. '5' → logprob: -3.9453728199005127
    3. '3' → logprob: -4.320373058319092
    4. '2' → logprob: -4.445373058319092
    5. '100' → logprob: -5.195373058319092
    6. '6' → logprob: -5.695373058319092
    7. '7' → logprob: -5.820373058319092
    8. '1' → logprob: -6.320373058319092
    9. '500' → logprob: -6.570373058319092
    10. '4' → logprob: -6.945373058319092

Token 65: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35170382261276245
    2. '0' → logprob: -2.1017038822174072
    3. '5' → logprob: -2.8517038822174072
    4. ' *' → logprob: -2.9767038822174072
    5. '**' → logprob: -3.2267038822174072
    6. '000' → logprob: -4.351703643798828
    7. '10' → logprob: -5.351703643798828
    8. '3' → logprob: -6.851703643798828
    9. '50' → logprob: -6.976703643798828
    10. '500' → logprob: -6.976703643798828

Token 66: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.027829768136143684
    2. '(' → logprob: -4.652829647064209
    3. '100' → logprob: -5.027829647064209
    4. '3' → logprob: -5.652829647064209
    5. '5' → logprob: -6.277829647064209
    6. '1' → logprob: -6.402829647064209
    7. ' ' → logprob: -6.527829647064209
    8. '7' → logprob: -7.402829647064209
    9. '2' → logprob: -7.902829647064209
    10. '4' → logprob: -8.402830123901367

Token 67: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0195323433727026
    2. '(' → logprob: -4.769532203674316
    3. '100' → logprob: -5.019532203674316
    4. '3' → logprob: -6.394532203674316
    5. '5' → logprob: -7.144532203674316
    6. '500' → logprob: -7.644532203674316
    7. '2' → logprob: -8.394532203674316
    8. '1' → logprob: -8.644532203674316
    9. '4' → logprob: -9.144532203674316
    10. '7' → logprob: -9.269532203674316

Token 68: '**' (ID: 410)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.33163726329803467
    2. '3' → logprob: -1.5816372632980347
    3. '**' → logprob: -2.831637382507324
    4. '2' → logprob: -4.456637382507324
    5. '5' → logprob: -5.206637382507324
    6. '1' → logprob: -8.206637382507324
    7. '0' → logprob: -9.456637382507324
    8. '```' → logprob: -9.456637382507324
    9. '^' → logprob: -9.956637382507324
    10. ' ' → logprob: -10.331637382507324

Token 69: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03302157670259476
    2. '5' → logprob: -4.033021450042725
    3. '3' → logprob: -4.283021450042725
    4. '2' → logprob: -7.283021450042725
    5. '6' → logprob: -8.783021926879883
    6. '1' → logprob: -9.533021926879883
    7. '0' → logprob: -11.033021926879883
    8. '7' → logprob: -11.783021926879883
    9. '```' → logprob: -11.970521926879883
    10. '8' → logprob: -12.908021926879883

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021865610033273697
    2. '<|end|>' → logprob: -4.5218658447265625
    3. 'elif' → logprob: -5.8968658447265625
    4. 'else' → logprob: -5.8968658447265625
    5. ' else' → logprob: -5.8968658447265625
    6. ' elif' → logprob: -6.8968658447265625
    7. '
' → logprob: -7.6468658447265625
    8. '    
' → logprob: -8.646865844726562
    9. '	elif' → logprob: -8.646865844726562
    10. '<|end|>' → logprob: -8.771865844726562

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043501295149326324
    2. 'else' → logprob: -6.129350185394287
    3. 'elif' → logprob: -7.004350185394287
    4. ' else' → logprob: -7.129350185394287
    5. '<|end|>' → logprob: -8.879349708557129
    6. ' elif' → logprob: -9.004349708557129
    7. '```' → logprob: -10.129349708557129
    8. 'print' → logprob: -10.504349708557129
    9. ')' → logprob: -10.629349708557129
    10. '	elif' → logprob: -10.629349708557129

Token 72: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013019281439483166
    2. 'else' → logprob: -5.01301908493042
    3. ' else' → logprob: -5.63801908493042
    4. 'elif' (adapté à ' elif') → logprob: -6.13801908493042
    5. ' elif' → logprob: -7.63801908493042
    6. '<|end|>' → logprob: -11.138019561767578
    7. '```' → logprob: -11.138019561767578
    8. ' ' → logprob: -11.263019561767578
    9. '	elif' → logprob: -11.388019561767578
    10. '	else' → logprob: -11.888019561767578

Token 73: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.06237141788005829
    2. 'current' → logprob: -3.5623714923858643
    3. ' ' → logprob: -3.8123714923858643
    4. '1' → logprob: -4.687371253967285
    5. ' input' → logprob: -7.812371253967285
    6. 'input' → logprob: -9.312371253967285
    7. '   ' → logprob: -9.562371253967285
    8. '4' → logprob: -9.687371253967285
    9. '0' → logprob: -10.499871253967285
    10. '7' → logprob: -10.749871253967285

Token 74: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.001699821907095611
    2. '_first' → logprob: -7.001699924468994
    3. '_' → logprob: -7.876699924468994
    4. ' ==' → logprob: -9.001699447631836
    5. ' _' → logprob: -9.501699447631836
    6. '==' → logprob: -9.626699447631836
    7. 'val' → logprob: -10.501699447631836
    8. '__' → logprob: -10.626699447631836
    9. '_second' → logprob: -11.126699447631836
    10. '```' → logprob: -11.126699447631836

Token 75: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02340073138475418
    2. '==' → logprob: -3.7734007835388184
    3. ' ' → logprob: -8.89840030670166
    4. ' ' → logprob: -12.39840030670166
    5. ' =' → logprob: -12.52340030670166
    6. '=' → logprob: -12.52340030670166
    7. ' :' → logprob: -13.52340030670166
    8. ' ===' → logprob: -14.02340030670166
    9. ':' → logprob: -14.14840030670166
    10. ' <=' → logprob: -14.27340030670166

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44517114758491516
    2. ' ' → logprob: -1.0701711177825928
    3. '4' → logprob: -4.320171356201172
    4. '5' → logprob: -6.820171356201172
    5. '7' → logprob: -7.320171356201172
    6. '10' → logprob: -7.945171356201172
    7. '0' → logprob: -8.070171356201172
    8. 'current' → logprob: -8.945171356201172
    9. ' current' → logprob: -9.195171356201172
    10. '6' → logprob: -9.445171356201172

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025183463003486395
    2. '4' → logprob: -6.752518177032471
    3. ' ' → logprob: -6.752518177032471
    4. '0' → logprob: -9.752518653869629
    5. '5' → logprob: -9.877518653869629
    6. '7' → logprob: -10.377518653869629
    7. '6' → logprob: -11.690018653869629
    8. '10' → logprob: -11.690018653869629
    9. '9' → logprob: -12.815018653869629
    10. '8' → logprob: -13.002518653869629

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008492941851727664
    2. '       ' → logprob: -7.37584924697876
    3. ':
' → logprob: -8.875849723815918
    4. ' :' → logprob: -9.875849723815918
    5. '   ' → logprob: -10.875849723815918
    6. '*' → logprob: -13.000849723815918
    7. '+' → logprob: -13.250849723815918
    8. '**' → logprob: -13.500849723815918
    9. ' *' → logprob: -13.875849723815918
    10. '    ' → logprob: -14.000849723815918

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001998227322474122
    2. ':' → logprob: -7.376998424530029
    3. '   ' → logprob: -7.876998424530029
    4. '+' → logprob: -8.126997947692871
    5. ' +' → logprob: -8.751997947692871
    6. '0' → logprob: -9.376997947692871
    7. ' ' → logprob: -9.626997947692871
    8. ' result' → logprob: -9.876997947692871
    9. '      ' → logprob: -10.001997947692871
    10. 'result' → logprob: -10.001997947692871

Token 80: ' result' (ID: 1534)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.14462321996688843
    2. '5' → logprob: -3.519623279571533
    3. '1' → logprob: -3.769623279571533
    4. ' ' → logprob: -3.894623279571533
    5. 'result' (adapté à ' result') → logprob: -3.894623279571533
    6. '10' → logprob: -4.269623279571533
    7. '   ' → logprob: -4.769623279571533
    8. '       ' → logprob: -5.144623279571533
    9. ' result' → logprob: -5.394623279571533
    10. '4' → logprob: -5.394623279571533

Token 81: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00010831133840838447
    2. '_' → logprob: -10.50010871887207
    3. ' +=' → logprob: -10.62510871887207
    4. 'total' → logprob: -10.87510871887207
    5. '+' → logprob: -11.12510871887207
    6. ' _' → logprob: -11.87510871887207
    7. '+=' → logprob: -12.50010871887207
    8. '_TOTAL' → logprob: -12.75010871887207
    9. 'Total' → logprob: -12.87510871887207
    10. '_Total' → logprob: -13.25010871887207

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10758036375045776
    2. ' +' → logprob: -2.9825804233551025
    3. '+' → logprob: -3.3575804233551025
    4. '+=' → logprob: -4.107580184936523
    5. ' ' → logprob: -10.232580184936523
    6. '=' → logprob: -11.482580184936523
    7. ' ' → logprob: -12.357580184936523
    8. ' -=' → logprob: -12.607580184936523
    9. ' =' → logprob: -12.607580184936523
    10. '    ' → logprob: -12.732580184936523

Token 83: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4379546046257019
    2. ' ' → logprob: -1.3129546642303467
    3. '5' → logprob: -3.4379546642303467
    4. '10' → logprob: -3.5629546642303467
    5. '1' → logprob: -3.8129546642303467
    6. '4' → logprob: -7.062954425811768
    7. '0' → logprob: -7.312954425811768
    8. '2' → logprob: -7.812954425811768
    9. '7' → logprob: -8.062954902648926
    10. '100' → logprob: -8.312954902648926

Token 84: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2128688246011734
    2. '10' → logprob: -1.9628688097000122
    3. '5' → logprob: -3.7128689289093018
    4. '1' → logprob: -3.9628689289093018
    5. '7' → logprob: -6.212868690490723
    6. '4' → logprob: -6.212868690490723
    7. '2' → logprob: -7.212868690490723
    8. ' ' → logprob: -7.212868690490723
    9. '0' → logprob: -7.587868690490723
    10. '100' → logprob: -7.587868690490723

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5275970101356506
    2. '*' → logprob: -0.9025970101356506
    3. '0' → logprob: -6.652596950531006
    4. '**' → logprob: -7.027596950531006
    5. ' ' → logprob: -7.902596950531006
    6. '000' → logprob: -7.902596950531006
    7. '   ' → logprob: -8.027597427368164
    8. '2' → logprob: -8.527597427368164
    9. '```' → logprob: -8.777597427368164
    10. '5' → logprob: -8.777597427368164

Token 86: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22616402804851532
    2. ' ' → logprob: -1.6011639833450317
    3. '1' → logprob: -7.351163864135742
    4. '100' → logprob: -10.351163864135742
    5. '2' → logprob: -10.851163864135742
    6. '0' → logprob: -10.976163864135742
    7. '3' → logprob: -11.601163864135742
    8. '5' → logprob: -11.726163864135742
    9. '  ' → logprob: -12.351163864135742
    10. '(' → logprob: -12.351163864135742

Token 87: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006980192265473306
    2. ' ' → logprob: -7.750698089599609
    3. '1' → logprob: -8.37569808959961
    4. '(' → logprob: -11.37569808959961
    5. '100' → logprob: -11.50069808959961
    6. '5' → logprob: -11.75069808959961
    7. '0' → logprob: -13.00069808959961
    8. '2' → logprob: -13.12569808959961
    9. '3' → logprob: -13.50069808959961
    10. '105' → logprob: -14.62569808959961

Token 88: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08609708398580551
    2. '5' → logprob: -2.586097002029419
    3. '4' → logprob: -5.086097240447998
    4. '3' → logprob: -7.461097240447998
    5. '```' → logprob: -9.08609676361084
    6. '*' → logprob: -9.46109676361084
    7. ' **' → logprob: -9.71109676361084
    8. '6' → logprob: -9.96109676361084
    9. '0' → logprob: -10.21109676361084
    10. '2' → logprob: -10.96109676361084

Token 89: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002201763214543462
    2. '4' → logprob: -6.252201557159424
    3. '6' → logprob: -8.377202033996582
    4. '3' → logprob: -10.252202033996582
    5. '7' → logprob: -12.627202033996582
    6. '2' → logprob: -13.502202033996582
    7. '```' → logprob: -13.627202033996582
    8. '1' → logprob: -14.752202033996582
    9. '8' → logprob: -14.877202033996582
    10. '-' → logprob: -15.002202033996582

Token 90: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15043936669826508
    2. '
' → logprob: -2.4004392623901367
    3. '<|end|>' → logprob: -3.7754392623901367
    4. '\n' → logprob: -4.900439262390137
    5. '```' → logprob: -5.400439262390137
    6. '#' → logprob: -5.525439262390137
    7. ' ' → logprob: -5.650439262390137
    8. ')' → logprob: -7.025439262390137
    9. ' print' → logprob: -7.150439262390137
    10. '.' → logprob: -7.400439262390137

Token 91: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5667227506637573
    2. '\n' → logprob: -1.1917227506637573
    3. 'print' → logprob: -2.191722869873047
    4. '```' → logprob: -5.191722869873047
    5. '<|end|>' → logprob: -5.816722869873047
    6. ')' → logprob: -6.191722869873047
    7. '\' → logprob: -6.816722869873047
    8. '  
' → logprob: -7.316722869873047
    9. ':' → logprob: -7.441722869873047
    10. '#' → logprob: -7.691722869873047

Token 92: ' input' (ID: 3422)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.012103411369025707
    2. 'result' → logprob: -4.51210355758667
    3. ' input' → logprob: -7.01210355758667
    4. ' current' → logprob: -9.387103080749512
    5. ' ' → logprob: -10.012103080749512
    6. 'input' → logprob: -11.637103080749512
    7. ' len' → logprob: -12.012103080749512
    8. ' ' → logprob: -12.637103080749512
    9. '(result' → logprob: -13.137103080749512
    10. ' space' → logprob: -13.387103080749512

Token 93: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.7454879283905029
    2. '_second' → logprob: -0.8704879283905029
    3. '_' → logprob: -2.245487928390503
    4. ''_' → logprob: -7.995488166809082
    5. '_f' → logprob: -8.995488166809082
    6. ' _' → logprob: -9.120488166809082
    7. '_final' → logprob: -9.745488166809082
    8. '__' → logprob: -10.370488166809082
    9. '```' → logprob: -10.370488166809082
    10. '_total' → logprob: -10.495488166809082

Token 94: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0003005464968737215
    2. '_' → logprob: -8.125300407409668
    3. ' _' → logprob: -12.500300407409668
    4. ''_' → logprob: -15.875300407409668
    5. '_va' → logprob: -16.000301361083984
    6. '_second' → logprob: -16.125301361083984
    7. '__' → logprob: -16.375301361083984
    8. '_vals' → logprob: -16.750301361083984
    9. '```' → logprob: -17.000301361083984
    10. '##_' → logprob: -17.250301361083984

Token 95: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14028199017047882
    2. ' >' → logprob: -2.140281915664673
    3. '==' → logprob: -4.765282154083252
    4. ' !=' → logprob: -6.265282154083252
    5. ' <' → logprob: -6.640282154083252
    6. '>' → logprob: -6.890282154083252
    7. ' ' → logprob: -8.140281677246094
    8. ' <=' → logprob: -9.390281677246094
    9. ' >=' → logprob: -9.765281677246094
    10. ' =' → logprob: -11.015281677246094

Token 96: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.57850581407547
    2. ' input' → logprob: -0.82850581407547
    3. '3' → logprob: -6.078505992889404
    4. ' ' → logprob: -8.953505516052246
    5. '2' → logprob: -9.703505516052246
    6. '1' → logprob: -10.203505516052246
    7. '0' → logprob: -11.453505516052246
    8. '<input' → logprob: -11.578505516052246
    9. '4' → logprob: -11.828505516052246
    10. '10' → logprob: -12.203505516052246

Token 97: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029873479157686234
    2. ' input' → logprob: -3.5298733711242676
    3. '3' → logprob: -9.154873847961426
    4. '2' → logprob: -12.029873847961426
    5. '1' → logprob: -12.779873847961426
    6. ' ' → logprob: -12.779873847961426
    7. '<input' → logprob: -13.154873847961426
    8. '0' → logprob: -13.779873847961426
    9. '4' → logprob: -14.404873847961426
    10. '   ' → logprob: -14.904873847961426

Token 98: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0058254641480743885
    2. ':' → logprob: -5.880825519561768
    3. 'and' → logprob: -6.505825519561768
    4. ' ' → logprob: -6.880825519561768
    5. ' :' → logprob: -8.00582504272461
    6. ' or' → logprob: -9.25582504272461
    7. '    ' → logprob: -9.88082504272461
    8. ':
' → logprob: -13.00582504272461
    9. '<|end|>' → logprob: -13.38082504272461
    10. '   ' → logprob: -13.50582504272461

Token 99: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014167862012982368
    2. 'input' → logprob: -4.264167785644531
    3. ' ' → logprob: -12.764167785644531
    4. ' not' → logprob: -14.514167785644531
    5. ' current' → logprob: -15.514167785644531
    6. '   ' → logprob: -15.764167785644531
    7. ' ' → logprob: -15.764167785644531
    8. '	input' → logprob: -16.13916778564453
    9. '<input' → logprob: -16.63916778564453
    10. 'not' → logprob: -17.26416778564453

Token 100: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.250007629394531
    3. '_first' → logprob: -13.125007629394531
    4. '__' → logprob: -16.25000762939453
    5. ' _' → logprob: -16.25000762939453
    6. 'second' → logprob: -16.37500762939453
    7. '_s' → logprob: -17.00000762939453
    8. '_se' → logprob: -17.12500762939453
    9. '_seconds' → logprob: -17.12500762939453
    10. '_sec' → logprob: -17.12500762939453

Token 101: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0005974736995995045
    2. '_' → logprob: -7.5005974769592285
    3. ' _' → logprob: -11.37559700012207
    4. ''_' → logprob: -12.00059700012207
    5. '```' → logprob: -12.12559700012207
    6. '_value' → logprob: -12.62559700012207
    7. '_vals' → logprob: -12.75059700012207
    8. '_va' → logprob: -13.37559700012207
    9. '_VAL' → logprob: -13.62559700012207
    10. 'Val' → logprob: -14.00059700012207

Token 102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02626754902303219
    2. '==' → logprob: -3.7762675285339355
    3. ' ' → logprob: -5.9012675285339355
    4. ' !=' → logprob: -8.401268005371094
    5. ' ' → logprob: -10.901268005371094
    6. '<|end|>' → logprob: -11.401268005371094
    7. ' >' → logprob: -12.151268005371094
    8. '_' → logprob: -12.151268005371094
    9. '!=' → logprob: -12.276268005371094
    10. '>' → logprob: -13.151268005371094

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.432437539100647
    2. '1' → logprob: -1.057437539100647
    3. '2' → logprob: -6.182437419891357
    4. '3' → logprob: -6.557437419891357
    5. '0' → logprob: -8.682437896728516
    6. '4' → logprob: -10.307437896728516
    7. ' input' → logprob: -11.432437896728516
    8. 'input' → logprob: -11.682437896728516
    9. '  ' → logprob: -12.057437896728516
    10. ' first' → logprob: -12.557437896728516

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07320883125066757
    2. ' ' → logprob: -2.823208808898926
    3. '2' → logprob: -4.823208808898926
    4. '3' → logprob: -5.823208808898926
    5. '0' → logprob: -8.823208808898926
    6. '4' → logprob: -10.823208808898926
    7. 'input' → logprob: -13.323208808898926
    8. 'first' → logprob: -13.385708808898926
    9. ' first' → logprob: -13.635708808898926
    10. '5' → logprob: -13.635708808898926

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06998179107904434
    2. ':
' → logprob: -2.694981813430786
    3. '   ' → logprob: -10.194981575012207
    4. ' and' → logprob: -13.069981575012207
    5. ' :' → logprob: -13.069981575012207
    6. ' :
' → logprob: -13.319981575012207
    7. ':return' → logprob: -14.319981575012207
    8. ':

' → logprob: -14.319981575012207
    9. ':
' → logprob: -14.694981575012207
    10. '):
' → logprob: -15.319981575012207

Token 106: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21140561997890472
    2. '   ' → logprob: -1.711405634880066
    3. ':
' → logprob: -4.8364057540893555
    4. '       ' → logprob: -7.0864057540893555
    5. 'result' → logprob: -7.7114057540893555
    6. '
' → logprob: -8.336405754089355
    7. ',' → logprob: -9.461405754089355
    8. ' result' → logprob: -9.461405754089355
    9. '<|end|>' → logprob: -9.461405754089355
    10. '    
' → logprob: -10.711405754089355

Token 107: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.06695786863565445
    2. ' result' → logprob: -2.816957950592041
    3. '   ' → logprob: -5.316957950592041
    4. 'print' → logprob: -10.441957473754883
    5. '	result' → logprob: -11.316957473754883
    6. '
' → logprob: -11.566957473754883
    7. '```' → logprob: -11.816957473754883
    8. ' ' → logprob: -13.066957473754883
    9. '``' → logprob: -13.316957473754883
    10. '  ' → logprob: -13.566957473754883

Token 108: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.3915141355246305e-05
    2. '_' → logprob: -10.87502384185791
    3. '_final' → logprob: -12.87502384185791
    4. '_tot' → logprob: -14.75002384185791
    5. ' _' → logprob: -14.87502384185791
    6. '_Total' → logprob: -15.50002384185791
    7. 'total' → logprob: -15.62502384185791
    8. '__' → logprob: -15.75002384185791
    9. '```' → logprob: -15.75002384185791
    10. ''_' → logprob: -15.87502384185791

Token 109: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10256429761648178
    2. '+=' → logprob: -2.6025643348693848
    3. ' *=' → logprob: -3.8525643348693848
    4. '*=' → logprob: -7.227564334869385
    5. '=' → logprob: -7.602564334869385
    6. ' =' → logprob: -7.977564334869385
    7. ' ' → logprob: -8.852563858032227
    8. ' -=' → logprob: -8.852563858032227
    9. '*' → logprob: -9.102563858032227
    10. ' **' → logprob: -9.727563858032227

Token 110: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46971553564071655
    2. '5' → logprob: -1.5947155952453613
    3. '10' → logprob: -2.2197155952453613
    4. '1' → logprob: -3.4697155952453613
    5. '2' → logprob: -4.594715595245361
    6. '4' → logprob: -4.719715595245361
    7. '100' → logprob: -5.219715595245361
    8. '3' → logprob: -5.344715595245361
    9. '500' → logprob: -6.594715595245361
    10. '7' → logprob: -6.969715595245361

Token 111: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18362769484519958
    2. '5' → logprob: -2.1836276054382324
    3. '400' → logprob: -3.6836276054382324
    4. '10' → logprob: -4.183627605438232
    5. '2' → logprob: -5.058627605438232
    6. '1' → logprob: -5.683627605438232
    7. '7' → logprob: -6.558627605438232
    8. '3' → logprob: -6.558627605438232
    9. '500' → logprob: -7.433627605438232
    10. ' ' → logprob: -7.683627605438232

Token 112: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07190385460853577
    2. '
' → logprob: -3.446903944015503
    3. ' print' → logprob: -4.821903705596924
    4. '0' → logprob: -4.946903705596924
    5. ')' → logprob: -5.321903705596924
    6. '#' → logprob: -5.446903705596924
    7. '*' → logprob: -5.571903705596924
    8. '<|end|>' → logprob: -5.946903705596924
    9. ':' → logprob: -6.821903705596924
    10. '```' → logprob: -6.946903705596924

Token 113: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04307352378964424
    2. ' ' → logprob: -3.1680734157562256
    3. '100' → logprob: -10.168073654174805
    4. '1' → logprob: -11.293073654174805
    5. '(' → logprob: -11.418073654174805
    6. '0' → logprob: -12.293073654174805
    7. ' (' → logprob: -13.043073654174805
    8. '3' → logprob: -13.543073654174805
    9. '5' → logprob: -13.918073654174805
    10. '   ' → logprob: -13.918073654174805

Token 114: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020735491125378758
    2. ' ' → logprob: -8.75020694732666
    3. '1' → logprob: -11.00020694732666
    4. '(' → logprob: -11.00020694732666
    5. '100' → logprob: -11.25020694732666
    6. '0' → logprob: -13.87520694732666
    7. '   ' → logprob: -14.62520694732666
    8. '  ' → logprob: -15.25020694732666
    9. '```' → logprob: -15.37520694732666
    10. '105' → logprob: -16.125207901000977

Token 115: '**' (ID: 410)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08048054575920105
    2. '**' → logprob: -3.0804805755615234
    3. '4' → logprob: -3.8304805755615234
    4. '3' → logprob: -4.830480575561523
    5. '6' → logprob: -6.705480575561523
    6. '2' → logprob: -8.830480575561523
    7. '+' → logprob: -9.080480575561523
    8. '7' → logprob: -9.580480575561523
    9. '^' → logprob: -9.830480575561523
    10. '```' → logprob: -10.455480575561523

Token 116: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.006872610189020634
    2. '6' → logprob: -5.381872653961182
    3. '4' → logprob: -6.506872653961182
    4. '3' → logprob: -7.506872653961182
    5. '7' → logprob: -9.006872177124023
    6. '2' → logprob: -9.756872177124023
    7. '1' → logprob: -11.256872177124023
    8. '8' → logprob: -11.756872177124023
    9. '9' → logprob: -13.506872177124023
    10. ' ' → logprob: -13.756872177124023

Token 117: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08587963134050369
    2. '
' → logprob: -2.5858795642852783
    3. '\n' → logprob: -6.585879802703857
    4. '#' → logprob: -6.710879802703857
    5. ' 
' → logprob: -6.710879802703857
    6. ' print' → logprob: -6.960879802703857
    7. ')' → logprob: -7.085879802703857
    8. '<|end|>' → logprob: -7.710879802703857
    9. '```' → logprob: -8.8358793258667
    10. 'result' → logprob: -9.3358793258667

Token 118: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002940144157037139
    2. '
' → logprob: -6.0029401779174805
    3. ' print' → logprob: -7.7529401779174805
    4. '```' → logprob: -11.12794017791748
    5. '<|end|>' → logprob: -11.37794017791748
    6. ' 
' → logprob: -12.75294017791748
    7. '\n' → logprob: -13.75294017791748
    8. ')
' → logprob: -14.12794017791748
    9. ')' → logprob: -14.37794017791748
    10. '    
' → logprob: -14.62794017791748

Token 119: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740917682647705
    2. '(result' → logprob: -0.9740917682647705
    3. '('' → logprob: -12.599091529846191
    4. '()' → logprob: -13.099091529846191
    5. '(results' → logprob: -13.224091529846191
    6. '(
' → logprob: -13.474091529846191
    7. '("("' → logprob: -13.724091529846191
    8. 'result' → logprob: -14.224091529846191
    9. '((' → logprob: -14.224091529846191
    10. '(resultado' → logprob: -14.349091529846191

Token 120: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.5941604690160602e-05
    2. '_result' → logprob: -11.500025749206543
    3. '_' → logprob: -12.375025749206543
    4. '_tot' → logprob: -12.500025749206543
    5. '_t' → logprob: -12.750025749206543
    6. '_val' → logprob: -13.125025749206543
    7. ')_' → logprob: -13.500025749206543
    8. '_to' → logprob: -14.500025749206543
    9. '_final' → logprob: -15.500025749206543
    10. 't' → logprob: -16.12502670288086

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.75
    3. ')`' → logprob: -17.25
    4. ')
' → logprob: -18.75
    5. '))' → logprob: -19.125
    6. '')' → logprob: -20.5
    7. '`)' → logprob: -20.75
    8. ')#' → logprob: -21.25
    9. ')**' → logprob: -21.625
    10. ')}' → logprob: -21.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 49.58%
Précision adaptée (1ère position): 52.10%
Précision (top 10): 88.24%
================================================================================
