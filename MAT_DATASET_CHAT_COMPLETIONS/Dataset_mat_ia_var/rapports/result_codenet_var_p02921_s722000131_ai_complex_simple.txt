================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

s, t = map(lambda x: x.strip('\n'), [input(), input()])
idx = [0,1,2]
ans = reduce(add, map(lambda i: int(s[i] == t[i]), idx))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3606022894382477
    2. 'partial' → logprob: -1.3606022596359253
    3. 'reduce' → logprob: -3.610602378845215
    4. ' wraps' → logprob: -4.110602378845215
    5. 'l' → logprob: -6.735602378845215
    6. ' partial' → logprob: -7.610602378845215
    7. 'cached' → logprob: -7.985602378845215
    8. 'cmp' → logprob: -8.235602378845215
    9. 'cache' → logprob: -8.485602378845215
    10. '```' → logprob: -8.985602378845215

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06605874747037888
    2. 'import' → logprob: -2.81605863571167
    3. '.' → logprob: -5.69105863571167
    4. ' ' → logprob: -7.44105863571167
    5. ' .' → logprob: -10.066059112548828
    6. '.import' → logprob: -10.191059112548828
    7. '	import' → logprob: -11.066059112548828
    8. '_import' → logprob: -12.066059112548828
    9. '-import' → logprob: -13.316059112548828
    10. ' ,' → logprob: -13.316059112548828

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05437842011451721
    2. '(
' → logprob: -4.054378509521484
    3. ',' → logprob: -4.429378509521484
    4. '\n' → logprob: -4.679378509521484
    5. '\' → logprob: -4.804378509521484
    6. '#' → logprob: -6.679378509521484
    7. '`' → logprob: -6.679378509521484
    8. '
' → logprob: -7.679378509521484
    9. ' ' → logprob: -7.804378509521484
    10. '()' → logprob: -7.804378509521484

Token 10: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8927847146987915
    2. 'result' → logprob: -1.3927847146987915
    3. '\' → logprob: -2.142784595489502
    4. '#' → logprob: -2.767784595489502
    5. '(
' → logprob: -3.267784595489502
    6. ',' → logprob: -3.642784595489502
    7. '`' → logprob: -4.392784595489502
    8. 'a' → logprob: -4.392784595489502
    9. 'def' → logprob: -4.517784595489502
    10. '\n' → logprob: -4.517784595489502

Token 11: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.39481765031814575
    2. 'u' → logprob: -1.144817590713501
    3. 'tr' → logprob: -6.26981782913208
    4. 'et' → logprob: -6.39481782913208
    5. '```' → logprob: -7.39481782913208
    6. '(' → logprob: -7.64481782913208
    7. 'e' → logprob: -7.64481782913208
    8. 't' → logprob: -7.89481782913208
    9. '(u' → logprob: -8.144817352294922
    10. '=' → logprob: -8.519817352294922

Token 12: ' t' (ID: 260)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1915228366851807
    2. '=' → logprob: -1.3165228366851807
    3. ' t' → logprob: -1.4415228366851807
    4. ' ' → logprob: -2.4415228366851807
    5. 't' → logprob: -3.4415228366851807
    6. ' s' → logprob: -4.066522598266602
    7. '_' → logprob: -4.191522598266602
    8. ''' → logprob: -4.941522598266602
    9. '"' → logprob: -5.066522598266602
    10. 's' → logprob: -5.566522598266602

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765610337257385
    2. '=' → logprob: -0.8265610337257385
    3. '_' → logprob: -8.076560974121094
    4. ',' → logprob: -8.451560974121094
    5. ' ' → logprob: -10.326560974121094
    6. '[' → logprob: -11.451560974121094
    7. ')' → logprob: -11.576560974121094
    8. 'space' → logprob: -11.826560974121094
    9. '  ' → logprob: -11.826560974121094
    10. ' ,' → logprob: -11.951560974121094

Token 14: ' map' (ID: 4014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1284294128417969
    2. '0' → logprob: -1.3784294128417969
    3. ' [' → logprob: -2.628429412841797
    4. ' ' → logprob: -2.753429412841797
    5. '"' → logprob: -2.753429412841797
    6. ''' → logprob: -3.253429412841797
    7. '[]' → logprob: -3.628429412841797
    8. 'map' → logprob: -3.753429412841797
    9. '1' → logprob: -3.878429412841797
    10. ' []' → logprob: -4.128429412841797

Token 15: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03207433968782425
    2. '(lambda' → logprob: -4.032074451446533
    3. '(str' → logprob: -4.907074451446533
    4. '(int' → logprob: -5.157074451446533
    5. '(input' → logprob: -8.657073974609375
    6. '<|end|>' → logprob: -9.032073974609375
    7. '(user' → logprob: -9.782073974609375
    8. '(eval' → logprob: -9.907073974609375
    9. '(s' → logprob: -10.282073974609375
    10. '(...)' → logprob: -10.657073974609375

Token 16: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5092628002166748
    2. 'x' → logprob: -1.3842628002166748
    3. ' s' → logprob: -2.759262800216675
    4. 's' → logprob: -3.384262800216675
    5. 'int' → logprob: -4.134263038635254
    6. ' int' → logprob: -4.134263038635254
    7. 'str' → logprob: -4.884263038635254
    8. ' str' → logprob: -5.009263038635254
    9. ' lambda' → logprob: -6.884263038635254
    10. 'lambda' → logprob: -6.884263038635254

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011576464399695396
    2. ':int' → logprob: -4.7615766525268555
    3. ' :' → logprob: -6.1365766525268555
    4. ':x' → logprob: -7.3865766525268555
    5. ':s' → logprob: -10.511576652526855
    6. ':list' → logprob: -10.761576652526855
    7. 's' → logprob: -11.011576652526855
    8. ':str' → logprob: -11.136576652526855
    9. ':n' → logprob: -11.386576652526855
    10. 'x' → logprob: -11.386576652526855

Token 18: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1445537656545639
    2. ' int' → logprob: -2.3945536613464355
    3. 'x' → logprob: -4.0195536613464355
    4. 'list' → logprob: -4.6445536613464355
    5. ' x' → logprob: -5.5195536613464355
    6. 'str' → logprob: -5.8945536613464355
    7. 'len' → logprob: -6.1445536613464355
    8. ' list' → logprob: -6.3945536613464355
    9. 'set' → logprob: -7.1445536613464355
    10. 'ord' → logprob: -7.2695536613464355

Token 19: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.7178735136985779
    2. '.split' → logprob: -1.5928735733032227
    3. '*' → logprob: -2.5928735733032227
    4. ',' → logprob: -3.3428735733032227
    5. '**' → logprob: -3.3428735733032227
    6. '.' → logprob: -3.5928735733032227
    7. ' +' → logprob: -3.7178735733032227
    8. '[::-' → logprob: -3.7178735733032227
    9. '+' → logprob: -3.8428735733032227
    10. '.upper' → logprob: -4.217873573303223

Token 20: '('\' (ID: 24345)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09507279098033905
    2. '(','' → logprob: -2.5950727462768555
    3. '(),' → logprob: -4.3450727462768555
    4. '('' → logprob: -7.2200727462768555
    5. '),' → logprob: -7.7200727462768555
    6. ' ,' → logprob: -7.7200727462768555
    7. '(' → logprob: -7.7200727462768555
    8. '(',' → logprob: -7.9700727462768555
    9. '(","' → logprob: -8.095072746276855
    10. '('\' → logprob: -10.220072746276855

Token 21: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06855379045009613
    2. '\n' → logprob: -2.9435536861419678
    3. '''' → logprob: -5.443553924560547
    4. ''' → logprob: -5.943553924560547
    5. ' '' → logprob: -6.818553924560547
    6. '
' → logprob: -6.943553924560547
    7. 'r' → logprob: -7.193553924560547
    8. ''\' → logprob: -7.318553924560547
    9. ''),' → logprob: -7.693553924560547
    10. '0' → logprob: -7.818553924560547

Token 22: ''),' (ID: 10047)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1036497354507446
    2. ''),' → logprob: -1.2286497354507446
    3. '\n' → logprob: -1.7286497354507446
    4. '()\' → logprob: -2.353649616241455
    5. '('' → logprob: -3.103649616241455
    6. '('\' → logprob: -4.228649616241455
    7. ' '' → logprob: -4.853649616241455
    8. '),' → logprob: -4.978649616241455
    9. '\r' → logprob: -5.853649616241455
    10. ''' → logprob: -5.853649616241455

Token 23: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.042138852179050446
    2. ' input' → logprob: -3.7921388149261475
    3. 'open' → logprob: -4.042139053344727
    4. ' open' → logprob: -6.792139053344727
    5. 'sys' → logprob: -11.292139053344727
    6. 'stdin' → logprob: -11.917139053344727
    7. '(input' → logprob: -12.792139053344727
    8. '```' → logprob: -12.917139053344727
    9. '[input' → logprob: -13.667139053344727
    10. '[' → logprob: -13.792139053344727

Token 24: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.021332107484340668
    2. 'open' → logprob: -3.896332025527954
    3. ' input' → logprob: -7.771332263946533
    4. 's' → logprob: -9.146331787109375
    5. ''s' → logprob: -9.896331787109375
    6. ''' → logprob: -10.021331787109375
    7. 'sys' → logprob: -10.521331787109375
    8. '```' → logprob: -10.521331787109375
    9. ' open' → logprob: -11.146331787109375
    10. '__' → logprob: -11.271331787109375

Token 25: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3431437611579895
    2. '(' → logprob: -1.9681437015533447
    3. '()]' → logprob: -2.3431437015533447
    4. '('' → logprob: -3.5931437015533447
    5. '())' → logprob: -4.218143939971924
    6. '(),' → logprob: -4.593143939971924
    7. '()],' → logprob: -7.968143939971924
    8. '("")' → logprob: -8.343143463134766
    9. ')])' → logprob: -8.468143463134766
    10. ']()' → logprob: -8.468143463134766

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14274078607559204
    2. ' input' → logprob: -2.0177407264709473
    3. ' ' → logprob: -10.142741203308105
    4. '(input' → logprob: -11.767741203308105
    5. '   ' → logprob: -12.267741203308105
    6. '<input' → logprob: -12.517741203308105
    7. '  ' → logprob: -13.017741203308105
    8. ',input' → logprob: -13.142741203308105
    9. '	input' → logprob: -13.517741203308105
    10. '=input' → logprob: -13.642741203308105

Token 27: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2223941832780838
    2. '())' → logprob: -1.7223942279815674
    3. '()]' → logprob: -4.472393989562988
    4. ')])' → logprob: -4.722393989562988
    5. ')' → logprob: -8.597393989562988
    6. '])' → logprob: -9.097393989562988
    7. '()])
' → logprob: -9.472393989562988
    8. '()],' → logprob: -11.472393989562988
    9. '()`' → logprob: -11.597393989562988
    10. ')]' → logprob: -11.847393989562988

Token 28: 'idx' (ID: 13196)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3775176703929901
    2. 'if' → logprob: -2.0025177001953125
    3. '
' → logprob: -2.6275177001953125
    4. 'for' → logprob: -3.6275177001953125
    5. 's' → logprob: -3.7525177001953125
    6. 'res' → logprob: -4.5025177001953125
    7. ' if' → logprob: -5.3775177001953125
    8. 'a' → logprob: -5.6275177001953125
    9. '\n' → logprob: -5.6275177001953125
    10. 'n' → logprob: -5.6275177001953125

Token 29: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47200092673301697
    2. 's' → logprob: -1.9720009565353394
    3. '=' → logprob: -2.34700083732605
    4. ' =' → logprob: -2.34700083732605
    5. '1' → logprob: -3.59700083732605
    6. '(' → logprob: -4.347001075744629
    7. '0' → logprob: -6.222001075744629
    8. ' ' → logprob: -7.097001075744629
    9. ')' → logprob: -7.597001075744629
    10. ' _' → logprob: -7.847001075744629

Token 30: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061195630580186844
    2. ' ' → logprob: -3.6861956119537354
    3. '-' → logprob: -3.9361956119537354
    4. ' -' → logprob: -5.9361958503723145
    5. 'len' → logprob: -6.0611958503723145
    6. 's' → logprob: -6.1861958503723145
    7. 'next' → logprob: -6.3111958503723145
    8. '[' → logprob: -6.6861958503723145
    9. 'reduce' → logprob: -6.8111958503723145
    10. ' next' → logprob: -7.0611958503723145

Token 31: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01658053696155548
    2. 's' → logprob: -4.766580581665039
    3. ' i' → logprob: -6.016580581665039
    4. '(i' → logprob: -6.391580581665039
    5. '0' → logprob: -6.641580581665039
    6. 'len' → logprob: -7.141580581665039
    7. '*' → logprob: -8.266580581665039
    8. '-' → logprob: -8.391580581665039
    9. 't' → logprob: -8.766580581665039
    10. 'j' → logprob: -9.016580581665039

Token 32: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04912422597408295
    2. ',' → logprob: -3.049124240875244
    3. ' ]' → logprob: -8.299123764038086
    4. ' for' → logprob: -9.799123764038086
    5. ')' → logprob: -9.799123764038086
    6. '1' → logprob: -10.299123764038086
    7. ')]' → logprob: -10.924123764038086
    8. ']*' → logprob: -10.924123764038086
    9. 'for' → logprob: -11.174123764038086
    10. '0' → logprob: -11.174123764038086

Token 33: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23778152465820312
    2. ' ' → logprob: -1.6127815246582031
    3. '1' → logprob: -4.737781524658203
    4. 'len' → logprob: -6.237781524658203
    5. ' len' → logprob: -6.862781524658203
    6. '-' → logprob: -8.362781524658203
    7. ' -' → logprob: -9.112781524658203
    8. 's' → logprob: -10.050281524658203
    9. ' s' → logprob: -10.425281524658203
    10. ']' → logprob: -10.737781524658203

Token 34: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011711753904819489
    2. ' ]' → logprob: -7.251171112060547
    3. ',' → logprob: -7.751171112060547
    4. ')]' → logprob: -11.751171112060547
    5. '0' → logprob: -12.376171112060547
    6. '])' → logprob: -12.626171112060547
    7. '2' → logprob: -12.751171112060547
    8. '1' → logprob: -13.376171112060547
    9. '6' → logprob: -13.501171112060547
    10. ')' → logprob: -13.751171112060547

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19622774422168732
    2. '0' → logprob: -2.321227788925171
    3. ' ' → logprob: -3.196227788925171
    4. ']' → logprob: -3.571227788925171
    5. 'len' → logprob: -5.696227550506592
    6. '1' → logprob: -5.821227550506592
    7. '-' → logprob: -6.696227550506592
    8. 's' → logprob: -6.821227550506592
    9. ' -' → logprob: -7.321227550506592
    10. ' len' → logprob: -7.946227550506592

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04372517392039299
    2. ',' → logprob: -3.1687252521514893
    3. ' ]' → logprob: -7.41872501373291
    4. '3' → logprob: -9.54372501373291
    5. ')' → logprob: -11.54372501373291
    6. '4' → logprob: -11.79372501373291
    7. '])' → logprob: -11.91872501373291
    8. ' ,' → logprob: -12.04372501373291
    9. ')]' → logprob: -12.66872501373291
    10. ' ' → logprob: -13.04372501373291

Token 37: 'ans' (ID: 616)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7863789796829224
    2. '
' → logprob: -1.4113789796829224
    3. '[' → logprob: -2.911378860473633
    4. 'for' → logprob: -3.036378860473633
    5. ')' → logprob: -3.411378860473633
    6. 'idx' → logprob: -3.536378860473633
    7. 's' → logprob: -4.036378860473633
    8. '[idx' → logprob: -4.411378860473633
    9. '```' → logprob: -4.661378860473633
    10. ',' → logprob: -4.786378860473633

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2017105668783188
    2. '=' → logprob: -1.70171058177948
    3. ',' → logprob: -8.82671070098877
    4. '_' → logprob: -9.95171070098877
    5. ':' → logprob: -10.45171070098877
    6. 's' → logprob: -11.07671070098877
    7. ' +=' → logprob: -11.20171070098877
    8. '.' → logprob: -11.45171070098877
    9. ' ' → logprob: -11.45171070098877
    10. '[' → logprob: -11.70171070098877

Token 39: ' reduce' (ID: 10389)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.017370343208313
    2. '[]' → logprob: -1.392370343208313
    3. ' []' → logprob: -1.767370343208313
    4. ' ' → logprob: -2.2673702239990234
    5. ' [' → logprob: -3.2673702239990234
    6. '[' → logprob: -3.7673702239990234
    7. 's' → logprob: -4.517370223999023
    8. 'reduce' → logprob: -5.267370223999023
    9. ''' → logprob: -5.392370223999023
    10. '[s' → logprob: -5.517370223999023

Token 40: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.00514386547729373
    2. '(lambda' → logprob: -5.505143642425537
    3. '(' → logprob: -6.880143642425537
    4. '(operator' → logprob: -10.505144119262695
    5. 'add' → logprob: -12.380144119262695
    6. ' (' → logprob: -12.880144119262695
    7. ' add' → logprob: -13.255144119262695
    8. '```' → logprob: -16.005144119262695
    9. '((' → logprob: -16.130144119262695
    10. '	add' → logprob: -16.255144119262695

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028517382219433784
    2. ',[' → logprob: -3.653517484664917
    3. '(idx' → logprob: -7.028517246246338
    4. '[idx' → logprob: -7.903517246246338
    5. ',(' → logprob: -8.278517723083496
    6. ' ,' → logprob: -8.403517723083496
    7. '([' → logprob: -9.528517723083496
    8. ',map' → logprob: -9.528517723083496
    9. ' ,[' → logprob: -9.778517723083496
    10. ',s' → logprob: -10.278517723083496

Token 42: ' map' (ID: 4014)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.2955506145954132
    2. '[' → logprob: -2.170550584793091
    3. '[i' → logprob: -3.170550584793091
    4. 'map' → logprob: -3.420550584793091
    5. 'idx' → logprob: -4.17055082321167
    6. '[s' → logprob: -4.67055082321167
    7. 'list' → logprob: -4.79555082321167
    8. '[(' → logprob: -4.79555082321167
    9. '[
' → logprob: -5.79555082321167
    10. ')' → logprob: -5.79555082321167

Token 43: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.008825041353702545
    2. '(str' → logprob: -5.258824825286865
    3. '(int' → logprob: -6.258824825286865
    4. '(' → logprob: -6.508824825286865
    5. ' (' → logprob: -9.633825302124023
    6. '(len' → logprob: -10.258825302124023
    7. '((' → logprob: -10.758825302124023
    8. '(ord' → logprob: -11.008825302124023
    9. '(abs' → logprob: -11.633825302124023
    10. '(list' → logprob: -11.883825302124023

Token 44: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7597616910934448
    2. ' lambda' → logprob: -1.2597616910934448
    3. ' s' → logprob: -2.2597618103027344
    4. 's' → logprob: -2.7597618103027344
    5. 'x' → logprob: -3.3847618103027344
    6. ' x' → logprob: -3.7597618103027344
    7. ' i' → logprob: -4.759761810302734
    8. '(lambda' → logprob: -5.384761810302734
    9. '=lambda' → logprob: -6.259761810302734
    10. 'i' → logprob: -6.384761810302734

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022808387875556946
    2. ' :' → logprob: -3.897808313369751
    3. ':s' → logprob: -6.64780855178833
    4. 's' → logprob: -7.77280855178833
    5. ':i' → logprob: -9.022808074951172
    6. ' s' → logprob: -9.522808074951172
    7. ':int' → logprob: -9.772808074951172
    8. ',' → logprob: -10.022808074951172
    9. ':t' → logprob: -10.647808074951172
    10. '[' → logprob: -10.897808074951172

Token 46: ' int' (ID: 677)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6950411796569824
    2. '[' → logprob: -1.8200411796569824
    3. '[int' → logprob: -2.3200411796569824
    4. ' [' → logprob: -2.4450411796569824
    5. '[s' → logprob: -2.4450411796569824
    6. ' s' → logprob: -2.5700411796569824
    7. 't' → logprob: -3.1950411796569824
    8. ' str' → logprob: -3.3200411796569824
    9. '[t' → logprob: -3.3200411796569824
    10. 'str' → logprob: -3.5700411796569824

Token 47: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.052153147757053375
    2. '(t' → logprob: -3.4271531105041504
    3. 's' → logprob: -4.17715311050415
    4. '(' → logprob: -6.55215311050415
    5. 't' → logprob: -7.42715311050415
    6. '(i' → logprob: -7.55215311050415
    7. ')' → logprob: -8.927153587341309
    8. '(not' → logprob: -9.802153587341309
    9. '((' → logprob: -10.177153587341309
    10. ' ' → logprob: -10.427153587341309

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008440529345534742
    2. '[idx' → logprob: -7.3758440017700195
    3. '[' → logprob: -8.50084400177002
    4. '[int' → logprob: -12.00084400177002
    5. 'i' → logprob: -13.25084400177002
    6. 'idx' → logprob: -13.37584400177002
    7. ' [' → logprob: -13.87584400177002
    8. '[
' → logprob: -14.12584400177002
    9. '[ii' → logprob: -14.50084400177002
    10. '[x' → logprob: -15.25084400177002

Token 49: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5802200436592102
    2. ']' → logprob: -0.9552200436592102
    3. ']!=' → logprob: -3.5802199840545654
    4. ']==' → logprob: -3.9552199840545654
    5. ']),' → logprob: -5.3302202224731445
    6. '])-' → logprob: -6.5802202224731445
    7. '])+' → logprob: -7.3302202224731445
    8. ']^' → logprob: -7.7052202224731445
    9. '])*' → logprob: -7.9552202224731445
    10. ' ]' → logprob: -8.830220222473145

Token 50: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19368663430213928
    2. '==' → logprob: -2.8186867237091064
    3. '!=' → logprob: -2.8186867237091064
    4. ' !=' → logprob: -3.8186867237091064
    5. ' ==' → logprob: -4.568686485290527
    6. ')==' → logprob: -5.193686485290527
    7. ' )' → logprob: -5.443686485290527
    8. ')!=' → logprob: -5.568686485290527
    9. ')+' → logprob: -5.693686485290527
    10. '),' → logprob: -6.568686485290527

Token 51: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006772568449378014
    2. ' t' → logprob: -5.006772518157959
    3. ' ' → logprob: -10.381772994995117
    4. 's' → logprob: -11.006772994995117
    5. '   ' → logprob: -13.131772994995117
    6. '  ' → logprob: -13.506772994995117
    7. '	t' → logprob: -13.506772994995117
    8. ' s' → logprob: -13.881772994995117
    9. ''t' → logprob: -13.881772994995117
    10. '`t' → logprob: -14.319272994995117

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.625012397766113
    3. '[idx' → logprob: -13.125012397766113
    4. ')' → logprob: -14.250012397766113
    5. 'i' → logprob: -16.250011444091797
    6. ' [' → logprob: -16.375011444091797
    7. '[
' → logprob: -17.000011444091797
    8. '[j' → logprob: -17.250011444091797
    9. ']' → logprob: -17.875011444091797
    10. '```' → logprob: -18.000011444091797

Token 53: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0007289938512258232
    2. ')' → logprob: -7.500729084014893
    3. '],' → logprob: -9.875728607177734
    4. ']),' → logprob: -9.875728607177734
    5. ' ),' → logprob: -10.500728607177734
    6. ')),' → logprob: -11.875728607177734
    7. ')],' → logprob: -11.875728607177734
    8. '   ' → logprob: -12.000728607177734
    9. ' and' → logprob: -12.250728607177734
    10. ''),' → logprob: -12.375728607177734

Token 54: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6931950449943542
    2. ' idx' → logprob: -0.6931950449943542
    3. '	idx' → logprob: -10.568195343017578
    4. '[idx' → logprob: -11.568195343017578
    5. ' ' → logprob: -12.068195343017578
    6. '(idx' → logprob: -13.443195343017578
    7. '  ' → logprob: -13.818195343017578
    8. '[' → logprob: -13.818195343017578
    9. '   ' → logprob: -14.193195343017578
    10. ' [' → logprob: -14.318195343017578

Token 55: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017356324242427945
    2. ')' → logprob: -6.376735687255859
    3. '))
' → logprob: -11.25173568725586
    4. ')))' → logprob: -11.25173568725586
    5. '),' → logprob: -12.00173568725586
    6. ' ))' → logprob: -15.00173568725586
    7. ')
' → logprob: -15.12673568725586
    8. '))

' → logprob: -16.12673568725586
    9. '));' → logprob: -16.12673568725586
    10. '))+' → logprob: -17.00173568725586

Token 56: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055196959525346756
    2. '(ans' → logprob: -2.93019700050354
    3. '('' → logprob: -8.680196762084961
    4. '("("' → logprob: -10.305196762084961
    5. '(f' → logprob: -10.555196762084961
    6. '(s' → logprob: -11.180196762084961
    7. ' (' → logprob: -11.680196762084961
    8. '()' → logprob: -11.680196762084961
    9. '(`' → logprob: -11.805196762084961
    10. '(len' → logprob: -12.055196762084961

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. '))' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.125012397766113
    4. ')`' → logprob: -15.750012397766113
    5. ')
' → logprob: -17.25001335144043
    6. '`)' → logprob: -17.37501335144043
    7. ')))' → logprob: -17.87501335144043
    8. '')' → logprob: -18.62501335144043
    9. ')}' → logprob: -19.12501335144043
    10. '）' → logprob: -19.25001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 33.93%
Précision adaptée (1ère position): 33.93%
Précision (top 10): 71.43%
================================================================================
