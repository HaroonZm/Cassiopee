================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from functools import lru_cache

n, k = map(int, stdin.readline().split())
q, r = divmod(n, k)

@lru_cache(maxsize=None)
def count(x):
    return q + (1 if (x and x <= r) or (not x and r == k) else 0)

ans = sum(
    count(i) * count(-i % k) * count(-i % k)
    for i in range(k)
    if (2 * (-i % k)) % k == 0
)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.4137263298034668
    2. 'exit' → logprob: -1.7887263298034668
    3. ' exit' → logprob: -2.288726329803467
    4. ' argv' → logprob: -2.913726329803467
    5. 'import' → logprob: -4.538726329803467
    6. 'stdout' → logprob: -5.913726329803467
    7. 'path' → logprob: -7.038726329803467
    8. ' import' → logprob: -7.288726329803467
    9. 'stdin' → logprob: -7.788726329803467
    10. 'version' → logprob: -8.538726806640625

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320580840110779
    2. '.readline' → logprob: -3.5632057189941406
    3. 'for' → logprob: -4.563205718994141
    4. '\n' → logprob: -4.688205718994141
    5. '
' → logprob: -5.938205718994141
    6. 'import' → logprob: -5.938205718994141
    7. 'print' → logprob: -6.188205718994141
    8. '.read' → logprob: -6.688205718994141
    9. '```' → logprob: -7.313205718994141
    10. ',' → logprob: -7.313205718994141

Token 6: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1933308094739914
    2. 'import' → logprob: -1.9433307647705078
    3. '_import' → logprob: -3.443330764770508
    4. '_' → logprob: -8.068330764770508
    5. ' _' → logprob: -8.693330764770508
    6. ' ' → logprob: -9.568330764770508
    7. '	import' → logprob: -10.568330764770508
    8. '```' → logprob: -11.943330764770508
    9. ' импорт' → logprob: -12.943330764770508
    10. '_imp' → logprob: -13.318330764770508

Token 8: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6207711696624756
    2. ' l' → logprob: -1.4957711696624756
    3. 'reduce' → logprob: -1.8707711696624756
    4. 'wrap' → logprob: -3.2457711696624756
    5. 'partial' → logprob: -3.7457711696624756
    6. ' reduce' → logprob: -4.995771408081055
    7. 'cache' → logprob: -5.370771408081055
    8. ' wraps' → logprob: -5.495771408081055
    9. ' partial' → logprob: -5.995771408081055
    10. 'cached' → logprob: -6.620771408081055

Token 9: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -4.0722858102526516e-05
    2. 'r' → logprob: -10.375041007995605
    3. 'ruz' → logprob: -13.000041007995605
    4. 'z' → logprob: -13.125041007995605
    5. 'a' → logprob: -13.750041007995605
    6. 'u' → logprob: -14.125041007995605
    7. 'ambda' → logprob: -14.375041007995605
    8. 'rup' → logprob: -14.625041007995605
    9. 'reduce' → logprob: -15.000041007995605
    10. 'amb' → logprob: -15.125041007995605

Token 10: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.008892747573554516
    2. 'cache' → logprob: -4.75889253616333
    3. 'ache' → logprob: -8.883893013000488
    4. 'ac' → logprob: -10.383893013000488
    5. '```' → logprob: -10.758893013000488
    6. 'u' → logprob: -11.133893013000488
    7. 'c' → logprob: -11.133893013000488
    8. '_' → logprob: -11.258893013000488
    9. 'ach' → logprob: -11.883893013000488
    10. '_c' → logprob: -12.008893013000488

Token 11: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7227539420127869
    2. '\n' → logprob: -0.9727539420127869
    3. 'def' → logprob: -3.0977540016174316
    4. '
' → logprob: -3.4727540016174316
    5. '@' → logprob: -3.7227540016174316
    6. '```' → logprob: -4.597754001617432
    7. 'import' → logprob: -4.847754001617432
    8. '' → logprob: -4.847754001617432
    9. '

' → logprob: -6.472754001617432
    10. '`' → logprob: -6.472754001617432

Token 12: 'n' (ID: 77)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.013915964402258396
    2. 'd' → logprob: -4.638916015625
    3. '@
' → logprob: -6.138916015625
    4. 'def' → logprob: -7.138916015625
    5. '`' → logprob: -7.888916015625
    6. '\' → logprob: -7.888916015625
    7. '```' → logprob: -8.263916015625
    8. '@

' → logprob: -9.388916015625
    9. '\n' → logprob: -10.638916015625
    10. '@\' → logprob: -11.263916015625

Token 13: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0245018005371094
    2. ' =' → logprob: -1.1495018005371094
    3. '=' → logprob: -1.2745018005371094
    4. '_' → logprob: -3.7745018005371094
    5. '.' → logprob: -4.274501800537109
    6. ',' → logprob: -5.774501800537109
    7. '  ' → logprob: -5.899501800537109
    8. ')' → logprob: -7.274501800537109
    9. '[' → logprob: -8.52450180053711
    10. 'u' → logprob: -8.89950180053711

Token 14: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6343349814414978
    2. 'm' → logprob: -1.0093350410461426
    3. ' ' → logprob: -2.3843350410461426
    4. ' k' → logprob: -4.634335041046143
    5. 'k' → logprob: -6.009335041046143
    6. '=' → logprob: -8.384334564208984
    7. 'input' → logprob: -9.009334564208984
    8. ' input' → logprob: -9.259334564208984
    9. ' t' → logprob: -9.759334564208984
    10. ' =' → logprob: -9.759334564208984

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033682696521282196
    2. '=' → logprob: -3.4086825847625732
    3. ',' → logprob: -10.408682823181152
    4. ' ,' → logprob: -12.908682823181152
    5. '<|end|>' → logprob: -13.908682823181152
    6. ' ' → logprob: -14.158682823181152
    7. ' =",' → logprob: -14.533682823181152
    8. ')' → logprob: -14.658682823181152
    9. '=input' → logprob: -14.908682823181152
    10. ' =
' → logprob: -15.533682823181152

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002479700604453683
    2. 'map' → logprob: -6.002479553222656
    3. ' list' → logprob: -12.752479553222656
    4. ' ' → logprob: -14.252479553222656
    5. ' tuple' → logprob: -15.627479553222656
    6. ' stdin' → logprob: -15.752479553222656
    7. '	map' → logprob: -16.627479553222656
    8. 'list' → logprob: -17.002479553222656
    9. ' [' → logprob: -17.502479553222656
    10. '(map' → logprob: -18.127479553222656

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6137309670448303
    2. '(' → logprob: -0.9887309670448303
    3. '(str' → logprob: -2.6137309074401855
    4. '(lambda' → logprob: -4.9887309074401855
    5. '(stdin' → logprob: -5.6137309074401855
    6. '(input' → logprob: -6.2387309074401855
    7. 'int' → logprob: -7.9887309074401855
    8. 'str' → logprob: -8.988731384277344
    9. '(eval' → logprob: -9.238731384277344
    10. '<|end|>' → logprob: -9.988731384277344

Token 18: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.007443582639098167
    2. ',' → logprob: -5.757443428039551
    3. '(' → logprob: -6.007443428039551
    4. 'stdin' → logprob: -7.007443428039551
    5. ')' → logprob: -7.382443428039551
    6. '(st' → logprob: -9.25744342803955
    7. ',std' → logprob: -9.88244342803955
    8. ' stdin' → logprob: -10.25744342803955
    9. '(std' → logprob: -10.50744342803955
    10. '.stdin' → logprob: -11.13244342803955

Token 19: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3491973578929901
    2. ' stdin' → logprob: -1.2241973876953125
    3. '(stdin' → logprob: -7.3491973876953125
    4. 'input' → logprob: -9.724197387695312
    5. ')' → logprob: -10.724197387695312
    6. 'str' → logprob: -11.349197387695312
    7. '.stdin' → logprob: -12.099197387695312
    8. ' input' → logprob: -12.349197387695312
    9. 'int' → logprob: -13.224197387695312
    10. ' ' → logprob: -13.849197387695312

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004101673606783152
    2. '.read' → logprob: -5.504101753234863
    3. '.' → logprob: -11.379101753234863
    4. '.readlines' → logprob: -11.629101753234863
    5. ').' → logprob: -13.504101753234863
    6. ' .' → logprob: -15.129101753234863
    7. '().' → logprob: -15.379101753234863
    8. '.Read' → logprob: -15.504101753234863
    9. ')' → logprob: -16.129100799560547
    10. '.stdin' → logprob: -16.379100799560547

Token 21: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5310738682746887
    2. '().' → logprob: -1.031073808670044
    3. '()' → logprob: -2.906073808670044
    4. ')' → logprob: -8.156073570251465
    5. '()))' → logprob: -8.781073570251465
    6. '(),' → logprob: -9.656073570251465
    7. '()[' → logprob: -9.781073570251465
    8. '(' → logprob: -9.906073570251465
    9. ' ())' → logprob: -10.906073570251465
    10. '());' → logprob: -11.031073570251465

Token 22: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.015126906335353851
    2. 'split' → logprob: -4.265126705169678
    3. 'rstrip' → logprob: -7.015126705169678
    4. 'read' → logprob: -10.265127182006836
    5. ')' → logprob: -10.640127182006836
    6. ' strip' → logprob: -12.515127182006836
    7. '-strip' → logprob: -14.515127182006836
    8. '())' → logprob: -14.765127182006836
    9. '.strip' → logprob: -14.890127182006836
    10. '_strip' → logprob: -15.015127182006836

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04874792322516441
    2. '))' → logprob: -3.048748016357422
    3. '())' → logprob: -9.048748016357422
    4. '()' → logprob: -10.548748016357422
    5. ')))' → logprob: -11.798748016357422
    6. '()))' → logprob: -12.173748016357422
    7. '(' → logprob: -13.173748016357422
    8. '),' → logprob: -14.173748016357422
    9. ' )' → logprob: -15.298748016357422
    10. '`)' → logprob: -15.673748016357422

Token 24: 'q' (ID: 80)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0611305832862854
    2. '
' → logprob: -3.3111305236816406
    3. 'a' → logprob: -4.936130523681641
    4. 'dp' → logprob: -5.936130523681641
    5. '```' → logprob: -6.186130523681641
    6. 'def' → logprob: -6.311130523681641
    7. '

' → logprob: -6.686130523681641
    8. '
' → logprob: -6.811130523681641
    9. 'x' → logprob: -6.936130523681641
    10. 'data' → logprob: -7.436130523681641

Token 25: ',' (ID: 11)
  Prédit: 'uer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.5623853802680969
    2. 'ue' → logprob: -1.9373853206634521
    3. 'u' → logprob: -2.187385320663452
    4. ' =' → logprob: -2.187385320663452
    5. '=' → logprob: -3.312385320663452
    6. 'ual' → logprob: -4.937385559082031
    7. 'ues' → logprob: -5.437385559082031
    8. 'uers' → logprob: -5.937385559082031
    9. 'uries' → logprob: -6.687385559082031
    10. '=[]' → logprob: -6.687385559082031

Token 26: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.762798547744751
    2. ' r' → logprob: -1.637798547744751
    3. '=' → logprob: -2.262798547744751
    4. 'a' → logprob: -3.012798547744751
    5. ' =' → logprob: -3.637798547744751
    6. 'm' → logprob: -3.762798547744751
    7. ' a' → logprob: -4.262798309326172
    8. 'p' → logprob: -4.262798309326172
    9. 's' → logprob: -4.387798309326172
    10. 'x' → logprob: -4.762798309326172

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033651694655418396
    2. '=' → logprob: -3.40865159034729
    3. ',' → logprob: -12.408651351928711
    4. ' ' → logprob: -13.658651351928711
    5. ')' → logprob: -14.783651351928711
    6. 's' → logprob: -16.53365135192871
    7. ' ,' → logprob: -16.90865135192871
    8. '  ' → logprob: -17.40865135192871
    9. ' ' → logprob: -17.78365135192871
    10. 'space' → logprob: -18.15865135192871

Token 28: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.11290472000837326
    2. ' div' → logprob: -2.2379047870635986
    3. 'n' → logprob: -10.36290454864502
    4. ' n' → logprob: -10.36290454864502
    5. ' ' → logprob: -11.73790454864502
    6. 'k' → logprob: -12.36290454864502
    7. '	div' → logprob: -13.48790454864502
    8. ' k' → logprob: -13.61290454864502
    9. '<div' → logprob: -13.73790454864502
    10. '(div' → logprob: -14.11290454864502

Token 29: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.1318875446449965e-05
    2. 'ision' → logprob: -10.375041007995605
    3. 'ide' → logprob: -11.750041007995605
    4. 'n' → logprob: -13.875041007995605
    5. '(n' → logprob: -14.875041007995605
    6. 'q' → logprob: -15.125041007995605
    7. 'div' → logprob: -15.500041007995605
    8. 'ect' → logprob: -16.125041961669922
    9. 'mode' → logprob: -16.625041961669922
    10. ' mod' → logprob: -17.000041961669922

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2842291593551636
    2. '(k' → logprob: -1.5342291593551636
    3. 'n' → logprob: -3.784229278564453
    4. 'k' → logprob: -5.284229278564453
    5. '(' → logprob: -5.534229278564453
    6. ' (' → logprob: -10.784229278564453
    7. ' n' → logprob: -11.409229278564453
    8. ' k' → logprob: -13.409229278564453
    9. ')n' → logprob: -13.784229278564453
    10. ')' → logprob: -14.159229278564453

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021637573838233948
    2. ',k' → logprob: -4.271637439727783
    3. ' k' → logprob: -5.771637439727783
    4. ' ,' → logprob: -6.146637439727783
    5. 'k' → logprob: -6.146637439727783
    6. '-k' → logprob: -11.396637916564941
    7. ',n' → logprob: -11.646637916564941
    8. '-' → logprob: -11.896637916564941
    9. ' ' → logprob: -12.521637916564941
    10. '1' → logprob: -12.646637916564941

Token 32: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804263845086098
    2. ' k' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.663043022155762
    4. ')' → logprob: -14.913043022155762
    5. '10' → logprob: -16.538042068481445
    6. '(k' → logprob: -16.663042068481445
    7. '	k' → logprob: -16.788042068481445
    8. ' ' → logprob: -17.288042068481445
    9. '2' → logprob: -17.538042068481445
    10. '   ' → logprob: -17.788042068481445

Token 33: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.875008583068848
    3. '))' → logprob: -14.875008583068848
    4. '+' → logprob: -15.250008583068848
    5. ')n' → logprob: -15.375008583068848
    6. ' )' → logprob: -16.37500762939453
    7. '),' → logprob: -16.62500762939453
    8. ')`' → logprob: -17.00000762939453
    9. '```' → logprob: -17.12500762939453
    10. '')' → logprob: -17.12500762939453

Token 34: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.006121348589658737
    2. 'print' → logprob: -6.5061211585998535
    3. 'dp' → logprob: -6.7561211585998535
    4. 'def' → logprob: -7.1311211585998535
    5. 'result' → logprob: -7.6311211585998535
    6. 'for' → logprob: -8.131121635437012
    7. 'if' → logprob: -8.131121635437012
    8. 's' → logprob: -8.881121635437012
    9. 'l' → logprob: -9.131121635437012
    10. 'total' → logprob: -9.256121635437012

Token 35: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. '```' → logprob: -20.625
    3. ' l' → logprob: -20.75
    4. '@' → logprob: -22.375
    5. 'staticmethod' → logprob: -22.625
    6. '`' → logprob: -24.0
    7. 'classmethod' → logprob: -24.125
    8. '1' → logprob: -24.5
    9. 'lr' → logprob: -24.875
    10. '	l' → logprob: -25.375

Token 36: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006344011635519564
    2. 'ru' → logprob: -7.37563419342041
    3. '```' → logprob: -12.87563419342041
    4. '@' → logprob: -13.37563419342041
    5. '	r' → logprob: -14.37563419342041
    6. 'ру' → logprob: -15.43813419342041
    7. 'rule' → logprob: -15.56313419342041
    8. '`' → logprob: -15.62563419342041
    9. 'ruby' → logprob: -15.87563419342041
    10. '#' → logprob: -16.125635147094727

Token 37: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00031818498973734677
    2. '_cached' → logprob: -8.62531852722168
    3. 'cache' → logprob: -9.00031852722168
    4. '_' → logprob: -11.87531852722168
    5. '_c' → logprob: -12.62531852722168
    6. 'c' → logprob: -13.62531852722168
    7. 'cached' → logprob: -13.62531852722168
    8. 'Cache' → logprob: -14.37531852722168
    9. ' _' → logprob: -14.62531852722168
    10. '```' → logprob: -15.50031852722168

Token 38: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034459952265024185
    2. '()' → logprob: -4.034460067749023
    3. '()
' → logprob: -5.159460067749023
    4. '(' → logprob: -5.409460067749023
    5. '(None' → logprob: -5.784460067749023
    6. '
' → logprob: -6.784460067749023
    7. '(max' → logprob: -7.409460067749023
    8. '(def' → logprob: -7.659460067749023
    9. '(n' → logprob: -8.159460067749023
    10. ' def' → logprob: -9.284460067749023

Token 39: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6678380966186523
    2. '_size' → logprob: -0.7928380966186523
    3. ')' → logprob: -4.792838096618652
    4. '=None' → logprob: -4.792838096618652
    5. '=' → logprob: -4.917838096618652
    6. '_' → logprob: -5.792838096618652
    7. '_cache' → logprob: -5.792838096618652
    8. '=_' → logprob: -6.542838096618652
    9. '_)' → logprob: -7.417838096618652
    10. '_=' → logprob: -7.667838096618652

Token 40: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.10021615028381348
    2. '=' → logprob: -2.3502161502838135
    3. 'None' → logprob: -11.850215911865234
    4. '=

' → logprob: -13.600215911865234
    5. '=
' → logprob: -15.725215911865234
    6. '(None' → logprob: -15.725215911865234
    7. '=-' → logprob: -15.850215911865234
    8. '=int' → logprob: -15.975215911865234
    9. '=`' → logprob: -16.100215911865234
    10. ')' → logprob: -16.475215911865234

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019621781539171934
    2. ')
' → logprob: -6.251962184906006
    3. 'def' → logprob: -10.501961708068848
    4. '):' → logprob: -13.251961708068848
    5. ')`' → logprob: -14.251961708068848
    6. ')
' → logprob: -14.501961708068848
    7. ' )' → logprob: -14.626961708068848
    8. '):
' → logprob: -14.751961708068848
    9. '`)' → logprob: -14.876961708068848
    10. ')return' → logprob: -15.251961708068848

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.133198283147067e-05
    2. '
' → logprob: -10.000051498413086
    3. '(def' → logprob: -13.750051498413086
    4. ' def' → logprob: -13.750051498413086
    5. 'd' → logprob: -14.000051498413086
    6. '```' → logprob: -14.000051498413086
    7. 'de' → logprob: -14.375051498413086
    8. '\' → logprob: -15.000051498413086
    9. '()
' → logprob: -15.000051498413086
    10. '1' → logprob: -16.000051498413086

Token 43: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2256431579589844
    2. 'f' → logprob: -1.6006431579589844
    3. 'dp' → logprob: -1.6006431579589844
    4. 'ways' → logprob: -2.1006431579589844
    5. 'solve' → logprob: -2.9756431579589844
    6. 'dfs' → logprob: -3.2256431579589844
    7. 'comb' → logprob: -3.4756431579589844
    8. 'fib' → logprob: -3.8506431579589844
    9. ' ways' → logprob: -4.975643157958984
    10. 'com' → logprob: -5.475643157958984

Token 44: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39900586009025574
    2. '_' → logprob: -1.5240058898925781
    3. '_sub' → logprob: -3.024005889892578
    4. '_part' → logprob: -4.524005889892578
    5. '_sequences' → logprob: -4.649005889892578
    6. '_paths' → logprob: -5.149005889892578
    7. '_div' → logprob: -5.149005889892578
    8. '(i' → logprob: -5.399005889892578
    9. '_parts' → logprob: -5.399005889892578
    10. '_s' → logprob: -6.149005889892578

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07866106182336807
    2. ',' → logprob: -2.7036609649658203
    3. ')' → logprob: -5.32866096496582
    4. '+' → logprob: -6.70366096496582
    5. ':' → logprob: -6.82866096496582
    6. '-' → logprob: -7.57866096496582
    7. ' ):' → logprob: -7.70366096496582
    8. '):
' → logprob: -8.32866096496582
    9. ' ,' → logprob: -10.07866096496582
    10. '=' → logprob: -10.20366096496582

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14644668996334076
    2. '   ' → logprob: -2.396446704864502
    3. '(' → logprob: -4.146446704864502
    4. 'if' → logprob: -4.896446704864502
    5. ' if' → logprob: -5.146446704864502
    6. ':
' → logprob: -5.146446704864502
    7. ' ' → logprob: -5.646446704864502
    8. '):' → logprob: -6.771446704864502
    9. ')' → logprob: -6.896446704864502
    10. ':return' → logprob: -7.146446704864502

Token 47: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7520371079444885
    2. ' if' → logprob: -0.7520371079444885
    3. '0' → logprob: -4.002037048339844
    4. '   ' → logprob: -4.002037048339844
    5. ' ' → logprob: -4.377037048339844
    6. ')' → logprob: -5.627037048339844
    7. '1' → logprob: -6.502037048339844
    8. 'i' → logprob: -7.627037048339844
    9. '    ' → logprob: -7.877037048339844
    10. ' 
' → logprob: -8.002037048339844

Token 48: ' q' (ID: 2335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7155699729919434
    2. '0' → logprob: -1.5905699729919434
    3. 'count' → logprob: -1.5905699729919434
    4. 'x' → logprob: -2.5905699729919434
    5. '(' → logprob: -4.465569972991943
    6. ' ' → logprob: -5.465569972991943
    7. '(x' → logprob: -6.090569972991943
    8. ' x' → logprob: -6.215569972991943
    9. ' count' → logprob: -6.340569972991943
    10. 'max' → logprob: -6.340569972991943

Token 49: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9975689649581909
    2. '+' → logprob: -1.247568964958191
    3. ' *' → logprob: -1.497568964958191
    4. ' +' → logprob: -2.4975690841674805
    5. 'if' → logprob: -3.9975690841674805
    6. ' if' → logprob: -4.4975690841674805
    7. '*x' → logprob: -5.9975690841674805
    8. '**' → logprob: -6.6225690841674805
    9. '*(' → logprob: -7.2475690841674805
    10. 'x' → logprob: -7.2475690841674805

Token 50: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4448541402816772
    2. '(' → logprob: -1.5698541402816772
    3. '(r' → logprob: -1.5698541402816772
    4. '1' → logprob: -1.5698541402816772
    5. '(int' → logprob: -2.569854259490967
    6. ' (' → logprob: -3.069854259490967
    7. 'int' → logprob: -4.944854259490967
    8. '(q' → logprob: -5.194854259490967
    9. 'r' → logprob: -6.194854259490967
    10. '(min' → logprob: -7.319854259490967

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08400967717170715
    2. 'x' → logprob: -2.5840096473693848
    3. ' ' → logprob: -6.459009647369385
    4. ' x' → logprob: -6.459009647369385
    5. '(x' → logprob: -6.959009647369385
    6. 'int' → logprob: -7.584009647369385
    7. 'r' → logprob: -7.959009647369385
    8. ' int' → logprob: -9.709010124206543
    9. '(' → logprob: -10.709010124206543
    10. ' (' → logprob: -10.834010124206543

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012539089657366276
    2. 'if' → logprob: -4.387538909912109
    3. ')' → logprob: -10.76253890991211
    4. '<=' → logprob: -13.13753890991211
    5. ' ' → logprob: -13.63753890991211
    6. '*' → logprob: -13.88753890991211
    7. ' <=' → logprob: -14.38753890991211
    8. ' *' → logprob: -14.51253890991211
    9. '>' → logprob: -14.88753890991211
    10. '>=' → logprob: -14.88753890991211

Token 53: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22726568579673767
    2. ' x' → logprob: -1.60226571559906
    3. 'r' → logprob: -6.60226583480835
    4. ' r' → logprob: -7.85226583480835
    5. '(x' → logprob: -9.727265357971191
    6. ' (' → logprob: -10.977265357971191
    7. ' ' → logprob: -11.227265357971191
    8. ' ' → logprob: -12.727265357971191
    9. '(' → logprob: -13.477265357971191
    10. ')' → logprob: -13.602265357971191

Token 54: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05476514622569084
    2. ' x' → logprob: -3.054765224456787
    3. 'r' → logprob: -5.179765224456787
    4. ' r' → logprob: -7.679765224456787
    5. '(x' → logprob: -10.429764747619629
    6. ' ' → logprob: -11.929764747619629
    7. ')' → logprob: -11.929764747619629
    8. ')x' → logprob: -12.304764747619629
    9. ' (' → logprob: -12.429764747619629
    10. '0' → logprob: -13.304764747619629

Token 55: ' and' (ID: 326)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4878339469432831
    2. ' <' → logprob: -1.1128339767456055
    3. '%' → logprob: -3.2378339767456055
    4. ' %' → logprob: -4.7378339767456055
    5. ' ' → logprob: -5.8628339767456055
    6. '<=' → logprob: -6.1128339767456055
    7. ' <=' → logprob: -6.2378339767456055
    8. ')' → logprob: -6.7378339767456055
    9. '>=' → logprob: -8.112833976745605
    10. ' >=' → logprob: -8.737833976745605

Token 56: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27388498187065125
    2. ' x' → logprob: -1.5238850116729736
    3. 'r' → logprob: -4.0238847732543945
    4. ' r' → logprob: -5.7738847732543945
    5. ' (' → logprob: -8.148884773254395
    6. '(x' → logprob: -8.273884773254395
    7. ')' → logprob: -9.773884773254395
    8. ' ' → logprob: -9.898884773254395
    9. '(' → logprob: -11.273884773254395
    10. '  ' → logprob: -11.898884773254395

Token 57: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6870816946029663
    2. ' <=' → logprob: -1.5620816946029663
    3. '<' → logprob: -2.312081813812256
    4. '%' → logprob: -2.437081813812256
    5. ' %' → logprob: -2.812081813812256
    6. ' <' → logprob: -3.812081813812256
    7. '-' → logprob: -4.437081813812256
    8. '>=' → logprob: -6.187081813812256
    9. '>' → logprob: -6.562081813812256
    10. ' ' → logprob: -6.937081813812256

Token 58: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008626867085695267
    2. ' r' → logprob: -4.758626937866211
    3. ')' → logprob: -12.133626937866211
    4. ' ' → logprob: -12.383626937866211
    5. ' ' → logprob: -14.696126937866211
    6. '  ' → logprob: -14.821126937866211
    7. '<|end|>' → logprob: -14.883626937866211
    8. '   ' → logprob: -15.633626937866211
    9. '	r' → logprob: -15.821126937866211
    10. '>' → logprob: -16.38362693786621

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006135687232017517
    2. ' else' → logprob: -5.2561354637146
    3. ' )' → logprob: -7.1311354637146
    4. 'else' → logprob: -9.506135940551758
    5. '-' → logprob: -11.631135940551758
    6. ' and' → logprob: -11.881135940551758
    7. '))' → logprob: -12.256135940551758
    8. ' ' → logprob: -13.631135940551758
    9. 'and' → logprob: -13.756135940551758
    10. '*' → logprob: -14.631135940551758

Token 60: ' or' (ID: 503)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0033041429705917835
    2. 'else' → logprob: -5.7533040046691895
    3. ')' → logprob: -9.253304481506348
    4. '-' → logprob: -10.753304481506348
    5. ' and' → logprob: -13.003304481506348
    6. ' )' → logprob: -13.003304481506348
    7. ' ' → logprob: -13.128304481506348
    8. ' els' → logprob: -14.503304481506348
    9. '+' → logprob: -14.628304481506348
    10. '	else' → logprob: -14.878304481506348

Token 61: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.41243600845336914
    2. 'x' → logprob: -1.2874360084533691
    3. ' (' → logprob: -3.162436008453369
    4. '(x' → logprob: -4.162436008453369
    5. '(' → logprob: -6.912436008453369
    6. '0' → logprob: -7.037436008453369
    7. ' ' → logprob: -7.287436008453369
    8. ' False' → logprob: -8.412435531616211
    9. ' not' → logprob: -8.537435531616211
    10. 'r' → logprob: -8.662435531616211

Token 62: 'not' (ID: 2878)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1443106085062027
    2. ' x' → logprob: -2.019310712814331
    3. '(x' → logprob: -7.269310474395752
    4. ' (' → logprob: -8.26931095123291
    5. ' not' → logprob: -8.51931095123291
    6. '0' → logprob: -8.89431095123291
    7. 'r' → logprob: -9.51931095123291
    8. ' ' → logprob: -9.64431095123291
    9. 'k' → logprob: -9.76931095123291
    10. ' r' → logprob: -10.76931095123291

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25296998023986816
    2. ' x' → logprob: -1.5029699802398682
    3. '(x' → logprob: -7.752969741821289
    4. 'r' → logprob: -8.002969741821289
    5. ' r' → logprob: -9.127969741821289
    6. ' not' → logprob: -9.877969741821289
    7. ' (' → logprob: -10.627969741821289
    8. ')' → logprob: -10.877969741821289
    9. '0' → logprob: -10.877969741821289
    10. ')x' → logprob: -11.627969741821289

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13810987770557404
    2. 'and' → logprob: -2.1381099224090576
    3. ')' → logprob: -4.5131096839904785
    4. ' else' → logprob: -9.888110160827637
    5. '<|end|>' → logprob: -10.013110160827637
    6. ' or' → logprob: -11.263110160827637
    7. '<|end|>' → logprob: -11.638110160827637
    8. ' ' → logprob: -12.138110160827637
    9. ' )' → logprob: -12.138110160827637
    10. 'else' → logprob: -12.263110160827637

Token 65: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4135810136795044
    2. ' r' → logprob: -1.5385810136795044
    3. '0' → logprob: -2.913580894470215
    4. '1' → logprob: -3.913580894470215
    5. 'x' → logprob: -4.413580894470215
    6. ' ' → logprob: -4.413580894470215
    7. 'k' → logprob: -5.163580894470215
    8. ' x' → logprob: -5.288580894470215
    9. ' n' → logprob: -5.413580894470215
    10. ' k' → logprob: -5.788580894470215

Token 66: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2122483104467392
    2. ' else' → logprob: -2.4622483253479004
    3. ')' → logprob: -2.8372483253479004
    4. 'else' → logprob: -3.5872483253479004
    5. ' >' → logprob: -4.0872483253479
    6. '!=' → logprob: -7.0872483253479
    7. '==' → logprob: -7.0872483253479
    8. ')>' → logprob: -7.5872483253479
    9. '>=' → logprob: -7.8372483253479
    10. 'and' → logprob: -9.462247848510742

Token 67: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1859719604253769
    2. '0' → logprob: -1.810971975326538
    3. ' k' → logprob: -5.185971736907959
    4. ' ' → logprob: -7.435971736907959
    5. 'q' → logprob: -11.935972213745117
    6. '   ' → logprob: -12.998472213745117
    7. 'r' → logprob: -13.185972213745117
    8. ')' → logprob: -13.248472213745117
    9. '  ' → logprob: -13.373472213745117
    10. ' ' → logprob: -13.623472213745117

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013731015846133232
    2. ' else' → logprob: -4.638731002807617
    3. 'else' → logprob: -5.888731002807617
    4. ' )' → logprob: -7.638731002807617
    5. '-' → logprob: -8.138731002807617
    6. '>' → logprob: -9.388731002807617
    7. ' and' → logprob: -9.513731002807617
    8. ' ' → logprob: -10.013731002807617
    9. '))' → logprob: -10.138731002807617
    10. '0' → logprob: -10.388731002807617

Token 69: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016942648217082024
    2. 'else' → logprob: -4.141942501068115
    3. ')' → logprob: -7.016942501068115
    4. ' ' → logprob: -12.766942977905273
    5. ' )' → logprob: -13.141942977905273
    6. '0' → logprob: -13.641942977905273
    7. '-' → logprob: -14.016942977905273
    8. ' and' → logprob: -14.141942977905273
    9. '),' → logprob: -14.766942977905273
    10. 'e' → logprob: -15.016942977905273

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16204403340816498
    2. ' ' → logprob: -2.287044048309326
    3. '1' → logprob: -3.037044048309326
    4. ')' → logprob: -10.537043571472168
    5. '   ' → logprob: -11.349543571472168
    6. '  ' → logprob: -12.599543571472168
    7. '2' → logprob: -13.412043571472168
    8. '+' → logprob: -14.099543571472168
    9. '    ' → logprob: -14.224543571472168
    10. '```' → logprob: -14.224543571472168

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030900631099939346
    2. ' ' → logprob: -8.125308990478516
    3. '1' → logprob: -11.625308990478516
    4. '   ' → logprob: -13.250308990478516
    5. ')' → logprob: -13.687808990478516
    6. '  ' → logprob: -15.812808990478516
    7. '```' → logprob: -16.750308990478516
    8. '
' → logprob: -16.937808990478516
    9. '-' → logprob: -16.937808990478516
    10. '    ' → logprob: -17.000308990478516

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.061676347395405e-05
    2. ')
' → logprob: -10.62505054473877
    3. ' )' → logprob: -11.37505054473877
    4. '))' → logprob: -11.50005054473877
    5. ')return' → logprob: -13.00005054473877
    6. ')))' → logprob: -14.25005054473877
    7. ')x' → logprob: -15.12505054473877
    8. ')#' → logprob: -15.75005054473877
    9. '),' → logprob: -16.000051498413086
    10. '')' → logprob: -16.250051498413086

Token 73: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03836298733949661
    2. '=' → logprob: -3.288362979888916
    3. ' +=' → logprob: -9.163363456726074
    4. ',' → logprob: -9.663363456726074
    5. 's' → logprob: -10.163363456726074
    6. ' ' → logprob: -10.538363456726074
    7. '_' → logprob: -10.913363456726074
    8. '[' → logprob: -11.163363456726074
    9. ')' → logprob: -11.663363456726074
    10. '=[]' → logprob: -11.913363456726074

Token 75: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7510542273521423
    2. ' ' → logprob: -2.376054286956787
    3. 'q' → logprob: -2.501054286956787
    4. 'sum' → logprob: -2.876054286956787
    5. 'k' → logprob: -3.126054286956787
    6. ' sum' → logprob: -3.376054286956787
    7. '1' → logprob: -3.501054286956787
    8. 'n' → logprob: -3.626054286956787
    9. ' q' → logprob: -3.751054286956787
    10. ' n' → logprob: -3.876054286956787

Token 76: '(
' (ID: 1607)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.08380337804555893
    2. '(' → logprob: -2.583803415298462
    3. '(range' → logprob: -6.833803176879883
    4. '(x' → logprob: -7.083803176879883
    5. '((' → logprob: -7.083803176879883
    6. '(i' → logprob: -7.458803176879883
    7. '(
' → logprob: -8.083803176879883
    8. '(min' → logprob: -8.583803176879883
    9. '(k' → logprob: -8.708803176879883
    10. '(max' → logprob: -8.833803176879883

Token 77: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.020560456439852715
    2. '(count' → logprob: -4.770560264587402
    3. '1' → logprob: -5.395560264587402
    4. '(' → logprob: -6.020560264587402
    5. ' count' → logprob: -6.770560264587402
    6. 'k' → logprob: -7.020560264587402
    7. '(i' → logprob: -7.770560264587402
    8. 'i' → logprob: -7.895560264587402
    9. 'n' → logprob: -8.270560264587402
    10. 'x' → logprob: -8.395560264587402

Token 78: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.059648849070072174
    2. '(count' → logprob: -4.0596489906311035
    3. ' count' → logprob: -4.3096489906311035
    4. '(' → logprob: -5.5596489906311035
    5. 'min' → logprob: -5.5596489906311035
    6. 'k' → logprob: -5.6846489906311035
    7. '1' → logprob: -5.9346489906311035
    8. '   ' → logprob: -6.3096489906311035
    9. 'max' → logprob: -6.4346489906311035
    10. ')' → logprob: -6.4346489906311035

Token 79: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10750863701105118
    2. '(x' → logprob: -2.357508659362793
    3. '(' → logprob: -5.857508659362793
    4. '(a' → logprob: -6.732508659362793
    5. '(k' → logprob: -6.982508659362793
    6. '(j' → logprob: -7.607508659362793
    7. '(int' → logprob: -7.732508659362793
    8. '((' → logprob: -7.857508659362793
    9. '(n' → logprob: -7.982508659362793
    10. '(stdin' → logprob: -8.982508659362793

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006638513877987862
    2. ')*' → logprob: -5.881638526916504
    3. ')**' → logprob: -6.131638526916504
    4. ' *' → logprob: -7.256638526916504
    5. '*' → logprob: -8.006638526916504
    6. '-' → logprob: -9.006638526916504
    7. ' )' → logprob: -9.006638526916504
    8. '**' → logprob: -9.756638526916504
    9. ' -' → logprob: -9.756638526916504
    10. '*i' → logprob: -10.131638526916504

Token 81: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4802737236022949
    2. 'for' → logprob: -1.605273723602295
    3. ' *' → logprob: -1.980273723602295
    4. '*' → logprob: -3.230273723602295
    5. '**' → logprob: -6.480273723602295
    6. '*i' → logprob: -7.605273723602295
    7. '   ' → logprob: -8.230274200439453
    8. ' ' → logprob: -8.605274200439453
    9. '-' → logprob: -8.605274200439453
    10. '  ' → logprob: -9.355274200439453

Token 82: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45504170656204224
    2. ' count' → logprob: -1.0800416469573975
    3. '(count' → logprob: -4.205041885375977
    4. ' (' → logprob: -4.830041885375977
    5. '(' → logprob: -7.205041885375977
    6. ' ' → logprob: -7.330041885375977
    7. '(n' → logprob: -7.705041885375977
    8. '   ' → logprob: -8.330041885375977
    9. '(k' → logprob: -8.580041885375977
    10. 'k' → logprob: -8.580041885375977

Token 83: '(-' (ID: 8087)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.18453067541122437
    2. '((' → logprob: -2.559530735015869
    3. '(j' → logprob: -2.559530735015869
    4. '(' → logprob: -4.309530735015869
    5. '(i' → logprob: -8.684530258178711
    6. '(n' → logprob: -9.559530258178711
    7. '(-' → logprob: -9.684530258178711
    8. ' (' → logprob: -9.934530258178711
    9. '(q' → logprob: -11.809530258178711
    10. '((-' → logprob: -11.934530258178711

Token 84: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0023100038524717093
    2. '(i' → logprob: -7.252309799194336
    3. '1' → logprob: -7.502309799194336
    4. '(' → logprob: -7.502309799194336
    5. 'k' → logprob: -8.627309799194336
    6. ' i' → logprob: -8.877309799194336
    7. '-i' → logprob: -9.502309799194336
    8. '-' → logprob: -10.502309799194336
    9. ' (' → logprob: -11.127309799194336
    10. ' ' → logprob: -11.252309799194336

Token 85: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007775885751470923
    2. ' )' → logprob: -8.125777244567871
    3. ')
' → logprob: -8.500777244567871
    4. 'for' → logprob: -8.875777244567871
    5. ' for' → logprob: -9.125777244567871
    6. ' ' → logprob: -11.500777244567871
    7. '-' → logprob: -12.125777244567871
    8. '   ' → logprob: -12.500777244567871
    9. '))' → logprob: -13.125777244567871
    10. '```' → logprob: -13.750777244567871

Token 86: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005532711511477828
    2. ' k' → logprob: -7.500553131103516
    3. ')' → logprob: -15.750553131103516
    4. 'n' → logprob: -16.375553131103516
    5. '(k' → logprob: -17.125553131103516
    6. ' ' → logprob: -17.125553131103516
    7. '	k' → logprob: -18.250553131103516
    8. ' к' → logprob: -18.250553131103516
    9. '{k' → logprob: -18.750553131103516
    10. '   ' → logprob: -18.875553131103516

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022265581414103508
    2. ' for' → logprob: -4.397265434265137
    3. 'for' → logprob: -5.022265434265137
    4. ')
' → logprob: -6.022265434265137
    5. ' )' → logprob: -8.147265434265137
    6. '   ' → logprob: -8.272265434265137
    7. ' ' → logprob: -9.397265434265137
    8. ')
' → logprob: -10.397265434265137
    9. '))' → logprob: -11.772265434265137
    10. '  ' → logprob: -12.272265434265137

Token 88: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22177889943122864
    2. ' for' → logprob: -1.8467788696289062
    3. 'for' → logprob: -3.5967788696289062
    4. '   ' → logprob: -5.221778869628906
    5. ' )' → logprob: -5.221778869628906
    6. ' ' → logprob: -6.221778869628906
    7. ')
' → logprob: -8.096778869628906
    8. '<|end|>' → logprob: -8.471778869628906
    9. '  ' → logprob: -8.846778869628906
    10. '    ' → logprob: -10.221778869628906

Token 89: ' count' (ID: 3605)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.3374379873275757
    2. 'k' → logprob: -1.8374379873275757
    3. 'count' → logprob: -1.8374379873275757
    4. ' (' → logprob: -2.2124381065368652
    5. ' count' → logprob: -2.5874381065368652
    6. '(' → logprob: -2.9624381065368652
    7. ' ' → logprob: -3.3374381065368652
    8. '(k' → logprob: -3.7124381065368652
    9. '2' → logprob: -4.087438106536865
    10. ' n' → logprob: -4.337438106536865

Token 90: '(-' (ID: 8087)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3670175075531006
    2. '(' → logprob: -2.2420175075531006
    3. '(k' → logprob: -2.2420175075531006
    4. '(-' → logprob: -3.2420175075531006
    5. '(i' → logprob: -3.3670175075531006
    6. '((-' → logprob: -4.24201774597168
    7. '(n' → logprob: -5.74201774597168
    8. '(j' → logprob: -7.11701774597168
    9. ' (' → logprob: -7.11701774597168
    10. '(r' → logprob: -7.36701774597168

Token 91: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08563005179166794
    2. '(i' → logprob: -2.960629940032959
    3. '(' → logprob: -3.835629940032959
    4. ' i' → logprob: -5.960629940032959
    5. '(-' → logprob: -6.085629940032959
    6. ' (' → logprob: -6.335629940032959
    7. '((' → logprob: -6.835629940032959
    8. '-i' → logprob: -8.085630416870117
    9. '2' → logprob: -8.960630416870117
    10. ' ' → logprob: -9.460630416870117

Token 92: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4369857609272003
    2. ' %' → logprob: -1.186985731124878
    3. '2' → logprob: -4.186985969543457
    4. '+' → logprob: -4.311985969543457
    5. '-' → logprob: -5.061985969543457
    6. ' ' → logprob: -5.436985969543457
    7. '1' → logprob: -5.686985969543457
    8. '   ' → logprob: -6.186985969543457
    9. ')' → logprob: -7.311985969543457
    10. '7' → logprob: -7.561985969543457

Token 93: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010020548506872728
    2. ' k' → logprob: -9.375100135803223
    3. 'n' → logprob: -11.500100135803223
    4. '(' → logprob: -13.750100135803223
    5. '(k' → logprob: -14.250100135803223
    6. ')' → logprob: -14.750100135803223
    7. ' ' → logprob: -14.750100135803223
    8. '   ' → logprob: -15.000100135803223
    9. ' (' → logprob: -15.125100135803223
    10. '1' → logprob: -15.250100135803223

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8144108653068542
    2. 'for' → logprob: -1.064410924911499
    3. ' for' → logprob: -1.564410924911499
    4. '   ' → logprob: -6.18941068649292
    5. ' ' → logprob: -7.93941068649292
    6. '  ' → logprob: -8.689411163330078
    7. ')
' → logprob: -9.189411163330078
    8. '*' → logprob: -9.814411163330078
    9. ' )' → logprob: -9.814411163330078
    10. '-' → logprob: -10.189411163330078

Token 95: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18291136622428894
    2. 'for' → logprob: -2.1829113960266113
    3. ')' → logprob: -2.9329113960266113
    4. '   ' → logprob: -7.057911396026611
    5. ')
' → logprob: -8.557910919189453
    6. '<|end|>' → logprob: -9.807910919189453
    7. ' )' → logprob: -11.057910919189453
    8. '  ' → logprob: -11.182910919189453
    9. ' ' → logprob: -11.307910919189453
    10. ')\' → logprob: -11.932910919189453

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22689814865589142
    2. 'for' (adapté à ' for') → logprob: -1.601898193359375
    3. '   ' → logprob: -7.226898193359375
    4. ')' → logprob: -7.351898193359375
    5. ' ' → logprob: -9.476898193359375
    6. '  ' → logprob: -10.726898193359375
    7. '+' → logprob: -12.601898193359375
    8. ')
' → logprob: -12.601898193359375
    9. '	for' → logprob: -12.601898193359375
    10. '    ' → logprob: -13.101898193359375

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0486329011619091
    2. 'i' → logprob: -3.048632860183716
    3. ' ' → logprob: -10.423632621765137
    4. '	i' → logprob: -12.423632621765137
    5. '   ' → logprob: -12.548632621765137
    6. '  ' → logprob: -12.548632621765137
    7. ' ' → logprob: -12.923632621765137
    8. '```' → logprob: -14.423632621765137
    9. '_i' → logprob: -14.548632621765137
    10. ' range' → logprob: -15.298632621765137

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004670899827033281
    2. 'in' → logprob: -5.379671096801758
    3. 'range' → logprob: -10.254671096801758
    4. ' range' → logprob: -11.879671096801758
    5. '<|end|>' → logprob: -12.379671096801758
    6. ' ' → logprob: -13.129671096801758
    7. ')' → logprob: -13.379671096801758
    8. '  ' → logprob: -15.504671096801758
    9. '<|end|>' → logprob: -16.004671096801758
    10. '	in' → logprob: -16.254671096801758

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759470462799072
    2. ' range' → logprob: -0.8259470462799072
    3. '	range' → logprob: -12.575946807861328
    4. ' xrange' → logprob: -13.075946807861328
    5. '(range' → logprob: -13.700946807861328
    6. ')' → logprob: -15.450946807861328
    7. ' ' → logprob: -15.450946807861328
    8. 'k' → logprob: -15.700946807861328
    9. '.range' → logprob: -16.325946807861328
    10. '   ' → logprob: -16.825946807861328

Token 100: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -8.685467764735222e-05
    2. '(' → logprob: -9.375086784362793
    3. 'k' → logprob: -13.625086784362793
    4. '(n' → logprob: -14.625086784362793
    5. ' (' → logprob: -16.12508773803711
    6. '(-' → logprob: -16.50008773803711
    7. ' k' → logprob: -17.75008773803711
    8. ',k' → logprob: -18.25008773803711
    9. '((' → logprob: -19.25008773803711
    10. ')' → logprob: -19.37508773803711

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002824016148224473
    2. '))' → logprob: -5.877823829650879
    3. ')
' → logprob: -11.252823829650879
    4. ' )' → logprob: -12.502823829650879
    5. ')))' → logprob: -13.502823829650879
    6. '+' → logprob: -15.627823829650879
    7. ')}' → logprob: -16.002824783325195
    8. '})' → logprob: -16.127824783325195
    9. '   ' → logprob: -16.502824783325195
    10. '),' → logprob: -16.627824783325195

Token 102: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. ')
' → logprob: -9.250100135803223
    3. ')`' → logprob: -13.500100135803223
    4. '))' → logprob: -13.750100135803223
    5. ' )' → logprob: -15.000100135803223
    6. ')**' → logprob: -15.000100135803223
    7. '`)' → logprob: -15.125100135803223
    8. ')return' → logprob: -15.750100135803223
    9. '   ' → logprob: -16.25010108947754
    10. '**' → logprob: -16.50010108947754

Token 103: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.625005722045898
    3. '))' → logprob: -13.750005722045898
    4. ')`' → logprob: -15.000005722045898
    5. '```' → logprob: -15.625005722045898
    6. ' )' → logprob: -16.1250057220459
    7. '),' → logprob: -16.2500057220459
    8. ')return' → logprob: -16.2500057220459
    9. ')n' → logprob: -17.0000057220459
    10. ')**' → logprob: -17.2500057220459

Token 104: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3575553894042969
    2. 'i' → logprob: -1.6075553894042969
    3. '(i' → logprob: -1.7325553894042969
    4. ' count' → logprob: -2.482555389404297
    5. ' i' → logprob: -2.482555389404297
    6. '(count' → logprob: -2.857555389404297
    7. ' (' → logprob: -3.232555389404297
    8. 'k' → logprob: -3.982555389404297
    9. '(k' → logprob: -4.357555389404297
    10. 'n' → logprob: -4.357555389404297

Token 105: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6422228217124939
    2. '(i' → logprob: -1.0172228813171387
    3. ' i' → logprob: -3.5172228813171387
    4. ' (' → logprob: -3.7672228813171387
    5. 'count' → logprob: -4.642222881317139
    6. '(' → logprob: -4.642222881317139
    7. '(k' → logprob: -4.892222881317139
    8. 'n' → logprob: -5.267222881317139
    9. 'k' → logprob: -5.517222881317139
    10. '(count' → logprob: -5.767222881317139

Token 106: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6874821782112122
    2. ' *' → logprob: -0.8124821782112122
    3. '*i' → logprob: -2.9374821186065674
    4. '   ' → logprob: -8.187481880187988
    5. 'i' → logprob: -9.437481880187988
    6. ')' → logprob: -11.312481880187988
    7. '**' → logprob: -11.562481880187988
    8. ' ' → logprob: -11.812481880187988
    9. '*(' → logprob: -12.562481880187988
    10. ' i' → logprob: -13.062481880187988

Token 107: ' (-' (ID: 21382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038083501160144806
    2. ' i' → logprob: -3.288083553314209
    3. ')i' → logprob: -11.28808307647705
    4. '   ' → logprob: -11.53808307647705
    5. ')' → logprob: -12.16308307647705
    6. '-i' → logprob: -12.28808307647705
    7. ' ' → logprob: -12.28808307647705
    8. '	i' → logprob: -13.66308307647705
    9. '(i' → logprob: -14.16308307647705
    10. '_i' → logprob: -14.41308307647705

Token 108: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013398852897807956
    2. ' i' → logprob: -6.626339912414551
    3. '   ' → logprob: -12.50133991241455
    4. '_i' → logprob: -12.87633991241455
    5. ' ' → logprob: -13.37633991241455
    6. '-i' → logprob: -13.62633991241455
    7. '
' → logprob: -13.62633991241455
    8. '(-' → logprob: -14.50133991241455
    9. ')' → logprob: -14.75133991241455
    10. '	i' → logprob: -14.75133991241455

Token 109: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.45601212978363037
    2. ' %' → logprob: -1.3310121297836304
    3. ')' → logprob: -2.33101224899292
    4. ')%' → logprob: -5.70601224899292
    5. '%i' → logprob: -7.33101224899292
    6. ' )' → logprob: -7.95601224899292
    7. ' ' → logprob: -8.956011772155762
    8. '%)' → logprob: -10.081011772155762
    9. 'i' → logprob: -10.081011772155762
    10. '   ' → logprob: -10.206011772155762

Token 110: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08897054940462112
    2. ' k' → logprob: -2.46397066116333
    3. ')' → logprob: -11.338970184326172
    4. ' ' → logprob: -11.463970184326172
    5. '   ' → logprob: -12.588970184326172
    6. '    ' → logprob: -13.713970184326172
    7. '  ' → logprob: -13.713970184326172
    8. '	k' → logprob: -14.338970184326172
    9. '```' → logprob: -14.588970184326172
    10. '(k' → logprob: -15.213970184326172

Token 111: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005504811182618141
    2. ')%' → logprob: -5.380504608154297
    3. ' )' → logprob: -7.880504608154297
    4. '%' → logprob: -8.630504608154297
    5. '==' → logprob: -9.380504608154297
    6. '!=' → logprob: -9.755504608154297
    7. ')!=' → logprob: -10.130504608154297
    8. ')==' → logprob: -10.380504608154297
    9. '-' → logprob: -10.380504608154297
    10. '+' → logprob: -10.505504608154297

Token 112: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3037698566913605
    2. '!=' → logprob: -2.428769826889038
    3. ' %' → logprob: -2.803769826889038
    4. '==' → logprob: -3.053769826889038
    5. ' !=' → logprob: -3.303769826889038
    6. ' ==' → logprob: -3.678769826889038
    7. ')' → logprob: -6.803770065307617
    8. '%=' → logprob: -6.928770065307617
    9. ' %=' → logprob: -6.928770065307617
    10. '%i' → logprob: -8.178770065307617

Token 113: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016035541892051697
    2. ' k' → logprob: -4.141035556793213
    3. ' ' → logprob: -14.516035079956055
    4. '   ' → logprob: -14.641035079956055
    5. '	k' → logprob: -16.891035079956055
    6. '(k' → logprob: -17.016035079956055
    7. '```' → logprob: -17.266035079956055
    8. ')' → logprob: -17.641035079956055
    9. ' к' → logprob: -17.766035079956055
    10. '  ' → logprob: -18.016035079956055

Token 114: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022637316957116127
    2. '+' → logprob: -4.397637367248535
    3. '<|end|>' → logprob: -4.897637367248535
    4. '>' → logprob: -7.522637367248535
    5. '==' → logprob: -7.522637367248535
    6. '!=' → logprob: -8.022637367248535
    7. '<|end|>' → logprob: -8.772637367248535
    8. '=' → logprob: -8.772637367248535
    9. '%' → logprob: -9.022637367248535
    10. ':' → logprob: -9.147637367248535

Token 115: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08752306550741196
    2. ' i' → logprob: -3.3375229835510254
    3. '(i' → logprob: -3.8375229835510254
    4. '(' → logprob: -4.462522983551025
    5. '0' → logprob: -4.837522983551025
    6. '(-' → logprob: -5.712522983551025
    7. ' (' → logprob: -6.212522983551025
    8. 'k' → logprob: -6.962522983551025
    9. ' ' → logprob: -8.587523460388184
    10. '   ' → logprob: -8.587523460388184

Token 116: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04225724935531616
    2. '(i' → logprob: -4.042257308959961
    3. '(' → logprob: -4.167257308959961
    4. '0' → logprob: -5.917257308959961
    5. '(-' → logprob: -5.917257308959961
    6. ' i' → logprob: -6.167257308959961
    7. ' (' → logprob: -8.042257308959961
    8. 'k' → logprob: -8.542257308959961
    9. '1' → logprob: -9.167257308959961
    10. '(k' → logprob: -9.667257308959961

Token 117: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022237090161070228
    2. '):' → logprob: -9.125222206115723
    3. ')
' → logprob: -9.625222206115723
    4. '   ' → logprob: -10.500222206115723
    5. ' )' → logprob: -11.125222206115723
    6. '):
' → logprob: -14.125222206115723
    7. '`)' → logprob: -14.250222206115723
    8. ':' → logprob: -14.625222206115723
    9. '))' → logprob: -15.000222206115723
    10. '}' → logprob: -15.125222206115723

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.368984107510187e-05
    2. ')
' → logprob: -10.375033378601074
    3. ' )' → logprob: -14.000033378601074
    4. '   ' → logprob: -14.875033378601074
    5. ')return' → logprob: -15.625033378601074
    6. '):' → logprob: -15.625033378601074
    7. '))' → logprob: -15.750033378601074
    8. ')

' → logprob: -15.750033378601074
    9. ')`' → logprob: -15.875033378601074
    10. '),' → logprob: -16.37503433227539

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. ')' → logprob: -13.000006675720215
    3. 'ans' → logprob: -13.375006675720215
    4. '
' → logprob: -13.375006675720215
    5. ' print' → logprob: -15.125006675720215
    6. '#print' → logprob: -16.0000057220459
    7. 'pr' → logprob: -16.2500057220459
    8. '```' → logprob: -16.8750057220459
    9. '\n' → logprob: -17.0000057220459
    10. '<|end|>' → logprob: -17.1250057220459

Token 120: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.048677295446395874
    2. '(' → logprob: -3.0486772060394287
    3. 'ans' → logprob: -9.923677444458008
    4. '()' → logprob: -11.048677444458008
    5. '(
' → logprob: -11.298677444458008
    6. '(sum' → logprob: -12.048677444458008
    7. '(`' → logprob: -13.423677444458008
    8. '(answer' → logprob: -13.548677444458008
    9. '(len' → logprob: -14.423677444458008
    10. '(print' → logprob: -14.423677444458008

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026574634830467403
    2. ')
' → logprob: -9.625266075134277
    3. '+' → logprob: -9.875266075134277
    4. '*' → logprob: -10.375266075134277
    5. '(' → logprob: -10.875266075134277
    6. '#' → logprob: -11.125266075134277
    7. '```' → logprob: -11.250266075134277
    8. '')' → logprob: -11.500266075134277
    9. '*)' → logprob: -11.750266075134277
    10. '%' → logprob: -11.750266075134277


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 32.77%
Précision adaptée (1ère position): 33.61%
Précision (top 10): 76.47%
================================================================================
