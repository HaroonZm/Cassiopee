================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a_l = input().split()
for i in range(n):
    a_l[i] = int(a_l[i])

max_num = a_l[0]
min_num = a_l[0]

for num in a_l:
    if num > max_num:
        max_num = num
    if num < min_num:
        min_num = num

ans = max_num - min_num
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: '_l' (ID: 1478)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034722555428743362
    2. '[a' → logprob: -6.503472328186035
    3. 'a' → logprob: -7.628472328186035
    4. '[i' → logprob: -7.878472328186035
    5. '+' → logprob: -8.253472328186035
    6. '[n' → logprob: -8.378472328186035
    7. '[:]' → logprob: -9.378472328186035
    8. '.' → logprob: -9.503472328186035
    9. '\[' → logprob: -9.503472328186035
    10. '=' → logprob: -9.628472328186035

Token 7: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.23231524229049683
    2. 'i' → logprob: -1.9823153018951416
    3. 'is' → logprob: -2.8573153018951416
    4. '=' → logprob: -5.3573150634765625
    5. 's' → logprob: -5.8573150634765625
    6. 'ista' → logprob: -6.6073150634765625
    7. 'a' → logprob: -6.8573150634765625
    8. 'st' → logprob: -7.4823150634765625
    9. ' =' → logprob: -7.6073150634765625
    10. '[' → logprob: -8.107315063476562

Token 8: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8376099467277527
    2. 'list' → logprob: -1.3376100063323975
    3. '[' → logprob: -2.0876100063323975
    4. '[list' → logprob: -2.7126100063323975
    5. ' []' → logprob: -3.2126100063323975
    6. ' list' → logprob: -3.5876100063323975
    7. '[input' → logprob: -3.7126100063323975
    8. ' [' → logprob: -4.212609767913818
    9. '[int' → logprob: -5.712609767913818
    10. '[a' → logprob: -5.837609767913818

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05579758808016777
    2. '()' → logprob: -3.180797576904297
    3. ')' → logprob: -5.680797576904297
    4. '"' → logprob: -5.805797576904297
    5. '('' → logprob: -6.055797576904297
    6. ''' → logprob: -6.055797576904297
    7. '```' → logprob: -8.305797576904297
    8. '(
' → logprob: -8.680797576904297
    9. '(

' → logprob: -8.680797576904297
    10. '("("' → logprob: -8.930797576904297

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001176416757516563
    2. 'strip' → logprob: -6.751176357269287
    3. 'rstrip' → logprob: -12.251176834106445
    4. ' split' → logprob: -14.376176834106445
    5. 'replace' → logprob: -14.751176834106445
    6. 'spl' → logprob: -14.876176834106445
    7. 's' → logprob: -16.751176834106445
    8. 'rs' → logprob: -17.751176834106445
    9. 'sp' → logprob: -18.001176834106445
    10. '(split' → logprob: -18.251176834106445

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06299987435340881
    2. '()' → logprob: -3.062999963760376
    3. '('' → logprob: -4.687999725341797
    4. '("("' → logprob: -5.437999725341797
    5. '(`' → logprob: -9.187999725341797
    6. '((' → logprob: -9.312999725341797
    7. '`' → logprob: -9.562999725341797
    8. '(()' → logprob: -9.687999725341797
    9. '```' → logprob: -9.812999725341797
    10. '("' → logprob: -9.812999725341797

Token 12: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0039131189696490765
    2. 'for' → logprob: -5.753912925720215
    3. 'n' → logprob: -8.628912925720215
    4. 'result' → logprob: -8.878912925720215
    5. '[' → logprob: -9.003912925720215
    6. 's' → logprob: -9.378912925720215
    7. 'c' → logprob: -9.628912925720215
    8. 'ans' → logprob: -10.628912925720215
    9. 'b' → logprob: -10.753912925720215
    10. 'count' → logprob: -11.003912925720215

Token 13: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23631051182746887
    2. ' i' → logprob: -1.6113104820251465
    3. '_' → logprob: -4.9863104820251465
    4. ' _' → logprob: -6.6113104820251465
    5. '  ' → logprob: -6.9863104820251465
    6. 'i' → logprob: -7.1113104820251465
    7. ' ‌' → logprob: -7.7363104820251465
    8. ' n' → logprob: -8.611310958862305
    9. ' token' → logprob: -9.736310958862305
    10. ' a' → logprob: -9.736310958862305

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33640873432159424
    2. 'in' → logprob: -1.5864087343215942
    3. ' ' → logprob: -2.7114086151123047
    4. '  ' → logprob: -4.961408615112305
    5. 'n' → logprob: -5.836408615112305
    6. '_' → logprob: -6.086408615112305
    7. ' n' → logprob: -7.211408615112305
    8. ')' → logprob: -7.961408615112305
    9. '[' → logprob: -8.711408615112305
    10. ',' → logprob: -8.711408615112305

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20184773206710815
    2. 'range' → logprob: -1.701847791671753
    3. ' ' → logprob: -7.951847553253174
    4. ' a' → logprob: -9.701848030090332
    5. 'a' → logprob: -11.326848030090332
    6. '	range' → logprob: -12.826848030090332
    7. '  ' → logprob: -13.076848030090332
    8. ' xrange' → logprob: -14.076848030090332
    9. '(range' → logprob: -14.326848030090332
    10. '   ' → logprob: -14.451848030090332

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10077418386936188
    2. '(n' → logprob: -2.3507742881774902
    3. '(len' → logprob: -8.100773811340332
    4. ' (' → logprob: -8.350773811340332
    5. ' ' → logprob: -11.600773811340332
    6. '(range' → logprob: -12.100773811340332
    7. '(a' → logprob: -12.725773811340332
    8. 'n' → logprob: -12.975773811340332
    9. '(i' → logprob: -13.100773811340332
    10. '(space' → logprob: -13.975773811340332

Token 17: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11299289762973785
    2. '):' → logprob: -2.237993001937866
    3. '+' → logprob: -9.237993240356445
    4. ' )' → logprob: -10.612993240356445
    5. ':' → logprob: -11.237993240356445
    6. '-' → logprob: -11.362993240356445
    7. ' ):' → logprob: -12.487993240356445
    8. '):
' → logprob: -12.612993240356445
    9. '){' → logprob: -13.112993240356445
    10. '[' → logprob: -13.237993240356445

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0777224525809288
    2. '    ' → logprob: -4.077722549438477
    3. ' a' → logprob: -4.202722549438477
    4. ' ' → logprob: -4.327722549438477
    5. '    
' → logprob: -4.327722549438477
    6. 'a' → logprob: -5.077722549438477
    7. ' if' → logprob: -5.202722549438477
    8. '     
' → logprob: -7.577722549438477
    9. ' 
' → logprob: -7.702722549438477
    10. '<|end|>' → logprob: -7.827722549438477

Token 19: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2957673072814941
    2. 'a' (adapté à ' a') → logprob: -1.7957673072814941
    3. 'print' → logprob: -1.7957673072814941
    4. 'if' → logprob: -1.9207673072814941
    5. ' if' → logprob: -1.9207673072814941
    6. ' a' → logprob: -3.420767307281494
    7. ' print' → logprob: -3.545767307281494
    8. '    ' → logprob: -3.670767307281494
    9. ' ' → logprob: -5.045767307281494
    10. 'i' → logprob: -5.795767307281494

Token 20: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0010798488510772586
    2. '[_' → logprob: -7.37608003616333
    3. '[' → logprob: -8.626079559326172
    4. '[i' → logprob: -8.876079559326172
    5. '_' → logprob: -9.626079559326172
    6. '_i' → logprob: -10.626079559326172
    7. '_s' → logprob: -11.751079559326172
    8. '_a' → logprob: -11.876079559326172
    9. '[a' → logprob: -12.126079559326172
    10. '_ls' → logprob: -12.251079559326172

Token 21: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07128241658210754
    2. '[i' → logprob: -2.696282386779785
    3. '[int' → logprob: -6.946282386779785
    4. '[a' → logprob: -8.446282386779785
    5. '\[' → logprob: -9.946282386779785
    6. '```' → logprob: -10.821282386779785
    7. ' [' → logprob: -11.071282386779785
    8. '[...]' → logprob: -11.071282386779785
    9. '[]' → logprob: -11.946282386779785
    10. '[n' → logprob: -11.946282386779785

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010473710484802723
    2. ' ]' → logprob: -5.135473728179932
    3. ')' → logprob: -5.760473728179932
    4. '])' → logprob: -7.135473728179932
    5. ']=' → logprob: -8.760473251342773
    6. ')]' → logprob: -8.885473251342773
    7. '][' → logprob: -9.760473251342773
    8. ' )' → logprob: -10.135473251342773
    9. ']==' → logprob: -10.135473251342773
    10. ' ])' → logprob: -10.510473251342773

Token 23: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.318857192993164
    2. '[' → logprob: -1.443857192993164
    3. '<|end|>' → logprob: -1.568857192993164
    4. '+' → logprob: -2.068857192993164
    5. '=' → logprob: -2.693857192993164
    6. ')' → logprob: -3.068857192993164
    7. ' =' → logprob: -3.818857192993164
    8. ' +=' → logprob: -5.193857192993164
    9. ']' → logprob: -5.443857192993164
    10. '.' → logprob: -6.318857192993164

Token 24: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14268630743026733
    2. ' int' → logprob: -2.017686367034912
    3. 'a' → logprob: -13.267685890197754
    4. '=int' → logprob: -13.267685890197754
    5. '   ' → logprob: -13.517685890197754
    6. '[int' → logprob: -13.892685890197754
    7. '(int' → logprob: -14.017685890197754
    8. 'float' → logprob: -14.017685890197754
    9. ' ' → logprob: -14.392685890197754
    10. ']int' → logprob: -14.642685890197754

Token 25: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03419606015086174
    2. '(a' → logprob: -3.409196138381958
    3. '('' → logprob: -8.159195899963379
    4. '(
' → logprob: -9.159195899963379
    5. 'a' → logprob: -9.284195899963379
    6. ')' → logprob: -11.034195899963379
    7. '(

' → logprob: -11.034195899963379
    8. '()' → logprob: -11.909195899963379
    9. ' (' → logprob: -12.409195899963379
    10. '```' → logprob: -12.534195899963379

Token 26: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.625003814697266
    3. '[i' → logprob: -14.500003814697266
    4. ')' → logprob: -14.875003814697266
    5. '[_' → logprob: -15.125003814697266
    6. '[' → logprob: -15.250003814697266
    7. ' _' → logprob: -15.250003814697266
    8. '_i' → logprob: -15.875003814697266
    9. 'l' → logprob: -16.250003814697266
    10. '_a' → logprob: -16.250003814697266

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003939728485420346
    2. '[' → logprob: -7.875393867492676
    3. ')' → logprob: -11.375393867492676
    4. ' [' → logprob: -14.250393867492676
    5. '[I' → logprob: -14.500393867492676
    6. ')[' → logprob: -14.750393867492676
    7. '[a' → logprob: -14.875393867492676
    8. '[
' → logprob: -16.625394821166992
    9. '```' → logprob: -16.875394821166992
    10. ')i' → logprob: -17.000394821166992

Token 28: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02024497464299202
    2. '))' → logprob: -4.14524507522583
    3. '])' → logprob: -5.52024507522583
    4. ')])' → logprob: -9.270244598388672
    5. ']' → logprob: -9.895244598388672
    6. ')]' → logprob: -10.895244598388672
    7. ')))' → logprob: -11.895244598388672
    8. ' )' → logprob: -12.020244598388672
    9. ']))' → logprob: -12.395244598388672
    10. '[' → logprob: -12.770244598388672

Token 29: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7399303913116455
    2. '#' → logprob: -1.9899303913116455
    3. 'a' → logprob: -2.3649303913116455
    4. 'print' → logprob: -2.6149303913116455
    5. 'if' → logprob: -2.9899303913116455
    6. 'sum' → logprob: -3.4899303913116455
    7. 'i' → logprob: -3.9899303913116455
    8. '[' → logprob: -3.9899303913116455
    9. ')' → logprob: -4.239930152893066
    10. ' ' → logprob: -4.239930152893066

Token 30: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016180291771888733
    2. '(' → logprob: -4.266180515289307
    3. '_a' → logprob: -6.766180515289307
    4. '(a' → logprob: -8.141180038452148
    5. '_val' → logprob: -9.141180038452148
    6. 'a' → logprob: -9.141180038452148
    7. '_max' → logprob: -9.391180038452148
    8. '_value' → logprob: -9.891180038452148
    9. '_space' → logprob: -10.016180038452148
    10. '(_)' → logprob: -10.391180038452148

Token 31: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20408163964748383
    2. ' =' → logprob: -1.829081654548645
    3. '=' → logprob: -4.0790815353393555
    4. '(' → logprob: -6.3290815353393555
    5. '<|end|>' → logprob: -6.5790815353393555
    6. '[' → logprob: -7.0790815353393555
    7. ')' → logprob: -7.0790815353393555
    8. ' _' → logprob: -7.5790815353393555
    9. ' ' → logprob: -8.079081535339355
    10. 's' → logprob: -8.079081535339355

Token 32: ' a' (ID: 261)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.885961651802063
    2. 'a' → logprob: -1.260961651802063
    3. 'max' → logprob: -1.760961651802063
    4. ' a' → logprob: -2.1359615325927734
    5. '0' → logprob: -4.760961532592773
    6. ' -' → logprob: -5.885961532592773
    7. ' ' → logprob: -6.510961532592773
    8. '-' → logprob: -7.010961532592773
    9. ' float' → logprob: -8.260961532592773
    10. 'float' → logprob: -8.510961532592773

Token 33: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00016861737822182477
    2. 'l' → logprob: -8.750168800354004
    3. '_' → logprob: -12.000168800354004
    4. '_list' → logprob: -14.250168800354004
    5. '_ls' → logprob: -14.625168800354004
    6. '[' → logprob: -15.000168800354004
    7. '	l' → logprob: -15.625168800354004
    8. '_i' → logprob: -15.625168800354004
    9. '```' → logprob: -15.625168800354004
    10. '_lst' → logprob: -15.875168800354004

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04613807797431946
    2. '[:]' → logprob: -3.546138048171997
    3. '.' → logprob: -4.171138286590576
    4. '.copy' → logprob: -8.421137809753418
    5. '[:' → logprob: -8.671137809753418
    6. '[i' → logprob: -8.671137809753418
    7. '```' → logprob: -9.296137809753418
    8. '[max' → logprob: -10.171137809753418
    9. '<|end|>' → logprob: -10.921137809753418
    10. '.[' → logprob: -11.296137809753418

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. ')' → logprob: -14.000008583068848
    4. '])' → logprob: -14.750008583068848
    5. ']' → logprob: -15.000008583068848
    6. '1' → logprob: -15.875008583068848
    7. 'i' → logprob: -16.375009536743164
    8. '-' → logprob: -17.125009536743164
    9. ')]' → logprob: -18.250009536743164
    10. '۰' → logprob: -18.625009536743164

Token 36: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004687156993895769
    2. ' )' → logprob: -5.379687309265137
    3. ']' → logprob: -10.004687309265137
    4. '<|end|>' → logprob: -12.129687309265137
    5. '])' → logprob: -12.379687309265137
    6. ')
' → logprob: -13.129687309265137
    7. ')]' → logprob: -13.254687309265137
    8. ' ]' → logprob: -13.504687309265137
    9. ' ' → logprob: -13.629687309265137
    10. '}' → logprob: -13.629687309265137

Token 37: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45376816391944885
    2. '
' → logprob: -1.0787681341171265
    3. ' for' → logprob: -4.453768253326416
    4. '<|end|>' → logprob: -5.078768253326416
    5. ' 
' → logprob: -5.328768253326416
    6. ' ' → logprob: -7.203768253326416
    7. '  
' → logprob: -7.953768253326416
    8. '

' → logprob: -8.453767776489258
    9. '\n' → logprob: -8.703767776489258
    10. '' → logprob: -9.078767776489258

Token 38: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.018341559916734695
    2. '_' → logprob: -4.018341541290283
    3. '_val' → logprob: -9.018342018127441
    4. ' _' → logprob: -10.143342018127441
    5. '_n' → logprob: -11.643342018127441
    6. '_number' → logprob: -12.643342018127441
    7. '_Num' → logprob: -12.768342018127441
    8. '=_' → logprob: -13.018342018127441
    9. '_idx' → logprob: -13.143342018127441
    10. '__' → logprob: -13.268342018127441

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009361166739836335
    2. ' ' → logprob: -7.625936031341553
    3. '=' → logprob: -7.750936031341553
    4. '<|end|>' → logprob: -11.500936508178711
    5. '_' → logprob: -13.250936508178711
    6. ')' → logprob: -13.375936508178711
    7. ',' → logprob: -13.750936508178711
    8. ' =)' → logprob: -14.500936508178711
    9. ' ==' → logprob: -14.625936508178711
    10. ' =
' → logprob: -14.625936508178711

Token 40: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25194039940834045
    2. 'a' → logprob: -1.501940369606018
    3. ' ' → logprob: -12.376940727233887
    4. ' ' → logprob: -12.876940727233887
    5. 'max' → logprob: -13.376940727233887
    6. '	a' → logprob: -13.626940727233887
    7. ' max' → logprob: -14.126940727233887
    8. '_a' → logprob: -14.876940727233887
    9. '0' → logprob: -16.12693977355957
    10. '(a' → logprob: -16.75193977355957

Token 41: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -13.125006675720215
    3. ' _' → logprob: -13.375006675720215
    4. 'l' → logprob: -13.875006675720215
    5. '[_' → logprob: -14.375006675720215
    6. '[' → logprob: -15.000006675720215
    7. '_ls' → logprob: -15.375006675720215
    8. '_i' → logprob: -16.2500057220459
    9. '[i' → logprob: -16.3750057220459
    10. '```' → logprob: -16.5000057220459

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. ' [' → logprob: -13.75000286102295
    3. '0' → logprob: -14.00000286102295
    4. '[
' → logprob: -15.37500286102295
    5. '\[' → logprob: -15.62500286102295
    6. '```' → logprob: -15.87500286102295
    7. '[i' → logprob: -17.750001907348633
    8. '[-' → logprob: -18.500001907348633
    9. '][' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.125001907348633

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. ']' → logprob: -13.875017166137695
    4. 'i' → logprob: -14.500017166137695
    5. '1' → logprob: -14.625017166137695
    6. '])' → logprob: -16.000017166137695
    7. '   ' → logprob: -17.375017166137695
    8. '```' → logprob: -17.500017166137695
    9. '-' → logprob: -17.625017166137695
    10. '  ' → logprob: -18.187517166137695

Token 44: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6331522464752197
    2. ')' → logprob: -0.7581522464752197
    3. ' ]' → logprob: -8.75815200805664
    4. '<|end|>' → logprob: -9.25815200805664
    5. '])' → logprob: -9.50815200805664
    6. ')]' → logprob: -9.75815200805664
    7. '[' → logprob: -10.13315200805664
    8. '}' → logprob: -10.25815200805664
    9. '']' → logprob: -10.75815200805664
    10. ' )' → logprob: -10.88315200805664

Token 45: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08085829764604568
    2. '
' → logprob: -2.5808582305908203
    3. ' for' → logprob: -6.95585823059082
    4. '```' → logprob: -7.08085823059082
    5. '\n' → logprob: -8.95585823059082
    6. ' 
' → logprob: -10.70585823059082
    7. '
' → logprob: -11.70585823059082
    8. '``' → logprob: -12.20585823059082
    9. '  
' → logprob: -12.83085823059082
    10. '    
' → logprob: -14.08085823059082

Token 46: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18060030043125153
    2. ' ' → logprob: -1.8056002855300903
    3. '_' → logprob: -7.930600166320801
    4. 'i' → logprob: -8.3056001663208
    5. ' ‌' → logprob: -9.4306001663208
    6. ' _' → logprob: -9.8056001663208
    7. ' ' → logprob: -9.9306001663208
    8. '  ' → logprob: -11.1806001663208
    9. ' space' → logprob: -11.4306001663208
    10. ' ▁' → logprob: -12.4306001663208

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04868479445576668
    2. 'in' → logprob: -3.04868483543396
    3. ' ' → logprob: -9.673685073852539
    4. '	in' → logprob: -10.923685073852539
    5. 's' → logprob: -12.173685073852539
    6. '  ' → logprob: -12.548685073852539
    7. '   ' → logprob: -13.423685073852539
    8. 'In' → logprob: -13.798685073852539
    9. '_in' → logprob: -13.798685073852539
    10. '<|end|>' → logprob: -14.048685073852539

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.575940728187561
    2. ' a' → logprob: -0.825940728187561
    3. ' ' → logprob: -14.70094108581543
    4. '_a' → logprob: -14.95094108581543
    5. '(a' → logprob: -15.20094108581543
    6. '	a' → logprob: -15.45094108581543
    7. '   ' → logprob: -17.20094108581543
    8. 's' → logprob: -17.57594108581543
    9. '  ' → logprob: -18.32594108581543
    10. '>a' → logprob: -18.32594108581543

Token 49: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.010278221219778061
    2. '_' → logprob: -4.635278224945068
    3. '_a' → logprob: -8.13527774810791
    4. ' _' → logprob: -9.13527774810791
    5. '_r' → logprob: -10.26027774810791
    6. 'a' → logprob: -10.51027774810791
    7. 'l' → logprob: -10.88527774810791
    8. '_i' → logprob: -11.51027774810791
    9. '_num' → logprob: -11.88527774810791
    10. '[_' → logprob: -12.88527774810791

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011105302110081539
    2. ' :' → logprob: -9.250110626220703
    3. ':
' → logprob: -11.500110626220703
    4. '):' → logprob: -13.500110626220703
    5. '   ' → logprob: -13.875110626220703
    6. ':**' → logprob: -14.000110626220703
    7. '>:' → logprob: -14.750110626220703
    8. '>' → logprob: -14.750110626220703
    9. '<|end|>' → logprob: -15.250110626220703
    10. '：' → logprob: -15.500110626220703

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011281236074864864
    2. '    
' → logprob: -5.7612810134887695
    3. ' ' → logprob: -6.0112810134887695
    4. '<|end|>' → logprob: -6.1362810134887695
    5. ' if' → logprob: -6.2612810134887695
    6. '    ' → logprob: -7.7612810134887695
    7. ' 
' → logprob: -8.01128101348877
    8. '```' → logprob: -8.26128101348877
    9. '  ' → logprob: -8.51128101348877
    10. '<|end|>' → logprob: -9.88628101348877

Token 52: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050698861479759216
    2. ' if' → logprob: -4.050698757171631
    3. ' ' → logprob: -4.175698757171631
    4. '    
' → logprob: -4.800698757171631
    5. ' 
' → logprob: -5.675698757171631
    6. '    ' → logprob: -6.050698757171631
    7. '<|end|>' → logprob: -7.050698757171631
    8. '     
' → logprob: -8.175699234008789
    9. '```' → logprob: -8.300699234008789
    10. '   
' → logprob: -8.300699234008789

Token 53: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.00010020548506872728
    2. 'num' → logprob: -9.625100135803223
    3. ' max' → logprob: -10.375100135803223
    4. ' ' → logprob: -13.750100135803223
    5. ' ' → logprob: -13.875100135803223
    6. '	num' → logprob: -14.500100135803223
    7. '(num' → logprob: -15.625100135803223
    8. '<num' → logprob: -16.25010108947754
    9. ',num' → logprob: -17.87510108947754
    10. '_num' → logprob: -18.00010108947754

Token 54: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07890047132968903
    2. '>' → logprob: -2.5789005756378174
    3. ' ' → logprob: -11.703900337219238
    4. ' <' → logprob: -13.578900337219238
    5. ' ' → logprob: -14.703900337219238
    6. '   ' → logprob: -15.203900337219238
    7. '<' → logprob: -15.703900337219238
    8. '  ' → logprob: -16.328901290893555
    9. ' >

' → logprob: -16.828901290893555
    10. '<|end|>' → logprob: -17.203901290893555

Token 55: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25193020701408386
    2. ' max' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.251930236816406
    4. '	max' → logprob: -14.751930236816406
    5. '_max' → logprob: -17.126930236816406
    6. '(max' → logprob: -17.626930236816406
    7. '   ' → logprob: -18.626930236816406
    8. '  ' → logprob: -18.626930236816406
    9. '=max' → logprob: -18.751930236816406
    10. '[max' → logprob: -18.876930236816406

Token 56: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -8.85235276655294e-05
    2. '_' → logprob: -9.375088691711426
    3. '_max' → logprob: -13.000088691711426
    4. ' _' → logprob: -14.125088691711426
    5. '_n' → logprob: -14.500088691711426
    6. '_NUM' → logprob: -17.37508773803711
    7. '__' → logprob: -17.50008773803711
    8. '_nums' → logprob: -17.87508773803711
    9. ')_' → logprob: -18.25008773803711
    10. '_Num' → logprob: -18.25008773803711

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011699870228767395
    2. ':
' → logprob: -6.8761701583862305
    3. ' :' → logprob: -9.00117015838623
    4. '):' → logprob: -12.25117015838623
    5. '   ' → logprob: -12.62617015838623
    6. ' :
' → logprob: -13.50117015838623
    7. '=' → logprob: -13.75117015838623
    8. ':max' → logprob: -14.12617015838623
    9. '       ' → logprob: -14.62617015838623
    10. '):
' → logprob: -15.00117015838623

Token 58: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33440595865249634
    2. '       ' → logprob: -1.8344058990478516
    3. ' max' → logprob: -2.7094058990478516
    4. '   ' → logprob: -3.5844058990478516
    5. 'max' → logprob: -4.209405899047852
    6. ' :' → logprob: -5.084405899047852
    7. ':
' → logprob: -5.334405899047852
    8. ':max' → logprob: -6.584405899047852
    9. '    ' → logprob: -7.959405899047852
    10. ' ' → logprob: -7.959405899047852

Token 59: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06723377108573914
    2. ' num' → logprob: -3.0672338008880615
    3. 'max' (adapté à ' max') → logprob: -4.442233562469482
    4. ' ' → logprob: -5.442233562469482
    5. 'num' → logprob: -6.192233562469482
    6. ' =' → logprob: -9.44223403930664
    7. ' ' → logprob: -9.69223403930664
    8. '=' → logprob: -9.94223403930664
    9. '_max' → logprob: -10.19223403930664
    10. '    ' → logprob: -10.19223403930664

Token 60: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -6.301394023466855e-05
    2. '_' → logprob: -9.750062942504883
    3. '_n' → logprob: -13.500062942504883
    4. ' _' → logprob: -13.500062942504883
    5. '_Num' → logprob: -14.875062942504883
    6. '_number' → logprob: -15.375062942504883
    7. '_max' → logprob: -15.375062942504883
    8. '_NUM' → logprob: -15.375062942504883
    9. '```' → logprob: -15.875062942504883
    10. '__' → logprob: -16.375062942504883

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.663042068481445
    4. ' =
' → logprob: -16.288042068481445
    5. '=num' → logprob: -17.163042068481445
    6. '_' → logprob: -17.288042068481445
    7. ')' → logprob: -17.663042068481445
    8. '＝' → logprob: -17.913042068481445
    9. ' ' → logprob: -18.538042068481445
    10. ',' → logprob: -18.538042068481445

Token 62: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.003216095734387636
    2. 'num' → logprob: -5.75321626663208
    3. ' ' → logprob: -10.378215789794922
    4. ' ' → logprob: -12.003215789794922
    5. '	num' → logprob: -15.253215789794922
    6. '(num' → logprob: -15.753215789794922
    7. '<num' → logprob: -15.878215789794922
    8. ',num' → logprob: -16.128215789794922
    9. ''' → logprob: -16.378215789794922
    10. '[num' → logprob: -16.503215789794922

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047470152378082275
    2. '
' → logprob: -3.6724700927734375
    3. '    
' → logprob: -3.9224700927734375
    4. '   
' → logprob: -7.6724700927734375
    5. '  
' → logprob: -7.9224700927734375
    6. ' 
' → logprob: -9.297470092773438
    7. '<|end|>' → logprob: -9.422470092773438
    8. '        
' → logprob: -9.672470092773438
    9. '  ' → logprob: -10.797470092773438
    10. 'elif' → logprob: -11.172470092773438

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00905626267194748
    2. '    
' → logprob: -5.134056091308594
    3. '
' → logprob: -6.259056091308594
    4. '   
' → logprob: -7.759056091308594
    5. '  
' → logprob: -8.009056091308594
    6. '<|end|>' → logprob: -9.134056091308594
    7. '  ' → logprob: -9.259056091308594
    8. ' 
' → logprob: -9.384056091308594
    9. '```' → logprob: -9.384056091308594
    10. '    ' → logprob: -10.759056091308594

Token 65: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016941243782639503
    2. '    
' → logprob: -4.766941070556641
    3. '
' → logprob: -5.516941070556641
    4. ' 
' → logprob: -6.766941070556641
    5. '  
' → logprob: -6.891941070556641
    6. ' elif' → logprob: -7.516941070556641
    7. 'elif' → logprob: -7.641941070556641
    8. '   
' → logprob: -8.01694107055664
    9. ' if' → logprob: -8.51694107055664
    10. '  ' → logprob: -9.01694107055664

Token 66: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.00020473242329899222
    2. 'num' → logprob: -8.500205039978027
    3. ' ' → logprob: -13.625205039978027
    4. ' ' → logprob: -16.75020408630371
    5. '	num' → logprob: -17.12520408630371
    6. '(num' → logprob: -17.12520408630371
    7. '<num' → logprob: -17.25020408630371
    8. ' min' → logprob: -19.50020408630371
    9. '[num' → logprob: -19.50020408630371
    10. '  ' → logprob: -19.50020408630371

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033656876534223557
    2. '<' → logprob: -3.4086568355560303
    3. ' ' → logprob: -11.53365707397461
    4. '<num' → logprob: -14.78365707397461
    5. '<int' → logprob: -15.53365707397461
    6. '```' → logprob: -16.03365707397461
    7. '   ' → logprob: -16.47115707397461
    8. 'a' → logprob: -16.65865707397461
    9. '2' → logprob: -16.84615707397461
    10. '[' → logprob: -16.97115707397461

Token 68: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0015272404998540878
    2. 'min' → logprob: -6.501527309417725
    3. ' max' → logprob: -10.626526832580566
    4. ' ' → logprob: -15.126526832580566
    5. 'max' → logprob: -15.251526832580566
    6. '_min' → logprob: -17.251527786254883
    7. '	min' → logprob: -17.751527786254883
    8. '(min' → logprob: -18.001527786254883
    9. '=min' → logprob: -18.876527786254883
    10. ' ' → logprob: -19.251527786254883

Token 69: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.069664333248511e-05
    2. ' _' → logprob: -11.875020980834961
    3. '_' → logprob: -12.000020980834961
    4. 'num' → logprob: -12.875020980834961
    5. 'um' → logprob: -13.375020980834961
    6. '_min' → logprob: -13.625020980834961
    7. '```' → logprob: -14.875020980834961
    8. '   ' → logprob: -15.375020980834961
    9. '._' → logprob: -15.500020980834961
    10. 'inum' → logprob: -15.625020980834961

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33631548285484314
    2. '       ' → logprob: -1.8363155126571655
    3. ' =' → logprob: -2.836315393447876
    4. ':
' → logprob: -2.961315393447876
    5. '=' → logprob: -4.211315631866455
    6. ' :' → logprob: -7.711315631866455
    7. '   ' → logprob: -7.961315631866455
    8. ' :
' → logprob: -9.086315155029297
    9. ' ' → logprob: -10.961315155029297
    10. '      ' → logprob: -12.086315155029297

Token 71: '       ' (ID: 309)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.016583114862442017
    2. 'num' → logprob: -4.51658296585083
    3. ' min' → logprob: -5.26658296585083
    4. '       ' → logprob: -8.391583442687988
    5. '   ' → logprob: -9.641583442687988
    6. 'min' → logprob: -10.516583442687988
    7. '    ' → logprob: -11.391583442687988
    8. ' ' → logprob: -11.766583442687988
    9. '```' → logprob: -12.016583442687988
    10. ' ' → logprob: -12.516583442687988

Token 72: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5839452743530273
    2. ' num' → logprob: -0.8339452743530273
    3. 'num' → logprob: -5.083945274353027
    4. 'min' (adapté à ' min') → logprob: -6.333945274353027
    5. ' max' → logprob: -12.833945274353027
    6. ' ' → logprob: -15.833945274353027
    7. ' ' → logprob: -16.583946228027344
    8. 'max' → logprob: -16.583946228027344
    9. '	num' → logprob: -16.583946228027344
    10. '=num' → logprob: -16.708946228027344

Token 73: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.012538615614175797
    2. '_' → logprob: -4.387538433074951
    3. '_um' → logprob: -11.13753890991211
    4. 'um' → logprob: -12.51253890991211
    5. ' _' → logprob: -12.88753890991211
    6. 'u' → logprob: -13.26253890991211
    7. '_u' → logprob: -13.51253890991211
    8. '_n' → logprob: -13.63753890991211
    9. 'num' → logprob: -14.38753890991211
    10. '__' → logprob: -14.63753890991211

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575956404209137
    2. '=' → logprob: -0.825956404209137
    3. ' =
' → logprob: -11.450956344604492
    4. ' ' → logprob: -12.325956344604492
    5. ' ==' → logprob: -14.200956344604492
    6. ' =)' → logprob: -14.950956344604492
    7. '=
' → logprob: -15.075956344604492
    8. '<|end|>' → logprob: -15.575956344604492
    9. '=

' → logprob: -16.200956344604492
    10. ' =
' → logprob: -16.450956344604492

Token 75: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.009761752560734749
    2. 'num' → logprob: -4.634761810302734
    3. ' ' → logprob: -12.634761810302734
    4. ' ' → logprob: -13.259761810302734
    5. ' min' → logprob: -15.509761810302734
    6. '	num' → logprob: -15.509761810302734
    7. '<num' → logprob: -16.259761810302734
    8. '[num' → logprob: -16.509761810302734
    9. 'n' → logprob: -17.384761810302734
    10. '(num' → logprob: -17.509761810302734

Token 76: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02465752139687538
    2. '
' → logprob: -3.8996574878692627
    3. ')' → logprob: -6.649657726287842
    4. ' 
' → logprob: -7.774657726287842
    5. 'p' → logprob: -7.899657726287842
    6. '\n' → logprob: -7.899657726287842
    7. '#' → logprob: -7.899657726287842
    8. ' print' → logprob: -8.024657249450684
    9. 'n' → logprob: -8.524657249450684
    10. '+' → logprob: -8.649657249450684

Token 77: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005544055253267288
    2. 'p' → logprob: -5.755544185638428
    3. ')' → logprob: -7.755544185638428
    4. ' 
' → logprob: -8.00554370880127
    5. 'max' → logprob: -8.25554370880127
    6. 'pr' → logprob: -8.38054370880127
    7. '+' → logprob: -8.50554370880127
    8. 'n' → logprob: -8.75554370880127
    9. '#' → logprob: -8.88054370880127
    10. 'prin' → logprob: -9.38054370880127

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7732539772987366
    2. ' =' → logprob: -1.1482539176940918
    3. '_' → logprob: -1.5232539176940918
    4. '[' → logprob: -7.023253917694092
    5. '.' → logprob: -7.148253917694092
    6. ')' → logprob: -7.648253917694092
    7. ' ' → logprob: -8.14825439453125
    8. ',' → logprob: -8.64825439453125
    9. '[:]' → logprob: -8.64825439453125
    10. ':' → logprob: -9.52325439453125

Token 79: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07021362334489822
    2. 'max' → logprob: -2.695213556289673
    3. ' ' → logprob: -9.070213317871094
    4. '(max' → logprob: -9.695213317871094
    5. ' min' → logprob: -10.570213317871094
    6. '"' → logprob: -10.695213317871094
    7. ''' → logprob: -10.945213317871094
    8. '[max' → logprob: -11.070213317871094
    9. ' ' → logprob: -11.320213317871094
    10. 'min' → logprob: -13.320213317871094

Token 80: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.02057201974093914
    2. '_' → logprob: -3.8955719470977783
    3. ' _' → logprob: -11.3955717086792
    4. '_
' → logprob: -12.6455717086792
    5. '_n' → logprob: -12.8955717086792
    6. '_max' → logprob: -13.3955717086792
    7. '__' → logprob: -13.5205717086792
    8. '_

' → logprob: -13.6455717086792
    9. '```' → logprob: -13.8955717086792
    10. '\' → logprob: -14.0205717086792

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18404290080070496
    2. '-' → logprob: -1.8090429306030273
    3. ' ' → logprob: -5.684042930603027
    4. '-min' → logprob: -7.684042930603027
    5. '<|end|>' → logprob: -8.809042930603027
    6. ' ' → logprob: -9.059042930603027
    7. ''' → logprob: -10.434042930603027
    8. '"' → logprob: -10.809042930603027
    9. '  ' → logprob: -11.059042930603027
    10. '_' → logprob: -11.309042930603027

Token 82: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815006136894226
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -16.643150329589844
    4. '(min' → logprob: -17.143150329589844
    5. 'max' → logprob: -17.643150329589844
    6. ' ' → logprob: -18.018150329589844
    7. '[min' → logprob: -18.143150329589844
    8. '1' → logprob: -18.893150329589844
    9. '_min' → logprob: -19.143150329589844
    10. '=min' → logprob: -19.768150329589844

Token 83: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0002649119414854795
    2. '_' → logprob: -8.250265121459961
    3. '__' → logprob: -13.500265121459961
    4. ' _' → logprob: -13.625265121459961
    5. 'num' → logprob: -15.750265121459961
    6. '```' → logprob: -15.875265121459961
    7. '_um' → logprob: -16.12526512145996
    8. '​' → logprob: -16.25026512145996
    9. 'um' → logprob: -16.25026512145996
    10. '_
' → logprob: -16.87526512145996

Token 84: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018574565649032593
    2. '
' → logprob: -4.0185747146606445
    3. ' print' → logprob: -9.018574714660645
    4. ')' → logprob: -9.268574714660645
    5. '<|end|>' → logprob: -9.518574714660645
    6. '\n' → logprob: -9.893574714660645
    7. '' → logprob: -10.768574714660645
    8. '#' → logprob: -11.768574714660645
    9. ' 
' → logprob: -11.893574714660645
    10. '
' → logprob: -12.018574714660645

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006844374001957476
    2. 'p' → logprob: -7.5006842613220215
    3. '\n' → logprob: -10.25068473815918
    4. 'prin' → logprob: -10.87568473815918
    5. '
' → logprob: -11.12568473815918
    6. 'pr' → logprob: -11.12568473815918
    7. '\' → logprob: -11.37568473815918
    8. ')' → logprob: -12.00068473815918
    9. '#' → logprob: -12.00068473815918
    10. ' print' → logprob: -12.25068473815918

Token 86: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006872017867863178
    2. '(ans' → logprob: -5.006872177124023
    3. '('' → logprob: -9.506872177124023
    4. '("("' → logprob: -9.506872177124023
    5. ' (' → logprob: -12.881872177124023
    6. '()' → logprob: -13.381872177124023
    7. '(
' → logprob: -14.131872177124023
    8. '(`' → logprob: -14.381872177124023
    9. '(a' → logprob: -14.756872177124023
    10. '(an' → logprob: -15.006872177124023

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -16.75
    4. '')' → logprob: -17.375
    5. ')`' → logprob: -18.5
    6. ')
' → logprob: -19.125
    7. '(' → logprob: -19.25
    8. '`)' → logprob: -19.5
    9. '")' → logprob: -19.875
    10. '）' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 50.59%
Précision adaptée (1ère position): 50.59%
Précision (top 10): 82.35%
================================================================================
