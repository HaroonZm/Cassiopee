================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
from collections import Counter

def count_zero_sum_subarrays():
    """
    Lit une séquence d'entiers depuis l'entrée standard,
    puis calcule le nombre de sous-tableaux dont la somme est nulle.
    
    Utilise la technique des sommes cumulées et un Counter pour compter
    le nombre de paires d'indices ayant la même somme cumulée.
    
    Entrée :
        - La première ligne contient un entier n : la taille du tableau.
        - La seconde ligne contient n entiers séparés par des espaces.
    
    Sortie :
        - Un entier indiquant le nombre de sous-tableaux dont la somme est nulle.
    """
    # Lecture de la taille du tableau
    n = int(input())
    # Lecture de la liste d'entiers et ajout d'un zéro au début pour la gestion de la somme cumulée
    a = [0] + list(map(int, input().split()))
    # Calcul du tableau des sommes cumulées
    cumsum = np.cumsum(a)
    # Comptage du nombre d'occurrences de chaque somme cumulée
    c = Counter(cumsum)
    cnt = 0  # Initialise le compteur de sous-tableaux de somme nulle
    # Pour chaque somme cumulée apparaissant plusieurs fois,
    # le nombre de sous-tableaux correspondants est comb(n, 2)
    for i in c.values():
        if i > 1:
            cnt += int(i * (i - 1) / 2)
    # Affichage du résultat
    print(cnt)

# Appel de la fonction principale
count_zero_sum_subarrays()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.001180704333819449
    2. 'np' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.001180648803711
    4. ' numpy' → logprob: -12.376180648803711
    5. ' ' → logprob: -15.751180648803711
    6. '```' → logprob: -17.75118064880371
    7. 'numpy' → logprob: -17.87618064880371
    8. '_np' → logprob: -18.12618064880371
    9. '(np' → logprob: -18.50118064880371
    10. ' n' → logprob: -18.75118064880371

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014861393719911575
    2. '\n' → logprob: -5.264861583709717
    3. '\' → logprob: -6.014861583709717
    4. '```' → logprob: -6.139861583709717
    5. '<|end|>' → logprob: -6.889861583709717
    6. 'import' → logprob: -6.889861583709717
    7. 'newline' → logprob: -7.514861583709717
    8. '
' → logprob: -7.639861583709717
    9. '#' → logprob: -8.014861106872559
    10. '[' → logprob: -8.389861106872559

Token 6: ' collections' (ID: 22690)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.060342974960803986
    2. ' pandas' → logprob: -3.310343027114868
    3. ' scipy' → logprob: -4.560342788696289
    4. ' tensorflow' → logprob: -5.185342788696289
    5. 'sk' → logprob: -5.310342788696289
    6. ' math' → logprob: -7.935342788696289
    7. ' matplotlib' → logprob: -8.685342788696289
    8. ' keras' → logprob: -8.685342788696289
    9. ' ' → logprob: -9.810342788696289
    10. ' random' → logprob: -10.185342788696289

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.474537193775177
    2. 'import' → logprob: -0.974537193775177
    3. '```' → logprob: -8.349536895751953
    4. 'Counter' → logprob: -9.849536895751953
    5. '.Counter' → logprob: -10.474536895751953
    6. '.' → logprob: -10.724536895751953
    7. ' defaultdict' → logprob: -10.724536895751953
    8. ' Counter' → logprob: -10.849536895751953
    9. ' ' → logprob: -11.224536895751953
    10. 'abc' → logprob: -11.349536895751953

Token 8: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2906546890735626
    2. ' deque' → logprob: -1.7906546592712402
    3. ' abc' → logprob: -2.9156546592712402
    4. 'deque' → logprob: -3.6656546592712402
    5. ' Counter' → logprob: -5.66565465927124
    6. ' named' → logprob: -7.04065465927124
    7. 'abc' → logprob: -7.16565465927124
    8. ' Ordered' → logprob: -8.665655136108398
    9. ' import' → logprob: -9.165655136108398
    10. 'Counter' → logprob: -9.790655136108398

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0048125982284546
    2. '\n' → logprob: -1.0048125982284546
    3. 'import' → logprob: -2.004812717437744
    4. '```' → logprob: -2.879812717437744
    5. '

' → logprob: -4.254812717437744
    6. '\' → logprob: -4.379812717437744
    7. '' → logprob: -5.004812717437744
    8. 'n' → logprob: -5.254812717437744
    9. 'def' → logprob: -5.504812717437744
    10. '#' → logprob: -5.504812717437744

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.658757746219635
    2. 'd' → logprob: -1.6587576866149902
    3. '.' → logprob: -2.2837576866149902
    4. '\' → logprob: -3.4087576866149902
    5. 'def' → logprob: -3.6587576866149902
    6. 'data' → logprob: -3.6587576866149902
    7. ',' → logprob: -3.6587576866149902
    8. '`' → logprob: -3.9087576866149902
    9. '\n' → logprob: -4.28375768661499
    10. '```' → logprob: -5.15875768661499

Token 11: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02870250679552555
    2. ' calculate' → logprob: -4.028702735900879
    3. ' count' → logprob: -5.028702735900879
    4. ' predict' → logprob: -6.903702735900879
    5. ' analyze' → logprob: -7.403702735900879
    6. ' process' → logprob: -7.528702735900879
    7. ' compute' → logprob: -7.903702735900879
    8. ' most' → logprob: -8.528702735900879
    9. ' tokenize' → logprob: -8.528702735900879
    10. ' mode' → logprob: -8.778702735900879

Token 12: '_zero' (ID: 53468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3294919729232788
    2. '_words' → logprob: -1.7044919729232788
    3. '_tokens' → logprob: -2.7044920921325684
    4. '(' → logprob: -4.329492092132568
    5. '_chars' → logprob: -5.704492092132568
    6. '_items' → logprob: -5.829492092132568
    7. '_counts' → logprob: -6.204492092132568
    8. '_elements' → logprob: -6.204492092132568
    9. '_word' → logprob: -6.954492092132568
    10. '_con' → logprob: -7.329492092132568

Token 13: '_sum' (ID: 29859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25618284940719604
    2. '_s' → logprob: -1.5061829090118408
    3. 'es' → logprob: -5.631182670593262
    4. '_' → logprob: -8.256182670593262
    5. ' s' → logprob: -8.256182670593262
    6. '(' → logprob: -9.756182670593262
    7. '(s' → logprob: -10.881182670593262
    8. '_div' → logprob: -11.631182670593262
    9. '_tokens' → logprob: -11.881182670593262
    10. '_cells' → logprob: -12.256182670593262

Token 14: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.24026384949684143
    2. '_trip' → logprob: -1.615263819694519
    3. '_pairs' → logprob: -4.365263938903809
    4. '_t' → logprob: -7.490263938903809
    5. '_s' → logprob: -7.865263938903809
    6. '_quad' → logprob: -7.990263938903809
    7. '_sequences' → logprob: -8.615263938903809
    8. '_' → logprob: -8.740263938903809
    9. '```' → logprob: -9.240263938903809
    10. '_suffix' → logprob: -9.990263938903809

Token 15: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0010050622513517737
    2. 'array' → logprob: -7.001005172729492
    3. 'se' → logprob: -9.626005172729492
    4. '_arrays' → logprob: -11.626005172729492
    5. 'arr' → logprob: -11.876005172729492
    6. ' arrays' → logprob: -12.126005172729492
    7. 'sets' → logprob: -13.626005172729492
    8. 'ar' → logprob: -13.626005172729492
    9. 'a' → logprob: -14.126005172729492
    10. 'arra' → logprob: -14.126005172729492

Token 16: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010163593105971813
    2. '_' → logprob: -10.250102043151855
    3. '():' → logprob: -11.375102043151855
    4. ' (' → logprob: -11.875102043151855
    5. '(:' → logprob: -12.250102043151855
    6. ':' → logprob: -12.625102043151855
    7. '(user' → logprob: -12.750102043151855
    8. '()' → logprob: -13.000102043151855
    9. '(x' → logprob: -13.000102043151855
    10. '(
' → logprob: -13.125102043151855

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240547060966492
    2. '(' → logprob: -1.024054765701294
    3. '():' → logprob: -3.649054765701294
    4. ':' → logprob: -4.149054527282715
    5. '```' → logprob: -5.774054527282715
    6. '(n' → logprob: -6.524054527282715
    7. '    ' → logprob: -8.149054527282715
    8. ' :' → logprob: -8.274054527282715
    9. '       ' → logprob: -8.524054527282715
    10. '(:' → logprob: -8.649054527282715

Token 18: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08158271014690399
    2. '    ' → logprob: -3.45658278465271
    3. '```' → logprob: -4.206582546234131
    4. ' n' → logprob: -5.206582546234131
    5. 'n' → logprob: -5.331582546234131
    6. ' ' → logprob: -5.956582546234131
    7. 'counter' → logprob: -5.956582546234131
    8. 'total' → logprob: -5.956582546234131
    9. ' counter' → logprob: -6.081582546234131
    10. '    
' → logprob: -6.331582546234131

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19531455636024475
    2. '#' → logprob: -2.820314645767212
    3. '"""' → logprob: -3.070314645767212
    4. 'def' → logprob: -3.945314645767212
    5. 'n' → logprob: -4.820314407348633
    6. '    ' → logprob: -5.195314407348633
    7. '"' → logprob: -5.445314407348633
    8. ' """' → logprob: -5.570314407348633
    9. ' ' → logprob: -5.695314407348633
    10. '"""
' → logprob: -5.820314407348633

Token 20: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8388070464134216
    2. '"""' → logprob: -0.8388070464134216
    3. 'Calculate' → logprob: -3.2138071060180664
    4. 'Count' → logprob: -3.8388071060180664
    5. ' """' → logprob: -4.088807106018066
    6. 'Find' → logprob: -4.963807106018066
    7. 'Counts' → logprob: -5.213807106018066
    8. ' Counts' → logprob: -5.213807106018066
    9. 'Detect' → logprob: -5.213807106018066
    10. ' Calculates' → logprob: -5.463807106018066

Token 21: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.40976443886756897
    2. 'tle' → logprob: -1.6597644090652466
    3. 'e' → logprob: -2.909764528274536
    4. 'def' → logprob: -3.034764528274536
    5. 'eral' → logprob: -4.159764289855957
    6. 'ral' → logprob: -4.409764289855957
    7. 't' → logprob: -5.284764289855957
    8. '   ' → logprob: -6.284764289855957
    9. 'doc' → logprob: -6.409764289855957
    10. '```' → logprob: -6.659764289855957

Token 22: ' sé' (ID: 7462)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9559462666511536
    2. ' tableau' → logprob: -1.3309462070465088
    3. ' ' → logprob: -1.8309462070465088
    4. 'la' → logprob: -2.955946207046509
    5. 'liste' → logprob: -3.455946207046509
    6. 'l' → logprob: -3.705946207046509
    7. ' liste' → logprob: -4.455946445465088
    8. ' le' → logprob: -4.580946445465088
    9. 'table' → logprob: -5.205946445465088
    10. ' chaîne' → logprob: -5.205946445465088

Token 23: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.1823570281267166
    2. 'rie' → logprob: -1.8073570728302002
    3. 'quences' → logprob: -6.682356834411621
    4. 'ries' → logprob: -7.057356834411621
    5. 'q' → logprob: -8.807356834411621
    6. 'que' → logprob: -9.932356834411621
    7. 'ance' → logprob: -10.057356834411621
    8. 'lection' → logprob: -10.182356834411621
    9. '   ' → logprob: -10.307356834411621
    10. 'qu' → logprob: -10.807356834411621

Token 24: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11778221279382706
    2. ' d' → logprob: -2.7427821159362793
    3. ' ' → logprob: -3.3677821159362793
    4. 'de' → logprob: -4.867782115936279
    5. ' ,' → logprob: -6.117782115936279
    6. ' complète' → logprob: -7.117782115936279
    7. 'd' → logprob: -7.992782115936279
    8. ' )' → logprob: -8.617782592773438
    9. ',' → logprob: -8.617782592773438
    10. 's' → logprob: -8.992782592773438

Token 25: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.04387920722365379
    2. ' ent' → logprob: -3.793879270553589
    3. 'ent' → logprob: -4.66887903213501
    4. '’ent' → logprob: -5.04387903213501
    5. 'e' → logprob: -6.41887903213501
    6. ' nombres' → logprob: -6.79387903213501
    7. ''entrée' → logprob: -7.79387903213501
    8. 'n' → logprob: -7.91887903213501
    9. ' entier' → logprob: -8.418879508972168
    10. 'inte' → logprob: -8.793879508972168

Token 26: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02767706848680973
    2. 'r' → logprob: -4.277677059173584
    3. 'ier' → logprob: -4.777677059173584
    4. 'rée' → logprob: -5.902677059173584
    5. 'rees' → logprob: -7.027677059173584
    6. 'ées' → logprob: -7.402677059173584
    7. '```' → logprob: -8.277677536010742
    8. 'ries' → logprob: -8.402677536010742
    9. 'ières' → logprob: -8.527677536010742
    10. 'ée' → logprob: -11.027677536010742

Token 27: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4249875843524933
    2. ' ,' → logprob: -2.174987554550171
    3. ',' → logprob: -2.549987554550171
    4. ' en' → logprob: -2.674987554550171
    5. ' from' → logprob: -3.674987554550171
    6. ' à' → logprob: -4.29998779296875
    7. 'from' → logprob: -4.29998779296875
    8. ' depuis' → logprob: -4.54998779296875
    9. 's' → logprob: -4.92498779296875
    10. ' de' → logprob: -5.92498779296875

Token 28: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6249229311943054
    2. ' l' → logprob: -0.8749229311943054
    3. ' input' → logprob: -3.74992299079895
    4. ' stdin' → logprob: -4.499922752380371
    5. 'input' → logprob: -5.499922752380371
    6. ' standard' → logprob: -5.624922752380371
    7. 'standard' → logprob: -6.374922752380371
    8. 'stdin' → logprob: -6.624922752380371
    9. '```' → logprob: -7.499922752380371
    10. 'la' → logprob: -8.374922752380371

Token 29: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7096132040023804
    2. ''entrée' → logprob: -0.8346132040023804
    3. 'entrée' → logprob: -2.83461332321167
    4. 'input' → logprob: -5.33461332321167
    5. ''' → logprob: -5.83461332321167
    6. 'e' → logprob: -6.08461332321167
    7. 'stdin' → logprob: -6.58461332321167
    8. 'import' → logprob: -6.95961332321167
    9. 'ent' → logprob: -7.58461332321167
    10. 'es' → logprob: -7.83461332321167

Token 30: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.12009581923484802
    2. 'standard' → logprob: -2.245095729827881
    3. ',' → logprob: -5.995095729827881
    4. ' et' → logprob: -6.995095729827881
    5. '   ' → logprob: -7.245095729827881
    6. ' utilisateur' → logprob: -7.745095729827881
    7. ' and' → logprob: -7.870095729827881
    8. ' stdin' → logprob: -8.120096206665039
    9. ' ' → logprob: -8.245096206665039
    10. ' ,' → logprob: -8.620096206665039

Token 31: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09193560481071472
    2. ',' → logprob: -3.216935634613037
    3. '\n' → logprob: -3.716935634613037
    4. '    ' → logprob: -5.591935634613037
    5. ' et' → logprob: -5.716935634613037
    6. '.' → logprob: -5.716935634613037
    7. ' ' → logprob: -5.716935634613037
    8. '\' → logprob: -6.091935634613037
    9. ' ,' → logprob: -6.341935634613037
    10. '    
' → logprob: -6.716935634613037

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02142312377691269
    2. ' et' → logprob: -4.27142333984375
    3. ' puis' → logprob: -6.02142333984375
    4. ' retourne' → logprob: -6.52142333984375
    5. 'et' → logprob: -6.77142333984375
    6. '    ' → logprob: -7.14642333984375
    7. ' continue' → logprob: -8.52142333984375
    8. ' tokenize' → logprob: -8.64642333984375
    9. ' and' → logprob: -8.77142333984375
    10. ',' → logprob: -9.39642333984375

Token 33: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01174366008490324
    2. ' puis' → logprob: -6.136743545532227
    3. ' calc' → logprob: -6.261743545532227
    4. ' et' → logprob: -6.511743545532227
    5. ' compte' → logprob: -7.011743545532227
    6. ' calculates' → logprob: -7.261743545532227
    7. 'comp' → logprob: -7.511743545532227
    8. 'et' → logprob: -8.011743545532227
    9. '    ' → logprob: -8.136743545532227
    10. 'calcul' → logprob: -8.136743545532227

Token 34: ' calc' (ID: 25691)
  Prédit: ' compte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.3667377233505249
    2. ' calc' → logprob: -1.866737723350525
    3. '   ' → logprob: -2.9917378425598145
    4. 'comp' → logprob: -3.1167378425598145
    5. 'cal' → logprob: -4.7417378425598145
    6. ' calcul' → logprob: -5.6167378425598145
    7. ' retourne' → logprob: -5.8667378425598145
    8. ' cherche' → logprob: -5.9917378425598145
    9. 'calcul' → logprob: -5.9917378425598145
    10. ' trouve' → logprob: -6.1167378425598145

Token 35: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00017982252757064998
    2. 'cule' → logprob: -9.1251802444458
    3. '```' → logprob: -11.2501802444458
    4. '**' → logprob: -11.6251802444458
    5. 'ulé' → logprob: -11.6251802444458
    6. '   ' → logprob: -11.8751802444458
    7. 'ul' → logprob: -12.3751802444458
    8. 'le' → logprob: -12.7501802444458
    9. '       ' → logprob: -13.0001802444458
    10. '#' → logprob: -13.0001802444458

Token 36: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.27103692293167114
    2. ' et' → logprob: -1.5210368633270264
    3. 'le' → logprob: -4.5210371017456055
    4. 'et' → logprob: -5.6460371017456055
    5. ' la' → logprob: -7.0210371017456055
    6. '<|end|>' → logprob: -7.3960371017456055
    7. ' ' → logprob: -7.8960371017456055
    8. ',' → logprob: -7.8960371017456055
    9. ' l' → logprob: -8.021037101745605
    10. ' and' → logprob: -8.146037101745605

Token 37: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.03376556560397148
    2. 'nombre' → logprob: -3.4087655544281006
    3. ' ' → logprob: -10.28376579284668
    4. ' number' → logprob: -10.65876579284668
    5. '   ' → logprob: -11.28376579284668
    6. ' plus' → logprob: -11.40876579284668
    7. ' nombres' → logprob: -11.53376579284668
    8. ' nomb' → logprob: -12.15876579284668
    9. '_nombre' → logprob: -12.53376579284668
    10. 'n' → logprob: -12.65876579284668

Token 38: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32277509570121765
    2. ' ' → logprob: -1.82277512550354
    3. ' d' → logprob: -2.32277512550354
    4. '    ' → logprob: -5.322774887084961
    5. ' total' → logprob: -5.697774887084961
    6. '  ' → logprob: -5.822774887084961
    7. ' des' → logprob: -6.822774887084961
    8. '<|end|>' → logprob: -6.947774887084961
    9. 'd' → logprob: -7.322774887084961
    10. 'de' → logprob: -7.447774887084961

Token 39: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.017345862463116646
    2. ' sub' → logprob: -4.892345905303955
    3. 's' → logprob: -5.517345905303955
    4. ' trip' → logprob: -6.267345905303955
    5. ' p' → logprob: -6.642345905303955
    6. 'sub' → logprob: -7.017345905303955
    7. ' under' → logprob: -7.767345905303955
    8. ' zéro' → logprob: -8.517345428466797
    9. ' subse' → logprob: -8.642345428466797
    10. ' pairs' → logprob: -8.642345428466797

Token 40: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2501179575920105
    2. '-table' → logprob: -2.1251180171966553
    3. '   ' → logprob: -3.0001180171966553
    4. '-s' → logprob: -4.000117778778076
    5. '_' → logprob: -4.250117778778076
    6. '_table' → logprob: -5.000117778778076
    7. '-list' → logprob: -6.125117778778076
    8. '_s' → logprob: -6.500117778778076
    9. 'table' → logprob: -6.875117778778076
    10. '-cha' → logprob: -6.875117778778076

Token 41: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.04065483808517456
    2. 'au' → logprob: -3.2906548976898193
    3. 'aus' → logprob: -7.41565465927124
    4. 'a' → logprob: -7.41565465927124
    5. '```' → logprob: -7.54065465927124
    6. 'ttes' → logprob: -8.915655136108398
    7. 'ux' → logprob: -9.165655136108398
    8. '-' → logprob: -9.290655136108398
    9. '   ' → logprob: -9.665655136108398
    10. '``' → logprob: -9.790655136108398

Token 42: ' dont' (ID: 11562)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6740231513977051
    2. ' dont' → logprob: -1.049023151397705
    3. ' whose' → logprob: -3.299023151397705
    4. ' cont' → logprob: -3.674023151397705
    5. 'dont' → logprob: -3.799023151397705
    6. ' d' → logprob: -4.424023151397705
    7. '   ' → logprob: -5.049023151397705
    8. ' de' → logprob: -5.049023151397705
    9. 'cont' → logprob: -5.174023151397705
    10. 'd' → logprob: -5.299023151397705

Token 43: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2085198014974594
    2. ' la' → logprob: -1.7085198163986206
    3. '   ' → logprob: -5.83351993560791
    4. '```' → logprob: -6.83351993560791
    5. 'l' → logprob: -7.08351993560791
    6. 's' → logprob: -7.20851993560791
    7. ' ' → logprob: -7.95851993560791
    8. 'le' → logprob: -8.33351993560791
    9. '    ' → logprob: -8.95851993560791
    10. 'les' → logprob: -9.08351993560791

Token 44: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14485929906368256
    2. ' somme' → logprob: -2.1448593139648438
    3. ' som' → logprob: -4.519859313964844
    4. 'som' → logprob: -5.394859313964844
    5. ' ' → logprob: -6.894859313964844
    6. '```' → logprob: -7.519859313964844
    7. '   ' → logprob: -8.519859313964844
    8. ' sommes' → logprob: -8.769859313964844
    9. 'sum' → logprob: -8.894859313964844
    10. ' soma' → logprob: -9.894859313964844

Token 45: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3188503086566925
    2. '   ' → logprob: -2.56885027885437
    3. 'n' → logprob: -2.81885027885437
    4. ' ég' → logprob: -2.94385027885437
    5. '0' → logprob: -3.44385027885437
    6. ' zéro' → logprob: -3.69385027885437
    7. ' nul' → logprob: -5.068850517272949
    8. ' ' → logprob: -5.318850517272949
    9. 'ég' → logprob: -5.568850517272949
    10. 'égal' → logprob: -5.568850517272949

Token 47: 'ulle' (ID: 14644)
  Prédit: 'ulle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulle' → logprob: -0.14474894106388092
    2. 'u' → logprob: -2.5197489261627197
    3. 'é' → logprob: -3.5197489261627197
    4. 'ull' → logprob: -4.519749164581299
    5. 'ul' → logprob: -5.269749164581299
    6. 'z' → logprob: -5.519749164581299
    7. '0' → logprob: -6.394749164581299
    8. 'e' → logprob: -6.644749164581299
    9. 'o' → logprob: -7.394749164581299
    10. '\' → logprob: -9.01974868774414

Token 48: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06148163229227066
    2. '.' → logprob: -3.4364817142486572
    3. '\n' → logprob: -4.686481475830078
    4. ':' → logprob: -5.186481475830078
    5. '    
' → logprob: -6.186481475830078
    6. '\' → logprob: -6.436481475830078
    7. '    ' → logprob: -6.811481475830078
    8. ' ' → logprob: -6.811481475830078
    9. ',' → logprob: -6.936481475830078
    10. '"""' → logprob: -7.061481475830078

Token 49: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05996077507734299
    2. '"""' → logprob: -3.0599608421325684
    3. '\n' → logprob: -5.059960842132568
    4. '"""
' → logprob: -6.309960842132568
    5. '\' → logprob: -7.059960842132568
    6. '```' → logprob: -7.059960842132568
    7. '""' → logprob: -7.934960842132568
    8. '"' → logprob: -8.18496036529541
    9. ')' → logprob: -8.30996036529541
    10. '    
' → logprob: -9.18496036529541

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001667207689024508
    2. '"""' → logprob: -6.751667022705078
    3. '```' → logprob: -8.251667022705078
    4. '    ' → logprob: -9.626667022705078
    5. '    
' → logprob: -10.126667022705078
    6. ')' → logprob: -10.626667022705078
    7. '\n' → logprob: -10.751667022705078
    8. ' """' → logprob: -11.001667022705078
    9. '"""
' → logprob: -11.251667022705078
    10. '
' → logprob: -11.376667022705078

Token 51: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058144763112068176
    2. 'input' → logprob: -4.058144569396973
    3. 'data' → logprob: -4.183144569396973
    4. 'n' → logprob: -5.433144569396973
    5. ' data' → logprob: -5.433144569396973
    6. ' lines' → logprob: -6.183144569396973
    7. 's' → logprob: -6.433144569396973
    8. 'import' → logprob: -6.683144569396973
    9. ' input' → logprob: -6.683144569396973
    10. '```' → logprob: -7.058144569396973

Token 52: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0022939443588256836
    2. 'iser' → logprob: -7.002294063568115
    3. 'isez' → logprob: -7.752294063568115
    4. 'isé' → logprob: -8.377293586730957
    5. 'isation' → logprob: -8.752293586730957
    6. 'is' → logprob: -8.877293586730957
    7. 'isant' → logprob: -9.252293586730957
    8. 'se' → logprob: -9.377293586730957
    9. '```' → logprob: -9.877293586730957
    10. 'ises' → logprob: -9.877293586730957

Token 53: ' la' (ID: 557)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.40555793046951294
    2. ' un' → logprob: -2.030557870864868
    3. ' ' → logprob: -2.655557870864868
    4. ' la' → logprob: -3.405557870864868
    5. '    ' → logprob: -3.530557870864868
    6. ' numpy' → logprob: -3.655557870864868
    7. ' l' → logprob: -4.030558109283447
    8. ' defaultdict' → logprob: -5.530558109283447
    9. '   ' → logprob: -5.905558109283447
    10. '  ' → logprob: -5.905558109283447

Token 54: ' technique' (ID: 16410)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27217334508895874
    2. ' méthode' → logprob: -2.5221734046936035
    3. ' technique' → logprob: -3.3971734046936035
    4. ' Counter' → logprob: -4.0221734046936035
    5. 'Counter' → logprob: -4.2721734046936035
    6. 'np' → logprob: -4.3971734046936035
    7. ' somme' → logprob: -4.7721734046936035
    8. ' programmation' → logprob: -4.7721734046936035
    9. ' notion' → logprob: -5.0221734046936035
    10. ' logique' → logprob: -5.1471734046936035

Token 55: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2641066312789917
    2. ' des' → logprob: -2.0141067504882812
    3. ' du' → logprob: -2.6391067504882812
    4. ' d' → logprob: -4.014106750488281
    5. '   ' → logprob: -6.139106750488281
    6. 'de' → logprob: -6.264106750488281
    7. 'd' → logprob: -6.389106750488281
    8. ' ' → logprob: -7.014106750488281
    9. ' defaultdict' → logprob: -7.014106750488281
    10. 'du' → logprob: -8.139106750488281

Token 56: ' sommes' (ID: 32024)
  Prédit: ' pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pré' → logprob: -0.36514925956726074
    2. 's' → logprob: -2.4901492595672607
    3. ' diction' → logprob: -2.9901492595672607
    4. 'd' → logprob: -3.2401492595672607
    5. ' defaultdict' → logprob: -3.6151492595672607
    6. 'acc' → logprob: -3.8651492595672607
    7. 'pré' → logprob: -3.8651492595672607
    8. ' sous' → logprob: -4.86514949798584
    9. ' prefix' → logprob: -4.86514949798584
    10. ' accum' → logprob: -4.99014949798584

Token 57: ' cumul' (ID: 163119)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.6826879978179932
    2. '_c' → logprob: -0.8076879978179932
    3. ' cumul' → logprob: -4.057687759399414
    4. '_' → logprob: -4.307687759399414
    5. 'prefix' → logprob: -4.807687759399414
    6. ' prefix' → logprob: -5.557687759399414
    7. 'c' → logprob: -5.932687759399414
    8. 'cum' → logprob: -7.057687759399414
    9. 'pr' → logprob: -8.057687759399414
    10. ' cum' → logprob: -8.307687759399414

Token 58: 'ées' (ID: 5161)
  Prédit: 'atives'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.007539436686784029
    2. 'ative' → logprob: -5.63253927230835
    3. 'ées' → logprob: -6.13253927230835
    4. 'es' → logprob: -7.00753927230835
    5. 'a' → logprob: -8.257539749145508
    6. '   ' → logprob: -9.007539749145508
    7. 'ulative' → logprob: -9.382539749145508
    8. 'atrices' → logprob: -9.757539749145508
    9. '```' → logprob: -9.882539749145508
    10. 'ul' → logprob: -10.007539749145508

Token 59: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.3006998300552368
    2. ' prefix' → logprob: -1.5506998300552368
    3. ' cumul' → logprob: -1.5506998300552368
    4. '   ' → logprob: -1.6756998300552368
    5. ' pour' → logprob: -3.0506997108459473
    6. ',' → logprob: -3.9256997108459473
    7. ' ' → logprob: -4.550699710845947
    8. '.' → logprob: -5.050699710845947
    9. ' ,' → logprob: -5.175699710845947
    10. ' cumulative' → logprob: -5.425699710845947

Token 60: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5196040272712708
    2. ' l' → logprob: -2.269603967666626
    3. 'un' → logprob: -2.894603967666626
    4. ' des' → logprob: -3.019603967666626
    5. 'd' → logprob: -3.144603967666626
    6. ' le' → logprob: -3.519603967666626
    7. ' la' → logprob: -3.644603967666626
    8. ' leur' → logprob: -4.144604206085205
    9. ' les' → logprob: -4.144604206085205
    10. ' Counter' → logprob: -4.269604206085205

Token 61: ' Counter' (ID: 32251)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2451476752758026
    2. ' diction' → logprob: -1.745147705078125
    3. ' Counter' → logprob: -4.120147705078125
    4. 'a' → logprob: -4.370147705078125
    5. ' compteur' → logprob: -4.995147705078125
    6. ' defaultdict' → logprob: -6.245147705078125
    7. 'd' → logprob: -6.620147705078125
    8. ' d' → logprob: -7.120147705078125
    9. 'es' → logprob: -7.370147705078125
    10. ' counter' → logprob: -7.495147705078125

Token 62: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3273264765739441
    2. ' pour' → logprob: -1.8273265361785889
    3. ' to' → logprob: -3.952326536178589
    4. '.' → logprob: -4.07732629776001
    5. ' des' → logprob: -4.07732629776001
    6. 'from' → logprob: -4.32732629776001
    7. ' for' → logprob: -4.70232629776001
    8. ')' → logprob: -5.07732629776001
    9. '```' → logprob: -5.32732629776001
    10. 'import' → logprob: -5.32732629776001

Token 63: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.07541024684906006
    2. ' compt' → logprob: -3.7004103660583496
    3. 'comp' → logprob: -3.8254103660583496
    4. 'count' → logprob: -4.95041036605835
    5. ' suivre' → logprob: -5.45041036605835
    6. ' comp' → logprob: -5.57541036605835
    7. '   ' → logprob: -5.95041036605835
    8. ' ' → logprob: -5.95041036605835
    9. ' gérer' → logprob: -6.32541036605835
    10. ' count' → logprob: -7.45041036605835

Token 64: '
' (ID: 198)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.26488250494003296
    2. '(' → logprob: -2.2648825645446777
    3. ' ' → logprob: -3.5148825645446777
    4. ' la' → logprob: -3.7648825645446777
    5. '    ' → logprob: -3.8898825645446777
    6. 'les' → logprob: -4.014882564544678
    7. '   ' → logprob: -4.014882564544678
    8. ' des' → logprob: -5.514882564544678
    9. 's' → logprob: -5.639882564544678
    10. '  ' → logprob: -6.139882564544678

Token 65: '   ' (ID: 271)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2025492936372757
    2. '(' → logprob: -3.0775492191314697
    3. ' la' → logprob: -3.2025492191314697
    4. '   ' → logprob: -3.4525492191314697
    5. ' ' → logprob: -3.9525492191314697
    6. 'les' → logprob: -3.9525492191314697
    7. '    ' → logprob: -4.452549457550049
    8. ' des' → logprob: -5.827549457550049
    9. ' leurs' → logprob: -5.952549457550049
    10. 's' → logprob: -6.452549457550049

Token 66: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11094222962856293
    2. 'les' → logprob: -2.6109421253204346
    3. ' la' → logprob: -4.360942363739014
    4. ' leurs' → logprob: -5.360942363739014
    5. '   ' → logprob: -5.610942363739014
    6. ' ' → logprob: -5.610942363739014
    7. 'l' → logprob: -6.610942363739014
    8. '    ' → logprob: -6.610942363739014
    9. ' l' → logprob: -7.110942363739014
    10. 's' → logprob: -7.235942363739014

Token 67: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1606892347335815
    2. ' nombre' → logprob: -1.1606892347335815
    3. ' occurrences' → logprob: -1.5356892347335815
    4. ' nombres' → logprob: -3.160689353942871
    5. 'nombre' → logprob: -3.160689353942871
    6. ' pré' → logprob: -3.285689353942871
    7. ' fré' → logprob: -4.910689353942871
    8. ' cumul' → logprob: -5.285689353942871
    9. ' prefix' → logprob: -5.785689353942871
    10. 'pré' → logprob: -6.035689353942871

Token 68: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.02133152075111866
    2. ' ' → logprob: -4.646331310272217
    3. ' de' → logprob: -4.896331310272217
    4. 's' → logprob: -6.521331310272217
    5. 'des' → logprob: -6.771331310272217
    6. ' d' → logprob: -8.396331787109375
    7. '    ' → logprob: -8.521331787109375
    8. '  ' → logprob: -8.646331787109375
    9. ' of' → logprob: -8.771331787109375
    10. '_des' → logprob: -9.021331787109375

Token 69: ' p' (ID: 275)
  Prédit: ' pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pré' → logprob: -0.3773246109485626
    2. ' occurrences' → logprob: -1.7523245811462402
    3. 's' → logprob: -3.0023245811462402
    4. ' sous' → logprob: -4.12732458114624
    5. ' fois' → logprob: -4.37732458114624
    6. ' cumulative' → logprob: -4.75232458114624
    7. ' occur' → logprob: -5.12732458114624
    8. ' prefix' → logprob: -5.25232458114624
    9. ' cumul' → logprob: -5.25232458114624
    10. 'prefix' → logprob: -5.25232458114624

Token 70: 'aires' (ID: 8507)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.11464972048997879
    2. 'r' → logprob: -2.864649772644043
    3. 'refix' → logprob: -3.114649772644043
    4. 'rés' → logprob: -6.239649772644043
    5. 'a' → logprob: -6.614649772644043
    6. 'airs' → logprob: -7.114649772644043
    7. 'aires' → logprob: -7.364649772644043
    8. 're' → logprob: -7.614649772644043
    9. 'ref' → logprob: -7.739649772644043
    10. 'rès' → logprob: -8.739649772644043

Token 71: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ''' (ID: 6)
  Prédit: ' pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pré' → logprob: -0.07675283402204514
    2. ' prefix' → logprob: -3.3267529010772705
    3. 'prefix' → logprob: -4.576752662658691
    4. 'pré' → logprob: -5.076752662658691
    5. ' prefixes' → logprob: -5.326752662658691
    6. ' indices' → logprob: -5.451752662658691
    7. '_prefix' → logprob: -5.576752662658691
    8. 's' → logprob: -6.451752662658691
    9. ' pre' → logprob: -6.576752662658691
    10. 'indices' → logprob: -6.826752662658691

Token 73: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0791957825422287
    2. ' pré' → logprob: -3.079195737838745
    3. ' indices' → logprob: -4.454195976257324
    4. 'pré' → logprob: -4.704195976257324
    5. 'prefix' → logprob: -5.954195976257324
    6. 's' → logprob: -6.454195976257324
    7. 'acc' → logprob: -6.954195976257324
    8. 'élé' → logprob: -7.079195976257324
    9. 'indice' → logprob: -7.204195976257324
    10. 'indexes' → logprob: -7.329195976257324

Token 74: ' ayant' (ID: 45436)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45074185729026794
    2. ' ,' → logprob: -2.200741767883301
    3. '   ' → logprob: -2.575741767883301
    4. ',' → logprob: -2.950741767883301
    5. '    ' → logprob: -2.950741767883301
    6. '  ' → logprob: -3.950741767883301
    7. ' de' → logprob: -4.575741767883301
    8. '```' → logprob: -4.575741767883301
    9. ' )' → logprob: -5.075741767883301
    10. ' qui' → logprob: -6.075741767883301

Token 75: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15065747499465942
    2. ' une' → logprob: -2.5256574153900146
    3. 'la' → logprob: -3.6506574153900146
    4. 'une' → logprob: -4.150657653808594
    5. ' des' → logprob: -5.025657653808594
    6. ' le' → logprob: -6.275657653808594
    7. '<|end|>' → logprob: -6.400657653808594
    8. 'le' → logprob: -6.775657653808594
    9. '```' → logprob: -7.150657653808594
    10. ' the' → logprob: -7.525657653808594

Token 76: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.1629319041967392
    2. 'm' → logprob: -1.9129319190979004
    3. '```' → logprob: -6.5379319190979
    4. ' m' → logprob: -7.7879319190979
    5. ' mêmes' → logprob: -8.287931442260742
    6. 'Même' → logprob: -9.287931442260742
    7. ' Même' → logprob: -9.662931442260742
    8. '
' → logprob: -9.912931442260742
    9. '</' → logprob: -10.037931442260742
    10. ' ' → logprob: -10.037931442260742

Token 77: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.09706252068281174
    2. ' valeur' → logprob: -2.597062587738037
    3. 's' → logprob: -4.222062587738037
    4. 'sum' → logprob: -6.597062587738037
    5. ' cumulative' → logprob: -8.097062110900879
    6. ' ' → logprob: -8.097062110900879
    7. 'val' → logprob: -8.097062110900879
    8. ' sommes' → logprob: -8.847062110900879
    9. ' sum' → logprob: -8.972062110900879
    10. 'c' → logprob: -8.972062110900879

Token 78: ' cumul' (ID: 163119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5717340707778931
    2. '_c' → logprob: -1.446734070777893
    3. '_prefix' → logprob: -2.5717339515686035
    4. ' cumul' → logprob: -3.1967339515686035
    5. 'cum' → logprob: -3.5717339515686035
    6. ' cumulative' → logprob: -3.8217339515686035
    7. ' prefix' → logprob: -4.0717339515686035
    8. ' cum' → logprob: -5.3217339515686035
    9. 'prefix' → logprob: -5.6967339515686035
    10. '   ' → logprob: -5.6967339515686035

Token 79: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.043412476778030396
    2. 'ul' → logprob: -3.793412446975708
    3. 'ulative' → logprob: -4.793412685394287
    4. 'ative' → logprob: -5.418412685394287
    5. 'é' → logprob: -6.293412685394287
    6. 'e' → logprob: -6.418412685394287
    7. 'lée' → logprob: -7.168412685394287
    8. '   ' → logprob: -7.543412685394287
    9. 'uée' → logprob: -7.668412685394287
    10. 'ule' → logprob: -7.793412685394287

Token 80: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4673137962818146
    2. ':' → logprob: -2.467313766479492
    3. '\n' → logprob: -2.467313766479492
    4. '\' → logprob: -2.842313766479492
    5. '.' → logprob: -3.092313766479492
    6. '
' → logprob: -3.342313766479492
    7. '    
' → logprob: -3.717313766479492
    8. '    ' → logprob: -4.967313766479492
    9. ' :' → logprob: -5.342313766479492
    10. ',' → logprob: -5.592313766479492

Token 81: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0629330426454544
    2. '"""' → logprob: -3.1879329681396484
    3. ')' → logprob: -5.062932968139648
    4. '"' → logprob: -5.937932968139648
    5. '"""
' → logprob: -6.187932968139648
    6. '    ' → logprob: -6.312932968139648
    7. ' """' → logprob: -6.437932968139648
    8. ' ' → logprob: -7.062932968139648
    9. '\n' → logprob: -7.187932968139648
    10. ' """
' → logprob: -7.312932968139648

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017021983861923218
    2. '"""' → logprob: -4.142022132873535
    3. '    ' → logprob: -8.267022132873535
    4. '```' → logprob: -8.392022132873535
    5. ' """' → logprob: -8.642022132873535
    6. '"""
' → logprob: -9.142022132873535
    7. '""' → logprob: -9.892022132873535
    8. '"' → logprob: -10.142022132873535
    9. 'def' → logprob: -10.392022132873535
    10. '    
' → logprob: -10.892022132873535

Token 83: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014154697768390179
    2. '"""' → logprob: -4.38915491104126
    3. '    ' → logprob: -7.38915491104126
    4. '```' → logprob: -7.51415491104126
    5. ')' → logprob: -8.889154434204102
    6. '""' → logprob: -9.264154434204102
    7. ' """' → logprob: -9.639154434204102
    8. '"' → logprob: -10.514154434204102
    9. '"""
' → logprob: -10.764154434204102
    10. '  ' → logprob: -11.264154434204102

Token 84: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.019004620611667633
    2. 'ées' → logprob: -4.269004821777344
    3. 'rée' → logprob: -5.769004821777344
    4. 'é' → logprob: -6.519004821777344
    5. 'r' → logprob: -8.644004821777344
    6. ' é' → logprob: -11.769004821777344
    7. 'ré' → logprob: -12.144004821777344
    8. 'ree' → logprob: -12.394004821777344
    9. '```' → logprob: -12.394004821777344
    10. ' r' → logprob: -12.519004821777344

Token 85: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3760409951210022
    2. ' :' → logprob: -1.3760409355163574
    3. '   ' → logprob: -3.6260409355163574
    4. ' standard' → logprob: -4.376040935516357
    5. '```' → logprob: -5.751040935516357
    6. '[]' → logprob: -6.126040935516357
    7. ' complète' → logprob: -6.376040935516357
    8. ' =' → logprob: -6.876040935516357
    9. 'standard' → logprob: -7.001040935516357
    10. ' ' → logprob: -7.001040935516357

Token 86: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7548583149909973
    2. '   ' → logprob: -1.1298582553863525
    3. ' ' → logprob: -3.0048582553863525
    4. 'n' → logprob: -3.5048582553863525
    5. ' n' → logprob: -3.6298582553863525
    6. '```' → logprob: -3.8798582553863525
    7. '\n' → logprob: -4.254858493804932
    8. ' \' → logprob: -5.129858493804932
    9. '[n' → logprob: -5.129858493804932
    10. ' )' → logprob: -5.254858493804932

Token 87: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4007115364074707
    2. 'n' → logprob: -2.1507115364074707
    3. ' la' → logprob: -3.6507115364074707
    4. ' n' → logprob: -3.7757115364074707
    5. 'l' → logprob: -3.7757115364074707
    6. 'int' → logprob: -4.150711536407471
    7. '```' → logprob: -4.150711536407471
    8. ' lines' → logprob: -4.400711536407471
    9. '"""' → logprob: -4.775711536407471
    10. 'sequence' → logprob: -4.900711536407471

Token 88: ' La' (ID: 3038)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6694003343582153
    2. ' n' → logprob: -2.044400215148926
    3. '   ' → logprob: -2.419400215148926
    4. ' une' → logprob: -2.919400215148926
    5. ' list' → logprob: -3.794400215148926
    6. 'list' → logprob: -3.919400215148926
    7. 'n' → logprob: -3.919400215148926
    8. 'la' → logprob: -4.169400215148926
    9. 'une' → logprob: -4.419400215148926
    10. 'l' → logprob: -4.419400215148926

Token 89: ' première' (ID: 23423)
  Prédit: ' première'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' première' → logprob: -1.183740496635437
    2. ' ' → logprob: -1.808740496635437
    3. 'prem' → logprob: -1.808740496635437
    4. ' longueur' → logprob: -2.4337406158447266
    5. ' taille' → logprob: -2.8087406158447266
    6. 's' → logprob: -2.8087406158447266
    7. ' premi' → logprob: -3.5587406158447266
    8. 'n' → logprob: -4.308740615844727
    9. '   ' → logprob: -4.308740615844727
    10. ' sé' → logprob: -4.433740615844727

Token 90: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22971002757549286
    2. ' ligne' → logprob: -1.6047099828720093
    3. 'l' → logprob: -6.854710102081299
    4. ' line' → logprob: -7.104710102081299
    5. 'ligne' → logprob: -7.229710102081299
    6. '   ' → logprob: -7.854710102081299
    7. ' l' → logprob: -8.10470962524414
    8. '  ' → logprob: -8.22970962524414
    9. ' lign' → logprob: -8.22970962524414
    10. ' lignes' → logprob: -9.35470962524414

Token 91: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.8094688057899475
    2. ' ' → logprob: -1.0594687461853027
    3. ' contenant' → logprob: -3.0594687461853027
    4. '   ' → logprob: -3.5594687461853027
    5. ' complète' → logprob: -3.5594687461853027
    6. ' indique' → logprob: -3.6844687461853027
    7. ' contains' → logprob: -5.059468746185303
    8. ' :' → logprob: -5.059468746185303
    9. '  ' → logprob: -5.184468746185303
    10. ' du' → logprob: -5.184468746185303

Token 92: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021936524659395218
    2. ' le' → logprob: -4.646936416625977
    3. ' un' → logprob: -5.021936416625977
    4. ' l' → logprob: -6.396936416625977
    5. ' n' → logprob: -6.646936416625977
    6. ' la' → logprob: -7.021936416625977
    7. 'n' → logprob: -7.271936416625977
    8. 'l' → logprob: -8.521936416625977
    9. '   ' → logprob: -8.646936416625977
    10. ' nombre' → logprob: -8.646936416625977

Token 93: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27515581250190735
    2. ' entier' → logprob: -1.525155782699585
    3. 'ent' → logprob: -4.775156021118164
    4. ' ' → logprob: -5.400156021118164
    5. ' nombre' → logprob: -5.900156021118164
    6. ' espace' → logprob: -6.275156021118164
    7. 'int' → logprob: -6.775156021118164
    8. 'nombre' → logprob: -7.025156021118164
    9. ' e' → logprob: -7.275156021118164
    10. ' int' → logprob: -7.400156021118164

Token 94: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03413384407758713
    2. '  ' → logprob: -3.7841339111328125
    3. ' n' → logprob: -4.6591339111328125
    4. ' '' → logprob: -7.7841339111328125
    5. ''' → logprob: -8.409133911132812
    6. ' (' → logprob: -9.034133911132812
    7. ' ,' → logprob: -9.284133911132812
    8. 'n' → logprob: -9.409133911132812
    9. ' )' → logprob: -9.409133911132812
    10. '<|end|>' → logprob: -9.784133911132812

Token 95: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9402191638946533
    2. ',' → logprob: -1.3152191638946533
    3. '<|end|>' → logprob: -2.0652191638946533
    4. '   ' → logprob: -2.9402191638946533
    5. '  ' → logprob: -3.3152191638946533
    6. ' (' → logprob: -3.9402191638946533
    7. ')' → logprob: -3.9402191638946533
    8. '<|end|>' → logprob: -4.065218925476074
    9. ' ,' → logprob: -4.315218925476074
    10. '.' → logprob: -4.565218925476074

Token 96: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006256296299397945
    2. ' )' → logprob: -6.381256103515625
    3. ' n' → logprob: -6.631256103515625
    4. ' "' → logprob: -7.131256103515625
    5. '  ' → logprob: -7.131256103515625
    6. ' '' → logprob: -7.506256103515625
    7. ''' → logprob: -8.381256103515625
    8. ')' → logprob: -8.506256103515625
    9. '"' → logprob: -8.506256103515625
    10. '<|end|>' → logprob: -8.756256103515625

Token 97: ' taille' (ID: 41644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.202844500541687
    2. 's' → logprob: -1.577844500541687
    3. 'nombre' → logprob: -1.577844500541687
    4. ' nombre' → logprob: -2.0778446197509766
    5. ' quantité' → logprob: -3.0778446197509766
    6. 'n' → logprob: -3.8278446197509766
    7. ' taille' → logprob: -4.077844619750977
    8. 'tail' → logprob: -4.077844619750977
    9. 't' → logprob: -4.702844619750977
    10. '  ' → logprob: -5.202844619750977

Token 98: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5375476479530334
    2. ' du' → logprob: -1.6625475883483887
    3. '   ' → logprob: -2.5375475883483887
    4. ' de' → logprob: -2.9125475883483887
    5. '  ' → logprob: -3.1625475883483887
    6. ' n' → logprob: -4.412547588348389
    7. '    ' → logprob: -4.412547588348389
    8. '<|end|>' → logprob: -5.037547588348389
    9. ' des' → logprob: -5.287547588348389
    10. ' )' → logprob: -5.412547588348389

Token 99: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.6998244524002075
    2. ' tableau' → logprob: -0.6998244524002075
    3. ' table' → logprob: -5.074824333190918
    4. ' tableaux' → logprob: -9.074824333190918
    5. ' Tableau' → logprob: -9.449824333190918
    6. 'tabl' → logprob: -10.449824333190918
    7. 's' → logprob: -10.449824333190918
    8. 'array' → logprob: -10.699824333190918
    9. 't' → logprob: -11.074824333190918
    10. 'n' → logprob: -11.074824333190918

Token 100: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6451969146728516
    2. '\n' → logprob: -1.2701969146728516
    3. '
' → logprob: -2.5201969146728516
    4. '.' → logprob: -3.5201969146728516
    5. ',' → logprob: -3.7701969146728516
    6. '    
' → logprob: -4.270196914672852
    7. '\' → logprob: -4.770196914672852
    8. 'n' → logprob: -4.895196914672852
    9. '<|end|>' → logprob: -4.895196914672852
    10. ')' → logprob: -5.645196914672852

Token 101: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.28825050592422485
    2. '   ' → logprob: -1.66325044631958
    3. '\' → logprob: -3.66325044631958
    4. ''\' → logprob: -4.66325044631958
    5. '"\' → logprob: -5.41325044631958
    6. 'n' → logprob: -5.66325044631958
    7. '    
' → logprob: -5.66325044631958
    8. '"""
' → logprob: -5.78825044631958
    9. '
' → logprob: -5.78825044631958
    10. '"""' → logprob: -6.28825044631958

Token 102: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043846696615219116
    2. '       ' → logprob: -3.168846607208252
    3. '
' → logprob: -8.41884708404541
    4. '#' → logprob: -8.54384708404541
    5. '    ' → logprob: -8.79384708404541
    6. ' ' → logprob: -9.79384708404541
    7. '  ' → logprob: -10.04384708404541
    8. '"""
' → logprob: -10.16884708404541
    9. 'def' → logprob: -10.29384708404541
    10. '        ' → logprob: -10.29384708404541

Token 103: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46913912892341614
    2. ' La' → logprob: -1.2191390991210938
    3. 'La' → logprob: -2.5941390991210938
    4. ' la' → logprob: -6.469139099121094
    5. '    ' → logprob: -6.594139099121094
    6. ' ' → logprob: -7.594139099121094
    7. '       ' → logprob: -8.094139099121094
    8. '  ' → logprob: -8.469139099121094
    9. ' Le' → logprob: -9.219139099121094
    10. ' L' → logprob: -9.844139099121094

Token 104: ' seconde' (ID: 66204)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.2863488793373108
    2. ' deuxième' → logprob: -2.161348819732666
    3. ' suite' → logprob: -3.286348819732666
    4. 's' → logprob: -3.911348819732666
    5. ' seconde' → logprob: -3.911348819732666
    6. ' prochaine' → logprob: -4.661348819732666
    7. '   ' → logprob: -4.786348819732666
    8. 'n' → logprob: -4.911348819732666
    9. ' liste' → logprob: -5.161348819732666
    10. ' suivant' → logprob: -5.411348819732666

Token 105: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.047589853405952454
    2. ' ' → logprob: -3.6725897789001465
    3. 'ligne' → logprob: -4.0475897789001465
    4. '   ' → logprob: -6.4225897789001465
    5. ' line' → logprob: -6.5475897789001465
    6. 'line' → logprob: -8.547590255737305
    7. 'l' → logprob: -9.422590255737305
    8. ' ' → logprob: -9.422590255737305
    9. '  ' → logprob: -10.047590255737305
    10. '    ' → logprob: -10.797590255737305

Token 106: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.010729084722697735
    2. 'cont' → logprob: -5.5107293128967285
    3. ' cont' → logprob: -5.6357293128967285
    4. ' contains' → logprob: -6.6357293128967285
    5. ' ' → logprob: -7.6357293128967285
    6. '   ' → logprob: -7.7607293128967285
    7. 'contains' → logprob: -8.38572883605957
    8. ' contenant' → logprob: -9.13572883605957
    9. 'conten' → logprob: -9.26072883605957
    10. '    ' → logprob: -9.26072883605957

Token 107: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20675456523895264
    2. 'n' → logprob: -2.081754684448242
    3. ' la' → logprob: -3.831754684448242
    4. ' ' → logprob: -4.581754684448242
    5. ' des' → logprob: -4.706754684448242
    6. ' '' → logprob: -5.206754684448242
    7. ' les' → logprob: -5.831754684448242
    8. ' np' → logprob: -5.956754684448242
    9. ' un' → logprob: -6.081754684448242
    10. ' "' → logprob: -6.081754684448242

Token 108: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.8992832899093628
    2. ' ent' → logprob: -1.0242832899093628
    3. ' ' → logprob: -2.3992834091186523
    4. ' des' → logprob: -2.8992834091186523
    5. 'ent' → logprob: -2.8992834091186523
    6. 'inte' → logprob: -4.649283409118652
    7. ' éléments' → logprob: -5.024283409118652
    8. ' nombres' → logprob: -6.024283409118652
    9. ' entier' → logprob: -6.149283409118652
    10. ''ent' → logprob: -6.649283409118652

Token 109: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00023727134976070374
    2. '   ' → logprob: -8.750237464904785
    3. 'i' → logprob: -10.125237464904785
    4. 'ier' → logprob: -10.875237464904785
    5. 'ières' → logprob: -11.625237464904785
    6. ' i' → logprob: -13.125237464904785
    7. '  ' → logprob: -13.250237464904785
    8. ' ints' → logprob: -13.500237464904785
    9. 'ers' → logprob: -13.625237464904785
    10. '       ' → logprob: -14.125237464904785

Token 110: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4054253101348877
    2. ' ,' → logprob: -1.5304253101348877
    3. ' ' → logprob: -3.4054253101348877
    4. '   ' → logprob: -4.030425071716309
    5. ' sépar' → logprob: -4.155425071716309
    6. 's' → logprob: -4.280425071716309
    7. '<|end|>' → logprob: -4.780425071716309
    8. '    ' → logprob: -5.155425071716309
    9. 'n' → logprob: -5.155425071716309
    10. ' separated' → logprob: -6.280425071716309

Token 111: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.008919687941670418
    2. ' par' → logprob: -5.508919715881348
    3. 'par' → logprob: -5.883919715881348
    4. 'é' → logprob: -6.758919715881348
    5. 'es' → logprob: -7.383919715881348
    6. 'e' → logprob: -9.133919715881348
    7. 'ées' → logprob: -9.883919715881348
    8. 's' → logprob: -10.133919715881348
    9. 'ée' → logprob: -10.758919715881348
    10. ' espaces' → logprob: -12.383919715881348

Token 112: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.020711103454232216
    2. 'par' → logprob: -3.8957111835479736
    3. ' ' → logprob: -9.270710945129395
    4. 'es' → logprob: -10.520710945129395
    5. '   ' → logprob: -11.020710945129395
    6. 'e' → logprob: -11.145710945129395
    7. '(par' → logprob: -12.645710945129395
    8. 's' → logprob: -12.895710945129395
    9. ' espaces' → logprob: -13.270710945129395
    10. '_par' → logprob: -13.645710945129395

Token 113: ' des' (ID: 731)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9866174459457397
    2. 'des' → logprob: -1.2366174459457397
    3. ' des' → logprob: -1.7366174459457397
    4. ''' → logprob: -3.1116175651550293
    5. ' un' → logprob: -3.2366175651550293
    6. ''un' → logprob: -3.7366175651550293
    7. 'es' → logprob: -4.236617565155029
    8. 'esp' → logprob: -4.361617565155029
    9. ' espaces' → logprob: -4.611617565155029
    10. ''espace' → logprob: -5.236617565155029

Token 114: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.0759389400482178
    2. ''espace' → logprob: -1.4509389400482178
    3. 'es' → logprob: -2.0759389400482178
    4. 'spaces' → logprob: -2.4509389400482178
    5. ' espaces' → logprob: -2.5759389400482178
    6. ''esp' → logprob: -2.7009389400482178
    7. 'space' → logprob: -2.8259389400482178
    8. ' espace' → logprob: -5.200939178466797
    9. '’espace' → logprob: -6.450939178466797
    10. 'sp' → logprob: -7.200939178466797

Token 115: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1023927927017212
    2. '   ' → logprob: -1.1023927927017212
    3. ',' → logprob: -1.4773927927017212
    4. ' ,' → logprob: -2.9773926734924316
    5. ' ' → logprob: -3.8523926734924316
    6. ' .' → logprob: -5.102392673492432
    7. ' :' → logprob: -5.102392673492432
    8. ' )' → logprob: -5.602392673492432
    9. '"' → logprob: -5.727392673492432
    10. ')' → logprob: -5.852392673492432

Token 116: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01803661696612835
    2. '"""' → logprob: -4.768036842346191
    3. ')' → logprob: -5.518036842346191
    4. '"""
' → logprob: -6.268036842346191
    5. '
' → logprob: -6.643036842346191
    6. '```' → logprob: -7.268036842346191
    7. '    
' → logprob: -7.893036842346191
    8. '""' → logprob: -8.893036842346191
    9. '"' → logprob: -8.893036842346191
    10. ' """
' → logprob: -9.018036842346191

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005059417802840471
    2. 'def' → logprob: -6.130059242248535
    3. '"""' → logprob: -6.255059242248535
    4. '"""
' → logprob: -8.255059242248535
    5. '
' → logprob: -8.755059242248535
    6. '```' → logprob: -8.880059242248535
    7. ')' → logprob: -8.880059242248535
    8. '    ' → logprob: -9.130059242248535
    9. ' def' → logprob: -10.380059242248535
    10. '    
' → logprob: -10.630059242248535

Token 118: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7590885758399963
    2. '"""
' → logprob: -0.7590885758399963
    3. '"""' → logprob: -3.5090885162353516
    4. '```' → logprob: -4.384088516235352
    5. 'Returns' → logprob: -5.009088516235352
    6. ' """
' → logprob: -5.384088516235352
    7. 'def' → logprob: -5.634088516235352
    8. '    
' → logprob: -6.884088516235352
    9. 'return' → logprob: -6.884088516235352
    10. '
' → logprob: -7.009088516235352

Token 119: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0013445195509120822
    2. ' ie' → logprob: -7.001344680786133
    3. 'i' → logprob: -8.876344680786133
    4. '   ' → logprob: -9.001344680786133
    5. 'ies' → logprob: -9.501344680786133
    6. '
' → logprob: -9.751344680786133
    7. '       ' → logprob: -12.376344680786133
    8. '-ie' → logprob: -12.501344680786133
    9. '_ie' → logprob: -12.751344680786133
    10. '  ' → logprob: -12.876344680786133

Token 120: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.005266484338790178
    2. ':' → logprob: -5.7552666664123535
    3. ' :
' → logprob: -6.3802666664123535
    4. ' ' → logprob: -8.380266189575195
    5. '   ' → logprob: -9.505266189575195
    6. ':
' → logprob: -9.630266189575195
    7. ' :
' → logprob: -12.005266189575195
    8. ' =' → logprob: -12.130266189575195
    9. '  ' → logprob: -12.505266189575195
    10. ' ' → logprob: -12.755266189575195

Token 121: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032094421330839396
    2. '    ' → logprob: -5.753209590911865
    3. '  ' → logprob: -11.753209114074707
    4. '       ' → logprob: -12.003209114074707
    5. '"' → logprob: -12.253209114074707
    6. ' ' → logprob: -13.003209114074707
    7. '    
' → logprob: -13.128209114074707
    8. '   ' → logprob: -13.253209114074707
    9. '   ' → logprob: -13.503209114074707
    10. '     ' → logprob: -13.503209114074707

Token 122: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.733177661895752
    2. 'Un' → logprob: -1.108177661895752
    3. ' un' → logprob: -2.483177661895752
    4. ' Un' → logprob: -3.233177661895752
    5. 'Le' → logprob: -3.983177661895752
    6. 'un' → logprob: -4.608177661895752
    7. ' Le' → logprob: -4.858177661895752
    8. 'La' → logprob: -5.483177661895752
    9. 'print' → logprob: -5.608177661895752
    10. ' L' → logprob: -5.608177661895752

Token 123: ' Un' (ID: 1367)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.4150864779949188
    2. 'Le' → logprob: -1.9150865077972412
    3. '   ' → logprob: -2.415086507797241
    4. ' le' → logprob: -3.415086507797241
    5. ' Un' → logprob: -4.165086269378662
    6. ' int' → logprob: -4.290086269378662
    7. ' un' → logprob: -4.290086269378662
    8. 'Un' → logprob: -4.790086269378662
    9. ' L' → logprob: -5.540086269378662
    10. ' La' → logprob: -6.040086269378662

Token 124: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.46723729372024536
    2. 'e' → logprob: -1.0922372341156006
    3. '   ' → logprob: -4.09223747253418
    4. 'ent' → logprob: -4.34223747253418
    5. ' int' → logprob: -5.84223747253418
    6. ' nombre' → logprob: -6.59223747253418
    7. 'int' → logprob: -6.71723747253418
    8. ' espace' → logprob: -7.46723747253418
    9. ' e' → logprob: -7.46723747253418
    10. ' ' → logprob: -7.84223747253418

Token 125: ' indiqu' (ID: 100773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1697566509246826
    2. '()' → logprob: -2.1697566509246826
    3. ' :' → logprob: -2.2947566509246826
    4. ',' → logprob: -2.5447566509246826
    5. ' ' → logprob: -2.5447566509246826
    6. ':' → logprob: -2.6697566509246826
    7. 'def' → logprob: -2.9197566509246826
    8. '"""' → logprob: -4.169756889343262
    9. 'count' → logprob: -4.169756889343262
    10. ')' → logprob: -4.544756889343262

Token 126: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6329765915870667
    2. 'ant' → logprob: -0.7579765915870667
    3. '   ' → logprob: -8.882976531982422
    4. 'ent' → logprob: -8.882976531982422
    5. 'é' → logprob: -10.632976531982422
    6. '#' → logprob: -11.007976531982422
    7. '```' → logprob: -11.882976531982422
    8. 'a' → logprob: -12.007976531982422
    9. ' ant' → logprob: -12.132976531982422
    10. 'er' → logprob: -12.257976531982422

Token 127: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11100581288337708
    2. ' ' → logprob: -2.4860057830810547
    3. ' l' → logprob: -4.486005783081055
    4. ' la' → logprob: -5.111005783081055
    5. '  ' → logprob: -5.861005783081055
    6. 'le' → logprob: -7.861005783081055
    7. ' nombre' → logprob: -7.861005783081055
    8. '   ' → logprob: -8.236005783081055
    9. 'l' → logprob: -8.736005783081055
    10. 's' → logprob: -9.361005783081055

Token 128: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.11343125998973846
    2. 'nombre' → logprob: -2.238431215286255
    3. '   ' → logprob: -7.613431453704834
    4. ' ' → logprob: -9.363430976867676
    5. ' nombres' → logprob: -10.863430976867676
    6. '  ' → logprob: -12.988430976867676
    7. '_nombre' → logprob: -13.988430976867676
    8. ' nb' → logprob: -14.113430976867676
    9. '    ' → logprob: -14.238430976867676
    10. ' nom' → logprob: -14.238430976867676

Token 129: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.54331374168396
    2. ' total' → logprob: -1.66831374168396
    3. ' d' → logprob: -1.91831374168396
    4. ' ' → logprob: -2.54331374168396
    5. '_' → logprob: -6.418313980102539
    6. '  ' → logprob: -7.043313980102539
    7. '   ' → logprob: -7.168313980102539
    8. '_total' → logprob: -8.043313980102539
    9. 'de' → logprob: -8.543313980102539
    10. ' des' → logprob: -8.543313980102539

Token 130: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.003139212727546692
    2. 's' → logprob: -5.878139019012451
    3. ' ' → logprob: -9.00313949584961
    4. ' sub' → logprob: -9.62813949584961
    5. ' zero' → logprob: -10.12813949584961
    6. ' under' → logprob: -10.62813949584961
    7. ' zéro' → logprob: -10.75313949584961
    8. 'sub' → logprob: -11.25313949584961
    9. '0' → logprob: -11.62813949584961
    10. '   ' → logprob: -11.87813949584961

Token 131: '-table' (ID: 35909)
  Prédit: '-table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-table' → logprob: -0.34874460101127625
    2. '_table' → logprob: -1.8487446308135986
    3. '   ' → logprob: -2.2237446308135986
    4. '-' → logprob: -4.3487443923950195
    5. ' tableaux' → logprob: -4.7237443923950195
    6. 'table' → logprob: -6.7237443923950195
    7. '_' → logprob: -6.7237443923950195
    8. '_tab' → logprob: -6.7237443923950195
    9. '-tab' → logprob: -6.8487443923950195
    10. '_tables' → logprob: -7.7237443923950195

Token 132: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0019756227266043425
    2. 'ch' → logprob: -7.0019755363464355
    3. '-' → logprob: -7.8769755363464355
    4. 'x' → logprob: -8.376976013183594
    5. 'arrays' → logprob: -9.376976013183594
    6. 'ay' → logprob: -9.626976013183594
    7. 'au' → logprob: -10.126976013183594
    8. 'c' → logprob: -10.251976013183594
    9. '   ' → logprob: -10.251976013183594
    10. 'ments' → logprob: -10.501976013183594

Token 133: ' dont' (ID: 11562)
  Prédit: ' dont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dont' → logprob: -0.07865599542856216
    2. ' de' → logprob: -4.203656196594238
    3. '   ' → logprob: -4.328656196594238
    4. 'dont' → logprob: -4.453656196594238
    5. ' à' → logprob: -4.578656196594238
    6. ' ayant' → logprob: -4.703656196594238
    7. ' ' → logprob: -4.828656196594238
    8. 's' → logprob: -5.953656196594238
    9. ' whose' → logprob: -6.453656196594238
    10. ',' → logprob: -6.703656196594238

Token 134: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1614769846200943
    2. 'la' → logprob: -1.911476969718933
    3. ' ' → logprob: -7.911477088928223
    4. '```' → logprob: -8.786477088928223
    5. '   ' → logprob: -8.911477088928223
    6. 'sum' → logprob: -9.036477088928223
    7. 's' → logprob: -9.161477088928223
    8. 'l' → logprob: -9.161477088928223
    9. '  ' → logprob: -9.661477088928223
    10. ' ' → logprob: -10.286477088928223

Token 135: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.1672171801328659
    2. 's' → logprob: -1.9172171354293823
    3. ' som' → logprob: -6.292217254638672
    4. 'som' → logprob: -6.292217254638672
    5. 'sum' → logprob: -6.667217254638672
    6. ' sum' → logprob: -6.917217254638672
    7. ' ' → logprob: -7.792217254638672
    8. ' soma' → logprob: -9.042217254638672
    9. '   ' → logprob: -9.417217254638672
    10. ' suma' → logprob: -9.792217254638672

Token 136: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.00626802071928978
    2. ' ' → logprob: -6.38126802444458
    3. 'est' → logprob: -6.50626802444458
    4. '   ' → logprob: -6.50626802444458
    5. ' =' → logprob: -7.50626802444458
    6. ' des' → logprob: -8.256267547607422
    7. '=' → logprob: -8.256267547607422
    8. ' is' → logprob: -8.881267547607422
    9. ' vaut' → logprob: -9.381267547607422
    10. '    ' → logprob: -9.756267547607422

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3589686453342438
    2. '0' → logprob: -1.6089686155319214
    3. ' zéro' → logprob: -3.358968734741211
    4. 'n' → logprob: -3.483968734741211
    5. ' ' → logprob: -3.608968734741211
    6. '   ' → logprob: -5.858968734741211
    7. ' zero' → logprob: -6.233968734741211
    8. ' nul' → logprob: -6.233968734741211
    9. ' ég' → logprob: -6.983968734741211
    10. 'zero' → logprob: -8.608968734741211

Token 138: 'ulle' (ID: 14644)
  Prédit: 'ulle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulle' → logprob: -0.007564741652458906
    2. ' ' → logprob: -6.382564544677734
    3. '   ' → logprob: -6.382564544677734
    4. 'ull' → logprob: -6.882564544677734
    5. 'ul' → logprob: -7.007564544677734
    6. '  ' → logprob: -7.257564544677734
    7. '    ' → logprob: -8.382564544677734
    8. '_' → logprob: -8.882564544677734
    9. '0' → logprob: -8.882564544677734
    10. 'u' → logprob: -9.007564544677734

Token 139: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.228592187166214
    2. '.' → logprob: -1.8535921573638916
    3. '
' → logprob: -3.8535921573638916
    4. '.
' → logprob: -4.228592395782471
    5. 'def' → logprob: -5.478592395782471
    6. '    
' → logprob: -5.728592395782471
    7. ',' → logprob: -6.728592395782471
    8. ':' → logprob: -6.978592395782471
    9. '\n' → logprob: -7.603592395782471
    10. ',
' → logprob: -7.728592395782471

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009097497910261154
    2. '"""' → logprob: -4.884097576141357
    3. '"""
' → logprob: -7.509097576141357
    4. '
' → logprob: -8.1340970993042
    5. 'def' → logprob: -8.3840970993042
    6. ')' → logprob: -8.5090970993042
    7. '```' → logprob: -9.0090970993042
    8. '    
' → logprob: -10.5090970993042
    9. '""' → logprob: -10.7590970993042
    10. '\n' → logprob: -11.0090970993042

Token 141: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011497634463012218
    2. '"""' → logprob: -4.886497497558594
    3. '"""
' (adapté à ' """
') → logprob: -5.886497497558594
    4. 'def' → logprob: -7.011497497558594
    5. '```' → logprob: -9.136497497558594
    6. '""' → logprob: -10.386497497558594
    7. '
' → logprob: -10.761497497558594
    8. '    
' → logprob: -11.136497497558594
    9. '"' → logprob: -11.886497497558594
    10. ' """
' → logprob: -12.011497497558594

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039798419922590256
    2. 'n' → logprob: -3.4147984981536865
    3. '
' → logprob: -5.664798259735107
    4. '    
' → logprob: -6.664798259735107
    5. 'def' → logprob: -7.289798259735107
    6. ' n' → logprob: -7.664798259735107
    7. '	n' → logprob: -9.664798736572266
    8. '\n' → logprob: -10.039798736572266
    9. 'import' → logprob: -10.289798736572266
    10. 'input' → logprob: -10.664798736572266

Token 143: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019157715141773224
    2. '   ' → logprob: -4.394157886505127
    3. ' n' → logprob: -5.019157886505127
    4. 'import' → logprob: -11.394157409667969
    5. '    
' → logprob: -13.394157409667969
    6. '	n' → logprob: -14.144157409667969
    7. '```' → logprob: -14.269157409667969
    8. 'input' → logprob: -14.769157409667969
    9. '
' → logprob: -14.769157409667969
    10. ' ' → logprob: -14.894157409667969

Token 144: ' Lecture' (ID: 106534)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6376635432243347
    2. 'n' → logprob: -0.7626635432243347
    3. '   ' → logprob: -5.3876633644104
    4. 'import' → logprob: -7.8876633644104
    5. ' import' → logprob: -10.012663841247559
    6. 'input' → logprob: -11.887663841247559
    7. 'line' → logprob: -12.012663841247559
    8. ' ' → logprob: -12.137663841247559
    9. ' line' → logprob: -12.137663841247559
    10. '```' → logprob: -12.137663841247559

Token 145: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10999274998903275
    2. 'n' → logprob: -2.984992742538452
    3. ' n' → logprob: -3.109992742538452
    4. '    
' → logprob: -4.734992980957031
    5. '	n' → logprob: -9.734992980957031
    6. '    ' → logprob: -10.359992980957031
    7. '
' → logprob: -10.859992980957031
    8. ' ' → logprob: -10.984992980957031
    9. ' =' → logprob: -11.109992980957031
    10. '  ' → logprob: -11.109992980957031

Token 146: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.180156871676445
    2. 'n' → logprob: -1.8051568269729614
    3. '   ' → logprob: -8.055156707763672
    4. 'l' → logprob: -10.805156707763672
    5. 'int' → logprob: -10.930156707763672
    6. ' la' → logprob: -10.930156707763672
    7. ' ' → logprob: -11.430156707763672
    8. 'input' → logprob: -12.055156707763672
    9. ' input' → logprob: -12.180156707763672
    10. ' l' → logprob: -12.305156707763672

Token 147: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019282735884189606
    2. ' n' → logprob: -4.144282817840576
    3. 'int' → logprob: -7.394282817840576
    4. ' ligne' → logprob: -7.644282817840576
    5. 'entrée' → logprob: -8.019282341003418
    6. ' taille' → logprob: -8.269282341003418
    7. 'ligne' → logprob: -8.394282341003418
    8. 's' → logprob: -8.769282341003418
    9. 'nombre' → logprob: -8.894282341003418
    10. '
' → logprob: -9.019282341003418

Token 148: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25804322957992554
    2. 'n' → logprob: -1.5080432891845703
    3. ' n' → logprob: -5.13304328918457
    4. '    
' → logprob: -8.75804328918457
    5. '
' → logprob: -10.75804328918457
    6. ' ' → logprob: -12.88304328918457
    7. '\n' → logprob: -13.00804328918457
    8. '	n' → logprob: -13.13304328918457
    9. '(n' → logprob: -13.25804328918457
    10. '  ' → logprob: -13.50804328918457

Token 149: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.018904611468315125
    2. 'table' → logprob: -4.268904685974121
    3. 'n' → logprob: -5.643904685974121
    4. ' n' → logprob: -7.768904685974121
    5. ' table' → logprob: -8.268904685974121
    6. ' ' → logprob: -8.643904685974121
    7. 't' → logprob: -9.393904685974121
    8. 'tab' → logprob: -9.518904685974121
    9. 'array' → logprob: -9.643904685974121
    10. ' array' → logprob: -10.018904685974121

Token 150: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3195289969444275
    2. 'n' → logprob: -1.3195290565490723
    3. ' n' → logprob: -5.194529056549072
    4. '    
' → logprob: -7.569529056549072
    5. '
' → logprob: -9.069528579711914
    6. '	n' → logprob: -10.319528579711914
    7. '\n' → logprob: -11.694528579711914
    8. '  
' → logprob: -11.944528579711914
    9. '    ' → logprob: -12.444528579711914
    10. '  ' → logprob: -12.444528579711914

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4294489622116089
    2. 'n' → logprob: -1.1794489622116089
    3. ' n' → logprob: -3.1794490814208984
    4. '    
' → logprob: -9.929449081420898
    5. '	n' → logprob: -11.304449081420898
    6. '
' → logprob: -12.054449081420898
    7. '    ' → logprob: -12.804449081420898
    8. '  ' → logprob: -13.429449081420898
    9. '```' → logprob: -13.804449081420898
    10. ' ' → logprob: -14.179449081420898

Token 152: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1615084409713745
    2. 'n' (adapté à ' n') → logprob: -1.9115084409713745
    3. '   ' → logprob: -6.661508560180664
    4. '	n' → logprob: -12.911508560180664
    5. '    
' → logprob: -14.411508560180664
    6. ' ' → logprob: -14.411508560180664
    7. '    ' → logprob: -15.411508560180664
    8. '```' → logprob: -15.786508560180664
    9. ' ' → logprob: -16.286508560180664
    10. '
' → logprob: -16.661508560180664

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896050810813904
    2. '=' → logprob: -2.578960418701172
    3. '=int' → logprob: -9.828960418701172
    4. '   ' → logprob: -12.078960418701172
    5. ',' → logprob: -12.078960418701172
    6. '=input' → logprob: -12.953960418701172
    7. ' ' → logprob: -13.078960418701172
    8. ' =
' → logprob: -14.828960418701172
    9. '  ' → logprob: -15.578960418701172
    10. ')' → logprob: -16.328960418701172

Token 154: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31326204538345337
    2. 'int' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.438261985778809
    4. '   ' → logprob: -16.813262939453125
    5. '	int' → logprob: -16.938262939453125
    6. '=int' → logprob: -17.063262939453125
    7. '[int' → logprob: -17.438262939453125
    8. '(int' → logprob: -18.313262939453125
    9. '  ' → logprob: -19.063262939453125
    10. '<int' → logprob: -19.188262939453125

Token 155: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002619318547658622
    2. 'input' → logprob: -8.500262260437012
    3. '(' → logprob: -9.750262260437012
    4. ' (' → logprob: -16.000261306762695
    5. ' input' → logprob: -16.750261306762695
    6. '(sys' → logprob: -19.375261306762695
    7. '()' → logprob: -19.750261306762695
    8. '=input' → logprob: -19.750261306762695
    9. '(
' → logprob: -19.875261306762695
    10. '	input' → logprob: -21.125261306762695

Token 156: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00038169484469108284
    2. '()' → logprob: -8.500381469726562
    3. '().' → logprob: -8.875381469726562
    4. '())
' → logprob: -10.250381469726562
    5. '()))' → logprob: -13.750381469726562
    6. ' ())' → logprob: -14.125381469726562
    7. ')' → logprob: -14.750381469726562
    8. '(' → logprob: -14.875381469726562
    9. '())

' → logprob: -14.875381469726562
    10. '()
' → logprob: -15.875381469726562

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019108010455965996
    2. 'arr' → logprob: -4.019107818603516
    3. 'array' → logprob: -7.519107818603516
    4. '    
' → logprob: -8.644107818603516
    5. ' arr' → logprob: -8.894107818603516
    6. ' array' → logprob: -10.769107818603516
    7. '    ' → logprob: -11.144107818603516
    8. '
' → logprob: -11.394107818603516
    9. 'nums' → logprob: -11.394107818603516
    10. '#' → logprob: -11.519107818603516

Token 158: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427610397338867
    2. 'arr' → logprob: -1.3427610397338867
    3. ' arr' → logprob: -3.8427610397338867
    4. '#' (adapté à ' #') → logprob: -5.217761039733887
    5. '    
' → logprob: -6.967761039733887
    6. 'array' → logprob: -7.217761039733887
    7. '
' → logprob: -9.217761039733887
    8. ' #' → logprob: -9.217761039733887
    9. ' array' → logprob: -9.217761039733887
    10. 'nums' → logprob: -9.592761039733887

Token 159: ' Lecture' (ID: 106534)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.350117951631546
    2. ' arr' → logprob: -1.2251179218292236
    3. 'array' → logprob: -7.600118160247803
    4. 'nums' → logprob: -8.350117683410645
    5. 'a' → logprob: -8.475117683410645
    6. ' array' → logprob: -8.600117683410645
    7. ' line' → logprob: -9.600117683410645
    8. 'import' → logprob: -9.975117683410645
    9. ' nums' → logprob: -9.975117683410645
    10. 'lst' → logprob: -9.975117683410645

Token 160: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03982488065958023
    2. ' des' → logprob: -3.914824962615967
    3. '   ' → logprob: -5.289824962615967
    4. ' de' → logprob: -5.414824962615967
    5. 'des' → logprob: -5.539824962615967
    6. 's' → logprob: -5.664824962615967
    7. 'de' → logprob: -7.914824962615967
    8. ' ()' → logprob: -8.789824485778809
    9. ' du' → logprob: -9.039824485778809
    10. ' of' → logprob: -9.164824485778809

Token 161: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2684548795223236
    2. ' np' → logprob: -2.1434547901153564
    3. ' l' → logprob: -3.2684547901153564
    4. ' list' → logprob: -3.7684547901153564
    5. 'list' → logprob: -4.2684550285339355
    6. ' lst' → logprob: -4.6434550285339355
    7. 'la' → logprob: -4.7684550285339355
    8. 'np' → logprob: -4.8934550285339355
    9. 'l' → logprob: -5.1434550285339355
    10. ' input' → logprob: -6.1434550285339355

Token 162: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5465081930160522
    2. ' liste' → logprob: -2.296508312225342
    3. 'array' → logprob: -2.421508312225342
    4. ' sequence' → logprob: -2.921508312225342
    5. 'sequence' → logprob: -3.421508312225342
    6. 'arr' → logprob: -3.546508312225342
    7. ' array' → logprob: -4.046508312225342
    8. 'lst' → logprob: -4.296508312225342
    9. 'ligne' → logprob: -4.296508312225342
    10. 'val' → logprob: -4.421508312225342

Token 163: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7736903429031372
    2. 'arr' → logprob: -1.1486903429031372
    3. ' arr' → logprob: -2.6486902236938477
    4. 'a' → logprob: -3.0236902236938477
    5. '   ' → logprob: -3.7736902236938477
    6. 's' → logprob: -4.398690223693848
    7. 'des' → logprob: -4.398690223693848
    8. '()' → logprob: -4.898690223693848
    9. '(arr' → logprob: -4.898690223693848
    10. ' a' → logprob: -4.898690223693848

Token 164: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.2851073741912842
    2. 'ent' → logprob: -1.5351073741912842
    3. ' ent' → logprob: -3.785107374191284
    4. 'e' → logprob: -6.285107612609863
    5. '’ent' → logprob: -6.285107612609863
    6. 'inte' → logprob: -6.535107612609863
    7. 'élé' → logprob: -6.785107612609863
    8. 'es' → logprob: -7.285107612609863
    9. ''entrée' → logprob: -7.410107612609863
    10. 'ints' → logprob: -7.535107612609863

Token 165: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10378140211105347
    2. 'iers' → logprob: -2.4787814617156982
    3. 'tr' → logprob: -5.103781223297119
    4. 'tries' → logprob: -5.353781223297119
    5. 'tes' → logprob: -7.353781223297119
    6. 'r' → logprob: -7.353781223297119
    7. 'tiers' → logprob: -8.103781700134277
    8. 'ts' → logprob: -8.228781700134277
    9. 'ries' → logprob: -8.353781700134277
    10. 'rees' → logprob: -8.603781700134277

Token 166: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06789227575063705
    2. 'arr' → logprob: -3.19289231300354
    3. ' arr' → logprob: -4.067892074584961
    4. 'a' → logprob: -5.942892074584961
    5. '    
' → logprob: -6.817892074584961
    6. ' lst' → logprob: -6.817892074584961
    7. ' a' → logprob: -7.692892074584961
    8. 'lst' → logprob: -7.817892074584961
    9. ' array' → logprob: -8.067892074584961
    10. 's' → logprob: -8.067892074584961

Token 167: ' ajout' (ID: 64605)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.1594036966562271
    2. 'np' → logprob: -3.2844038009643555
    3. ' arr' → logprob: -3.2844038009643555
    4. ' array' → logprob: -3.5344038009643555
    5. 'arr' → logprob: -4.6594038009643555
    6. 's' → logprob: -5.0344038009643555
    7. ' lst' → logprob: -5.4094038009643555
    8. ' split' → logprob: -5.6594038009643555
    9. 'split' → logprob: -6.4094038009643555
    10. 'array' → logprob: -6.5344038009643555

Token 168: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09274819493293762
    2. '(np' → logprob: -2.9677481651306152
    3. '([' → logprob: -3.5927481651306152
    4. '   ' → logprob: -6.717748165130615
    5. '(
' → logprob: -6.842748165130615
    6. ' d' → logprob: -6.967748165130615
    7. ' ' → logprob: -7.092748165130615
    8. ' (' → logprob: -7.092748165130615
    9. '[' → logprob: -7.217748165130615
    10. ' =' → logprob: -7.467748165130615

Token 169: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.2303798198699951
    2. ''une' → logprob: -1.4803798198699951
    3. '[' → logprob: -1.6053798198699951
    4. ' un' → logprob: -2.605379819869995
    5. ' une' → logprob: -2.855379819869995
    6. 'np' → logprob: -3.355379819869995
    7. ' np' → logprob: -3.605379819869995
    8. 'a' → logprob: -4.480380058288574
    9. 'e' → logprob: -4.480380058288574
    10. ''' → logprob: -4.480380058288574

Token 170: ' zéro' (ID: 182040)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40406766533851624
    2. '0' → logprob: -1.2790676355361938
    3. ' espace' → logprob: -3.5290677547454834
    4. ' zero' → logprob: -4.279067516326904
    5. ' zéro' → logprob: -5.279067516326904
    6. '[' → logprob: -6.779067516326904
    7. ' space' → logprob: -6.779067516326904
    8. ' [' → logprob: -7.029067516326904
    9. 'space' → logprob: -7.404067516326904
    10. 'e' → logprob: -7.529067516326904

Token 171: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7309737801551819
    2. ' ' → logprob: -1.230973720550537
    3. ' ,' → logprob: -2.980973720550537
    4. ',' → logprob: -3.230973720550537
    5. '[' → logprob: -3.230973720550537
    6. ' [' → logprob: -3.730973720550537
    7. ' initial' → logprob: -3.730973720550537
    8. '0' → logprob: -4.480973720550537
    9. ' np' → logprob: -4.605973720550537
    10. ' at' → logprob: -4.605973720550537

Token 172: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.0027248715050518513
    2. ' début' → logprob: -6.377724647521973
    3. 'd' → logprob: -7.627724647521973
    4. 'de' → logprob: -8.127724647521973
    5. '   ' → logprob: -9.877724647521973
    6. 'prem' → logprob: -10.252724647521973
    7. 'deb' → logprob: -10.377724647521973
    8. 'begin' → logprob: -10.502724647521973
    9. 'depart' → logprob: -10.627724647521973
    10. ' ' → logprob: -11.002724647521973

Token 173: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40298816561698914
    2. 'arr' → logprob: -1.5279881954193115
    3. ' arr' → logprob: -2.7779881954193115
    4. '    
' → logprob: -3.9029881954193115
    5. 'a' → logprob: -4.902987957000732
    6. ',' → logprob: -4.902987957000732
    7. '
' → logprob: -5.402987957000732
    8. 'array' → logprob: -5.527987957000732
    9. 'nums' → logprob: -5.777987957000732
    10. ' array' → logprob: -6.902987957000732

Token 174: ' la' (ID: 557)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.024852318689227104
    2. ' prefix' → logprob: -5.149852275848389
    3. 'prefix' → logprob: -5.399852275848389
    4. ' la' → logprob: -5.899852275848389
    5. ' facil' → logprob: -5.899852275848389
    6. 'fac' → logprob: -6.274852275848389
    7. '   ' → logprob: -6.524852275848389
    8. ' cum' → logprob: -7.274852275848389
    9. ' facilité' → logprob: -7.399852275848389
    10. ' simpl' → logprob: -7.774852275848389

Token 175: ' gestion' (ID: 29607)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.4877462685108185
    2. 's' → logprob: -1.862746238708496
    3. ' facil' → logprob: -3.237746238708496
    4. ' prefix' → logprob: -3.362746238708496
    5. 'c' → logprob: -3.487746238708496
    6. ' gestion' → logprob: -3.737746238708496
    7. ' cumul' → logprob: -3.987746238708496
    8. ' cum' → logprob: -4.362746238708496
    9. 'prefix' → logprob: -4.362746238708496
    10. ' facilité' → logprob: -4.737746238708496

Token 176: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.806592583656311
    2. ' des' → logprob: -1.431592583656311
    3. ' du' → logprob: -1.931592583656311
    4. ' de' → logprob: -2.0565924644470215
    5. ' d' → logprob: -4.6815924644470215
    6. ' prefix' → logprob: -4.8065924644470215
    7. '    ' → logprob: -5.1815924644470215
    8. ' ' → logprob: -5.4315924644470215
    9. 'du' → logprob: -5.9315924644470215
    10. ' of' → logprob: -6.0565924644470215

Token 177: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1411285251379013
    2. 's' → logprob: -2.8911285400390625
    3. ' l' → logprob: -3.2661285400390625
    4. ' prefix' → logprob: -4.3911285400390625
    5. ' cum' → logprob: -5.1411285400390625
    6. ' cumul' → logprob: -5.3911285400390625
    7. ' cumulative' → logprob: -5.3911285400390625
    8. 'la' → logprob: -6.2661285400390625
    9. ' ' → logprob: -6.2661285400390625
    10. 'prefix' → logprob: -6.5161285400390625

Token 178: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7555420994758606
    2. ' somme' → logprob: -1.2555420398712158
    3. ' prefix' → logprob: -1.8805420398712158
    4. ' pré' → logprob: -3.505542039871216
    5. ' cumul' → logprob: -4.130542278289795
    6. ' cumulative' → logprob: -4.255542278289795
    7. 'prefix' → logprob: -4.505542278289795
    8. ' sommes' → logprob: -4.630542278289795
    9. 'c' → logprob: -6.255542278289795
    10. ' cum' → logprob: -6.380542278289795

Token 179: ' cumul' (ID: 163119)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.7987930178642273
    2. '_' → logprob: -1.923793077468872
    3. ' prefix' → logprob: -2.048793077468872
    4. '   ' → logprob: -2.548793077468872
    5. 'prefix' → logprob: -2.673793077468872
    6. '_arr' → logprob: -3.923793077468872
    7. 's' → logprob: -4.173792839050293
    8. 'arr' → logprob: -4.298792839050293
    9. ' cumulative' → logprob: -4.548792839050293
    10. ' ' → logprob: -5.048792839050293

Token 180: 'ée' (ID: 2894)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.2864269018173218
    2. 'ée' → logprob: -1.4114269018173218
    3. '   ' → logprob: -1.5364269018173218
    4. 'ulative' → logprob: -2.0364270210266113
    5. 'ative' → logprob: -2.4114270210266113
    6. 'e' → logprob: -3.6614270210266113
    7. 'um' → logprob: -5.036427021026611
    8. 'ule' → logprob: -5.911427021026611
    9. '[' → logprob: -6.286427021026611
    10. ' ' → logprob: -7.036427021026611

Token 181: '
' (ID: 198)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3956032693386078
    2. '   ' → logprob: -1.3956032991409302
    3. ' arr' → logprob: -3.0206031799316406
    4. '    
' → logprob: -4.895603179931641
    5. 'a' → logprob: -5.145603179931641
    6. 'array' → logprob: -5.270603179931641
    7. 's' → logprob: -5.770603179931641
    8. ',' → logprob: -6.270603179931641
    9. '
' → logprob: -6.270603179931641
    10. 'nums' → logprob: -6.770603179931641

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24994009733200073
    2. 'arr' → logprob: -1.6249401569366455
    3. ' arr' → logprob: -3.8749401569366455
    4. '    
' → logprob: -6.624939918518066
    5. 'array' → logprob: -6.999939918518066
    6. 'nums' → logprob: -7.999939918518066
    7. ' array' → logprob: -8.249939918518066
    8. 'a' → logprob: -8.624939918518066
    9. 's' → logprob: -9.249939918518066
    10. 'data' → logprob: -9.874939918518066

Token 183: ' a' (ID: 261)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.07950488477945328
    2. ' arr' → logprob: -2.57950496673584
    3. 'nums' → logprob: -8.07950496673584
    4. '   ' → logprob: -8.45450496673584
    5. 'prefix' → logprob: -10.45450496673584
    6. 'array' → logprob: -10.95450496673584
    7. 'lst' → logprob: -11.20450496673584
    8. ' nums' → logprob: -11.32950496673584
    9. ' prefix' → logprob: -12.45450496673584
    10. 'a' (adapté à ' a') → logprob: -12.57950496673584

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007631704676896334
    2. '=' → logprob: -4.882631778717041
    3. ' ' → logprob: -11.007631301879883
    4. '_' → logprob: -12.882631301879883
    5. 'rray' → logprob: -13.007631301879883
    6. ' =[' → logprob: -13.007631301879883
    7. '[' → logprob: -14.757631301879883
    8. 'rr' → logprob: -15.132631301879883
    9. 's' → logprob: -15.257631301879883
    10. '=np' → logprob: -15.507631301879883

Token 185: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.28198134899139404
    2. ' np' → logprob: -2.0319814682006836
    3. '[' → logprob: -2.6569814682006836
    4. '[np' → logprob: -3.7819814682006836
    5. 'np' → logprob: -3.9069814682006836
    6. ' list' → logprob: -6.906981468200684
    7. '[list' → logprob: -7.906981468200684
    8. 'list' → logprob: -8.656981468200684
    9. '[n' → logprob: -11.156981468200684
    10. ' ' → logprob: -11.281981468200684

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.250045776367188
    4. 'int' → logprob: -17.875045776367188
    5. '  ' → logprob: -18.625045776367188
    6. '۰' → logprob: -19.375045776367188
    7. '    ' → logprob: -19.625045776367188
    8. ' ' → logprob: -19.625045776367188
    9. ']' → logprob: -20.687545776367188
    10. '```' → logprob: -20.750045776367188

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.3213025744771585e-05
    2. ']+' → logprob: -10.375033378601074
    3. ' ]' → logprob: -13.500033378601074
    4. ',' → logprob: -14.875033378601074
    5. ']
' → logprob: -15.750033378601074
    6. ')' → logprob: -17.375032424926758
    7. '()]' → logprob: -17.875032424926758
    8. ']*(' → logprob: -18.375032424926758
    9. ']+=' → logprob: -18.625032424926758
    10. 'import' → logprob: -18.750032424926758

Token 188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008654518984258175
    2. ' +' → logprob: -5.008654594421387
    3. ']' → logprob: -6.633654594421387
    4. ']+' → logprob: -7.508654594421387
    5. 'import' → logprob: -11.133654594421387
    6. '
' → logprob: -11.258654594421387
    7. '*' → logprob: -11.633654594421387
    8. '+[' → logprob: -11.883654594421387
    9. '+=' → logprob: -12.258654594421387
    10. ')' → logprob: -12.383654594421387

Token 189: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015028368216007948
    2. ' list' → logprob: -6.501502990722656
    3. 'np' → logprob: -14.751502990722656
    4. '[list' → logprob: -16.001502990722656
    5. '[' → logprob: -17.751502990722656
    6. '	list' → logprob: -18.376502990722656
    7. 'List' → logprob: -18.501502990722656
    8. '(list' → logprob: -18.751502990722656
    9. 'input' → logprob: -19.001502990722656
    10. 'map' → logprob: -19.501502990722656

Token 190: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009139667963609099
    2. '(np' → logprob: -7.250914096832275
    3. '(' → logprob: -8.500913619995117
    4. 'map' → logprob: -14.500913619995117
    5. '(int' → logprob: -15.875913619995117
    6. ' map' → logprob: -17.000913619995117
    7. ' (' → logprob: -17.875913619995117
    8. '()' → logprob: -18.125913619995117
    9. '.map' → logprob: -18.125913619995117
    10. '(
' → logprob: -18.625913619995117

Token 191: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038419815246015787
    2. '(' → logprob: -8.000384330749512
    3. 'int' → logprob: -10.000384330749512
    4. ' int' → logprob: -14.000384330749512
    5. ' (' → logprob: -14.500384330749512
    6. '<int' → logprob: -14.625384330749512
    7. ',int' → logprob: -14.750384330749512
    8. '[int' → logprob: -14.875384330749512
    9. '=int' → logprob: -15.000384330749512
    10. '(
' → logprob: -15.500384330749512

Token 192: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08237666636705399
    2. ',input' → logprob: -2.832376718521118
    3. ',' → logprob: -4.207376480102539
    4. 'input' → logprob: -5.457376480102539
    5. '(' → logprob: -6.957376480102539
    6. ' input' → logprob: -10.707376480102539
    7. ' (' → logprob: -10.832376480102539
    8. '(
' → logprob: -10.832376480102539
    9. ' ,' → logprob: -11.457376480102539
    10. '=input' → logprob: -12.207376480102539

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016105804592370987
    2. ' input' → logprob: -4.141105651855469
    3. ',input' → logprob: -10.141105651855469
    4. '(input' → logprob: -10.641105651855469
    5. '   ' → logprob: -12.266105651855469
    6. ' ' → logprob: -13.516105651855469
    7. '	input' → logprob: -14.391105651855469
    8. ',' → logprob: -14.641105651855469
    9. '[input' → logprob: -14.891105651855469
    10. '=input' → logprob: -15.391105651855469

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -15.250003814697266
    4. '(' → logprob: -16.500003814697266
    5. '.split' → logprob: -17.000003814697266
    6. '()
' → logprob: -17.375003814697266
    7. ' .' → logprob: -17.625003814697266
    8. ' ' → logprob: -17.750003814697266
    9. '   ' → logprob: -18.375003814697266
    10. '.' → logprob: -18.750003814697266

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024764856789261103
    2. 'strip' → logprob: -6.002476692199707
    3. 'rstrip' → logprob: -14.377476692199707
    4. ' split' → logprob: -15.877476692199707
    5. '(split' → logprob: -16.25247573852539
    6. 'spl' → logprob: -17.75247573852539
    7. '.split' → logprob: -19.50247573852539
    8. 'read' → logprob: -20.00247573852539
    9. ' strip' → logprob: -20.37747573852539
    10. 'str' → logprob: -21.12747573852539

Token 196: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03931806981563568
    2. '))' → logprob: -3.789318084716797
    3. '()' → logprob: -4.164318084716797
    4. '())))' → logprob: -8.914318084716797
    5. '())' → logprob: -9.289318084716797
    6. '(' → logprob: -9.289318084716797
    7. '()))
' → logprob: -10.289318084716797
    8. ')))' → logprob: -10.664318084716797
    9. '()));' → logprob: -11.539318084716797
    10. '(),' → logprob: -12.539318084716797

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013303406536579132
    2. '    
' → logprob: -4.513303279876709
    3. '
' → logprob: -6.638303279876709
    4. 'cum' → logprob: -7.888303279876709
    5. 's' → logprob: -8.888303756713867
    6. '   
' → logprob: -9.263303756713867
    7. 'sum' → logprob: -9.638303756713867
    8. 'prefix' → logprob: -9.638303756713867
    9. 'c' → logprob: -9.888303756713867
    10. 'counts' → logprob: -10.138303756713867

Token 198: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04311348870396614
    2. '    
' → logprob: -3.6681134700775146
    3. '
' → logprob: -4.293113708496094
    4. 'count' → logprob: -7.543113708496094
    5. 'counter' → logprob: -7.668113708496094
    6. 'counts' → logprob: -7.793113708496094
    7. 'prefix' → logprob: -7.918113708496094
    8. 'cum' → logprob: -8.168113708496094
    9. 'c' → logprob: -8.418113708496094
    10. '   
' → logprob: -8.543113708496094

Token 199: ' Calcul' (ID: 57243)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.025332342833280563
    2. 'c' → logprob: -5.275332450866699
    3. ' prefix' → logprob: -5.275332450866699
    4. 'cum' → logprob: -5.275332450866699
    5. 's' → logprob: -5.775332450866699
    6. '   ' → logprob: -5.900332450866699
    7. 'psum' → logprob: -6.275332450866699
    8. 'pre' → logprob: -7.650332450866699
    9. 'pref' → logprob: -7.775332450866699
    10. '#' → logprob: -8.2753324508667

Token 200: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11177301406860352
    2. 's' → logprob: -3.2367730140686035
    3. 'des' → logprob: -3.8617730140686035
    4. ' des' → logprob: -4.3617730140686035
    5. 'cum' → logprob: -4.3617730140686035
    6. ' de' → logprob: -4.8617730140686035
    7. 'prefix' → logprob: -6.1117730140686035
    8. 'de' → logprob: -6.2367730140686035
    9. 'c' → logprob: -6.4867730140686035
    10. ' cumulative' → logprob: -6.6117730140686035

Token 201: ' tableau' (ID: 67053)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.35419905185699463
    2. 'c' → logprob: -1.8541990518569946
    3. 'np' → logprob: -2.479198932647705
    4. 's' → logprob: -3.104198932647705
    5. 'cum' → logprob: -5.229198932647705
    6. 'pre' → logprob: -6.104198932647705
    7. 'psum' → logprob: -6.229198932647705
    8. 'acc' → logprob: -6.979198932647705
    9. ' prefix' → logprob: -7.229198932647705
    10. 'numpy' → logprob: -7.229198932647705

Token 202: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6434133648872375
    2. 'des' → logprob: -2.2684133052825928
    3. 's' → logprob: -2.3934133052825928
    4. ' cum' → logprob: -2.8934133052825928
    5. ' cumul' → logprob: -2.8934133052825928
    6. '_c' → logprob: -3.2684133052825928
    7. 'c' → logprob: -3.8934133052825928
    8. '_des' → logprob: -4.018413543701172
    9. ' cumulative' → logprob: -4.018413543701172
    10. 'cum' → logprob: -4.143413543701172

Token 203: ' sommes' (ID: 32024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24227145314216614
    2. 'prefix' → logprob: -2.1172714233398438
    3. ' sommes' → logprob: -3.9922714233398438
    4. 'som' → logprob: -4.367271423339844
    5. 'cum' → logprob: -4.367271423339844
    6. ' prefix' → logprob: -4.742271423339844
    7. ' pré' → logprob: -4.742271423339844
    8. 'c' → logprob: -4.867271423339844
    9. 'pré' → logprob: -5.117271423339844
    10. ' cum' → logprob: -5.242271423339844

Token 204: ' cumul' (ID: 163119)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.4576466679573059
    2. '_' → logprob: -1.4576466083526611
    3. 'c' → logprob: -2.457646608352661
    4. ' cumul' → logprob: -3.332646608352661
    5. 'cum' → logprob: -4.45764684677124
    6. ' cum' → logprob: -7.08264684677124
    7. ' cumulative' → logprob: -8.457646369934082
    8. '   ' → logprob: -9.082646369934082
    9. ' _' → logprob: -9.207646369934082
    10. ' c' → logprob: -9.832646369934082

Token 205: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04308243468403816
    2. 'es' → logprob: -3.9180824756622314
    3. '[' → logprob: -4.668082237243652
    4. 'ul' → logprob: -4.793082237243652
    5. 'ees' → logprob: -6.668082237243652
    6. 'nées' → logprob: -6.793082237243652
    7. 'u' → logprob: -7.543082237243652
    8. '[u' → logprob: -7.918082237243652
    9. 'ée' → logprob: -8.418082237243652
    10. 'érées' → logprob: -8.668082237243652

Token 206: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013395269401371479
    2. 'prefix' → logprob: -5.263395309448242
    3. 's' → logprob: -5.888395309448242
    4. 'cum' → logprob: -5.888395309448242
    5. ' prefix' → logprob: -6.763395309448242
    6. 'c' → logprob: -7.263395309448242
    7. ' s' → logprob: -9.138395309448242
    8. ',' → logprob: -9.138395309448242
    9. ' cumulative' → logprob: -9.138395309448242
    10. ' cum' → logprob: -9.263395309448242

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005024779122322798
    2. 'cum' → logprob: -6.6300249099731445
    3. 'c' → logprob: -6.7550249099731445
    4. 'prefix' → logprob: -6.8800249099731445
    5. 's' → logprob: -7.2550249099731445
    6. ' prefix' → logprob: -8.005024909973145
    7. ' cum' → logprob: -9.130024909973145
    8. ',' → logprob: -9.255024909973145
    9. ' c' → logprob: -9.505024909973145
    10. ' cumulative' → logprob: -9.630024909973145

Token 208: ' c' (ID: 274)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.15183115005493164
    2. ' prefix' → logprob: -2.1518311500549316
    3. 's' → logprob: -4.651831150054932
    4. 'c' (adapté à ' c') → logprob: -5.151831150054932
    5. 'cum' → logprob: -5.151831150054932
    6. '   ' → logprob: -6.901831150054932
    7. 'psum' → logprob: -7.526831150054932
    8. 'pref' → logprob: -7.901831150054932
    9. 'for' → logprob: -8.151830673217773
    10. 'pre' → logprob: -8.276830673217773

Token 209: 'umsum' (ID: 197728)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37895897030830383
    2. 'umsum' → logprob: -1.6289589405059814
    3. '=' → logprob: -2.7539589405059814
    4. 'um' → logprob: -3.2539589405059814
    5. 'umul' → logprob: -5.0039591789245605
    6. 'umulative' → logprob: -6.0039591789245605
    7. 'sum' → logprob: -6.6289591789245605
    8. '=np' → logprob: -6.7539591789245605
    9. 'ums' → logprob: -6.7539591789245605
    10. 's' → logprob: -7.0039591789245605

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5845775604248047
    2. ' =' → logprob: -0.8345775604248047
    3. 's' → logprob: -5.209577560424805
    4. '_' → logprob: -5.834577560424805
    5. '   ' → logprob: -9.959577560424805
    6. 'a' → logprob: -9.959577560424805
    7. '[' → logprob: -10.209577560424805
    8. '_=' → logprob: -10.334577560424805
    9. '=np' → logprob: -11.459577560424805
    10. '=[]' → logprob: -11.584577560424805

Token 211: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.18726645410060883
    2. ' np' → logprob: -1.93726646900177
    3. '[np' → logprob: -4.1872663497924805
    4. '[' → logprob: -4.8122663497924805
    5. ' [' → logprob: -6.3122663497924805
    6. 'list' → logprob: -7.3122663497924805
    7. ' list' → logprob: -7.5622663497924805
    8. '(np' → logprob: -9.06226634979248
    9. '[a' → logprob: -9.06226634979248
    10. 'a' → logprob: -10.06226634979248

Token 212: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.005120261572301388
    2. '.concatenate' → logprob: -5.380120277404785
    3. '.zeros' → logprob: -8.005120277404785
    4. '.array' → logprob: -9.005120277404785
    5. '.append' → logprob: -10.255120277404785
    6. 'c' → logprob: -13.255120277404785
    7. '.ndarray' → logprob: -13.255120277404785
    8. '.' → logprob: -14.005120277404785
    9. '.asarray' → logprob: -14.130120277404785
    10. '.arange' → logprob: -14.505120277404785

Token 213: 'umsum' (ID: 197728)
  Prédit: 'umsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umsum' → logprob: -4.024604277219623e-05
    2. 'umulative' → logprob: -10.625040054321289
    3. 'um' → logprob: -11.875040054321289
    4. 'umulate' → logprob: -12.500040054321289
    5. '[' → logprob: -12.750040054321289
    6. 'uml' → logprob: -14.125040054321289
    7. '#' → logprob: -15.000040054321289
    8. 'array' → logprob: -15.125040054321289
    9. 'c' → logprob: -15.500040054321289
    10. 'ums' → logprob: -15.500040054321289

Token 214: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.3438327843905427e-05
    2. 'a' → logprob: -11.25002384185791
    3. '([' → logprob: -12.00002384185791
    4. '(' → logprob: -13.50002384185791
    5. ' (' → logprob: -13.50002384185791
    6. '(np' → logprob: -13.75002384185791
    7. '[a' → logprob: -15.12502384185791
    8. '((' → logprob: -17.250022888183594
    9. '(
' → logprob: -17.375022888183594
    10. ' a' → logprob: -17.875022888183594

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026460483204573393
    2. ' )' → logprob: -6.002645969390869
    3. '))' → logprob: -9.502646446228027
    4. '[' → logprob: -9.627646446228027
    5. ' ' → logprob: -11.877646446228027
    6. ',' → logprob: -12.002646446228027
    7. ').' → logprob: -12.002646446228027
    8. ')
' → logprob: -13.127646446228027
    9. '   ' → logprob: -13.627646446228027
    10. ')[' → logprob: -13.877646446228027

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04145254194736481
    2. '
' → logprob: -3.916452646255493
    3. '    
' → logprob: -4.916452407836914
    4. 'counter' → logprob: -5.291452407836914
    5. 'counts' → logprob: -5.916452407836914
    6. 'count' → logprob: -6.166452407836914
    7. 'freq' → logprob: -6.291452407836914
    8. ' counter' → logprob: -7.416452407836914
    9. ' counts' → logprob: -7.791452407836914
    10. '   
' → logprob: -8.541452407836914

Token 217: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36443012952804565
    2. 'counter' → logprob: -1.8644301891326904
    3. 'count' → logprob: -2.7394301891326904
    4. 'freq' → logprob: -3.1144301891326904
    5. 'counts' → logprob: -3.4894301891326904
    6. ' counter' → logprob: -4.989429950714111
    7. '    
' → logprob: -6.614429950714111
    8. 'cnt' → logprob: -6.989429950714111
    9. ' counts' → logprob: -7.239429950714111
    10. ' freq' → logprob: -7.989429950714111

Token 218: ' Compt' (ID: 165198)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.30610108375549316
    2. 'count' → logprob: -1.6811010837554932
    3. ' counter' → logprob: -3.056101083755493
    4. 'counts' → logprob: -4.181100845336914
    5. 'freq' → logprob: -4.431100845336914
    6. 'cnt' → logprob: -6.931100845336914
    7. ' count' → logprob: -6.931100845336914
    8. ' counts' → logprob: -7.306100845336914
    9. ' freq' → logprob: -8.181100845336914
    10. 'c' → logprob: -8.681100845336914

Token 219: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004551023303065449
    2. 'Counter' → logprob: -9.000454902648926
    3. 'eur' → logprob: -9.125454902648926
    4. '_counter' → logprob: -9.625454902648926
    5. ' Counter' → logprob: -10.000454902648926
    6. 'r' → logprob: -10.250454902648926
    7. 'e' → logprob: -10.875454902648926
    8. '=' → logprob: -11.375454902648926
    9. 'counter' → logprob: -11.375454902648926
    10. ' er' → logprob: -11.875454902648926

Token 220: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0354080200195312
    2. '=' → logprob: -1.5354080200195312
    3. 'des' → logprob: -2.1604080200195312
    4. '_counts' → logprob: -2.5354080200195312
    5. '(' → logprob: -2.6604080200195312
    6. 'counts' → logprob: -3.2854080200195312
    7. '_counter' → logprob: -3.6604080200195312
    8. 'freq' → logprob: -3.7854080200195312
    9. '_' → logprob: -4.035408020019531
    10. 'counter' → logprob: -4.035408020019531

Token 221: ' nombre' (ID: 9733)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.700697660446167
    2. 'Counter' → logprob: -1.825697660446167
    3. ' c' → logprob: -2.200697660446167
    4. 'c' → logprob: -2.450697660446167
    5. 'counter' → logprob: -2.700697660446167
    6. 's' → logprob: -2.700697660446167
    7. ' Counter' → logprob: -2.825697660446167
    8. ' occurrences' → logprob: -3.075697660446167
    9. ' counts' → logprob: -3.450697660446167
    10. 'sum' → logprob: -3.575697660446167

Token 222: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9727315902709961
    2. '=' → logprob: -1.097731590270996
    3. '_' → logprob: -1.722731590270996
    4. '_counter' → logprob: -3.472731590270996
    5. '_counts' → logprob: -3.472731590270996
    6. 'des' → logprob: -4.972731590270996
    7. 's' → logprob: -4.972731590270996
    8. ' des' → logprob: -5.097731590270996
    9. '_des' → logprob: -5.347731590270996
    10. '_pairs' → logprob: -5.472731590270996

Token 223: ''occ' (ID: 158932)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -1.1580479145050049
    2. '_pairs' → logprob: -1.4080479145050049
    3. 's' → logprob: -1.7830479145050049
    4. '=' → logprob: -2.658047914505005
    5. '_counter' → logprob: -3.408047914505005
    6. 'occ' → logprob: -4.033047676086426
    7. ' pairs' → logprob: -4.158047676086426
    8. 'c' → logprob: -4.283047676086426
    9. 'zero' → logprob: -4.658047676086426
    10. 'occur' → logprob: -4.658047676086426

Token 224: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0035217944532632828
    2. 'ur' → logprob: -5.753521919250488
    3. 'urr' → logprob: -8.753521919250488
    4. 'urrencies' → logprob: -9.628521919250488
    5. 'Counter' → logprob: -10.503521919250488
    6. 'urances' → logprob: -10.503521919250488
    7. 'curr' → logprob: -11.003521919250488
    8. 'u' → logprob: -11.128521919250488
    9. 'érences' → logprob: -12.003521919250488
    10. 'urrence' → logprob: -12.003521919250488

Token 225: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2936858534812927
    2. 's' → logprob: -2.5436859130859375
    3. ' des' → logprob: -3.1686859130859375
    4. ' c' → logprob: -3.4186859130859375
    5. ' of' → logprob: -4.0436859130859375
    6. '=' → logprob: -4.0436859130859375
    7. 'des' → logprob: -4.0436859130859375
    8. 'c' → logprob: -4.4186859130859375
    9. ' de' → logprob: -5.4186859130859375
    10. '(' → logprob: -5.5436859130859375

Token 226: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04807885363698006
    2. ' c' → logprob: -3.173078775405884
    3. 'each' → logprob: -6.048079013824463
    4. 'val' → logprob: -7.423079013824463
    5. ' each' → logprob: -7.423079013824463
    6. 'int' → logprob: -8.173078536987305
    7. 's' → logprob: -8.298078536987305
    8. 'x' → logprob: -8.423078536987305
    9. ' chaque' → logprob: -8.923078536987305
    10. 'value' → logprob: -9.048078536987305

Token 227: ' somme' (ID: 64484)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5050969123840332
    2. ' valeur' → logprob: -1.8800969123840332
    3. 'élé' → logprob: -2.255096912384033
    4. 's' → logprob: -2.880096912384033
    5. ' élément' → logprob: -3.130096912384033
    6. ' somme' → logprob: -4.755096912384033
    7. 'c' → logprob: -5.255096912384033
    8. 'value' → logprob: -5.380096912384033
    9. 'element' → logprob: -5.505096912384033
    10. 'som' → logprob: -5.755096912384033

Token 228: ' cumul' (ID: 163119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5789183974266052
    2. 'c' → logprob: -1.82891845703125
    3. '_c' → logprob: -2.57891845703125
    4. ' =' → logprob: -2.70391845703125
    5. 'cum' → logprob: -2.82891845703125
    6. '_counter' → logprob: -3.95391845703125
    7. '   ' → logprob: -4.45391845703125
    8. ',' → logprob: -4.57891845703125
    9. ' cumul' → logprob: -5.20391845703125
    10. ')' → logprob: -5.45391845703125

Token 229: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0056346203200519085
    2. 'e' → logprob: -5.630634784698486
    3. 'ee' → logprob: -6.380634784698486
    4. 'ed' → logprob: -8.880634307861328
    5. 'uée' → logprob: -9.755634307861328
    6. 'é' → logprob: -10.130634307861328
    7. 'lée' → logprob: -10.755634307861328
    8. 'ue' → logprob: -10.755634307861328
    9. 'ées' → logprob: -11.380634307861328
    10. 'rée' → logprob: -12.130634307861328

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02247040532529354
    2. 'counter' → logprob: -4.897470474243164
    3. 'counts' → logprob: -5.147470474243164
    4. '
' → logprob: -6.272470474243164
    5. ' counter' → logprob: -6.397470474243164
    6. 'freq' → logprob: -6.522470474243164
    7. 'count' → logprob: -7.272470474243164
    8. ' counts' → logprob: -7.522470474243164
    9. '    
' → logprob: -7.522470474243164
    10. ',' → logprob: -8.147470474243164

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2524009943008423
    2. ' counter' → logprob: -2.5024008750915527
    3. 'counter' → logprob: -2.6274008750915527
    4. 'counts' → logprob: -3.3774008750915527
    5. ' counts' → logprob: -4.127400875091553
    6. 'freq' → logprob: -4.877400875091553
    7. 'count' → logprob: -5.127400875091553
    8. ' freq' → logprob: -6.127400875091553
    9. 'occ' → logprob: -7.377400875091553
    10. ' frequencies' → logprob: -8.002401351928711

Token 232: ' c' (ID: 274)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.018996238708496
    2. 'count' → logprob: -1.393996238708496
    3. 'counter' → logprob: -1.518996238708496
    4. ' counter' → logprob: -2.268996238708496
    5. ' counts' → logprob: -3.143996238708496
    6. 'freq' → logprob: -4.393996238708496
    7. 'c' (adapté à ' c') → logprob: -5.393996238708496
    8. ' count' → logprob: -5.393996238708496
    9. 'cnt' → logprob: -6.268996238708496
    10. ' freq' → logprob: -7.393996238708496

Token 233: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.28397443890571594
    2. 'ounter' → logprob: -1.5339744091033936
    3. '=' → logprob: -4.033974647521973
    4. ' =' → logprob: -5.033974647521973
    5. 'count' → logprob: -6.283974647521973
    6. 'umsum' → logprob: -6.658974647521973
    7. 'counter' → logprob: -7.033974647521973
    8. 'ounters' → logprob: -7.283974647521973
    9. 'sum' → logprob: -7.283974647521973
    10. 'um' → logprob: -7.658974647521973

Token 234: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.048588961362838745
    2. ' Counter' → logprob: -3.048588991165161
    3. '.Counter' → logprob: -14.298588752746582
    4. ' ' → logprob: -15.423588752746582
    5. 'ounter' → logprob: -15.798588752746582
    6. ' counter' → logprob: -15.923588752746582
    7. 'Counters' → logprob: -16.2985897064209
    8. '_counter' → logprob: -16.2985897064209
    9. 'Coun' → logprob: -16.9235897064209
    10. 'counter' → logprob: -17.0485897064209

Token 235: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.803360495017841e-05
    2. '(list' → logprob: -9.625078201293945
    3. ' (' → logprob: -12.375078201293945
    4. '(' → logprob: -12.625078201293945
    5. '(np' → logprob: -13.125078201293945
    6. '([' → logprob: -14.000078201293945
    7. '()' → logprob: -14.375078201293945
    8. 'c' → logprob: -14.625078201293945
    9. '((' → logprob: -15.750078201293945
    10. 'list' → logprob: -15.875078201293945

Token 236: 'umsum' (ID: 197728)
  Prédit: 'umsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umsum' → logprob: -0.00024048985505942255
    2. 'ums' → logprob: -8.375240325927734
    3. 'um' → logprob: -12.500240325927734
    4. '(c' → logprob: -13.500240325927734
    5. 'us' → logprob: -14.000240325927734
    6. 'c' → logprob: -14.125240325927734
    7. ')' → logprob: -14.250240325927734
    8. 'psum' → logprob: -14.875240325927734
    9. '[' → logprob: -14.875240325927734
    10. 's' → logprob: -15.250240325927734

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.453737710718997e-05
    2. ' )' → logprob: -10.125044822692871
    3. '))' → logprob: -13.125044822692871
    4. ')
' → logprob: -13.625044822692871
    5. ')`' → logprob: -15.375044822692871
    6. '）' → logprob: -15.625044822692871
    7. ')c' → logprob: -15.625044822692871
    8. '`)' → logprob: -16.250043869018555
    9. ')**' → logprob: -16.625043869018555
    10. ')

' → logprob: -17.000043869018555

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011899635195732117
    2. '    
' → logprob: -5.261899471282959
    3. '
' → logprob: -5.886899471282959
    4. 'result' → logprob: -6.136899471282959
    5. 'count' → logprob: -7.011899471282959
    6. 'total' → logprob: -8.511899948120117
    7. ' result' → logprob: -8.761899948120117
    8. '  
' → logprob: -9.386899948120117
    9. ' count' → logprob: -9.511899948120117
    10. '   
' → logprob: -9.636899948120117

Token 239: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1848502904176712
    2. 'count' → logprob: -2.5598502159118652
    3. 'result' → logprob: -2.6848502159118652
    4. 'total' → logprob: -4.434850215911865
    5. ' count' → logprob: -5.434850215911865
    6. ' result' → logprob: -5.934850215911865
    7. ' total' → logprob: -6.559850215911865
    8. '    
' → logprob: -6.559850215911865
    9. 'return' → logprob: -7.559850215911865
    10. 'n' → logprob: -8.559850692749023

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11338835954666138
    2. '=' → logprob: -2.2383882999420166
    3. '_' → logprob: -8.238388061523438
    4. '[' → logprob: -8.363388061523438
    5. ' ' → logprob: -10.363388061523438
    6. '(' → logprob: -11.488388061523438
    7. '_total' → logprob: -12.238388061523438
    8. ' +=' → logprob: -12.363388061523438
    9. '   ' → logprob: -12.488388061523438
    10. '  ' → logprob: -12.863388061523438

Token 241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023924866691231728
    2. ' ' → logprob: -3.7739248275756836
    3. ' sum' → logprob: -7.773924827575684
    4. 'sum' → logprob: -8.273924827575684
    5. '   ' → logprob: -12.773924827575684
    6. '  ' → logprob: -15.023924827575684
    7. '1' → logprob: -15.773924827575684
    8. '2' → logprob: -17.39892578125
    9. 'int' → logprob: -17.58642578125
    10. '=' → logprob: -17.64892578125

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017148085171356797
    2. 'sum' → logprob: -6.376714706420898
    3. ' ' → logprob: -11.876714706420898
    4. ' sum' → logprob: -12.126714706420898
    5. '   ' → logprob: -15.751714706420898
    6. 'int' → logprob: -16.0017147064209
    7. '1' → logprob: -17.8767147064209
    8. '  ' → logprob: -18.3767147064209
    9. 'np' → logprob: -19.1267147064209
    10. '(sum' → logprob: -19.1267147064209

Token 243: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.544765830039978
    2. '   ' → logprob: -0.919765830039978
    3. ' for' → logprob: -4.794765949249268
    4. '    
' → logprob: -5.419765949249268
    5. 'for' → logprob: -5.794765949249268
    6. '  
' → logprob: -6.044765949249268
    7. ' 
' → logprob: -6.919765949249268
    8. '\n' → logprob: -7.044765949249268
    9. ' ' → logprob: -7.669765949249268
    10. '<|end|>' → logprob: -8.04476547241211

Token 244: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0959281325340271
    2. 'for' → logprob: -2.470928192138672
    3. ' for' → logprob: -5.720928192138672
    4. '   ' → logprob: -6.095928192138672
    5. ' 
' → logprob: -8.095928192138672
    6. '  
' → logprob: -8.220928192138672
    7. '    
' → logprob: -8.220928192138672
    8. '\n' → logprob: -8.345928192138672
    9. '
' → logprob: -8.595928192138672
    10. ' ' → logprob: -9.470928192138672

Token 245: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4752421975135803
    2. ' for' → logprob: -0.9752421975135803
    3. '
' → logprob: -7.1002421379089355
    4. ' 
' → logprob: -9.100242614746094
    5. ' ' → logprob: -9.475242614746094
    6. '0' → logprob: -10.100242614746094
    7. '\n' → logprob: -10.350242614746094
    8. '  
' → logprob: -11.350242614746094
    9. '
' → logprob: -11.475242614746094
    10. ' pour' → logprob: -12.225242614746094

Token 246: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01981556974351406
    2. '(' → logprob: -4.519815444946289
    3. '_' → logprob: -6.019815444946289
    4. ' (' → logprob: -6.644815444946289
    5. ' =' → logprob: -6.769815444946289
    6. '  ' → logprob: -6.769815444946289
    7. '=' → logprob: -7.144815444946289
    8. ' le' → logprob: -7.894815444946289
    9. '   ' → logprob: -8.519815444946289
    10. ' for' → logprob: -8.644815444946289

Token 247: ' compteur' (ID: 163344)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.173433542251587
    2. 'nombre' → logprob: -1.173433542251587
    3. ' compteur' → logprob: -1.673433542251587
    4. 'for' → logprob: -2.548433542251587
    5. 'cnt' → logprob: -3.048433542251587
    6. ' for' → logprob: -3.548433542251587
    7. 'count' → logprob: -4.173433303833008
    8. 'counter' → logprob: -5.173433303833008
    9. 'comp' → logprob: -5.423433303833008
    10. 'total' → logprob: -6.423433303833008

Token 248: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12636399269104004
    2. 'for' → logprob: -2.62636399269104
    3. ' for' → logprob: -3.25136399269104
    4. '
' → logprob: -5.251363754272461
    5. '    
' → logprob: -7.001363754272461
    6. '<|end|>' → logprob: -7.876363754272461
    7. '  ' → logprob: -8.126363754272461
    8. '  
' → logprob: -8.626363754272461
    9. ' ' → logprob: -8.626363754272461
    10. '<|end|>' → logprob: -9.001363754272461

Token 249: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.34670141339302063
    2. 's' → logprob: -1.8467013835906982
    3. ' p' → logprob: -2.7217013835906982
    4. 'p' → logprob: -3.5967013835906982
    5. 'sub' → logprob: -3.9717013835906982
    6. 'pairs' → logprob: -4.971701622009277
    7. ' pairs' → logprob: -5.096701622009277
    8. ' sub' → logprob: -5.596701622009277
    9. 'cnt' → logprob: -5.971701622009277
    10. '0' → logprob: -6.471701622009277

Token 250: '-table' (ID: 35909)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.24351756274700165
    2. 'array' → logprob: -1.868517518043518
    3. '   ' → logprob: -3.6185176372528076
    4. '_arrays' → logprob: -3.9935176372528076
    5. '_table' → logprob: -5.4935173988342285
    6. 'arr' → logprob: -5.9935173988342285
    7. '_array' → logprob: -6.3685173988342285
    8. 'table' → logprob: -6.4935173988342285
    9. '_' → logprob: -6.7435173988342285
    10. '=' → logprob: -6.8685173988342285

Token 251: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -4.000763510703109e-05
    2. 'able' → logprob: -11.625040054321289
    3. 'ux' → logprob: -12.000040054321289
    4. 'ables' → logprob: -12.375040054321289
    5. 'arrays' → logprob: -12.375040054321289
    6. 'au' → logprob: -13.000040054321289
    7. 'aus' → logprob: -13.000040054321289
    8. 'x' → logprob: -13.250040054321289
    9. 'bles' → logprob: -13.375040054321289
    10. 'ments' → logprob: -13.500040054321289

Token 252: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8635995984077454
    2. '
' → logprob: -1.3635995388031006
    3. 'for' → logprob: -1.9885995388031006
    4. ' for' → logprob: -2.1135995388031006
    5. ' ' → logprob: -3.6135995388031006
    6. '    
' → logprob: -4.11359977722168
    7. '\n' → logprob: -5.23859977722168
    8. '  
' → logprob: -5.36359977722168
    9. ' 
' → logprob: -5.61359977722168
    10. '  ' → logprob: -5.98859977722168

Token 253: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02179889753460884
    2. ' somme' → logprob: -4.521799087524414
    3. ' sommes' → logprob: -5.396799087524414
    4. 'som' → logprob: -5.771799087524414
    5. 'z' → logprob: -6.771799087524414
    6. ' som' → logprob: -8.146799087524414
    7. '   ' → logprob: -8.646799087524414
    8. 'c' → logprob: -8.896799087524414
    9. ' ' → logprob: -9.021799087524414
    10. 't' → logprob: -9.021799087524414

Token 254: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08510271459817886
    2. 'n' → logprob: -2.9601027965545654
    3. '0' → logprob: -4.960102558135986
    4. ' nul' → logprob: -5.335102558135986
    5. '_n' → logprob: -5.460102558135986
    6. 'zero' → logprob: -5.710102558135986
    7. '   ' → logprob: -5.960102558135986
    8. ' zero' → logprob: -6.210102558135986
    9. 'nul' → logprob: -6.335102558135986
    10. '_zero' → logprob: -6.710102558135986

Token 255: 'ulle' (ID: 14644)
  Prédit: 'ulle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulle' → logprob: -0.018072795122861862
    2. 'ule' → logprob: -4.893072605133057
    3. '=' → logprob: -5.643072605133057
    4. '   ' → logprob: -6.018072605133057
    5. 'ull' → logprob: -6.393072605133057
    6. 'n' → logprob: -6.768072605133057
    7. '0' → logprob: -8.143073081970215
    8. '```' → logprob: -8.143073081970215
    9. ' =' → logprob: -8.518073081970215
    10. 'ul' → logprob: -8.768073081970215

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2637501060962677
    2. '
' → logprob: -2.0137500762939453
    3. 'for' → logprob: -3.0137500762939453
    4. ' for' → logprob: -3.2637500762939453
    5. '    
' → logprob: -5.513750076293945
    6. ' ' → logprob: -5.638750076293945
    7. '  
' → logprob: -6.388750076293945
    8. '\n' → logprob: -7.513750076293945
    9. ' 
' → logprob: -7.763750076293945
    10. '  ' → logprob: -8.263750076293945

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10247059166431427
    2. ' for' → logprob: -2.977470636367798
    3. 'for' → logprob: -4.102470397949219
    4. '
' → logprob: -4.602470397949219
    5. '  
' → logprob: -5.227470397949219
    6. '    
' → logprob: -5.352470397949219
    7. ' 
' → logprob: -5.477470397949219
    8. '\n' → logprob: -5.977470397949219
    9. ' ' → logprob: -6.102470397949219
    10. '  ' → logprob: -8.352470397949219

Token 258: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10195862501859665
    2. ' for' → logprob: -2.4769585132598877
    3. '   ' → logprob: -4.351958751678467
    4. '
' → logprob: -10.476958274841309
    5. ' ' → logprob: -11.351958274841309
    6. '    
' → logprob: -11.976958274841309
    7. '	for' → logprob: -12.851958274841309
    8. '  
' → logprob: -13.601958274841309
    9. ' 
' → logprob: -13.726958274841309
    10. '  ' → logprob: -13.726958274841309

Token 259: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000553151941858232
    2. ' for' → logprob: -7.500553131103516
    3. 'For' → logprob: -16.500553131103516
    4. '   ' → logprob: -17.250553131103516
    5. '```' → logprob: -18.875553131103516
    6. 'pour' → logprob: -19.750553131103516
    7. ' ' → logprob: -20.125553131103516
    8. 'Pour' → logprob: -20.750553131103516
    9. 'from' → logprob: -21.375553131103516
    10. '	for' → logprob: -21.875553131103516

Token 260: ' chaque' (ID: 21194)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -1.014129877090454
    2. ' val' → logprob: -1.764129877090454
    3. ' s' → logprob: -2.264129877090454
    4. ' value' → logprob: -2.264129877090454
    5. 'key' → logprob: -2.389129877090454
    6. 'value' → logprob: -3.389129877090454
    7. 'val' → logprob: -3.514129877090454
    8. 's' → logprob: -3.764129877090454
    9. 'sum' → logprob: -4.139129638671875
    10. ' valeur' → logprob: -4.389129638671875

Token 261: ' somme' (ID: 64484)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7720023393630981
    2. 'val' → logprob: -1.7720023393630981
    3. 's' → logprob: -2.5220022201538086
    4. 'freq' → logprob: -2.6470022201538086
    5. 'key' → logprob: -2.7720022201538086
    6. 'v' → logprob: -3.0220022201538086
    7. 'sum' → logprob: -3.6470022201538086
    8. ' value' → logprob: -4.147002220153809
    9. 'k' → logprob: -4.272002220153809
    10. ' val' → logprob: -4.522002220153809

Token 262: ' cumul' (ID: 163119)
  Prédit: ' cumul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumul' → logprob: -0.3546377122402191
    2. ' cum' → logprob: -2.104637622833252
    3. '_' → logprob: -2.354637622833252
    4. 'cum' → logprob: -3.229637622833252
    5. ' cumulative' → logprob: -3.354637622833252
    6. ' in' → logprob: -6.229637622833252
    7. ',' → logprob: -6.979637622833252
    8. ' accumulated' → logprob: -7.104637622833252
    9. '   ' → logprob: -7.229637622833252
    10. ' accum' → logprob: -7.854637622833252

Token 263: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.005918723531067371
    2. 'lée' → logprob: -5.755918502807617
    3. 'ul' → logprob: -7.130918502807617
    4. 'e' → logprob: -7.380918502807617
    5. 'ule' → logprob: -7.755918502807617
    6. 'rée' → logprob: -8.380918502807617
    7. 'ee' → logprob: -8.880918502807617
    8. 'uée' → logprob: -9.130918502807617
    9. 'é' → logprob: -9.255918502807617
    10. 'ed' → logprob: -9.255918502807617

Token 264: ' appara' (ID: 52982)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027775511145591736
    2. ' ,' → logprob: -4.277775287628174
    3. '   ' → logprob: -5.652775287628174
    4. ' in' → logprob: -6.277775287628174
    5. 'value' → logprob: -6.402775287628174
    6. '_value' → logprob: -6.652775287628174
    7. 'sum' → logprob: -6.902775287628174
    8. 'val' → logprob: -7.277775287628174
    9. '_,' → logprob: -7.652775287628174
    10. ' s' → logprob: -7.777775287628174

Token 265: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.3539707064628601
    2. 'ss' → logprob: -1.3539707660675049
    3. 'nt' → logprob: -3.603970766067505
    4. 'ue' → logprob: -4.728970527648926
    5. 't' → logprob: -6.853970527648926
    6. 'ît' → logprob: -6.853970527648926
    7. 'it' → logprob: -7.853970527648926
    8. 'issante' → logprob: -8.603970527648926
    9. 'î' → logprob: -9.103970527648926
    10. 'sent' → logprob: -9.228970527648926

Token 266: ' plusieurs' (ID: 20875)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8571155667304993
    2. 'dans' → logprob: -1.6071155071258545
    3. ' dans' → logprob: -1.6071155071258545
    4. ' in' → logprob: -1.8571155071258545
    5. ' ' → logprob: -5.232115745544434
    6. 's' → logprob: -5.607115745544434
    7. 'in' → logprob: -5.732115745544434
    8. ' c' → logprob: -6.607115745544434
    9. ' en' → logprob: -6.732115745544434
    10. ' ,' → logprob: -7.232115745544434

Token 267: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.03822749853134155
    2. 'fois' → logprob: -3.2882275581359863
    3. ' ' → logprob: -9.288227081298828
    4. 'fo' → logprob: -10.538227081298828
    5. '   ' → logprob: -11.288227081298828
    6. 'x' → logprob: -11.913227081298828
    7. 'times' → logprob: -12.163227081298828
    8. ' veces' → logprob: -12.288227081298828
    9. 'au' → logprob: -12.413227081298828
    10. ' times' → logprob: -12.538227081298828

Token 268: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7226881384849548
    2. ',' → logprob: -1.0976881980895996
    3. '   ' → logprob: -1.7226881980895996
    4. ':
' → logprob: -6.9726881980896
    5. ' :' → logprob: -6.9726881980896
    6. ' ,' → logprob: -9.097687721252441
    7. ' in' → logprob: -9.472687721252441
    8. ' for' → logprob: -10.097687721252441
    9. '    ' → logprob: -10.222687721252441
    10. '  ' → logprob: -10.347687721252441

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029419248457998037
    2. ' for' → logprob: -6.002942085266113
    3. '<|end|>' → logprob: -8.752942085266113
    4. 'for' → logprob: -9.002942085266113
    5. '    ' → logprob: -9.752942085266113
    6. ' ' → logprob: -9.752942085266113
    7. '<|end|>' → logprob: -10.627942085266113
    8. '  ' → logprob: -10.627942085266113
    9. '    
' → logprob: -12.252942085266113
    10. '```' → logprob: -12.877942085266113

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09455689787864685
    2. ' for' → logprob: -3.0945568084716797
    3. '<|end|>' → logprob: -3.4695568084716797
    4. 'for' → logprob: -4.46955680847168
    5. '    ' → logprob: -7.46955680847168
    6. ' ' → logprob: -7.46955680847168
    7. '<|end|>' → logprob: -7.84455680847168
    8. '  ' → logprob: -8.34455680847168
    9. '    
' → logprob: -8.46955680847168
    10. '	for' → logprob: -9.46955680847168

Token 271: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3005291819572449
    2. ' for' → logprob: -1.5505292415618896
    3. '   ' → logprob: -3.0505292415618896
    4. '	for' → logprob: -9.550529479980469
    5. '  ' → logprob: -11.675529479980469
    6. '<|end|>' → logprob: -11.675529479980469
    7. ' ' → logprob: -11.800529479980469
    8. '    ' → logprob: -12.175529479980469
    9. '       ' → logprob: -13.675529479980469
    10. '    
' → logprob: -14.300529479980469

Token 272: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09803278744220734
    2. ' for' → logprob: -2.4730327129364014
    3. '   ' → logprob: -4.7230329513549805
    4. 'cnt' → logprob: -9.47303295135498
    5. ' ' → logprob: -10.22303295135498
    6. 'count' → logprob: -10.97303295135498
    7. '  ' → logprob: -11.59803295135498
    8. 'nombre' → logprob: -12.22303295135498
    9. '	for' → logprob: -12.84803295135498
    10. 'counter' → logprob: -13.22303295135498

Token 273: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3987104296684265
    2. ' +=' → logprob: -2.5237104892730713
    3. '   ' → logprob: -2.7737104892730713
    4. 'd' → logprob: -3.0237104892730713
    5. ' de' → logprob: -3.0237104892730713
    6. '+=' → logprob: -3.0237104892730713
    7. 'for' → logprob: -5.023710250854492
    8. 'de' → logprob: -5.273710250854492
    9. '  ' → logprob: -5.398710250854492
    10. '_d' → logprob: -5.523710250854492

Token 274: ' sous' (ID: 14487)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41938599944114685
    2. ' p' → logprob: -1.6693860292434692
    3. 's' → logprob: -2.7943859100341797
    4. 'pairs' → logprob: -3.0443859100341797
    5. ' sous' → logprob: -4.04438591003418
    6. ' pairs' → logprob: -4.91938591003418
    7. 'sub' → logprob: -5.16938591003418
    8. ' couples' → logprob: -5.54438591003418
    9. 'cou' → logprob: -5.54438591003418
    10. ' ' → logprob: -6.91938591003418

Token 275: '-table' (ID: 35909)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0890653133392334
    2. 'arrays' → logprob: -1.5890653133392334
    3. '_arrays' → logprob: -1.5890653133392334
    4. '_table' → logprob: -2.9640653133392334
    5. '   ' → logprob: -2.9640653133392334
    6. 'array' → logprob: -3.5890653133392334
    7. '_tokens' → logprob: -3.7140653133392334
    8. '_array' → logprob: -3.9640653133392334
    9. 'arr' → logprob: -4.2140655517578125
    10. '-' → logprob: -4.2140655517578125

Token 276: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.010204116813838482
    2. 'table' → logprob: -5.260204315185547
    3. 'arrays' → logprob: -5.760204315185547
    4. ' tableaux' → logprob: -7.260204315185547
    5. 'tabl' → logprob: -8.760204315185547
    6. '-table' → logprob: -9.010204315185547
    7. 'tables' → logprob: -9.135204315185547
    8. 'tab' → logprob: -9.260204315185547
    9. 'array' → logprob: -9.635204315185547
    10. '\t' → logprob: -9.760204315185547

Token 277: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0042065382003784
    2. ' =' → logprob: -2.129206657409668
    3. '=' → logprob: -2.254206657409668
    4. ' possibles' → logprob: -2.254206657409668
    5. ' associés' → logprob: -2.379206657409668
    6. ' de' → logprob: -3.379206657409668
    7. ' est' → logprob: -3.504206657409668
    8. 'de' → logprob: -4.504206657409668
    9. ' s' → logprob: -4.629206657409668
    10. 'd' → logprob: -4.629206657409668

Token 278: 'ants' (ID: 2027)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6809110045433044
    2. ' aux' → logprob: -0.8059110045433044
    3. ' au' → logprob: -4.430911064147949
    4. ' =' → logprob: -4.680911064147949
    5. '=' → logprob: -4.930911064147949
    6. ' a' → logprob: -5.055911064147949
    7. '   ' → logprob: -5.305911064147949
    8. 'à' → logprob: -5.805911064147949
    9. 'aux' → logprob: -6.055911064147949
    10. 'ra' → logprob: -7.680911064147949

Token 279: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2123764604330063
    2. '+=' → logprob: -1.7123764753341675
    3. ' =' → logprob: -5.212376594543457
    4. '   ' → logprob: -5.837376594543457
    5. '=' → logprob: -6.087376594543457
    6. '+=(' → logprob: -9.337376594543457
    7. ']+=' → logprob: -9.462376594543457
    8. ' est' → logprob: -10.462376594543457
    9. ',' → logprob: -11.337376594543457
    10. ' ' → logprob: -11.462376594543457

Token 280: ' comb' (ID: 4134)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08227181434631348
    2. 'c' → logprob: -2.8322718143463135
    3. '   ' → logprob: -4.332271575927734
    4. ' (' → logprob: -5.582271575927734
    5. ' sum' → logprob: -6.832271575927734
    6. ' cnt' → logprob: -7.207271575927734
    7. 'sum' → logprob: -7.707271575927734
    8. 'cnt' → logprob: -8.457271575927734
    9. '(c' → logprob: -9.082271575927734
    10. '    ' → logprob: -9.082271575927734

Token 281: '(n' (ID: 2406)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5190219283103943
    2. 'iné' → logprob: -1.144021987915039
    3. 'inais' → logprob: -3.894021987915039
    4. 'in' → logprob: -4.019021987915039
    5. '1' → logprob: -4.769021987915039
    6. ' c' → logprob: -4.769021987915039
    7. 'ine' → logprob: -5.019021987915039
    8. 'ina' → logprob: -5.144021987915039
    9. '(c' → logprob: -6.269021987915039
    10. '[' → logprob: -6.394021987915039

Token 282: ',' (ID: 11)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.1444815695285797
    2. '(c' → logprob: -2.019481658935547
    3. 'ations' → logprob: -7.144481658935547
    4. 'c' → logprob: -8.644481658935547
    5. '
' → logprob: -9.394481658935547
    6. ')' → logprob: -9.644481658935547
    7. 'e' → logprob: -9.769481658935547
    8. '   ' → logprob: -9.894481658935547
    9. 'ation' → logprob: -10.144481658935547
    10. '[' → logprob: -10.269481658935547

Token 283: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. ')' → logprob: -16.87670135498047
    4. '=' → logprob: -17.87670135498047
    5. '
' → logprob: -18.00170135498047
    6. '   ' → logprob: -18.37670135498047
    7. 'k' → logprob: -19.25170135498047
    8. '۲' → logprob: -19.50170135498047
    9. '  ' → logprob: -19.75170135498047
    10. '1' → logprob: -19.75170135498047

Token 284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -15.000011444091797
    4. 'k' → logprob: -15.500011444091797
    5. 'r' → logprob: -15.750011444091797
    6. ')' → logprob: -16.125011444091797
    7. '
' → logprob: -17.125011444091797
    8. '1' → logprob: -17.375011444091797
    9. '=' → logprob: -18.000011444091797
    10. '```' → logprob: -18.000011444091797

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006192441564053297
    2. 'import' → logprob: -6.381192207336426
    3. '   ' → logprob: -6.756192207336426
    4. '(' → logprob: -6.881192207336426
    5. ',' → logprob: -7.506192207336426
    6. ' )' → logprob: -7.631192207336426
    7. ')
' → logprob: -8.256192207336426
    8. '):' → logprob: -9.381192207336426
    9. ')(' → logprob: -9.381192207336426
    10. '(
' → logprob: -9.631192207336426

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022580218501389027
    2. ' for' → logprob: -7.252257823944092
    3. ')' → logprob: -7.877257823944092
    4. '<|end|>' → logprob: -8.25225830078125
    5. '(' → logprob: -8.37725830078125
    6. '    
' → logprob: -8.62725830078125
    7. ' ' → logprob: -9.37725830078125
    8. 'for' → logprob: -9.37725830078125
    9. ',' → logprob: -9.75225830078125
    10. '
' → logprob: -10.00225830078125

Token 287: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014970379881560802
    2. 'for' (adapté à ' for') → logprob: -4.389970302581787
    3. ' for' → logprob: -6.014970302581787
    4. '	for' → logprob: -12.139970779418945
    5. ' ' → logprob: -12.514970779418945
    6. '    
' → logprob: -12.889970779418945
    7. '  ' → logprob: -13.264970779418945
    8. 'from' → logprob: -14.264970779418945
    9. '```' → logprob: -14.514970779418945
    10. 'import' → logprob: -15.014970779418945

Token 288: ' i' (ID: 575)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.4212863445281982
    2. 'key' → logprob: -1.5462863445281982
    3. ' key' → logprob: -1.6712863445281982
    4. 's' → logprob: -2.5462863445281982
    5. ' s' → logprob: -2.5462863445281982
    6. 'value' → logprob: -3.1712863445281982
    7. 'k' → logprob: -3.1712863445281982
    8. ' sum' → logprob: -3.1712863445281982
    9. ' val' → logprob: -3.6712863445281982
    10. ' value' → logprob: -4.046286582946777

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31885769963264465
    2. 'in' → logprob: -1.4438576698303223
    3. ',' → logprob: -3.3188576698303223
    4. 's' → logprob: -7.693857669830322
    5. ' ,' → logprob: -8.81885814666748
    6. 'n' → logprob: -8.81885814666748
    7. ' ' → logprob: -11.06885814666748
    8. ',in' → logprob: -11.81885814666748
    9. ',count' → logprob: -12.69385814666748
    10. '_' → logprob: -12.69385814666748

Token 290: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38821372389793396
    2. ' c' → logprob: -1.1382137537002563
    3. ' range' → logprob: -7.013213634490967
    4. 'range' → logprob: -7.763213634490967
    5. ' ' → logprob: -12.513214111328125
    6. ')c' → logprob: -12.888214111328125
    7. '
' → logprob: -13.013214111328125
    8. '   ' → logprob: -13.138214111328125
    9. '(c' → logprob: -13.388214111328125
    10. ')' → logprob: -14.138214111328125

Token 291: '.values' (ID: 20422)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2677568197250366
    2. ',' → logprob: -1.3927568197250366
    3. ':' → logprob: -1.7677568197250366
    4. '.values' → logprob: -2.517756938934326
    5. '.keys' → logprob: -3.267756938934326
    6. 's' → logprob: -3.267756938934326
    7. 'values' → logprob: -3.642756938934326
    8. 'in' → logprob: -3.767756938934326
    9. ' if' → logprob: -4.142756938934326
    10. 'if' → logprob: -4.267756938934326

Token 292: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007828895002603531
    2. '():
' → logprob: -4.882828712463379
    3. '()' → logprob: -8.507828712463379
    4. ':' → logprob: -11.757828712463379
    5. '(' → logprob: -11.882828712463379
    6. ' ():' → logprob: -12.882828712463379
    7. '():
' → logprob: -13.507828712463379
    8. '):' → logprob: -13.882828712463379
    9. '()):
' → logprob: -14.507828712463379
    10. '():

' → logprob: -14.757828712463379

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013521412620320916
    2. ':' → logprob: -7.126352310180664
    3. '   ' → logprob: -7.751352310180664
    4. ',' → logprob: -10.376352310180664
    5. '<|end|>' → logprob: -10.501352310180664
    6. ':
' → logprob: -11.251352310180664
    7. '        
' → logprob: -11.376352310180664
    8. '      ' → logprob: -12.126352310180664
    9. ' if' → logprob: -12.251352310180664
    10. ' :' → logprob: -12.876352310180664

Token 294: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1649700403213501
    2. ' if' → logprob: -2.7899699211120605
    3. ' cnt' → logprob: -3.1649699211120605
    4. '   ' → logprob: -3.4149699211120605
    5. 'cnt' → logprob: -4.5399699211120605
    6. 'if' (adapté à ' if') → logprob: -5.4149699211120605
    7. '           ' → logprob: -9.289970397949219
    8. '    ' → logprob: -9.289970397949219
    9. '	cnt' → logprob: -9.289970397949219
    10. '     ' → logprob: -10.289970397949219

Token 295: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759613513946533
    2. 'i' → logprob: -0.8259613513946533
    3. '   ' → logprob: -11.075961112976074
    4. '	i' → logprob: -12.700961112976074
    5. '       ' → logprob: -13.075961112976074
    6. '           ' → logprob: -15.075961112976074
    7. '    ' → logprob: -15.075961112976074
    8. ' ' → logprob: -15.200961112976074
    9. '  ' → logprob: -15.450961112976074
    10. '(i' → logprob: -16.82596206665039

Token 296: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07769432663917542
    2. ' >' → logprob: -2.9526944160461426
    3. '>=' → logprob: -3.9526944160461426
    4. ' >=' → logprob: -5.702694416046143
    5. ' ' → logprob: -12.327693939208984
    6. '   ' → logprob: -12.577693939208984
    7. '>
' → logprob: -13.952693939208984
    8. '≥' → logprob: -14.202693939208984
    9. '&gt' → logprob: -14.202693939208984
    10. ' >
' → logprob: -14.202693939208984

Token 297: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048408225178719
    2. ' ' → logprob: -4.511048316955566
    3. '=' → logprob: -14.636048316955566
    4. '   ' → logprob: -17.011049270629883
    5. '  ' → logprob: -17.136049270629883
    6. '
' → logprob: -17.886049270629883
    7. '2' → logprob: -18.011049270629883
    8. '１' → logprob: -18.761049270629883
    9. '>' → logprob: -19.323549270629883
    10. '    ' → logprob: -19.573549270629883

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '=' → logprob: -17.000015258789062
    4. '   ' → logprob: -17.500015258789062
    5. '
' → logprob: -18.125015258789062
    6. '

' → logprob: -18.687515258789062
    7. '>' → logprob: -18.812515258789062
    8. '2' → logprob: -19.250015258789062
    9. '  ' → logprob: -19.562515258789062
    10. '１' → logprob: -19.812515258789062

Token 299: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1640816479921341
    2. ':' → logprob: -2.414081573486328
    3. '           ' → logprob: -2.789081573486328
    4. '       ' → logprob: -8.539081573486328
    5. '):
' → logprob: -8.789081573486328
    6. ',' → logprob: -10.914081573486328
    7. ' :
' → logprob: -10.914081573486328
    8. ':
' → logprob: -12.164081573486328
    9. ' :' → logprob: -12.914081573486328
    10. '          ' → logprob: -13.914081573486328

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005955107044428587
    2. '       ' → logprob: -5.130955219268799
    3. '	       ' → logprob: -12.13095474243164
    4. '
' → logprob: -12.50595474243164
    5. 'cnt' → logprob: -12.63095474243164
    6. '          ' → logprob: -13.13095474243164
    7. ' cnt' → logprob: -13.25595474243164
    8. '               ' → logprob: -13.25595474243164
    9. '        
' → logprob: -13.63095474243164
    10. '        ' → logprob: -13.63095474243164

Token 301: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.47956880927085876
    2. '           ' → logprob: -1.4795688390731812
    3. 'cnt' (adapté à ' cnt') → logprob: -2.3545687198638916
    4. '               ' → logprob: -2.8545687198638916
    5. '(cnt' → logprob: -8.979568481445312
    6. '	cnt' → logprob: -8.979568481445312
    7. '[cnt' → logprob: -9.354568481445312
    8. '   ' → logprob: -9.479568481445312
    9. '       ' → logprob: -9.479568481445312
    10. '
' → logprob: -9.604568481445312

Token 302: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011049704626202583
    2. '+=' → logprob: -4.511049747467041
    3. '   ' → logprob: -14.011049270629883
    4. '    ' → logprob: -14.511049270629883
    5. '+=(' → logprob: -15.011049270629883
    6. ']+=' → logprob: -15.761049270629883
    7. '+' → logprob: -16.511049270629883
    8. 'import' → logprob: -17.511049270629883
    9. ' -=' → logprob: -18.011049270629883
    10. '=' → logprob: -18.386049270629883

Token 303: ' int' (ID: 677)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31389176845550537
    2. ' i' → logprob: -1.3138917684555054
    3. '(i' → logprob: -7.938891887664795
    4. ' (' → logprob: -8.313891410827637
    5. '   ' → logprob: -10.688891410827637
    6. '(' → logprob: -13.313891410827637
    7. '           ' → logprob: -13.563891410827637
    8. ' ' → logprob: -13.688891410827637
    9. '  ' → logprob: -14.563891410827637
    10. '	i' → logprob: -14.563891410827637

Token 304: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003467865171842277
    2. '(np' → logprob: -9.000347137451172
    3. '((' → logprob: -9.000347137451172
    4. 'i' → logprob: -9.250347137451172
    5. 'np' → logprob: -12.750347137451172
    6. '(' → logprob: -14.125347137451172
    7. ' i' → logprob: -16.250347137451172
    8. '(com' → logprob: -16.500347137451172
    9. ' (' → logprob: -17.125347137451172
    10. '(((' → logprob: -17.500347137451172

Token 305: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06306937336921692
    2. '*(' → logprob: -2.8130693435668945
    3. ' *' → logprob: -6.8130693435668945
    4. ')' → logprob: -14.688069343566895
    5. ' ' → logprob: -14.938069343566895
    6. '*i' → logprob: -15.313069343566895
    7. ' *(' → logprob: -15.563069343566895
    8. ')*' → logprob: -15.563069343566895
    9. ')*(' → logprob: -15.813069343566895
    10. '*((' → logprob: -16.18807029724121

Token 306: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.4868770196917467e-05
    2. ' (' → logprob: -10.750024795532227
    3. '(I' → logprob: -13.375024795532227
    4. '(' → logprob: -13.750024795532227
    5. '(ii' → logprob: -15.375024795532227
    6. '   ' → logprob: -15.500024795532227
    7. '           ' → logprob: -15.875024795532227
    8. '(n' → logprob: -16.500024795532227
    9. '  ' → logprob: -17.375024795532227
    10. '[i' → logprob: -17.500024795532227

Token 307: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023260852321982384
    2. '(i' → logprob: -3.7732608318328857
    3. ' i' → logprob: -11.898261070251465
    4. ' (' → logprob: -12.398261070251465
    5. '{i' → logprob: -12.773261070251465
    6. '   ' → logprob: -14.523261070251465
    7. '[i' → logprob: -14.648261070251465
    8. '	i' → logprob: -15.273261070251465
    9. '           ' → logprob: -15.773261070251465
    10. ')i' → logprob: -16.14826011657715

Token 308: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014164329506456852
    2. ' -' → logprob: -4.264164447784424
    3. '1' → logprob: -14.639163970947266
    4. ' ' → logprob: -15.139163970947266
    5. '   ' → logprob: -16.389163970947266
    6. '```' → logprob: -17.514163970947266
    7. '  ' → logprob: -17.639163970947266
    8. '–' → logprob: -18.139163970947266
    9. '
' → logprob: -18.264163970947266
    10. '−' → logprob: -19.389163970947266

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '           ' → logprob: -17.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. ')' → logprob: -17.875001907348633
    7. '       ' → logprob: -18.375001907348633
    8. '<|end|>' → logprob: -18.750001907348633
    9. '...' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.062501907348633

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.75000286102295
    4. ')' → logprob: -15.87500286102295
    5. '```' → logprob: -16.625001907348633
    6. '2' → logprob: -17.562501907348633
    7. '  ' → logprob: -17.750001907348633
    8. '
' → logprob: -17.812501907348633
    9. '<|end|>' → logprob: -17.812501907348633
    10. '    ' → logprob: -19.000001907348633

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0164305679500103
    2. ' //' → logprob: -5.016430377960205
    3. '//' → logprob: -5.141430377960205
    4. ')//' → logprob: -6.141430377960205
    5. ' )' → logprob: -6.516430377960205
    6. ' /' → logprob: -9.516430854797363
    7. '/' → logprob: -9.641430854797363
    8. ')/' → logprob: -10.141430854797363
    9. '   ' → logprob: -12.766430854797363
    10. ' ' → logprob: -13.641430854797363

Token 312: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3935573399066925
    2. '//' → logprob: -1.1435573101043701
    3. ')' → logprob: -5.143557548522949
    4. '/' → logprob: -8.14355754852295
    5. ' )' → logprob: -8.39355754852295
    6. ' /' → logprob: -8.64355754852295
    7. ')//' → logprob: -9.01855754852295
    8. '```' → logprob: -12.26855754852295
    9. ' ' → logprob: -12.64355754852295
    10. '   ' → logprob: -13.89355754852295

Token 313: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.500204086303711
    4. '
' → logprob: -16.25020408630371
    5. '```' → logprob: -18.00020408630371
    6. '  ' → logprob: -18.12520408630371
    7. ')' → logprob: -18.12520408630371
    8. '    ' → logprob: -18.75020408630371
    9. '       ' → logprob: -19.00020408630371
    10. '           ' → logprob: -19.37520408630371

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '
' → logprob: -18.625001907348633
    5. '  ' → logprob: -19.375001907348633
    6. '```' → logprob: -19.625001907348633
    7. ')' → logprob: -19.750001907348633
    8. '۲' → logprob: -19.875001907348633
    9. '２' → logprob: -20.375001907348633
    10. '    ' → logprob: -20.625001907348633

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -14.125029563903809
    4. '   ' → logprob: -15.125029563903809
    5. '       ' → logprob: -15.250029563903809
    6. '))' → logprob: -15.375029563903809
    7. ')return' → logprob: -16.875028610229492
    8. ')
' → logprob: -17.500028610229492
    9. ')}' → logprob: -17.625028610229492
    10. '<|end|>' → logprob: -18.250028610229492

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008811100386083126
    2. 'return' → logprob: -4.758810997009277
    3. ' return' → logprob: -8.883810997009277
    4. '
' → logprob: -9.883810997009277
    5. '    
' → logprob: -12.133810997009277
    6. '	return' → logprob: -14.508810997009277
    7. 'print' → logprob: -14.633810997009277
    8. '```' → logprob: -15.008810997009277
    9. '        
' → logprob: -16.883811950683594
    10. '       ' → logprob: -17.133811950683594

Token 317: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014922339469194412
    2. 'return' → logprob: -4.264922142028809
    3. 'print' → logprob: -7.889922142028809
    4. ' return' → logprob: -7.889922142028809
    5. '    
' → logprob: -12.264922142028809
    6. '
' → logprob: -12.889922142028809
    7. ' print' → logprob: -14.014922142028809
    8. '	return' → logprob: -14.264922142028809
    9. '```' → logprob: -14.764922142028809
    10. '       ' → logprob: -15.764922142028809

Token 318: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1278202086687088
    2. 'return' → logprob: -2.1278202533721924
    3. '   ' → logprob: -7.252820014953613
    4. ' print' → logprob: -9.127820014953613
    5. ' return' → logprob: -9.502820014953613
    6. '```' → logprob: -15.627820014953613
    7. 'ret' → logprob: -16.62782096862793
    8. ' ' → logprob: -17.50282096862793
    9. '	print' → logprob: -18.00282096862793
    10. '  ' → logprob: -18.25282096862793

Token 319: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.04973180592060089
    2. 'iche' → logprob: -3.049731731414795
    3. 'ichage' → logprob: -7.049731731414795
    4. 'ich' → logprob: -9.049732208251953
    5. '#' → logprob: -9.424732208251953
    6. 'ic' → logprob: -10.549732208251953
    7. 'f' → logprob: -10.799732208251953
    8. 'cher' → logprob: -11.049732208251953
    9. '   ' → logprob: -12.799732208251953
    10. 'iché' → logprob: -13.424732208251953

Token 320: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20156975090503693
    2. 'print' → logprob: -1.7015697956085205
    3. '(cnt' → logprob: -9.201569557189941
    4. ' print' → logprob: -10.201569557189941
    5. '(print' → logprob: -11.576569557189941
    6. 'cnt' → logprob: -11.701569557189941
    7. '(' → logprob: -14.826569557189941
    8. '  ' → logprob: -15.826569557189941
    9. '```' → logprob: -16.326570510864258
    10. ' ' → logprob: -16.576570510864258

Token 321: ' résultat' (ID: 62556)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.36574100604048e-06
    2. ' cnt' → logprob: -13.000004768371582
    3. 'print' → logprob: -13.750004768371582
    4. 'result' → logprob: -14.125004768371582
    5. '(cnt' → logprob: -15.875004768371582
    6. 'count' → logprob: -16.125003814697266
    7. 'counter' → logprob: -16.500003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '[cnt' → logprob: -19.750003814697266
    10. '	cnt' → logprob: -20.125003814697266

Token 322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.696531355381012
    2. 'print' → logprob: -0.696531355381012
    3. ' print' → logprob: -5.696531295776367
    4. '```' → logprob: -10.821531295776367
    5. '
' → logprob: -14.321531295776367
    6. '	print' → logprob: -14.946531295776367
    7. '    
' → logprob: -17.071531295776367
    8. '``' → logprob: -17.946531295776367
    9. '`' → logprob: -18.571531295776367
    10. '(print' → logprob: -18.696531295776367

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10103486478328705
    2. 'print' → logprob: -2.3510348796844482
    3. ' print' → logprob: -7.101034641265869
    4. '```' → logprob: -12.601035118103027
    5. '
' → logprob: -15.601035118103027
    6. '	print' → logprob: -16.60103416442871
    7. '    
' → logprob: -16.72603416442871
    8. '       ' → logprob: -18.72603416442871
    9. '  ' → logprob: -18.97603416442871
    10. '    ' → logprob: -19.60103416442871

Token 324: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.35837464465294e-05
    2. ' print' → logprob: -10.250043869018555
    3. '   ' → logprob: -11.750043869018555
    4. '```' → logprob: -15.500043869018555
    5. '	print' → logprob: -21.750043869018555
    6. '``' → logprob: -22.875043869018555
    7. '`' → logprob: -23.125043869018555
    8. 'return' → logprob: -23.625043869018555
    9. '  ' → logprob: -24.375043869018555
    10. '    
' → logprob: -24.750043869018555

Token 325: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0015181921189650893
    2. '(' → logprob: -6.501518249511719
    3. 'cnt' → logprob: -11.251518249511719
    4. '()' → logprob: -14.376518249511719
    5. '(count' → logprob: -14.376518249511719
    6. '[cnt' → logprob: -14.876518249511719
    7. '(cont' → logprob: -15.126518249511719
    8. '(counter' → logprob: -15.126518249511719
    9. '(
' → logprob: -15.251518249511719
    10. ' (' → logprob: -15.501518249511719

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -17.125
    4. '))' → logprob: -17.25
    5. ')`' → logprob: -17.25
    6. ')}' → logprob: -19.125
    7. '')' → logprob: -19.5
    8. '   ' → logprob: -20.25
    9. '`)' → logprob: -20.375
    10. '())' → logprob: -20.5

Token 327: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.009423593990504742
    2. 'l' → logprob: -5.259423732757568
    3. 'le' → logprob: -6.634423732757568
    4. 'e' → logprob: -7.509423732757568
    5. ' count' → logprob: -7.884423732757568
    6. 'ar' → logprob: -8.13442325592041
    7. 'lication' → logprob: -8.13442325592041
    8. 'count' → logprob: -8.50942325592041
    9. 'eler' → logprob: -8.50942325592041
    10. '_count' → logprob: -9.00942325592041

Token 330: ' de' (ID: 334)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002858881198335439
    2. '()' → logprob: -9.125286102294922
    3. '(count' → logprob: -9.125286102294922
    4. ' count' → logprob: -10.375286102294922
    5. '()
' → logprob: -11.000286102294922
    6. '(' → logprob: -11.875286102294922
    7. '_count' → logprob: -12.250286102294922
    8. '(
' → logprob: -12.500286102294922
    9. 'def' → logprob: -13.375286102294922
    10. '<count' → logprob: -14.000286102294922

Token 331: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. ' count' → logprob: -15.125
    3. '(count' → logprob: -17.0
    4. 'counter' → logprob: -18.875
    5. '_count' → logprob: -19.875
    6. '$count' → logprob: -20.0
    7. '```' → logprob: -20.75
    8. '	count' → logprob: -21.0
    9. '<count' → logprob: -21.25
    10. '[count' → logprob: -21.375

Token 332: ' fonction' (ID: 17610)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.723352049040841e-06
    2. 'def' → logprob: -12.750004768371582
    3. ' count' → logprob: -13.625004768371582
    4. 'function' → logprob: -15.125004768371582
    5. 'if' → logprob: -15.500004768371582
    6. '```' → logprob: -17.125003814697266
    7. '(count' → logprob: -18.375003814697266
    8. 'code' → logprob: -18.375003814697266
    9. '#' → logprob: -18.750003814697266
    10. 'main' → logprob: -19.000003814697266

Token 333: ' principale' (ID: 68926)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.392202976712724e-06
    2. '
' → logprob: -12.000006675720215
    3. ' count' → logprob: -15.875006675720215
    4. '(count' → logprob: -18.2500057220459
    5. '

' → logprob: -19.3750057220459
    6. '_count' → logprob: -19.7500057220459
    7. '[count' → logprob: -19.8750057220459
    8. '$count' → logprob: -20.5000057220459
    9. '
' → logprob: -20.8750057220459
    10. '```' → logprob: -20.8750057220459

Token 334: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.982165698194876e-05
    2. '
' → logprob: -9.500080108642578
    3. '(count' → logprob: -12.875080108642578
    4. '()
' → logprob: -13.000080108642578
    5. ' count' → logprob: -16.375080108642578
    6. '[count' → logprob: -17.375080108642578
    7. '(
' → logprob: -17.750080108642578
    8. '$count' → logprob: -17.875080108642578
    9. '_count' → logprob: -18.000080108642578
    10. 'if' → logprob: -18.000080108642578

Token 335: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. ' count' → logprob: -18.875
    3. 'if' → logprob: -23.125
    4. '(count' → logprob: -23.875
    5. 'counter' → logprob: -24.125
    6. '
' → logprob: -24.125
    7. '```' → logprob: -24.125
    8. '[count' → logprob: -24.375
    9. '$count' → logprob: -24.375
    10. '	count' → logprob: -24.625

Token 336: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.00043376852408982813
    2. '_' → logprob: -7.750433921813965
    3. '_ZERO' → logprob: -13.750433921813965
    4. 'zero' → logprob: -14.250433921813965
    5. '_count' → logprob: -15.125433921813965
    6. 'Zero' → logprob: -16.00043296813965
    7. '_z' → logprob: -16.12543296813965
    8. '__' → logprob: -16.12543296813965
    9. '_empty' → logprob: -16.37543296813965
    10. '_sum' → logprob: -16.62543296813965

Token 337: '_sum' (ID: 29859)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.25210338830947876
    2. '_sum' → logprob: -1.502103328704834
    3. '_' → logprob: -9.502103805541992
    4. '_s' → logprob: -9.502103805541992
    5. 'zero' → logprob: -11.377103805541992
    6. 'sum' → logprob: -12.377103805541992
    7. '_count' → logprob: -13.252103805541992
    8. 's' → logprob: -13.377103805541992
    9. '```' → logprob: -13.752103805541992
    10. '(_' → logprob: -14.127103805541992

Token 338: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0002707529056351632
    2. '_' → logprob: -8.25027084350586
    3. '_s' → logprob: -11.87527084350586
    4. '_zero' → logprob: -13.75027084350586
    5. '_sum' → logprob: -13.87527084350586
    6. 'sub' → logprob: -16.12527084350586
    7. ' _' → logprob: -16.25027084350586
    8. '_arrays' → logprob: -16.25027084350586
    9. '_Sub' → logprob: -16.87527084350586
    10. '_SUB' → logprob: -17.50027084350586

Token 339: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0005387356504797935
    2. 'array' → logprob: -8.25053882598877
    3. 'arra' → logprob: -8.50053882598877
    4. '_arrays' → logprob: -10.12553882598877
    5. 'arr' → logprob: -11.00053882598877
    6. 'ar' → logprob: -11.37553882598877
    7. 'a' → logprob: -12.87553882598877
    8. '_' → logprob: -14.00053882598877
    9. ' arrays' → logprob: -14.00053882598877
    10. '_array' → logprob: -14.12553882598877

Token 340: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 244
Précision stricte (1ère position): 37.57%
Précision adaptée (1ère position): 37.87%
Précision (top 10): 72.19%
================================================================================
