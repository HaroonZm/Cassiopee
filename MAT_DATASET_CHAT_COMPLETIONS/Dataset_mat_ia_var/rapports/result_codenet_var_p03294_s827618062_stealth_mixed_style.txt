================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
L = list(map(lambda x: int(x)-1, input().split()))
res = 0
for idx in range(len(L)):
    res += L[idx]
print(f"{res}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035786881926469505
    2. '('' → logprob: -8.750357627868652
    3. '(N' → logprob: -9.125357627868652
    4. ''' → logprob: -11.000357627868652
    5. '(input' → logprob: -11.125357627868652
    6. '(
' → logprob: -11.250357627868652
    7. '()' → logprob: -11.375357627868652
    8. '("("' → logprob: -11.375357627868652
    9. '```' → logprob: -12.125357627868652
    10. '(`' → logprob: -12.375357627868652

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03444071486592293
    2. ')' → logprob: -3.909440755844116
    3. '()' → logprob: -4.409440517425537
    4. '())' → logprob: -7.034440517425537
    5. '(
' → logprob: -8.534440994262695
    6. '('' → logprob: -9.034440994262695
    7. '("("' → logprob: -9.659440994262695
    8. '(

' → logprob: -9.784440994262695
    9. '```' → logprob: -9.784440994262695
    10. '(()' → logprob: -9.909440994262695

Token 5: 'L' (ID: 43)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7345439195632935
    2. '[' → logprob: -1.2345439195632935
    3. '=' → logprob: -2.359543800354004
    4. ' =' → logprob: -2.859543800354004
    5. 'ist' → logprob: -3.859543800354004
    6. 'i' → logprob: -4.359543800354004
    7. '.append' → logprob: -4.484543800354004
    8. '[i' → logprob: -4.734543800354004
    9. 's' → logprob: -5.109543800354004
    10. '_' → logprob: -5.359543800354004

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6098917722702026
    2. '[]' → logprob: -0.8598917722702026
    3. ' [' → logprob: -4.484891891479492
    4. '[int' → logprob: -4.859891891479492
    5. '[' → logprob: -5.234891891479492
    6. '[input' → logprob: -5.234891891479492
    7. 'list' → logprob: -6.109891891479492
    8. ' list' → logprob: -6.984891891479492
    9. '[list' → logprob: -9.234891891479492
    10. '[])' → logprob: -9.484891891479492

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007896171882748604
    2. '(range' → logprob: -7.250789642333984
    3. '```' → logprob: -10.375789642333984
    4. '[' → logprob: -11.125789642333984
    5. '(
' → logprob: -11.625789642333984
    6. ' (' → logprob: -12.375789642333984
    7. '()' → logprob: -13.000789642333984
    8. ')' → logprob: -13.000789642333984
    9. '(

' → logprob: -13.125789642333984
    10. '("("' → logprob: -13.125789642333984

Token 9: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12903091311454773
    2. '(' → logprob: -2.12903094291687
    3. '(str' → logprob: -6.879030704498291
    4. '(input' → logprob: -7.004030704498291
    5. ')' → logprob: -10.12903118133545
    6. '(
' → logprob: -10.37903118133545
    7. '<int' → logprob: -10.87903118133545
    8. 'int' → logprob: -10.87903118133545
    9. '(eval' → logprob: -11.00403118133545
    10. '(lambda' → logprob: -11.25403118133545

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0181878749281168
    2. 'x' → logprob: -4.018187999725342
    3. ' ' → logprob: -11.268187522888184
    4. ' int' → logprob: -11.518187522888184
    5. 'int' → logprob: -11.893187522888184
    6. ' s' → logprob: -13.518187522888184
    7. ' n' → logprob: -13.768187522888184
    8. '<|end|>' → logprob: -13.768187522888184
    9. ' lambda' → logprob: -13.768187522888184
    10. '<int' → logprob: -14.268187522888184

Token 11: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.062132369726896286
    2. ':int' → logprob: -4.187132358551025
    3. ' :' → logprob: -4.312132358551025
    4. ':' → logprob: -4.687132358551025
    5. ' ,' → logprob: -5.187132358551025
    6. ',' → logprob: -5.312132358551025
    7. 'x' → logprob: -5.437132358551025
    8. ',int' → logprob: -5.812132358551025
    9. ' int' → logprob: -6.187132358551025
    10. 'int' → logprob: -6.687132358551025

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46743741631507874
    2. ' int' → logprob: -1.0924373865127563
    3. ' x' → logprob: -3.592437505722046
    4. 'x' → logprob: -4.592437267303467
    5. '(int' → logprob: -9.217437744140625
    6. ' str' → logprob: -9.467437744140625
    7. 'str' → logprob: -9.467437744140625
    8. '<int' → logprob: -11.342437744140625
    9. ':int' → logprob: -11.467437744140625
    10. '[int' → logprob: -11.592437744140625

Token 13: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06578096002340317
    2. '(' → logprob: -2.8157808780670166
    3. ',' → logprob: -5.690781116485596
    4. ')' → logprob: -8.815780639648438
    5. ' (' → logprob: -9.065780639648438
    6. 'x' → logprob: -9.565780639648438
    7. ' ' → logprob: -10.815780639648438
    8. ' x' → logprob: -11.190780639648438
    9. ' ,' → logprob: -11.315780639648438
    10. '(input' → logprob: -11.440780639648438

Token 14: ')-' (ID: 14080)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18050158023834229
    2. ',' → logprob: -1.9305015802383423
    3. '(x' → logprob: -5.055501461029053
    4. 'input' → logprob: -5.305501461029053
    5. ',input' → logprob: -6.180501461029053
    6. ',x' → logprob: -6.305501461029053
    7. ')' → logprob: -6.555501461029053
    8. 'x' → logprob: -6.680501461029053
    9. ' ,' → logprob: -7.930501461029053
    10. ' input' → logprob: -8.055501937866211

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029779309406876564
    2. ' ' → logprob: -3.5297791957855225
    3. '0' → logprob: -11.029779434204102
    4. '2' → logprob: -12.529779434204102
    5. '100' → logprob: -13.592279434204102
    6. ' N' → logprob: -14.217279434204102
    7. '3' → logprob: -14.217279434204102
    8. '5' → logprob: -14.404779434204102
    9. '50' → logprob: -14.467279434204102
    10. 'N' → logprob: -14.717279434204102

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002663885010406375
    2. ',input' → logprob: -6.002664089202881
    3. ',x' → logprob: -9.752663612365723
    4. ')' → logprob: -10.252663612365723
    5. 'input' → logprob: -10.502663612365723
    6. '))' → logprob: -10.627663612365723
    7. ',num' → logprob: -12.502663612365723
    8. '(' → logprob: -12.502663612365723
    9. ',n' → logprob: -12.502663612365723
    10. ',int' → logprob: -12.502663612365723

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018154975026845932
    2. ' input' → logprob: -4.018155097961426
    3. 'range' → logprob: -12.393155097961426
    4. '(input' → logprob: -15.018155097961426
    5. '<input' → logprob: -15.393155097961426
    6. ' range' → logprob: -15.643155097961426
    7. '[input' → logprob: -16.89315414428711
    8. ' ' → logprob: -17.01815414428711
    9. '=input' → logprob: -17.39315414428711
    10. '	input' → logprob: -17.64315414428711

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.047547124326229095
    2. '())' → logprob: -3.7975471019744873
    3. '()' → logprob: -4.047547340393066
    4. '()))' → logprob: -5.047547340393066
    5. ')' → logprob: -10.172547340393066
    6. '()));' → logprob: -10.922547340393066
    7. '()[' → logprob: -11.047547340393066
    8. '());' → logprob: -11.422547340393066
    9. '())))' → logprob: -11.547547340393066
    10. '))' → logprob: -11.797547340393066

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007573349867016077
    2. 'strip' → logprob: -7.250757217407227
    3. 'rstrip' → logprob: -10.500757217407227
    4. ' split' → logprob: -10.875757217407227
    5. 'read' → logprob: -14.000757217407227
    6. '(split' → logprob: -17.000757217407227
    7. 'spl' → logprob: -17.375757217407227
    8. '.split' → logprob: -17.375757217407227
    9. ' strip' → logprob: -17.875757217407227
    10. 'replace' → logprob: -18.250757217407227

Token 20: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08739767223596573
    2. '()' → logprob: -3.462397575378418
    3. '))' → logprob: -3.587397575378418
    4. '())' → logprob: -3.962397575378418
    5. '(' → logprob: -5.337397575378418
    6. ')' → logprob: -7.337397575378418
    7. '()))
' → logprob: -10.462397575378418
    8. '()));' → logprob: -10.462397575378418
    9. '('' → logprob: -10.587397575378418
    10. '(),' → logprob: -10.587397575378418

Token 21: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0991758182644844
    2. 'a' → logprob: -3.8491759300231934
    3. '
' → logprob: -4.349175930023193
    4. ')' → logprob: -4.724175930023193
    5. 'n' → logprob: -4.849175930023193
    6. '[' → logprob: -5.099175930023193
    7. '#' → logprob: -5.349175930023193
    8. 'c' → logprob: -5.599175930023193
    9. 'r' → logprob: -5.724175930023193
    10. 'i' → logprob: -5.724175930023193

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3559131324291229
    2. '.' → logprob: -1.6059131622314453
    3. ' =' → logprob: -2.8559131622314453
    4. 's' → logprob: -4.480913162231445
    5. '=' → logprob: -4.480913162231445
    6. '[:]' → logprob: -4.980913162231445
    7. ' ' → logprob: -5.730913162231445
    8. '_' → logprob: -5.730913162231445
    9. '[]' → logprob: -6.355913162231445
    10. ')' → logprob: -7.355913162231445

Token 23: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10192202031612396
    2. ' [' → logprob: -2.851922035217285
    3. '0' → logprob: -3.601922035217285
    4. '[]' → logprob: -4.851922035217285
    5. '[N' → logprob: -6.476922035217285
    6. ' []' → logprob: -7.226922035217285
    7. ' ' → logprob: -7.601922035217285
    8. '[L' → logprob: -8.101922035217285
    9. '[len' → logprob: -8.101922035217285
    10. 'N' → logprob: -9.101922035217285

Token 24: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026536565274000168
    2. '0' → logprob: -4.276536464691162
    3. '[]' → logprob: -4.901536464691162
    4. '[N' → logprob: -6.151536464691162
    5. '[L' → logprob: -6.901536464691162
    6. '[len' → logprob: -7.776536464691162
    7. '[-' → logprob: -8.02653694152832
    8. 'N' → logprob: -8.02653694152832
    9. 'L' → logprob: -8.27653694152832
    10. '[max' → logprob: -9.65153694152832

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1889488846063614
    2. ' for' → logprob: -2.4389488697052
    3. '
' → logprob: -2.5639488697052
    4. '\n' → logprob: -5.563949108123779
    5. '' → logprob: -5.813949108123779
    6. '<|end|>' → logprob: -7.813949108123779
    7. ' 
' → logprob: -8.563948631286621
    8. '
' → logprob: -8.813948631286621
    9. ' ' → logprob: -9.563948631286621
    10. '```' → logprob: -9.563948631286621

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007166040013544261
    2. '
' → logprob: -7.875716686248779
    3. ' for' → logprob: -8.125716209411621
    4. '\n' → logprob: -10.500716209411621
    5. 'i' → logprob: -12.375716209411621
    6. '```' → logprob: -12.625716209411621
    7. '' → logprob: -13.125716209411621
    8. 'f' → logprob: -14.000716209411621
    9. '\' → logprob: -14.250716209411621
    10. 'n' → logprob: -15.000716209411621

Token 27: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2550455331802368
    2. ' i' → logprob: -1.5050455331802368
    3. '  ' → logprob: -5.880045413970947
    4. 'i' → logprob: -8.880045890808105
    5. ' _' → logprob: -9.130045890808105
    6. ' x' → logprob: -10.755045890808105
    7. '_' → logprob: -10.880045890808105
    8. ' l' → logprob: -12.255045890808105
    9. ' N' → logprob: -13.005045890808105
    10. ' ‌' → logprob: -13.005045890808105

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11460922658443451
    2. ' ' → logprob: -2.6146092414855957
    3. 'in' → logprob: -3.3646092414855957
    4. ',' → logprob: -8.989608764648438
    5. '  ' → logprob: -8.989608764648438
    6. ' ,' → logprob: -9.114608764648438
    7. '	in' → logprob: -10.114608764648438
    8. ' i' → logprob: -11.114608764648438
    9. '<|end|>' → logprob: -11.114608764648438
    10. ')' → logprob: -11.364608764648438

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6670888662338257
    2. ' range' → logprob: -0.7920888662338257
    3. 'L' → logprob: -3.6670889854431152
    4. ' L' → logprob: -4.792088985443115
    5. '(range' → logprob: -10.792088508605957
    6. ' ' → logprob: -11.667088508605957
    7. '	range' → logprob: -12.667088508605957
    8. ')' → logprob: -12.792088508605957
    9. '```' → logprob: -13.104588508605957
    10. 'Range' → logprob: -13.167088508605957

Token 30: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.42100998759269714
    2. '(' → logprob: -1.1710100173950195
    3. '(len' → logprob: -3.4210100173950195
    4. '(n' → logprob: -7.2960100173950195
    5. ' (' → logprob: -9.04601001739502
    6. '(L' → logprob: -10.04601001739502
    7. '(s' → logprob: -11.54601001739502
    8. '(
' → logprob: -12.29601001739502
    9. '((' → logprob: -12.42101001739502
    10. '(M' → logprob: -12.92101001739502

Token 31: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0036290506832301617
    2. '(' → logprob: -5.628629207611084
    3. '(N' → logprob: -11.003628730773926
    4. 'L' → logprob: -11.878628730773926
    5. '(`' → logprob: -13.628628730773926
    6. '(A' → logprob: -14.128628730773926
    7. '(

' → logprob: -14.253628730773926
    8. '(s' → logprob: -14.503628730773926
    9. '(
' → logprob: -14.753628730773926
    10. ' (' → logprob: -15.003628730773926

Token 32: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.10689424723386765
    2. '):' → logprob: -2.4818942546844482
    3. '))' → logprob: -4.231894016265869
    4. ')' → logprob: -6.356894016265869
    5. ')):
' → logprob: -6.981894016265869
    6. ' ):' → logprob: -8.356894493103027
    7. ' ))' → logprob: -9.606894493103027
    8. '[' → logprob: -9.606894493103027
    9. ':' → logprob: -9.856894493103027
    10. ')):
' → logprob: -9.981894493103027

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2476464956998825
    2. ' ' → logprob: -1.747646450996399
    3. '    ' → logprob: -3.7476465702056885
    4. ' if' → logprob: -4.122646331787109
    5. '<|end|>' → logprob: -6.247646331787109
    6. '  ' → logprob: -7.372646331787109
    7. '    
' → logprob: -7.497646331787109
    8. 'if' → logprob: -8.37264633178711
    9. ' '' → logprob: -8.37264633178711
    10. '0' → logprob: -8.74764633178711

Token 34: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48479965329170227
    2. '   ' → logprob: -1.6097996234893799
    3. 'if' → logprob: -2.23479962348938
    4. ' ' → logprob: -3.10979962348938
    5. '    ' → logprob: -3.60979962348938
    6. '```' → logprob: -6.734799861907959
    7. ' ```' → logprob: -7.484799861907959
    8. '  ' → logprob: -7.859799861907959
    9. '<|end|>' → logprob: -7.984799861907959
    10. ' i' → logprob: -8.2347993850708

Token 35: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043510399758815765
    2. '+=' → logprob: -3.2935104370117188
    3. '+' → logprob: -5.293510437011719
    4. ' =' → logprob: -9.168510437011719
    5. ' +' → logprob: -9.543510437011719
    6. '=' → logprob: -9.543510437011719
    7. ' ' → logprob: -10.168510437011719
    8. ' ^=' → logprob: -10.543510437011719
    9. ' ==' → logprob: -10.543510437011719
    10. '<|end|>' → logprob: -10.668510437011719

Token 36: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6147373914718628
    2. ' L' → logprob: -1.1147373914718628
    3. ' abs' → logprob: -3.1147375106811523
    4. 'abs' → logprob: -3.6147375106811523
    5. '1' → logprob: -3.8647375106811523
    6. ' (' → logprob: -4.739737510681152
    7. ' ' → logprob: -4.864737510681152
    8. '(L' → logprob: -4.989737510681152
    9. 'idx' → logprob: -5.614737510681152
    10. ' idx' → logprob: -5.614737510681152

Token 37: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.08909966796636581
    2. '[' → logprob: -2.464099645614624
    3. '[
' → logprob: -10.339099884033203
    4. '```' → logprob: -10.839099884033203
    5. ' [' → logprob: -11.089099884033203
    6. '\[' → logprob: -11.214099884033203
    7. 'idx' → logprob: -11.464099884033203
    8. '[i' → logprob: -11.964099884033203
    9. ' ' → logprob: -11.964099884033203
    10. '[id' → logprob: -12.339099884033203

Token 38: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5341665148735046
    2. ')' → logprob: -1.5341665744781494
    3. '==' → logprob: -2.0341665744781494
    4. ' ==' → logprob: -3.5341665744781494
    5. ']==' → logprob: -3.5341665744781494
    6. ')]' → logprob: -5.78416633605957
    7. ' ]' → logprob: -6.78416633605957
    8. ')==' → logprob: -6.78416633605957
    9. '])' → logprob: -7.03416633605957
    10. ' )' → logprob: -7.03416633605957

Token 39: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.762244701385498
    2. '%' → logprob: -1.637244701385498
    3. '
' → logprob: -1.762244701385498
    4. '<|end|>' → logprob: -2.137244701385498
    5. ' ' → logprob: -4.387244701385498
    6. '```' → logprob: -4.887244701385498
    7. '*' → logprob: -5.137244701385498
    8. '\n' → logprob: -5.137244701385498
    9. ')' → logprob: -5.512244701385498
    10. '**' → logprob: -6.262244701385498

Token 40: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015270020812749863
    2. '(res' → logprob: -6.626526832580566
    3. '("("' → logprob: -9.501526832580566
    4. '()' → logprob: -9.876526832580566
    5. '('' → logprob: -10.001526832580566
    6. '((' → logprob: -12.126526832580566
    7. '(`' → logprob: -12.126526832580566
    8. '(L' → logprob: -12.501526832580566
    9. '(len' → logprob: -13.001526832580566
    10. '(

' → logprob: -13.001526832580566

Token 41: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.39228424429893494
    2. '"{' → logprob: -1.6422842741012573
    3. ')' → logprob: -3.3922841548919678
    4. '{})' → logprob: -3.5172841548919678
    5. '"' → logprob: -3.8922841548919678
    6. '")' → logprob: -3.8922841548919678
    7. ''{' → logprob: -4.392284393310547
    8. '(' → logprob: -5.892284393310547
    9. '){' → logprob: -6.017284393310547
    10. '"})' → logprob: -6.392284393310547

Token 42: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005337166599929333
    2. ' res' → logprob: -5.255337238311768
    3. 'N' → logprob: -10.50533676147461
    4. 'idx' → logprob: -10.50533676147461
    5. 'L' → logprob: -10.88033676147461
    6. 'r' → logprob: -12.13033676147461
    7. '{' → logprob: -12.13033676147461
    8. '0' → logprob: -13.38033676147461
    9. ' L' → logprob: -13.38033676147461
    10. '(res' → logprob: -13.50533676147461

Token 43: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.010860107839107513
    2. '}' → logprob: -4.635859966278076
    3. '})' → logprob: -7.635859966278076
    4. '+' → logprob: -8.135860443115234
    5. ' }' → logprob: -9.385860443115234
    6. '}+' → logprob: -9.635860443115234
    7. ')}' → logprob: -9.885860443115234
    8. '")' → logprob: -10.260860443115234
    9. ')' → logprob: -10.635860443115234
    10. '}')' → logprob: -11.010860443115234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 34.15%
Précision (top 10): 75.61%
================================================================================
