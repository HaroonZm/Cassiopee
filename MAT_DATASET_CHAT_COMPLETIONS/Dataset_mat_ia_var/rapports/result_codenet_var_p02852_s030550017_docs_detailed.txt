================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SegmentTree:
    """
    SegmentTree is a data structure that supports efficient range queries and point updates.
    Each operation (point update and range query) runs in O(log N) time.
    
    Methods:
        __init__(n, op, e): Initialize the segment tree with the number of elements,
                            a binary operation, and the identity element for the operation.
        built(array): Build the segment tree from a given initial array.
        update(i, val): Update the value at index i to the new value 'val'.
        get_val(l, r): Compute the result of the binary operation over the interval [l, r).
    """

    def __init__(self, n, op, e):
        """
        Initialize the SegmentTree.
        
        Args:
            n (int): Number of elements (the initial array size).
            op (callable): A binary associative function (e.g., min, max, sum, etc.).
            e (Any): The identity element for the binary operation.

        Example:
            # For range minimum query:
            SegmentTree(n, min, 10**18)
            # For range sum query:
            SegmentTree(n, lambda a, b: a + b, 0)
        """
        self.n = n                       # Number of elements in the input array
        self.op = op                     # Binary operation to use for queries
        self.e = e                       # Identity element for the operation
        # Compute the actual size of the tree (next power of 2)
        self.size = 2 ** ((n - 1).bit_length())
        # Initialize the tree with identity elements
        self.node = [self.e] * (2 * self.size)

    def built(self, array):
        """
        Build the segment tree using an initial array.
        
        Args:
            array (list): The list of initial values to build the tree from.
        """
        # Set the leaves of the tree to the initial values
        for i in range(self.n):
            self.node[self.size + i] = array[i]
        # Build the upper levels of the tree using the binary operation
        for i in range(self.size - 1, 0, -1):
            self.node[i] = self.op(self.node[i << 1], self.node[(i << 1) + 1])

    def update(self, i, val):
        """
        Update the value at index i to 'val'.
        
        Args:
            i (int): The index to update (0-based).
            val (Any): The new value to update at index i.
        """
        # Set the leaf to the new value
        i += self.size
        self.node[i] = val
        # Update all ancestors of the leaf
        while i > 1:
            i >>= 1
            self.node[i] = self.op(self.node[i << 1], self.node[(i << 1) + 1])

    def get_val(self, l, r):
        """
        Query the result of applying the binary operation over the interval [l, r).
        
        Args:
            l (int): Left index (inclusive, 0-based).
            r (int): Right index (exclusive, 0-based).
        
        Returns:
            The result of combining the elements in [l, r) using the binary operation.
        """
        l += self.size
        r += self.size
        res_l, res_r = self.e, self.e
        # Traverse the tree from leaves towards the root, aggregating results
        while l < r:
            if l & 1:
                res_l = self.op(res_l, self.node[l])
                l += 1
            if r & 1:
                r -= 1
                res_r = self.op(self.node[r], res_r)
            l >>= 1
            r >>= 1
        return self.op(res_l, res_r)

# --- Main Program Logic ---

# Read the input: n - length of string, m - max jump size
n, m = map(int, input().split())
s = input()                         # Input string
INF = 10 ** 18                     # A large constant representing infinity

# Initialize the segment tree for min range queries with indices [0, n]
st = SegmentTree(n + 1, min, INF)
# Set the last position (goal) to 0 (no steps needed to finish from goal)
st.update(n, 0)

# Compute the minimum steps needed to reach the end from each position, in reverse order
for i in range(n - 1, -1, -1):
    if s[i] == "1":
        # Cannot stand on or move from this position
        continue
    # Calculate the minimum number of steps needed from positions ahead (up to m steps)
    tmp = st.get_val(i + 1, min(i + 1 + m, n + 1)) + 1
    st.update(i, tmp)

# If the start position is unreachable, output -1
if st.get_val(0, 1) >= INF:
    print(-1)
    exit()

# Reconstruct the actual jump sequence to reach the goal
ans = []
ind = 0      # Current index (start at the beginning)
for i in range(1, n + 1):
    # If moving from 'ind' to 'i' is optimal (cost decreases by 1), record the jump
    if st.get_val(ind, ind + 1) - 1 == st.get_val(i, i + 1):
        ans.append(i - ind)  # Jump length
        ind = i              # Move to the new position

# Output the jump sequence
print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Segment' (ID: 64922)
  → Token d'amorce (pas de prédiction)

Token 2: 'Tree' (ID: 8062)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.15432357788085938
    2. '(' → logprob: -2.1543235778808594
    3. ':' → logprob: -4.279323577880859
    4. ' {' → logprob: -4.779323577880859
    5. '[' → logprob: -5.654323577880859
    6. '.' → logprob: -7.779323577880859
    7. '<' → logprob: -8.02932357788086
    8. '```' → logprob: -8.40432357788086
    9. '<T' → logprob: -9.15432357788086
    10. ' ' → logprob: -10.15432357788086

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46391230821609497
    2. ':' → logprob: -1.5889122486114502
    3. '   ' → logprob: -2.58891224861145
    4. '```' → logprob: -2.71391224861145
    5. ' ' → logprob: -5.213912487030029
    6. '\' → logprob: -5.463912487030029
    7. '[' → logprob: -5.963912487030029
    8. ''' → logprob: -6.213912487030029
    9. '(
' → logprob: -6.463912487030029
    10. '`' → logprob: -6.588912487030029

Token 5: ' """
' (ID: 7037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9201077818870544
    2. '   ' → logprob: -1.1701078414916992
    3. '_' → logprob: -2.045107841491699
    4. ' ' → logprob: -2.670107841491699
    5. ' def' → logprob: -3.045107841491699
    6. 'def' → logprob: -4.170107841491699
    7. '    ' → logprob: -4.920107841491699
    8. '__' → logprob: -4.920107841491699
    9. '```' → logprob: -5.295107841491699
    10. ' (' → logprob: -5.420107841491699

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5119242668151855
    2. ' ' → logprob: -1.8869242668151855
    3. ' """' → logprob: -2.1369242668151855
    4. '   ' → logprob: -3.0119242668151855
    5. '*' → logprob: -4.1369242668151855
    6. '```' → logprob: -4.3869242668151855
    7. ''''' → logprob: -5.1369242668151855
    8. 'C' → logprob: -5.1369242668151855
    9. '#' → logprob: -5.5119242668151855
    10. 'A' → logprob: -5.7619242668151855

Token 7: ' Segment' (ID: 64922)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5713984370231628
    2. ' A' → logprob: -1.8213984966278076
    3. '"""' → logprob: -2.0713984966278076
    4. 'Segment' (adapté à ' Segment') → logprob: -3.1963984966278076
    5. 'This' → logprob: -4.0713982582092285
    6. ' """' → logprob: -4.1963982582092285
    7. '```' → logprob: -4.4463982582092285
    8. 'Implementation' → logprob: -4.5713982582092285
    9. 'An' → logprob: -4.9463982582092285
    10. ' Implements' → logprob: -5.4463982582092285

Token 8: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.3994237184524536
    2. ' ' → logprob: -1.6494237184524536
    3. ' Tree' → logprob: -2.774423599243164
    4. 'T' → logprob: -3.024423599243164
    5. '<Tree' → logprob: -4.649423599243164
    6. '(Tree' → logprob: -5.399423599243164
    7. '```' → logprob: -6.024423599243164
    8. ' ```' → logprob: -6.399423599243164
    9. '	Tree' → logprob: -6.399423599243164
    10. '   ' → logprob: -6.524423599243164

Token 9: ' is' (ID: 382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27565091848373413
    2. ':' → logprob: -2.150650978088379
    3. '<|end|>' → logprob: -2.650650978088379
    4. '[' → logprob: -3.775650978088379
    5. ')' → logprob: -5.275650978088379
    6. '   ' → logprob: -5.525650978088379
    7. '<|end|>' → logprob: -5.775650978088379
    8. '```' → logprob: -6.275650978088379
    9. '(n' → logprob: -6.525650978088379
    10. '(object' → logprob: -6.525650978088379

Token 10: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.004074009135365486
    2. ' an' → logprob: -6.2540740966796875
    3. ' ' → logprob: -7.2540740966796875
    4. 'a' → logprob: -7.5040740966796875
    5. ' used' → logprob: -7.8790740966796875
    6. ' data' → logprob: -9.254074096679688
    7. ' the' → logprob: -9.379074096679688
    8. ' initialized' → logprob: -9.629074096679688
    9. ' class' → logprob: -9.879074096679688
    10. '    ' → logprob: -10.004074096679688

Token 11: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.0041371723636984825
    2. 'n' → logprob: -6.37913703918457
    3. 'data' → logprob: -6.87913703918457
    4. ' n' → logprob: -7.87913703918457
    5. ' ' → logprob: -8.25413703918457
    6. ' class' → logprob: -8.25413703918457
    7. ' binary' → logprob: -8.50413703918457
    8. ' space' → logprob: -9.75413703918457
    9. ' tree' → logprob: -9.75413703918457
    10. ' mutable' → logprob: -10.25413703918457

Token 12: ' structure' (ID: 8866)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9470733404159546
    2. ' class' → logprob: -1.6970733404159546
    3. ' ' → logprob: -1.9470733404159546
    4. '<class' → logprob: -2.822073459625244
    5. '-based' → logprob: -3.322073459625244
    6. 'class' → logprob: -3.447073459625244
    7. '  ' → logprob: -3.447073459625244
    8. '```' → logprob: -3.697073459625244
    9. ' structure' → logprob: -4.072073459625244
    10. '-class' → logprob: -4.447073459625244

Token 13: ' that' (ID: 484)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5806868672370911
    2. '   ' → logprob: -2.2056868076324463
    3. ' for' → logprob: -2.4556868076324463
    4. '(' → logprob: -2.5806868076324463
    5. ':' → logprob: -3.2056868076324463
    6. ' that' → logprob: -3.3306868076324463
    7. '`' → logprob: -4.080687046051025
    8. ' ' → logprob: -4.455687046051025
    9. '[' → logprob: -4.455687046051025
    10. '<class' → logprob: -4.955687046051025

Token 14: ' supports' (ID: 17203)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.210474967956543
    2. '```' → logprob: -1.585474967956543
    3. ' used' → logprob: -1.960474967956543
    4. ' supports' → logprob: -2.210474967956543
    5. ' stores' → logprob: -2.460474967956543
    6. ' can' → logprob: -3.460474967956543
    7. 'supports' → logprob: -4.085474967956543
    8. ' ' → logprob: -4.085474967956543
    9. ' represents' → logprob: -4.210474967956543
    10. '   ' → logprob: -4.335474967956543

Token 15: ' efficient' (ID: 12430)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5927111506462097
    2. ' the' → logprob: -2.7177112102508545
    3. ' update' → logprob: -2.7177112102508545
    4. ' an' → logprob: -2.8427112102508545
    5. ' ' → logprob: -3.2177112102508545
    6. ' operations' → logprob: -3.3427112102508545
    7. ' updates' → logprob: -3.4677112102508545
    8. ' dynamic' → logprob: -3.8427112102508545
    9. ' updating' → logprob: -4.092710971832275
    10. '   ' → logprob: -4.467710971832275

Token 16: ' range' (ID: 3352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3999037742614746
    2. '  ' → logprob: -1.5249037742614746
    3. ' ' → logprob: -1.7749037742614746
    4. '   ' → logprob: -2.3999037742614746
    5. ' for' → logprob: -2.5249037742614746
    6. ' operations' → logprob: -2.8999037742614746
    7. ' ```' → logprob: -3.3999037742614746
    8. '_' → logprob: -4.649903774261475
    9. '<|end|>' → logprob: -4.899903774261475
    10. '-' → logprob: -5.024903774261475

Token 17: ' queries' (ID: 32122)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.072155237197876
    2. ' ' → logprob: -1.072155237197876
    3. 's' → logprob: -2.197155237197876
    4. '```' → logprob: -2.947155237197876
    5. ' query' → logprob: -3.322155237197876
    6. ' queries' → logprob: -3.572155237197876
    7. '_query' → logprob: -3.947155237197876
    8. ' _' → logprob: -4.197154998779297
    9. ' operations' → logprob: -4.322154998779297
    10. '-' → logprob: -4.822154998779297

Token 18: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3926069736480713
    2. '   ' → logprob: -1.7676069736480713
    3. ' and' → logprob: -2.8926069736480713
    4. ' ' → logprob: -3.5176069736480713
    5. '(' → logprob: -4.017606735229492
    6. '`' → logprob: -4.267606735229492
    7. 's' → logprob: -5.142606735229492
    8. '``' → logprob: -5.517606735229492
    9. ' for' → logprob: -5.517606735229492
    10. ',' → logprob: -5.767606735229492

Token 19: ' point' (ID: 2438)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.19853083789348602
    2. 'updates' → logprob: -1.8235307931900024
    3. '```' → logprob: -4.573530673980713
    4. ' point' → logprob: -5.448530673980713
    5. 'point' → logprob: -6.573530673980713
    6. 'update' → logprob: -7.448530673980713
    7. ' update' → logprob: -7.448530673980713
    8. ' range' → logprob: -7.698530673980713
    9. 'range' → logprob: -7.698530673980713
    10. '   ' → logprob: -7.948530673980713

Token 20: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.0018636647146195173
    2. ' update' → logprob: -6.751863479614258
    3. '_updates' → logprob: -8.001863479614258
    4. 'updates' → logprob: -8.626863479614258
    5. '```' → logprob: -9.626863479614258
    6. ' updating' → logprob: -10.376863479614258
    7. '_update' → logprob: -10.751863479614258
    8. '   ' → logprob: -10.876863479614258
    9. ' and' → logprob: -11.001863479614258
    10. ' ```' → logprob: -12.126863479614258

Token 21: '.
' (ID: 558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3935271203517914
    2. '   ' → logprob: -1.2685271501541138
    3. '.' → logprob: -4.268527030944824
    4. '``' → logprob: -4.768527030944824
    5. '`' → logprob: -5.268527030944824
    6. '
' → logprob: -5.643527030944824
    7. '\n' → logprob: -5.893527030944824
    8. 's' → logprob: -6.018527030944824
    9. ' ' → logprob: -6.393527030944824
    10. ' for' → logprob: -6.518527030944824

Token 22: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4029296934604645
    2. '   ' → logprob: -1.152929663658142
    3. '"""' → logprob: -5.152929782867432
    4. '\n' → logprob: -5.402929782867432
    5. '    
' → logprob: -6.527929782867432
    6. ' 
' → logprob: -6.527929782867432
    7. '
' → logprob: -7.152929782867432
    8. '``' → logprob: -7.902929782867432
    9. '`' → logprob: -7.902929782867432
    10. '   
' → logprob: -8.527929306030273

Token 23: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2610137462615967
    2. ' 
' → logprob: -1.2610137462615967
    3. '```' → logprob: -1.2610137462615967
    4. '_' → logprob: -2.3860137462615967
    5. '    
' → logprob: -3.8860137462615967
    6. '\n' → logprob: -4.511013984680176
    7. ' ' → logprob: -5.386013984680176
    8. '     
' → logprob: -5.761013984680176
    9. 'def' → logprob: -5.761013984680176
    10. '
' → logprob: -5.886013984680176

Token 24: ' operation' (ID: 9506)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0054897526279091835
    2. 'node' → logprob: -5.380489826202393
    3. ' segment' → logprob: -8.505489349365234
    4. '   ' → logprob: -8.630489349365234
    5. ' block' → logprob: -9.380489349365234
    6. ' ' → logprob: -9.505489349365234
    7. ' operation' → logprob: -9.630489349365234
    8. ' token' → logprob: -10.005489349365234
    9. '_node' → logprob: -10.255489349365234
    10. ' Node' → logprob: -10.255489349365234

Token 25: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3299155831336975
    2. ' can' → logprob: -2.2049155235290527
    3. ' in' → logprob: -3.3299155235290527
    4. '```' → logprob: -3.4549155235290527
    5. ' on' → logprob: -4.079915523529053
    6. ' has' → logprob: -4.954915523529053
    7. ' usually' → logprob: -5.329915523529053
    8. ' will' → logprob: -5.329915523529053
    9. ' ```' → logprob: -5.329915523529053
    10. ' def' → logprob: -5.329915523529053

Token 26: 'point' (ID: 4859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5316445827484131
    2. ' update' → logprob: -1.906644582748413
    3. ' query' → logprob: -2.406644582748413
    4. '   ' → logprob: -3.281644582748413
    5. ' range' → logprob: -4.031644821166992
    6. ' )' → logprob: -4.281644821166992
    7. 'query' → logprob: -4.531644821166992
    8. 'range' → logprob: -4.656644821166992
    9. 'update' → logprob: -4.781644821166992
    10. ' can' → logprob: -4.906644821166992

Token 27: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.007162281312048435
    2. '_update' → logprob: -6.382162094116211
    3. ' updates' → logprob: -6.382162094116211
    4. ')' → logprob: -6.632162094116211
    5. 'update' → logprob: -6.757162094116211
    6. '-update' → logprob: -7.257162094116211
    7. '   ' → logprob: -8.257162094116211
    8. ' query' → logprob: -9.382162094116211
    9. '```' → logprob: -9.757162094116211
    10. ' ' → logprob: -9.882162094116211

Token 28: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9788623452186584
    2. ' and' → logprob: -0.9788623452186584
    3. ' or' → logprob: -1.7288622856140137
    4. ',' → logprob: -3.1038622856140137
    5. ' )' → logprob: -4.728862285614014
    6. 'and' → logprob: -4.853862285614014
    7. '   ' → logprob: -5.853862285614014
    8. ' ' → logprob: -5.978862285614014
    9. '```' → logprob: -6.353862285614014
    10. 'or' → logprob: -6.728862285614014

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07101385295391083
    2. 'range' → logprob: -2.696013927459717
    3. ' query' → logprob: -7.071013927459717
    4. 'query' → logprob: -9.321013450622559
    5. '   ' → logprob: -9.571013450622559
    6. ' ' → logprob: -11.321013450622559
    7. '_range' → logprob: -11.696013450622559
    8. '	range' → logprob: -12.071013450622559
    9. '-range' → logprob: -12.446013450622559
    10. ' queries' → logprob: -12.696013450622559

Token 30: ' query' (ID: 5703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6332667469978333
    2. ' query' → logprob: -0.8832667469978333
    3. ' update' → logprob: -4.008266925811768
    4. '_query' → logprob: -4.633266925811768
    5. ' queries' → logprob: -4.883266925811768
    6. ' _' → logprob: -5.258266925811768
    7. 'query' → logprob: -5.883266925811768
    8. '   ' → logprob: -6.133266925811768
    9. '_' → logprob: -6.508266925811768
    10. ')' → logprob: -6.508266925811768

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011280539445579052
    2. ' )' → logprob: -4.511280536651611
    3. ' is' → logprob: -9.38628101348877
    4. 's' → logprob: -10.13628101348877
    5. ' can' → logprob: -10.13628101348877
    6. ' in' → logprob: -11.13628101348877
    7. '```' → logprob: -11.63628101348877
    8. ' operation' → logprob: -12.13628101348877
    9. '   ' → logprob: -12.26128101348877
    10. ' ' → logprob: -12.26128101348877

Token 32: ' runs' (ID: 13719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31890803575515747
    2. 's' → logprob: -2.1939079761505127
    3. '```' → logprob: -3.6939079761505127
    4. '   ' → logprob: -3.8189079761505127
    5. ' 
' → logprob: -3.8189079761505127
    6. ' ```' → logprob: -4.068908214569092
    7. ' can' → logprob: -4.193908214569092
    8. '    ' → logprob: -4.568908214569092
    9. '   
' → logprob: -5.068908214569092
    10. '  ' → logprob: -5.193908214569092

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02978196181356907
    2. 'in' → logprob: -3.5297820568084717
    3. ' ' → logprob: -11.15478229522705
    4. '   ' → logprob: -11.52978229522705
    5. ' on' → logprob: -13.40478229522705
    6. ' with' → logprob: -13.40478229522705
    7. '  ' → logprob: -13.40478229522705
    8. '```' → logprob: -13.65478229522705
    9. ' i' → logprob: -15.90478229522705
    10. ' at' → logprob: -16.279781341552734

Token 34: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.25492027401924133
    2. ' O' → logprob: -1.504920244216919
    3. 'log' → logprob: -6.504920482635498
    4. ' logarith' → logprob: -6.629920482635498
    5. ' log' → logprob: -9.62992000579834
    6. '```' → logprob: -10.00492000579834
    7. '   ' → logprob: -10.37992000579834
    8. ' \(' → logprob: -11.87992000579834
    9. ' ' → logprob: -12.00492000579834
    10. '\' → logprob: -13.25492000579834

Token 35: '(log' (ID: 25116)
  Prédit: '(log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(log' → logprob: -0.01909901387989521
    2. '(\' → logprob: -4.019099235534668
    3. '(' → logprob: -7.019099235534668
    4. '(l' → logprob: -10.269099235534668
    5. '(n' → logprob: -11.019099235534668
    6. '(
' → logprob: -13.644099235534668
    7. 'log' → logprob: -13.769099235534668
    8. '(Log' → logprob: -14.519099235534668
    9. '(

' → logprob: -16.14409828186035
    10. '\' → logprob: -16.64409828186035

Token 36: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7188301086425781
    2. ' n' → logprob: -0.7188301086425781
    3. 'N' → logprob: -4.093830108642578
    4. ' N' → logprob: -4.968830108642578
    5. '(n' → logprob: -6.843830108642578
    6. ')' → logprob: -8.468830108642578
    7. ' ' → logprob: -8.843830108642578
    8. ' )' → logprob: -9.343830108642578
    9. '2' → logprob: -10.218830108642578
    10. '_' → logprob: -10.593830108642578

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002113381866365671
    2. ').' → logprob: -6.252113342285156
    3. ')
' → logprob: -9.252113342285156
    4. ' )' → logprob: -10.377113342285156
    5. '),' → logprob: -10.627113342285156
    6. ').
' → logprob: -11.377113342285156
    7. '   ' → logprob: -11.502113342285156
    8. ')`' → logprob: -12.877113342285156
    9. ' ' → logprob: -13.377113342285156
    10. ')

' → logprob: -13.377113342285156

Token 38: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25719061493873596
    2. '```' → logprob: -2.632190704345703
    3. '    
' → logprob: -3.007190704345703
    4. '
' → logprob: -3.507190704345703
    5. '\n' → logprob: -4.257190704345703
    6. ' 
' → logprob: -4.882190704345703
    7. ')' → logprob: -5.007190704345703
    8. '`' → logprob: -5.132190704345703
    9. '.' → logprob: -5.382190704345703
    10. '``' → logprob: -5.507190704345703

Token 39: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07762616872787476
    2. '
' → logprob: -3.8276262283325195
    3. '"""' → logprob: -4.0776262283325195
    4. '```' → logprob: -4.2026262283325195
    5. '.' → logprob: -4.3276262283325195
    6. ')' → logprob: -5.9526262283325195
    7. '"""
' → logprob: -6.9526262283325195
    8. '.
' → logprob: -6.9526262283325195
    9. '\n' → logprob: -7.4526262283325195
    10. '    
' → logprob: -7.5776262283325195

Token 40: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10934793204069138
    2. '```' → logprob: -2.6093478202819824
    3. '\n' → logprob: -4.484347820281982
    4. '
' → logprob: -5.109347820281982
    5. '"""' → logprob: -5.359347820281982
    6. '    
' → logprob: -5.984347820281982
    7. '`' → logprob: -6.234347820281982
    8. '"""
' → logprob: -7.234347820281982
    9. ' 
' → logprob: -7.359347820281982
    10. '"' → logprob: -7.859347820281982

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10049272328615189
    2. '"""' → logprob: -2.3504927158355713
    3. '```' → logprob: -9.350492477416992
    4. '    ' → logprob: -9.350492477416992
    5. ' """' → logprob: -10.100492477416992
    6. '"""
' → logprob: -10.225492477416992
    7. '  ' → logprob: -10.975492477416992
    8. '""' → logprob: -12.600492477416992
    9. '       ' → logprob: -12.725492477416992
    10. ' ' → logprob: -12.725492477416992

Token 42: ' Methods' (ID: 33276)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8660175800323486
    2. 'def' → logprob: -0.8660175800323486
    3. '"""' → logprob: -1.8660175800323486
    4. 'Attributes' → logprob: -6.6160173416137695
    5. '```' → logprob: -6.8660173416137695
    6. ' def' → logprob: -6.8660173416137695
    7. '"""
' → logprob: -8.74101734161377
    8. ')' → logprob: -8.86601734161377
    9. '"""

' → logprob: -9.61601734161377
    10. ' ' → logprob: -10.36601734161377

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3999137878417969
    2. '   ' → logprob: -1.3999137878417969
    3. '```' → logprob: -2.524913787841797
    4. ':
' → logprob: -7.399913787841797
    5. '<|end|>' → logprob: -7.399913787841797
    6. '\n' → logprob: -8.149913787841797
    7. '
' → logprob: -8.524913787841797
    8. '``' → logprob: -8.899913787841797
    9. '.' → logprob: -8.899913787841797
    10. '<|end|>' → logprob: -9.024913787841797

Token 44: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.41032731533050537
    2. ' def' → logprob: -1.7853273153305054
    3. ' ```' → logprob: -2.160327434539795
    4. '   ' → logprob: -3.535327434539795
    5. ' update' → logprob: -5.285327434539795
    6. '    ' → logprob: -5.410327434539795
    7. ' ' → logprob: -5.660327434539795
    8. ' """
' → logprob: -6.160327434539795
    9. ' 
' → logprob: -6.285327434539795
    10. ' """' → logprob: -6.285327434539795

Token 45: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9389209747314453
    2. '__' (adapté à ' __') → logprob: -1.5639209747314453
    3. ' __' → logprob: -1.6889209747314453
    4. 'def' → logprob: -2.1889209747314453
    5. ' build' → logprob: -2.6889209747314453
    6. 'build' → logprob: -3.9389209747314453
    7. '   ' → logprob: -4.563920974731445
    8. ' update' → logprob: -5.813920974731445
    9. 'update' → logprob: -6.688920974731445
    10. 'init' → logprob: -8.563920974731445

Token 46: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.030007103458046913
    2. 'i' → logprob: -3.5300071239471436
    3. ' init' → logprob: -8.655007362365723
    4. 'ini' → logprob: -10.155007362365723
    5. ' i' → logprob: -11.030007362365723
    6. 'in' → logprob: -11.655007362365723
    7. '_i' → logprob: -11.655007362365723
    8. ' ' → logprob: -13.155007362365723
    9. '_' → logprob: -13.155007362365723
    10. '_init' → logprob: -13.280007362365723

Token 47: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4996056854724884
    2. '(self' → logprob: -0.999605655670166
    3. ' (' → logprob: -4.874605655670166
    4. '```' → logprob: -4.999605655670166
    5. '<|end|>' → logprob: -5.874605655670166
    6. ')' → logprob: -6.499605655670166
    7. '   ' → logprob: -6.749605655670166
    8. 'self' → logprob: -6.874605655670166
    9. ' ' → logprob: -7.249605655670166
    10. '(
' → logprob: -7.249605655670166

Token 48: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5726891756057739
    2. '(self' → logprob: -1.322689175605774
    3. ')' → logprob: -1.947689175605774
    4. ' self' → logprob: -4.072689056396484
    5. '(' → logprob: -4.947689056396484
    6. ' (' → logprob: -6.322689056396484
    7. ' )' → logprob: -8.072689056396484
    8. ' ' → logprob: -8.572689056396484
    9. ')(' → logprob: -8.572689056396484
    10. ',' → logprob: -9.322689056396484

Token 49: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03007223829627037
    2. ',' → logprob: -3.7800722122192383
    3. '):' → logprob: -5.155072212219238
    4. 'self' → logprob: -8.155072212219238
    5. '):
' → logprob: -8.155072212219238
    6. '   ' → logprob: -8.405072212219238
    7. ' )' → logprob: -10.405072212219238
    8. '       ' → logprob: -10.530072212219238
    9. ')n' → logprob: -10.905072212219238
    10. '<|end|>' → logprob: -10.905072212219238

Token 50: ' op' (ID: 991)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8709033131599426
    2. 'func' → logprob: -0.9959033131599426
    3. ' data' → logprob: -2.870903253555298
    4. 'arr' → logprob: -3.245903253555298
    5. ' func' → logprob: -3.245903253555298
    6. 'init' → logprob: -3.620903253555298
    7. 'combine' → logprob: -4.370903491973877
    8. 'build' → logprob: -5.245903491973877
    9. 'values' → logprob: -5.495903491973877
    10. 'default' → logprob: -5.620903491973877

Token 51: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2836885452270508
    2. ',' → logprob: -1.6586885452270508
    3. '=' → logprob: -3.408688545227051
    4. '):' → logprob: -3.783688545227051
    5. ' )' → logprob: -8.40868854522705
    6. ' ,' → logprob: -8.78368854522705
    7. '),' → logprob: -9.03368854522705
    8. ')=' → logprob: -9.53368854522705
    9. '):
' → logprob: -9.65868854522705
    10. '=None' → logprob: -11.15868854522705

Token 52: ' e' (ID: 319)
  Prédit: 'identity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identity' → logprob: -0.446643590927124
    2. 'e' → logprob: -1.571643590927124
    3. 'ide' → logprob: -2.696643590927124
    4. 'id' → logprob: -3.446643590927124
    5. 'default' → logprob: -4.321643829345703
    6. 'unit' → logprob: -4.321643829345703
    7. 'init' → logprob: -4.446643829345703
    8. ' identity' → logprob: -5.696643829345703
    9. 'def' → logprob: -6.696643829345703
    10. '   ' → logprob: -6.821643829345703

Token 53: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18035058677196503
    2. '):' → logprob: -1.8053505420684814
    3. '):
' → logprob: -8.430350303649902
    4. ' )' → logprob: -8.680350303649902
    5. ',' → logprob: -9.055350303649902
    6. ' ):' → logprob: -10.805350303649902
    7. ')
' → logprob: -10.930350303649902
    8. '   ' → logprob: -11.555350303649902
    9. ' ' → logprob: -11.680350303649902
    10. ')`' → logprob: -12.305350303649902

Token 54: ' Initialize' (ID: 19496)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3948819935321808
    2. 'def' → logprob: -2.2698819637298584
    3. 'self' → logprob: -2.3948819637298584
    4. ' self' → logprob: -3.0198819637298584
    5. '       ' → logprob: -3.8948819637298584
    6. '```' → logprob: -3.8948819637298584
    7. '   ' → logprob: -4.2698822021484375
    8. '    ' → logprob: -4.7698822021484375
    9. '):' → logprob: -5.5198822021484375
    10. 'n' → logprob: -5.6448822021484375

Token 55: ' the' (ID: 290)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4876270294189453
    2. 'self' → logprob: -1.6126270294189453
    3. ')' → logprob: -2.1126270294189453
    4. ' self' → logprob: -2.9876270294189453
    5. '   ' → logprob: -5.112627029418945
    6. '       ' → logprob: -5.737627029418945
    7. '```' → logprob: -5.862627029418945
    8. ' (' → logprob: -7.237627029418945
    9. '_self' → logprob: -7.987627029418945
    10. '<|end|>' → logprob: -8.112627029418945

Token 56: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.37488338351249695
    2. ' tree' → logprob: -1.6248834133148193
    3. 'segment' → logprob: -2.6248834133148193
    4. 'tree' → logprob: -3.8748834133148193
    5. 'Segment' → logprob: -4.99988317489624
    6. ' Segment' → logprob: -5.62488317489624
    7. ' data' → logprob: -5.62488317489624
    8. ' array' → logprob: -5.87488317489624
    9. ')' → logprob: -6.24988317489624
    10. 'data' → logprob: -6.99988317489624

Token 57: ' tree' (ID: 8165)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.015614082105457783
    2. '   ' → logprob: -5.015614032745361
    3. '_' → logprob: -5.265614032745361
    4. 'tree' → logprob: -6.640614032745361
    5. ' _' → logprob: -6.890614032745361
    6. ' tree' → logprob: -7.265614032745361
    7. 'Tree' → logprob: -8.26561450958252
    8. '       ' → logprob: -9.39061450958252
    9. '_t' → logprob: -9.64061450958252
    10. ' Tree' → logprob: -10.14061450958252

Token 58: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40933576226234436
    2. '       ' → logprob: -1.284335732460022
    3. ')' → logprob: -3.6593358516693115
    4. '):' → logprob: -4.534335613250732
    5. '(self' → logprob: -4.909335613250732
    6. ',' → logprob: -5.159335613250732
    7. '):
' → logprob: -5.909335613250732
    8. 'self' → logprob: -6.159335613250732
    9. '```' → logprob: -6.534335613250732
    10. '    ' → logprob: -6.909335613250732

Token 59: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36091485619544983
    2. ' the' → logprob: -1.7359148263931274
    3. 'n' → logprob: -2.610914945602417
    4. ' size' → logprob: -3.985914945602417
    5. 'the' → logprob: -4.610914707183838
    6. ' a' → logprob: -4.985914707183838
    7. ' given' → logprob: -5.235914707183838
    8. 'size' → logprob: -5.860914707183838
    9. '   ' → logprob: -6.235914707183838
    10. ' an' → logprob: -6.485914707183838

Token 60: ' number' (ID: 2086)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.571856677532196
    2. ' n' → logprob: -1.8218567371368408
    3. ' given' → logprob: -2.446856737136841
    4. ' array' → logprob: -3.071856737136841
    5. 'size' → logprob: -3.196856737136841
    6. ' number' → logprob: -3.696856737136841
    7. ' length' → logprob: -4.071856498718262
    8. ' data' → logprob: -4.571856498718262
    9. ' initial' → logprob: -4.571856498718262
    10. ' segment' → logprob: -4.696856498718262

Token 61: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.337625503540039
    2. 's' → logprob: -1.462625503540039
    3. ' of' → logprob: -1.962625503540039
    4. '_tokens' → logprob: -2.337625503540039
    5. '_of' → logprob: -2.462625503540039
    6. ')' → logprob: -2.712625503540039
    7. '<|end|>' → logprob: -2.962625503540039
    8. '_token' → logprob: -4.337625503540039
    9. ' ' → logprob: -4.462625503540039
    10. 'of' → logprob: -4.962625503540039

Token 62: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.0055733369663357735
    2. 'elements' → logprob: -5.630573272705078
    3. ' nodes' → logprob: -7.005573272705078
    4. ' leaves' → logprob: -7.630573272705078
    5. ' ' → logprob: -8.630573272705078
    6. '   ' → logprob: -9.130573272705078
    7. '_elements' → logprob: -9.380573272705078
    8. ' segments' → logprob: -9.880573272705078
    9. ' data' → logprob: -10.255573272705078
    10. ')' → logprob: -10.755573272705078

Token 63: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08152437955141068
    2. '   ' → logprob: -2.83152437210083
    3. '):' → logprob: -4.33152437210083
    4. ')' → logprob: -5.95652437210083
    5. ' ,' → logprob: -6.45652437210083
    6. '       ' → logprob: -6.83152437210083
    7. '):
' → logprob: -7.95652437210083
    8. '```' → logprob: -8.706524848937988
    9. '    ' → logprob: -8.831524848937988
    10. ' and' → logprob: -9.581524848937988

Token 64: '                           ' (ID: 1686)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3422269821166992
    2. '   ' → logprob: -1.4672269821166992
    3. ')' → logprob: -2.217226982116699
    4. ' data' → logprob: -2.717226982116699
    5. '       ' → logprob: -3.342226982116699
    6. ' update' → logprob: -3.467226982116699
    7. 'data' → logprob: -3.592226982116699
    8. ' op' → logprob: -3.842226982116699
    9. ' initial' → logprob: -3.967226982116699
    10. ' and' → logprob: -3.967226982116699

Token 65: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8056023120880127
    2. ' an' → logprob: -1.6806023120880127
    3. ' initial' → logprob: -1.9306023120880127
    4. ' a' → logprob: -2.1806023120880127
    5. ' identity' → logprob: -2.8056023120880127
    6. ' and' → logprob: -4.805602073669434
    7. '   ' → logprob: -4.805602073669434
    8. ' operation' → logprob: -5.180602073669434
    9. ' default' → logprob: -5.430602073669434
    10. 'the' → logprob: -5.680602073669434

Token 66: ' binary' (ID: 15600)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.21663029491901398
    2. ' binary' → logprob: -2.591630220413208
    3. ' given' → logprob: -3.841630220413208
    4. ' callable' → logprob: -3.841630220413208
    5. 'n' → logprob: -4.216630458831787
    6. ' user' → logprob: -4.841630458831787
    7. 'function' → logprob: -4.966630458831787
    8. '   ' → logprob: -5.091630458831787
    9. ' provided' → logprob: -5.341630458831787
    10. ' operation' → logprob: -5.466630458831787

Token 67: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.6442306041717529
    2. ' operator' → logprob: -1.644230604171753
    3. '_operation' → logprob: -2.269230604171753
    4. '   ' → logprob: -2.769230604171753
    5. '_op' → logprob: -3.269230604171753
    6. '_operator' → logprob: -3.644230604171753
    7. ' _' → logprob: -4.394230842590332
    8. ' function' → logprob: -4.644230842590332
    9. 'operation' → logprob: -4.769230842590332
    10. ' ' → logprob: -5.269230842590332

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003075040876865387
    2. '   ' → logprob: -6.503075122833252
    3. ')' → logprob: -7.503075122833252
    4. ' ,' → logprob: -7.753075122833252
    5. '```' → logprob: -8.628074645996094
    6. ' and' → logprob: -9.003074645996094
    7. '),' → logprob: -9.628074645996094
    8. ' (' → logprob: -10.128074645996094
    9. '       ' → logprob: -10.503074645996094
    10. '=' → logprob: -10.503074645996094

Token 69: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06949782371520996
    2. ' an' → logprob: -3.31949782371521
    3. 'and' → logprob: -4.319498062133789
    4. ' initial' → logprob: -4.694498062133789
    5. ' a' → logprob: -5.069498062133789
    6. '   ' → logprob: -7.444498062133789
    7. ' the' → logprob: -7.944498062133789
    8. '                           ' → logprob: -8.194498062133789
    9. '```' → logprob: -8.819498062133789
    10. ' def' → logprob: -8.944498062133789

Token 70: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.49279311299324036
    2. ' the' → logprob: -0.992793083190918
    3. ' a' → logprob: -4.367793083190918
    4. 'the' → logprob: -5.992793083190918
    5. ' initial' → logprob: -6.117793083190918
    6. 'e' → logprob: -8.117793083190918
    7. '   ' → logprob: -8.117793083190918
    8. ' e' → logprob: -8.492793083190918
    9. 'initial' → logprob: -9.367793083190918
    10. 'an' → logprob: -9.492793083190918

Token 71: ' identity' (ID: 16696)
  Prédit: ' identity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identity' → logprob: -0.22622668743133545
    2. 'identity' → logprob: -1.6012266874313354
    3. '```' → logprob: -8.601226806640625
    4. '   ' → logprob: -8.851226806640625
    5. ' neutral' → logprob: -9.101226806640625
    6. 'neutral' → logprob: -9.476226806640625
    7. 'unit' → logprob: -9.601226806640625
    8. ' unit' → logprob: -9.726226806640625
    9. '``' → logprob: -10.476226806640625
    10. ' ' → logprob: -10.476226806640625

Token 72: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.18336746096611023
    2. '_element' → logprob: -2.3083674907684326
    3. '   ' → logprob: -3.3083674907684326
    4. 'element' → logprob: -4.0583672523498535
    5. '_value' → logprob: -4.8083672523498535
    6. ' value' → logprob: -5.5583672523498535
    7. '```' → logprob: -7.4333672523498535
    8. '_token' → logprob: -7.8083672523498535
    9. ' ' → logprob: -8.058367729187012
    10. '
' → logprob: -8.308367729187012

Token 73: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02559371292591095
    2. '```' → logprob: -4.7755937576293945
    3. '):
' → logprob: -5.1505937576293945
    4. ' for' → logprob: -6.0255937576293945
    5. '):' → logprob: -6.0255937576293945
    6. '       ' → logprob: -6.4005937576293945
    7. '.' → logprob: -6.5255937576293945
    8. '
' → logprob: -7.2755937576293945
    9. ',' → logprob: -7.5255937576293945
    10. ')' → logprob: -7.7755937576293945

Token 74: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09430883079767227
    2. 'the' → logprob: -2.469308853149414
    3. ' op' → logprob: -5.469308853149414
    4. 'op' → logprob: -7.719308853149414
    5. ' operation' → logprob: -7.969308853149414
    6. '   ' → logprob: -8.594308853149414
    7. 'operation' → logprob: -10.094308853149414
    8. '    ' → logprob: -10.969308853149414
    9. ' ' → logprob: -11.469308853149414
    10. ' that' → logprob: -11.719308853149414

Token 75: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.1345444768667221
    2. 'operation' → logprob: -2.2595443725585938
    3. ' segment' → logprob: -4.259544372558594
    4. 'segment' → logprob: -5.259544372558594
    5. 'op' → logprob: -7.259544372558594
    6. '   ' → logprob: -7.384544372558594
    7. ' op' → logprob: -8.759544372558594
    8. 'tree' → logprob: -9.134544372558594
    9. ' tree' → logprob: -9.259544372558594
    10. ' data' → logprob: -9.384544372558594

Token 76: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6593660712242126
    2. '):' → logprob: -1.5343661308288574
    3. ')' → logprob: -1.6593661308288574
    4. '):
' → logprob: -2.9093661308288574
    5. '```' → logprob: -4.409366130828857
    6. ':' → logprob: -5.659366130828857
    7. '
' → logprob: -5.784366130828857
    8. ',' → logprob: -7.159366130828857
    9. '       ' → logprob: -7.784366130828857
    10. '`' → logprob: -7.784366130828857

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07404904067516327
    2. '```' → logprob: -2.8240489959716797
    3. ')' → logprob: -4.82404899597168
    4. '``' → logprob: -6.57404899597168
    5. '):
' → logprob: -7.32404899597168
    6. '):' → logprob: -7.44904899597168
    7. ')
' → logprob: -7.57404899597168
    8. '       ' → logprob: -8.69904899597168
    9. '"""
' → logprob: -9.07404899597168
    10. '    ' → logprob: -9.32404899597168

Token 78: ' built' (ID: 8113)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.29978975653648376
    2. '   ' → logprob: -2.4247896671295166
    3. ' def' → logprob: -2.4247896671295166
    4. 'build' → logprob: -2.9247896671295166
    5. 'def' → logprob: -3.6747896671295166
    6. ' update' → logprob: -6.674789905548096
    7. ' ' → logprob: -7.549789905548096
    8. '```' → logprob: -7.799789905548096
    9. '    ' → logprob: -8.549789428710938
    10. 'update' → logprob: -8.799789428710938

Token 79: '(array' (ID: 13176)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1342926025390625
    2. '()' → logprob: -1.3842926025390625
    3. '   ' → logprob: -1.7592926025390625
    4. 'e' → logprob: -2.2592926025390625
    5. 's' → logprob: -3.5092926025390625
    6. '```' → logprob: -3.5092926025390625
    7. '_' → logprob: -4.1342926025390625
    8. ')' → logprob: -4.5092926025390625
    9. '       ' → logprob: -4.6342926025390625
    10. 'er' → logprob: -5.3842926025390625

Token 80: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3891918659210205
    2. ')' → logprob: -1.1391918659210205
    3. '   ' → logprob: -6.389191627502441
    4. '):
' → logprob: -7.889191627502441
    5. '       ' → logprob: -10.389191627502441
    6. '```' → logprob: -10.639191627502441
    7. ')`' → logprob: -10.764191627502441
    8. '):

' → logprob: -10.889191627502441
    9. ')
' → logprob: -11.014191627502441
    10. ',' → logprob: -11.014191627502441

Token 81: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20959028601646423
    2. '   ' → logprob: -2.209590196609497
    3. '    ' → logprob: -3.459590196609497
    4. ' ' → logprob: -3.834590196609497
    5. '(' → logprob: -4.959590435028076
    6. '        ' → logprob: -5.459590435028076
    7. ')' → logprob: -6.209590435028076
    8. ' def' → logprob: -6.334590435028076
    9. '```' → logprob: -6.584590435028076
    10. '  ' → logprob: -6.709590435028076

Token 82: ' the' (ID: 290)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19022615253925323
    2. '(' → logprob: -1.9402261972427368
    3. '   ' → logprob: -4.190226078033447
    4. 'from' → logprob: -5.565226078033447
    5. 'self' → logprob: -6.065226078033447
    6. '_from' → logprob: -6.315226078033447
    7. '       ' → logprob: -6.315226078033447
    8. '()' → logprob: -7.190226078033447
    9. ')' → logprob: -7.565226078033447
    10. '```' → logprob: -7.565226078033447

Token 83: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2652145028114319
    2. ' tree' → logprob: -1.765214443206787
    3. '   ' → logprob: -3.640214443206787
    4. ')' → logprob: -4.640214443206787
    5. 'segment' → logprob: -4.640214443206787
    6. ' ' → logprob: -5.390214443206787
    7. 'Segment' → logprob: -6.140214443206787
    8. 'tree' → logprob: -6.265214443206787
    9. ' Segment' → logprob: -6.890214443206787
    10. 'from' → logprob: -7.140214443206787

Token 84: ' tree' (ID: 8165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6306198239326477
    2. '_tree' → logprob: -0.8806198239326477
    3. '_' → logprob: -3.755619764328003
    4. '       ' → logprob: -4.880620002746582
    5. ' tree' → logprob: -4.880620002746582
    6. 'tree' → logprob: -5.255620002746582
    7. 'Tree' → logprob: -5.505620002746582
    8. ')' → logprob: -6.880620002746582
    9. '  ' → logprob: -7.130620002746582
    10. ' Tree' → logprob: -7.255620002746582

Token 85: ' from' (ID: 591)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.940748393535614
    2. '   ' → logprob: -1.0657484531402588
    3. 'from' → logprob: -2.440748453140259
    4. '```' → logprob: -2.440748453140259
    5. '(' → logprob: -2.940748453140259
    6. '_from' → logprob: -3.565748453140259
    7. 'def' → logprob: -5.81574821472168
    8. ' from' → logprob: -6.19074821472168
    9. '       ' → logprob: -6.69074821472168
    10. 'self' → logprob: -7.06574821472168

Token 86: ' a' (ID: 261)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.29762932658195496
    2. ' a' → logprob: -1.7976293563842773
    3. ' the' → logprob: -2.6726293563842773
    4. ' array' → logprob: -4.047629356384277
    5. '   ' → logprob: -6.172629356384277
    6. 'array' → logprob: -6.797629356384277
    7. ' given' → logprob: -7.172629356384277
    8. 'the' → logprob: -7.422629356384277
    9. 'a' → logprob: -8.172629356384277
    10. ' list' → logprob: -9.797629356384277

Token 87: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.617805004119873
    2. 'n' → logprob: -0.867805004119873
    3. ' list' → logprob: -3.242805004119873
    4. 'given' → logprob: -7.117805004119873
    5. ' provided' → logprob: -7.992805004119873
    6. ' ' → logprob: -8.367805480957031
    7. '   ' → logprob: -8.867805480957031
    8. 'list' → logprob: -9.242805480957031
    9. '[n' → logprob: -9.367805480957031
    10. 'rray' → logprob: -9.617805480957031

Token 88: ' initial' (ID: 4871)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.05221707373857498
    2. '   ' → logprob: -3.8022170066833496
    3. 'array' → logprob: -4.42721700668335
    4. ' list' → logprob: -4.42721700668335
    5. ' ' → logprob: -5.80221700668335
    6. ' input' → logprob: -7.17721700668335
    7. '  ' → logprob: -8.427217483520508
    8. ')' → logprob: -8.677217483520508
    9. ' initial' → logprob: -9.677217483520508
    10. ' iterable' → logprob: -10.052217483520508

Token 89: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.06995043158531189
    2. '   ' → logprob: -3.8199503421783447
    3. 'array' → logprob: -3.9449503421783447
    4. ' ' → logprob: -4.194950580596924
    5. ' list' → logprob: -4.944950580596924
    6. ')' → logprob: -6.569950580596924
    7. '```' → logprob: -6.819950580596924
    8. '  ' → logprob: -7.319950580596924
    9. '`' → logprob: -8.944950103759766
    10. '_' → logprob: -9.069950103759766

Token 90: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14359956979751587
    2. '```' → logprob: -2.268599510192871
    3. ':' → logprob: -4.768599510192871
    4. '
' → logprob: -5.268599510192871
    5. '(self' → logprob: -5.643599510192871
    6. '       ' → logprob: -5.893599510192871
    7. '(' → logprob: -6.018599510192871
    8. ' ' → logprob: -6.768599510192871
    9. 'def' → logprob: -6.893599510192871
    10. ':
' → logprob: -6.893599510192871

Token 91: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010504265315830708
    2. '```' → logprob: -5.135504245758057
    3. '
' → logprob: -6.135504245758057
    4. '    
' → logprob: -7.385504245758057
    5. ' ' → logprob: -7.385504245758057
    6. '       ' → logprob: -8.760504722595215
    7. ':' → logprob: -9.010504722595215
    8. '\n' → logprob: -9.010504722595215
    9. ' 
' → logprob: -9.260504722595215
    10. '  
' → logprob: -9.260504722595215

Token 92: ' update' (ID: 4027)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.887172520160675
    2. '   ' → logprob: -1.5121724605560303
    3. 'def' → logprob: -2.2621724605560303
    4. ' query' → logprob: -2.5121724605560303
    5. 'query' → logprob: -2.8871724605560303
    6. ' update' → logprob: -3.0121724605560303
    7. ' get' → logprob: -3.7621724605560303
    8. 'update' (adapté à ' update') → logprob: -4.387172698974609
    9. 'get' → logprob: -4.637172698974609
    10. ' prod' → logprob: -5.262172698974609

Token 93: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006452339701354504
    2. '(self' → logprob: -5.256452560424805
    3. ' (' → logprob: -7.506452560424805
    4. '_' → logprob: -8.006452560424805
    5. '_point' → logprob: -10.131452560424805
    6. ' ' → logprob: -10.381452560424805
    7. ')' → logprob: -10.506452560424805
    8. '```' → logprob: -10.756452560424805
    9. '_token' → logprob: -10.881452560424805
    10. '(point' → logprob: -10.881452560424805

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015270020812749863
    2. ' ,' → logprob: -7.251526832580566
    3. ')' → logprob: -7.626526832580566
    4. ',value' → logprob: -8.876526832580566
    5. ',new' → logprob: -10.251526832580566
    6. ',p' → logprob: -10.376526832580566
    7. ' ' → logprob: -11.001526832580566
    8. '):' → logprob: -11.251526832580566
    9. ',index' → logprob: -11.751526832580566
    10. ',i' → logprob: -12.001526832580566

Token 95: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1826505661010742
    2. ' v' → logprob: -1.1826505661010742
    3. 'x' → logprob: -1.5576505661010742
    4. ' x' → logprob: -2.307650566101074
    5. ' val' → logprob: -3.557650566101074
    6. 'value' → logprob: -3.807650566101074
    7. 'val' → logprob: -3.807650566101074
    8. ' value' → logprob: -5.557650566101074
    9. ' ' → logprob: -9.682650566101074
    10. 'delta' → logprob: -10.557650566101074

Token 96: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04862982779741287
    2. ')' → logprob: -3.0486297607421875
    3. '):
' → logprob: -10.798629760742188
    4. ' ):' → logprob: -11.423629760742188
    5. ' ' → logprob: -12.798629760742188
    6. '   ' → logprob: -13.298629760742188
    7. ' )' → logprob: -13.798629760742188
    8. ')**' → logprob: -14.048629760742188
    9. ')`' → logprob: -14.423629760742188
    10. ')
' → logprob: -14.548629760742188

Token 97: ' Update' (ID: 9152)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009641814976930618
    2. '    ' → logprob: -5.384641647338867
    3. ' 
' → logprob: -6.759641647338867
    4. ' Update' → logprob: -7.259641647338867
    5. ' Perform' → logprob: -7.509641647338867
    6. '  ' → logprob: -7.634641647338867
    7. ' """' → logprob: -8.259641647338867
    8. '   ' → logprob: -8.509641647338867
    9. 'Perform' → logprob: -8.509641647338867
    10. '  
' → logprob: -8.634641647338867

Token 98: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6448737978935242
    2. '(i' → logprob: -1.644873857498169
    3. '(self' → logprob: -1.894873857498169
    4. ' (' → logprob: -3.519873857498169
    5. ')' → logprob: -3.519873857498169
    6. ' the' → logprob: -3.644873857498169
    7. ' ' → logprob: -3.894873857498169
    8. ' self' → logprob: -4.89487361907959
    9. 'self' → logprob: -5.39487361907959
    10. '   ' → logprob: -5.39487361907959

Token 99: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5598598122596741
    2. ' ' → logprob: -1.4348597526550293
    3. ' element' → logprob: -2.0598597526550293
    4. ' node' → logprob: -3.5598597526550293
    5. ' i' → logprob: -4.309859752655029
    6. ' segment' → logprob: -4.684859752655029
    7. ')' → logprob: -5.809859752655029
    8. 'value' → logprob: -5.809859752655029
    9. '   ' → logprob: -6.434859752655029
    10. ' point' → logprob: -7.434859752655029

Token 100: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.531769335269928
    2. ' ' → logprob: -1.9067692756652832
    3. '   ' → logprob: -2.406769275665283
    4. '(' → logprob: -2.781769275665283
    5. 's' → logprob: -3.031769275665283
    6. '       ' → logprob: -4.281769275665283
    7. 'at' → logprob: -4.656769275665283
    8. '    ' → logprob: -4.781769275665283
    9. ')' → logprob: -4.906769275665283
    10. '  ' → logprob: -5.156769275665283

Token 101: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04376306012272835
    2. 'i' → logprob: -3.1687631607055664
    3. ' ' → logprob: -7.543763160705566
    4. '    ' → logprob: -9.418763160705566
    5. '   ' → logprob: -9.918763160705566
    6. ' the' → logprob: -10.418763160705566
    7. ' a' → logprob: -10.418763160705566
    8. ')' → logprob: -11.543763160705566
    9. ' index' → logprob: -11.793763160705566
    10. '  ' → logprob: -12.543763160705566

Token 102: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02284625545144081
    2. ' i' → logprob: -4.272846221923828
    3. '  ' → logprob: -5.772846221923828
    4. 'i' → logprob: -6.647846221923828
    5. '    ' → logprob: -6.772846221923828
    6. ' (' → logprob: -7.522846221923828
    7. '<|end|>' → logprob: -7.522846221923828
    8. '   ' → logprob: -7.647846221923828
    9. '```' → logprob: -7.647846221923828
    10. '     ' → logprob: -8.272846221923828

Token 103: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.94261234998703
    2. '       ' → logprob: -1.9426124095916748
    3. ' to' → logprob: -2.067612409591675
    4. '   ' → logprob: -2.192612409591675
    5. '```' → logprob: -2.817612409591675
    6. '(' → logprob: -3.442612409591675
    7. '(self' → logprob: -3.567612409591675
    8. ',' → logprob: -3.692612409591675
    9. ' in' → logprob: -4.442612171173096
    10. '    ' → logprob: -4.692612171173096

Token 104: ' the' (ID: 290)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00038229089113883674
    2. 'val' → logprob: -8.000382423400879
    3. ' ' → logprob: -10.000382423400879
    4. '	val' → logprob: -14.375382423400879
    5. '(val' → logprob: -15.000382423400879
    6. ' a' → logprob: -15.875382423400879
    7. '[val' → logprob: -15.875382423400879
    8. ' ' → logprob: -16.375381469726562
    9. ',val' → logprob: -16.500381469726562
    10. '    ' → logprob: -16.750381469726562

Token 105: ' new' (ID: 620)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.13678939640522003
    2. 'val' → logprob: -2.136789321899414
    3. ' new' → logprob: -4.636789321899414
    4. 'new' → logprob: -9.511789321899414
    5. ' value' → logprob: -11.386789321899414
    6. 'v' → logprob: -11.511789321899414
    7. ' v' → logprob: -11.511789321899414
    8. ' ' → logprob: -11.761789321899414
    9. ' given' → logprob: -12.511789321899414
    10. 'value' → logprob: -12.636789321899414

Token 106: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22688572108745575
    2. ' val' → logprob: -1.6018856763839722
    3. '<|end|>' → logprob: -7.726885795593262
    4. ' value' → logprob: -7.976885795593262
    5. 'val' → logprob: -7.976885795593262
    6. ')' → logprob: -9.226885795593262
    7. '  ' → logprob: -9.851885795593262
    8. '_val' → logprob: -10.351885795593262
    9. '_' → logprob: -10.601885795593262
    10. ' )' → logprob: -10.851885795593262

Token 107: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2952592968940735
    2. '       ' → logprob: -2.5452592372894287
    3. ')' → logprob: -3.1702592372894287
    4. '(' → logprob: -3.4202592372894287
    5. '(self' → logprob: -3.6702592372894287
    6. '```' → logprob: -3.6702592372894287
    7. '.' → logprob: -4.420259475708008
    8. 's' → logprob: -5.045259475708008
    9. '):' → logprob: -5.170259475708008
    10. '(i' → logprob: -5.795259475708008

Token 108: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02325025200843811
    2. ' val' → logprob: -3.7732503414154053
    3. '	val' → logprob: -12.773250579833984
    4. '   ' → logprob: -13.648250579833984
    5. '_val' → logprob: -15.023250579833984
    6. '(val' → logprob: -15.773250579833984
    7. ',val' → logprob: -16.773250579833984
    8. '```' → logprob: -16.898250579833984
    9. ' ' → logprob: -17.648250579833984
    10. 'v' → logprob: -17.648250579833984

Token 109: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05767890438437462
    2. ')'' → logprob: -2.9326789379119873
    3. '   ' → logprob: -6.432678699493408
    4. '):' → logprob: -8.307679176330566
    5. ' )' → logprob: -8.682679176330566
    6. ')
' → logprob: -8.807679176330566
    7. ''' → logprob: -8.807679176330566
    8. ')`' → logprob: -8.807679176330566
    9. '')' → logprob: -9.432679176330566
    10. ')':' → logprob: -9.682679176330566

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009233108721673489
    2. '```' → logprob: -5.509232997894287
    3. '       ' → logprob: -6.259232997894287
    4. '    
' → logprob: -6.884232997894287
    5. '    ' → logprob: -7.634232997894287
    6. ' ' → logprob: -7.759232997894287
    7. ')' → logprob: -8.134233474731445
    8. '``' → logprob: -9.009233474731445
    9. '  
' → logprob: -9.384233474731445
    10. '     
' → logprob: -9.384233474731445

Token 111: ' get' (ID: 717)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.38851189613342285
    2. ' query' → logprob: -1.1385118961334229
    3. ' ' → logprob: -7.888511657714844
    4. ' def' → logprob: -8.263511657714844
    5. '   ' → logprob: -8.388511657714844
    6. ' prod' → logprob: -8.888511657714844
    7. 'def' → logprob: -8.888511657714844
    8. 'prod' → logprob: -9.138511657714844
    9. 'get' (adapté à ' get') → logprob: -9.388511657714844
    10. 'range' → logprob: -10.263511657714844

Token 112: '_val' (ID: 13694)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19844892621040344
    2. '(i' → logprob: -2.573448896408081
    3. '_range' → logprob: -2.698448896408081
    4. 'range' → logprob: -4.57344913482666
    5. '(x' → logprob: -5.44844913482666
    6. '(_' → logprob: -5.57344913482666
    7. '(range' → logprob: -5.82344913482666
    8. '_sum' → logprob: -5.94844913482666
    9. '(r' → logprob: -6.07344913482666
    10. '(l' → logprob: -6.19844913482666

Token 113: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0609185695648193
    2. '(i' → logprob: -1.0609185695648193
    3. '(self' → logprob: -1.1859185695648193
    4. '_at' → logprob: -7.435918807983398
    5. '(index' → logprob: -8.310918807983398
    6. '(x' → logprob: -8.310918807983398
    7. 's' → logprob: -8.560918807983398
    8. '(s' → logprob: -8.810918807983398
    9. '(a' → logprob: -9.310918807983398
    10. ' (' → logprob: -9.435918807983398

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017672323156148195
    2. ' ,' → logprob: -9.375176429748535
    3. ')' → logprob: -10.125176429748535
    4. ',r' → logprob: -10.375176429748535
    5. ',j' → logprob: -13.000176429748535
    6. '):' → logprob: -13.000176429748535
    7. ',l' → logprob: -13.375176429748535
    8. ' ' → logprob: -13.500176429748535
    9. ',n' → logprob: -13.625176429748535
    10. ',s' → logprob: -13.750176429748535

Token 115: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009756323881447315
    2. ' r' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.259756088256836
    4. ' ' → logprob: -16.259756088256836
    5. '	r' → logprob: -17.759756088256836
    6. ')' → logprob: -18.384756088256836
    7. ' ' → logprob: -18.634756088256836
    8. '```' → logprob: -19.009756088256836
    9. '  ' → logprob: -19.259756088256836
    10. '    ' → logprob: -19.259756088256836

Token 116: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011656993301585317
    2. ')' → logprob: -6.876165866851807
    3. ' ):' → logprob: -10.251165390014648
    4. '):
' → logprob: -10.376165390014648
    5. '   ' → logprob: -10.626165390014648
    6. '_' → logprob: -11.376165390014648
    7. ' ' → logprob: -11.626165390014648
    8. ',' → logprob: -12.126165390014648
    9. ''):' → logprob: -12.126165390014648
    10. '):

' → logprob: -13.126165390014648

Token 117: ' Compute' (ID: 45438)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3234050273895264
    2. '"' → logprob: -1.9484050273895264
    3. ' ' → logprob: -2.0734050273895264
    4. 'def' → logprob: -2.3234050273895264
    5. '   ' → logprob: -2.9484050273895264
    6. ' return' → logprob: -3.1984050273895264
    7. ' "' → logprob: -3.3234050273895264
    8. ' retrieves' → logprob: -3.5734050273895264
    9. ' returns' → logprob: -3.8234050273895264
    10. '    ' → logprob: -3.8234050273895264

Token 118: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.00197395752184093
    2. 'the' → logprob: -6.251974105834961
    3. ' a' → logprob: -10.876974105834961
    4. ' ' → logprob: -11.001974105834961
    5. ' maximum' → logprob: -12.751974105834961
    6. ' an' → logprob: -13.751974105834961
    7. ' l' → logprob: -13.751974105834961
    8. ' max' → logprob: -14.001974105834961
    9. ' in' → logprob: -14.126974105834961
    10. ' range' → logprob: -14.876974105834961

Token 119: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5800672173500061
    2. 'result' → logprob: -0.8300672173500061
    3. 'value' → logprob: -6.080067157745361
    4. ' value' → logprob: -6.830067157745361
    5. ' ' → logprob: -8.95506763458252
    6. ' combined' → logprob: -9.33006763458252
    7. 'sum' → logprob: -9.83006763458252
    8. 'operation' → logprob: -9.83006763458252
    9. 'aggregate' → logprob: -9.95506763458252
    10. ' operation' → logprob: -10.08006763458252

Token 120: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4880374670028687
    2. '   ' → logprob: -1.8630374670028687
    3. ' for' → logprob: -1.9880374670028687
    4. ' from' → logprob: -2.113037586212158
    5. ' in' → logprob: -2.488037586212158
    6. ' of' → logprob: -2.488037586212158
    7. ' over' → logprob: -2.613037586212158
    8. '    ' → logprob: -3.238037586212158
    9. ' on' → logprob: -3.363037586212158
    10. 'from' → logprob: -3.613037586212158

Token 121: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.024164138361811638
    2. ' ' → logprob: -4.024164199829102
    3. ' a' → logprob: -6.274164199829102
    4. ' self' → logprob: -6.524164199829102
    5. 'the' → logprob: -6.649164199829102
    6. ' op' → logprob: -7.524164199829102
    7. ' range' → logprob: -8.274164199829102
    8. ' applying' → logprob: -9.024164199829102
    9. ' l' → logprob: -9.149164199829102
    10. 'self' → logprob: -9.399164199829102

Token 122: ' binary' (ID: 15600)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1968072652816772
    2. ' operation' → logprob: -1.3218072652816772
    3. 'range' → logprob: -1.4468072652816772
    4. 'operation' → logprob: -2.196807384490967
    5. ' segment' → logprob: -3.571807384490967
    6. ' op' → logprob: -4.196807384490967
    7. 'op' → logprob: -4.446807384490967
    8. 'segment' → logprob: -4.446807384490967
    9. ' ' → logprob: -4.821807384490967
    10. ' query' → logprob: -5.696807384490967

Token 123: ' operation' (ID: 9506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3567299544811249
    2. ' operation' → logprob: -1.3567299842834473
    3. 'operation' → logprob: -4.231729984283447
    4. '_' → logprob: -4.856729984283447
    5. '_operation' → logprob: -5.106729984283447
    6. '   ' → logprob: -5.231729984283447
    7. ' _' → logprob: -5.481729984283447
    8. ' operator' → logprob: -6.731729984283447
    9. '_op' → logprob: -7.106729984283447
    10. '  ' → logprob: -7.481729984283447

Token 124: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -1.0146746635437012
    2. '   ' → logprob: -1.6396746635437012
    3. ' on' → logprob: -1.6396746635437012
    4. '(l' → logprob: -1.8896746635437012
    5. ' ' → logprob: -3.764674663543701
    6. 'on' → logprob: -4.139674663543701
    7. ' in' → logprob: -4.264674663543701
    8. '(' → logprob: -4.389674663543701
    9. 'over' → logprob: -4.639674663543701
    10. ' between' → logprob: -4.764674663543701

Token 125: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0479184128344059
    2. '[l' → logprob: -4.172918319702148
    3. ' l' → logprob: -4.797918319702148
    4. 'the' → logprob: -4.797918319702148
    5. ' [' → logprob: -5.422918319702148
    6. ' range' → logprob: -5.547918319702148
    7. ' a' → logprob: -5.672918319702148
    8. 'l' → logprob: -6.297918319702148
    9. 'range' → logprob: -7.422918319702148
    10. '[' → logprob: -8.422918319702148

Token 126: ' interval' (ID: 17116)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4280093312263489
    2. ' range' → logprob: -2.053009271621704
    3. 'segment' → logprob: -2.553009271621704
    4. ' segment' → logprob: -2.678009271621704
    5. '[l' → logprob: -2.928009271621704
    6. 'interval' → logprob: -5.303009510040283
    7. ' interval' → logprob: -5.303009510040283
    8. '[r' → logprob: -5.553009510040283
    9. '[' → logprob: -6.178009510040283
    10. ' [' → logprob: -7.053009510040283

Token 127: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.7807156443595886
    2. ' [' → logprob: -0.9057156443595886
    3. '(l' → logprob: -2.1557157039642334
    4. ' (' → logprob: -4.280715465545654
    5. '   ' → logprob: -5.405715465545654
    6. ' l' → logprob: -6.780715465545654
    7. '[i' → logprob: -7.030715465545654
    8. ' ' → logprob: -7.530715465545654
    9. '[' → logprob: -8.030715942382812
    10. '(i' → logprob: -8.280715942382812

Token 128: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05495213344693184
    2. ' l' → logprob: -2.9299521446228027
    3. '   ' → logprob: -9.929951667785645
    4. ' ' → logprob: -11.179951667785645
    5. '	l' → logprob: -13.554951667785645
    6. ')' → logprob: -13.679951667785645
    7. '    ' → logprob: -13.929951667785645
    8. '
' → logprob: -14.304951667785645
    9. ',' → logprob: -14.429951667785645
    10. '  ' → logprob: -15.054951667785645

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005613646004348993
    2. ' ,' → logprob: -5.255613803863525
    3. ',r' → logprob: -8.005613327026367
    4. '   ' → logprob: -10.880613327026367
    5. ',
' → logprob: -11.380613327026367
    6. 'r' → logprob: -11.755613327026367
    7. ' ' → logprob: -12.630613327026367
    8. ':' → logprob: -14.005613327026367
    9. ')' → logprob: -14.880613327026367
    10. '_,' → logprob: -15.130613327026367

Token 130: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868776857852936
    2. ' r' → logprob: -1.1368776559829712
    3. ' ' → logprob: -12.13687801361084
    4. ',' → logprob: -14.26187801361084
    5. ')' → logprob: -15.26187801361084
    6. '   ' → logprob: -15.88687801361084
    7. ' ' → logprob: -16.636877059936523
    8. ',r' → logprob: -16.761877059936523
    9. '	r' → logprob: -17.011877059936523
    10. '    ' → logprob: -17.511877059936523

Token 131: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010982506908476353
    2. ')' → logprob: -4.760982513427734
    3. '+' → logprob: -6.260982513427734
    4. '   ' → logprob: -9.135982513427734
    5. '])' → logprob: -9.385982513427734
    6. ']:' → logprob: -9.385982513427734
    7. '].' → logprob: -9.760982513427734
    8. ' ]' → logprob: -10.010982513427734
    9. ']
' → logprob: -10.385982513427734
    10. ' +' → logprob: -11.135982513427734

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03658250346779823
    2. '```' → logprob: -4.4115824699401855
    3. '
' → logprob: -4.7865824699401855
    4. ' 
' → logprob: -6.0365824699401855
    5. '    
' → logprob: -6.1615824699401855
    6. '"""
' → logprob: -6.2865824699401855
    7. 'class' → logprob: -6.4115824699401855
    8. ')' → logprob: -6.5365824699401855
    9. ')
' → logprob: -6.6615824699401855
    10. '    ' → logprob: -6.9115824699401855

Token 133: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06460713595151901
    2. '```' → logprob: -3.4396071434020996
    3. '
' → logprob: -3.9396071434020996
    4. '    
' → logprob: -5.4396071434021
    5. ' 
' → logprob: -6.6896071434021
    6. '    ' → logprob: -6.6896071434021
    7. '"""' → logprob: -6.8146071434021
    8. '"""
' → logprob: -7.4396071434021
    9. '\n' → logprob: -7.5646071434021
    10. 'class' → logprob: -7.6896071434021

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011069943429902196
    2. 'class' → logprob: -7.001107215881348
    3. '```' → logprob: -9.376107215881348
    4. ' class' → logprob: -9.751107215881348
    5. '    
' → logprob: -10.001107215881348
    6. '
' → logprob: -13.376107215881348
    7. '    ' → logprob: -13.376107215881348
    8. 'def' → logprob: -13.626107215881348
    9. '       ' → logprob: -14.876107215881348
    10. ' 
' → logprob: -15.126107215881348

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6035546660423279
    2. ' def' → logprob: -0.8535546660423279
    3. '   ' → logprob: -3.6035547256469727
    4. '	def' → logprob: -12.228554725646973
    5. ' ' → logprob: -13.478554725646973
    6. 'import' → logprob: -13.603554725646973
    7. '    
' → logprob: -13.978554725646973
    8. '    ' → logprob: -14.478554725646973
    9. 'class' → logprob: -14.603554725646973
    10. '
' → logprob: -15.103554725646973

Token 136: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0006749047315679491
    2. '__' → logprob: -7.375674724578857
    3. ' ' → logprob: -10.500675201416016
    4. ' ' → logprob: -11.250675201416016
    5. ' _' → logprob: -12.500675201416016
    6. ' init' → logprob: -12.875675201416016
    7. '_init' → logprob: -13.500675201416016
    8. ' def' → logprob: -16.875675201416016
    9. ' ___' → logprob: -17.125675201416016
    10. '_' → logprob: -17.375675201416016

Token 137: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. '_init' → logprob: -15.625
    3. ' init' → logprob: -15.875
    4. 'ini' → logprob: -18.625
    5. 'def' → logprob: -19.25
    6. '   ' → logprob: -19.375
    7. 'int' → logprob: -19.375
    8. '(init' → logprob: -19.75
    9. '	init' → logprob: -20.25
    10. 'inite' → logprob: -20.375

Token 138: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006942047039046884
    2. '(self' → logprob: -7.375694274902344
    3. '__' → logprob: -10.000694274902344
    4. '__(
' → logprob: -11.375694274902344
    5. '(' → logprob: -12.750694274902344
    6. '<>(' → logprob: -13.375694274902344
    7. '_(' → logprob: -13.375694274902344
    8. ' (' → logprob: -13.875694274902344
    9. 'self' → logprob: -14.000694274902344
    10. '<|end|>' → logprob: -14.500694274902344

Token 139: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002484096447005868
    2. ' self' → logprob: -6.002484321594238
    3. '   ' → logprob: -12.127484321594238
    4. '       ' → logprob: -13.752484321594238
    5. '
' → logprob: -14.002484321594238
    6. ' ' → logprob: -14.127484321594238
    7. 'n' → logprob: -15.377484321594238
    8. '0' → logprob: -16.752483367919922
    9. ',' → logprob: -17.252483367919922
    10. '  ' → logprob: -17.377483367919922

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011805851245298982
    2. 'self' → logprob: -7.501180648803711
    3. ' ,' → logprob: -7.626180648803711
    4. ',self' → logprob: -9.126180648803711
    5. ' self' → logprob: -10.751180648803711
    6. '(self' → logprob: -12.376180648803711
    7. ' ' → logprob: -13.126180648803711
    8. ',n' → logprob: -13.876180648803711
    9. ',
' → logprob: -14.626180648803711
    10. '	self' → logprob: -15.126180648803711

Token 141: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11951124668121338
    2. 'n' → logprob: -2.619511127471924
    3. ' self' → logprob: -3.369511127471924
    4. ' n' → logprob: -5.244511127471924
    5. '   ' → logprob: -9.369511604309082
    6. ' ' → logprob: -10.619511604309082
    7. '       ' → logprob: -11.869511604309082
    8. '
' → logprob: -13.369511604309082
    9. '	self' → logprob: -13.744511604309082
    10. 'size' → logprob: -13.869511604309082

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002810007717926055
    2. ' ,' → logprob: -8.25028133392334
    3. '):' → logprob: -11.12528133392334
    4. ':' → logprob: -12.75028133392334
    5. '   ' → logprob: -14.25028133392334
    6. ' ):' → logprob: -14.75028133392334
    7. ')' → logprob: -15.25028133392334
    8. ' ' → logprob: -16.125280380249023
    9. '  ' → logprob: -16.500280380249023
    10. '_,' → logprob: -16.625280380249023

Token 143: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.08897916227579117
    2. 'op' → logprob: -2.4639792442321777
    3. '	op' → logprob: -11.33897876739502
    4. '   ' → logprob: -12.08897876739502
    5. '_op' → logprob: -12.71397876739502
    6. '(op' → logprob: -12.71397876739502
    7. '    ' → logprob: -13.08897876739502
    8. ' ' → logprob: -13.33897876739502
    9. ' operation' → logprob: -13.46397876739502
    10. 'operation' → logprob: -13.46397876739502

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003632850246503949
    2. ' ,' → logprob: -5.62863302230835
    3. '   ' → logprob: -11.253632545471191
    4. '):' → logprob: -11.378632545471191
    5. ' ' → logprob: -12.753632545471191
    6. '=' → logprob: -13.753632545471191
    7. ' ):' → logprob: -14.003632545471191
    8. '  ' → logprob: -14.503632545471191
    9. ')' → logprob: -14.878632545471191
    10. '    ' → logprob: -15.003632545471191

Token 145: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.05489356443285942
    2. 'e' → logprob: -2.9298934936523438
    3. ' ' → logprob: -12.179893493652344
    4. ' )' → logprob: -13.679893493652344
    5. ')' → logprob: -13.804893493652344
    6. ')e' → logprob: -14.304893493652344
    7. '_e' → logprob: -14.554893493652344
    8. ' ' → logprob: -14.554893493652344
    9. '<|end|>' → logprob: -14.679893493652344
    10. '    ' → logprob: -15.054893493652344

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011161656584590673
    2. ')' → logprob: -7.2511162757873535
    3. '):
' → logprob: -7.8761162757873535
    4. ' ):' → logprob: -10.751115798950195
    5. ':' → logprob: -13.001115798950195
    6. ',' → logprob: -14.251115798950195
    7. '):
' → logprob: -14.501115798950195
    8. '   ' → logprob: -14.626115798950195
    9. '=' → logprob: -15.001115798950195
    10. ' ' → logprob: -15.126115798950195

Token 147: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10210899263620377
    2. '       ' → logprob: -2.727108955383301
    3. ':
' → logprob: -3.477108955383301
    4. '):
' → logprob: -8.2271089553833
    5. ',' → logprob: -8.8521089553833
    6. '   ' → logprob: -9.1021089553833
    7. '):' → logprob: -9.7271089553833
    8. ')' → logprob: -10.2271089553833
    9. '	' → logprob: -10.8521089553833
    10. '<|end|>' → logprob: -10.8521089553833

Token 148: ' """
' (ID: 7037)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.732340395450592
    2. '       ' → logprob: -0.857340395450592
    3. 'self' → logprob: -2.3573403358459473
    4. ' ' → logprob: -9.357340812683105
    5. '        ' → logprob: -9.857340812683105
    6. 'import' → logprob: -9.857340812683105
    7. '   ' → logprob: -10.732340812683105
    8. '	self' → logprob: -10.982340812683105
    9. ' import' → logprob: -12.107340812683105
    10. '      ' → logprob: -12.357340812683105

Token 149: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2636399567127228
    2. '       ' → logprob: -1.5136399269104004
    3. ' self' → logprob: -4.6386399269104
    4. 'n' → logprob: -6.2636399269104
    5. ' n' → logprob: -10.263640403747559
    6. '   ' → logprob: -11.388640403747559
    7. 'super' → logprob: -11.763640403747559
    8. '	self' → logprob: -12.638640403747559
    9. ' ' → logprob: -13.013640403747559
    10. 'class' → logprob: -13.513640403747559

Token 150: ' Initialize' (ID: 19496)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5647164583206177
    2. ' self' → logprob: -1.3147164583206177
    3. 'self' → logprob: -1.8147164583206177
    4. '   ' → logprob: -11.314716339111328
    5. '        ' → logprob: -11.439716339111328
    6. ' ' → logprob: -11.689716339111328
    7. ' super' → logprob: -12.564716339111328
    8. 'super' → logprob: -13.189716339111328
    9. '	self' → logprob: -13.439716339111328
    10. '      ' → logprob: -13.689716339111328

Token 151: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39460381865501404
    2. ' self' → logprob: -1.6446038484573364
    3. 'self' → logprob: -2.019603729248047
    4. ' the' → logprob: -9.519603729248047
    5. '(self' → logprob: -9.644603729248047
    6. '	self' → logprob: -10.269603729248047
    7. '   ' → logprob: -11.019603729248047
    8. '        ' → logprob: -11.519603729248047
    9. 'n' → logprob: -11.769603729248047
    10. '           ' → logprob: -12.019603729248047

Token 152: ' Segment' (ID: 64922)
  Prédit: ' Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.7702605128288269
    2. ' segment' → logprob: -1.6452605724334717
    3. 'self' → logprob: -2.0202605724334717
    4. 'Segment' → logprob: -2.5202605724334717
    5. ' size' → logprob: -2.8952605724334717
    6. ' self' → logprob: -3.3952605724334717
    7. 'segment' → logprob: -4.395260334014893
    8. 'size' → logprob: -4.520260334014893
    9. ' tree' → logprob: -4.770260334014893
    10. 'tree' → logprob: -5.770260334014893

Token 153: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0001242772996192798
    2. ' Tree' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. ' tree' → logprob: -15.125123977661133
    5. 'tree' → logprob: -15.500123977661133
    6. 'Tre' → logprob: -16.500123977661133
    7. '	Tree' → logprob: -16.875123977661133
    8. '(Tree' → logprob: -18.125123977661133
    9. '       ' → logprob: -18.500123977661133
    10. 'T' → logprob: -18.500123977661133

Token 154: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6370746493339539
    2. ':' → logprob: -1.8870747089385986
    3. '(self' → logprob: -2.1370747089385986
    4. ':
' → logprob: -2.8870747089385986
    5. 'self' → logprob: -2.8870747089385986
    6. '   ' → logprob: -3.0120747089385986
    7. ' self' → logprob: -4.5120744705200195
    8. ')' → logprob: -4.7620744705200195
    9. ',' → logprob: -5.2620744705200195
    10. '.' → logprob: -5.6370744705200195

Token 155: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005805541295558214
    2. 'self' → logprob: -7.625580787658691
    3. '
' → logprob: -10.250580787658691
    4. ' self' → logprob: -10.500580787658691
    5. 'n' → logprob: -11.000580787658691
    6. '        
' → logprob: -12.125580787658691
    7. ':' → logprob: -13.375580787658691
    8. '   ' → logprob: -13.500580787658691
    9. ':
' → logprob: -13.750580787658691
    10. '```' → logprob: -14.750580787658691

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017699727788567543
    2. 'self' → logprob: -4.517699718475342
    3. ' self' → logprob: -5.017699718475342
    4. '   ' → logprob: -12.1427001953125
    5. 'n' → logprob: -13.8927001953125
    6. 'import' → logprob: -14.2677001953125
    7. 'super' → logprob: -14.2677001953125
    8. ' super' → logprob: -14.6427001953125
    9. '      ' → logprob: -14.6427001953125
    10. '        ' → logprob: -14.8927001953125

Token 157: ' Args' (ID: 39185)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007331513334065676
    2. '       ' → logprob: -7.250733375549316
    3. ' self' → logprob: -10.875733375549316
    4. '   ' → logprob: -13.375733375549316
    5. 'super' → logprob: -13.625733375549316
    6. '#' → logprob: -14.375733375549316
    7. 'import' → logprob: -14.875733375549316
    8. '"""
' → logprob: -15.750733375549316
    9. '"""' → logprob: -16.250732421875
    10. '        
' → logprob: -16.500732421875

Token 158: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5575239658355713
    2. ':' → logprob: -1.3075239658355713
    3. 'self' → logprob: -2.3075239658355713
    4. ',' → logprob: -3.9325239658355713
    5. '   ' → logprob: -4.307523727416992
    6. ' self' → logprob: -4.557523727416992
    7. '(self' → logprob: -5.432523727416992
    8. '):' → logprob: -5.432523727416992
    9. ')' → logprob: -6.182523727416992
    10. '):
' → logprob: -7.057523727416992

Token 159: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.460054486989975
    2. 'self' → logprob: -1.4600545167922974
    3. '       ' → logprob: -2.085054397583008
    4. '           ' → logprob: -4.585054397583008
    5. 'n' → logprob: -7.085054397583008
    6. '        ' → logprob: -7.335054397583008
    7. ' ' → logprob: -9.585054397583008
    8. '               ' → logprob: -9.710054397583008
    9. '   ' → logprob: -9.835054397583008
    10. ':' → logprob: -9.960054397583008

Token 160: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6049787998199463
    2. 'self' → logprob: -0.9799787998199463
    3. ' n' → logprob: -3.1049787998199463
    4. 'n' (adapté à ' n') → logprob: -3.4799787998199463
    5. '       ' → logprob: -5.854978561401367
    6. '   ' → logprob: -10.729978561401367
    7. '        ' → logprob: -10.729978561401367
    8. ' ' → logprob: -11.729978561401367
    9. 'size' → logprob: -11.729978561401367
    10. ' size' → logprob: -11.729978561401367

Token 161: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.53428715467453
    2. ':' → logprob: -1.0342872142791748
    3. ':int' → logprob: -3.659287214279175
    4. ' :' → logprob: -4.284286975860596
    5. ' ):' → logprob: -4.534286975860596
    6. '<|end|>' → logprob: -5.659286975860596
    7. '):
' → logprob: -6.534286975860596
    8. '<|end|>' → logprob: -6.784286975860596
    9. ')' → logprob: -7.409286975860596
    10. '   ' → logprob: -7.909286975860596

Token 162: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01113436184823513
    2. ' int' → logprob: -4.511134147644043
    3. 'self' → logprob: -9.886134147644043
    4. '       ' → logprob: -10.761134147644043
    5. '   ' → logprob: -11.886134147644043
    6. ')' → logprob: -12.386134147644043
    7. '):' → logprob: -13.761134147644043
    8. ' self' → logprob: -14.261134147644043
    9. '```' → logprob: -15.261134147644043
    10. ' ' → logprob: -15.636134147644043

Token 163: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002802029252052307
    2. '):
' → logprob: -6.127801895141602
    3. ')' → logprob: -7.502801895141602
    4. ' ):' → logprob: -10.002801895141602
    5. '):
' → logprob: -12.377801895141602
    6. ',' → logprob: -12.377801895141602
    7. '   ' → logprob: -12.377801895141602
    8. '):

' → logprob: -12.502801895141602
    9. ':' → logprob: -13.002801895141602
    10. ' ' → logprob: -15.252801895141602

Token 164: ' Number' (ID: 9184)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.5479880571365356
    2. ' Number' → logprob: -1.0479880571365356
    3. ' ' → logprob: -2.922987937927246
    4. ' number' → logprob: -4.672987937927246
    5. 'Number' → logprob: -5.297987937927246
    6. 'The' → logprob: -6.047987937927246
    7. '    ' → logprob: -8.172987937927246
    8. ')' → logprob: -9.047987937927246
    9. '        ' → logprob: -9.297987937927246
    10. ' Total' → logprob: -9.547987937927246

Token 165: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.31801503896713257
    2. ' of' → logprob: -1.4430150985717773
    3. 'of' → logprob: -3.9430150985717773
    4. '_elements' → logprob: -4.318015098571777
    5. ')' → logprob: -6.443015098571777
    6. '   ' → logprob: -7.443015098571777
    7. 'Of' → logprob: -7.818015098571777
    8. '       ' → logprob: -8.068015098571777
    9. ' ' → logprob: -8.943015098571777
    10. '	of' → logprob: -9.318015098571777

Token 166: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.020620834082365036
    2. 'elements' → logprob: -3.895620822906494
    3. ' leaves' → logprob: -9.520621299743652
    4. '_elements' → logprob: -13.520621299743652
    5. 'le' → logprob: -13.645621299743652
    6. ' ' → logprob: -13.770621299743652
    7. ' leaf' → logprob: -14.645621299743652
    8. ' the' → logprob: -15.145621299743652
    9. ' nodes' → logprob: -15.270621299743652
    10. ' initial' → logprob: -15.770621299743652

Token 167: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6713361740112305
    2. '):' → logprob: -1.4213361740112305
    3. ')' → logprob: -1.5463361740112305
    4. '       ' → logprob: -4.1713361740112305
    5. '
' → logprob: -4.6713361740112305
    6. '   ' → logprob: -5.5463361740112305
    7. ',' → logprob: -6.1713361740112305
    8. '<|end|>' → logprob: -7.1713361740112305
    9. '        
' → logprob: -7.4213361740112305
    10. ' ):
' → logprob: -7.7963361740112305

Token 168: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017351247370243073
    2. '):' → logprob: -4.392351150512695
    3. ' )' → logprob: -5.892351150512695
    4. '):
' → logprob: -7.267351150512695
    5. '       ' → logprob: -7.892351150512695
    6. '   ' → logprob: -7.892351150512695
    7. ')
' → logprob: -8.392351150512695
    8. ' ):' → logprob: -8.767351150512695
    9. 'int' → logprob: -10.267351150512695
    10. 'n' → logprob: -10.267351150512695

Token 169: ' initial' (ID: 4871)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.10328581929206848
    2. ' size' → logprob: -3.228285789489746
    3. ' number' → logprob: -4.228285789489746
    4. ' ' → logprob: -4.478285789489746
    5. ' )' → logprob: -4.978285789489746
    6. ' n' → logprob: -5.728285789489746
    7. 'n' → logprob: -5.728285789489746
    8. ' length' → logprob: -6.103285789489746
    9. ' user' → logprob: -6.228285789489746
    10. ' nearest' → logprob: -6.228285789489746

Token 170: ' array' (ID: 2644)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -1.1387327909469604
    2. ' elements' → logprob: -1.5137327909469604
    3. ' capacity' → logprob: -2.38873291015625
    4. ')' → logprob: -2.38873291015625
    5. 'size' → logprob: -2.76373291015625
    6. '   ' → logprob: -3.38873291015625
    7. 'elements' → logprob: -3.38873291015625
    8. ' next' → logprob: -3.51373291015625
    9. 'capacity' → logprob: -4.13873291015625
    10. ' ' → logprob: -4.13873291015625

Token 171: ' size' (ID: 2349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19663530588150024
    2. '):' → logprob: -2.5716352462768555
    3. '):
' → logprob: -3.1966352462768555
    4. ')
' → logprob: -3.4466352462768555
    5. ').' → logprob: -4.6966352462768555
    6. '   ' → logprob: -4.6966352462768555
    7. '       ' → logprob: -5.6966352462768555
    8. ' size' → logprob: -6.1966352462768555
    9. 'size' → logprob: -6.6966352462768555
    10. ' is' → logprob: -6.8216352462768555

Token 172: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02476801909506321
    2. ')
' → logprob: -4.024767875671387
    3. '):
' → logprob: -5.774767875671387
    4. '):' → logprob: -6.149767875671387
    5. ').' → logprob: -6.774767875671387
    6. '       ' → logprob: -9.024767875671387
    7. '   ' → logprob: -9.899767875671387
    8. ').
' → logprob: -10.899767875671387
    9. ')

' → logprob: -11.899767875671387
    10. ' )' → logprob: -12.024767875671387

Token 173: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004651911091059446
    2. '        
' → logprob: -5.75465202331543
    3. '
' → logprob: -7.25465202331543
    4. ')' → logprob: -7.50465202331543
    5. ')
' → logprob: -9.87965202331543
    6. '  
' → logprob: -10.62965202331543
    7. '```' → logprob: -10.62965202331543
    8. '):
' → logprob: -10.75465202331543
    9. ' 
' → logprob: -11.00465202331543
    10. '        ' → logprob: -11.37965202331543

Token 174: ' op' (ID: 991)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29744952917099
    2. ' self' → logprob: -1.4224495887756348
    3. '       ' → logprob: -4.422449588775635
    4. 'op' (adapté à ' op') → logprob: -6.047449588775635
    5. ' op' → logprob: -6.672449588775635
    6. '           ' → logprob: -8.922449111938477
    7. '   ' → logprob: -9.422449111938477
    8. '
' → logprob: -9.547449111938477
    9. ' ' → logprob: -10.047449111938477
    10. '```' → logprob: -10.547449111938477

Token 175: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001896033063530922
    2. '):
' → logprob: -7.126895904541016
    3. ' ):' → logprob: -7.376895904541016
    4. ')' → logprob: -8.501895904541016
    5. ':' → logprob: -9.126895904541016
    6. ',' → logprob: -9.376895904541016
    7. '   ' → logprob: -10.001895904541016
    8. ' ' → logprob: -11.751895904541016
    9. '):

' → logprob: -12.751895904541016
    10. '  ' → logprob: -13.001895904541016

Token 176: 'call' (ID: 9925)
  Prédit: 'call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.9373565912246704
    2. ')' → logprob: -1.0623565912246704
    3. '):' → logprob: -2.187356472015381
    4. 'self' → logprob: -2.562356472015381
    5. 'function' → logprob: -2.937356472015381
    6. 'binary' → logprob: -5.062356472015381
    7. '   ' → logprob: -5.812356472015381
    8. ' callable' → logprob: -6.062356472015381
    9. '):
' → logprob: -6.187356472015381
    10. 'operator' → logprob: -6.437356472015381

Token 177: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -7.584239938296378e-06
    2. 'back' → logprob: -11.875007629394531
    3. 'b' → logprob: -15.125007629394531
    4. '   ' → logprob: -15.750007629394531
    5. 'ab' → logprob: -16.87500762939453
    6. ' able' → logprob: -17.00000762939453
    7. 'ble' → logprob: -17.25000762939453
    8. '       ' → logprob: -17.50000762939453
    9. '_back' → logprob: -18.12500762939453
    10. 'abl' → logprob: -18.25000762939453

Token 178: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002005961025133729
    2. ' ):' → logprob: -6.5020060539245605
    3. '):
' → logprob: -8.252005577087402
    4. ')' → logprob: -8.502005577087402
    5. '   ' → logprob: -10.752005577087402
    6. ',' → logprob: -11.752005577087402
    7. '):

' → logprob: -12.752005577087402
    8. '       ' → logprob: -13.252005577087402
    9. ':' → logprob: -13.877005577087402
    10. ' ' → logprob: -14.002005577087402

Token 179: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5250965356826782
    2. ' A' → logprob: -1.5250965356826782
    3. ' function' → logprob: -1.5250965356826782
    4. ')' → logprob: -1.7750965356826782
    5. ' The' → logprob: -2.2750964164733887
    6. '<|end|>' → logprob: -4.025096416473389
    7. ' )' → logprob: -4.150096416473389
    8. ' def' → logprob: -5.150096416473389
    9. ' a' → logprob: -5.400096416473389
    10. ' An' → logprob: -5.525096416473389

Token 180: ' binary' (ID: 15600)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.32162967324256897
    2. ' binary' → logprob: -1.3216296434402466
    3. 'function' → logprob: -5.446629524230957
    4. 'binary' → logprob: -5.571629524230957
    5. ' lambda' → logprob: -9.321629524230957
    6. ' callable' → logprob: -10.071629524230957
    7. 'def' → logprob: -10.196629524230957
    8. ' ' → logprob: -11.321629524230957
    9. ')' → logprob: -12.071629524230957
    10. '   ' → logprob: -12.196629524230957

Token 181: ' associative' (ID: 169679)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.9889317750930786
    2. ' function' → logprob: -1.3639317750930786
    3. ' operator' → logprob: -2.113931655883789
    4. ' ' → logprob: -2.863931655883789
    5. '_operation' → logprob: -3.113931655883789
    6. ')' → logprob: -3.363931655883789
    7. 'operation' → logprob: -3.488931655883789
    8. ' )' → logprob: -3.863931655883789
    9. '   ' → logprob: -4.113931655883789
    10. 'function' → logprob: -4.488931655883789

Token 182: ' function' (ID: 1114)
  Prédit: ' function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.8099269270896912
    2. ' operation' → logprob: -0.8099269270896912
    3. ' operator' → logprob: -2.559926986694336
    4. 'operation' → logprob: -4.184926986694336
    5. 'function' → logprob: -5.059926986694336
    6. ' ' → logprob: -5.184926986694336
    7. 'operator' → logprob: -6.059926986694336
    8. '   ' → logprob: -6.309926986694336
    9. '_operation' → logprob: -7.434926986694336
    10. ')' → logprob: -8.434926986694336

Token 183: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4911718964576721
    2. ')' → logprob: -1.7411718368530273
    3. '   ' → logprob: -2.4911718368530273
    4. ' that' → logprob: -3.2411718368530273
    5. '       ' → logprob: -3.4911718368530273
    6. ',' → logprob: -3.4911718368530273
    7. '):
' → logprob: -4.116171836853027
    8. ' ):' → logprob: -4.866171836853027
    9. ' )' → logprob: -6.491171836853027
    10. ':' → logprob: -7.116171836853027

Token 184: 'e' (ID: 68)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6036732196807861
    2. 'self' → logprob: -1.4786732196807861
    3. ')' → logprob: -1.8536732196807861
    4. '       ' → logprob: -3.228673219680786
    5. ' that' → logprob: -4.603672981262207
    6. '):' → logprob: -5.603672981262207
    7. 'lambda' → logprob: -5.978672981262207
    8. 'def' → logprob: -5.978672981262207
    9. ' lambda' → logprob: -6.228672981262207
    10. '):
' → logprob: -6.353672981262207

Token 185: '.g' (ID: 1940)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.09161944687366486
    2. '       ' → logprob: -3.5916194915771484
    3. '   ' → logprob: -4.091619491577148
    4. '):' → logprob: -4.466619491577148
    5. 'x' → logprob: -4.966619491577148
    6. ')' → logprob: -5.716619491577148
    7. 'lements' → logprob: -5.966619491577148
    8. '     ' → logprob: -6.091619491577148
    9. ',' → logprob: -6.216619491577148
    10. '):
' → logprob: -6.216619491577148

Token 186: '.,' (ID: 4213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.605629026889801
    2. ',' → logprob: -0.980629026889801
    3. '   ' → logprob: -3.7306289672851562
    4. 'def' → logprob: -4.105628967285156
    5. '):' → logprob: -4.355628967285156
    6. '       ' → logprob: -4.980628967285156
    7. ' def' → logprob: -5.605628967285156
    8. '):
' → logprob: -6.480628967285156
    9. '           ' → logprob: -6.605628967285156
    10. '    ' → logprob: -6.730628967285156

Token 187: ' min' (ID: 1349)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6335597038269043
    2. ' lambda' → logprob: -0.7585597038269043
    3. 'sum' → logprob: -8.133560180664062
    4. '   ' → logprob: -8.258560180664062
    5. ' sum' → logprob: -8.508560180664062
    6. '(lambda' → logprob: -9.508560180664062
    7. ' max' → logprob: -10.383560180664062
    8. ' min' → logprob: -10.883560180664062
    9. 'operator' → logprob: -11.008560180664062
    10. ')' → logprob: -11.133560180664062

Token 188: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6367842555046082
    2. ',' → logprob: -1.511784315109253
    3. ' or' → logprob: -1.511784315109253
    4. ' )' → logprob: -4.011784076690674
    5. '   ' → logprob: -5.011784076690674
    6. ' ,' → logprob: -6.011784076690674
    7. ' ' → logprob: -6.761784076690674
    8. 'or' → logprob: -7.261784076690674
    9. '  ' → logprob: -8.886784553527832
    10. 'def' → logprob: -9.261784553527832

Token 189: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.673389732837677
    2. 'max' → logprob: -1.1733896732330322
    3. 'sum' → logprob: -2.5483896732330322
    4. ' sum' → logprob: -2.7983896732330322
    5. ' lambda' → logprob: -3.9233896732330322
    6. 'lambda' → logprob: -3.9233896732330322
    7. '   ' → logprob: -6.548389911651611
    8. '    ' → logprob: -8.548389434814453
    9. '       ' → logprob: -9.048389434814453
    10. 'add' → logprob: -9.298389434814453

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22631871700286865
    2. ')' → logprob: -1.7263187170028687
    3. '   ' → logprob: -4.226318836212158
    4. ' or' → logprob: -5.726318836212158
    5. ')
' → logprob: -5.851318836212158
    6. '):
' → logprob: -6.226318836212158
    7. ').' → logprob: -6.976318836212158
    8. ' ,' → logprob: -8.601318359375
    9. '),' → logprob: -8.851318359375
    10. 'or' → logprob: -8.976318359375

Token 191: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3238446116447449
    2. ' sum' → logprob: -1.3238446712493896
    3. 'add' → logprob: -5.4488444328308105
    4. 'lambda' → logprob: -5.9488444328308105
    5. ' lambda' → logprob: -6.4488444328308105
    6. ' add' → logprob: -6.8238444328308105
    7. '   ' → logprob: -8.198844909667969
    8. '+' → logprob: -8.323844909667969
    9. ')' → logprob: -8.698844909667969
    10. '    ' → logprob: -9.698844909667969

Token 192: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07371346652507782
    2. '):' → logprob: -3.198713541030884
    3. '):
' → logprob: -3.823713541030884
    4. ').' → logprob: -5.198713302612305
    5. ',' → logprob: -6.573713302612305
    6. '   ' → logprob: -6.823713302612305
    7. ')
' → logprob: -8.573713302612305
    8. '):

' → logprob: -9.698713302612305
    9. '),' → logprob: -10.073713302612305
    10. ' )' → logprob: -10.448713302612305

Token 193: ' etc' (ID: 5178)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29133158922195435
    2. ' )' → logprob: -1.4163315296173096
    3. '   ' → logprob: -5.541331768035889
    4. ' or' → logprob: -6.041331768035889
    5. 'or' → logprob: -6.791331768035889
    6. '       ' → logprob: -7.041331768035889
    7. ' )
' → logprob: -8.04133129119873
    8. '           ' → logprob: -8.66633129119873
    9. ' ' → logprob: -8.79133129119873
    10. 'lambda' → logprob: -8.91633129119873

Token 194: '.).
' (ID: 184676)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7138485312461853
    2. '):
' → logprob: -1.21384859085083
    3. '):' → logprob: -1.58884859085083
    4. '   ' → logprob: -5.83884859085083
    5. ')
' → logprob: -5.96384859085083
    6. ').' → logprob: -6.08884859085083
    7. '```' → logprob: -8.463848114013672
    8. ' ' → logprob: -8.713848114013672
    9. '),' → logprob: -8.713848114013672
    10. ',' → logprob: -8.713848114013672

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011682034470140934
    2. ')' → logprob: -4.761682033538818
    3. '        
' → logprob: -6.886682033538818
    4. ')
' → logprob: -7.261682033538818
    5. '):
' → logprob: -8.011682510375977
    6. '
' → logprob: -8.761682510375977
    7. '\n' → logprob: -9.011682510375977
    8. '```' → logprob: -9.011682510375977
    9. '   ' → logprob: -9.261682510375977
    10. 'n' → logprob: -9.386682510375977

Token 196: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.2952994108200073
    2. ' e' → logprob: -1.4202994108200073
    3. 'self' → logprob: -4.920299530029297
    4. ' self' → logprob: -5.295299530029297
    5. '       ' → logprob: -6.670299530029297
    6. '   ' → logprob: -7.795299530029297
    7. '           ' → logprob: -11.045299530029297
    8. ' ' → logprob: -11.170299530029297
    9. '
' → logprob: -11.670299530029297
    10. '	e' → logprob: -12.170299530029297

Token 197: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04288237541913986
    2. ')' → logprob: -3.9178824424743652
    3. '):
' → logprob: -4.542882442474365
    4. ' ):' → logprob: -5.167882442474365
    5. ':' → logprob: -6.042882442474365
    6. '   ' → logprob: -6.292882442474365
    7. '=' → logprob: -7.792882442474365
    8. '=None' → logprob: -8.042881965637207
    9. ' )' → logprob: -8.792881965637207
    10. '  ' → logprob: -8.917881965637207

Token 198: 'Any' (ID: 11865)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6057392358779907
    2. ')' → logprob: -0.8557392358779907
    3. '):' → logprob: -3.855739116668701
    4. '):
' → logprob: -5.355739116668701
    5. ')e' → logprob: -6.480739116668701
    6. '       ' → logprob: -7.855739116668701
    7. 'self' → logprob: -7.980739116668701
    8. 'object' → logprob: -8.10573959350586
    9. '   ' → logprob: -8.35573959350586
    10. ' e' → logprob: -8.73073959350586

Token 199: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0071382587775588036
    2. '):
' → logprob: -5.257138252258301
    3. ' ):' → logprob: -6.757138252258301
    4. ')' → logprob: -7.382138252258301
    5. '   ' → logprob: -9.8821382522583
    6. ':' → logprob: -10.2571382522583
    7. '):

' → logprob: -11.2571382522583
    8. ' ' → logprob: -12.3821382522583
    9. ' ):
' → logprob: -12.3821382522583
    10. '):
' → logprob: -12.6321382522583

Token 200: ' The' (ID: 623)
  Prédit: ' The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.04673813283443451
    2. ' self' → logprob: -3.6717381477355957
    3. 'The' → logprob: -4.171738147735596
    4. ' e' → logprob: -6.296738147735596
    5. 'self' → logprob: -7.671738147735596
    6. '        ' → logprob: -7.671738147735596
    7. ' Identity' → logprob: -7.671738147735596
    8. ' ' → logprob: -8.046737670898438
    9. ' identity' → logprob: -8.046737670898438
    10. 'Identity' → logprob: -8.046737670898438

Token 201: ' identity' (ID: 16696)
  Prédit: ' identity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identity' → logprob: -0.04873622581362724
    2. 'identity' → logprob: -3.048736333847046
    3. 'e' → logprob: -9.923736572265625
    4. ' e' → logprob: -10.173736572265625
    5. '   ' → logprob: -11.548736572265625
    6. ' initial' → logprob: -11.673736572265625
    7. '_identity' → logprob: -12.048736572265625
    8. 'space' → logprob: -12.173736572265625
    9. ' default' → logprob: -12.173736572265625
    10. ' ' → logprob: -12.423736572265625

Token 202: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.08188173174858093
    2. 'element' → logprob: -2.5818817615509033
    3. '_element' → logprob: -6.456881523132324
    4. '       ' → logprob: -7.331881523132324
    5. '   ' → logprob: -7.456881523132324
    6. ' value' → logprob: -9.581881523132324
    7. '           ' → logprob: -10.581881523132324
    8. '    ' → logprob: -11.206881523132324
    9. ' ' → logprob: -11.456881523132324
    10. '	element' → logprob: -11.456881523132324

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38898149132728577
    2. '       ' → logprob: -1.7639814615249634
    3. '):
' → logprob: -2.763981580734253
    4. '   ' → logprob: -3.388981580734253
    5. 'for' → logprob: -3.638981580734253
    6. ':' → logprob: -4.638981342315674
    7. ')' → logprob: -5.013981342315674
    8. '):' → logprob: -5.013981342315674
    9. '           ' → logprob: -6.763981342315674
    10. '
' → logprob: -6.888981342315674

Token 204: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07842985540628433
    2. ' op' → logprob: -2.828429937362671
    3. 'the' → logprob: -4.203429698944092
    4. ' self' → logprob: -7.203429698944092
    5. 'self' → logprob: -8.07843017578125
    6. 'op' → logprob: -8.07843017578125
    7. ' operation' → logprob: -11.95343017578125
    8. '       ' → logprob: -12.57843017578125
    9. '   ' → logprob: -13.07843017578125
    10. '	op' → logprob: -13.45343017578125

Token 205: ' binary' (ID: 15600)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.42695721983909607
    2. ' operation' → logprob: -1.8019572496414185
    3. 'op' → logprob: -1.9269572496414185
    4. 'operation' → logprob: -3.301957130432129
    5. '	op' → logprob: -10.426957130432129
    6. 'self' → logprob: -10.551957130432129
    7. ' binary' → logprob: -10.926957130432129
    8. ' self' → logprob: -11.551957130432129
    9. 'binary' → logprob: -12.051957130432129
    10. '   ' → logprob: -12.051957130432129

Token 206: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.06748541444540024
    2. ' ' → logprob: -3.1924853324890137
    3. 'operation' → logprob: -3.9424853324890137
    4. '   ' → logprob: -6.192485332489014
    5. ' op' → logprob: -7.317485332489014
    6. '_operation' → logprob: -7.442485332489014
    7. ' operator' → logprob: -7.817485332489014
    8. ' element' → logprob: -8.192485809326172
    9. '       ' → logprob: -8.692485809326172
    10. '  ' → logprob: -8.692485809326172

Token 207: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07026529312133789
    2. '):' → logprob: -3.195265293121338
    3. '       ' → logprob: -4.195265293121338
    4. '   ' → logprob: -4.570265293121338
    5. ')' → logprob: -7.195265293121338
    6. ' ):
' → logprob: -8.07026481628418
    7. '
' → logprob: -8.32026481628418
    8. ')
' → logprob: -9.57026481628418
    9. '):
' → logprob: -10.44526481628418
    10. '):

' → logprob: -10.82026481628418

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.837811088189483e-05
    2. ')' → logprob: -10.375068664550781
    3. '):
' → logprob: -10.875068664550781
    4. ')
' → logprob: -11.625068664550781
    5. 'self' → logprob: -13.250068664550781
    6. '):' → logprob: -13.500068664550781
    7. '        
' → logprob: -13.625068664550781
    8. '```' → logprob: -13.625068664550781
    9. ' self' → logprob: -13.750068664550781
    10. '   ' → logprob: -14.250068664550781

Token 209: ' Example' (ID: 24855)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19164294004440308
    2. 'self' → logprob: -2.441642999649048
    3. ' self' → logprob: -2.441642999649048
    4. ' super' → logprob: -8.816642761230469
    5. 'import' → logprob: -9.316642761230469
    6. 'super' → logprob: -9.566642761230469
    7. '   ' → logprob: -10.566642761230469
    8. ' import' → logprob: -12.316642761230469
    9. '```' → logprob: -12.316642761230469
    10. '        
' → logprob: -12.441642761230469

Token 210: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3967127203941345
    2. '):
' → logprob: -1.6467127799987793
    3. ':' → logprob: -2.3967127799987793
    4. '       ' → logprob: -3.6467127799987793
    5. '   ' → logprob: -4.521712779998779
    6. ':
' → logprob: -6.146712779998779
    7. '(self' → logprob: -6.396712779998779
    8. ')' → logprob: -7.021712779998779
    9. '=' → logprob: -7.646712779998779
    10. ' =' → logprob: -8.521712303161621

Token 211: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004837838001549244
    2. '```' → logprob: -5.879837989807129
    3. ' self' → logprob: -7.129837989807129
    4. '        ' → logprob: -8.004837989807129
    5. '        
' → logprob: -8.504837989807129
    6. '           ' → logprob: -8.504837989807129
    7. 'self' → logprob: -8.879837989807129
    8. '``' → logprob: -9.879837989807129
    9. '   ' → logprob: -10.629837989807129
    10. '):
' → logprob: -10.754837989807129

Token 212: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14324377477169037
    2. ' self' → logprob: -2.7682437896728516
    3. ' seg' → logprob: -3.5182437896728516
    4. 'self' → logprob: -4.018243789672852
    5. ' st' → logprob: -5.143243789672852
    6. ' segment' → logprob: -5.893243789672852
    7. '```' → logprob: -6.018243789672852
    8. '        ' → logprob: -6.143243789672852
    9. ' Segment' → logprob: -6.518243789672852
    10. 'seg' → logprob: -6.643243789672852

Token 213: ' For' (ID: 2214)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.14475752413272858
    2. 'self' → logprob: -2.7697575092315674
    3. '    ' → logprob: -4.0197577476501465
    4. '       ' → logprob: -4.5197577476501465
    5. ' segment' → logprob: -4.6447577476501465
    6. ' ' → logprob: -5.0197577476501465
    7. '        ' → logprob: -5.1447577476501465
    8. ' class' → logprob: -5.6447577476501465
    9. '   ' → logprob: -6.3947577476501465
    10. ' Segment' → logprob: -6.3947577476501465

Token 214: ' range' (ID: 3352)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.10740885138511658
    2. ' range' → logprob: -2.9824087619781494
    3. ' min' → logprob: -4.3574090003967285
    4. ' summ' → logprob: -4.7324090003967285
    5. ' max' → logprob: -4.8574090003967285
    6. ' computing' → logprob: -5.1074090003967285
    7. 'sum' → logprob: -5.2324090003967285
    8. ' segment' → logprob: -5.9824090003967285
    9. ' calculating' → logprob: -6.2324090003967285
    10. ' a' → logprob: -6.2324090003967285

Token 215: ' minimum' (ID: 11085)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.9593099355697632
    2. ' sum' → logprob: -1.7093099355697632
    3. ' minimum' → logprob: -1.7093099355697632
    4. '_sum' → logprob: -2.2093100547790527
    5. ' min' → logprob: -2.8343100547790527
    6. '   ' → logprob: -3.0843100547790527
    7. 'sum' → logprob: -4.334310054779053
    8. 'min' → logprob: -4.459310054779053
    9. ' _' → logprob: -4.959310054779053
    10. 'minimum' → logprob: -5.959310054779053

Token 216: ' query' (ID: 5703)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.8933485150337219
    2. ' query' → logprob: -1.1433484554290771
    3. '   ' → logprob: -1.5183484554290771
    4. ' _' → logprob: -3.768348455429077
    5. ' queries' → logprob: -4.143348693847656
    6. ' ' → logprob: -5.518348693847656
    7. 'query' → logprob: -5.643348693847656
    8. '_segment' → logprob: -6.143348693847656
    9. '_sum' → logprob: -6.643348693847656
    10. '_queries' → logprob: -7.893348693847656

Token 217: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5158743262290955
    2. '
' → logprob: -1.7658743858337402
    3. '   ' → logprob: -2.6408743858337402
    4. ':
' → logprob: -2.7658743858337402
    5. '```' → logprob: -3.2658743858337402
    6. ':' → logprob: -4.26587438583374
    7. ',' → logprob: -4.39087438583374
    8. '):
' → logprob: -5.01587438583374
    9. ')
' → logprob: -5.64087438583374
    10. '        ' → logprob: -6.01587438583374

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10074788331985474
    2. '       ' → logprob: -2.85074782371521
    3. '               ' → logprob: -3.97574782371521
    4. '            ' → logprob: -4.975748062133789
    5. 'self' → logprob: -5.350748062133789
    6. ' self' → logprob: -5.850748062133789
    7. '```' → logprob: -6.225748062133789
    8. '
' → logprob: -6.850748062133789
    9. '        ' → logprob: -7.725748062133789
    10. '   ' → logprob: -8.225748062133789

Token 219: ' Segment' (ID: 64922)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4360615611076355
    2. 'self' → logprob: -1.5610616207122803
    3. '       ' → logprob: -3.0610616207122803
    4. '           ' → logprob: -3.8110616207122803
    5. '        ' → logprob: -4.311061382293701
    6. ' Segment' → logprob: -4.561061382293701
    7. 'Segment' (adapté à ' Segment') → logprob: -4.561061382293701
    8. ' segment' → logprob: -4.686061382293701
    9. ' seg' → logprob: -4.936061382293701
    10. '```' → logprob: -5.186061382293701

Token 220: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.3199920178740285e-05
    2. '<Tree' → logprob: -12.000022888183594
    3. '(Tree' → logprob: -12.375022888183594
    4. 'Tre' → logprob: -12.500022888183594
    5. '   ' → logprob: -12.750022888183594
    6. ' Tree' → logprob: -13.000022888183594
    7. '	Tree' → logprob: -13.875022888183594
    8. '(' → logprob: -14.375022888183594
    9. '_T' → logprob: -14.625022888183594
    10. '(
' → logprob: -15.125022888183594

Token 221: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1217813491821289
    2. '(' → logprob: -2.246781349182129
    3. '(
' → logprob: -5.496781349182129
    4. '       ' → logprob: -6.246781349182129
    5. '   ' → logprob: -6.746781349182129
    6. ')' → logprob: -6.746781349182129
    7. ' (' → logprob: -9.246781349182129
    8. '.from' → logprob: -9.871781349182129
    9. '(min' → logprob: -9.871781349182129
    10. ')(' → logprob: -9.996781349182129

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40037304162979126
    2. ')' → logprob: -1.1503729820251465
    3. '   ' → logprob: -4.9003729820251465
    4. '       ' → logprob: -6.2753729820251465
    5. ')
' → logprob: -6.2753729820251465
    6. ',n' → logprob: -7.5253729820251465
    7. '=' → logprob: -8.150373458862305
    8. '(n' → logprob: -8.275373458862305
    9. ').' → logprob: -8.400373458862305
    10. ' ,' → logprob: -8.900373458862305

Token 223: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.26137927174568176
    2. ' min' → logprob: -1.5113792419433594
    3. '   ' → logprob: -5.011379241943359
    4. 'lambda' → logprob: -6.261379241943359
    5. ' lambda' → logprob: -7.761379241943359
    6. ' op' → logprob: -8.26137924194336
    7. 'op' → logprob: -10.13637924194336
    8. '       ' → logprob: -10.51137924194336
    9. '           ' → logprob: -10.63637924194336
    10. ' ' → logprob: -11.26137924194336

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18047082424163818
    2. ')' → logprob: -1.8054708242416382
    3. '),' → logprob: -8.43047046661377
    4. '   ' → logprob: -8.55547046661377
    5. ')
' → logprob: -9.05547046661377
    6. ' ,' → logprob: -9.80547046661377
    7. ' )' → logprob: -9.93047046661377
    8. ',)' → logprob: -11.05547046661377
    9. '))' → logprob: -11.43047046661377
    10. ')`' → logprob: -11.55547046661377

Token 225: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.011108535341918468
    2. ' float' → logprob: -4.6361083984375
    3. '0' → logprob: -6.8861083984375
    4. 'e' → logprob: -9.1361083984375
    5. 'math' → logprob: -9.6361083984375
    6. '   ' → logprob: -10.1361083984375
    7. 'inf' → logprob: -10.1361083984375
    8. ')' → logprob: -10.5111083984375
    9. ' ' → logprob: -10.7611083984375
    10. '(float' → logprob: -12.1361083984375

Token 226: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.881560041918419e-05
    2. '10' → logprob: -10.875039100646973
    3. 'math' → logprob: -11.375039100646973
    4. '(float' → logprob: -12.750039100646973
    5. ' float' → logprob: -12.750039100646973
    6. 'inf' → logprob: -13.375039100646973
    7. '1' → logprob: -14.625039100646973
    8. '0' → logprob: -15.625039100646973
    9. 'e' → logprob: -16.375038146972656
    10. 'int' → logprob: -16.375038146972656

Token 227: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28747573494911194
    2. '**' → logprob: -1.4124757051467896
    3. '0' → logprob: -6.2874755859375
    4. '   ' → logprob: -6.6624755859375
    5. ' **' → logprob: -7.6624755859375
    6. ' )' → logprob: -7.6624755859375
    7. ')**' → logprob: -7.6624755859375
    8. '000' → logprob: -7.7874755859375
    9. '       ' → logprob: -7.9124755859375
    10. '**)' → logprob: -7.9124755859375

Token 228: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.45848218582978e-06
    2. '18' → logprob: -13.12500286102295
    3. '10' → logprob: -16.000001907348633
    4. '15' → logprob: -16.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. '``' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '7' → logprob: -18.250001907348633
    9. '12' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.375001907348633

Token 229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006596359424293041
    2. ')
' → logprob: -5.131596565246582
    3. '       ' → logprob: -8.006596565246582
    4. '   ' → logprob: -8.381596565246582
    5. ' )' → logprob: -9.381596565246582
    6. ')
' → logprob: -12.131596565246582
    7. ')`' → logprob: -12.756596565246582
    8. ')

' → logprob: -13.131596565246582
    9. ' )
' → logprob: -13.506596565246582
    10. '    ' → logprob: -13.756596565246582

Token 230: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09606826305389404
    2. ')' → logprob: -2.4710683822631836
    3. '):
' → logprob: -6.471068382263184
    4. '
' → logprob: -6.596068382263184
    5. ')
' → logprob: -6.721068382263184
    6. '):' → logprob: -7.096068382263184
    7. '```' → logprob: -7.096068382263184
    8. '   ' → logprob: -7.346068382263184
    9. '")' → logprob: -8.721068382263184
    10. '        
' → logprob: -9.096068382263184

Token 231: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010434083640575409
    2. ')' → logprob: -4.760434150695801
    3. ')
' → logprob: -7.135434150695801
    4. 'self' → logprob: -8.3854341506958
    5. '```' → logprob: -8.5104341506958
    6. '
' → logprob: -9.1354341506958
    7. '):' → logprob: -9.2604341506958
    8. '   ' → logprob: -9.5104341506958
    9. '):
' → logprob: -9.7604341506958
    10. '        
' → logprob: -9.8854341506958

Token 232: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6795268654823303
    2. ' for' → logprob: -1.9295268058776855
    3. 'For' → logprob: -2.1795268058776855
    4. 'Segment' → logprob: -3.1795268058776855
    5. ' self' → logprob: -3.4295268058776855
    6. ')' → logprob: -3.6795268058776855
    7. ' For' → logprob: -3.6795268058776855
    8. 'self' → logprob: -3.9295268058776855
    9. '           ' → logprob: -4.1795268058776855
    10. '   ' → logprob: -4.3045268058776855

Token 233: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03642814978957176
    2. ' sum' → logprob: -3.661428213119507
    3. 'range' → logprob: -4.786427974700928
    4. 'sum' → logprob: -7.161427974700928
    5. ' max' → logprob: -7.286427974700928
    6. 'max' → logprob: -8.911428451538086
    7. ' segment' → logprob: -9.911428451538086
    8. ' ranges' → logprob: -10.911428451538086
    9. ' min' → logprob: -11.036428451538086
    10. 'Range' → logprob: -11.911428451538086

Token 234: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.20328959822654724
    2. ' max' → logprob: -1.8282896280288696
    3. 'sum' → logprob: -4.45328950881958
    4. 'max' → logprob: -4.70328950881958
    5. ' maximum' → logprob: -6.07828950881958
    6. '_sum' → logprob: -9.578289985656738
    7. ' min' → logprob: -9.703289985656738
    8. ' minimum' → logprob: -10.453289985656738
    9. '   ' → logprob: -10.578289985656738
    10. ' ' → logprob: -10.828289985656738

Token 235: ' query' (ID: 5703)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19276882708072662
    2. ' query' → logprob: -2.8177688121795654
    3. '_query' → logprob: -2.9427688121795654
    4. '   ' → logprob: -4.0677690505981445
    5. ' (' → logprob: -4.3177690505981445
    6. ' ,' → logprob: -4.8177690505981445
    7. ')' → logprob: -4.8177690505981445
    8. 'Query' → logprob: -5.3177690505981445
    9. 'query' → logprob: -5.4427690505981445
    10. 'Tree' → logprob: -7.0677690505981445

Token 236: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20534323155879974
    2. ',' → logprob: -2.080343246459961
    3. ':' → logprob: -3.955343246459961
    4. '):
' → logprob: -4.080343246459961
    5. '):' → logprob: -4.455343246459961
    6. ':
' → logprob: -5.330343246459961
    7. ' (' → logprob: -6.080343246459961
    8. '(' → logprob: -6.330343246459961
    9. '   ' → logprob: -6.330343246459961
    10. ')' → logprob: -6.830343246459961

Token 237: '           ' (ID: 352)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.44449731707572937
    2. '           ' → logprob: -1.3194973468780518
    3. 'Segment' → logprob: -2.4444973468780518
    4. '       ' → logprob: -6.444497108459473
    5. '            ' → logprob: -6.444497108459473
    6. '   ' → logprob: -7.569497108459473
    7. '               ' → logprob: -8.319497108459473
    8. ' Seg' → logprob: -8.819497108459473
    9. ' self' → logprob: -9.194497108459473
    10. '    ' → logprob: -9.444497108459473

Token 238: ' Segment' (ID: 64922)
  Prédit: ' Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.31353312730789185
    2. 'Segment' (adapté à ' Segment') → logprob: -1.313533067703247
    3. '       ' → logprob: -9.313532829284668
    4. ' self' → logprob: -9.938532829284668
    5. ' Seg' → logprob: -10.063532829284668
    6. 'self' → logprob: -10.438532829284668
    7. '           ' → logprob: -11.188532829284668
    8. '   ' → logprob: -11.438532829284668
    9. '        ' → logprob: -11.813532829284668
    10. '    ' → logprob: -12.563532829284668

Token 239: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -8.77627644513268e-06
    2. ' Tree' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '_tree' → logprob: -14.500008583068848
    5. '<Tree' → logprob: -14.625008583068848
    6. '	Tree' → logprob: -14.750008583068848
    7. '(Tree' → logprob: -15.750008583068848
    8. 'Trees' → logprob: -16.250009536743164
    9. 'tree' → logprob: -16.375009536743164
    10. '(n' → logprob: -16.375009536743164

Token 240: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003302358789369464
    2. '(' → logprob: -5.753302574157715
    3. ' (' → logprob: -9.378302574157715
    4. '(len' → logprob: -10.878302574157715
    5. ',' → logprob: -11.378302574157715
    6. '(
' → logprob: -12.628302574157715
    7. ')' → logprob: -13.003302574157715
    8. '(s' → logprob: -13.753302574157715
    9. '(m' → logprob: -14.753302574157715
    10. '   ' → logprob: -15.128302574157715

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004988207365386188
    2. ' ,' → logprob: -7.7504987716674805
    3. '   ' → logprob: -10.12549877166748
    4. ',n' → logprob: -11.75049877166748
    5. ',min' → logprob: -12.00049877166748
    6. ',sum' → logprob: -12.87549877166748
    7. ')' → logprob: -13.00049877166748
    8. '(' → logprob: -13.50049877166748
    9. ',
' → logprob: -13.75049877166748
    10. ',max' → logprob: -14.50049877166748

Token 242: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.15707550942897797
    2. 'sum' → logprob: -2.6570754051208496
    3. ' lambda' → logprob: -2.6570754051208496
    4. ' sum' → logprob: -5.65707540512085
    5. 'min' → logprob: -8.032075881958008
    6. '   ' → logprob: -8.407075881958008
    7. 'max' → logprob: -8.532075881958008
    8. 'operator' → logprob: -8.532075881958008
    9. ')' → logprob: -8.782075881958008
    10. '(lambda' → logprob: -8.907075881958008

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7102677822113037
    2. 'x' → logprob: -1.4602677822113037
    3. ' x' → logprob: -1.8352677822113037
    4. ' a' → logprob: -2.2102677822113037
    5. 'acc' → logprob: -5.585268020629883
    6. ' acc' → logprob: -5.960268020629883
    7. 'lambda' → logprob: -8.710268020629883
    8. 'prev' → logprob: -8.960268020629883
    9. 'l' → logprob: -9.210268020629883
    10. 's' → logprob: -9.585268020629883

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16711227595806122
    2. ',b' → logprob: -1.9171122312545776
    3. ' ,' → logprob: -5.042112350463867
    4. ',x' → logprob: -8.417112350463867
    5. ',a' → logprob: -9.667112350463867
    6. 'b' → logprob: -10.292112350463867
    7. ',k' → logprob: -11.292112350463867
    8. ',f' → logprob: -11.417112350463867
    9. ',l' → logprob: -11.417112350463867
    10. ' b' → logprob: -11.917112350463867

Token 245: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005929274018853903
    2. ' b' → logprob: -5.130929470062256
    3. '   ' → logprob: -15.505928993225098
    4. '    ' → logprob: -15.630928993225098
    5. ',' → logprob: -16.380929946899414
    6. ',b' → logprob: -16.505929946899414
    7. 'a' → logprob: -17.005929946899414
    8. ' ' → logprob: -17.380929946899414
    9. '	b' → logprob: -17.630929946899414
    10. '  ' → logprob: -17.630929946899414

Token 246: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006528026424348354
    2. ' :' → logprob: -5.381527900695801
    3. ',' → logprob: -6.506527900695801
    4. ',a' → logprob: -8.7565279006958
    5. 'a' → logprob: -9.1315279006958
    6. ':a' → logprob: -9.5065279006958
    7. ' a' → logprob: -10.0065279006958
    8. ' ,' → logprob: -10.8815279006958
    9. '   ' → logprob: -13.1315279006958
    10. ':return' → logprob: -13.3815279006958

Token 247: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04858884960412979
    2. ' a' → logprob: -3.048588752746582
    3. '   ' → logprob: -14.173588752746582
    4. '    ' → logprob: -14.923588752746582
    5. '	a' → logprob: -15.423588752746582
    6. ' ' → logprob: -16.6735897064209
    7. ' ' → logprob: -17.0485897064209
    8. '  ' → logprob: -17.4235897064209
    9. '(a' → logprob: -19.0485897064209
    10. ')a' → logprob: -19.5485897064209

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869336247444153
    2. '+' → logprob: -1.1369335651397705
    3. '+b' → logprob: -10.011933326721191
    4. ' ' → logprob: -11.136933326721191
    5. ' ' → logprob: -13.636933326721191
    6. ' ,' → logprob: -14.511933326721191
    7. ',' → logprob: -14.761933326721191
    8. '   ' → logprob: -14.886933326721191
    9. ' plus' → logprob: -15.386933326721191
    10. '+
' → logprob: -16.386934280395508

Token 249: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740777015686035
    2. ' b' → logprob: -0.9740777015686035
    3. ' ' → logprob: -14.849077224731445
    4. '	b' → logprob: -16.349077224731445
    5. ' ' → logprob: -16.974077224731445
    6. ')b' → logprob: -17.099077224731445
    7. '_b' → logprob: -17.724077224731445
    8. ',b' → logprob: -17.849077224731445
    9. ' б' → logprob: -17.974077224731445
    10. '    ' → logprob: -18.099077224731445

Token 250: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007491742726415396
    2. ',' → logprob: -5.257491588592529
    3. ')
' → logprob: -6.507491588592529
    4. ' )' → logprob: -7.507491588592529
    5. '   ' → logprob: -9.007492065429688
    6. '       ' → logprob: -10.507492065429688
    7. '),' → logprob: -11.257492065429688
    8. ' ,' → logprob: -11.882492065429688
    9. '):' → logprob: -12.007492065429688
    10. ',
' → logprob: -12.007492065429688

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.879620552062988
    4. ')' → logprob: -16.879619598388672
    5. '  ' → logprob: -17.629619598388672
    6. '       ' → logprob: -19.317119598388672
    7. '    ' → logprob: -19.817119598388672
    8. '00' → logprob: -19.942119598388672
    9. '     ' → logprob: -20.192119598388672
    10. '۰' → logprob: -20.192119598388672

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -19.625001907348633
    4. ')' → logprob: -20.125001907348633
    5. '00' → logprob: -20.750001907348633
    6. '０' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '000' → logprob: -21.625001907348633
    9. '
' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.562501907348633

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002602629829198122
    2. ')
' → logprob: -8.500260353088379
    3. '       ' → logprob: -10.750260353088379
    4. ' )' → logprob: -10.750260353088379
    5. '   ' → logprob: -11.250260353088379
    6. ')

' → logprob: -14.875260353088379
    7. ')`' → logprob: -16.000259399414062
    8. '
' → logprob: -16.750259399414062
    9. ')
' → logprob: -16.750259399414062
    10. ' ' → logprob: -16.875259399414062

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002401339588686824
    2. ')' → logprob: -7.002401351928711
    3. '):
' → logprob: -7.377401351928711
    4. '   ' → logprob: -8.627401351928711
    5. '):' → logprob: -8.752401351928711
    6. '```' → logprob: -8.752401351928711
    7. '
' → logprob: -9.252401351928711
    8. ')
' → logprob: -9.752401351928711
    9. '        
' → logprob: -9.752401351928711
    10. 'self' → logprob: -10.127401351928711

Token 255: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005130457691848278
    2. '):
' → logprob: -6.255130290985107
    3. ')' → logprob: -6.755130290985107
    4. 'self' → logprob: -6.880130290985107
    5. '):' → logprob: -8.255130767822266
    6. '
' → logprob: -8.505130767822266
    7. '   ' → logprob: -9.130130767822266
    8. ' self' → logprob: -9.255130767822266
    9. '        
' → logprob: -9.505130767822266
    10. '```' → logprob: -9.630130767822266

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001911432045744732
    2. 'self' → logprob: -8.750190734863281
    3. ' self' → logprob: -10.625190734863281
    4. 'import' → logprob: -12.250190734863281
    5. '   ' → logprob: -13.375190734863281
    6. '```' → logprob: -13.625190734863281
    7. '        
' → logprob: -15.250190734863281
    8. '      ' → logprob: -15.875190734863281
    9. 'super' → logprob: -16.00019073486328
    10. '           ' → logprob: -16.00019073486328

Token 257: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.090048648416996
    2. '       ' → logprob: -2.8400485515594482
    3. ' self' → logprob: -3.5900485515594482
    4. 'import' → logprob: -9.840048789978027
    5. '   ' → logprob: -10.465048789978027
    6. 'super' → logprob: -12.340048789978027
    7. 'from' → logprob: -12.715048789978027
    8. ' ' → logprob: -13.715048789978027
    9. '	self' → logprob: -14.090048789978027
    10. ' super' → logprob: -14.840048789978027

Token 258: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.039209187030792236
    2. '.' → logprob: -4.039209365844727
    3. ' .' → logprob: -4.164209365844727
    4. '._' → logprob: -5.289209365844727
    5. '.size' → logprob: -8.664209365844727
    6. 'n' → logprob: -10.789209365844727
    7. '   ' → logprob: -11.789209365844727
    8. ' ' → logprob: -11.914209365844727
    9. ' n' → logprob: -12.039209365844727
    10. '.__' → logprob: -12.164209365844727

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741794168949127
    2. '=' → logprob: -0.9741793870925903
    3. '   ' → logprob: -9.8491792678833
    4. ' ' → logprob: -10.5991792678833
    5. '    ' → logprob: -11.3491792678833
    6. '=len' → logprob: -12.4741792678833
    7. '=int' → logprob: -12.7241792678833
    8. '  ' → logprob: -13.3491792678833
    9. '=n' → logprob: -13.7241792678833
    10. '       ' → logprob: -14.4741792678833

Token 260: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028183520771563053
    2. 'n' → logprob: -8.250282287597656
    3. ' ' → logprob: -10.875282287597656
    4. '   ' → logprob: -13.875282287597656
    5. '
' → logprob: -14.375282287597656
    6. ' n' → logprob: -16.625282287597656
    7. '```' → logprob: -17.000282287597656
    8. '  ' → logprob: -17.625282287597656
    9. '0' → logprob: -17.750282287597656
    10. '     ' → logprob: -18.250282287597656

Token 261: '                      ' (ID: 10682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05933311581611633
    2. '
' → logprob: -3.184333086013794
    3. 'self' → logprob: -4.184333324432373
    4. 'import' → logprob: -8.184332847595215
    5. '        
' → logprob: -8.559332847595215
    6. ' self' → logprob: -8.809332847595215
    7. '   ' → logprob: -9.184332847595215
    8. '1' → logprob: -9.184332847595215
    9. '*' → logprob: -10.684332847595215
    10. 'n' → logprob: -11.559332847595215

Token 262: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10176579654216766
    2. '       ' → logprob: -2.7267658710479736
    3. 'self' → logprob: -3.4767658710479736
    4. '        
' → logprob: -8.601765632629395
    5. 'import' → logprob: -9.476765632629395
    6. '1' → logprob: -9.851765632629395
    7. ' self' → logprob: -9.851765632629395
    8. '   ' → logprob: -11.351765632629395
    9. 'while' → logprob: -11.601765632629395
    10. '
' → logprob: -12.226765632629395

Token 263: ' Number' (ID: 9184)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005614925175905228
    2. ' ' → logprob: -7.625561714172363
    3. 'n' → logprob: -9.750561714172363
    4. '(' → logprob: -12.500561714172363
    5. '   ' → logprob: -12.500561714172363
    6. 'self' → logprob: -12.625561714172363
    7. '
' → logprob: -13.625561714172363
    8. '0' → logprob: -14.375561714172363
    9. '__' → logprob: -14.875561714172363
    10. 'size' → logprob: -15.000561714172363

Token 264: ' of' (ID: 328)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.553767740726471
    2. 'of' → logprob: -1.5537676811218262
    3. '_of' → logprob: -2.178767681121826
    4. ' of' → logprob: -3.053767681121826
    5. ' self' → logprob: -3.678767681121826
    6. '       ' → logprob: -4.553767681121826
    7. '_' → logprob: -4.803767681121826
    8. '=' → logprob: -6.053767681121826
    9. '=self' → logprob: -6.178767681121826
    10. '   ' → logprob: -6.803767681121826

Token 265: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.20835468173027039
    2. ' elements' → logprob: -1.8333547115325928
    3. 'self' → logprob: -3.7083547115325928
    4. ' self' → logprob: -6.708354473114014
    5. ' ' → logprob: -6.958354473114014
    6. 'le' → logprob: -7.458354473114014
    7. '_elements' → logprob: -8.083354949951172
    8. ' leaves' → logprob: -8.458354949951172
    9. '1' → logprob: -9.333354949951172
    10. 'ele' → logprob: -9.708354949951172

Token 266: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9598878026008606
    2. '
' → logprob: -1.0848877429962158
    3. 'self' → logprob: -1.3348877429962158
    4. '<|end|>' → logprob: -4.834887981414795
    5. ' self' → logprob: -5.334887981414795
    6. '        
' → logprob: -6.834887981414795
    7. '   ' → logprob: -8.084887504577637
    8. '<|end|>' → logprob: -8.209887504577637
    9. 'import' → logprob: -8.709887504577637
    10. '```' → logprob: -8.959887504577637

Token 267: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08962825685739517
    2. 'the' → logprob: -3.339628219604492
    3. ' self' → logprob: -3.964628219604492
    4. 'n' → logprob: -4.214628219604492
    5. ' the' → logprob: -4.589628219604492
    6. '1' → logprob: -5.714628219604492
    7. '   ' → logprob: -6.464628219604492
    8. ' ' → logprob: -7.339628219604492
    9. ' n' → logprob: -7.464628219604492
    10. '0' → logprob: -9.839628219604492

Token 268: ' input' (ID: 3422)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.25245922803878784
    2. 'tree' → logprob: -2.0024592876434326
    3. ' segment' → logprob: -3.7524592876434326
    4. 'next' → logprob: -4.3774590492248535
    5. 'original' → logprob: -4.5024590492248535
    6. 'complete' → logprob: -5.1274590492248535
    7. 'self' → logprob: -5.2524590492248535
    8. ' tree' → logprob: -5.2524590492248535
    9. ' ' → logprob: -5.3774590492248535
    10. ' next' → logprob: -5.6274590492248535

Token 269: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6455146074295044
    2. '_array' → logprob: -1.7705146074295044
    3. 'self' → logprob: -2.395514488220215
    4. '_' → logprob: -3.020514488220215
    5. '
' → logprob: -3.270514488220215
    6. '_size' → logprob: -3.645514488220215
    7. '_elements' → logprob: -3.645514488220215
    8. ' array' → logprob: -4.395514488220215
    9. '_tree' → logprob: -4.645514488220215
    10. '   ' → logprob: -4.770514488220215

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0389387384057045
    2. 'self' → logprob: -3.4139387607574463
    3. '
' → logprob: -5.913938522338867
    4. ' self' → logprob: -6.288938522338867
    5. '<|end|>' → logprob: -7.663938522338867
    6. ',' → logprob: -9.413938522338867
    7. 'n' → logprob: -10.163938522338867
    8. '   ' → logprob: -10.413938522338867
    9. '```' → logprob: -11.163938522338867
    10. 'import' → logprob: -11.288938522338867

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12505052983760834
    2. 'self' → logprob: -2.5000505447387695
    3. ' self' → logprob: -3.3750505447387695
    4. '```' → logprob: -7.3750505447387695
    5. '
' → logprob: -7.8750505447387695
    6. '   ' → logprob: -9.37505054473877
    7. 'import' → logprob: -10.12505054473877
    8. '        
' → logprob: -10.25005054473877
    9. ' ' → logprob: -11.50005054473877
    10. '        ' → logprob: -12.00005054473877

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0023513841442763805
    2. 'from' → logprob: -7.1273512840271
    3. 'import' → logprob: -7.2523512840271
    4. '   ' → logprob: -7.7523512840271
    5. ' self' → logprob: -8.502351760864258
    6. 'size' → logprob: -9.127351760864258
    7. '       ' → logprob: -9.877351760864258
    8. ' ' → logprob: -11.127351760864258
    9. 'op' → logprob: -11.502351760864258
    10. '_op' → logprob: -13.002351760864258

Token 273: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.48105427622795105
    2. '.size' → logprob: -0.9810543060302734
    3. '.n' → logprob: -5.856054306030273
    4. '._' → logprob: -6.481054306030273
    5. '.sz' → logprob: -7.606054306030273
    6. 'size' → logprob: -8.356054306030273
    7. '.data' → logprob: -8.356054306030273
    8. '.' → logprob: -8.356054306030273
    9. ' .' → logprob: -8.731054306030273
    10. '.tree' → logprob: -8.856054306030273

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326910853385925
    2. ' =' → logprob: -1.3132691383361816
    3. '   ' → logprob: -12.313268661499023
    4. ' ' → logprob: -13.563268661499023
    5. '    ' → logprob: -14.313268661499023
    6. '  ' → logprob: -14.938268661499023
    7. ',' → logprob: -15.688268661499023
    8. '     ' → logprob: -15.938268661499023
    9. '      ' → logprob: -16.813268661499023
    10. ' =
' → logprob: -16.938268661499023

Token 275: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.38687169551849365
    2. 'op' → logprob: -1.1368716955184937
    3. '	op' → logprob: -14.761871337890625
    4. '(op' → logprob: -15.511871337890625
    5. '_op' → logprob: -16.511871337890625
    6. ' ' → logprob: -18.511871337890625
    7. '   ' → logprob: -18.511871337890625
    8. 'o' → logprob: -18.511871337890625
    9. '       ' → logprob: -18.886871337890625
    10. '    ' → logprob: -19.636871337890625

Token 276: '                    ' (ID: 7692)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015568660572171211
    2. '
' → logprob: -4.390568733215332
    3. '<|end|>' → logprob: -6.015568733215332
    4. 'self' → logprob: -7.515568733215332
    5. '<|end|>' → logprob: -10.890568733215332
    6. '        
' → logprob: -10.890568733215332
    7. '   ' → logprob: -12.140568733215332
    8. '  
' → logprob: -12.390568733215332
    9. ',' → logprob: -12.515568733215332
    10. ' self' → logprob: -13.015568733215332

Token 277: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14158007502555847
    2. '       ' → logprob: -2.141580104827881
    3. '<|end|>' → logprob: -4.391580104827881
    4. '        
' → logprob: -7.141580104827881
    5. '  
' → logprob: -7.266580104827881
    6. 'self' → logprob: -8.516579627990723
    7. ' 
' → logprob: -8.641579627990723
    8. '    
' → logprob: -8.766579627990723
    9. '<|end|>' → logprob: -9.891579627990723
    10. ' ' → logprob: -10.516579627990723

Token 278: ' Binary' (ID: 32672)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.42911601066589355
    2. ' op' → logprob: -1.0541160106658936
    3. 'e' → logprob: -7.929116249084473
    4. ' e' → logprob: -10.304116249084473
    5. ' ' → logprob: -12.179116249084473
    6. 'self' → logprob: -12.554116249084473
    7. '	op' → logprob: -12.679116249084473
    8. '_op' → logprob: -12.929116249084473
    9. 'o' → logprob: -13.179116249084473
    10. '   ' → logprob: -13.554116249084473

Token 279: ' operation' (ID: 9506)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -1.1213455200195312
    2. '_op' → logprob: -1.4963455200195312
    3. '_operation' → logprob: -1.6213455200195312
    4. ' operation' → logprob: -2.2463455200195312
    5. 'op' → logprob: -2.3713455200195312
    6. 'operation' → logprob: -3.2463455200195312
    7. '	op' → logprob: -5.621345520019531
    8. ' ' → logprob: -5.871345520019531
    9. '   ' → logprob: -5.996345520019531
    10. ' operator' → logprob: -6.746345520019531

Token 280: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06744328886270523
    2. '<|end|>' → logprob: -3.317443370819092
    3. '
' → logprob: -3.567443370819092
    4. ',' → logprob: -8.317442893981934
    5. 'self' → logprob: -8.817442893981934
    6. '  
' → logprob: -9.192442893981934
    7. '        
' → logprob: -9.317442893981934
    8. '<|end|>' → logprob: -9.942442893981934
    9. ',
' → logprob: -10.442442893981934
    10. '```' → logprob: -11.442442893981934

Token 281: ' use' (ID: 1199)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6783329248428345
    2. ' self' → logprob: -1.5533329248428345
    3. ' apply' → logprob: -2.303332805633545
    4. 'apply' → logprob: -2.928332805633545
    5. ' use' → logprob: -3.178332805633545
    6. ' perform' → logprob: -3.303332805633545
    7. 'combine' → logprob: -4.053332805633545
    8. ' combine' → logprob: -4.428332805633545
    9. 'perform' → logprob: -4.803332805633545
    10. ' be' → logprob: -4.928332805633545

Token 282: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017572871875017881
    2. '<|end|>' → logprob: -7.2517571449279785
    3. '
' → logprob: -7.6267571449279785
    4. 'self' → logprob: -7.7517571449279785
    5. ',' → logprob: -9.626757621765137
    6. ',
' → logprob: -11.001757621765137
    7. ' self' → logprob: -11.126757621765137
    8. '        
' → logprob: -11.626757621765137
    9. ' ' → logprob: -12.876757621765137
    10. '   ' → logprob: -13.001757621765137

Token 283: ' queries' (ID: 32122)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22312065958976746
    2. ' self' → logprob: -1.8481206893920898
    3. ' segment' → logprob: -4.22312068939209
    4. ' the' → logprob: -4.72312068939209
    5. 'segment' → logprob: -4.84812068939209
    6. ' aggregation' → logprob: -6.22312068939209
    7. ' combining' → logprob: -6.47312068939209
    8. ' segments' → logprob: -7.22312068939209
    9. 'combine' → logprob: -7.34812068939209
    10. 'the' → logprob: -7.47312068939209

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019448090461082757
    2. 'self' → logprob: -9.000194549560547
    3. '<|end|>' → logprob: -9.875194549560547
    4. ',' → logprob: -12.125194549560547
    5. ' self' → logprob: -12.250194549560547
    6. '
' → logprob: -13.125194549560547
    7. ' and' → logprob: -13.250194549560547
    8. '        
' → logprob: -14.250194549560547
    9. '      ' → logprob: -14.375194549560547
    10. '   ' → logprob: -14.625194549560547

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005248225759714842
    2. 'self' → logprob: -5.380248069763184
    3. ' self' → logprob: -7.380248069763184
    4. '   ' → logprob: -13.755248069763184
    5. '           ' → logprob: -13.880248069763184
    6. '	' → logprob: -14.755248069763184
    7. '	self' → logprob: -14.755248069763184
    8. '```' → logprob: -15.130248069763184
    9. ' and' → logprob: -15.755248069763184
    10. ',' → logprob: -15.880248069763184

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.015158137306571007
    2. '       ' → logprob: -4.890158176422119
    3. ' self' → logprob: -4.890158176422119
    4. '   ' → logprob: -13.515157699584961
    5. '	self' → logprob: -13.765157699584961
    6. ' ' → logprob: -14.265157699584961
    7. 'e' → logprob: -16.26515769958496
    8. '
' → logprob: -17.51515769958496
    9. '      ' → logprob: -17.51515769958496
    10. '[self' → logprob: -17.76515769958496

Token 287: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0021004180889576674
    2. '.' → logprob: -6.377100467681885
    3. 'e' → logprob: -7.877100467681885
    4. ' .' → logprob: -11.752099990844727
    5. ' e' → logprob: -12.502099990844727
    6. ' ' → logprob: -13.377099990844727
    7. '	e' → logprob: -13.627099990844727
    8. '_e' → logprob: -13.877099990844727
    9. '   ' → logprob: -14.252099990844727
    10. ',e' → logprob: -14.377099990844727

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248739540576935
    2. '=' → logprob: -3.7732486724853516
    3. '   ' → logprob: -13.648248672485352
    4. ' ' → logprob: -13.648248672485352
    5. '  ' → logprob: -14.398248672485352
    6. '    ' → logprob: -15.398248672485352
    7. '<|end|>' → logprob: -16.89824867248535
    8. '	' → logprob: -17.14824867248535
    9. ' =
' → logprob: -18.27324867248535
    10. ')' → logprob: -18.27324867248535

Token 289: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004078639671206474
    2. ' e' → logprob: -5.5040788650512695
    3. '_e' → logprob: -16.254077911376953
    4. '	e' → logprob: -16.379077911376953
    5. '   ' → logprob: -17.129077911376953
    6. ' ' → logprob: -17.754077911376953
    7. '  ' → logprob: -18.879077911376953
    8. '       ' → logprob: -18.879077911376953
    9. '    ' → logprob: -19.254077911376953
    10. '     ' → logprob: -20.129077911376953

Token 290: '                      ' (ID: 10682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01444718986749649
    2. '
' → logprob: -4.264447212219238
    3. '<|end|>' → logprob: -9.389447212219238
    4. '        
' → logprob: -9.514447212219238
    5. 'self' → logprob: -10.514447212219238
    6. '  
' → logprob: -11.014447212219238
    7. '   ' → logprob: -11.389447212219238
    8. '      ' → logprob: -11.514447212219238
    9. '        ' → logprob: -11.514447212219238
    10. ' ' → logprob: -11.889447212219238

Token 291: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012587115168571472
    2. '
' → logprob: -4.387587070465088
    3. '        
' → logprob: -10.762587547302246
    4. 'self' → logprob: -10.887587547302246
    5. '  
' → logprob: -11.637587547302246
    6. ' ' → logprob: -11.637587547302246
    7. '   ' → logprob: -12.012587547302246
    8. '#' (adapté à ' #') → logprob: -12.762587547302246
    9. '
' → logprob: -12.887587547302246
    10. '      ' → logprob: -13.012587547302246

Token 292: ' Identity' (ID: 47739)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04301220551133156
    2. ' e' → logprob: -3.1680121421813965
    3. ' ' → logprob: -12.543012619018555
    4. '	e' → logprob: -13.168012619018555
    5. '_e' → logprob: -13.293012619018555
    6. '   ' → logprob: -13.418012619018555
    7. '[e' → logprob: -13.668012619018555
    8. 'self' → logprob: -14.293012619018555
    9. '0' → logprob: -14.918012619018555
    10. ''e' → logprob: -15.105512619018555

Token 293: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.09259238839149475
    2. 'element' → logprob: -2.467592477798462
    3. '_element' → logprob: -6.217592239379883
    4. '       ' → logprob: -6.842592239379883
    5. '        ' → logprob: -8.842592239379883
    6. ' ' → logprob: -8.967592239379883
    7. '
' → logprob: -9.592592239379883
    8. '    ' → logprob: -9.967592239379883
    9. '	element' → logprob: -10.092592239379883
    10. '   ' → logprob: -10.342592239379883

Token 294: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038556624203920364
    2. '
' → logprob: -3.2885565757751465
    3. 'self' → logprob: -8.413557052612305
    4. '        
' → logprob: -8.413557052612305
    5. '  
' → logprob: -11.163557052612305
    6. '<|end|>' → logprob: -11.163557052612305
    7. ' self' → logprob: -11.913557052612305
    8. '
' → logprob: -12.413557052612305
    9. '    
' → logprob: -12.413557052612305
    10. ' ' → logprob: -12.538557052612305

Token 295: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8365619778633118
    2. 'the' → logprob: -1.336561918258667
    3. 'e' → logprob: -2.211561918258667
    4. 'self' → logprob: -2.461561918258667
    5. ' e' → logprob: -2.586561918258667
    6. 'op' → logprob: -4.211562156677246
    7. ' self' → logprob: -4.461562156677246
    8. ' op' → logprob: -4.961562156677246
    9. ' operation' → logprob: -8.211562156677246
    10. 'operation' → logprob: -8.336562156677246

Token 296: ' operation' (ID: 9506)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.39003080129623413
    2. ' operation' → logprob: -1.140030860900879
    3. 'segment' → logprob: -6.765030860900879
    4. 'op' → logprob: -7.140030860900879
    5. ' segment' → logprob: -7.765030860900879
    6. 'e' → logprob: -7.890030860900879
    7. 'binary' → logprob: -8.765030860900879
    8. ' binary' → logprob: -9.390030860900879
    9. ' op' → logprob: -10.265030860900879
    10. ' e' → logprob: -10.390030860900879

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017845372203737497
    2. 'self' → logprob: -6.376784324645996
    3. ' self' → logprob: -9.626784324645996
    4. ',' → logprob: -12.251784324645996
    5. '
' → logprob: -12.376784324645996
    6. '        
' → logprob: -13.001784324645996
    7. '```' → logprob: -13.376784324645996
    8. 'import' → logprob: -14.251784324645996
    9. '           ' → logprob: -14.376784324645996
    10. '   ' → logprob: -14.376784324645996

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033249305561184883
    2. 'self' → logprob: -5.75332498550415
    3. ' self' → logprob: -9.003324508666992
    4. '
' → logprob: -11.253324508666992
    5. 'import' → logprob: -13.378324508666992
    6. '#' → logprob: -13.503324508666992
    7. '   ' → logprob: -13.753324508666992
    8. '        
' → logprob: -13.753324508666992
    9. '	self' → logprob: -13.753324508666992
    10. '```' → logprob: -14.003324508666992

Token 299: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06605885922908783
    2. '       ' → logprob: -2.941058874130249
    3. 'size' → logprob: -5.19105863571167
    4. 'import' → logprob: -5.94105863571167
    5. ' self' → logprob: -6.06605863571167
    6. 'from' → logprob: -7.94105863571167
    7. 's' → logprob: -9.691059112548828
    8. 'm' → logprob: -10.066059112548828
    9. ' size' → logprob: -10.316059112548828
    10. '#' (adapté à ' #') → logprob: -10.691059112548828

Token 300: ' Compute' (ID: 45438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1305689960718155
    2. 'size' → logprob: -2.1305689811706543
    3. 'import' → logprob: -6.880568981170654
    4. 'from' → logprob: -7.005568981170654
    5. 'm' → logprob: -7.880568981170654
    6. '   ' → logprob: -8.255569458007812
    7. 'sz' → logprob: -8.255569458007812
    8. ' self' → logprob: -8.505569458007812
    9. ' size' → logprob: -8.630569458007812
    10. '#' → logprob: -9.130569458007812

Token 301: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5402629375457764
    2. ' self' → logprob: -1.1652629375457764
    3. '   ' → logprob: -2.2902629375457764
    4. '       ' → logprob: -6.0402631759643555
    5. 'size' → logprob: -7.6652631759643555
    6. ' ' → logprob: -7.7902631759643555
    7. '	self' → logprob: -8.040263175964355
    8. ' size' → logprob: -8.165263175964355
    9. ' the' → logprob: -9.040263175964355
    10. 'import' → logprob: -9.540263175964355

Token 302: ' actual' (ID: 6290)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2641198933124542
    2. ' size' → logprob: -1.5141198635101318
    3. '_size' → logprob: -4.639120101928711
    4. ' ' → logprob: -6.389120101928711
    5. 'self' → logprob: -8.389120101928711
    6. '   ' → logprob: -8.389120101928711
    7. 'sz' → logprob: -9.139120101928711
    8. 'm' → logprob: -9.764120101928711
    9. 'n' → logprob: -9.889120101928711
    10. ' self' → logprob: -10.514120101928711

Token 303: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.6000756025314331
    2. 'size' → logprob: -0.8500756025314331
    3. '_size' → logprob: -5.100075721740723
    4. 'self' → logprob: -5.225075721740723
    5. ' ' → logprob: -5.350075721740723
    6. '   ' → logprob: -5.475075721740723
    7. ' self' → logprob: -6.475075721740723
    8. 'n' → logprob: -6.725075721740723
    9. ' n' → logprob: -8.225075721740723
    10. 'm' → logprob: -9.350075721740723

Token 304: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0903065875172615
    2. 'self' → logprob: -2.715306520462036
    3. '   ' → logprob: -4.840306758880615
    4. ' self' → logprob: -5.590306758880615
    5. ' of' → logprob: -6.465306758880615
    6. 'while' → logprob: -6.590306758880615
    7. ' while' → logprob: -6.840306758880615
    8. '(self' → logprob: -6.840306758880615
    9. ' =' → logprob: -6.965306758880615
    10. ':' → logprob: -7.465306758880615

Token 305: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6726083755493164
    2. 'self' → logprob: -1.1726083755493164
    3. 'the' → logprob: -2.2976083755493164
    4. ' self' → logprob: -2.5476083755493164
    5. '   ' → logprob: -7.422608375549316
    6. ' ' → logprob: -8.047608375549316
    7. 'tree' → logprob: -8.797608375549316
    8. 'n' → logprob: -10.797608375549316
    9. 'segment' → logprob: -10.797608375549316
    10. ' segment' → logprob: -10.797608375549316

Token 306: ' tree' (ID: 8165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5287439227104187
    2. 'tree' → logprob: -1.4037439823150635
    3. 'segment' → logprob: -2.9037439823150635
    4. ' segment' → logprob: -3.1537439823150635
    5. ' tree' → logprob: -3.6537439823150635
    6. 'size' → logprob: -4.028743743896484
    7. ' self' → logprob: -4.403743743896484
    8. ' size' → logprob: -6.153743743896484
    9. '_segment' → logprob: -6.278743743896484
    10. 'internal' → logprob: -6.528743743896484

Token 307: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030186863616108894
    2. 'self' → logprob: -4.155186653137207
    3. ' self' → logprob: -5.405186653137207
    4. '   ' → logprob: -6.155186653137207
    5. ' =' → logprob: -6.280186653137207
    6. ' (' → logprob: -6.530186653137207
    7. '(self' → logprob: -6.780186653137207
    8. ' as' → logprob: -7.280186653137207
    9. '
' → logprob: -7.405186653137207
    10. ':' → logprob: -7.780186653137207

Token 308: 'next' (ID: 7311)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05836113542318344
    2. 'self' → logprob: -3.433361053466797
    3. '   ' → logprob: -4.058361053466797
    4. ' ' → logprob: -5.433361053466797
    5. '       ' → logprob: -6.308361053466797
    6. ' self' → logprob: -7.183361053466797
    7. ')' → logprob: -9.308361053466797
    8. 'size' → logprob: -11.058361053466797
    9. 'while' → logprob: -11.308361053466797
    10. '
' → logprob: -11.433361053466797

Token 309: ' power' (ID: 3470)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9509471654891968
    2. '_pow' → logprob: -1.5759471654891968
    3. '_power' → logprob: -1.5759471654891968
    4. '   ' → logprob: -2.2009472846984863
    5. ' power' → logprob: -2.8259472846984863
    6. ' ' → logprob: -4.700947284698486
    7. '_' → logprob: -4.825947284698486
    8. 'power' → logprob: -5.325947284698486
    9. '       ' → logprob: -5.700947284698486
    10. '  ' → logprob: -6.575947284698486

Token 310: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.7419734001159668
    2. 'of' → logprob: -1.3669734001159668
    3. '   ' → logprob: -1.8669734001159668
    4. ' of' → logprob: -2.366973400115967
    5. '       ' → logprob: -3.991973400115967
    6. ' ' → logprob: -7.116973400115967
    7. '2' → logprob: -7.616973400115967
    8. '  ' → logprob: -8.491973876953125
    9. 'Of' → logprob: -8.616973876953125
    10. '_' → logprob: -9.116973876953125

Token 311: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05976630747318268
    2. 'two' → logprob: -3.1847662925720215
    3. ' two' → logprob: -4.1847662925720215
    4. ' ' → logprob: -6.6847662925720215
    5. '   ' → logprob: -9.18476676940918
    6. '_two' → logprob: -10.55976676940918
    7. 'Two' → logprob: -11.30976676940918
    8. '```' → logprob: -12.05976676940918
    9. '  ' → logprob: -13.55976676940918
    10. 'tw' → logprob: -14.18476676940918

Token 312: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011268154717981815
    2. 'two' → logprob: -4.511268138885498
    3. ' two' → logprob: -8.511268615722656
    4. ' ' → logprob: -11.011268615722656
    5. '_two' → logprob: -13.761268615722656
    6. 'Two' → logprob: -13.761268615722656
    7. '   ' → logprob: -14.761268615722656
    8. '```' → logprob: -17.261268615722656
    9. '_' → logprob: -17.511268615722656
    10. '-two' → logprob: -18.136268615722656

Token 313: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.363351047039032
    2. '(' → logprob: -2.2383511066436768
    3. '   ' → logprob: -2.7383511066436768
    4. ')' → logprob: -2.7383511066436768
    5. '(self' → logprob: -4.113350868225098
    6. ' for' → logprob: -4.238350868225098
    7. ')
' → logprob: -4.863350868225098
    8. '=' → logprob: -5.113350868225098
    9. ':' → logprob: -5.613350868225098
    10. ' (' → logprob: -5.738350868225098

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01584196649491787
    2. 'self' → logprob: -4.765841960906982
    3. ' =' → logprob: -6.390841960906982
    4. ' self' → logprob: -6.515841960906982
    5. 'import' → logprob: -6.515841960906982
    6. 'n' → logprob: -7.765841960906982
    7. '   ' → logprob: -7.765841960906982
    8. ',' → logprob: -8.39084243774414
    9. ':' → logprob: -8.39084243774414
    10. '
' → logprob: -8.51584243774414

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6090194582939148
    2. ' self' → logprob: -1.6090195178985596
    3. '       ' → logprob: -2.3590195178985596
    4. 'size' → logprob: -2.8590195178985596
    5. 'm' → logprob: -3.1090195178985596
    6. ' size' → logprob: -3.2340195178985596
    7. ' m' → logprob: -4.4840192794799805
    8. 'sz' → logprob: -5.9840192794799805
    9. '   ' → logprob: -6.7340192794799805
    10. 'import' → logprob: -6.9840192794799805

Token 316: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.01815134845674038
    2. 'size' → logprob: -4.64315128326416
    3. '_size' → logprob: -5.64315128326416
    4. '.n' → logprob: -6.14315128326416
    5. ' size' → logprob: -7.14315128326416
    6. '.sz' → logprob: -7.39315128326416
    7. 'sz' → logprob: -7.51815128326416
    8. '._' → logprob: -8.01815128326416
    9. '	size' → logprob: -9.39315128326416
    10. '.m' → logprob: -10.01815128326416

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932197213172913
    2. ' =' → logprob: -0.6932197213172913
    3. '   ' → logprob: -9.568220138549805
    4. ' ' → logprob: -13.693220138549805
    5. '  ' → logprob: -14.068220138549805
    6. '=int' → logprob: -15.693220138549805
    7. '    ' → logprob: -15.943220138549805
    8. '_=' → logprob: -15.943220138549805
    9. '1' → logprob: -16.443220138549805
    10. '	' → logprob: -16.568220138549805

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005943967495113611
    2. ' ' → logprob: -5.130943775177002
    3. '   ' → logprob: -11.13094425201416
    4. '  ' → logprob: -15.00594425201416
    5. '     ' → logprob: -16.630943298339844
    6. '    ' → logprob: -17.005943298339844
    7. '       ' → logprob: -17.130943298339844
    8. '2' → logprob: -17.505943298339844
    9. '
' → logprob: -17.505943298339844
    10. '           ' → logprob: -17.755943298339844

Token 319: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -16.125
    4. '
' → logprob: -18.25
    5. '2' → logprob: -18.875
    6. '32' → logprob: -19.5
    7. '           ' → logprob: -20.875
    8. '(' → logprob: -20.875
    9. '    
' → logprob: -20.875
    10. '       ' → logprob: -21.125

Token 320: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5759475827217102
    2. '**' → logprob: -0.8259475827217102
    3. '   ' → logprob: -12.575947761535645
    4. ' ' → logprob: -13.450947761535645
    5. '
' → logprob: -13.950947761535645
    6. '*' → logprob: -14.325947761535645
    7. ' *' → logprob: -14.575947761535645
    8. '       ' → logprob: -14.950947761535645
    9. '  ' → logprob: -15.450947761535645
    10. ' **
' → logprob: -15.700947761535645

Token 321: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.584244430065155
    2. '(self' → logprob: -0.834244430065155
    3. '(n' → logprob: -4.834244251251221
    4. '(int' → logprob: -8.584244728088379
    5. '(' → logprob: -9.334244728088379
    6. '(math' → logprob: -10.834244728088379
    7. '(((' → logprob: -11.209244728088379
    8. '(len' → logprob: -13.209244728088379
    9. '(
' → logprob: -13.334244728088379
    10. ' (' → logprob: -13.709244728088379

Token 322: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06519678980112076
    2. 'n' → logprob: -2.8151967525482178
    3. '(self' → logprob: -5.815196990966797
    4. '(n' → logprob: -8.690196990966797
    5. ' self' → logprob: -9.815196990966797
    6. 'len' → logprob: -11.190196990966797
    7. ' n' → logprob: -13.065196990966797
    8. '   ' → logprob: -13.565196990966797
    9. '	self' → logprob: -14.815196990966797
    10. ' (' → logprob: -15.065196990966797

Token 323: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015692608430981636
    2. ' -' → logprob: -6.5015692710876465
    3. '.n' → logprob: -10.501568794250488
    4. 'n' → logprob: -10.751568794250488
    5. ').' → logprob: -12.001568794250488
    6. 'self' → logprob: -12.501568794250488
    7. '.bit' → logprob: -12.751568794250488
    8. '-.' → logprob: -13.501568794250488
    9. '   ' → logprob: -13.626568794250488
    10. '.' → logprob: -14.251568794250488

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004171833395957947
    2. 'n' → logprob: -5.504171848297119
    3. '-' → logprob: -9.879171371459961
    4. '(n' → logprob: -10.879171371459961
    5. ' n' → logprob: -11.754171371459961
    6. ' ' → logprob: -12.379171371459961
    7. '   ' → logprob: -12.629171371459961
    8. '```' → logprob: -13.004171371459961
    9. ').' → logprob: -13.254171371459961
    10. '.n' → logprob: -13.629171371459961

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -15.375003814697266
    4. 'n' → logprob: -15.750003814697266
    5. 'bit' → logprob: -15.875003814697266
    6. '
' → logprob: -15.875003814697266
    7. '   ' → logprob: -16.000003814697266
    8. '0' → logprob: -17.187503814697266
    9. '(' → logprob: -17.375003814697266
    10. ').' → logprob: -17.500003814697266

Token 326: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -5.741137283621356e-05
    2. '.bit' → logprob: -10.250057220458984
    3. '.' → logprob: -11.750057220458984
    4. ' ).' → logprob: -11.875057220458984
    5. ')' → logprob: -13.000057220458984
    6. '].' → logprob: -14.125057220458984
    7. '```' → logprob: -14.250057220458984
    8. '.n' → logprob: -14.250057220458984
    9. '   ' → logprob: -14.500057220458984
    10. 'bit' → logprob: -14.750057220458984

Token 327: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.4021237802808173e-05
    2. '.bit' → logprob: -11.375014305114746
    3. '```' → logprob: -13.500014305114746
    4. ' bit' → logprob: -14.500014305114746
    5. ').' → logprob: -15.125014305114746
    6. 'b' → logprob: -15.875014305114746
    7. 'bi' → logprob: -16.25001335144043
    8. ' ' → logprob: -17.25001335144043
    9. '_bit' → logprob: -17.37501335144043
    10. '
' → logprob: -17.50001335144043

Token 328: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.896309739408025e-07
    2. 'length' → logprob: -14.125000953674316
    3. '_width' → logprob: -18.5
    4. '_LENGTH' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '_l' → logprob: -19.125
    7. '_size' → logprob: -19.375
    8. '_' → logprob: -19.625
    9. 'l' → logprob: -19.875
    10. '\' → logprob: -20.125

Token 329: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07674013823270798
    2. '())' → logprob: -2.701740026473999
    3. '()' → logprob: -5.576740264892578
    4. ' )' → logprob: -6.326740264892578
    5. '+' → logprob: -7.326740264892578
    6. '()+' → logprob: -8.701740264892578
    7. ')
' → logprob: -8.951740264892578
    8. ')+' → logprob: -9.451740264892578
    9. ' +' → logprob: -9.701740264892578
    10. '   ' → logprob: -10.326740264892578

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014214261900633574
    2. 'self' → logprob: -6.6264214515686035
    3. '
' → logprob: -10.001420974731445
    4. ' self' → logprob: -10.501420974731445
    5. '        
' → logprob: -11.626420974731445
    6. '```' → logprob: -12.376420974731445
    7. '   ' → logprob: -12.876420974731445
    8. '[self' → logprob: -13.251420974731445
    9. '<|end|>' → logprob: -14.001420974731445
    10. '(self' → logprob: -14.126420974731445

Token 331: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6210961937904358
    2. 'self' → logprob: -0.8710961937904358
    3. ' self' → logprob: -3.121096134185791
    4. '   ' → logprob: -10.87109661102295
    5. '
' → logprob: -11.74609661102295
    6. '        
' → logprob: -12.62109661102295
    7. ' ' → logprob: -12.87109661102295
    8. '	self' → logprob: -12.87109661102295
    9. '(self' → logprob: -13.37109661102295
    10. '```' → logprob: -13.62109661102295

Token 332: ' Initialize' (ID: 19496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006736811250448227
    2. 'data' → logprob: -5.631736755371094
    3. ' self' → logprob: -5.881736755371094
    4. 'tree' → logprob: -8.506736755371094
    5. '   ' → logprob: -9.756736755371094
    6. ' data' → logprob: -10.506736755371094
    7. '       ' → logprob: -10.881736755371094
    8. '#' → logprob: -11.756736755371094
    9. 'Initialize' → logprob: -12.131736755371094
    10. ' ' → logprob: -12.256736755371094

Token 333: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1003485769033432
    2. ' self' → logprob: -2.350348472595215
    3. '   ' → logprob: -9.475348472595215
    4. '       ' → logprob: -10.225348472595215
    5. '	self' → logprob: -11.350348472595215
    6. ' ' → logprob: -11.600348472595215
    7. 'data' → logprob: -13.350348472595215
    8. ' the' → logprob: -13.725348472595215
    9. 'tree' → logprob: -13.725348472595215
    10. '(self' → logprob: -14.100348472595215

Token 334: ' tree' (ID: 8165)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.12873810529708862
    2. 'tree' → logprob: -2.3787381649017334
    3. 'dat' → logprob: -4.378737926483154
    4. ' data' → logprob: -4.378737926483154
    5. 'd' → logprob: -7.003737926483154
    6. ' tree' → logprob: -7.378737926483154
    7. ' dat' → logprob: -7.628737926483154
    8. 'seg' → logprob: -7.753737926483154
    9. '_data' → logprob: -8.003738403320312
    10. 'value' → logprob: -9.628738403320312

Token 335: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6672706007957458
    2. '       ' → logprob: -1.4172706604003906
    3. ' with' → logprob: -2.5422706604003906
    4. ' self' → logprob: -2.5422706604003906
    5. 'self' → logprob: -3.4172706604003906
    6. ' [' → logprob: -4.417270660400391
    7. '=' → logprob: -4.542270660400391
    8. '[' → logprob: -4.542270660400391
    9. '   ' → logprob: -4.542270660400391
    10. ' as' → logprob: -5.292270660400391

Token 336: ' identity' (ID: 16696)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.718793511390686
    2. '[e' → logprob: -0.968793511390686
    3. '[' → logprob: -2.2187933921813965
    4. ' [' → logprob: -3.7187933921813965
    5. '[f' → logprob: -10.843793869018555
    6. '[this' → logprob: -11.218793869018555
    7. '[s' → logprob: -11.468793869018555
    8. '[size' → logprob: -11.593793869018555
    9. '[value' → logprob: -11.843793869018555
    10. '[val' → logprob: -11.843793869018555

Token 337: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.03901189565658569
    2. ' element' → logprob: -4.2890119552612305
    3. 'elements' → logprob: -4.5390119552612305
    4. ' values' → logprob: -5.4140119552612305
    5. '_element' → logprob: -6.0390119552612305
    6. ' ' → logprob: -6.1640119552612305
    7. 'element' → logprob: -6.4140119552612305
    8. '_elements' → logprob: -6.7890119552612305
    9. '   ' → logprob: -7.0390119552612305
    10. '_val' → logprob: -8.03901195526123

Token 338: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028983712196350098
    2. 'self' → logprob: -4.4039835929870605
    3. ' self' → logprob: -5.1539835929870605
    4. '[' → logprob: -5.9039835929870605
    5. '[self' → logprob: -6.1539835929870605
    6. ' [' → logprob: -6.2789835929870605
    7. '
' → logprob: -6.2789835929870605
    8. '   ' → logprob: -6.9039835929870605
    9. ',' → logprob: -7.5289835929870605
    10. '        
' → logprob: -8.903984069824219

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013834958896040916
    2. 'self' → logprob: -5.1388349533081055
    3. ' self' → logprob: -5.5138349533081055
    4. ',' → logprob: -6.7638349533081055
    5. ' [' → logprob: -6.8888349533081055
    6. '[' → logprob: -7.1388349533081055
    7. '[self' → logprob: -7.3888349533081055
    8. '   ' → logprob: -8.888834953308105
    9. ' =' → logprob: -10.638834953308105
    10. '        
' → logprob: -11.013834953308105

Token 340: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09068052470684052
    2. '[self' → logprob: -3.0906805992126465
    3. '[' → logprob: -3.3406805992126465
    4. ' self' → logprob: -5.5906805992126465
    5. ' [' → logprob: -6.2156805992126465
    6. '   ' → logprob: -9.965680122375488
    7. '       ' → logprob: -10.590680122375488
    8. '	self' → logprob: -13.340680122375488
    9. 'tree' → logprob: -13.715680122375488
    10. ' ' → logprob: -14.215680122375488

Token 341: '.node' (ID: 23366)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.21316514909267426
    2. 'data' → logprob: -2.838165044784546
    3. '.data' → logprob: -2.838165044784546
    4. 'tree' → logprob: -2.963165044784546
    5. '.' → logprob: -4.463165283203125
    6. '._' → logprob: -5.838165283203125
    7. ' .' → logprob: -5.963165283203125
    8. '_tree' → logprob: -6.338165283203125
    9. '_data' → logprob: -6.338165283203125
    10. ' tree' → logprob: -8.213165283203125

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6943949460983276
    2. ' =' → logprob: -0.6943949460983276
    3. 's' → logprob: -6.694395065307617
    4. '   ' → logprob: -12.319395065307617
    5. '=[' → logprob: -13.694395065307617
    6. '[' → logprob: -13.819395065307617
    7. ' ' → logprob: -14.069395065307617
    8. ' =[' → logprob: -14.944395065307617
    9. '[:]' → logprob: -15.194395065307617
    10. '=[]' → logprob: -15.444395065307617

Token 343: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.04749380424618721
    2. '[e' → logprob: -3.7974936962127686
    3. ' [' → logprob: -4.047493934631348
    4. '[' → logprob: -5.047493934631348
    5. '[this' → logprob: -11.297493934631348
    6. '[element' → logprob: -11.422493934631348
    7. '[node' → logprob: -11.797493934631348
    8. '   ' → logprob: -12.172493934631348
    9. '[value' → logprob: -12.547493934631348
    10. '[event' → logprob: -12.797493934631348

Token 344: 'self' (ID: 1156)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07889308780431747
    2. 'self' → logprob: -2.5788931846618652
    3. ' self' → logprob: -13.328892707824707
    4. ' e' → logprob: -13.578892707824707
    5. '   ' → logprob: -14.828892707824707
    6. '	e' → logprob: -17.453893661499023
    7. '_e' → logprob: -18.203893661499023
    8. '	self' → logprob: -19.578893661499023
    9. '       ' → logprob: -19.703893661499023
    10. '```' → logprob: -19.953893661499023

Token 345: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0004901225329376757
    2. 'e' → logprob: -7.625490188598633
    3. '.' → logprob: -13.500490188598633
    4. '_e' → logprob: -15.625490188598633
    5. 'self' → logprob: -15.875490188598633
    6. '	e' → logprob: -16.000490188598633
    7. ':e' → logprob: -16.375490188598633
    8. ',e' → logprob: -16.500490188598633
    9. '.е' → logprob: -17.000490188598633
    10. '.euler' → logprob: -17.375490188598633

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020890454470645636
    2. ']*(' → logprob: -9.000208854675293
    3. ' for' → logprob: -10.000208854675293
    4. ']*' → logprob: -10.250208854675293
    5. ' ]' → logprob: -12.500208854675293
    6. 'for' → logprob: -14.625208854675293
    7. ')' → logprob: -15.375208854675293
    8. '   ' → logprob: -16.12520980834961
    9. ']+' → logprob: -16.87520980834961
    10. '']' → logprob: -17.50020980834961

Token 347: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3186318278312683
    2. ']' → logprob: -1.443631887435913
    3. ' *' → logprob: -3.943631887435913
    4. ' for' → logprob: -4.568631649017334
    5. ']*' → logprob: -5.068631649017334
    6. 'for' → logprob: -8.318632125854492
    7. ']*(' → logprob: -8.693632125854492
    8. '*(' → logprob: -9.068632125854492
    9. ' ' → logprob: -9.318632125854492
    10. ')' → logprob: -9.943632125854492

Token 348: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048642776906490326
    2. '(self' → logprob: -3.048642873764038
    3. ' (' → logprob: -9.923643112182617
    4. '((' → logprob: -12.673643112182617
    5. 'self' → logprob: -12.923643112182617
    6. '   ' → logprob: -14.423643112182617
    7. '       ' → logprob: -16.048643112182617
    8. '2' → logprob: -17.298643112182617
    9. ' self' → logprob: -17.423643112182617
    10. ' ' → logprob: -17.673643112182617

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1606082320213318
    2. 'self' → logprob: -1.9106082916259766
    3. ' ' → logprob: -8.160608291625977
    4. ' self' → logprob: -9.660608291625977
    5. '   ' → logprob: -10.410608291625977
    6. '(self' → logprob: -13.160608291625977
    7. '       ' → logprob: -13.910608291625977
    8. '(' → logprob: -14.285608291625977
    9. '  ' → logprob: -14.910608291625977
    10. '     ' → logprob: -15.410608291625977

Token 350: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7318507432937622
    2. ' *' → logprob: -1.2318507432937622
    3. '*self' → logprob: -1.4818507432937622
    4. 'self' → logprob: -11.481850624084473
    5. ' self' → logprob: -14.106850624084473
    6. '*object' → logprob: -14.356850624084473
    7. ' ' → logprob: -14.481850624084473
    8. '*this' → logprob: -15.231850624084473
    9. '*s' → logprob: -15.856850624084473
    10. '*
' → logprob: -16.10685157775879

Token 351: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004886920796707273
    2. ' self' → logprob: -7.625488758087158
    3. '   ' → logprob: -15.12548828125
    4. ' ' → logprob: -15.87548828125
    5. '(self' → logprob: -16.25048828125
    6. '       ' → logprob: -16.37548828125
    7. '[self' → logprob: -17.25048828125
    8. '  ' → logprob: -17.50048828125
    9. '*self' → logprob: -17.50048828125
    10. '     ' → logprob: -17.87548828125

Token 352: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.2520068287849426
    2. 'size' → logprob: -1.5020067691802979
    3. ' size' → logprob: -10.502006530761719
    4. '.' → logprob: -10.752006530761719
    5. '	size' → logprob: -12.377006530761719
    6. 'self' → logprob: -12.502006530761719
    7. ' .' → logprob: -12.502006530761719
    8. 'siz' → logprob: -12.877006530761719
    9. '   ' → logprob: -13.127006530761719
    10. '_size' → logprob: -13.502006530761719

Token 353: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4153549020411447e-05
    2. ' )' → logprob: -10.75002384185791
    3. ')
' → logprob: -13.37502384185791
    4. '<|end|>' → logprob: -15.25002384185791
    5. ')`' → logprob: -16.000024795532227
    6. '   ' → logprob: -16.125024795532227
    7. '))' → logprob: -16.250024795532227
    8. '       ' → logprob: -16.250024795532227
    9. ')}' → logprob: -16.250024795532227
    10. ')]' → logprob: -16.500024795532227

Token 354: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4734669625759125
    2. '   ' → logprob: -1.2234669923782349
    3. '
' → logprob: -3.2234668731689453
    4. '<|end|>' → logprob: -3.7234668731689453
    5. ' def' → logprob: -4.473466873168945
    6. '    
' → logprob: -5.473466873168945
    7. '	def' → logprob: -6.473466873168945
    8. '```' → logprob: -7.848466873168945
    9. '<|end|>' → logprob: -7.848466873168945
    10. ')' → logprob: -8.098466873168945

Token 355: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006746281404048204
    2. ' def' → logprob: -5.006746292114258
    3. '
' → logprob: -10.881746292114258
    4. '   ' → logprob: -11.881746292114258
    5. '```' → logprob: -12.381746292114258
    6. '	def' → logprob: -15.006746292114258
    7. '<|end|>' → logprob: -15.131746292114258
    8. '    
' → logprob: -16.131746292114258
    9. ' ' → logprob: -16.381746292114258
    10. 'de' → logprob: -16.506746292114258

Token 356: ' built' (ID: 8113)
  Prédit: ' built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' built' → logprob: -0.12285434454679489
    2. 'built' → logprob: -2.497854232788086
    3. ' build' → logprob: -4.247854232788086
    4. 'build' → logprob: -4.372854232788086
    5. ' buil' → logprob: -5.247854232788086
    6. 'b' → logprob: -7.622854232788086
    7. '_build' → logprob: -8.247854232788086
    8. '_b' → logprob: -8.997854232788086
    9. ' builtin' → logprob: -9.372854232788086
    10. ' ' → logprob: -9.872854232788086

Token 357: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032368937972933054
    2. '(' → logprob: -5.753236770629883
    3. '(s' → logprob: -10.753236770629883
    4. '   ' → logprob: -11.253236770629883
    5. 'self' → logprob: -12.003236770629883
    6. '_from' → logprob: -12.378236770629883
    7. ' (' → logprob: -12.378236770629883
    8. 'from' → logprob: -13.128236770629883
    9. '_array' → logprob: -13.378236770629883
    10. '(array' → logprob: -13.628236770629883

Token 358: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009945833589881659
    2. 'self' → logprob: -8.250994682312012
    3. '(' → logprob: -8.750994682312012
    4. ')' → logprob: -9.000994682312012
    5. ',' → logprob: -9.000994682312012
    6. ')(' → logprob: -9.125994682312012
    7. '(array' → logprob: -9.250994682312012
    8. '_array' → logprob: -10.250994682312012
    9. '   ' → logprob: -10.500994682312012
    10. ' (' → logprob: -10.750994682312012

Token 359: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.41003021597862244
    2. 'self' → logprob: -1.4100302457809448
    3. 'arr' → logprob: -2.4100301265716553
    4. ' array' → logprob: -6.785030364990234
    5. ' self' → logprob: -7.660030364990234
    6. ')' → logprob: -7.910030364990234
    7. '   ' → logprob: -8.160030364990234
    8. ' arr' → logprob: -9.785030364990234
    9. 'a' → logprob: -10.910030364990234
    10. 'A' → logprob: -11.285030364990234

Token 360: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29449716210365295
    2. '):
' → logprob: -1.4194971323013306
    3. 'self' → logprob: -5.169497013092041
    4. '(self' → logprob: -5.544497013092041
    5. '   ' → logprob: -6.419497013092041
    6. '       ' → logprob: -6.794497013092041
    7. ',' → logprob: -7.419497013092041
    8. ')' → logprob: -8.5444974899292
    9. '):
' → logprob: -9.6694974899292
    10. ' self' → logprob: -10.6694974899292

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001973838312551379
    2. ':' → logprob: -6.376973628997803
    3. ':
' → logprob: -8.751974105834961
    4. '   ' → logprob: -10.251974105834961
    5. '	' → logprob: -10.751974105834961
    6. '):
' → logprob: -11.376974105834961
    7. '[' → logprob: -12.001974105834961
    8. '(self' → logprob: -12.001974105834961
    9. '():' → logprob: -12.501974105834961
    10. '```' → logprob: -12.501974105834961

Token 362: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015698568895459175
    2. '
' → logprob: -7.126569747924805
    3. ' for' → logprob: -7.376569747924805
    4. 'for' → logprob: -10.001569747924805
    5. '   ' → logprob: -10.126569747924805
    6. 'n' → logprob: -11.376569747924805
    7. '        
' → logprob: -11.376569747924805
    8. '```' → logprob: -11.876569747924805
    9. '    
' → logprob: -12.501569747924805
    10. '[' → logprob: -12.626569747924805

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063399262726306915
    2. 'for' → logprob: -5.881340026855469
    3. '#' → logprob: -6.881340026855469
    4. ' for' → logprob: -7.006340026855469
    5. '   ' → logprob: -7.131340026855469
    6. 'n' → logprob: -7.631340026855469
    7. '"""' → logprob: -9.006340026855469
    8. 'self' → logprob: -9.381340026855469
    9. ' #' → logprob: -10.256340026855469
    10. ' self' → logprob: -10.756340026855469

Token 364: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6857115030288696
    2. '       ' → logprob: -1.4357115030288696
    3. ' for' → logprob: -1.9357115030288696
    4. '#' → logprob: -2.31071138381958
    5. 'self' → logprob: -5.06071138381958
    6. 'n' → logprob: -5.56071138381958
    7. '"""' → logprob: -6.68571138381958
    8. ' #' → logprob: -7.06071138381958
    9. '   ' → logprob: -7.18571138381958
    10. ' self' → logprob: -7.56071138381958

Token 365: ' the' (ID: 290)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0947074219584465
    2. '       ' → logprob: -2.844707489013672
    3. ' the' → logprob: -4.219707489013672
    4. '   ' → logprob: -4.969707489013672
    5. 'self' → logprob: -5.344707489013672
    6. ' self' → logprob: -5.469707489013672
    7. 'the' → logprob: -7.094707489013672
    8. '(' → logprob: -8.344707489013672
    9. ' (' → logprob: -8.344707489013672
    10. 'from' → logprob: -9.469707489013672

Token 366: ' segment' (ID: 14806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33016425371170044
    2. 'tree' → logprob: -1.9551641941070557
    3. ' for' → logprob: -2.7051641941070557
    4. 'segment' → logprob: -3.2051641941070557
    5. '#' → logprob: -3.8301641941070557
    6. ' tree' → logprob: -5.205164432525635
    7. ' segment' → logprob: -6.205164432525635
    8. 'self' → logprob: -6.455164432525635
    9. '   ' → logprob: -7.330164432525635
    10. 'if' → logprob: -8.830163955688477

Token 367: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.06309657543897629
    2. 'tree' → logprob: -3.563096523284912
    3. '_tree' → logprob: -3.563096523284912
    4. '   ' → logprob: -5.688096523284912
    5. '       ' → logprob: -7.688096523284912
    6. '_' → logprob: -8.31309700012207
    7. 'Tree' → logprob: -8.43809700012207
    8. ' ' → logprob: -9.81309700012207
    9. ' Tree' → logprob: -10.43809700012207
    10. '	tree' → logprob: -10.93809700012207

Token 368: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04561718553304672
    2. '   ' → logprob: -3.54561710357666
    3. '(self' → logprob: -4.92061710357666
    4. 'from' → logprob: -5.42061710357666
    5. ' from' → logprob: -5.92061710357666
    6. 'self' → logprob: -6.92061710357666
    7. ' self' → logprob: -9.67061710357666
    8. 'From' → logprob: -9.92061710357666
    9. '(' → logprob: -10.04561710357666
    10. '.' → logprob: -10.54561710357666

Token 369: ' an' (ID: 448)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.13686113059520721
    2. 'array' → logprob: -2.5118610858917236
    3. ' the' → logprob: -3.1368610858917236
    4. 'the' → logprob: -6.261861324310303
    5. 'self' → logprob: -7.386861324310303
    6. ' self' → logprob: -7.761861324310303
    7. ' an' → logprob: -8.886860847473145
    8. '   ' → logprob: -9.011860847473145
    9. ' a' → logprob: -10.011860847473145
    10. '[array' → logprob: -10.261860847473145

Token 370: ' initial' (ID: 4871)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6894791126251221
    2. ' array' → logprob: -0.8144791126251221
    3. '   ' → logprob: -3.439479112625122
    4. ' initial' → logprob: -5.314478874206543
    5. 'initial' → logprob: -5.564478874206543
    6. 'for' → logprob: -5.564478874206543
    7. '       ' → logprob: -5.564478874206543
    8. ' for' → logprob: -5.689478874206543
    9. ' ' → logprob: -7.814478874206543
    10. ' iterable' → logprob: -8.064478874206543

Token 371: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6827203035354614
    2. ' array' → logprob: -0.8077203035354614
    3. ' for' → logprob: -3.557720184326172
    4. 'for' → logprob: -3.932720184326172
    5. ' input' → logprob: -8.307720184326172
    6. '   ' → logprob: -8.432720184326172
    7. 'input' → logprob: -8.682720184326172
    8. '       ' → logprob: -10.432720184326172
    9. 'list' → logprob: -11.057720184326172
    10. ' list' → logprob: -11.307720184326172

Token 372: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006665678229182959
    2. '(self' → logprob: -8.250666618347168
    3. '.' → logprob: -9.125666618347168
    4. ',' → logprob: -9.250666618347168
    5. 'self' → logprob: -10.000666618347168
    6. '[' → logprob: -10.125666618347168
    7. '<|end|>' → logprob: -10.750666618347168
    8. '   ' → logprob: -10.875666618347168
    9. ':
' → logprob: -11.125666618347168
    10. ' self' → logprob: -11.875666618347168

Token 373: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.113290095934644e-05
    2. '
' → logprob: -10.500081062316895
    3. '```' → logprob: -11.125081062316895
    4. '<|end|>' → logprob: -11.500081062316895
    5. '[' → logprob: -11.625081062316895
    6. '        
' → logprob: -11.750081062316895
    7. '   ' → logprob: -12.000081062316895
    8. '<|end|>' → logprob: -14.375081062316895
    9. '#' → logprob: -14.500081062316895
    10. '	' → logprob: -14.625081062316895

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -12.250009536743164
    3. ' for' → logprob: -13.375009536743164
    4. 'self' → logprob: -14.000009536743164
    5. ' self' → logprob: -14.375009536743164
    6. '```' → logprob: -14.750009536743164
    7. 'n' → logprob: -15.375009536743164
    8. 'for' → logprob: -15.375009536743164
    9. '"""' → logprob: -15.500009536743164
    10. '      ' → logprob: -16.125009536743164

Token 375: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.423602432012558
    2. ' for' → logprob: -1.1736024618148804
    3. 'for' → logprob: -3.423602342605591
    4. 'n' → logprob: -6.79860258102417
    5. ' n' → logprob: -6.79860258102417
    6. ' self' → logprob: -7.42360258102417
    7. 'self' → logprob: -8.048602104187012
    8. '#' → logprob: -8.673602104187012
    9. '   ' → logprob: -9.673602104187012
    10. '```' → logprob: -9.923602104187012

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.615792989730835
    2. '       ' → logprob: -0.865792989730835
    3. '):
' → logprob: -3.740792989730835
    4. ':
' → logprob: -4.865793228149414
    5. '):' → logprob: -6.490793228149414
    6. '(self' → logprob: -6.865793228149414
    7. '=' → logprob: -6.865793228149414
    8. '[' → logprob: -7.115793228149414
    9. ' :' → logprob: -7.115793228149414
    10. '   ' → logprob: -7.240793228149414

Token 377: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012616416439414024
    2. 'array' → logprob: -4.6376166343688965
    3. ' array' → logprob: -6.7626166343688965
    4. 'self' → logprob: -6.7626166343688965
    5. '           ' → logprob: -8.012616157531738
    6. ' self' → logprob: -9.012616157531738
    7. '   ' → logprob: -10.012616157531738
    8. '        ' → logprob: -10.887616157531738
    9. '```' → logprob: -11.137616157531738
    10. ' ' → logprob: -13.137616157531738

Token 378: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' (adapté à ' array') → logprob: -0.011655522510409355
    2. ' array' → logprob: -4.761655330657959
    3. 'self' → logprob: -6.011655330657959
    4. '       ' → logprob: -7.511655330657959
    5. ' self' → logprob: -10.511655807495117
    6. '   ' → logprob: -12.136655807495117
    7. '[array' → logprob: -13.761655807495117
    8. '	array' → logprob: -14.011655807495117
    9. 'arr' → logprob: -14.011655807495117
    10. '
' → logprob: -14.386655807495117

Token 379: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39373794198036194
    2. '):
' → logprob: -1.1437379121780396
    3. ':' → logprob: -5.01873779296875
    4. '   ' → logprob: -9.01873779296875
    5. '       ' → logprob: -9.76873779296875
    6. '):
' → logprob: -10.76873779296875
    7. ':
' → logprob: -11.76873779296875
    8. ')' → logprob: -12.01873779296875
    9. '):

' → logprob: -12.39373779296875
    10. ' ):' → logprob: -12.39373779296875

Token 380: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10132047533988953
    2. 'List' → logprob: -2.351320505142212
    3. ')' → logprob: -7.226320266723633
    4. ' list' → logprob: -8.851320266723633
    5. '):' → logprob: -9.101320266723633
    6. '):
' → logprob: -9.976320266723633
    7. '       ' → logprob: -10.101320266723633
    8. '   ' → logprob: -10.851320266723633
    9. '[list' → logprob: -11.976320266723633
    10. '[List' → logprob: -12.601320266723633

Token 381: '):' (ID: 3127)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5340811014175415
    2. '):
' → logprob: -1.4090811014175415
    3. '):' → logprob: -1.7840811014175415
    4. '   ' → logprob: -7.034080982208252
    5. '[' → logprob: -7.909080982208252
    6. '       ' → logprob: -9.03408145904541
    7. ')' → logprob: -10.65908145904541
    8. ' of' → logprob: -10.78408145904541
    9. '):

' → logprob: -11.40908145904541
    10. '```' → logprob: -11.53408145904541

Token 382: ' The' (ID: 623)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04134742543101311
    2. 'list' → logprob: -4.041347503662109
    3. 'List' → logprob: -4.666347503662109
    4. '       ' → logprob: -4.791347503662109
    5. ' List' → logprob: -5.916347503662109
    6. ' array' → logprob: -8.04134750366211
    7. ' The' → logprob: -8.16634750366211
    8. '[]' → logprob: -8.29134750366211
    9. 'The' → logprob: -8.54134750366211
    10. ')' → logprob: -8.66634750366211

Token 383: ' list' (ID: 1562)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.40919405221939087
    2. ' list' → logprob: -1.659193992614746
    3. 'array' → logprob: -2.159193992614746
    4. 'list' → logprob: -3.909193992614746
    5. ' initial' → logprob: -5.159193992614746
    6. '[array' → logprob: -6.534193992614746
    7. 'initial' → logprob: -6.784193992614746
    8. ' input' → logprob: -7.034193992614746
    9. ' given' → logprob: -7.909193992614746
    10. 'input' → logprob: -9.034193992614746

Token 384: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.02714642696082592
    2. '       ' → logprob: -4.277146339416504
    3. '[int' → logprob: -5.402146339416504
    4. ':' → logprob: -6.527146339416504
    5. 'of' → logprob: -6.527146339416504
    6. ')' → logprob: -6.777146339416504
    7. '):
' → logprob: -7.152146339416504
    8. '[' → logprob: -7.152146339416504
    9. ' with' → logprob: -7.402146339416504
    10. ' to' → logprob: -7.902146339416504

Token 385: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.2818039059638977
    2. ' initial' → logprob: -2.031803846359253
    3. 'values' → logprob: -2.531803846359253
    4. ' values' → logprob: -3.781803846359253
    5. 'elements' → logprob: -5.031804084777832
    6. 'int' → logprob: -6.031804084777832
    7. ' elements' → logprob: -6.156804084777832
    8. 'input' → logprob: -7.531804084777832
    9. ' int' → logprob: -8.656804084777832
    10. 'inte' → logprob: -8.781804084777832

Token 386: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.03044498898088932
    2. 'values' → logprob: -4.155445098876953
    3. ' elements' → logprob: -4.280445098876953
    4. 'elements' → logprob: -8.030445098876953
    5. ' integers' → logprob: -9.655445098876953
    6. ' initial' → logprob: -10.030445098876953
    7. ' data' → logprob: -11.905445098876953
    8. ' int' → logprob: -12.405445098876953
    9. 'initial' → logprob: -12.780445098876953
    10. '	values' → logprob: -12.780445098876953

Token 387: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0652899220585823
    2. ')' → logprob: -2.8152899742126465
    3. '):
' → logprob: -6.5652899742126465
    4. '):' → logprob: -7.0652899742126465
    5. '
' → logprob: -8.190289497375488
    6. '   ' → logprob: -8.315289497375488
    7. ' to' → logprob: -9.440289497375488
    8. ')
' → logprob: -9.565289497375488
    9. '[' → logprob: -9.940289497375488
    10. '           ' → logprob: -10.065289497375488

Token 388: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.06882746517658234
    2. ' build' → logprob: -2.8188273906707764
    3. 'initialize' → logprob: -5.1938276290893555
    4. ' initialize' → logprob: -7.3188276290893555
    5. 'populate' → logprob: -8.443827629089355
    6. 'construct' → logprob: -9.068827629089355
    7. 'insert' → logprob: -9.443827629089355
    8. 'be' → logprob: -10.193827629089355
    9. ' be' → logprob: -10.443827629089355
    10. '   ' → logprob: -10.818827629089355

Token 389: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06917704641819
    2. '       ' → logprob: -3.1941771507263184
    3. 'the' → logprob: -4.444177150726318
    4. ' into' → logprob: -5.319177150726318
    5. ' from' → logprob: -5.819177150726318
    6. ')' → logprob: -6.194177150726318
    7. ' at' → logprob: -7.194177150726318
    8. ')
' → logprob: -7.194177150726318
    9. '):
' → logprob: -7.694177150726318
    10. ' on' → logprob: -8.06917667388916

Token 390: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.35998326539993286
    2. ' tree' → logprob: -1.484983205795288
    3. 'segment' → logprob: -3.109983205795288
    4. ' segment' → logprob: -3.484983205795288
    5. 'self' → logprob: -8.609983444213867
    6. '   ' → logprob: -8.734983444213867
    7. 'node' → logprob: -9.609983444213867
    8. ')' → logprob: -10.359983444213867
    9. 'seg' → logprob: -10.484983444213867
    10. ' node' → logprob: -11.234983444213867

Token 391: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3491862416267395
    2. ')' → logprob: -1.7241861820220947
    3. '):
' → logprob: -2.3491861820220947
    4. '):' → logprob: -4.349186420440674
    5. ')
' → logprob: -4.974186420440674
    6. '   ' → logprob: -6.849186420440674
    7. '```' → logprob: -10.974185943603516
    8. '):

' → logprob: -12.099185943603516
    9. '           ' → logprob: -12.224185943603516
    10. '[' → logprob: -12.224185943603516

Token 392: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13469670712947845
    2. '):
' → logprob: -2.5096967220306396
    3. ')' → logprob: -3.6346967220306396
    4. '):' → logprob: -4.0096964836120605
    5. ')
' → logprob: -9.509696960449219
    6. '   ' → logprob: -9.634696960449219
    7. '):
' → logprob: -10.759696960449219
    8. '.' → logprob: -12.009696960449219
    9. '```' → logprob: -12.009696960449219
    10. ' ):
' → logprob: -12.384696960449219

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001244516926817596
    2. '
' → logprob: -6.75124454498291
    3. '        
' → logprob: -10.00124454498291
    4. '```' → logprob: -11.37624454498291
    5. ')' → logprob: -12.25124454498291
    6. '   ' → logprob: -12.62624454498291
    7. 'self' → logprob: -13.12624454498291
    8. '[' → logprob: -13.75124454498291
    9. '<|end|>' → logprob: -13.75124454498291
    10. '    
' → logprob: -14.12624454498291

Token 394: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003710894088726491
    2. '
' → logprob: -8.750370979309082
    3. '```' → logprob: -8.750370979309082
    4. ')' → logprob: -10.875370979309082
    5. '        
' → logprob: -11.500370979309082
    6. 'self' → logprob: -12.125370979309082
    7. '<|end|>' → logprob: -12.125370979309082
    8. '"""
' (adapté à ' """
') → logprob: -12.625370979309082
    9. ')
' → logprob: -12.875370979309082
    10. '"""' → logprob: -13.375370979309082

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012504660990089178
    2. '   ' → logprob: -7.126250267028809
    3. ' for' → logprob: -8.501250267028809
    4. 'self' → logprob: -8.876250267028809
    5. ' self' → logprob: -9.876250267028809
    6. 'for' → logprob: -10.001250267028809
    7. '	' → logprob: -12.626250267028809
    8. '```' → logprob: -13.751250267028809
    9. '	   ' → logprob: -14.501250267028809
    10. 'def' → logprob: -15.126250267028809

Token 396: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025192240718752146
    2. '       ' → logprob: -8.625251770019531
    3. '#' (adapté à ' #') → logprob: -10.625251770019531
    4. ' for' → logprob: -10.875251770019531
    5. '   ' → logprob: -11.250251770019531
    6. 'self' → logprob: -11.375251770019531
    7. 'n' → logprob: -12.875251770019531
    8. 'assert' → logprob: -13.375251770019531
    9. 'l' → logprob: -15.750251770019531
    10. '	for' → logprob: -16.37525177001953

Token 397: ' Set' (ID: 3957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00641053169965744
    2. '#' → logprob: -5.131410598754883
    3. 'n' → logprob: -8.631410598754883
    4. ' for' → logprob: -8.881410598754883
    5. 'self' → logprob: -9.506410598754883
    6. 'assert' → logprob: -10.006410598754883
    7. 'size' → logprob: -11.006410598754883
    8. 'length' → logprob: -12.131410598754883
    9. 'l' → logprob: -12.256410598754883
    10. 'k' → logprob: -12.506410598754883

Token 398: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6963780522346497
    2. 'self' → logprob: -1.0713779926300049
    3. ' for' → logprob: -2.071377992630005
    4. ' self' → logprob: -4.071378231048584
    5. ' the' → logprob: -4.446378231048584
    6. '   ' → logprob: -6.196378231048584
    7. 'the' → logprob: -6.571378231048584
    8. '       ' → logprob: -8.321377754211426
    9. ' leaves' → logprob: -8.821377754211426
    10. 'leaf' → logprob: -8.946377754211426

Token 399: ' leaves' (ID: 15657)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035017114132642746
    2. 'node' → logprob: -4.160017013549805
    3. 'self' → logprob: -5.410017013549805
    4. '#' → logprob: -5.660017013549805
    5. 'leaf' → logprob: -5.660017013549805
    6. ' for' → logprob: -6.035017013549805
    7. 'size' → logprob: -6.160017013549805
    8. 'le' → logprob: -6.285017013549805
    9. 'n' → logprob: -7.535017013549805
    10. '   ' → logprob: -9.160017013549805

Token 400: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2669270634651184
    2. 'for' → logprob: -1.7669270038604736
    3. '       ' → logprob: -2.7669270038604736
    4. '   ' → logprob: -8.016926765441895
    5. 'self' → logprob: -8.766926765441895
    6. ' self' → logprob: -9.891926765441895
    7. '	for' → logprob: -12.141926765441895
    8. '```' → logprob: -12.516926765441895
    9. '
' → logprob: -12.766926765441895
    10. ' at' → logprob: -13.016926765441895

Token 401: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2184450775384903
    2. 'the' → logprob: -2.093445062637329
    3. ' the' → logprob: -2.843445062637329
    4. ' self' → logprob: -4.218445301055908
    5. '   ' → logprob: -11.21844482421875
    6. '[self' → logprob: -12.71844482421875
    7. '       ' → logprob: -13.71844482421875
    8. ' ' → logprob: -13.71844482421875
    9. '(self' → logprob: -13.84344482421875
    10. 'tree' → logprob: -13.96844482421875

Token 402: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.33438602089881897
    2. 'self' → logprob: -1.4593859910964966
    3. 'segment' → logprob: -3.709386110305786
    4. ' tree' → logprob: -3.834386110305786
    5. 'node' → logprob: -5.459385871887207
    6. ' segment' → logprob: -7.084385871887207
    7. ' self' → logprob: -7.709385871887207
    8. ' node' → logprob: -9.084385871887207
    9. 'seg' → logprob: -10.959385871887207
    10. '   ' → logprob: -10.959385871887207

Token 403: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2082521915435791
    2. '       ' → logprob: -1.708252191543579
    3. 'for' → logprob: -5.208251953125
    4. '   ' → logprob: -7.208251953125
    5. 'self' → logprob: -8.208251953125
    6. ' self' → logprob: -9.583251953125
    7. ' to' → logprob: -9.708251953125
    8. ':' → logprob: -10.083251953125
    9. '
' → logprob: -10.333251953125
    10. '```' → logprob: -10.833251953125

Token 404: ' the' (ID: 290)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.07018350809812546
    2. ' array' → logprob: -2.695183515548706
    3. '[array' → logprob: -8.945183753967285
    4. 'list' → logprob: -10.320183753967285
    5. 'the' → logprob: -10.570183753967285
    6. ' the' → logprob: -10.945183753967285
    7. '   ' → logprob: -11.570183753967285
    8. '=array' → logprob: -12.195183753967285
    9. 'self' → logprob: -12.320183753967285
    10. '	array' → logprob: -12.445183753967285

Token 405: ' initial' (ID: 4871)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.06378486007452011
    2. ' array' → logprob: -3.5637848377227783
    3. 'values' → logprob: -3.8137848377227783
    4. ' values' → logprob: -5.188785076141357
    5. 'elements' → logprob: -6.188785076141357
    6. ' given' → logprob: -6.813785076141357
    7. 'input' → logprob: -7.188785076141357
    8. ' elements' → logprob: -7.563785076141357
    9. 'initial' → logprob: -8.0637845993042
    10. 'given' → logprob: -8.3137845993042

Token 406: ' values' (ID: 4824)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.35558128356933594
    2. ' array' → logprob: -1.605581283569336
    3. 'values' → logprob: -2.980581283569336
    4. ' values' → logprob: -3.105581283569336
    5. ' elements' → logprob: -6.480581283569336
    6. 'elements' → logprob: -6.730581283569336
    7. '   ' → logprob: -8.980581283569336
    8. '[array' → logprob: -10.855581283569336
    9. '```' → logprob: -11.980581283569336
    10. '       ' → logprob: -12.855581283569336

Token 407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13272900879383087
    2. ' for' → logprob: -2.1327290534973145
    3. 'for' → logprob: -5.2577290534973145
    4. '
' → logprob: -8.757728576660156
    5. 'self' → logprob: -9.132728576660156
    6. '   ' → logprob: -9.382728576660156
    7. ',' → logprob: -9.882728576660156
    8. '```' → logprob: -10.132728576660156
    9. '        
' → logprob: -10.257728576660156
    10. ':' → logprob: -10.507728576660156

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01827601157128811
    2. ' for' → logprob: -4.018276214599609
    3. 'for' → logprob: -9.51827621459961
    4. '   ' → logprob: -10.89327621459961
    5. ',' → logprob: -11.01827621459961
    6. ' at' → logprob: -12.64327621459961
    7. '```' → logprob: -12.76827621459961
    8. '
' → logprob: -13.14327621459961
    9. ':' → logprob: -13.26827621459961
    10. '	' → logprob: -13.39327621459961

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013220344670116901
    2. ' for' → logprob: -4.388220310211182
    3. '       ' → logprob: -7.263220310211182
    4. '   ' → logprob: -11.88822078704834
    5. 'n' → logprob: -13.26322078704834
    6. '	for' → logprob: -15.01322078704834
    7. 'self' → logprob: -15.51322078704834
    8. 'i' → logprob: -16.013219833374023
    9. ' ' → logprob: -16.138219833374023
    10. '```' → logprob: -16.388219833374023

Token 410: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048587486147880554
    2. ' i' → logprob: -3.0485875606536865
    3. '	i' → logprob: -16.298587799072266
    4. '   ' → logprob: -16.923587799072266
    5. ' ' → logprob: -17.673587799072266
    6. 'idx' → logprob: -17.798587799072266
    7. '(i' → logprob: -19.673587799072266
    8. 'index' → logprob: -19.798587799072266
    9. '_i' → logprob: -20.548587799072266
    10. '  ' → logprob: -20.673587799072266

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009781945496797562
    2. 'in' → logprob: -4.634781837463379
    3. ',' → logprob: -11.009781837463379
    4. ' ' → logprob: -12.259781837463379
    5. '   ' → logprob: -13.384781837463379
    6. 'n' → logprob: -14.259781837463379
    7. 'range' → logprob: -14.259781837463379
    8. 'In' → logprob: -14.884781837463379
    9. '  ' → logprob: -14.884781837463379
    10. '    ' → logprob: -15.134781837463379

Token 412: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. '	range' → logprob: -19.875123977661133
    5. '(range' → logprob: -20.000123977661133
    6. '  ' → logprob: -20.000123977661133
    7. ' ' → logprob: -20.375123977661133
    8. '    ' → logprob: -21.500123977661133
    9. '
' → logprob: -21.750123977661133
    10. 'r' → logprob: -22.000123977661133

Token 413: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003542926860973239
    2. '(len' → logprob: -9.000354766845703
    3. 'self' → logprob: -9.250354766845703
    4. ' self' → logprob: -9.375354766845703
    5. '(' → logprob: -10.000354766845703
    6. '(n' → logprob: -13.500354766845703
    7. '(s' → logprob: -13.875354766845703
    8. '	self' → logprob: -14.125354766845703
    9. ' (' → logprob: -14.250354766845703
    10. '   ' → logprob: -15.500354766845703

Token 414: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.05899514630436897
    2. 'n' → logprob: -3.183995246887207
    3. 'size' → logprob: -4.683995246887207
    4. '.size' → logprob: -5.058995246887207
    5. ' size' → logprob: -9.308995246887207
    6. '.' → logprob: -10.308995246887207
    7. ' n' → logprob: -10.433995246887207
    8. 'len' → logprob: -10.433995246887207
    9. 'self' → logprob: -10.808995246887207
    10. '   ' → logprob: -11.558995246887207

Token 415: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38690000772476196
    2. '):
' → logprob: -1.1368999481201172
    3. ' ):' → logprob: -11.011899948120117
    4. '):
' → logprob: -11.761899948120117
    5. ' ):
' → logprob: -12.761899948120117
    6. ')' → logprob: -14.636899948120117
    7. '}:' → logprob: -14.761899948120117
    8. ':' → logprob: -15.386899948120117
    9. '   ' → logprob: -15.511899948120117
    10. ']:' → logprob: -15.761899948120117

Token 416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005760280764661729
    2. ':' → logprob: -8.50057601928711
    3. ' self' → logprob: -8.50057601928711
    4. ':
' → logprob: -10.00057601928711
    5. '   ' → logprob: -10.50057601928711
    6. 'self' → logprob: -10.87557601928711
    7. ',' → logprob: -10.87557601928711
    8. '       ' → logprob: -11.25057601928711
    9. '	       ' → logprob: -11.75057601928711
    10. '               ' → logprob: -11.75057601928711

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015878198901191354
    2. ' self' → logprob: -6.501587867736816
    3. '           ' → logprob: -9.501587867736816
    4. '   ' → logprob: -11.751587867736816
    5. '       ' → logprob: -13.376587867736816
    6. '               ' → logprob: -14.001587867736816
    7. '	self' → logprob: -15.251587867736816
    8. ' ' → logprob: -15.751587867736816
    9. '  ' → logprob: -16.5015869140625
    10. '[self' → logprob: -18.3765869140625

Token 418: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.0005781737272627652
    2. '.' → logprob: -7.5005784034729
    3. 'node' → logprob: -11.375577926635742
    4. ' .' → logprob: -11.375577926635742
    5. '.user' → logprob: -13.500577926635742
    6. '[node' → logprob: -16.250577926635742
    7. 'self' → logprob: -16.750577926635742
    8. '.token' → logprob: -16.750577926635742
    9. ').' → logprob: -16.750577926635742
    10. '].' → logprob: -16.875577926635742

Token 419: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0009414771921001375
    2. '[' → logprob: -7.000941276550293
    3. '[i' → logprob: -10.625941276550293
    4. 'self' → logprob: -12.875941276550293
    5. ' [' → logprob: -13.625941276550293
    6. '[
' → logprob: -14.125941276550293
    7. '[s' → logprob: -15.000941276550293
    8. '[size' → logprob: -15.500941276550293
    9. ' self' → logprob: -16.00094223022461
    10. '   ' → logprob: -16.12594223022461

Token 420: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -6.635164754698053e-05
    2. 'size' → logprob: -9.625066757202148
    3. '	size' → logprob: -16.12506675720215
    4. '.s' → logprob: -16.37506675720215
    5. ':size' → logprob: -17.62506675720215
    6. ' size' → logprob: -17.75006675720215
    7. '=size' → logprob: -17.75006675720215
    8. '.' → logprob: -17.87506675720215
    9. '<size' → logprob: -18.00006675720215
    10. ',size' → logprob: -19.62506675720215

Token 421: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1345217525959015
    2. ' +' → logprob: -2.134521722793579
    3. '+i' → logprob: -4.884521961212158
    4. '+
' → logprob: -13.759521484375
    5. '＋' → logprob: -15.634521484375
    6. ' plus' → logprob: -15.634521484375
    7. '+=' → logprob: -15.759521484375
    8. '[' → logprob: -16.134521484375
    9. '[i' → logprob: -16.134521484375
    10. ' ' → logprob: -16.384521484375

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.375045776367188
    4. '[i' → logprob: -18.125045776367188
    5. '	i' → logprob: -18.250045776367188
    6. '(i' → logprob: -19.625045776367188
    7. ' ' → logprob: -19.750045776367188
    8. ')i' → logprob: -20.125045776367188
    9. '```' → logprob: -20.125045776367188
    10. '_i' → logprob: -20.500045776367188

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01127086766064167
    2. '=' → logprob: -5.136270999908447
    3. ']=' → logprob: -5.386270999908447
    4. ' ]' → logprob: -7.511270999908447
    5. ' =' → logprob: -8.511270523071289
    6. ')' → logprob: -14.386270523071289
    7. ']
' → logprob: -16.88627052307129
    8. '[' → logprob: -17.13627052307129
    9. ' ' → logprob: -17.26127052307129
    10. ')=' → logprob: -17.38627052307129

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -17.508615493774414
    4. '=

' → logprob: -17.758615493774414
    5. '=i' → logprob: -18.758615493774414
    6. ']=' → logprob: -18.883615493774414
    7. ']' → logprob: -19.508615493774414
    8. '.=' → logprob: -19.633615493774414
    9. '＝' → logprob: -19.758615493774414
    10. '=s' → logprob: -20.133615493774414

Token 425: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.014163747429847717
    2. ' array' → logprob: -4.264163970947266
    3. '	array' → logprob: -17.014163970947266
    4. '   ' → logprob: -17.139163970947266
    5. '(array' → logprob: -17.139163970947266
    6. '[array' → logprob: -17.889163970947266
    7. '$array' → logprob: -18.139163970947266
    8. 'Array' → logprob: -18.139163970947266
    9. ' ' → logprob: -18.514163970947266
    10. '=array' → logprob: -18.764163970947266

Token 426: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. ' [' → logprob: -17.5
    4. '   ' → logprob: -18.0
    5. 'i' → logprob: -19.5
    6. '```' → logprob: -19.625
    7. '[I' → logprob: -20.125
    8. '[
' → logprob: -20.125
    9. '[self' → logprob: -20.75
    10. '(i' → logprob: -21.5

Token 427: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004002832865808159
    2. ']' → logprob: -8.75040054321289
    3. ')
' → logprob: -9.12540054321289
    4. '<|end|>' → logprob: -9.62540054321289
    5. '       ' → logprob: -9.75040054321289
    6. '   ' → logprob: -12.75040054321289
    7. ' )' → logprob: -12.87540054321289
    8. '}' → logprob: -14.37540054321289
    9. '<|end|>' → logprob: -14.37540054321289
    10. ' ' → logprob: -14.75040054321289

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001804415020160377
    2. '
' → logprob: -6.751804351806641
    3. '        
' → logprob: -8.00180435180664
    4. '<|end|>' → logprob: -8.75180435180664
    5. '```' → logprob: -10.50180435180664
    6. '   ' → logprob: -10.87680435180664
    7. '  
' → logprob: -11.25180435180664
    8. '\n' → logprob: -11.25180435180664
    9. 'for' → logprob: -11.37680435180664
    10. '    
' → logprob: -11.62680435180664

Token 429: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4130181074142456
    2. '       ' → logprob: -1.6630181074142456
    3. ' for' → logprob: -1.9130181074142456
    4. '   ' → logprob: -6.913018226623535
    5. '
' → logprob: -9.538018226623535
    6. '	for' → logprob: -9.663018226623535
    7. '        
' → logprob: -11.538018226623535
    8. '    
' → logprob: -13.038018226623535
    9. '           ' → logprob: -13.163018226623535
    10. '	' → logprob: -13.288018226623535

Token 430: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007574541959911585
    2. ' for' → logprob: -7.250757217407227
    3. '       ' → logprob: -10.000757217407227
    4. '   ' → logprob: -13.125757217407227
    5. '	for' → logprob: -16.750757217407227
    6. ' ' → logprob: -17.375757217407227
    7. 'from' → logprob: -17.500757217407227
    8. 'def' → logprob: -17.625757217407227
    9. '#' → logprob: -17.875757217407227
    10. '
' → logprob: -18.125757217407227

Token 431: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5366977453231812
    2. 'for' → logprob: -1.0366977453231812
    3. '       ' → logprob: -3.4116978645324707
    4. '   ' → logprob: -3.6616978645324707
    5. ' the' → logprob: -6.536697864532471
    6. '	for' → logprob: -8.286697387695312
    7. ' ' → logprob: -9.161697387695312
    8. 'the' → logprob: -9.411697387695312
    9. '           ' → logprob: -10.661697387695312
    10. 'def' → logprob: -11.036697387695312

Token 432: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7201038599014282
    2. ' for' → logprob: -1.5951038599014282
    3. 'self' → logprob: -1.5951038599014282
    4. 'internal' → logprob: -2.9701037406921387
    5. ' internal' → logprob: -3.3451037406921387
    6. ' self' → logprob: -4.970103740692139
    7. 'tree' → logprob: -5.220103740692139
    8. 'node' → logprob: -5.970103740692139
    9. ' tree' → logprob: -6.595103740692139
    10. '   ' → logprob: -6.845103740692139

Token 433: ' levels' (ID: 8374)
  Prédit: ' levels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' levels' → logprob: -0.5556734204292297
    2. ' layers' → logprob: -1.430673360824585
    3. 'levels' → logprob: -2.055673360824585
    4. 'layers' → logprob: -2.930673360824585
    5. ' nodes' → logprob: -5.805673599243164
    6. 'nodes' → logprob: -7.055673599243164
    7. '   ' → logprob: -7.305673599243164
    8. 'for' → logprob: -7.555673599243164
    9. ' ' → logprob: -8.305673599243164
    10. '_levels' → logprob: -8.680673599243164

Token 434: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10454937070608139
    2. ' for' → logprob: -2.4795494079589844
    3. 'for' → logprob: -4.354549407958984
    4. ' of' → logprob: -6.729549407958984
    5. '   ' → logprob: -7.104549407958984
    6. ' by' → logprob: -8.604549407958984
    7. ' in' → logprob: -9.104549407958984
    8. '           ' → logprob: -9.229549407958984
    9. ',' → logprob: -10.229549407958984
    10. '        
' → logprob: -10.354549407958984

Token 435: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5569074153900146
    2. ' the' → logprob: -1.0569074153900146
    3. 'self' → logprob: -2.5569074153900146
    4. ' self' → logprob: -6.556907653808594
    5. 'for' → logprob: -7.931907653808594
    6. '   ' → logprob: -9.181907653808594
    7. ' for' → logprob: -10.681907653808594
    8. ' ' → logprob: -11.181907653808594
    9. '```' → logprob: -11.806907653808594
    10. 'range' → logprob: -12.056907653808594

Token 436: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.2000705748796463
    2. 'tree' → logprob: -1.9500706195831299
    3. 'self' → logprob: -3.45007061958313
    4. 'for' → logprob: -5.450070381164551
    5. ' for' → logprob: -7.450070381164551
    6. '   ' → logprob: -7.575070381164551
    7. ' self' → logprob: -7.700070381164551
    8. 'segment' → logprob: -7.700070381164551
    9. ' segment' → logprob: -8.45007038116455
    10. 'node' → logprob: -8.57507038116455

Token 437: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01745305024087429
    2. ' for' → logprob: -4.142453193664551
    3. '
' → logprob: -7.767453193664551
    4. 'for' → logprob: -8.14245319366455
    5. ' by' → logprob: -8.26745319366455
    6. '        
' → logprob: -9.26745319366455
    7. '   ' → logprob: -9.76745319366455
    8. ',' → logprob: -9.89245319366455
    9. '           ' → logprob: -10.01745319366455
    10. ' in' → logprob: -10.14245319366455

Token 438: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.823253333568573
    2. 'self' → logprob: -1.1982533931732178
    3. '   ' → logprob: -2.3232533931732178
    4. 'range' → logprob: -2.4482533931732178
    5. ' for' → logprob: -3.1982533931732178
    6. ' range' → logprob: -4.573253154754639
    7. ' self' → logprob: -4.573253154754639
    8. ' reversed' → logprob: -5.323253154754639
    9. '       ' → logprob: -5.573253154754639
    10. 'reverse' → logprob: -6.698253154754639

Token 439: ' binary' (ID: 15600)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.24738332629203796
    2. 'self' → logprob: -1.9973833560943604
    3. 'for' → logprob: -3.1223833560943604
    4. ' op' → logprob: -4.122383117675781
    5. 'binary' → logprob: -5.372383117675781
    6. ' for' → logprob: -5.497383117675781
    7. ' self' → logprob: -5.747383117675781
    8. 'operation' → logprob: -5.872383117675781
    9. ' operation' → logprob: -5.997383117675781
    10. '   ' → logprob: -5.997383117675781

Token 440: ' operation' (ID: 9506)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.02412492223083973
    2. 'operation' → logprob: -3.77412486076355
    3. '_op' → logprob: -7.524125099182129
    4. ' operation' → logprob: -8.524125099182129
    5. '_operation' → logprob: -9.649125099182129
    6. ' op' → logprob: -10.024125099182129
    7. '   ' → logprob: -11.274125099182129
    8. 'operator' → logprob: -12.399125099182129
    9. '	op' → logprob: -12.524125099182129
    10. 'def' → logprob: -13.149125099182129

Token 441: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015283637680113316
    2. '
' → logprob: -4.890283584594727
    3. ' for' → logprob: -5.015283584594727
    4. 'for' → logprob: -7.515283584594727
    5. '        
' → logprob: -8.390283584594727
    6. '   ' → logprob: -9.265283584594727
    7. '           ' → logprob: -10.640283584594727
    8. '```' → logprob: -10.640283584594727
    9. ',' → logprob: -11.140283584594727
    10. '    
' → logprob: -11.265283584594727

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007107630372047424
    2. '
' → logprob: -8.125710487365723
    3. ' for' → logprob: -8.250710487365723
    4. 'for' → logprob: -9.125710487365723
    5. '   ' → logprob: -10.500710487365723
    6. '	' → logprob: -12.250710487365723
    7. '           ' → logprob: -12.500710487365723
    8. ',' → logprob: -13.000710487365723
    9. '        
' → logprob: -13.000710487365723
    10. '```' → logprob: -13.500710487365723

Token 443: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.033744826912879944
    2. ' for' → logprob: -3.5337448120117188
    3. '       ' → logprob: -5.533744812011719
    4. '   ' → logprob: -10.408744812011719
    5. '	for' → logprob: -12.408744812011719
    6. '
' → logprob: -14.158744812011719
    7. ' ' → logprob: -15.658744812011719
    8. '	' → logprob: -16.65874481201172
    9. '           ' → logprob: -17.53374481201172
    10. '        
' → logprob: -17.90874481201172

Token 444: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04364929348230362
    2. 'i' → logprob: -3.168649196624756
    3. ' self' → logprob: -7.418649196624756
    4. ' ' → logprob: -10.918649673461914
    5. 'self' → logprob: -11.293649673461914
    6. '   ' → logprob: -12.418649673461914
    7. ' s' → logprob: -12.543649673461914
    8. ' (' → logprob: -12.668649673461914
    9. ' j' → logprob: -13.168649673461914
    10. '  ' → logprob: -13.543649673461914

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007611124310642481
    2. 'in' → logprob: -4.882611274719238
    3. ' ' → logprob: -13.257611274719238
    4. ' self' → logprob: -13.882611274719238
    5. 'self' → logprob: -14.007611274719238
    6. ' i' → logprob: -14.382611274719238
    7. '   ' → logprob: -15.382611274719238
    8. '    ' → logprob: -15.757611274719238
    9. 'range' → logprob: -15.757611274719238
    10. '	in' → logprob: -15.882611274719238

Token 446: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022403299808502
    2. ' range' → logprob: -2.350224018096924
    3. 're' → logprob: -11.350224494934082
    4. '(range' → logprob: -12.975224494934082
    5. ' reversed' → logprob: -13.350224494934082
    6. 'self' → logprob: -13.850224494934082
    7. '   ' → logprob: -14.725224494934082
    8. 'r' → logprob: -16.350223541259766
    9. '	range' → logprob: -16.350223541259766
    10. 'reverse' → logprob: -16.350223541259766

Token 447: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001176416757516563
    2. 'self' → logprob: -6.751176357269287
    3. ' self' → logprob: -13.251176834106445
    4. '   ' → logprob: -13.251176834106445
    5. '[self' → logprob: -13.251176834106445
    6. '(' → logprob: -15.001176834106445
    7. '	self' → logprob: -15.876176834106445
    8. '=self' → logprob: -16.001176834106445
    9. '       ' → logprob: -16.126176834106445
    10. '(
' → logprob: -16.751176834106445

Token 448: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07348211854696274
    2. 'size' → logprob: -3.573482036590576
    3. '.size' → logprob: -4.073482036590576
    4. '[self' → logprob: -4.823482036590576
    5. '       ' → logprob: -5.073482036590576
    6. '=self' → logprob: -6.073482036590576
    7. '   ' → logprob: -6.198482036590576
    8. ' self' → logprob: -6.323482036590576
    9. '(self' → logprob: -6.948482036590576
    10. '
' → logprob: -6.948482036590576

Token 449: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740908145904541
    2. '-' → logprob: -0.9740908145904541
    3. ' ' → logprob: -11.849090576171875
    4. '   ' → logprob: -12.099090576171875
    5. '  ' → logprob: -14.349090576171875
    6. ' ' → logprob: -15.474090576171875
    7. '//' → logprob: -15.599090576171875
    8. '       ' → logprob: -17.349090576171875
    9. '+' → logprob: -17.349090576171875
    10. ' //' → logprob: -17.599090576171875

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '
' → logprob: -18.625001907348633
    6. '```' → logprob: -19.625001907348633
    7. '１' → logprob: -20.625001907348633
    8. '       ' → logprob: -20.750001907348633
    9. '  ' → logprob: -20.750001907348633
    10. '    ' → logprob: -21.625001907348633

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '
' → logprob: -16.875
    5. '   ' → logprob: -17.0
    6. '```' → logprob: -17.5
    7. '１' → logprob: -18.75
    8. '  ' → logprob: -19.625
    9. '0' → logprob: -19.875
    10. '

' → logprob: -20.375

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017040544480551034
    2. ' ,' → logprob: -9.125170707702637
    3. '-' → logprob: -10.500170707702637
    4. ' -' → logprob: -11.250170707702637
    5. ',-' → logprob: -11.375170707702637
    6. '0' → logprob: -12.375170707702637
    7. '   ' → logprob: -13.125170707702637
    8. '1' → logprob: -13.250170707702637
    9. ',
' → logprob: -14.250170707702637
    10. '```' → logprob: -14.375170707702637

Token 453: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32149139046669006
    2. '0' → logprob: -1.4464913606643677
    3. ' -' → logprob: -3.3214914798736572
    4. ' ' → logprob: -5.696491241455078
    5. '   ' → logprob: -9.821491241455078
    6. '    ' → logprob: -11.321491241455078
    7. '  ' → logprob: -12.071491241455078
    8. '     ' → logprob: -12.446491241455078
    9. '       ' → logprob: -13.321491241455078
    10. '      ' → logprob: -13.946491241455078

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010592486942186952
    2. '-' → logprob: -7.251059055328369
    3. ' ' → logprob: -8.001059532165527
    4. ' -' → logprob: -11.251059532165527
    5. '   ' → logprob: -14.251059532165527
    6. '  ' → logprob: -16.12605857849121
    7. '    ' → logprob: -16.25105857849121
    8. '
' → logprob: -17.00105857849121
    9. '     ' → logprob: -17.25105857849121
    10. '```' → logprob: -17.87605857849121

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017894010990858078
    2. '-' → logprob: -4.2678937911987305
    3. ' -' → logprob: -6.2678937911987305
    4. ',-' → logprob: -6.7678937911987305
    5. ' ,' → logprob: -7.6428937911987305
    6. '   ' → logprob: -8.76789379119873
    7. '       ' → logprob: -11.39289379119873
    8. ',
' → logprob: -11.51789379119873
    9. ' ,-' → logprob: -11.64289379119873
    10. '    ' → logprob: -12.76789379119873

Token 456: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013271415373310447
    2. ' -' → logprob: -6.626327037811279
    3. '   ' → logprob: -13.751327514648438
    4. '```' → logprob: -16.876327514648438
    5. '  ' → logprob: -17.251327514648438
    6. ' ' → logprob: -17.501327514648438
    7. '-i' → logprob: -17.751327514648438
    8. '           ' → logprob: -17.751327514648438
    9. '-step' → logprob: -18.251327514648438
    10. '    ' → logprob: -18.501327514648438

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.625004768371582
    3. '-' → logprob: -13.625004768371582
    4. ' -' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '  ' → logprob: -20.125003814697266
    7. ')' → logprob: -20.875003814697266
    8. 'i' → logprob: -21.250003814697266
    9. '１' → logprob: -21.375003814697266
    10. '```' → logprob: -21.500003814697266

Token 458: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5208678245544434
    2. '):' → logprob: -1.0208678245544434
    3. ',' → logprob: -3.6458678245544434
    4. '-' → logprob: -4.020867824554443
    5. '   ' → logprob: -8.020868301391602
    6. ',-' → logprob: -8.145868301391602
    7. '       ' → logprob: -8.395868301391602
    8. ')' → logprob: -8.645868301391602
    9. ':' → logprob: -8.770868301391602
    10. '):
' → logprob: -9.145868301391602

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013041645288467407
    2. ' self' → logprob: -6.8763041496276855
    3. 'self' → logprob: -8.751304626464844
    4. '               ' → logprob: -10.376304626464844
    5. '	       ' → logprob: -11.001304626464844
    6. '```' → logprob: -11.376304626464844
    7. '       ' → logprob: -11.501304626464844
    8. ' ' → logprob: -11.626304626464844
    9. '   ' → logprob: -11.751304626464844
    10. '[self' → logprob: -12.126304626464844

Token 460: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038095880299806595
    2. ' self' → logprob: -3.2880959510803223
    3. '           ' → logprob: -9.913095474243164
    4. '               ' → logprob: -12.913095474243164
    5. '	self' → logprob: -13.913095474243164
    6. '   ' → logprob: -14.538095474243164
    7. ' ' → logprob: -14.663095474243164
    8. '[self' → logprob: -15.163095474243164
    9. '```' → logprob: -15.288095474243164
    10. '`' → logprob: -16.913095474243164

Token 461: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.000205566844670102
    2. 'node' → logprob: -8.750205993652344
    3. '.' → logprob: -10.125205993652344
    4. '.user' → logprob: -13.750205993652344
    5. '[node' → logprob: -13.875205993652344
    6. '.token' → logprob: -14.125205993652344
    7. ' node' → logprob: -14.125205993652344
    8. '	node' → logprob: -14.250205993652344
    9. '].' → logprob: -14.625205993652344
    10. ' .' → logprob: -14.875205993652344

Token 462: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003404687449801713
    2. '[' → logprob: -8.000340461730957
    3. '[self' → logprob: -12.375340461730957
    4. ' [' → logprob: -14.500340461730957
    5. '[node' → logprob: -16.125341415405273
    6. '[I' → logprob: -16.875341415405273
    7. '   ' → logprob: -17.500341415405273
    8. 'i' → logprob: -17.500341415405273
    9. '=' → logprob: -17.750341415405273
    10. '[
' → logprob: -17.750341415405273

Token 463: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3076048195362091
    2. ' =' → logprob: -1.5576047897338867
    3. ']' → logprob: -2.9326047897338867
    4. ']=' → logprob: -7.057604789733887
    5. '=self' → logprob: -10.932604789733887
    6. ' ]' → logprob: -11.307604789733887
    7. '[' → logprob: -13.057604789733887
    8. 'self' → logprob: -13.807604789733887
    9. ')' → logprob: -14.307604789733887
    10. ' ' → logprob: -14.932604789733887

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007106438861228526
    2. ' =' → logprob: -7.250710487365723
    3. '=self' → logprob: -14.125710487365723
    4. 'self' → logprob: -20.37571144104004
    5. '=
' → logprob: -20.37571144104004
    6. '.=' → logprob: -20.75071144104004
    7. '=

' → logprob: -20.87571144104004
    8. ' ' → logprob: -21.25071144104004
    9. '＝' → logprob: -21.37571144104004
    10. '[' → logprob: -21.62571144104004

Token 465: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858771339058876
    2. ' self' → logprob: -3.0485877990722656
    3. '           ' → logprob: -15.298587799072266
    4. '(self' → logprob: -17.673587799072266
    5. '[self' → logprob: -18.048587799072266
    6. '	self' → logprob: -18.423587799072266
    7. ' ' → logprob: -19.173587799072266
    8. '   ' → logprob: -19.798587799072266
    9. '               ' → logprob: -20.173587799072266
    10. 'op' → logprob: -20.298587799072266

Token 466: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.00018232580623589456
    2. '.' → logprob: -9.375182151794434
    3. '.node' → logprob: -9.750182151794434
    4. 'op' → logprob: -10.500182151794434
    5. 'node' → logprob: -12.875182151794434
    6. ' .' → logprob: -13.125182151794434
    7. 'self' → logprob: -13.250182151794434
    8. '	op' → logprob: -13.500182151794434
    9. '.ops' → logprob: -14.125182151794434
    10. ' op' → logprob: -14.500182151794434

Token 467: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022482690401375294
    2. '(' → logprob: -6.252248287200928
    3. 'self' → logprob: -8.50224781036377
    4. '(
' → logprob: -9.12724781036377
    5. ' (' → logprob: -12.25224781036377
    6. ' self' → logprob: -13.25224781036377
    7. ',self' → logprob: -15.00224781036377
    8. '   ' → logprob: -15.37724781036377
    9. '(s' → logprob: -15.75224781036377
    10. '[self' → logprob: -16.002248764038086

Token 468: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -2.9160102712921798e-05
    2. 'node' → logprob: -10.500029563903809
    3. '.' → logprob: -13.875029563903809
    4. ' .' → logprob: -15.375029563903809
    5. ',node' → logprob: -15.500029563903809
    6. ' node' → logprob: -16.500028610229492
    7. '	node' → logprob: -17.000028610229492
    8. ').' → logprob: -17.250028610229492
    9. '.user' → logprob: -17.500028610229492
    10. '[node' → logprob: -18.125028610229492

Token 469: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16022534668445587
    2. '[i' → logprob: -1.9102253913879395
    3. 'i' → logprob: -14.035224914550781
    4. '2' → logprob: -14.910224914550781
    5. '[
' → logprob: -17.53522491455078
    6. '(i' → logprob: -18.41022491455078
    7. '(' → logprob: -19.16022491455078
    8. ' ' → logprob: -19.28522491455078
    9. '```' → logprob: -19.78522491455078
    10. '   ' → logprob: -20.03522491455078

Token 470: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4904745817184448
    2. '*' → logprob: -0.9904745817184448
    3. ' <<' → logprob: -4.615474700927734
    4. ' *' → logprob: -5.115474700927734
    5. 'i' → logprob: -8.865474700927734
    6. '2' → logprob: -9.490474700927734
    7. ' ' → logprob: -9.615474700927734
    8. '1' → logprob: -9.865474700927734
    9. '   ' → logprob: -11.865474700927734
    10. '  ' → logprob: -12.490474700927734

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.75
    4. ' ' → logprob: -19.5
    5. '```' → logprob: -20.625
    6. '{' → logprob: -21.25
    7. '2' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '	' → logprob: -21.5
    10. '  ' → logprob: -21.75

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.875
    5. '
' → logprob: -19.0
    6. '2' → logprob: -19.5
    7. '{' → logprob: -19.875
    8. '

' → logprob: -20.3125
    9. '0' → logprob: -20.3125
    10. 'self' → logprob: -20.375

Token 473: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000514548271894455
    2. ' ],' → logprob: -7.875514507293701
    3. ']' → logprob: -9.00051498413086
    4. '],
' → logprob: -11.87551498413086
    5. ',' → logprob: -12.75051498413086
    6. '   ' → logprob: -15.00051498413086
    7. '       ' → logprob: -15.50051498413086
    8. ']
' → logprob: -16.25051498413086
    9. 'i' → logprob: -16.50051498413086
    10. '1' → logprob: -16.62551498413086

Token 474: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326398253440857
    2. 'self' → logprob: -1.313264012336731
    3. '    ' → logprob: -14.563263893127441
    4. '            ' → logprob: -14.563263893127441
    5. '	self' → logprob: -15.188263893127441
    6. '           ' → logprob: -15.688263893127441
    7. ' ' → logprob: -15.688263893127441
    8. '        ' → logprob: -16.438264846801758
    9. ' ' → logprob: -16.438264846801758
    10. '   ' → logprob: -16.688264846801758

Token 475: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.0711878314614296
    2. 'node' → logprob: -2.696187734603882
    3. 'i' → logprob: -7.571187973022461
    4. '[node' → logprob: -8.196187973022461
    5. '[i' → logprob: -8.446187973022461
    6. ' node' → logprob: -8.571187973022461
    7. '1' → logprob: -11.446187973022461
    8. '.i' → logprob: -11.571187973022461
    9. '(node' → logprob: -11.571187973022461
    10. '.' → logprob: -11.821187973022461

Token 476: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003715662460308522
    2. '(i' → logprob: -8.750371932983398
    3. '[(' → logprob: -9.000371932983398
    4. '[' → logprob: -9.625371932983398
    5. 'i' → logprob: -10.750371932983398
    6. ' [' → logprob: -14.750371932983398
    7. ' i' → logprob: -14.750371932983398
    8. '1' → logprob: -15.250371932983398
    9. ' (' → logprob: -15.375371932983398
    10. '[
' → logprob: -15.500371932983398

Token 477: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9146995327901095e-05
    2. ' i' → logprob: -10.875019073486328
    3. '           ' → logprob: -17.125019073486328
    4. '(i' → logprob: -17.500019073486328
    5. '   ' → logprob: -18.750019073486328
    6. '         ' → logprob: -19.000019073486328
    7. '               ' → logprob: -19.250019073486328
    8. '                   ' → logprob: -19.375019073486328
    9. '    ' → logprob: -19.750019073486328
    10. '            ' → logprob: -20.000019073486328

Token 478: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -3.91732100979425e-05
    2. ' <<' → logprob: -10.250039100646973
    3. '1' → logprob: -12.625039100646973
    4. ']' → logprob: -15.750039100646973
    5. '<' → logprob: -16.12504005432129
    6. ' ' → logprob: -16.75004005432129
    7. ']<<' → logprob: -16.87504005432129
    8. ')' → logprob: -17.12504005432129
    9. ')<<' → logprob: -17.87504005432129
    10. '[i' → logprob: -18.00004005432129

Token 479: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.25
    4. '2' → logprob: -17.0
    5. '           ' → logprob: -18.5
    6. '+' → logprob: -18.625
    7. '```' → logprob: -19.1875
    8. '       ' → logprob: -19.375
    9. '     ' → logprob: -19.4375
    10. 'i' → logprob: -19.8125

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '2' → logprob: -16.0
    4. '   ' → logprob: -16.25
    5. '
' → logprob: -18.125
    6. 'i' → logprob: -18.125
    7. '```' → logprob: -18.125
    8. '+' → logprob: -18.4375
    9. '           ' → logprob: -19.0
    10. '0' → logprob: -19.125

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003336218185722828
    2. '|' → logprob: -5.753336429595947
    3. ' )' → logprob: -9.753335952758789
    4. ')+' → logprob: -9.878335952758789
    5. ']' → logprob: -10.378335952758789
    6. ' |' → logprob: -11.628335952758789
    7. ')
' → logprob: -12.253335952758789
    8. ')|' → logprob: -12.628335952758789
    9. '1' → logprob: -15.128335952758789
    10. '   ' → logprob: -15.253335952758789

Token 482: ' +' (ID: 659)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0001564586127642542
    2. ' |' → logprob: -9.00015640258789
    3. ')' → logprob: -10.75015640258789
    4. ']' → logprob: -11.62515640258789
    5. '1' → logprob: -13.75015640258789
    6. '|get' → logprob: -14.62515640258789
    7. '│' → logprob: -14.75015640258789
    8. 'i' → logprob: -15.62515640258789
    9. ')|' → logprob: -16.12515640258789
    10. '|
' → logprob: -16.12515640258789

Token 483: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. '0' → logprob: -13.500381469726562
    4. '   ' → logprob: -16.875381469726562
    5. '  ' → logprob: -20.500381469726562
    6. '    ' → logprob: -20.875381469726562
    7. '```' → logprob: -21.250381469726562
    8. 'i' → logprob: -22.000381469726562
    9. ']' → logprob: -22.125381469726562
    10. '2' → logprob: -22.125381469726562

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -16.25
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -21.5
    6. ']' → logprob: -21.625
    7. '
' → logprob: -22.5
    8. '  ' → logprob: -22.6875
    9. ')' → logprob: -23.0625
    10. '１' → logprob: -23.125

Token 485: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00013905855303164572
    2. ' ])' → logprob: -9.375139236450195
    3. '])
' → logprob: -10.500139236450195
    4. ']' → logprob: -11.125139236450195
    5. ')' → logprob: -12.125139236450195
    6. ')])' → logprob: -12.750139236450195
    7. ')]' → logprob: -14.250139236450195
    8. '   ' → logprob: -14.500139236450195
    9. '])]' → logprob: -14.500139236450195
    10. '       ' → logprob: -14.625139236450195

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31998422741889954
    2. 'def' → logprob: -1.3199841976165771
    3. '
' → logprob: -6.069984436035156
    4. ' def' → logprob: -6.194984436035156
    5. '```' → logprob: -6.694984436035156
    6. '    
' → logprob: -6.944984436035156
    7. '<|end|>' → logprob: -9.444984436035156
    8. '        
' → logprob: -10.444984436035156
    9. '	def' → logprob: -10.694984436035156
    10. '  
' → logprob: -12.069984436035156

Token 487: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09424915909767151
    2. '   ' → logprob: -2.7192492485046387
    3. ' def' → logprob: -4.219249248504639
    4. '```' → logprob: -4.719249248504639
    5. '	def' → logprob: -8.84424877166748
    6. '
' → logprob: -9.09424877166748
    7. '    
' → logprob: -9.21924877166748
    8. '<|end|>' → logprob: -11.46924877166748
    9. ' ' → logprob: -11.84424877166748
    10. '        
' → logprob: -12.46924877166748

Token 488: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.4740943908691406
    2. 'update' → logprob: -0.9740943908691406
    3. '_update' → logprob: -10.97409439086914
    4. ' ' → logprob: -16.47409439086914
    5. '.update' → logprob: -16.84909439086914
    6. ' get' → logprob: -17.09909439086914
    7. 'get' → logprob: -17.34909439086914
    8. '	update' → logprob: -18.22409439086914
    9. 'upd' → logprob: -18.34909439086914
    10. ' updated' → logprob: -18.59909439086914

Token 489: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.2576454335358e-05
    2. '(' → logprob: -9.375092506408691
    3. '   ' → logprob: -12.750092506408691
    4. '(i' → logprob: -12.875092506408691
    5. ' (' → logprob: -13.875092506408691
    6. 'self' → logprob: -14.250092506408691
    7. '```' → logprob: -15.750092506408691
    8. '       ' → logprob: -16.250093460083008
    9. '	self' → logprob: -16.875093460083008
    10. '(s' → logprob: -16.875093460083008

Token 490: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.633853652398102e-05
    2. 'self' → logprob: -11.000056266784668
    3. ')' → logprob: -11.375056266784668
    4. '(' → logprob: -11.750056266784668
    5. ')(' → logprob: -11.875056266784668
    6. '   ' → logprob: -12.125056266784668
    7. ' (' → logprob: -13.000056266784668
    8. ',' → logprob: -13.875056266784668
    9. '       ' → logprob: -14.125056266784668
    10. ' ' → logprob: -14.250056266784668

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00698188366368413
    2. 'self' → logprob: -5.00698184967041
    3. ' i' → logprob: -8.38198184967041
    4. ' self' → logprob: -11.00698184967041
    5. 'idx' → logprob: -11.25698184967041
    6. 'index' → logprob: -12.13198184967041
    7. '   ' → logprob: -13.00698184967041
    8. ' ' → logprob: -15.25698184967041
    9. '       ' → logprob: -16.131982803344727
    10. '(self' → logprob: -16.256982803344727

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011105302110081539
    2. ' ,' → logprob: -9.125110626220703
    3. 'self' → logprob: -13.750110626220703
    4. ',self' → logprob: -14.375110626220703
    5. '‌,' → logprob: -15.250110626220703
    6. '   ' → logprob: -16.125110626220703
    7. '‍,' → logprob: -17.375110626220703
    8. '```' → logprob: -17.625110626220703
    9. '       ' → logprob: -17.750110626220703
    10. '`,' → logprob: -18.000110626220703

Token 493: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0024758970830589533
    2. ' val' → logprob: -6.002475738525391
    3. 'value' → logprob: -16.62747573852539
    4. 'v' → logprob: -16.87747573852539
    5. '   ' → logprob: -17.37747573852539
    6. '_val' → logprob: -18.62747573852539
    7. '	val' → logprob: -19.50247573852539
    8. ' ' → logprob: -19.75247573852539
    9. 'x' → logprob: -19.87747573852539
    10. '(val' → logprob: -20.50247573852539

Token 494: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0790824443101883
    2. '):' → logprob: -2.579082489013672
    3. '       ' → logprob: -9.329082489013672
    4. '   ' → logprob: -9.704082489013672
    5. '):
' → logprob: -10.329082489013672
    6. ')' → logprob: -12.204082489013672
    7. 'self' → logprob: -12.704082489013672
    8. '):

' → logprob: -13.704082489013672
    9. ' ' → logprob: -15.079082489013672
    10. '(self' → logprob: -15.954082489013672

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0206720617134124e-05
    2. '```' → logprob: -12.62501049041748
    3. '   ' → logprob: -12.87501049041748
    4. ':' → logprob: -12.87501049041748
    5. ':
' → logprob: -14.25001049041748
    6. '):
' → logprob: -15.25001049041748
    7. '      ' → logprob: -15.62501049041748
    8. ' self' → logprob: -15.75001049041748
    9. '	' → logprob: -15.87501049041748
    10. '#' → logprob: -17.000009536743164

Token 496: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012844942102674395
    2. '   ' → logprob: -9.375128746032715
    3. '```' → logprob: -11.375128746032715
    4. ' i' → logprob: -11.625128746032715
    5. 'i' → logprob: -11.625128746032715
    6. 'self' → logprob: -12.750128746032715
    7. '#' → logprob: -12.875128746032715
    8. '"""
' (adapté à ' """
') → logprob: -13.625128746032715
    9. 'index' → logprob: -13.750128746032715
    10. '"""' → logprob: -13.750128746032715

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014575013890862465
    2. '"""
' → logprob: -4.264575004577637
    3. ' """
' → logprob: -8.639575004577637
    4. '"
' → logprob: -9.139575004577637
    5. ')
' → logprob: -10.139575004577637
    6. '"' → logprob: -10.389575004577637
    7. '   ' → logprob: -10.639575004577637
    8. '
' → logprob: -11.389575004577637
    9. '"""' → logprob: -12.139575004577637
    10. '      ' → logprob: -13.139575004577637

Token 498: ' Update' (ID: 9152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4510321617126465
    2. 'i' → logprob: -1.7010321617126465
    3. ' i' → logprob: -2.3260321617126465
    4. 'pos' → logprob: -3.3260321617126465
    5. ' pos' → logprob: -3.7010321617126465
    6. '#' → logprob: -5.0760321617126465
    7. ' #' → logprob: -5.4510321617126465
    8. 'index' → logprob: -6.0760321617126465
    9. ' index' → logprob: -6.3260321617126465
    10. '   ' → logprob: -6.4510321617126465

Token 499: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16067920625209808
    2. 'self' → logprob: -2.4106791019439697
    3. '       ' → logprob: -3.1606791019439697
    4. '(self' → logprob: -4.285679340362549
    5. '   ' → logprob: -6.285679340362549
    6. ' (' → logprob: -8.16067886352539
    7. ' the' → logprob: -9.16067886352539
    8. ' i' → logprob: -9.28567886352539
    9. ' ' → logprob: -9.91067886352539
    10. ')' → logprob: -10.28567886352539

Token 500: ' value' (ID: 1432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0951039046049118
    2. 'index' → logprob: -2.9701039791107178
    3. ' i' → logprob: -4.220103740692139
    4. '#' → logprob: -5.095103740692139
    5. ' index' → logprob: -5.345103740692139
    6. 'self' → logprob: -5.345103740692139
    7. 'idx' → logprob: -6.095103740692139
    8. 'pos' → logprob: -6.220103740692139
    9. 'node' → logprob: -6.345103740692139
    10. 'value' → logprob: -7.345103740692139

Token 501: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.006897116545587778
    2. '       ' → logprob: -5.13189697265625
    3. '   ' → logprob: -7.38189697265625
    4. ' ' → logprob: -8.75689697265625
    5. 'at' → logprob: -9.25689697265625
    6. ' self' → logprob: -10.38189697265625
    7. 'self' → logprob: -10.88189697265625
    8. '_at' → logprob: -11.63189697265625
    9. '  ' → logprob: -11.75689697265625
    10. '    ' → logprob: -12.13189697265625

Token 502: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25351575016975403
    2. 'i' → logprob: -1.5035157203674316
    3. ' index' → logprob: -6.628515720367432
    4. 'index' → logprob: -8.37851619720459
    5. '   ' → logprob: -10.87851619720459
    6. ' the' → logprob: -12.12851619720459
    7. ' ' → logprob: -12.25351619720459
    8. ' self' → logprob: -13.87851619720459
    9. '       ' → logprob: -14.12851619720459
    10. '    ' → logprob: -14.37851619720459

Token 503: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17988385260105133
    2. 'i' → logprob: -1.8048838376998901
    3. ' ' → logprob: -9.67988395690918
    4. '   ' → logprob: -9.92988395690918
    5. '`' → logprob: -11.42988395690918
    6. '```' → logprob: -12.30488395690918
    7. '  ' → logprob: -12.55488395690918
    8. ' `' → logprob: -13.17988395690918
    9. '       ' → logprob: -13.67988395690918
    10. '    ' → logprob: -13.67988395690918

Token 504: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0441269688308239
    2. ' to' → logprob: -3.2941269874572754
    3. ')' → logprob: -6.294126987457275
    4. '   ' → logprob: -6.669126987457275
    5. ' in' → logprob: -7.419126987457275
    6. '(self' → logprob: -7.669126987457275
    7. ':' → logprob: -7.919126987457275
    8. '):
' → logprob: -8.044126510620117
    9. 'self' → logprob: -8.294126510620117
    10. 'to' → logprob: -8.544126510620117

Token 505: ' '' (ID: 461)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.061969030648469925
    2. ' val' → logprob: -2.811969041824341
    3. '   ' → logprob: -13.936968803405762
    4. '	val' → logprob: -15.686968803405762
    5. '       ' → logprob: -15.811968803405762
    6. '    ' → logprob: -16.311969757080078
    7. 'self' → logprob: -16.936969757080078
    8. '```' → logprob: -17.186969757080078
    9. '     ' → logprob: -17.561969757080078
    10. ',val' → logprob: -17.561969757080078

Token 506: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0010338802821934223
    2. ' val' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.126033782958984
    4. '	val' → logprob: -15.626033782958984
    5. '           ' → logprob: -16.251033782958984
    6. '       ' → logprob: -16.376033782958984
    7. '    ' → logprob: -18.001033782958984
    8. '  ' → logprob: -18.501033782958984
    9. ' ' → logprob: -18.501033782958984
    10. '     ' → logprob: -19.001033782958984

Token 507: ''.
' (ID: 49980)
  Prédit: ''
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -1.25059175491333
    2. '':
' → logprob: -1.50059175491333
    3. ''.' → logprob: -2.00059175491333
    4. ''.
' → logprob: -2.37559175491333
    5. '       ' → logprob: -2.62559175491333
    6. '):
' → logprob: -3.00059175491333
    7. ''' → logprob: -3.00059175491333
    8. ')'
' → logprob: -3.25059175491333
    9. ')' → logprob: -3.62559175491333
    10. '   ' → logprob: -4.62559175491333

Token 508: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038467496051453054
    2. '```' → logprob: -8.625384330749512
    3. '        
' → logprob: -9.250384330749512
    4. '
' → logprob: -10.625384330749512
    5. '"""
' → logprob: -11.125384330749512
    6. '  
' → logprob: -11.375384330749512
    7. '`' → logprob: -11.500384330749512
    8. '``' → logprob: -11.625384330749512
    9. '   ' → logprob: -12.000384330749512
    10. 'n' → logprob: -12.125384330749512

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014931005716789514
    2. '```' → logprob: -9.625149726867676
    3. '        
' → logprob: -10.000149726867676
    4. '"""
' → logprob: -11.125149726867676
    5. '
' → logprob: -12.250149726867676
    6. '  
' → logprob: -12.875149726867676
    7. '<|end|>' → logprob: -13.000149726867676
    8. '):
' → logprob: -13.000149726867676
    9. '"""' → logprob: -13.125149726867676
    10. '``' → logprob: -13.375149726867676

Token 510: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009486658498644829
    2. '"""
' → logprob: -4.884486675262451
    3. '```' → logprob: -7.134486675262451
    4. '``' → logprob: -7.509486675262451
    5. 'pos' → logprob: -9.009486198425293
    6. 'self' → logprob: -9.509486198425293
    7. '
' → logprob: -9.634486198425293
    8. 'node' → logprob: -9.759486198425293
    9. 'i' → logprob: -10.009486198425293
    10. '"""' → logprob: -10.634486198425293

Token 511: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2905081510543823
    2. '):' → logprob: -2.040508270263672
    3. '):
' → logprob: -2.665508270263672
    4. '       ' → logprob: -3.165508270263672
    5. '   ' → logprob: -4.790508270263672
    6. ':
' → logprob: -6.540508270263672
    7. '```' → logprob: -7.915508270263672
    8. ',' → logprob: -9.790508270263672
    9. ' :' → logprob: -9.915508270263672
    10. '           ' → logprob: -10.915508270263672

Token 512: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03764708712697029
    2. ' i' → logprob: -3.787647008895874
    3. 'i' → logprob: -4.287647247314453
    4. '           ' → logprob: -8.412647247314453
    5. '        ' → logprob: -9.037647247314453
    6. ' self' → logprob: -9.412647247314453
    7. 'self' → logprob: -9.662647247314453
    8. '   ' → logprob: -10.162647247314453
    9. '(i' → logprob: -11.912647247314453
    10. '```' → logprob: -12.037647247314453

Token 513: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740796387195587
    2. 'i' (adapté à ' i') → logprob: -0.9740796089172363
    3. '	i' → logprob: -13.724080085754395
    4. '   ' → logprob: -14.224080085754395
    5. '       ' → logprob: -14.599080085754395
    6. ' ' → logprob: -16.099079132080078
    7. 'int' → logprob: -16.474079132080078
    8. '    ' → logprob: -16.724079132080078
    9. ' ' → logprob: -16.974079132080078
    10. '        ' → logprob: -17.474079132080078

Token 514: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5611788630485535
    2. ' (' → logprob: -1.9361789226531982
    3. ':' → logprob: -2.4361789226531982
    4. ':int' → logprob: -2.9361789226531982
    5. '<|end|>' → logprob: -3.0611789226531982
    6. '):' → logprob: -3.9361789226531982
    7. ' ,' → logprob: -3.9361789226531982
    8. '(int' → logprob: -4.061178684234619
    9. '   ' → logprob: -4.436178684234619
    10. ' int' → logprob: -4.811178684234619

Token 515: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004309076175559312
    2. ' int' → logprob: -7.750431060791016
    3. ':int' → logprob: -16.750431060791016
    4. 'i' → logprob: -17.250431060791016
    5. ')' → logprob: -17.375431060791016
    6. '[int' → logprob: -17.625431060791016
    7. '       ' → logprob: -18.375431060791016
    8. '=int' → logprob: -18.375431060791016
    9. 'index' → logprob: -19.500431060791016
    10. '<int' → logprob: -19.500431060791016

Token 516: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026054682210087776
    2. '):
' → logprob: -3.901054620742798
    3. ')' → logprob: -5.526054859161377
    4. '   ' → logprob: -7.276054859161377
    5. ' ):' → logprob: -7.776054859161377
    6. ':' → logprob: -8.901054382324219
    7. '):

' → logprob: -8.901054382324219
    8. ',' → logprob: -9.901054382324219
    9. '       ' → logprob: -10.401054382324219
    10. '):
' → logprob: -10.776054382324219

Token 517: ' The' (ID: 623)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.33404242992401123
    2. ' i' → logprob: -1.7090424299240112
    3. ' The' → logprob: -3.334042549133301
    4. 'index' → logprob: -3.959042549133301
    5. ' ' → logprob: -4.084042549133301
    6. ')' → logprob: -4.459042549133301
    7. 'i' → logprob: -4.709042549133301
    8. ' int' → logprob: -5.334042549133301
    9. 'The' → logprob: -6.334042549133301
    10. 'Index' → logprob: -6.959042549133301

Token 518: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.06201877072453499
    2. 'index' → logprob: -2.812018871307373
    3. ' i' → logprob: -10.437018394470215
    4. 'i' → logprob: -11.312018394470215
    5. ')' → logprob: -12.312018394470215
    6. ' position' → logprob: -13.312018394470215
    7. ' ' → logprob: -13.562018394470215
    8. '#index' → logprob: -14.812018394470215
    9. ' update' → logprob: -15.437018394470215
    10. '0' → logprob: -15.437018394470215

Token 519: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5995182394981384
    2. ')' → logprob: -0.8495182394981384
    3. ' )' → logprob: -4.099518299102783
    4. '):
' → logprob: -6.599518299102783
    5. '        ' → logprob: -6.724518299102783
    6. '):' → logprob: -6.849518299102783
    7. '           ' → logprob: -7.349518299102783
    8. '   ' → logprob: -7.724518299102783
    9. '=' → logprob: -7.974518299102783
    10. ',' → logprob: -8.724517822265625

Token 520: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.07951083034276962
    2. 'update' → logprob: -2.5795109272003174
    3. ')' → logprob: -7.829510688781738
    4. ' i' → logprob: -8.954510688781738
    5. 'i' → logprob: -10.079510688781738
    6. '   ' → logprob: -10.829510688781738
    7. ' ' → logprob: -11.704510688781738
    8. '    ' → logprob: -12.079510688781738
    9. '_update' → logprob: -12.579510688781738
    10. '  ' → logprob: -12.579510688781738

Token 521: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8827858567237854
    2. '       ' → logprob: -1.2577857971191406
    3. ')
' → logprob: -1.6327857971191406
    4. '):
' → logprob: -2.3827857971191406
    5. '):' → logprob: -4.382785797119141
    6. '   ' → logprob: -6.757785797119141
    7. '```' → logprob: -8.50778579711914
    8. ' )
' → logprob: -8.88278579711914
    9. ' )' → logprob: -9.00778579711914
    10. '           ' → logprob: -10.25778579711914

Token 522: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2925553619861603
    2. '0' → logprob: -2.167555332183838
    3. ' i' → logprob: -2.917555332183838
    4. 'i' → logprob: -3.542555332183838
    5. 'int' → logprob: -3.542555332183838
    6. '):
' → logprob: -4.792555332183838
    7. ' int' → logprob: -5.417555332183838
    8. '):' → logprob: -5.667555332183838
    9. ' ' → logprob: -6.042555332183838
    10. '       ' → logprob: -6.542555332183838

Token 523: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1321117877960205
    2. '-based' → logprob: -2.5071117877960205
    3. ')
' → logprob: -3.5071117877960205
    4. 'based' → logprob: -5.257111549377441
    5. '<=' → logprob: -6.257111549377441
    6. ' <=' → logprob: -6.257111549377441
    7. '):
' → logprob: -6.757111549377441
    8. '-index' → logprob: -7.132111549377441
    9. '   ' → logprob: -7.757111549377441
    10. '       ' → logprob: -8.507111549377441

Token 524: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06376753002405167
    2. ')
' → logprob: -2.813767433166504
    3. '):
' → logprob: -6.438767433166504
    4. '       ' → logprob: -8.813767433166504
    5. '```' → logprob: -11.063767433166504
    6. '   ' → logprob: -11.563767433166504
    7. '):' → logprob: -11.813767433166504
    8. ')
' → logprob: -12.188767433166504
    9. ')`' → logprob: -12.938767433166504
    10. ')

' → logprob: -13.313767433166504

Token 525: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009705372503958642
    2. '        
' → logprob: -7.875970363616943
    3. '
' → logprob: -8.000970840454102
    4. '```' → logprob: -9.125970840454102
    5. '<|end|>' → logprob: -10.500970840454102
    6. '  
' → logprob: -10.625970840454102
    7. ')' → logprob: -10.875970840454102
    8. '"""
' → logprob: -11.500970840454102
    9. ')
' → logprob: -11.500970840454102
    10. 'n' → logprob: -11.750970840454102

Token 526: ' val' (ID: 1459)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -1.1264331340789795
    2. ' pos' → logprob: -1.6264331340789795
    3. ' """
' → logprob: -2.0014331340789795
    4. 'pos' → logprob: -2.0014331340789795
    5. '       ' → logprob: -2.7514331340789795
    6. ' j' → logprob: -3.3764331340789795
    7. ' node' → logprob: -4.251433372497559
    8. ' v' → logprob: -4.376433372497559
    9. ' val' → logprob: -4.501433372497559
    10. '"""' → logprob: -4.626433372497559

Token 527: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04738500714302063
    2. '):
' → logprob: -3.4223849773406982
    3. ')' → logprob: -4.422385215759277
    4. '   ' → logprob: -7.047385215759277
    5. ':' → logprob: -7.672385215759277
    6. '       ' → logprob: -8.297385215759277
    7. '):
' → logprob: -10.672385215759277
    8. '):

' → logprob: -11.297385215759277
    9. ' ' → logprob: -12.672385215759277
    10. ' ):' → logprob: -12.797385215759277

Token 528: 'Any' (ID: 11865)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005239616730250418
    2. 'int' → logprob: -8.375523567199707
    3. ' )' → logprob: -9.000523567199707
    4. '):' → logprob: -9.125523567199707
    5. '):
' → logprob: -11.000523567199707
    6. '   ' → logprob: -11.500523567199707
    7. '=' → logprob: -11.750523567199707
    8. '       ' → logprob: -12.500523567199707
    9. '           ' → logprob: -12.500523567199707
    10. ':' → logprob: -12.625523567199707

Token 529: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32381829619407654
    2. '):
' → logprob: -1.323818325996399
    3. ')' → logprob: -4.573818206787109
    4. '   ' → logprob: -9.19881820678711
    5. '):
' → logprob: -10.07381820678711
    6. '       ' → logprob: -10.69881820678711
    7. '):

' → logprob: -11.57381820678711
    8. ':' → logprob: -12.82381820678711
    9. ')
' → logprob: -13.57381820678711
    10. ' ):' → logprob: -13.94881820678711

Token 530: ' The' (ID: 623)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.011052182875573635
    2. 'val' → logprob: -4.511052131652832
    3. ' value' → logprob: -13.011052131652832
    4. ' ' → logprob: -14.761052131652832
    5. 'value' → logprob: -14.761052131652832
    6. '_val' → logprob: -14.886052131652832
    7. '	val' → logprob: -15.136052131652832
    8. 'v' → logprob: -15.636052131652832
    9. '    ' → logprob: -15.886052131652832
    10. ' v' → logprob: -16.01105308532715

Token 531: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1184639036655426
    2. ' value' → logprob: -3.1184639930725098
    3. ' val' → logprob: -3.3684639930725098
    4. 'val' → logprob: -4.49346399307251
    5. 'new' → logprob: -4.74346399307251
    6. ' ' → logprob: -4.99346399307251
    7. 'value' → logprob: -5.61846399307251
    8. 'v' → logprob: -6.99346399307251
    9. ')' → logprob: -7.11846399307251
    10. ' updated' → logprob: -8.618463516235352

Token 532: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.05240669101476669
    2. 'value' → logprob: -3.3024067878723145
    3. '       ' → logprob: -5.1774067878723145
    4. '   ' → logprob: -5.6774067878723145
    5. ' val' → logprob: -5.8024067878723145
    6. ')' → logprob: -7.0524067878723145
    7. 'val' → logprob: -7.1774067878723145
    8. '_value' → logprob: -9.177406311035156
    9. '):
' → logprob: -9.427406311035156
    10. '    ' → logprob: -9.677406311035156

Token 533: ' to' (ID: 316)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13612647354602814
    2. ')' → logprob: -2.6361265182495117
    3. '       ' → logprob: -3.5111265182495117
    4. '):
' → logprob: -3.7611265182495117
    5. '):' → logprob: -6.636126518249512
    6. '   ' → logprob: -7.136126518249512
    7. ')
' → logprob: -8.886126518249512
    8. '
' → logprob: -9.886126518249512
    9. ')`
' → logprob: -10.136126518249512
    10. ' )
' → logprob: -10.261126518249512

Token 534: ' update' (ID: 4027)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2698706090450287
    2. ' set' → logprob: -1.769870638847351
    3. 'assign' → logprob: -2.7698705196380615
    4. ' assign' → logprob: -6.019870758056641
    5. 'update' → logprob: -7.144870758056641
    6. '   ' → logprob: -9.51987075805664
    7. ' update' → logprob: -9.51987075805664
    8. '       ' → logprob: -10.14487075805664
    9. 'insert' → logprob: -10.51987075805664
    10. 'apply' → logprob: -10.76987075805664

Token 535: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07360494881868362
    2. ')
' → logprob: -2.6986050605773926
    3. '       ' → logprob: -6.323605060577393
    4. '):
' → logprob: -6.948605060577393
    5. '   ' → logprob: -7.573605060577393
    6. '           ' → logprob: -9.448604583740234
    7. ' )' → logprob: -9.448604583740234
    8. '):' → logprob: -9.698604583740234
    9. ' )
' → logprob: -9.698604583740234
    10. '               ' → logprob: -10.198604583740234

Token 536: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6937103271484375
    2. ' i' → logprob: -0.6937103271484375
    3. ')' → logprob: -7.8187103271484375
    4. ' index' → logprob: -9.818710327148438
    5. 'index' → logprob: -10.068710327148438
    6. ' the' → logprob: -10.443710327148438
    7. '   ' → logprob: -10.943710327148438
    8. ' ' → logprob: -12.818710327148438
    9. 'the' → logprob: -12.818710327148438
    10. ' )' → logprob: -12.943710327148438

Token 537: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2626694440841675
    2. ' i' → logprob: -1.8876694440841675
    3. ')' → logprob: -2.637669563293457
    4. '   ' → logprob: -5.137669563293457
    5. ' ' → logprob: -6.762669563293457
    6. ' )' → logprob: -8.012669563293457
    7. ')
' → logprob: -8.262669563293457
    8. '  ' → logprob: -8.887669563293457
    9. '[i' → logprob: -9.512669563293457
    10. '       ' → logprob: -9.887669563293457

Token 538: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47710007429122925
    2. ')
' → logprob: -0.9771000742912292
    3. '):
' → logprob: -6.227099895477295
    4. '       ' → logprob: -7.352099895477295
    5. '   ' → logprob: -8.352100372314453
    6. '):' → logprob: -8.977100372314453
    7. ')
' → logprob: -10.977100372314453
    8. ')

' → logprob: -11.852100372314453
    9. ')`
' → logprob: -12.477100372314453
    10. ')`' → logprob: -12.727100372314453

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00860984530299902
    2. '
' → logprob: -5.383609771728516
    3. '```' → logprob: -6.383609771728516
    4. '):
' → logprob: -7.008609771728516
    5. ')
' → logprob: -7.883609771728516
    6. '   ' → logprob: -8.258609771728516
    7. ')' → logprob: -8.383609771728516
    8. '        
' → logprob: -9.133609771728516
    9. 'n' → logprob: -9.758609771728516
    10. '#' → logprob: -9.758609771728516

Token 540: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004914337769150734
    2. '   ' → logprob: -7.750491619110107
    3. '```' → logprob: -10.25049114227295
    4. '#' → logprob: -12.37549114227295
    5. 'n' → logprob: -12.87549114227295
    6. '      ' → logprob: -13.00049114227295
    7. '"""' → logprob: -13.00049114227295
    8. '           ' → logprob: -13.12549114227295
    9. 's' → logprob: -13.37549114227295
    10. 'd' → logprob: -13.62549114227295

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003142300993204117
    2. 'pos' → logprob: -7.128142356872559
    3. ' pos' → logprob: -7.253142356872559
    4. 'p' → logprob: -7.628142356872559
    5. '```' → logprob: -7.628142356872559
    6. '   ' → logprob: -8.003142356872559
    7. ' p' → logprob: -8.128142356872559
    8. '``' → logprob: -12.003142356872559
    9. 'v' → logprob: -13.128142356872559
    10. 'd' → logprob: -13.253142356872559

Token 542: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001000059419311583
    2. 'pos' → logprob: -7.250999927520752
    3. ' i' → logprob: -8.62600040435791
    4. 'idx' → logprob: -9.37600040435791
    5. 'k' → logprob: -11.00100040435791
    6. '   ' → logprob: -12.50100040435791
    7. 'index' → logprob: -12.87600040435791
    8. 'p' → logprob: -13.37600040435791
    9. '#' (adapté à ' #') → logprob: -14.37600040435791
    10. '       ' → logprob: -14.37600040435791

Token 543: ' Set' (ID: 3957)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0642976388335228
    2. 'pos' → logprob: -2.814297676086426
    3. 'idx' → logprob: -6.314297676086426
    4. 'index' → logprob: -8.189297676086426
    5. '#' → logprob: -8.564297676086426
    6. 'k' → logprob: -10.439297676086426
    7. '   ' → logprob: -12.189297676086426
    8. ' i' → logprob: -12.189297676086426
    9. 'p' → logprob: -12.439297676086426
    10. 'node' → logprob: -13.564297676086426

Token 544: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19580364227294922
    2. 'self' → logprob: -2.320803642272949
    3. 'pos' → logprob: -3.195803642272949
    4. ' i' → logprob: -4.570803642272949
    5. 'index' → logprob: -4.695803642272949
    6. 'p' → logprob: -4.695803642272949
    7. 'idx' → logprob: -5.570803642272949
    8. ' self' → logprob: -5.820803642272949
    9. '   ' → logprob: -6.945803642272949
    10. 'the' → logprob: -7.195803642272949

Token 545: ' leaf' (ID: 25882)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.053116071969270706
    2. 'pos' → logprob: -3.0531160831451416
    3. 'index' → logprob: -5.6781158447265625
    4. 'idx' → logprob: -6.9281158447265625
    5. 'node' → logprob: -9.928115844726562
    6. ' i' → logprob: -10.303115844726562
    7. '   ' → logprob: -11.303115844726562
    8. 'p' → logprob: -11.803115844726562
    9. 'position' → logprob: -11.928115844726562
    10. 'k' → logprob: -12.678115844726562

Token 546: ' to' (ID: 316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6324326395988464
    2. ' self' → logprob: -0.8824326395988464
    3. '   ' → logprob: -3.632432699203491
    4. '[self' → logprob: -4.382432460784912
    5. 'index' → logprob: -5.507432460784912
    6. '       ' → logprob: -5.632432460784912
    7. ' index' → logprob: -5.757432460784912
    8. ' node' → logprob: -5.757432460784912
    9. 'node' → logprob: -7.507432460784912
    10. ' at' → logprob: -7.882432460784912

Token 547: ' the' (ID: 290)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0504494309425354
    2. ' val' → logprob: -3.0504493713378906
    3. 'self' → logprob: -6.425449371337891
    4. ' self' → logprob: -8.55044937133789
    5. '   ' → logprob: -10.42544937133789
    6. '	val' → logprob: -12.42544937133789
    7. '```' → logprob: -12.67544937133789
    8. '`' → logprob: -13.80044937133789
    9. 'value' → logprob: -13.80044937133789
    10. '[val' → logprob: -14.05044937133789

Token 548: ' new' (ID: 620)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.3358446166384965e-05
    2. ' val' → logprob: -9.875053405761719
    3. 'value' → logprob: -14.125053405761719
    4. 'new' → logprob: -14.750053405761719
    5. '   ' → logprob: -14.875053405761719
    6. 'self' → logprob: -16.00005340576172
    7. '	val' → logprob: -16.62505340576172
    8. '```' → logprob: -16.62505340576172
    9. '[val' → logprob: -16.87505340576172
    10. 'v' → logprob: -17.50005340576172

Token 549: ' value' (ID: 1432)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6308904886245728
    2. 'val' → logprob: -0.8808904886245728
    3. ' value' → logprob: -3.130890369415283
    4. 'value' → logprob: -4.630890369415283
    5. '   ' → logprob: -10.755890846252441
    6. '       ' → logprob: -11.255890846252441
    7. '    ' → logprob: -12.755890846252441
    8. '_val' → logprob: -13.755890846252441
    9. '	val' → logprob: -13.880890846252441
    10. '[val' → logprob: -14.130890846252441

Token 550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012522722594439983
    2. 'self' → logprob: -5.2625226974487305
    3. '
' → logprob: -5.5125226974487305
    4. ' self' → logprob: -7.1375226974487305
    5. '        
' → logprob: -7.5125226974487305
    6. 'i' → logprob: -7.7625226974487305
    7. '   ' → logprob: -8.13752269744873
    8. ' i' → logprob: -8.26252269744873
    9. '```' → logprob: -8.88752269744873
    10. ',' → logprob: -9.26252269744873

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062720514833927155
    2. 'self' → logprob: -5.756271839141846
    3. ' self' → logprob: -6.756271839141846
    4. '```' → logprob: -7.131271839141846
    5. ' i' → logprob: -8.256272315979004
    6. '   ' → logprob: -8.381272315979004
    7. '        
' → logprob: -8.631272315979004
    8. '``' → logprob: -9.381272315979004
    9. 'i' → logprob: -9.756272315979004
    10. '
' → logprob: -10.381272315979004

Token 552: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5897024869918823
    2. 'idx' → logprob: -1.8397024869918823
    3. 'p' → logprob: -2.089702606201172
    4. 'i' (adapté à ' i') → logprob: -2.589702606201172
    5. 'index' → logprob: -3.089702606201172
    6. ' p' → logprob: -3.839702606201172
    7. ' pos' → logprob: -4.964702606201172
    8. ' idx' → logprob: -5.714702606201172
    9. '       ' → logprob: -5.964702606201172
    10. 'k' → logprob: -5.964702606201172

Token 553: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6654759645462036
    2. '=' → logprob: -1.6654759645462036
    3. ' =' → logprob: -1.7904759645462036
    4. '+=' → logprob: -2.040475845336914
    5. '+' → logprob: -11.915475845336914
    6. ' +' → logprob: -12.165475845336914
    7. '   ' → logprob: -12.665475845336914
    8. '    ' → logprob: -12.790475845336914
    9. ' ' → logprob: -13.790475845336914
    10. '=self' → logprob: -13.915475845336914

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020520923135336488
    2. ' self' → logprob: -8.500205039978027
    3. '[self' → logprob: -13.625205039978027
    4. '(self' → logprob: -15.500205039978027
    5. '	self' → logprob: -16.000205993652344
    6. '   ' → logprob: -16.250205993652344
    7. '       ' → logprob: -18.250205993652344
    8. '=self' → logprob: -18.625205993652344
    9. '```' → logprob: -18.875205993652344
    10. '+self' → logprob: -18.875205993652344

Token 555: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0045859417878091335
    2. '.size' → logprob: -5.5045857429504395
    3. ' size' → logprob: -8.379586219787598
    4. 'self' → logprob: -8.754586219787598
    5. '_size' → logprob: -9.504586219787598
    6. '	size' → logprob: -11.004586219787598
    7. '<size' → logprob: -11.879586219787598
    8. '[size' → logprob: -11.879586219787598
    9. 's' → logprob: -12.504586219787598
    10. '=size' → logprob: -12.629586219787598

Token 556: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02610032446682453
    2. 'self' → logprob: -3.7761003971099854
    3. '       ' → logprob: -6.026100158691406
    4. ' self' → logprob: -9.276100158691406
    5. '[self' → logprob: -9.651100158691406
    6. '   ' → logprob: -9.901100158691406
    7. '        
' → logprob: -9.901100158691406
    8. '
' → logprob: -10.276100158691406
    9. '    
' → logprob: -10.401100158691406
    10. ' 
' → logprob: -10.901100158691406

Token 557: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10833446681499481
    2. 'self' → logprob: -2.733334541320801
    3. '       ' → logprob: -3.358334541320801
    4. ' self' → logprob: -6.983334541320801
    5. '```' → logprob: -7.233334541320801
    6. '[self' → logprob: -8.2333345413208
    7. '        
' → logprob: -8.4833345413208
    8. '	self' → logprob: -8.8583345413208
    9. '\n' → logprob: -8.8583345413208
    10. 'newline' → logprob: -9.2333345413208

Token 558: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010914006270468235
    2. '       ' → logprob: -7.001091480255127
    3. ' self' → logprob: -8.626091003417969
    4. '	self' → logprob: -15.251091003417969
    5. '   ' → logprob: -15.376091003417969
    6. '```' → logprob: -16.62609100341797
    7. '[self' → logprob: -18.75109100341797
    8. ' ' → logprob: -19.00109100341797
    9. '_self' → logprob: -19.12609100341797
    10. '``' → logprob: -19.50109100341797

Token 559: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.0005395700572989881
    2. '.' → logprob: -7.625539779663086
    3. '.user' → logprob: -10.000539779663086
    4. 'node' → logprob: -12.250539779663086
    5. ' .' → logprob: -14.500539779663086
    6. '.token' → logprob: -15.750539779663086
    7. '[node' → logprob: -15.750539779663086
    8. '`.' → logprob: -16.250539779663086
    9. '	node' → logprob: -16.500539779663086
    10. '.n' → logprob: -17.500539779663086

Token 560: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. 'i' → logprob: -20.125
    4. '[int' → logprob: -20.25
    5. '[I' → logprob: -20.25
    6. '```' → logprob: -20.75
    7. '[index' → logprob: -21.0
    8. '[self' → logprob: -21.25
    9. '   ' → logprob: -21.5
    10. '[s' → logprob: -21.5

Token 561: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. ']=' → logprob: -17.518150329589844
    4. ']' → logprob: -18.268150329589844
    5. '=

' → logprob: -18.768150329589844
    6. ')=' → logprob: -19.018150329589844
    7. '=}' → logprob: -19.143150329589844
    8. '.=' → logprob: -19.268150329589844
    9. ')' → logprob: -19.393150329589844
    10. '＝' → logprob: -19.518150329589844

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '.=' → logprob: -17.876928329467773
    4. '=
' → logprob: -18.376928329467773
    5. '=value' → logprob: -18.751928329467773
    6. '＝' → logprob: -20.251928329467773
    7. '=}' → logprob: -20.376928329467773
    8. '=int' → logprob: -20.501928329467773
    9. '=

' → logprob: -20.626928329467773
    10. '=os' → logprob: -20.626928329467773

Token 563: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004078401252627373
    2. ' val' → logprob: -5.504078388214111
    3. '	val' → logprob: -18.629077911376953
    4. '_val' → logprob: -22.004077911376953
    5. '[val' → logprob: -22.004077911376953
    6. '(val' → logprob: -22.504077911376953
    7. 'Val' → logprob: -23.254077911376953
    8. 'v' → logprob: -23.379077911376953
    9. '.val' → logprob: -23.379077911376953
    10. '   ' → logprob: -23.504077911376953

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16699819266796112
    2. 'i' → logprob: -1.9169981479644775
    3. ' i' → logprob: -5.291998386383057
    4. '   ' → logprob: -7.166998386383057
    5. '        
' → logprob: -7.416998386383057
    6. '	i' → logprob: -9.166997909545898
    7. '	' → logprob: -10.166997909545898
    8. '    
' → logprob: -10.166997909545898
    9. ',i' → logprob: -10.416997909545898
    10. 'while' → logprob: -10.541997909545898

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3217136263847351
    2. 'i' → logprob: -1.3217136859893799
    3. ' i' → logprob: -5.071713447570801
    4. '   ' → logprob: -6.196713447570801
    5. '	i' → logprob: -10.0717134475708
    6. ' ' → logprob: -10.3217134475708
    7. '        
' → logprob: -11.6967134475708
    8. 'while' → logprob: -11.8217134475708
    9. '  ' → logprob: -12.6967134475708
    10. '	' → logprob: -13.1967134475708

Token 566: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20368263125419617
    2. '       ' → logprob: -1.7036826610565186
    3. ' i' → logprob: -6.2036824226379395
    4. '   ' → logprob: -8.578682899475098
    5. 'while' → logprob: -9.953682899475098
    6. '	i' → logprob: -12.828682899475098
    7. ' ' → logprob: -13.328682899475098
    8. ' while' → logprob: -13.453682899475098
    9. '      ' → logprob: -14.078682899475098
    10. '  ' → logprob: -14.453682899475098

Token 567: ' Update' (ID: 9152)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10491082817316055
    2. 'while' → logprob: -2.3549108505249023
    3. '   ' → logprob: -6.104910850524902
    4. '       ' → logprob: -6.229910850524902
    5. ' i' → logprob: -8.104910850524902
    6. ' while' → logprob: -8.729910850524902
    7. 'While' → logprob: -11.104910850524902
    8. '  ' → logprob: -12.604910850524902
    9. ' ' → logprob: -12.854910850524902
    10. '     ' → logprob: -13.479910850524902

Token 568: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21216106414794922
    2. 'i' → logprob: -1.7121610641479492
    3. ' the' → logprob: -5.212161064147949
    4. '   ' → logprob: -5.462161064147949
    5. ' ' → logprob: -7.837161064147949
    6. '       ' → logprob: -8.96216106414795
    7. ' while' → logprob: -9.33716106414795
    8. ' self' → logprob: -9.83716106414795
    9. 'the' → logprob: -9.83716106414795
    10. ' parent' → logprob: -10.08716106414795

Token 569: ' ancestors' (ID: 66258)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3689934015274048
    2. '   ' → logprob: -1.3689934015274048
    3. 'i' → logprob: -3.8689932823181152
    4. ' ' → logprob: -4.493993282318115
    5. ' parent' → logprob: -5.118993282318115
    6. '  ' → logprob: -5.868993282318115
    7. ' (' → logprob: -6.368993282318115
    8. '       ' → logprob: -6.493993282318115
    9. '(i' → logprob: -6.493993282318115
    10. '[i' → logprob: -6.743993282318115

Token 570: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38974010944366455
    2. 'i' → logprob: -1.3897401094436646
    3. ' i' → logprob: -3.139739990234375
    4. '   ' → logprob: -4.139739990234375
    5. '[i' → logprob: -5.264739990234375
    6. '     ' → logprob: -6.639739990234375
    7. '        
' → logprob: -6.764739990234375
    8. '    ' → logprob: -6.889739990234375
    9. '>>' → logprob: -7.014739990234375
    10. '      ' → logprob: -7.514739990234375

Token 571: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01816035620868206
    2. ' i' → logprob: -4.018160343170166
    3. '   ' → logprob: -11.643160820007324
    4. '	i' → logprob: -14.393160820007324
    5. '```' → logprob: -14.768160820007324
    6. ' ' → logprob: -15.268160820007324
    7. ' the' → logprob: -15.643160820007324
    8. 'the' → logprob: -15.768160820007324
    9. '  ' → logprob: -15.893160820007324
    10. '[i' → logprob: -16.768159866333008

Token 572: ' leaf' (ID: 25882)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017004783148877323
    2. ' i' → logprob: -9.25016975402832
    3. 'node' → logprob: -9.62516975402832
    4. ' node' → logprob: -12.75016975402832
    5. '   ' → logprob: -13.00016975402832
    6. 'parent' → logprob: -13.25016975402832
    7. '       ' → logprob: -14.87516975402832
    8. '[i' → logprob: -15.37516975402832
    9. '     ' → logprob: -16.37516975402832
    10. ' ' → logprob: -16.62516975402832

Token 573: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27489450573921204
    2. ' i' → logprob: -2.1498944759368896
    3. 'i' → logprob: -2.2748944759368896
    4. '        
' → logprob: -4.524894714355469
    5. '   ' → logprob: -6.149894714355469
    6. ',' → logprob: -6.524894714355469
    7. '[i' → logprob: -6.774894714355469
    8. ',i' → logprob: -6.774894714355469
    9. '    
' → logprob: -7.524894714355469
    10. '     ' → logprob: -8.149894714355469

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011576817370951176
    2. ' i' → logprob: -4.8865766525268555
    3. 'i' → logprob: -5.6365766525268555
    4. '   ' → logprob: -9.136576652526855
    5. ' while' → logprob: -9.261576652526855
    6. ',' → logprob: -9.511576652526855
    7. 'while' → logprob: -10.761576652526855
    8. ' for' → logprob: -10.886576652526855
    9. ',i' → logprob: -10.886576652526855
    10. ' to' → logprob: -11.386576652526855

Token 575: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0395750068128109
    2. ' i' → logprob: -3.5395750999450684
    3. '       ' → logprob: -4.789575099945068
    4. '   ' → logprob: -7.289575099945068
    5. 'while' (adapté à ' while') → logprob: -7.289575099945068
    6. ' while' → logprob: -9.28957462310791
    7. '	i' → logprob: -14.16457462310791
    8. '     ' → logprob: -14.53957462310791
    9. '    ' → logprob: -14.53957462310791
    10. ' ' → logprob: -14.91457462310791

Token 576: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25195929408073425
    2. 'i' → logprob: -1.5019593238830566
    3. '(i' → logprob: -11.251958847045898
    4. '	i' → logprob: -11.376958847045898
    5. '   ' → logprob: -13.001958847045898
    6. ' ' → logprob: -13.251958847045898
    7. '  ' → logprob: -15.251958847045898
    8. '1' → logprob: -15.251958847045898
    9. 'True' → logprob: -15.626958847045898
    10. ' (' → logprob: -15.626958847045898

Token 577: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00023596010578330606
    2. '>>' → logprob: -8.375235557556152
    3. ' >' → logprob: -12.625235557556152
    4. '   ' → logprob: -14.250235557556152
    5. '＞' → logprob: -14.875235557556152
    6. '">' → logprob: -15.125235557556152
    7. '&gt' → logprob: -15.375235557556152
    8. '	' → logprob: -16.37523651123047
    9. '//=' → logprob: -16.37523651123047
    10. '≫' → logprob: -16.37523651123047

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.75192928314209
    4. '>' → logprob: -16.376928329467773
    5. '=' → logprob: -16.626928329467773
    6. '     ' → logprob: -17.251928329467773
    7. '    ' → logprob: -18.251928329467773
    8. '  ' → logprob: -18.251928329467773
    9. '```' → logprob: -19.626928329467773
    10. '0' → logprob: -19.751928329467773

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '>' → logprob: -18.000003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '=' → logprob: -20.375003814697266
    6. '0' → logprob: -20.500003814697266
    7. '  ' → logprob: -20.875003814697266
    8. '`' → logprob: -21.000003814697266
    9. '```' → logprob: -21.000003814697266
    10. '۱' → logprob: -21.250003814697266

Token 580: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17747320234775543
    2. ':' → logprob: -1.9274731874465942
    3. '>>' → logprob: -4.802473068237305
    4. '       ' → logprob: -5.802473068237305
    5. ' >>=' → logprob: -6.427473068237305
    6. '           ' → logprob: -6.552473068237305
    7. '   ' → logprob: -7.302473068237305
    8. '=' → logprob: -7.427473068237305
    9. ' :
' → logprob: -7.802473068237305
    10. '):
' → logprob: -8.677473068237305

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04056956246495247
    2. ' i' → logprob: -4.04056978225708
    3. 'i' → logprob: -4.41556978225708
    4. '<|end|>' → logprob: -6.04056978225708
    5. '       ' → logprob: -6.41556978225708
    6. '   ' → logprob: -6.91556978225708
    7. '```' → logprob: -7.04056978225708
    8. '<|end|>' → logprob: -7.04056978225708
    9. ' ' → logprob: -7.54056978225708
    10. '(i' → logprob: -7.66556978225708

Token 582: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31341105699539185
    2. 'i' (adapté à ' i') → logprob: -1.313410997390747
    3. '           ' → logprob: -9.063410758972168
    4. '	i' → logprob: -11.063410758972168
    5. '               ' → logprob: -11.688410758972168
    6. '   ' → logprob: -11.938410758972168
    7. ' self' → logprob: -13.813410758972168
    8. '       ' → logprob: -14.563410758972168
    9. '```' → logprob: -14.563410758972168
    10. ',i' → logprob: -15.813410758972168

Token 583: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.05749884992837906
    2. '//=' → logprob: -2.9324989318847656
    3. ' >>=' → logprob: -6.057498931884766
    4. '=' → logprob: -8.682498931884766
    5. '>' → logprob: -10.182498931884766
    6. ' //' → logprob: -10.682498931884766
    7. '   ' → logprob: -11.057498931884766
    8. '	' → logprob: -11.432498931884766
    9. '≫' → logprob: -12.057498931884766
    10. '//' → logprob: -12.057498931884766

Token 584: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '=' → logprob: -19.750001907348633
    6. '１' → logprob: -20.375001907348633
    7. '۱' → logprob: -21.312501907348633
    8. 'self' → logprob: -21.312501907348633
    9. '0' → logprob: -21.750001907348633
    10. '१' → logprob: -21.875001907348633

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.625
    5. 'self' → logprob: -20.125
    6. '１' → logprob: -21.0625
    7. '0' → logprob: -21.3125
    8. '2' → logprob: -21.6875
    9. '۱' → logprob: -21.8125
    10. 'i' → logprob: -21.8125

Token 586: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002705250633880496
    2. 'self' → logprob: -6.252705097198486
    3. '
' → logprob: -7.877705097198486
    4. ' self' → logprob: -8.377705574035645
    5. '            
' → logprob: -9.752705574035645
    6. '```' → logprob: -10.127705574035645
    7. ',' → logprob: -10.752705574035645
    8. '       ' → logprob: -11.627705574035645
    9. '   ' → logprob: -12.002705574035645
    10. '1' → logprob: -12.127705574035645

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008043198846280575
    2. 'self' → logprob: -4.88304328918457
    3. ' self' → logprob: -8.00804328918457
    4. '   ' → logprob: -9.50804328918457
    5. '       ' → logprob: -10.63304328918457
    6. ' ' → logprob: -13.25804328918457
    7. '```' → logprob: -14.13304328918457
    8. '          ' → logprob: -14.25804328918457
    9. '               ' → logprob: -15.00804328918457
    10. ',self' → logprob: -15.13304328918457

Token 588: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.56233171664644e-05
    2. ' self' → logprob: -10.000055313110352
    3. '           ' → logprob: -11.500055313110352
    4. '	self' → logprob: -18.62505531311035
    5. ' ' → logprob: -19.00005531311035
    6. '   ' → logprob: -19.12505531311035
    7. '```' → logprob: -20.00005531311035
    8. '[self' → logprob: -20.62505531311035
    9. '       ' → logprob: -20.75005531311035
    10. '               ' → logprob: -21.12505531311035

Token 589: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.00862213596701622
    2. 'node' → logprob: -4.758622169494629
    3. '.' → logprob: -12.883622169494629
    4. 'self' → logprob: -13.008622169494629
    5. '           ' → logprob: -13.633622169494629
    6. '_node' → logprob: -14.508622169494629
    7. ' node' → logprob: -14.633622169494629
    8. 'Node' → logprob: -15.383622169494629
    9. '	node' → logprob: -15.633622169494629
    10. '[node' → logprob: -16.883621215820312

Token 590: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -16.875
    4. '```' → logprob: -18.125
    5. '[self' → logprob: -18.625
    6. '[int' → logprob: -18.875
    7. '[node' → logprob: -19.125
    8. ' [' → logprob: -19.75
    9. '[I' → logprob: -20.25
    10. ' i' → logprob: -20.625

Token 591: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687339425086975
    2. ' =' → logprob: -1.1368733644485474
    3. '=self' → logprob: -13.886873245239258
    4. ']' → logprob: -13.886873245239258
    5. ')' → logprob: -15.136873245239258
    6. ']=' → logprob: -16.136873245239258
    7. ')=' → logprob: -17.011873245239258
    8. ' ' → logprob: -17.136873245239258
    9. 'self' → logprob: -17.511873245239258
    10. '   ' → logprob: -18.386873245239258

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002475777640938759
    2. ' =' → logprob: -6.002475738525391
    3. '=self' → logprob: -15.87747573852539
    4. '=
' → logprob: -19.62747573852539
    5. '.=' → logprob: -19.75247573852539
    6. 'self' → logprob: -19.87747573852539
    7. 's' → logprob: -20.75247573852539
    8. '＝' → logprob: -21.25247573852539
    9. ')' → logprob: -21.37747573852539
    10. '[' → logprob: -21.62747573852539

Token 593: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.750553131103516
    4. '           ' → logprob: -18.500553131103516
    5. '	self' → logprob: -18.625553131103516
    6. '(self' → logprob: -18.750553131103516
    7. '[self' → logprob: -18.875553131103516
    8. ' ' → logprob: -19.625553131103516
    9. '       ' → logprob: -20.000553131103516
    10. '`' → logprob: -20.000553131103516

Token 594: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.014172914437949657
    2. 'op' → logprob: -4.2641730308532715
    3. '	op' → logprob: -11.889172554016113
    4. '.' → logprob: -14.014172554016113
    5. ' op' → logprob: -14.264172554016113
    6. 'self' → logprob: -14.639172554016113
    7. 'node' → logprob: -14.889172554016113
    8. '_op' → logprob: -16.01417350769043
    9. '.node' → logprob: -16.88917350769043
    10. 'e' → logprob: -16.88917350769043

Token 595: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. 'self' → logprob: -14.250036239624023
    4. '(
' → logprob: -16.000036239624023
    5. ' (' → logprob: -18.125036239624023
    6. ',self' → logprob: -18.625036239624023
    7. '(Self' → logprob: -19.500036239624023
    8. '(sel' → logprob: -19.750036239624023
    9. '(s' → logprob: -20.000036239624023
    10. '=self' → logprob: -20.250036239624023

Token 596: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -1.5213274309644476e-05
    2. 'self' → logprob: -11.750015258789062
    3. '.self' → logprob: -12.125015258789062
    4. 'node' → logprob: -13.625015258789062
    5. '.' → logprob: -14.500015258789062
    6. ' .' → logprob: -16.750015258789062
    7. ' self' → logprob: -17.375015258789062
    8. '.user' → logprob: -17.625015258789062
    9. '[node' → logprob: -18.500015258789062
    10. ' node' → logprob: -18.500015258789062

Token 597: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. '[self' → logprob: -16.50000762939453
    4. '[(' → logprob: -16.62500762939453
    5. 'i' → logprob: -17.37500762939453
    6. '(i' → logprob: -18.25000762939453
    7. 'self' → logprob: -20.37500762939453
    8. '[
' → logprob: -20.37500762939453
    9. '   ' → logprob: -20.87500762939453
    10. ' [' → logprob: -20.87500762939453

Token 598: ' <<' (ID: 2256)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.244413766078651e-05
    2. '[' → logprob: -9.500082015991211
    3. 'i' → logprob: -12.000082015991211
    4. '<<' → logprob: -13.625082015991211
    5. '2' → logprob: -15.875082015991211
    6. '1' → logprob: -16.37508201599121
    7. '(i' → logprob: -17.75008201599121
    8. '   ' → logprob: -18.75008201599121
    9. '```' → logprob: -18.87508201599121
    10. ' i' → logprob: -19.50008201599121

Token 599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -20.125
    5. '0' → logprob: -21.125
    6. 'i' → logprob: -21.625
    7. '2' → logprob: -21.875
    8. '``' → logprob: -22.125
    9. '' → logprob: -22.8125
    10. '
' → logprob: -22.8125

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. '0' → logprob: -19.375
    4. 'i' → logprob: -19.875
    5. ' ' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. '' → logprob: -20.5
    8. '' → logprob: -20.5
    9. '2' → logprob: -20.625
    10. '``' → logprob: -21.125

Token 601: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.026557112112641335
    2. ',' → logprob: -3.651557207107544
    3. ' ],' → logprob: -8.901556968688965
    4. ' ,' → logprob: -10.026556968688965
    5. ',self' → logprob: -10.276556968688965
    6. ']' → logprob: -10.776556968688965
    7. 'self' → logprob: -11.401556968688965
    8. '],
' → logprob: -12.776556968688965
    9. '           ' → logprob: -13.401556968688965
    10. '   ' → logprob: -13.776556968688965

Token 602: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023254098370671272
    2. ' self' → logprob: -3.773254156112671
    3. '           ' → logprob: -12.77325439453125
    4. '            ' → logprob: -13.77325439453125
    5. '   ' → logprob: -13.89825439453125
    6. '          ' → logprob: -14.14825439453125
    7. '    ' → logprob: -14.27325439453125
    8. '         ' → logprob: -14.39825439453125
    9. '               ' → logprob: -15.02325439453125
    10. ' ' → logprob: -15.14825439453125

Token 603: '.node' (ID: 23366)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4493975043296814
    2. 'i' → logprob: -1.8243975639343262
    3. '1' → logprob: -2.199397563934326
    4. '[i' → logprob: -2.574397563934326
    5. '.i' → logprob: -4.699397563934326
    6. ' (' → logprob: -6.449397563934326
    7. '(' → logprob: -7.074397563934326
    8. 'node' → logprob: -8.199397087097168
    9. '(node' → logprob: -8.324397087097168
    10. ' i' → logprob: -8.449397087097168

Token 604: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7083430290222168
    2. '[(' → logprob: -0.7083430290222168
    3. '(i' → logprob: -4.208343029022217
    4. '1' → logprob: -9.583343505859375
    5. '[' → logprob: -10.208343505859375
    6. 'i' → logprob: -10.958343505859375
    7. '((' → logprob: -10.958343505859375
    8. '   ' → logprob: -11.083343505859375
    9. '[self' → logprob: -11.458343505859375
    10. '2' → logprob: -11.583343505859375

Token 605: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.054500666621607e-06
    2. ' i' → logprob: -13.25000286102295
    3. '(i' → logprob: -13.62500286102295
    4. '(' → logprob: -18.125003814697266
    5. '	i' → logprob: -20.375003814697266
    6. ' (' → logprob: -20.500003814697266
    7. '   ' → logprob: -21.125003814697266
    8. '1' → logprob: -21.500003814697266
    9. '_i' → logprob: -21.750003814697266
    10. '{i' → logprob: -22.000003814697266

Token 606: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07999018579721451
    2. ' <<' → logprob: -2.5799901485443115
    3. '1' → logprob: -6.829990386962891
    4. 'i' → logprob: -12.07999038696289
    5. ' <<=' → logprob: -12.20499038696289
    6. ' ' → logprob: -12.70499038696289
    7. '   ' → logprob: -13.70499038696289
    8. '[' → logprob: -13.95499038696289
    9. '```' → logprob: -13.95499038696289
    10. ']<<' → logprob: -14.45499038696289

Token 607: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.000003814697266
    4. '```' → logprob: -17.000003814697266
    5. 'i' → logprob: -18.875003814697266
    6. '[' → logprob: -20.250003814697266
    7. '  ' → logprob: -20.250003814697266
    8. '           ' → logprob: -20.312503814697266
    9. '0' → logprob: -20.500003814697266
    10. '`' → logprob: -20.562503814697266

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.250001907348633
    4. 'i' → logprob: -18.625001907348633
    5. '
' → logprob: -19.500001907348633
    6. '```' → logprob: -19.500001907348633
    7. '0' → logprob: -20.500001907348633
    8. '`' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.625001907348633
    10. ')' → logprob: -22.125001907348633

Token 609: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004353181866463274
    2. ')+' → logprob: -7.8754353523254395
    3. ' )' → logprob: -9.875434875488281
    4. '1' → logprob: -12.750434875488281
    5. ']' → logprob: -15.250434875488281
    6. '   ' → logprob: -15.500434875488281
    7. '|' → logprob: -16.12543487548828
    8. ')+(' → logprob: -16.62543487548828
    9. '）' → logprob: -17.50043487548828
    10. ' ' → logprob: -17.62543487548828

Token 610: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08588115870952606
    2. ')+' → logprob: -2.835881233215332
    3. '+' → logprob: -4.460881233215332
    4. ' +' → logprob: -5.335881233215332
    5. '|' → logprob: -5.585881233215332
    6. ']' → logprob: -6.710881233215332
    7. ']+' → logprob: -6.835881233215332
    8. '1' → logprob: -7.835881233215332
    9. ' |' → logprob: -7.960881233215332
    10. ' )' → logprob: -8.085881233215332

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '0' → logprob: -15.625040054321289
    4. '   ' → logprob: -17.87504005432129
    5. '```' → logprob: -18.62504005432129
    6. '           ' → logprob: -19.25004005432129
    7. '  ' → logprob: -20.43754005432129
    8. '１' → logprob: -21.12504005432129
    9. '	' → logprob: -21.25004005432129
    10. '`' → logprob: -21.43754005432129

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '0' → logprob: -14.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '```' → logprob: -17.750001907348633
    6. '	' → logprob: -19.937501907348633
    7. '１' → logprob: -20.187501907348633
    8. '`' → logprob: -20.562501907348633
    9. '-' → logprob: -20.687501907348633
    10. '7' → logprob: -20.750001907348633

Token 613: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010617482475936413
    2. ')' → logprob: -7.126061916351318
    3. ' ])' → logprob: -8.87606143951416
    4. ')]' → logprob: -9.75106143951416
    5. ')])' → logprob: -10.12606143951416
    6. '])
' → logprob: -11.62606143951416
    7. '       ' → logprob: -12.75106143951416
    8. ' )' → logprob: -13.00106143951416
    9. ']' → logprob: -13.12606143951416
    10. '   ' → logprob: -14.00106143951416

Token 614: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015980882570147514
    2. '   ' → logprob: -4.6409807205200195
    3. ' def' → logprob: -5.1409807205200195
    4. '```' → logprob: -8.01598072052002
    5. '
' → logprob: -11.01598072052002
    6. '	def' → logprob: -13.01598072052002
    7. '    
' → logprob: -13.14098072052002
    8. ' ' → logprob: -13.89098072052002
    9. '``' → logprob: -14.64098072052002
    10. '  ' → logprob: -14.64098072052002

Token 615: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.096126576769166e-05
    2. ' def' → logprob: -10.250041007995605
    3. '   ' → logprob: -12.250041007995605
    4. '```' → logprob: -14.375041007995605
    5. '	def' → logprob: -15.875041007995605
    6. '``' → logprob: -20.87504005432129
    7. '_def' → logprob: -21.12504005432129
    8. '  ' → logprob: -21.25004005432129
    9. '    
' → logprob: -21.87504005432129
    10. ' ' → logprob: -21.87504005432129

Token 616: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.6326589584350586
    2. ' get' → logprob: -0.7576589584350586
    3. '_get' → logprob: -9.882658958435059
    4. ' ' → logprob: -12.132658958435059
    5. '  ' → logprob: -14.257658958435059
    6. '   ' → logprob: -14.382658958435059
    7. '	get' → logprob: -14.757658958435059
    8. 'query' → logprob: -14.882658958435059
    9. '.get' → logprob: -15.257658958435059
    10. ' query' → logprob: -15.382658958435059

Token 617: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.625
    3. 'val' → logprob: -19.0
    4. ' _' → logprob: -19.25
    5. '_va' → logprob: -20.5
    6. '_vals' → logprob: -21.25
    7. '_VAL' → logprob: -21.25
    8. '_v' → logprob: -21.625
    9. '_value' → logprob: -21.75
    10. '__' → logprob: -22.375

Token 618: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -10.37503433227539
    3. 'self' → logprob: -13.62503433227539
    4. '   ' → logprob: -14.50003433227539
    5. '(s' → logprob: -15.00003433227539
    6. '(l' → logprob: -15.37503433227539
    7. '       ' → logprob: -15.37503433227539
    8. '(sel' → logprob: -16.12503433227539
    9. '(
' → logprob: -16.87503433227539
    10. ' (' → logprob: -16.87503433227539

Token 619: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005111491307616234
    2. ',' → logprob: -5.8801116943359375
    3. 'self' → logprob: -6.1301116943359375
    4. '       ' → logprob: -9.880111694335938
    5. '   ' → logprob: -10.255111694335938
    6. ',self' → logprob: -11.255111694335938
    7. ')' → logprob: -12.130111694335938
    8. 'def' → logprob: -12.380111694335938
    9. '(l' → logprob: -12.630111694335938
    10. '(' → logprob: -12.880111694335938

Token 620: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0024802929256111383
    2. 'self' → logprob: -6.002480506896973
    3. ' l' → logprob: -12.377480506896973
    4. ' self' → logprob: -15.127480506896973
    5. '   ' → logprob: -17.127479553222656
    6. '(self' → logprob: -18.002479553222656
    7. '	l' → logprob: -18.752479553222656
    8. 'L' → logprob: -19.127479553222656
    9. 'lf' → logprob: -20.252479553222656
    10. 'left' → logprob: -20.377479553222656

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030805266578681767
    2. ' ,' → logprob: -8.1253080368042
    3. ',self' → logprob: -12.1253080368042
    4. ',l' → logprob: -12.3753080368042
    5. 'self' → logprob: -13.3753080368042
    6. ',s' → logprob: -15.1253080368042
    7. '_,' → logprob: -15.8753080368042
    8. '   ' → logprob: -16.125308990478516
    9. ' self' → logprob: -16.625308990478516
    10. '       ' → logprob: -16.875308990478516

Token 622: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3868711292743683
    2. 'r' → logprob: -1.136871099472046
    3. '   ' → logprob: -16.886871337890625
    4. ',' → logprob: -17.761871337890625
    5. '	r' → logprob: -18.886871337890625
    6. ',r' → logprob: -19.136871337890625
    7. ' ' → logprob: -19.761871337890625
    8. ' ' → logprob: -20.011871337890625
    9. '```' → logprob: -20.136871337890625
    10. '    ' → logprob: -20.261871337890625

Token 623: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1752956509590149
    2. '):' → logprob: -2.30029559135437
    3. '       ' → logprob: -3.05029559135437
    4. '   ' → logprob: -5.675295829772949
    5. ',' → logprob: -5.800295829772949
    6. ')' → logprob: -6.050295829772949
    7. '(self' → logprob: -6.175295829772949
    8. 'self' → logprob: -6.175295829772949
    9. '):
' → logprob: -9.80029582977295
    10. '):

' → logprob: -9.80029582977295

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04487299546599388
    2. '(self' → logprob: -3.669872999191284
    3. '(' → logprob: -4.044872760772705
    4. 'self' → logprob: -8.044873237609863
    5. '```' → logprob: -8.669873237609863
    6. '(l' → logprob: -9.794873237609863
    7. '   ' → logprob: -10.044873237609863
    8. '        
' → logprob: -10.044873237609863
    9. '        ' → logprob: -10.169873237609863
    10. '(
' → logprob: -10.169873237609863

Token 625: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033117449493147433
    2. '   ' → logprob: -9.375330924987793
    3. 'self' → logprob: -9.375330924987793
    4. 'result' → logprob: -9.875330924987793
    5. '(self' → logprob: -10.625330924987793
    6. '```' → logprob: -10.875330924987793
    7. 'l' → logprob: -11.125330924987793
    8. ' self' → logprob: -11.125330924987793
    9. ' result' → logprob: -12.000330924987793
    10. ' l' → logprob: -12.500330924987793

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00112735980655998
    2. '"""
' → logprob: -7.126127243041992
    3. '"' → logprob: -8.626127243041992
    4. '   ' → logprob: -9.501127243041992
    5. '"""' → logprob: -11.251127243041992
    6. '        ' → logprob: -11.751127243041992
    7. '        
' → logprob: -11.751127243041992
    8. '"
' → logprob: -12.126127243041992
    9. 'result' → logprob: -12.251127243041992
    10. '           ' → logprob: -12.376127243041992

Token 627: ' Query' (ID: 18574)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9537667632102966
    2. ' l' → logprob: -1.4537668228149414
    3. ' res' → logprob: -1.9537668228149414
    4. 'l' → logprob: -2.2037668228149414
    5. ' result' → logprob: -3.0787668228149414
    6. 'result' → logprob: -3.2037668228149414
    7. 'res' → logprob: -3.3287668228149414
    8. '   ' → logprob: -5.828766822814941
    9. ' val' → logprob: -7.703766822814941
    10. ' Compute' → logprob: -7.828766822814941

Token 628: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6381030082702637
    2. '(self' → logprob: -1.2631030082702637
    3. 'self' → logprob: -2.0131030082702637
    4. '       ' → logprob: -3.2631030082702637
    5. ' (' → logprob: -4.513103008270264
    6. '(' → logprob: -6.138103008270264
    7. '   ' → logprob: -6.388103008270264
    8. ' ' → logprob: -6.513103008270264
    9. '        
' → logprob: -8.763103485107422
    10. '```' → logprob: -9.138103485107422

Token 629: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08292234688997269
    2. ' result' → logprob: -2.5829224586486816
    3. 'res' → logprob: -5.582922458648682
    4. 'self' → logprob: -9.457921981811523
    5. ' res' → logprob: -9.832921981811523
    6. ' ' → logprob: -10.207921981811523
    7. 'value' → logprob: -10.582921981811523
    8. '_result' → logprob: -10.832921981811523
    9. '   ' → logprob: -11.082921981811523
    10. 'val' → logprob: -11.832921981811523

Token 630: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6143128871917725
    2. '       ' → logprob: -1.4893128871917725
    3. ' of' → logprob: -1.7393128871917725
    4. '        ' → logprob: -3.8643128871917725
    5. ' self' → logprob: -3.8643128871917725
    6. ' (' → logprob: -5.239313125610352
    7. ' ' → logprob: -5.864313125610352
    8. '    ' → logprob: -6.739313125610352
    9. ' for' → logprob: -6.739313125610352
    10. '   ' → logprob: -7.114313125610352

Token 631: ' applying' (ID: 24667)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.37113916873931885
    2. 'the' → logprob: -2.1211390495300293
    3. 'self' → logprob: -2.2461390495300293
    4. ' self' → logprob: -2.4961390495300293
    5. 'l' → logprob: -6.996139049530029
    6. ' l' → logprob: -7.746139049530029
    7. ' operation' → logprob: -8.496139526367188
    8. ' a' → logprob: -9.371139526367188
    9. 'operation' → logprob: -9.496139526367188
    10. '   ' → logprob: -9.746139526367188

Token 632: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15558376908302307
    2. ' ' → logprob: -2.4055838584899902
    3. 'self' → logprob: -3.2805838584899902
    4. ' the' → logprob: -4.15558385848999
    5. '   ' → logprob: -8.030583381652832
    6. ' a' → logprob: -9.405583381652832
    7. 'the' → logprob: -9.905583381652832
    8. '  ' → logprob: -10.155583381652832
    9. '    ' → logprob: -10.780583381652832
    10. ')' → logprob: -11.780583381652832

Token 633: ' binary' (ID: 15600)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5098176002502441
    2. 'self' → logprob: -1.0098176002502441
    3. ' op' → logprob: -3.759817600250244
    4. 'op' → logprob: -5.009817600250244
    5. ' binary' → logprob: -5.384817600250244
    6. 'binary' → logprob: -8.134817123413086
    7. ' operation' → logprob: -8.759817123413086
    8. ' ' → logprob: -10.384817123413086
    9. 'operation' → logprob: -10.634817123413086
    10. '       ' → logprob: -10.634817123413086

Token 634: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.5843413472175598
    2. ' ' → logprob: -1.209341287612915
    3. 'operation' → logprob: -2.959341287612915
    4. '   ' → logprob: -3.209341287612915
    5. ' op' → logprob: -3.834341287612915
    6. ' operator' → logprob: -4.084341526031494
    7. '       ' → logprob: -5.584341526031494
    8. 'op' → logprob: -6.084341526031494
    9. '_operation' → logprob: -6.459341526031494
    10. '  ' → logprob: -6.584341526031494

Token 635: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.09503647685050964
    2. ' on' → logprob: -2.720036506652832
    3. 'over' → logprob: -4.345036506652832
    4. '   ' → logprob: -5.220036506652832
    5. '       ' → logprob: -5.595036506652832
    6. 'on' → logprob: -6.720036506652832
    7. '(self' → logprob: -7.095036506652832
    8. ' to' → logprob: -8.470036506652832
    9. ' from' → logprob: -9.595036506652832
    10. 'self' → logprob: -9.595036506652832

Token 636: ' the' (ID: 290)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6369076371192932
    2. 'l' → logprob: -0.7619076371192932
    3. ' the' → logprob: -6.011907577514648
    4. 'the' → logprob: -7.636907577514648
    5. 'range' → logprob: -7.761907577514648
    6. ' range' → logprob: -7.886907577514648
    7. 'self' → logprob: -8.136907577514648
    8. '   ' → logprob: -9.511907577514648
    9. ' self' → logprob: -9.511907577514648
    10. ' a' → logprob: -10.261907577514648

Token 637: ' interval' (ID: 17116)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22593620419502258
    2. ' l' → logprob: -2.3509361743927
    3. 'range' → logprob: -3.1009361743927
    4. ' range' → logprob: -3.6009361743927
    5. 'interval' → logprob: -4.100936412811279
    6. ' interval' → logprob: -4.225936412811279
    7. ' segment' → logprob: -6.350936412811279
    8. 'segment' → logprob: -7.100936412811279
    9. '   ' → logprob: -7.600936412811279
    10. '[l' → logprob: -8.350935935974121

Token 638: ' [' (ID: 723)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.14547142386436462
    2. ' (' → logprob: -2.8954713344573975
    3. '[l' → logprob: -2.8954713344573975
    4. ' [' → logprob: -3.7704713344573975
    5. '(self' → logprob: -7.520471572875977
    6. '[' → logprob: -7.895471572875977
    7. '       ' → logprob: -8.145471572875977
    8. '   ' → logprob: -8.270471572875977
    9. '(' → logprob: -8.520471572875977
    10. '`' → logprob: -10.395471572875977

Token 639: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015084355836734176
    2. ' l' → logprob: -6.5015082359313965
    3. ')' → logprob: -12.126508712768555
    4. '   ' → logprob: -15.126508712768555
    5. ',' → logprob: -15.251508712768555
    6. ' ' → logprob: -15.751508712768555
    7. '	l' → logprob: -18.376508712768555
    8. ' ,' → logprob: -18.751508712768555
    9. ',l' → logprob: -18.751508712768555
    10. '_l' → logprob: -18.876508712768555

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017431277083232999
    2. ' ,' → logprob: -6.376743316650391
    3. ',r' → logprob: -10.50174331665039
    4. '   ' → logprob: -11.62674331665039
    5. ',l' → logprob: -13.00174331665039
    6. ',
' → logprob: -13.87674331665039
    7. ' ' → logprob: -14.62674331665039
    8. '       ' → logprob: -14.75174331665039
    9. 'r' → logprob: -15.37674331665039
    10. '_,' → logprob: -16.87674331665039

Token 641: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07889441400766373
    2. ' r' → logprob: -2.5788943767547607
    3. ',' → logprob: -12.32889461517334
    4. ',r' → logprob: -15.57889461517334
    5. ' ,' → logprob: -16.453893661499023
    6. '   ' → logprob: -17.578893661499023
    7. 'l' → logprob: -17.703893661499023
    8. ' ' → logprob: -18.453893661499023
    9. ')' → logprob: -18.953893661499023
    10. ' l' → logprob: -19.828893661499023

Token 642: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3948323726654053
    2. ')' → logprob: -1.1448323726654053
    3. '),' → logprob: -5.269832611083984
    4. ')
' → logprob: -6.394832611083984
    5. '   ' → logprob: -7.019832611083984
    6. ' ,' → logprob: -9.519832611083984
    7. '       ' → logprob: -9.894832611083984
    8. '):
' → logprob: -10.644832611083984
    9. '):' → logprob: -10.769832611083984
    10. ' ' → logprob: -11.394832611083984

Token 643: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045319506898522377
    2. '        
' → logprob: -9.000452995300293
    3. '   ' → logprob: -9.250452995300293
    4. ' ' → logprob: -10.250452995300293
    5. '        ' → logprob: -10.500452995300293
    6. '```' → logprob: -10.500452995300293
    7. '<|end|>' → logprob: -10.625452995300293
    8. '    ' → logprob: -10.625452995300293
    9. '      ' → logprob: -11.000452995300293
    10. ')' → logprob: -11.625452995300293

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.723973582556937e-05
    2. ' l' → logprob: -12.000017166137695
    3. '   ' → logprob: -12.125017166137695
    4. 'l' → logprob: -13.000017166137695
    5. '```' → logprob: -13.375017166137695
    6. '      ' → logprob: -14.375017166137695
    7. '           ' → logprob: -14.750017166137695
    8. '     ' → logprob: -15.375017166137695
    9. ' ' → logprob: -15.750017166137695
    10. '        
' → logprob: -15.875017166137695

Token 645: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3879990577697754
    2. 'l' → logprob: -1.1379990577697754
    3. 'res' → logprob: -7.762999057769775
    4. '   ' → logprob: -8.137998580932617
    5. '```' → logprob: -8.637998580932617
    6. 'result' → logprob: -9.137998580932617
    7. ' l' → logprob: -9.137998580932617
    8. ' res' → logprob: -12.387998580932617
    9. 'r' → logprob: -12.512998580932617
    10. 'def' → logprob: -13.387998580932617

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7844812273979187
    2. ',' → logprob: -0.9094812273979187
    3. '):' → logprob: -3.1594812870025635
    4. '):
' → logprob: -3.2844812870025635
    5. '       ' → logprob: -3.7844812870025635
    6. '   ' → logprob: -3.9094812870025635
    7. '=' → logprob: -5.409481048583984
    8. '=None' → logprob: -5.534481048583984
    9. '<|end|>' → logprob: -5.534481048583984
    10. ' :' → logprob: -7.159481048583984

Token 647: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048956241458654404
    2. ' l' → logprob: -3.2989561557769775
    3. 'l' → logprob: -5.548956394195557
    4. '           ' → logprob: -5.923956394195557
    5. 'self' → logprob: -6.298956394195557
    6. '        ' → logprob: -6.423956394195557
    7. ' self' → logprob: -8.048955917358398
    8. '   ' → logprob: -8.798955917358398
    9. ' ' → logprob: -8.923955917358398
    10. ' ' → logprob: -9.798955917358398

Token 648: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.2519875466823578
    2. ' l' → logprob: -1.5019875764846802
    3. '       ' → logprob: -11.00198745727539
    4. 'self' → logprob: -11.00198745727539
    5. ' self' → logprob: -12.12698745727539
    6. 'int' → logprob: -12.12698745727539
    7. '   ' → logprob: -12.37698745727539
    8. '           ' → logprob: -12.62698745727539
    9. ' int' → logprob: -13.00198745727539
    10. ' ' → logprob: -13.37698745727539

Token 649: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21359534561634064
    2. ' (' → logprob: -2.588595390319824
    3. '<|end|>' → logprob: -3.213595390319824
    4. ':' → logprob: -3.838595390319824
    5. ' ,' → logprob: -4.338595390319824
    6. ':int' → logprob: -4.338595390319824
    7. '(int' → logprob: -4.588595390319824
    8. ')' → logprob: -4.713595390319824
    9. '=' → logprob: -6.213595390319824
    10. '<|end|>' → logprob: -6.588595390319824

Token 650: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. ')' → logprob: -18.625
    4. '       ' → logprob: -18.75
    5. '   ' → logprob: -19.125
    6. '0' → logprob: -20.125
    7. '           ' → logprob: -20.125
    8. '[int' → logprob: -21.0
    9. '```' → logprob: -21.125
    10. '=int' → logprob: -21.5

Token 651: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07943782210350037
    2. ':' → logprob: -2.704437732696533
    3. '):' → logprob: -4.954437732696533
    4. '):
' → logprob: -7.579437732696533
    5. ' ,' → logprob: -7.704437732696533
    6. '       ' → logprob: -7.829437732696533
    7. '<|end|>' → logprob: -8.204438209533691
    8. ' :' → logprob: -8.829438209533691
    9. '           ' → logprob: -9.079438209533691
    10. '=None' → logprob: -9.329438209533691

Token 652: ' Left' (ID: 26982)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5982823371887207
    2. ' l' → logprob: -1.4732823371887207
    3. 'int' → logprob: -1.8482823371887207
    4. 'l' → logprob: -3.7232823371887207
    5. '0' → logprob: -4.223282337188721
    6. ' ' → logprob: -4.973282337188721
    7. 'The' → logprob: -5.723282337188721
    8. ' start' → logprob: -5.973282337188721
    9. ')' → logprob: -6.348282337188721
    10. ' The' → logprob: -6.473282337188721

Token 653: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13431084156036377
    2. ' ,' → logprob: -2.884310722351074
    3. '       ' → logprob: -3.759310722351074
    4. '   ' → logprob: -4.634310722351074
    5. 'r' → logprob: -5.009310722351074
    6. ' ' → logprob: -5.009310722351074
    7. ' +=' → logprob: -5.384310722351074
    8. '=' → logprob: -5.759310722351074
    9. '    ' → logprob: -6.134310722351074
    10. ' 
' → logprob: -6.259310722351074

Token 654: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7317984700202942
    2. '       ' → logprob: -0.8567984700202942
    3. '=' → logprob: -3.2317984104156494
    4. '<|end|>' → logprob: -4.2317986488342285
    5. ')' → logprob: -4.4817986488342285
    6. ' ,' → logprob: -4.8567986488342285
    7. '        
' → logprob: -5.1067986488342285
    8. '        ' → logprob: -5.7317986488342285
    9. '   ' → logprob: -6.1067986488342285
    10. ' 
' → logprob: -6.4817986488342285

Token 655: 'inclusive' (ID: 186093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014560680836439133
    2. ',' → logprob: -5.264560699462891
    3. '           ' → logprob: -5.514560699462891
    4. ' )' → logprob: -6.014560699462891
    5. '0' → logprob: -7.264560699462891
    6. '):' → logprob: -7.389560699462891
    7. '),' → logprob: -7.889560699462891
    8. '```' → logprob: -8.38956069946289
    9. ' ,' → logprob: -8.63956069946289
    10. '       ' → logprob: -8.88956069946289

Token 656: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08014941215515137
    2. ')
' → logprob: -2.7051494121551514
    3. '):
' → logprob: -5.2051496505737305
    4. '       ' → logprob: -5.4551496505737305
    5. '):' → logprob: -9.20514965057373
    6. ',' → logprob: -9.70514965057373
    7. '           ' → logprob: -9.83014965057373
    8. '),' → logprob: -10.08014965057373
    9. ' )' → logprob: -10.20514965057373
    10. ' )
' → logprob: -10.58014965057373

Token 657: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10301658511161804
    2. 'r' → logprob: -3.3530166149139404
    3. '           ' → logprob: -3.6030166149139404
    4. ' )' → logprob: -4.728016376495361
    5. '0' → logprob: -4.978016376495361
    6. ' ' → logprob: -5.228016376495361
    7. 'l' → logprob: -5.603016376495361
    8. ' l' → logprob: -6.103016376495361
    9. '```' → logprob: -6.603016376495361
    10. '       ' → logprob: -6.728016376495361

Token 658: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09200790524482727
    2. '0' → logprob: -2.842007875442505
    3. 'r' → logprob: -4.592008113861084
    4. '           ' → logprob: -4.842008113861084
    5. 'l' → logprob: -5.592008113861084
    6. '```' → logprob: -6.592008113861084
    7. '       ' → logprob: -6.717008113861084
    8. '),' → logprob: -6.717008113861084
    9. '):
' → logprob: -6.842008113861084
    10. ' ' → logprob: -7.592008113861084

Token 659: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28534919023513794
    2. ')
' → logprob: -1.5353491306304932
    3. '       ' → logprob: -3.785349130630493
    4. '):
' → logprob: -5.035349369049072
    5. '   ' → logprob: -6.410349369049072
    6. '           ' → logprob: -7.410349369049072
    7. '<=' → logprob: -7.785349369049072
    8. ' <=' → logprob: -8.535348892211914
    9. ' )
' → logprob: -8.910348892211914
    10. ' )' → logprob: -9.035348892211914

Token 660: ').
' (ID: 6294)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5791871547698975
    2. ')' → logprob: -0.8291871547698975
    3. '):
' → logprob: -6.079187393188477
    4. '       ' → logprob: -7.204187393188477
    5. '):' → logprob: -9.579187393188477
    6. ' )
' → logprob: -10.079187393188477
    7. '   ' → logprob: -10.704187393188477
    8. ')
' → logprob: -11.079187393188477
    9. '```' → logprob: -11.079187393188477
    10. ',' → logprob: -11.579187393188477

Token 661: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7640626430511475
    2. 'r' → logprob: -1.1390626430511475
    3. '           ' → logprob: -2.1390626430511475
    4. ',' → logprob: -2.5140626430511475
    5. ' r' → logprob: -4.514062881469727
    6. '```' → logprob: -6.014062881469727
    7. ' ,' → logprob: -7.514062881469727
    8. '   ' → logprob: -8.014062881469727
    9. '        ' → logprob: -9.014062881469727
    10. ' ' → logprob: -9.139062881469727

Token 662: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.023367304354906082
    2. ' r' → logprob: -3.773367404937744
    3. '           ' → logprob: -9.023366928100586
    4. '       ' → logprob: -14.648366928100586
    5. '   ' → logprob: -15.148366928100586
    6. '            ' → logprob: -15.648366928100586
    7. ' ' → logprob: -16.273366928100586
    8. ' ' → logprob: -16.398366928100586
    9. '```' → logprob: -16.648366928100586
    10. '               ' → logprob: -16.648366928100586

Token 663: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 664: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011703446507453918
    2. ' int' → logprob: -6.7511701583862305
    3. '[int' → logprob: -16.876171112060547
    4. '<int' → logprob: -18.501171112060547
    5. '=int' → logprob: -18.626171112060547
    6. ':int' → logprob: -18.626171112060547
    7. ')' → logprob: -19.376171112060547
    8. 'r' → logprob: -19.751171112060547
    9. '(int' → logprob: -19.751171112060547
    10. '   ' → logprob: -20.126171112060547

Token 665: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8769696354866028
    2. ':int' → logprob: -1.501969575881958
    3. 'int' → logprob: -2.001969575881958
    4. ')' → logprob: -2.001969575881958
    5. '):
' → logprob: -3.251969575881958
    6. '):' → logprob: -4.001969814300537
    7. '(int' → logprob: -4.376969814300537
    8. '[int' → logprob: -5.501969814300537
    9. '=int' → logprob: -5.751969814300537
    10. ' (' → logprob: -5.751969814300537

Token 666: ' Right' (ID: 16354)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1269623339176178
    2. 'int' → logprob: -2.126962423324585
    3. ' ' → logprob: -10.626962661743164
    4. '(int' → logprob: -12.876962661743164
    5. '   ' → logprob: -13.001962661743164
    6. ')' → logprob: -13.751962661743164
    7. '[int' → logprob: -13.876962661743164
    8. 'r' → logprob: -14.376962661743164
    9. ' r' → logprob: -14.376962661743164
    10. '```' → logprob: -14.876962661743164

Token 667: ' index' (ID: 3472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3609117567539215
    2. ' ' → logprob: -2.6109118461608887
    3. ' l' → logprob: -2.9859118461608887
    4. ')' → logprob: -3.1109118461608887
    5. ',' → logprob: -3.6109118461608887
    6. '       ' → logprob: -3.7359118461608887
    7. '    ' → logprob: -3.8609118461608887
    8. 'r' → logprob: -4.860911846160889
    9. '<|end|>' → logprob: -4.860911846160889
    10. ' ,' → logprob: -5.235911846160889

Token 668: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44972389936447144
    2. '       ' → logprob: -1.6997239589691162
    3. '):
' → logprob: -2.699723958969116
    4. '<|end|>' → logprob: -3.699723958969116
    5. '):' → logprob: -3.949723958969116
    6. ',' → logprob: -4.199723720550537
    7. '           ' → logprob: -4.574723720550537
    8. '=' → logprob: -5.074723720550537
    9. ':' → logprob: -5.074723720550537
    10. '```' → logprob: -5.199723720550537

Token 669: 'exclusive' (ID: 196957)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03851132094860077
    2. ' int' → logprob: -3.538511276245117
    3. 'exclusive' → logprob: -4.788511276245117
    4. ' exclusive' → logprob: -8.413511276245117
    5. 'r' → logprob: -8.913511276245117
    6. '   ' → logprob: -10.913511276245117
    7. ')' → logprob: -11.538511276245117
    8. ' r' → logprob: -12.288511276245117
    9. 'Exclusive' → logprob: -13.288511276245117
    10. 'excluded' → logprob: -13.788511276245117

Token 670: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6398721933364868
    2. '):' → logprob: -1.1398721933364868
    3. ')' → logprob: -1.8898721933364868
    4. '):

' → logprob: -7.389872074127197
    5. '       ' → logprob: -7.764872074127197
    6. '):
' → logprob: -8.639872550964355
    7. '   ' → logprob: -9.264872550964355
    8. ')**' → logprob: -9.264872550964355
    9. '```' → logprob: -9.264872550964355
    10. ')
' → logprob: -9.764872550964355

Token 671: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8615345358848572
    2. 'int' → logprob: -0.8615345358848572
    3. ' int' → logprob: -2.486534595489502
    4. ' r' → logprob: -3.111534595489502
    5. '           ' → logprob: -4.486534595489502
    6. ')' → logprob: -4.486534595489502
    7. '):' → logprob: -6.486534595489502
    8. '       ' → logprob: -7.111534595489502
    9. '):
' → logprob: -7.486534595489502
    10. 'None' → logprob: -7.861534595489502

Token 672: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18121547996997833
    2. 'r' → logprob: -1.806215524673462
    3. ')' → logprob: -6.931215286254883
    4. ' int' → logprob: -8.056215286254883
    5. '   ' → logprob: -10.056215286254883
    6. ')
' → logprob: -10.056215286254883
    7. ' r' → logprob: -10.556215286254883
    8. '):' → logprob: -11.181215286254883
    9. '):
' → logprob: -11.306215286254883
    10. 'None' → logprob: -11.931215286254883

Token 673: '-based' (ID: 8235)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7098422646522522
    2. '):' → logprob: -0.7098422646522522
    3. '       ' → logprob: -4.834842205047607
    4. ':' → logprob: -5.334842205047607
    5. '   ' → logprob: -6.334842205047607
    6. ')' → logprob: -6.584842205047607
    7. 'int' → logprob: -8.959842681884766
    8. '):

' → logprob: -9.334842681884766
    9. '```' → logprob: -9.459842681884766
    10. '           ' → logprob: -9.584842681884766

Token 674: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0236408319324255
    2. '):' → logprob: -3.7736408710479736
    3. '       ' → logprob: -8.648640632629395
    4. ')' → logprob: -9.648640632629395
    5. '   ' → logprob: -9.773640632629395
    6. '):
' → logprob: -10.023640632629395
    7. ')
' → logprob: -10.023640632629395
    8. ' ):
' → logprob: -12.273640632629395
    9. '):

' → logprob: -12.648640632629395
    10. '```' → logprob: -15.148640632629395

Token 675: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016113892197608948
    2. '```' → logprob: -7.126611232757568
    3. '        
' → logprob: -8.501611709594727
    4. '   ' → logprob: -8.876611709594727
    5. '<|end|>' → logprob: -8.876611709594727
    6. ':' → logprob: -9.876611709594727
    7. '	' → logprob: -10.251611709594727
    8. '[' → logprob: -10.376611709594727
    9. '<|end|>' → logprob: -10.376611709594727
    10. '``' → logprob: -10.501611709594727

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.717296517104842e-05
    2. '```' → logprob: -10.500057220458984
    3. '   ' → logprob: -10.750057220458984
    4. 'result' → logprob: -12.000057220458984
    5. '           ' → logprob: -14.375057220458984
    6. '``' → logprob: -15.000057220458984
    7. '"""' → logprob: -15.000057220458984
    8. '
' → logprob: -15.375057220458984
    9. 'l' → logprob: -15.750057220458984
    10. '"""
' → logprob: -16.125057220458984

Token 677: ' Returns' (ID: 9609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.014725965447723866
    2. '       ' → logprob: -4.514726161956787
    3. 'result' → logprob: -5.889726161956787
    4. 'l' → logprob: -7.389726161956787
    5. '   ' → logprob: -8.889725685119629
    6. 's' → logprob: -9.514725685119629
    7. ' res' → logprob: -10.139725685119629
    8. 'ans' → logprob: -11.639725685119629
    9. '"""' → logprob: -11.889725685119629
    10. 'ret' → logprob: -12.264725685119629

Token 678: ':
' (ID: 734)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07894212007522583
    2. 'self' → logprob: -2.703942060470581
    3. '       ' → logprob: -4.95394229888916
    4. ' =' → logprob: -7.07894229888916
    5. '=' → logprob: -7.82894229888916
    6. '        ' → logprob: -8.32894229888916
    7. ' result' → logprob: -8.70394229888916
    8. '   ' → logprob: -9.70394229888916
    9. '=self' → logprob: -9.70394229888916
    10. '    ' → logprob: -10.32894229888916

Token 679: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05532408505678177
    2. 'self' → logprob: -3.555324077606201
    3. ' self' → logprob: -3.680324077606201
    4. '   ' → logprob: -11.18032455444336
    5. '        ' → logprob: -11.80532455444336
    6. '           ' → logprob: -12.30532455444336
    7. '      ' → logprob: -12.68032455444336
    8. '               ' → logprob: -13.93032455444336
    9. '     ' → logprob: -14.18032455444336
    10. ' ' → logprob: -14.68032455444336

Token 680: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11695917695760727
    2. 'Any' → logprob: -2.3669590950012207
    3. 'result' → logprob: -4.491959095001221
    4. '       ' → logprob: -5.491959095001221
    5. 'int' → logprob: -6.991959095001221
    6. 'value' → logprob: -9.116959571838379
    7. ' self' → logprob: -9.741959571838379
    8. 'The' (adapté à ' The') → logprob: -10.116959571838379
    9. 'any' → logprob: -10.241959571838379
    10. 'val' → logprob: -10.616959571838379

Token 681: ' result' (ID: 1534)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24960903823375702
    2. ' self' → logprob: -1.9996089935302734
    3. ' result' → logprob: -3.3746089935302734
    4. 'result' → logprob: -3.7496089935302734
    5. ' res' → logprob: -3.8746089935302734
    6. 'res' → logprob: -4.999608993530273
    7. 'value' → logprob: -8.874608993530273
    8. '       ' → logprob: -10.124608993530273
    9. ' value' → logprob: -10.499608993530273
    10. '_result' → logprob: -10.999608993530273

Token 682: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2267295867204666
    2. '=' → logprob: -1.6017296314239502
    3. ' ' → logprob: -7.351729393005371
    4. ' self' → logprob: -8.226729393005371
    5. '=self' → logprob: -8.226729393005371
    6. ' of' → logprob: -10.226729393005371
    7. 'self' → logprob: -10.226729393005371
    8. '    ' → logprob: -11.226729393005371
    9. '   ' → logprob: -11.601729393005371
    10. ',' → logprob: -11.601729393005371

Token 683: ' combining' (ID: 48784)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10023017972707748
    2. ' self' → logprob: -2.3502302169799805
    3. '   ' → logprob: -11.10023021697998
    4. '       ' → logprob: -11.97523021697998
    5. '(self' → logprob: -14.60023021697998
    6. '           ' → logprob: -14.72523021697998
    7. ' ' → logprob: -14.97523021697998
    8. ' the' → logprob: -15.35023021697998
    9. '[self' → logprob: -16.100229263305664
    10. 'the' → logprob: -16.225229263305664

Token 684: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31331562995910645
    2. ' self' → logprob: -1.3133156299591064
    3. '       ' → logprob: -10.188315391540527
    4. '   ' → logprob: -11.438315391540527
    5. ' ' → logprob: -13.063315391540527
    6. 'result' → logprob: -13.313315391540527
    7. '(self' → logprob: -14.438315391540527
    8. ' result' → logprob: -14.938315391540527
    9. '           ' → logprob: -15.313315391540527
    10. ' the' → logprob: -16.188316345214844

Token 685: ' elements' (ID: 8632)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00266852299682796
    2. ' self' → logprob: -6.127668380737305
    3. 'result' → logprob: -8.627668380737305
    4. 'left' → logprob: -9.002668380737305
    5. 'e' → logprob: -10.502668380737305
    6. '   ' → logprob: -10.502668380737305
    7. 'res' → logprob: -10.752668380737305
    8. ')' → logprob: -11.377668380737305
    9. 'segment' → logprob: -11.377668380737305
    10. 'identity' → logprob: -11.502668380737305

Token 686: ' in' (ID: 306)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5362808704376221
    2. ' using' → logprob: -1.536280870437622
    3. '[l' → logprob: -3.286280870437622
    4. ' l' → logprob: -3.536280870437622
    5. '   ' → logprob: -3.661280870437622
    6. 'l' → logprob: -3.661280870437622
    7. ' ' → logprob: -3.786280870437622
    8. '       ' → logprob: -3.786280870437622
    9. 'with' → logprob: -4.161280632019043
    10. 'using' → logprob: -4.911280632019043

Token 687: ' [' (ID: 723)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.034118056297302246
    2. 'l' → logprob: -3.659118175506592
    3. ' the' → logprob: -5.034118175506592
    4. ' ' → logprob: -7.784118175506592
    5. 'the' → logprob: -8.284117698669434
    6. '   ' → logprob: -8.909117698669434
    7. ' self' → logprob: -9.034117698669434
    8. ' range' → logprob: -9.159117698669434
    9. ')' → logprob: -9.534117698669434
    10. '[l' → logprob: -10.034117698669434

Token 688: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.518582762917504e-05
    2. ' l' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.00008487701416
    4. 'self' → logprob: -17.375085830688477
    5. '	l' → logprob: -17.625085830688477
    6. '       ' → logprob: -17.750085830688477
    7. ')' → logprob: -17.875085830688477
    8. '_l' → logprob: -19.375085830688477
    9. '```' → logprob: -19.500085830688477
    10. '
' → logprob: -19.500085830688477

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0308273546397686
    2. ' ,' → logprob: -3.530827283859253
    3. '   ' → logprob: -7.155827522277832
    4. ',l' → logprob: -9.280827522277832
    5. ' ' → logprob: -9.405827522277832
    6. ',r' → logprob: -10.155827522277832
    7. '       ' → logprob: -10.905827522277832
    8. ',
' → logprob: -11.155827522277832
    9. 'l' → logprob: -11.655827522277832
    10. ')' → logprob: -11.905827522277832

Token 690: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8335989713668823
    2. ' l' → logprob: -1.2085989713668823
    3. 'r' → logprob: -1.7085989713668823
    4. ' r' → logprob: -2.458599090576172
    5. ',' → logprob: -8.708599090576172
    6. ')' → logprob: -10.333599090576172
    7. ' ' → logprob: -11.333599090576172
    8. '   ' → logprob: -11.833599090576172
    9. ' ,' → logprob: -12.583599090576172
    10. ' ' → logprob: -13.083599090576172

Token 691: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07780516892671585
    2. ',' → logprob: -2.827805280685425
    3. ']' → logprob: -4.702805042266846
    4. '   ' → logprob: -5.452805042266846
    5. ' ' → logprob: -7.202805042266846
    6. ')
' → logprob: -7.327805042266846
    7. 'l' → logprob: -8.577805519104004
    8. ' ,' → logprob: -8.577805519104004
    9. '       ' → logprob: -8.702805519104004
    10. ' )' → logprob: -8.827805519104004

Token 692: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021904803812503815
    2. ':' → logprob: -5.271904945373535
    3. '(self' → logprob: -5.271904945373535
    4. ',' → logprob: -5.896904945373535
    5. '
' → logprob: -6.396904945373535
    6. ')' → logprob: -6.396904945373535
    7. ':
' → logprob: -6.396904945373535
    8. '):
' → logprob: -6.646904945373535
    9. '```' → logprob: -7.521904945373535
    10. '   ' → logprob: -7.646904945373535

Token 693: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12698490917682648
    2. 'self' → logprob: -2.1269848346710205
    3. '       ' → logprob: -10.751984596252441
    4. ' the' → logprob: -10.876984596252441
    5. '   ' → logprob: -11.751984596252441
    6. ' ' → logprob: -12.126984596252441
    7. '    ' → logprob: -14.251984596252441
    8. '	self' → logprob: -14.376984596252441
    9. '        ' → logprob: -15.001984596252441
    10. 'the' → logprob: -15.126984596252441

Token 694: ' binary' (ID: 15600)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11298096925020218
    2. 'self' → logprob: -2.237981081008911
    3. ' ' → logprob: -9.487980842590332
    4. ' operation' → logprob: -10.362980842590332
    5. '       ' → logprob: -10.987980842590332
    6. '   ' → logprob: -11.987980842590332
    7. 'operation' → logprob: -12.737980842590332
    8. ' binary' → logprob: -12.862980842590332
    9. 'space' → logprob: -12.987980842590332
    10. ' space' → logprob: -12.987980842590332

Token 695: ' operation' (ID: 9506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2892408072948456
    2. ' operation' → logprob: -2.039240837097168
    3. ' _' → logprob: -2.539240837097168
    4. ' op' → logprob: -3.914240837097168
    5. '_' → logprob: -5.039240837097168
    6. '_op' → logprob: -5.289240837097168
    7. 'operation' → logprob: -5.664240837097168
    8. 'op' → logprob: -6.039240837097168
    9. '_operation' → logprob: -6.289240837097168
    10. '   ' → logprob: -6.539240837097168

Token 696: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04583705589175224
    2. '        
' → logprob: -3.295837163925171
    3. '
' → logprob: -5.045836925506592
    4. '(self' → logprob: -7.670836925506592
    5. '    
' → logprob: -8.67083740234375
    6. '   ' → logprob: -9.17083740234375
    7. ',' → logprob: -9.17083740234375
    8. 'self' → logprob: -9.42083740234375
    9. '        ' → logprob: -9.54583740234375
    10. '```' → logprob: -9.92083740234375

Token 697: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03561181202530861
    2. '        
' → logprob: -3.535611867904663
    3. '```' → logprob: -5.660611629486084
    4. ':' → logprob: -7.910611629486084
    5. '  
' → logprob: -8.035612106323242
    6. '    
' → logprob: -8.035612106323242
    7. ' 
' → logprob: -8.160612106323242
    8. '       
' → logprob: -8.535612106323242
    9. ':
' → logprob: -9.035612106323242
    10. '``' → logprob: -9.160612106323242

Token 698: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010567454155534506
    2. '```' → logprob: -7.626056671142578
    3. '        
' → logprob: -7.876056671142578
    4. '   ' → logprob: -10.001056671142578
    5. '
' → logprob: -10.251056671142578
    6. 'l' → logprob: -10.626056671142578
    7. '``' → logprob: -10.876056671142578
    8. '    
' → logprob: -11.001056671142578
    9. ' l' → logprob: -11.876056671142578
    10. '           ' → logprob: -12.251056671142578

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005952856503427029
    2. 'l' → logprob: -5.255952835083008
    3. '   ' → logprob: -7.755952835083008
    4. '```' → logprob: -8.880952835083008
    5. 'result' → logprob: -9.380952835083008
    6. ' l' → logprob: -10.005952835083008
    7. 'res' → logprob: -12.255952835083008
    8. ' ' → logprob: -12.505952835083008
    9. '``' → logprob: -12.880952835083008
    10. '           ' → logprob: -13.005952835083008

Token 700: ' l' (ID: 305)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008701082319021225
    2. 'l' (adapté à ' l') → logprob: -4.758700847625732
    3. ' res' → logprob: -10.00870132446289
    4. 'result' → logprob: -10.50870132446289
    5. '   ' → logprob: -12.00870132446289
    6. '       ' → logprob: -12.25870132446289
    7. 'ans' → logprob: -13.88370132446289
    8. 's' → logprob: -14.13370132446289
    9. 'ret' → logprob: -14.63370132446289
    10. '	res' → logprob: -15.25870132446289

Token 701: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.35357242822647095
    2. '+=' → logprob: -1.2285723686218262
    3. '=' → logprob: -6.103572368621826
    4. ',' → logprob: -6.353572368621826
    5. ' ,' → logprob: -7.478572368621826
    6. ' =' → logprob: -7.603572368621826
    7. ' +' → logprob: -10.728572845458984
    8. '+' → logprob: -11.478572845458984
    9. '       ' → logprob: -11.478572845458984
    10. '        ' → logprob: -11.603572845458984

Token 702: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -18.00007438659668
    4. '	self' → logprob: -19.25007438659668
    5. '[self' → logprob: -19.75007438659668
    6. '   ' → logprob: -20.50007438659668
    7. '(self' → logprob: -20.75007438659668
    8. '0' → logprob: -21.87507438659668
    9. '=self' → logprob: -22.62507438659668
    10. 'Self' → logprob: -22.62507438659668

Token 703: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07899388670921326
    2. '.size' → logprob: -2.578993797302246
    3. ' size' → logprob: -9.703993797302246
    4. '_size' → logprob: -10.953993797302246
    5. 'self' → logprob: -11.203993797302246
    6. '	size' → logprob: -12.828993797302246
    7. '=size' → logprob: -12.953993797302246
    8. '[size' → logprob: -13.328993797302246
    9. '<size' → logprob: -13.453993797302246
    10. 's' → logprob: -13.953993797302246

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10245519876480103
    2. 'r' → logprob: -2.6024551391601562
    3. 'res' → logprob: -4.352455139160156
    4. ' r' → logprob: -5.227455139160156
    5. 'result' → logprob: -5.602455139160156
    6. ',' → logprob: -7.352455139160156
    7. 'val' → logprob: -8.477455139160156
    8. ' res' → logprob: -8.852455139160156
    9. ' result' → logprob: -9.977455139160156
    10. '        
' → logprob: -10.227455139160156

Token 705: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.036670997738838196
    2. '       ' → logprob: -3.5366709232330322
    3. 'res' → logprob: -5.161671161651611
    4. ' r' → logprob: -6.911671161651611
    5. 'result' → logprob: -8.786670684814453
    6. ' res' → logprob: -11.661670684814453
    7. ',' → logprob: -13.661670684814453
    8. '	r' → logprob: -13.661670684814453
    9. '_r' → logprob: -14.036670684814453
    10. 'ret' → logprob: -14.036670684814453

Token 706: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0003373694489710033
    2. 'res' → logprob: -8.000337600708008
    3. ' r' → logprob: -13.875337600708008
    4. 'result' → logprob: -14.500337600708008
    5. '       ' → logprob: -14.750337600708008
    6. '   ' → logprob: -17.750337600708008
    7. ' res' → logprob: -18.875337600708008
    8. 'ret' → logprob: -19.750337600708008
    9. '
' → logprob: -20.250337600708008
    10. '	r' → logprob: -20.875337600708008

Token 707: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008614926598966122
    2. ' self' → logprob: -4.758615016937256
    3. '       ' → logprob: -15.258614540100098
    4. '[self' → logprob: -17.133615493774414
    5. '0' → logprob: -17.258615493774414
    6. '(self' → logprob: -17.383615493774414
    7. '	self' → logprob: -17.508615493774414
    8. ' ' → logprob: -19.008615493774414
    9. '<|end|>' → logprob: -19.383615493774414
    10. '=self' → logprob: -19.758615493774414

Token 709: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00011892046313732862
    2. 'self' → logprob: -9.25011920928955
    3. '.self' → logprob: -11.75011920928955
    4. 'size' → logprob: -12.37511920928955
    5. '.' → logprob: -12.50011920928955
    6. '[self' → logprob: -13.00011920928955
    7. '       ' → logprob: -13.75011920928955
    8. ' self' → logprob: -14.12511920928955
    9. ' .' → logprob: -14.37511920928955
    10. '	size' → logprob: -14.62511920928955

Token 710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22019994258880615
    2. 'result' → logprob: -1.7201999425888062
    3. ' result' → logprob: -4.845200061798096
    4. 'res' → logprob: -4.845200061798096
    5. '        
' → logprob: -6.345200061798096
    6. '    
' → logprob: -8.595199584960938
    7. '   ' → logprob: -8.595199584960938
    8. '```' → logprob: -8.720199584960938
    9. 'val' → logprob: -9.095199584960938
    10. '
' → logprob: -9.095199584960938

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2606407403945923
    2. 'res' → logprob: -1.5106407403945923
    3. 'result' → logprob: -4.885640621185303
    4. ' res' → logprob: -7.010640621185303
    5. '   ' → logprob: -8.760641098022461
    6. 'left' → logprob: -10.760641098022461
    7. 'l' → logprob: -11.760641098022461
    8. ' result' → logprob: -11.885641098022461
    9. 'ans' → logprob: -11.885641098022461
    10. 'ret' → logprob: -12.135641098022461

Token 712: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0005778160993941128
    2. 's' → logprob: -7.500577926635742
    3. ' res' → logprob: -11.375577926635742
    4. 'sm' → logprob: -12.625577926635742
    5. '       ' → logprob: -12.750577926635742
    6. 'result' → logprob: -12.750577926635742
    7. 'ans' → logprob: -14.000577926635742
    8. '_res' → logprob: -14.125577926635742
    9. '	res' → logprob: -14.625577926635742
    10. 'vl' → logprob: -14.875577926635742

Token 713: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10145038366317749
    2. '=' → logprob: -2.3514504432678223
    3. '_' → logprob: -7.226450443267822
    4. '1' → logprob: -8.226449966430664
    5. ' ' → logprob: -8.726449966430664
    6. '   ' → logprob: -10.601449966430664
    7. '_=' → logprob: -10.601449966430664
    8. '	' → logprob: -11.851449966430664
    9. '_left' → logprob: -12.101449966430664
    10. ' _' → logprob: -12.226449966430664

Token 714: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16034913063049316
    2. '=' → logprob: -1.9103491306304932
    3. ',' → logprob: -9.535348892211914
    4. ' ' → logprob: -10.035348892211914
    5. '=self' → logprob: -11.785348892211914
    6. '  ' → logprob: -15.285348892211914
    7. ' ,' → logprob: -15.410348892211914
    8. '   ' → logprob: -15.660348892211914
    9. 'space' → logprob: -15.785348892211914
    10. 'self' → logprob: -15.910348892211914

Token 715: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008615042082965374
    2. ' res' → logprob: -4.758615016937256
    3. 'r' → logprob: -15.133615493774414
    4. 're' → logprob: -16.383615493774414
    5. '=' → logprob: -17.258615493774414
    6. '_res' → logprob: -17.508615493774414
    7. '	res' → logprob: -17.633615493774414
    8. ' ' → logprob: -17.758615493774414
    9. '=res' → logprob: -18.258615493774414
    10. ' =' → logprob: -18.508615493774414

Token 716: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0046883453615009785
    2. 'r' → logprob: -6.254688262939453
    3. '=' → logprob: -6.629688262939453
    4. ' =' → logprob: -7.254688262939453
    5. '_' → logprob: -7.504688262939453
    6. ',r' → logprob: -9.879688262939453
    7. '_=' → logprob: -10.254688262939453
    8. '=r' → logprob: -10.879688262939453
    9. ',' → logprob: -11.129688262939453
    10. '_l' → logprob: -11.254688262939453

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740894138813019
    2. '=' → logprob: -0.9740893840789795
    3. '=self' → logprob: -11.349089622497559
    4. ' ' → logprob: -14.599089622497559
    5. ',' → logprob: -15.849089622497559
    6. ' =
' → logprob: -17.974088668823242
    7. '=
' → logprob: -17.974088668823242
    8. '＝' → logprob: -18.974088668823242
    9. ' self' → logprob: -19.349088668823242
    10. 'self' → logprob: -19.474088668823242

Token 718: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043126524542458355
    2. ' self' → logprob: -7.750431060791016
    3. '       ' → logprob: -14.625431060791016
    4. '   ' → logprob: -16.125431060791016
    5. '(self' → logprob: -16.625431060791016
    6. '[self' → logprob: -17.250431060791016
    7. '	self' → logprob: -18.875431060791016
    8. '=self' → logprob: -19.375431060791016
    9. '           ' → logprob: -19.500431060791016
    10. ' ' → logprob: -19.750431060791016

Token 719: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.015018177218735218
    2. 'self' → logprob: -4.265017986297607
    3. 'e' → logprob: -7.140017986297607
    4. '.self' → logprob: -10.640018463134766
    5. ' self' → logprob: -10.765018463134766
    6. '.' → logprob: -11.515018463134766
    7. '.s' → logprob: -12.390018463134766
    8. ' =' → logprob: -14.765018463134766
    9. ' ' → logprob: -15.015018463134766
    10. ' .' → logprob: -15.515018463134766

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001519503304734826
    2. ' ,' → logprob: -7.001519680023193
    3. ',self' → logprob: -7.876519680023193
    4. ',res' → logprob: -8.876519203186035
    5. ',
' → logprob: -9.626519203186035
    6. ',None' → logprob: -11.251519203186035
    7. ',n' → logprob: -13.376519203186035
    8. ',\
' → logprob: -14.126519203186035
    9. ',s' → logprob: -14.501519203186035
    10. ',result' → logprob: -14.501519203186035

Token 721: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163863845169544
    2. ' self' → logprob: -4.264163970947266
    3. '       ' → logprob: -15.764163970947266
    4. ' ' → logprob: -16.639163970947266
    5. '   ' → logprob: -17.014163970947266
    6. '	self' → logprob: -17.889163970947266
    7. '     ' → logprob: -18.139163970947266
    8. '    ' → logprob: -18.139163970947266
    9. ' ' → logprob: -18.389163970947266
    10. '        ' → logprob: -18.389163970947266

Token 722: '.e' (ID: 2560)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20297056436538696
    2. '.e' → logprob: -1.7029705047607422
    3. '_e' → logprob: -7.577970504760742
    4. 'self' → logprob: -7.827970504760742
    5. '	e' → logprob: -8.077970504760742
    6. ' e' → logprob: -8.452970504760742
    7. ',e' → logprob: -9.827970504760742
    8. '   ' → logprob: -10.577970504760742
    9. '       ' → logprob: -10.827970504760742
    10. '(e' → logprob: -12.202970504760742

Token 723: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03598538413643837
    2. '        
' → logprob: -3.5359854698181152
    3. ' 
' → logprob: -6.035985469818115
    4. '<|end|>' → logprob: -7.035985469818115
    5. '  
' → logprob: -7.160985469818115
    6. '
' → logprob: -7.160985469818115
    7. ',' → logprob: -8.285984992980957
    8. '    
' → logprob: -8.410984992980957
    9. '		
' → logprob: -8.535984992980957
    10. '   ' → logprob: -9.285984992980957

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037064507603645325
    2. '        
' → logprob: -4.037064552307129
    3. '
' → logprob: -4.537064552307129
    4. ' 
' → logprob: -5.912064552307129
    5. '<|end|>' → logprob: -6.787064552307129
    6. '  
' → logprob: -6.912064552307129
    7. '    
' → logprob: -6.912064552307129
    8. '```' → logprob: -7.287064552307129
    9. '   ' → logprob: -8.037064552307129
    10. ' while' → logprob: -8.037064552307129

Token 725: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6602352261543274
    2. 'while' → logprob: -0.9102352261543274
    3. ' while' → logprob: -2.5352351665496826
    4. '	while' → logprob: -7.660235404968262
    5. '        
' → logprob: -8.035235404968262
    6. '   ' → logprob: -8.410235404968262
    7. '
' → logprob: -8.535235404968262
    8. ' 
' → logprob: -8.660235404968262
    9. '```' → logprob: -9.410235404968262
    10. '    
' → logprob: -9.910235404968262

Token 726: ' Traverse' (ID: 155771)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.500000953674316
    3. ' while' → logprob: -15.125000953674316
    4. 'While' → logprob: -16.125
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.625
    7. '
' → logprob: -20.25
    8. '	while' → logprob: -20.75
    9. '           ' → logprob: -22.5
    10. 'for' → logprob: -23.5

Token 727: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2565828263759613
    2. 'l' → logprob: -1.8815828561782837
    3. ' while' → logprob: -2.756582736968994
    4. ' l' → logprob: -4.631582736968994
    5. '       ' → logprob: -7.756582736968994
    6. '   ' → logprob: -8.506583213806152
    7. ' ' → logprob: -10.756583213806152
    8. '    ' → logprob: -10.881583213806152
    9. '	while' → logprob: -11.631583213806152
    10. 'While' → logprob: -12.006583213806152

Token 728: ' tree' (ID: 8165)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001537238946184516
    2. 'while' → logprob: -6.876537322998047
    3. ' l' → logprob: -7.751537322998047
    4. ' while' → logprob: -9.751537322998047
    5. '   ' → logprob: -11.626537322998047
    6. '       ' → logprob: -12.876537322998047
    7. 'left' → logprob: -14.126537322998047
    8. '	l' → logprob: -14.626537322998047
    9. 'While' → logprob: -14.751537322998047
    10. '[l' → logprob: -14.876537322998047

Token 729: ' from' (ID: 591)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9030791521072388
    2. 'while' → logprob: -1.1530791521072388
    3. '       ' → logprob: -1.2780791521072388
    4. '	while' → logprob: -8.27807903289795
    5. 'While' → logprob: -9.65307903289795
    6. '   ' → logprob: -10.52807903289795
    7. '        
' → logprob: -10.77807903289795
    8. '        ' → logprob: -10.90307903289795
    9. ',' → logprob: -11.02807903289795
    10. '           ' → logprob: -11.77807903289795

Token 730: ' leaves' (ID: 15657)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001957775093615055
    2. ' l' → logprob: -6.251957893371582
    3. '       ' → logprob: -11.126957893371582
    4. '   ' → logprob: -12.001957893371582
    5. 'left' → logprob: -13.501957893371582
    6. '	l' → logprob: -13.501957893371582
    7. 'while' → logprob: -13.626957893371582
    8. 'the' → logprob: -13.876957893371582
    9. '    ' → logprob: -14.376957893371582
    10. ' the' → logprob: -14.501957893371582

Token 731: ' towards' (ID: 9979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5668200254440308
    2. ' while' → logprob: -1.4418200254440308
    3. 'while' → logprob: -1.8168200254440308
    4. ' to' → logprob: -4.56682014465332
    5. ';' → logprob: -4.56682014465332
    6. ',' → logprob: -4.94182014465332
    7. 'to' → logprob: -7.19182014465332
    8. ' and' → logprob: -7.19182014465332
    9. ';l' → logprob: -7.19182014465332
    10. ' until' → logprob: -7.56682014465332

Token 732: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010832864791154861
    2. ' l' → logprob: -4.760832786560059
    3. 'r' → logprob: -7.510832786560059
    4. 'the' → logprob: -7.760832786560059
    5. '   ' → logprob: -7.885832786560059
    6. 'while' → logprob: -7.885832786560059
    7. ' the' → logprob: -8.760832786560059
    8. '       ' → logprob: -8.885832786560059
    9. ' while' → logprob: -9.510832786560059
    10. 'both' → logprob: -10.260832786560059

Token 733: ' root' (ID: 6577)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0209991242736578
    2. 'root' → logprob: -4.770998954772949
    3. 'r' → logprob: -5.395998954772949
    4. ' l' → logprob: -5.520998954772949
    5. '   ' → logprob: -6.520998954772949
    6. '       ' → logprob: -7.395998954772949
    7. 'roots' → logprob: -8.02099895477295
    8. '1' → logprob: -8.27099895477295
    9. 'res' → logprob: -8.89599895477295
    10. '0' → logprob: -9.02099895477295

Token 734: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020226746797561646
    2. '
' → logprob: -4.770226955413818
    3. '        
' → logprob: -4.770226955413818
    4. ' while' → logprob: -7.020226955413818
    5. '    
' → logprob: -7.395226955413818
    6. ' 
' → logprob: -8.02022647857666
    7. '  
' → logprob: -8.14522647857666
    8. '<|end|>' → logprob: -8.64522647857666
    9. 'while' → logprob: -8.89522647857666
    10. ',' → logprob: -9.02022647857666

Token 735: ' aggreg' (ID: 23225)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3863147497177124
    2. '       ' → logprob: -1.2613147497177124
    3. 'while' → logprob: -3.386314868927002
    4. '        ' → logprob: -5.761314868927002
    5. '	while' → logprob: -9.386314392089844
    6. '           ' → logprob: -10.511314392089844
    7. '    ' → logprob: -10.761314392089844
    8. '   ' → logprob: -11.136314392089844
    9. ' ' → logprob: -11.261314392089844
    10. '        
' → logprob: -11.886314392089844

Token 736: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.0033731767907738686
    2. 'ate' → logprob: -6.253373146057129
    3. 'ing' → logprob: -7.378373146057129
    4. '       ' → logprob: -7.503373146057129
    5. '   ' → logprob: -9.378373146057129
    6. 'at' → logprob: -9.628373146057129
    7. 'atting' → logprob: -10.128373146057129
    8. '           ' → logprob: -10.503373146057129
    9. '=' → logprob: -11.503373146057129
    10. '
' → logprob: -12.003373146057129

Token 737: ' results' (ID: 4376)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6787506341934204
    2. ' if' → logprob: -1.9287506341934204
    3. 'while' → logprob: -2.178750514984131
    4. ' while' → logprob: -2.678750514984131
    5. 'if' → logprob: -2.928750514984131
    6. ' res' → logprob: -2.928750514984131
    7. '       ' → logprob: -3.553750514984131
    8. 'result' → logprob: -4.553750514984131
    9. ' l' → logprob: -5.053750514984131
    10. 'l' → logprob: -5.303750514984131

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003781427862122655
    2. '        
' → logprob: -6.503781318664551
    3. ' while' → logprob: -7.128781318664551
    4. '
' → logprob: -7.503781318664551
    5. ',' → logprob: -8.37878131866455
    6. '<|end|>' → logprob: -8.87878131866455
    7. '   ' → logprob: -9.12878131866455
    8. '  
' → logprob: -9.62878131866455
    9. 'while' → logprob: -9.75378131866455
    10. '    
' → logprob: -9.87878131866455

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003301412332803011
    2. '        
' → logprob: -6.253301620483398
    3. '
' → logprob: -7.503301620483398
    4. '  
' → logprob: -8.878301620483398
    5. ' while' → logprob: -8.878301620483398
    6. '<|end|>' → logprob: -8.878301620483398
    7. '```' → logprob: -9.003301620483398
    8. ' 
' → logprob: -9.628301620483398
    9. '   ' → logprob: -9.753301620483398
    10. '    
' → logprob: -9.753301620483398

Token 740: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18280820548534393
    2. ' while' → logprob: -1.9328081607818604
    3. '       ' → logprob: -3.8078081607818604
    4. '	while' → logprob: -9.432807922363281
    5. '   ' → logprob: -10.182807922363281
    6. 'While' → logprob: -11.682807922363281
    7. '```' → logprob: -13.057807922363281
    8. ' ' → logprob: -13.182807922363281
    9. '    ' → logprob: -13.182807922363281
    10. '        ' → logprob: -14.307807922363281

Token 741: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5759432911872864
    2. ' l' → logprob: -0.8259432911872864
    3. '	l' → logprob: -13.075942993164062
    4. '   ' → logprob: -14.075942993164062
    5. '(l' → logprob: -15.200942993164062
    6. ' ' → logprob: -15.700942993164062
    7. ' ' → logprob: -15.700942993164062
    8. '```' → logprob: -16.075942993164062
    9. '_l' → logprob: -16.325942993164062
    10. '$l' → logprob: -16.450942993164062

Token 742: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012057945132255554
    2. ' <' → logprob: -4.512057781219482
    3. '&' → logprob: -7.512057781219482
    4. '&lt' → logprob: -9.01205825805664
    5. '[' → logprob: -10.01205825805664
    6. '<th' → logprob: -10.13705825805664
    7. ' ' → logprob: -10.26205825805664
    8. '<len' → logprob: -10.38705825805664
    9. ' &' → logprob: -10.76205825805664
    10. '<w' → logprob: -10.88705825805664

Token 743: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.615255839889869e-05
    2. ' r' → logprob: -9.250096321105957
    3. '	r' → logprob: -18.50009536743164
    4. '   ' → logprob: -19.37509536743164
    5. '_r' → logprob: -20.62509536743164
    6. ' ' → logprob: -22.37509536743164
    7. '=r' → logprob: -22.62509536743164
    8. '(r' → logprob: -22.75009536743164
    9. ' ' → logprob: -23.25009536743164
    10. '       ' → logprob: -23.37509536743164

Token 744: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10040022432804108
    2. ':' → logprob: -2.35040020942688
    3. '           ' → logprob: -8.7253999710083
    4. '):
' → logprob: -11.4753999710083
    5. ':
' → logprob: -11.9753999710083
    6. '       ' → logprob: -12.4753999710083
    7. '():
' → logprob: -12.6003999710083
    8. ' :
' → logprob: -12.6003999710083
    9. ':

' → logprob: -14.2253999710083
    10. ' and' → logprob: -14.6003999710083

Token 745: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012149984249845147
    2. ' if' → logprob: -6.876214981079102
    3. '```' → logprob: -10.376214981079102
    4. '            
' → logprob: -10.501214981079102
    5. '            ' → logprob: -11.001214981079102
    6. '   ' → logprob: -11.126214981079102
    7. '          ' → logprob: -11.126214981079102
    8. 'if' → logprob: -11.376214981079102
    9. ' ' → logprob: -11.376214981079102
    10. '        ' → logprob: -11.501214981079102

Token 746: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8694409728050232
    2. 'if' (adapté à ' if') → logprob: -1.119441032409668
    3. ' if' → logprob: -1.369441032409668
    4. '               ' → logprob: -10.369441032409668
    5. '   ' → logprob: -10.744441032409668
    6. 'If' → logprob: -10.744441032409668
    7. '```' → logprob: -11.369441032409668
    8. ' ' → logprob: -11.744441032409668
    9. '          ' → logprob: -13.494441032409668
    10. '            ' → logprob: -13.619441032409668

Token 747: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00029637437546625733
    2. ' l' → logprob: -8.125296592712402
    3. '(l' → logprob: -15.250296592712402
    4. '	l' → logprob: -17.375295639038086
    5. '   ' → logprob: -18.375295639038086
    6. ' ' → logprob: -18.875295639038086
    7. ' (' → logprob: -19.125295639038086
    8. '1' → logprob: -19.750295639038086
    9. '```' → logprob: -20.125295639038086
    10. 'r' → logprob: -20.250295639038086

Token 748: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.018152287229895592
    2. ' &' → logprob: -4.018152236938477
    3. '%' → logprob: -14.393152236938477
    4. '&
' → logprob: -14.393152236938477
    5. '&amp' → logprob: -14.518152236938477
    6. '   ' → logprob: -15.393152236938477
    7. '＆' → logprob: -16.393152236938477
    8. '&B' → logprob: -16.768152236938477
    9. '&p' → logprob: -16.768152236938477
    10. '&nbsp' → logprob: -16.893152236938477

Token 749: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '１' → logprob: -20.000001907348633
    5. '
' → logprob: -20.750001907348633
    6. '01' → logprob: -21.125001907348633
    7. '#' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '۱' → logprob: -21.375001907348633
    10. '-' → logprob: -21.500001907348633

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '01' → logprob: -20.125
    4. '{' → logprob: -20.625
    5. '１' → logprob: -20.75
    6. '   ' → logprob: -21.25
    7. '#' → logprob: -22.0
    8. '' → logprob: -22.125
    9. '۱' → logprob: -22.125
    10. '{
' → logprob: -22.375

Token 751: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3496015965938568
    2. ':' → logprob: -1.2246016263961792
    3. '==' → logprob: -7.474601745605469
    4. '           ' → logprob: -7.974601745605469
    5. ' ==' → logprob: -9.349601745605469
    6. '               ' → logprob: -9.599601745605469
    7. '=' → logprob: -9.849601745605469
    8. ':
' → logprob: -11.849601745605469
    9. '):
' → logprob: -11.974601745605469
    10. ')' → logprob: -12.349601745605469

Token 752: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024792900308966637
    2. 'res' → logprob: -3.7747929096221924
    3. ' res' → logprob: -6.649792671203613
    4. '           ' → logprob: -8.774792671203613
    5. '
' → logprob: -9.899792671203613
    6. '                
' → logprob: -10.899792671203613
    7. '```' → logprob: -11.899792671203613
    8. ' 
' → logprob: -12.774792671203613
    9. '    
' → logprob: -12.774792671203613
    10. '                   ' → logprob: -12.899792671203613

Token 753: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0008888294687494636
    2. ' res' → logprob: -7.250888824462891
    3. '               ' → logprob: -8.75088882446289
    4. '                   ' → logprob: -10.87588882446289
    5. '           ' → logprob: -14.12588882446289
    6. '	res' → logprob: -14.62588882446289
    7. '   ' → logprob: -14.75088882446289
    8. ' ' → logprob: -16.87588882446289
    9. '_res' → logprob: -17.00088882446289
    10. '                       ' → logprob: -17.12588882446289

Token 754: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.375009536743164
    3. '=' → logprob: -13.250009536743164
    4. 'l' → logprob: -14.125009536743164
    5. ' =' → logprob: -14.500009536743164
    6. '=_' → logprob: -14.750009536743164
    7. '_res' → logprob: -15.000009536743164
    8. ' _' → logprob: -15.000009536743164
    9. '_left' → logprob: -15.250009536743164
    10. '_=' → logprob: -15.500009536743164

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326258182525635
    2. ' =' → logprob: -1.3132625818252563
    3. '=self' → logprob: -14.063262939453125
    4. ' ' → logprob: -17.063262939453125
    5. 'self' → logprob: -18.063262939453125
    6. '＝' → logprob: -18.938262939453125
    7. '   ' → logprob: -19.313262939453125
    8. '=
' → logprob: -19.438262939453125
    9. '.=' → logprob: -19.438262939453125
    10. '=

' → logprob: -19.438262939453125

Token 756: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233882926404476
    2. ' self' → logprob: -5.2552337646484375
    3. '	self' → logprob: -16.630233764648438
    4. '(self' → logprob: -17.005233764648438
    5. '   ' → logprob: -18.255233764648438
    6. '           ' → logprob: -18.255233764648438
    7. ' ' → logprob: -18.380233764648438
    8. '[self' → logprob: -18.755233764648438
    9. '=self' → logprob: -18.880233764648438
    10. ' ' → logprob: -19.130233764648438

Token 757: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0003000696888193488
    2. 'op' → logprob: -8.125300407409668
    3. '.' → logprob: -12.875300407409668
    4. '	op' → logprob: -13.875300407409668
    5. 'self' → logprob: -15.750300407409668
    6. '_op' → logprob: -15.875300407409668
    7. ' op' → logprob: -16.25029945373535
    8. ' .' → logprob: -16.50029945373535
    9. '(op' → logprob: -17.37529945373535
    10. '.opt' → logprob: -18.37529945373535

Token 758: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. '(self' → logprob: -16.000001907348633
    4. 'res' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.875001907348633
    6. ' (' → logprob: -18.250001907348633
    7. ',res' → logprob: -18.625001907348633
    8. '=res' → logprob: -20.375001907348633
    9. ' res' → logprob: -20.875001907348633
    10. '(r' → logprob: -21.250001907348633

Token 759: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.127333340875339e-06
    2. 'l' → logprob: -12.500003814697266
    3. 'res' → logprob: -15.250003814697266
    4. '(res' → logprob: -17.125003814697266
    5. 's' → logprob: -18.000003814697266
    6. 'self' → logprob: -18.250003814697266
    7. 'es' → logprob: -18.625003814697266
    8. 'L' → logprob: -19.750003814697266
    9. '```' → logprob: -19.750003814697266
    10. 'a' → logprob: -19.875003814697266

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000496436667162925
    2. ',self' → logprob: -7.8754963874816895
    3. 'self' → logprob: -9.375496864318848
    4. ' ,' → logprob: -10.500496864318848
    5. ',
' → logprob: -13.375496864318848
    6. ' self' → logprob: -14.000496864318848
    7. '(self' → logprob: -14.125496864318848
    8. ')' → logprob: -14.625496864318848
    9. 's' → logprob: -16.25049591064453
    10. '[self' → logprob: -16.62549591064453

Token 761: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.659005157416686e-05
    2. ' self' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.750066757202148
    4. '(self' → logprob: -15.875066757202148
    5. '           ' → logprob: -16.37506675720215
    6. '[self' → logprob: -16.75006675720215
    7. '       ' → logprob: -17.00006675720215
    8. '	self' → logprob: -18.25006675720215
    9. ' ' → logprob: -18.62506675720215
    10. '               ' → logprob: -18.75006675720215

Token 762: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -1.27099974633893e-05
    2. 'node' → logprob: -11.500012397766113
    3. '.' → logprob: -13.750012397766113
    4. '.user' → logprob: -13.875012397766113
    5. ' .' → logprob: -15.375012397766113
    6. ').' → logprob: -16.00001335144043
    7. '].' → logprob: -17.50001335144043
    8. '.l' → logprob: -17.62501335144043
    9. '[node' → logprob: -17.75001335144043
    10. '._' → logprob: -17.87501335144043

Token 763: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. 'l' → logprob: -14.500001907348633
    4. '	l' → logprob: -18.250001907348633
    5. ' [' → logprob: -19.250001907348633
    6. '[i' → logprob: -19.875001907348633
    7. '[
' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. ' l' → logprob: -20.375001907348633
    10. ')[' → logprob: -20.875001907348633

Token 764: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7884780764579773
    2. ')' → logprob: -1.288478136062622
    3. '])
' → logprob: -1.788478136062622
    4. ')
' → logprob: -2.288478136062622
    5. ' )' → logprob: -7.663477897644043
    6. ' )
' → logprob: -8.538477897644043
    7. ' ])' → logprob: -8.788477897644043
    8. ' ])
' → logprob: -9.038477897644043
    9. ']' → logprob: -10.163477897644043
    10. '))' → logprob: -10.788477897644043

Token 765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013340517180040479
    2. 'l' → logprob: -7.376334190368652
    3. ' l' → logprob: -7.376334190368652
    4. '           ' → logprob: -9.751334190368652
    5. '                   ' → logprob: -11.501334190368652
    6. '              ' → logprob: -12.626334190368652
    7. '	           ' → logprob: -13.376334190368652
    8. '   ' → logprob: -13.376334190368652
    9. '                
' → logprob: -13.501334190368652
    10. ',l' → logprob: -14.001334190368652

Token 766: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0007656719535589218
    2. '                   ' → logprob: -8.000765800476074
    3. ' l' → logprob: -8.250765800476074
    4. '               ' → logprob: -8.750765800476074
    5. '           ' → logprob: -11.500765800476074
    6. '	l' → logprob: -15.500765800476074
    7. '   ' → logprob: -15.750765800476074
    8. '                       ' → logprob: -16.000764846801758
    9. '++' → logprob: -17.125764846801758
    10. '                 ' → logprob: -17.625764846801758

Token 767: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00043126524542458355
    2. ' +=' → logprob: -7.750431060791016
    3. ']+=' → logprob: -14.625431060791016
    4. '+' → logprob: -15.750431060791016
    5. '=' → logprob: -18.750431060791016
    6. '```' → logprob: -19.375431060791016
    7. '+=(' → logprob: -20.500431060791016
    8. '+="' → logprob: -20.750431060791016
    9. '+='' → logprob: -20.875431060791016
    10. 'plus' → logprob: -21.500431060791016

Token 768: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -21.5
    4. '   ' → logprob: -22.125
    5. '۱' → logprob: -23.625
    6. '１' → logprob: -24.125
    7. '
' → logprob: -24.25
    8. '  ' → logprob: -24.875
    9. ' ' → logprob: -25.25
    10. '`' → logprob: -25.5

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -22.125
    5. '۱' → logprob: -23.25
    6. '
' → logprob: -23.625
    7. '  ' → logprob: -23.75
    8. '１' → logprob: -23.75
    9. '१' → logprob: -25.0625
    10. '	' → logprob: -25.3125

Token 770: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7491250875755213e-05
    2. '            
' → logprob: -11.000027656555176
    3. '
' → logprob: -12.500027656555176
    4. 'r' → logprob: -13.500027656555176
    5. '          ' → logprob: -13.750027656555176
    6. '       ' → logprob: -13.750027656555176
    7. ' r' → logprob: -14.250027656555176
    8. '		' → logprob: -14.250027656555176
    9. '	       ' → logprob: -15.250027656555176
    10. ' 
' → logprob: -15.500027656555176

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.670925358776003e-05
    2. '       ' → logprob: -10.500066757202148
    3. ' if' → logprob: -11.500066757202148
    4. 'if' → logprob: -11.750066757202148
    5. '            
' → logprob: -11.750066757202148
    6. '          ' → logprob: -12.500066757202148
    7. '   ' → logprob: -12.625066757202148
    8. ' ' → logprob: -13.625066757202148
    9. '```' → logprob: -14.125066757202148
    10. '    
' → logprob: -14.375066757202148

Token 772: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029945557937026024
    2. ' if' → logprob: -3.7799456119537354
    3. 'r' → logprob: -5.029945373535156
    4. ' r' → logprob: -9.529945373535156
    5. '           ' → logprob: -10.029945373535156
    6. '       ' → logprob: -11.279945373535156
    7. '   ' → logprob: -11.779945373535156
    8. ' ' → logprob: -14.154945373535156
    9. '```' → logprob: -14.904945373535156
    10. '  ' → logprob: -16.529945373535156

Token 773: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038042180240154266
    2. ' r' → logprob: -3.2880420684814453
    3. '	r' → logprob: -14.788042068481445
    4. '   ' → logprob: -15.413042068481445
    5. ' ' → logprob: -16.288042068481445
    6. '  ' → logprob: -17.913042068481445
    7. '(r' → logprob: -18.788042068481445
    8. ' not' → logprob: -19.163042068481445
    9. '_r' → logprob: -19.413042068481445
    10. 'not' → logprob: -20.038042068481445

Token 774: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.20142288506031036
    2. ' &' → logprob: -1.701422929763794
    3. '&amp' → logprob: -11.826422691345215
    4. '&
' → logprob: -14.201422691345215
    5. '&nbsp' → logprob: -14.826422691345215
    6. '&gt' → logprob: -15.951422691345215
    7. '&_' → logprob: -15.951422691345215
    8. '&r' → logprob: -16.07642364501953
    9. '&p' → logprob: -16.20142364501953
    10. '&w' → logprob: -16.32642364501953

Token 775: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.375015258789062
    4. '-' → logprob: -18.875015258789062
    5. 'r' → logprob: -20.000015258789062
    6. '```' → logprob: -20.937515258789062
    7. '１' → logprob: -21.187515258789062
    8. '  ' → logprob: -21.250015258789062
    9. '#' → logprob: -21.250015258789062
    10. '           ' → logprob: -21.312515258789062

Token 776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'r' → logprob: -15.250000953674316
    4. '-' → logprob: -17.375001907348633
    5. '~' → logprob: -17.625001907348633
    6. '
' → logprob: -18.000001907348633
    7. '{
' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '```' → logprob: -19.250001907348633
    10. '#' → logprob: -19.375001907348633

Token 777: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0614359974861145
    2. ':' → logprob: -3.5614359378814697
    3. ':
' → logprob: -4.311436176300049
    4. '           ' → logprob: -4.936436176300049
    5. '-' → logprob: -5.186436176300049
    6. '==' → logprob: -6.561436176300049
    7. '                   ' → logprob: -7.311436176300049
    8. ' -=' → logprob: -7.311436176300049
    9. '-=' → logprob: -7.811436176300049
    10. '              ' → logprob: -8.18643569946289

Token 778: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010369427502155304
    2. '           ' → logprob: -4.760369300842285
    3. '```' → logprob: -6.885369300842285
    4. ':
' → logprob: -8.510369300842285
    5. '                   ' → logprob: -8.635369300842285
    6. ':' → logprob: -9.260369300842285
    7. '   ' → logprob: -10.135369300842285
    8. '              ' → logprob: -10.135369300842285
    9. '``' → logprob: -10.385369300842285
    10. 'r' → logprob: -10.635369300842285

Token 779: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00025108797126449645
    2. '               ' → logprob: -8.625250816345215
    3. ' r' → logprob: -10.000250816345215
    4. '                   ' → logprob: -10.875250816345215
    5. 'res' → logprob: -12.875250816345215
    6. '           ' → logprob: -13.000250816345215
    7. '   ' → logprob: -13.750250816345215
    8. '```' → logprob: -13.875250816345215
    9. '	r' → logprob: -16.37525177001953
    10. '#' → logprob: -16.50025177001953

Token 780: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07134269177913666
    2. ' -=' → logprob: -2.821342706680298
    3. '-' → logprob: -4.696342468261719
    4. '   ' → logprob: -9.321342468261719
    5. '```' → logprob: -9.821342468261719
    6. '           ' → logprob: -10.071342468261719
    7. '=' → logprob: -12.071342468261719
    8. '               ' → logprob: -12.946342468261719
    9. '       ' → logprob: -13.196342468261719
    10. ' -' → logprob: -13.446342468261719

Token 781: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -21.125
    5. '           ' → logprob: -22.375
    6. '       ' → logprob: -23.375
    7. ')' → logprob: -24.25
    8. '  ' → logprob: -24.5
    9. 'r' → logprob: -24.625
    10. '               ' → logprob: -24.875

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. 'r' → logprob: -18.25
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -21.5
    6. 'self' → logprob: -22.0
    7. '           ' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. '       ' → logprob: -22.625
    10. '۱' → logprob: -23.3125

Token 783: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001514557225164026
    2. '           ' → logprob: -9.625151634216309
    3. '                   ' → logprob: -9.625151634216309
    4. '
' → logprob: -12.375151634216309
    5. '              ' → logprob: -12.625151634216309
    6. ',' → logprob: -13.250151634216309
    7. '                ' → logprob: -13.500151634216309
    8. '   ' → logprob: -13.500151634216309
    9. '                
' → logprob: -13.750151634216309
    10. '			' → logprob: -13.750151634216309

Token 784: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004845346265938133
    2. 'res' → logprob: -8.375484466552734
    3. '           ' → logprob: -8.750484466552734
    4. '                   ' → logprob: -9.625484466552734
    5. ' res' → logprob: -11.375484466552734
    6. '       ' → logprob: -12.125484466552734
    7. '              ' → logprob: -12.250484466552734
    8. '   ' → logprob: -12.875484466552734
    9. '```' → logprob: -13.250484466552734
    10. '                ' → logprob: -13.500484466552734

Token 785: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00032235344406217337
    2. ' res' → logprob: -8.375322341918945
    3. '               ' → logprob: -9.375322341918945
    4. '                   ' → logprob: -12.125322341918945
    5. '           ' → logprob: -13.625322341918945
    6. '	res' → logprob: -16.125322341918945
    7. '   ' → logprob: -17.125322341918945
    8. '```' → logprob: -17.500322341918945
    9. ' ' → logprob: -17.625322341918945
    10. '                       ' → logprob: -17.750322341918945

Token 786: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.125
    3. '_l' → logprob: -16.75
    4. '_' → logprob: -17.5
    5. '_right' → logprob: -17.75
    6. '_rhs' → logprob: -18.875
    7. ' _' → logprob: -19.125
    8. '=' → logprob: -19.25
    9. '	r' → logprob: -19.5
    10. '_i' → logprob: -20.25

Token 787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '=self' → logprob: -16.78522491455078
    4. ')' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.78522491455078
    6. '=
' → logprob: -18.28522491455078
    7. ')=' → logprob: -19.41022491455078
    8. '=

' → logprob: -20.16022491455078
    9. '.=' → logprob: -20.41022491455078
    10. ',' → logprob: -20.41022491455078

Token 788: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011705794604495168
    2. ' self' → logprob: -6.751170635223389
    3. '               ' → logprob: -15.37617015838623
    4. '           ' → logprob: -15.75117015838623
    5. '(self' → logprob: -17.751171112060547
    6. '                   ' → logprob: -18.126171112060547
    7. '	self' → logprob: -18.501171112060547
    8. '   ' → logprob: -18.626171112060547
    9. ' ' → logprob: -18.751171112060547
    10. '       ' → logprob: -19.126171112060547

Token 789: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.16030728816986084
    2. 'op' → logprob: -1.9103072881698608
    3. '.' → logprob: -10.035306930541992
    4. '	op' → logprob: -11.160306930541992
    5. ' op' → logprob: -11.285306930541992
    6. '(op' → logprob: -12.285306930541992
    7. '_op' → logprob: -12.785306930541992
    8. 'self' → logprob: -12.785306930541992
    9. ' .' → logprob: -14.785306930541992
    10. '```' → logprob: -14.910306930541992

Token 790: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011093381908722222
    2. '(res' → logprob: -9.250110626220703
    3. 'self' → logprob: -11.250110626220703
    4. '(' → logprob: -13.625110626220703
    5. 'res' → logprob: -15.750110626220703
    6. ' self' → logprob: -16.375110626220703
    7. ',self' → logprob: -17.125110626220703
    8. ' (' → logprob: -17.250110626220703
    9. '(s' → logprob: -17.250110626220703
    10. '[self' → logprob: -17.375110626220703

Token 791: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.002854447579011321
    2. 'r' → logprob: -7.377854347229004
    3. '.r' → logprob: -7.502854347229004
    4. '.res' → logprob: -7.502854347229004
    5. 'self' → logprob: -7.627854347229004
    6. 'e' → logprob: -7.627854347229004
    7. 'node' → logprob: -9.377854347229004
    8. 'res' → logprob: -10.627854347229004
    9. '.self' → logprob: -11.502854347229004
    10. ',' → logprob: -12.002854347229004

Token 792: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00026634239475242794
    2. 'r' → logprob: -8.250266075134277
    3. '(r' → logprob: -13.000266075134277
    4. '[' → logprob: -13.125266075134277
    5. ',r' → logprob: -15.500266075134277
    6. '```' → logprob: -16.500267028808594
    7. ',' → logprob: -16.625267028808594
    8. '[
' → logprob: -16.625267028808594
    9. ')' → logprob: -16.625267028808594
    10. ' r' → logprob: -17.375267028808594

Token 793: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009626230224967003
    2. '),' → logprob: -4.759626388549805
    3. ',res' → logprob: -7.009626388549805
    4. ' ,' → logprob: -9.634626388549805
    5. ')' → logprob: -10.634626388549805
    6. ',r' → logprob: -12.009626388549805
    7. ',self' → logprob: -12.759626388549805
    8. '],' → logprob: -12.759626388549805
    9. ',),' → logprob: -13.634626388549805
    10. ',val' → logprob: -13.759626388549805

Token 794: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.5491004129871726e-05
    2. ' res' → logprob: -10.000045776367188
    3. '   ' → logprob: -20.250045776367188
    4. '(res' → logprob: -20.625045776367188
    5. '	res' → logprob: -20.625045776367188
    6. 'r' → logprob: -21.125045776367188
    7. '$res' → logprob: -21.250045776367188
    8. '               ' → logprob: -21.250045776367188
    9. '
' → logprob: -21.375045776367188
    10. '                   ' → logprob: -21.500045776367188

Token 795: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -13.750000953674316
    3. '_res' → logprob: -17.125001907348633
    4. '_l' → logprob: -17.375001907348633
    5. '[r' → logprob: -18.500001907348633
    6. '	r' → logprob: -18.750001907348633
    7. '[' → logprob: -20.000001907348633
    8. '_val' → logprob: -20.375001907348633
    9. ')' → logprob: -20.500001907348633
    10. '_rr' → logprob: -20.500001907348633

Token 796: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.40276721119880676
    2. ')' → logprob: -1.1527671813964844
    3. '           ' → logprob: -4.152767181396484
    4. '               ' → logprob: -10.152767181396484
    5. ')
' → logprob: -12.027767181396484
    6. ' )
' → logprob: -13.152767181396484
    7. ')

' → logprob: -13.902767181396484
    8. ')`
' → logprob: -14.527767181396484
    9. '       ' → logprob: -15.027767181396484
    10. ')\
' → logprob: -15.027767181396484

Token 797: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008757318137213588
    2. '       ' → logprob: -7.375875949859619
    3. ' l' → logprob: -9.000875473022461
    4. '   ' → logprob: -10.125875473022461
    5. '               ' → logprob: -10.500875473022461
    6. 'r' → logprob: -11.000875473022461
    7. 'return' → logprob: -11.500875473022461
    8. 'l' → logprob: -11.625875473022461
    9. '```' → logprob: -12.500875473022461
    10. '​' → logprob: -12.750875473022461

Token 798: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.6059168577194214
    2. '           ' → logprob: -1.1059168577194214
    3. ' l' → logprob: -2.105916976928711
    4. '       ' → logprob: -6.480916976928711
    5. '   ' → logprob: -8.605916976928711
    6. '               ' → logprob: -9.980916976928711
    7. '```' → logprob: -11.605916976928711
    8. '          ' → logprob: -12.730916976928711
    9. ' ' → logprob: -13.230916976928711
    10. '                   ' → logprob: -13.480916976928711

Token 799: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.04896577447652817
    2. ' >>=' → logprob: -3.0489656925201416
    3. '//=' → logprob: -7.923965930938721
    4. '=' → logprob: -11.423965454101562
    5. '>>>' → logprob: -12.923965454101562
    6. '   ' → logprob: -14.298965454101562
    7. '≫' → logprob: -14.423965454101562
    8. ' ' → logprob: -14.548965454101562
    9. '/=' → logprob: -14.673965454101562
    10. '+=' → logprob: -15.548965454101562

Token 800: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '0' → logprob: -21.37500762939453
    4. '```' → logprob: -21.87500762939453
    5. ' ' → logprob: -22.00000762939453
    6. '   ' → logprob: -22.62500762939453
    7. '１' → logprob: -23.12500762939453
    8. '
' → logprob: -23.31250762939453
    9. '​' → logprob: -23.68750762939453
    10. '۱' → logprob: -23.81250762939453

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -19.25
    4. '   ' → logprob: -19.5
    5. 'l' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '
' → logprob: -21.625
    8. '2' → logprob: -22.25
    9. '۱' → logprob: -22.6875
    10. '01' → logprob: -22.6875

Token 802: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015974897891283035
    2. 'r' → logprob: -4.515974998474121
    3. ' r' → logprob: -5.640974998474121
    4. ',r' → logprob: -8.140974998474121
    5. '       ' → logprob: -8.515974998474121
    6. ',' → logprob: -8.640974998474121
    7. '>>' → logprob: -9.265974998474121
    8. '          ' → logprob: -9.390974998474121
    9. '               ' → logprob: -9.390974998474121
    10. '            ' → logprob: -9.890974998474121

Token 803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06569501012563705
    2. 'r' → logprob: -2.81569504737854
    3. ' r' → logprob: -5.690694808959961
    4. '       ' → logprob: -8.440694808959961
    5. '   ' → logprob: -9.565694808959961
    6. '               ' → logprob: -11.440694808959961
    7. '          ' → logprob: -11.940694808959961
    8. '            ' → logprob: -12.190694808959961
    9. '		' → logprob: -12.440694808959961
    10. '        ' → logprob: -12.565694808959961

Token 804: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.15310683415737e-05
    2. ' r' → logprob: -10.750021934509277
    3. '           ' → logprob: -20.50002098083496
    4. '   ' → logprob: -21.00002098083496
    5. '	r' → logprob: -21.25002098083496
    6. '       ' → logprob: -23.37502098083496
    7. '    ' → logprob: -25.12502098083496
    8. '```' → logprob: -25.12502098083496
    9. '_r' → logprob: -25.75002098083496
    10. 'rans' → logprob: -25.75002098083496

Token 805: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0002614550176076591
    2. ' >>=' → logprob: -8.250261306762695
    3. '>>>' → logprob: -16.625261306762695
    4. '//=' → logprob: -18.625261306762695
    5. '>>&' → logprob: -18.625261306762695
    6. '≫' → logprob: -18.750261306762695
    7. ')>>' → logprob: -18.875261306762695
    8. '=' → logprob: -19.125261306762695
    9. '>>,' → logprob: -19.125261306762695
    10. '>' → logprob: -19.625261306762695

Token 806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.250003814697266
    4. '```' → logprob: -20.875003814697266
    5. '0' → logprob: -21.500003814697266
    6. '2' → logprob: -22.375003814697266
    7. '۱' → logprob: -22.687503814697266
    8. '  ' → logprob: -22.750003814697266
    9. '01' → logprob: -23.125003814697266
    10. '１' → logprob: -23.187503814697266

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۱' → logprob: -22.5
    4. '2' → logprob: -22.75
    5. '   ' → logprob: -22.75
    6. '0' → logprob: -23.0
    7. '```' → logprob: -23.75
    8. '' → logprob: -23.875
    9. '१' → logprob: -24.125
    10. '１' → logprob: -24.125

Token 808: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02079213224351406
    2. '
' → logprob: -3.895792245864868
    3. '        
' → logprob: -8.895792007446289
    4. '<|end|>' → logprob: -10.645792007446289
    5. '    
' → logprob: -10.895792007446289
    6. ' 
' → logprob: -11.145792007446289
    7. '  
' → logprob: -11.270792007446289
    8. '           ' → logprob: -11.395792007446289
    9. '   ' → logprob: -12.145792007446289
    10. 'return' → logprob: -12.520792007446289

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003725495422258973
    2. 'return' → logprob: -5.628725528717041
    3. ' return' → logprob: -9.003725051879883
    4. '           ' → logprob: -14.878725051879883
    5. '   ' → logprob: -15.128725051879883
    6. '
' → logprob: -15.128725051879883
    7. '	return' → logprob: -15.253725051879883
    8. '[' → logprob: -15.503725051879883
    9. '        
' → logprob: -15.878725051879883
    10. '{return' → logprob: -16.003725051879883

Token 810: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02980869635939598
    2. ' return' → logprob: -3.779808759689331
    3. '       ' → logprob: -5.029808521270752
    4. 'result' → logprob: -14.02980899810791
    5. '{return' → logprob: -14.77980899810791
    6. '```' → logprob: -15.52980899810791
    7. '	return' → logprob: -15.77980899810791
    8. ':return' → logprob: -17.279808044433594
    9. '   ' → logprob: -17.654808044433594
    10. '
' → logprob: -17.654808044433594

Token 811: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -17.126502990722656
    4. '[self' → logprob: -18.876502990722656
    5. '   ' → logprob: -19.876502990722656
    6. '	self' → logprob: -20.001502990722656
    7. 'op' → logprob: -20.626502990722656
    8. '```' → logprob: -20.876502990722656
    9. '
' → logprob: -21.626502990722656
    10. ' ' → logprob: -21.751502990722656

Token 812: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.011276526376605034
    2. 'op' → logprob: -4.511276721954346
    3. '_op' → logprob: -8.886276245117188
    4. '._' → logprob: -9.761276245117188
    5. '_.' → logprob: -11.386276245117188
    6. '.' → logprob: -12.136276245117188
    7. '	op' → logprob: -12.636276245117188
    8. '.o' → logprob: -13.011276245117188
    9. ' op' → logprob: -13.011276245117188
    10. 'user' → logprob: -14.011276245117188

Token 813: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.3856492842023727e-06
    2. 'res' → logprob: -13.750000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' (' → logprob: -18.875001907348633
    5. ',res' → logprob: -19.375001907348633
    6. '(
' → logprob: -20.500001907348633
    7. '((' → logprob: -20.750001907348633
    8. ' res' → logprob: -20.750001907348633
    9. '(result' → logprob: -21.125001907348633
    10. '	res' → logprob: -21.375001907348633

Token 814: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -16.125
    3. '_r' → logprob: -19.375
    4. '\' → logprob: -19.75
    5. '_left' → logprob: -20.125
    6. '_lr' → logprob: -21.125
    7. 'L' → logprob: -21.625
    8. '(_' → logprob: -21.625
    9. '```' → logprob: -21.75
    10. '_' → logprob: -22.0

Token 815: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011936791706830263
    2. 'res' → logprob: -7.376193523406982
    3. ',res' → logprob: -7.501193523406982
    4. '(res' → logprob: -11.25119400024414
    5. ' ,' → logprob: -13.50119400024414
    6. ',
' → logprob: -16.62619400024414
    7. ' res' → logprob: -17.12619400024414
    8. '(' → logprob: -17.12619400024414
    9. '_,' → logprob: -18.25119400024414
    10. ')' → logprob: -19.25119400024414

Token 816: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.941850526549388e-06
    2. ' res' → logprob: -11.750007629394531
    3. '(res' → logprob: -22.25000762939453
    4. '	res' → logprob: -24.25000762939453
    5. '$res' → logprob: -24.75000762939453
    6. '_res' → logprob: -25.12500762939453
    7. '
' → logprob: -25.75000762939453
    8. '   ' → logprob: -26.25000762939453
    9. 'resi' → logprob: -26.25000762939453
    10. 'r' → logprob: -26.75000762939453

Token 817: '_r' (ID: 3442)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6036204099655151
    2. '_r' → logprob: -0.8536204099655151
    3. 'res' → logprob: -3.6036205291748047
    4. ' res' → logprob: -10.478620529174805
    5. 's' → logprob: -11.103620529174805
    6. '(res' → logprob: -11.353620529174805
    7. '	res' → logprob: -12.478620529174805
    8. '_res' → logprob: -12.603620529174805
    9. 't' → logprob: -12.853620529174805
    10. '	r' → logprob: -13.103620529174805

Token 818: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. ')`' → logprob: -18.0
    7. '(' → logprob: -18.25
    8. ')return' → logprob: -18.25
    9. '())' → logprob: -18.75
    10. ')#' → logprob: -19.375

Token 819: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: ' ---' (ID: 26691)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: ' Main' (ID: 7956)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' Program' (ID: 7335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10495075583457947
    2. 'if' → logprob: -2.8549506664276123
    3. 'class' → logprob: -3.8549506664276123
    4. '()' → logprob: -4.604950904846191
    5. 'import' → logprob: -5.604950904846191
    6. '#' → logprob: -5.979950904846191
    7. 'n' → logprob: -6.729950904846191
    8. '```' → logprob: -7.104950904846191
    9. 'code' → logprob: -7.479950904846191
    10. '<|end|>' → logprob: -7.979950904846191

Token 823: ' Logic' (ID: 61151)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2345844507217407
    2. 'if' → logprob: -1.3595844507217407
    3. 'def' → logprob: -1.4845844507217407
    4. 'n' → logprob: -1.7345844507217407
    5. '#' → logprob: -3.484584331512451
    6. '<|end|>' → logprob: -4.609584331512451
    7. 'class' → logprob: -5.484584331512451
    8. '```' → logprob: -5.984584331512451
    9. ' if' → logprob: -7.484584331512451
    10. '<|end|>' → logprob: -7.859584331512451

Token 824: ' --' (ID: 2230)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1273330450057983
    2. 'import' → logprob: -1.5023330450057983
    3. '<|end|>' → logprob: -1.7523330450057983
    4. '#' → logprob: -2.127333164215088
    5. 'n' → logprob: -2.377333164215088
    6. 'if' → logprob: -3.627333164215088
    7. '```' → logprob: -4.002333164215088
    8. 'class' → logprob: -4.127333164215088
    9. '
' → logprob: -5.627333164215088
    10. '<|end|>' → logprob: -6.377333164215088

Token 825: '-

' (ID: 16364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7062584161758423
    2. '<|end|>' → logprob: -1.8312584161758423
    3. 'def' → logprob: -2.2062582969665527
    4. '#' → logprob: -2.3312582969665527
    5. 'n' → logprob: -2.7062582969665527
    6. '
' → logprob: -2.9562582969665527
    7. '```' → logprob: -4.706258296966553
    8. 'if' → logprob: -5.456258296966553
    9. 'class' → logprob: -5.706258296966553
    10. ' ' → logprob: -6.706258296966553

Token 826: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5850734710693359
    2. 'import' → logprob: -1.210073471069336
    3. 'def' → logprob: -2.085073471069336
    4. '#' → logprob: -4.085073471069336
    5. 'class' → logprob: -6.210073471069336
    6. '```' → logprob: -7.335073471069336
    7. 'from' → logprob: -7.585073471069336
    8. ' n' → logprob: -8.835073471069336
    9. 'input' → logprob: -9.585073471069336
    10. 'if' → logprob: -9.835073471069336

Token 827: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23921436071395874
    2. 'import' → logprob: -1.6142144203186035
    3. 'def' → logprob: -4.7392144203186035
    4. '#' → logprob: -5.9892144203186035
    5. 'from' → logprob: -6.2392144203186035
    6. 'N' → logprob: -8.364213943481445
    7. 'class' → logprob: -9.239213943481445
    8. '```' → logprob: -9.864213943481445
    9. ' n' → logprob: -10.239213943481445
    10. 'size' → logprob: -10.364213943481445

Token 828: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46512600779533386
    2. 'import' → logprob: -1.4651260375976562
    3. ' n' → logprob: -1.9651260375976562
    4. ' import' → logprob: -7.590126037597656
    5. 'N' → logprob: -9.340126037597656
    6. 'int' → logprob: -9.965126037597656
    7. 'input' → logprob: -10.340126037597656
    8. '```' → logprob: -10.340126037597656
    9. ' input' → logprob: -10.840126037597656
    10. '(n' → logprob: -11.340126037597656

Token 829: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06092086434364319
    2. 'import' → logprob: -3.1859209537506104
    3. ' n' → logprob: -4.560920715332031
    4. 'N' → logprob: -5.435920715332031
    5. 'input' → logprob: -7.185920715332031
    6. 'number' → logprob: -7.310920715332031
    7. 'Q' → logprob: -7.435920715332031
    8. 'int' → logprob: -7.810920715332031
    9. ' input' → logprob: -8.935920715332031
    10. ' number' → logprob: -8.935920715332031

Token 830: ':' (ID: 25)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012165471911430359
    2. 'import' → logprob: -4.887165546417236
    3. '```' → logprob: -6.012165546417236
    4. 'N' → logprob: -6.762165546417236
    5. '()' → logprob: -7.387165546417236
    6. '(' → logprob: -8.887165069580078
    7. '(n' → logprob: -9.387165069580078
    8. 'q' → logprob: -10.512165069580078
    9. ' n' → logprob: -10.762165069580078
    10. '(
' → logprob: -10.887165069580078

Token 831: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08452511578798294
    2. 'N' → logprob: -3.0845251083374023
    3. 'import' → logprob: -3.8345251083374023
    4. ' n' → logprob: -4.334525108337402
    5. ' N' → logprob: -8.084525108337402
    6. ' import' → logprob: -8.834525108337402
    7. 'Q' → logprob: -9.584525108337402
    8. '```' → logprob: -10.084525108337402
    9. 'q' → logprob: -11.459525108337402
    10. ' Q' → logprob: -12.834525108337402

Token 832: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6429968476295471
    2. '=' → logprob: -0.7679968476295471
    3. ',' → logprob: -4.642996788024902
    4. 'n' → logprob: -8.267996788024902
    5. ',n' → logprob: -8.642996788024902
    6. '=n' → logprob: -8.892996788024902
    7. '=int' → logprob: -9.267996788024902
    8. '```' → logprob: -11.017996788024902
    9. '=input' → logprob: -11.392996788024902
    10. '=
' → logprob: -12.142996788024902

Token 833: ' length' (ID: 5517)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6487907767295837
    2. 'q' → logprob: -1.3987908363342285
    3. ',q' → logprob: -1.7737908363342285
    4. ',Q' → logprob: -3.6487908363342285
    5. ' q' → logprob: -4.5237908363342285
    6. 'm' → logprob: -4.8987908363342285
    7. ',m' → logprob: -5.2737908363342285
    8. ',k' → logprob: -5.5237908363342285
    9. 'Q' → logprob: -5.7737908363342285
    10. 'k' → logprob: -6.6487908363342285

Token 834: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4270281493663788
    2. '=' → logprob: -1.6770281791687012
    3. ' =' → logprob: -1.9270281791687012
    4. '```' → logprob: -5.177028179168701
    5. 'n' → logprob: -5.552028179168701
    6. ',n' → logprob: -6.427028179168701
    7. '=int' → logprob: -6.802028179168701
    8. 's' → logprob: -7.427028179168701
    9. 'of' → logprob: -8.052027702331543
    10. '_' → logprob: -8.177027702331543

Token 835: ' string' (ID: 1621)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1875484585762024
    2. 'array' → logprob: -2.4375483989715576
    3. 'the' → logprob: -3.5625483989715576
    4. 's' → logprob: -3.8125483989715576
    5. 'a' → logprob: -5.062548637390137
    6. 'S' → logprob: -5.187548637390137
    7. 'string' → logprob: -5.437548637390137
    8. 'n' → logprob: -5.437548637390137
    9. '_' → logprob: -5.812548637390137
    10. 'arr' → logprob: -6.187548637390137

Token 836: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04721377417445183
    2. ',' → logprob: -3.7972137928009033
    3. ' =' → logprob: -4.672213554382324
    4. '
' → logprob: -5.047213554382324
    5. '=' → logprob: -5.297213554382324
    6. '```' → logprob: -6.672213554382324
    7. 's' → logprob: -7.172213554382324
    8. ',n' → logprob: -7.797213554382324
    9. 'import' → logprob: -8.672213554382324
    10. '=n' → logprob: -8.922213554382324

Token 837: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05561110004782677
    2. 'Q' → logprob: -3.1806111335754395
    3. 's' → logprob: -4.6806111335754395
    4. 'S' → logprob: -6.9306111335754395
    5. 'k' → logprob: -6.9306111335754395
    6. 'm' → logprob: -7.1806111335754395
    7. 'n' → logprob: -8.555610656738281
    8. 't' → logprob: -9.930610656738281
    9. 'query' → logprob: -10.180610656738281
    10. 'a' → logprob: -10.430610656738281

Token 838: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.559878945350647
    2. ' =' → logprob: -1.434878945350647
    3. ',' → logprob: -1.684878945350647
    4. ',k' → logprob: -5.684878826141357
    5. '=int' → logprob: -7.434878826141357
    6. ',q' → logprob: -7.684878826141357
    7. '=input' → logprob: -8.559879302978516
    8. ',m' → logprob: -9.184879302978516
    9. ',n' → logprob: -9.309879302978516
    10. ',s' → logprob: -9.309879302978516

Token 839: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024029269814491272
    2. 'q' → logprob: -3.77402925491333
    3. 'k' → logprob: -8.024029731750488
    4. 'queries' → logprob: -8.649029731750488
    5. 'm' → logprob: -9.149029731750488
    6. 'Q' → logprob: -10.149029731750488
    7. '...' → logprob: -10.274029731750488
    8. '[int' → logprob: -10.649029731750488
    9. ' int' → logprob: -10.899029731750488
    10. '(int' → logprob: -11.649029731750488

Token 840: ' jump' (ID: 13843)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7676207423210144
    2. '_length' → logprob: -1.1426208019256592
    3. ' length' → logprob: -3.142620801925659
    4. 'len' → logprob: -3.392620801925659
    5. 'value' → logprob: -3.517620801925659
    6. '_value' → logprob: -4.01762056350708
    7. '_query' → logprob: -4.26762056350708
    8. '_queries' → logprob: -4.26762056350708
    9. '_len' → logprob: -4.89262056350708
    10. '_operations' → logprob: -5.01762056350708

Token 841: ' size' (ID: 2349)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14859835803508759
    2. ' =' → logprob: -2.0235984325408936
    3. ',' → logprob: -5.5235981941223145
    4. 'n' → logprob: -6.7735981941223145
    5. 's' → logprob: -8.148598670959473
    6. ',n' → logprob: -8.898598670959473
    7. '=input' → logprob: -9.148598670959473
    8. '=int' → logprob: -9.898598670959473
    9. '=n' → logprob: -9.898598670959473
    10. '```' → logprob: -10.523598670959473

Token 842: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002831464516930282
    2. '
' → logprob: -9.250283241271973
    3. '```' → logprob: -9.250283241271973
    4. ',' → logprob: -10.250283241271973
    5. ',n' → logprob: -10.625283241271973
    6. 'import' → logprob: -11.250283241271973
    7. ' n' → logprob: -11.375283241271973
    8. '\n' → logprob: -12.875283241271973
    9. '(n' → logprob: -13.500283241271973
    10. '``' → logprob: -14.000283241271973

Token 843: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0445127372804563e-05
    2. 'import' → logprob: -11.87501049041748
    3. ' n' → logprob: -13.00001049041748
    4. '```' → logprob: -13.75001049041748
    5. '
' → logprob: -17.000009536743164
    6. ',n' → logprob: -18.750009536743164
    7. '	n' → logprob: -19.000009536743164
    8. '_n' → logprob: -19.250009536743164
    9. '\n' → logprob: -19.250009536743164
    10. '``' → logprob: -19.250009536743164

Token 844: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018232580623589456
    2. ',m' → logprob: -8.625182151794434
    3. ' ,' → logprob: -13.125182151794434
    4. '=' → logprob: -14.750182151794434
    5. ',
' → logprob: -15.250182151794434
    6. 'm' → logprob: -17.00018310546875
    7. ' =' → logprob: -17.62518310546875
    8. ',n' → logprob: -18.12518310546875
    9. ',input' → logprob: -18.12518310546875
    10. ',int' → logprob: -18.25018310546875

Token 845: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005233882926404476
    2. ' m' → logprob: -5.2552337646484375
    3. '_m' → logprob: -17.630233764648438
    4. 'M' → logprob: -18.005233764648438
    5. ' ' → logprob: -19.380233764648438
    6. '*m' → logprob: -19.630233764648438
    7. '	m' → logprob: -20.005233764648438
    8. ' ' → logprob: -20.130233764648438
    9. ',m' → logprob: -20.255233764648438
    10. '=' → logprob: -20.880233764648438

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002864662790670991
    2. ' =' → logprob: -5.877864837646484
    3. ',' → logprob: -10.252864837646484
    4. '=input' → logprob: -10.752864837646484
    5. '=int' → logprob: -12.752864837646484
    6. '=list' → logprob: -16.877864837646484
    7. '＝' → logprob: -17.252864837646484
    8. ')=' → logprob: -18.002864837646484
    9. 'input' → logprob: -18.127864837646484
    10. '=line' → logprob: -18.127864837646484

Token 847: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0031777136027812958
    2. ' map' → logprob: -5.753177642822266
    3. 'list' → logprob: -17.128177642822266
    4. '	map' → logprob: -17.878177642822266
    5. 'input' → logprob: -19.253177642822266
    6. '(map' → logprob: -19.378177642822266
    7. ' ' → logprob: -20.628177642822266
    8. '
' → logprob: -20.628177642822266
    9. '[' → logprob: -21.128177642822266
    10. 'm' → logprob: -21.378177642822266

Token 848: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009130131802521646
    2. 'int' → logprob: -7.000913143157959
    3. '(' → logprob: -14.6259126663208
    4. '(input' → logprob: -15.2509126663208
    5. '[int' → logprob: -15.5009126663208
    6. 'input' → logprob: -15.6259126663208
    7. '(str' → logprob: -15.7509126663208
    8. ' int' → logprob: -15.7509126663208
    9. '=int' → logprob: -15.8759126663208
    10. '<int' → logprob: -16.375913619995117

Token 849: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.04094660282135
    2. ',int' → logprob: -1.41594660282135
    3. 'int' → logprob: -1.79094660282135
    4. ',' → logprob: -2.4159464836120605
    5. 'input' → logprob: -2.5409464836120605
    6. ',input' → logprob: -2.9159464836120605
    7. '(input' → logprob: -4.5409464836120605
    8. '=int' → logprob: -7.0409464836120605
    9. '(' → logprob: -7.1659464836120605
    10. '```' → logprob: -7.5409464836120605

Token 850: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009850544156506658
    2. ' input' → logprob: -7.500985145568848
    3. 'int' → logprob: -7.750985145568848
    4. 'map' → logprob: -13.875985145568848
    5. 'str' → logprob: -14.250985145568848
    6. 'open' → logprob: -17.12598419189453
    7. ' int' → logprob: -17.87598419189453
    8. 'list' → logprob: -18.37598419189453
    9. '   ' → logprob: -18.87598419189453
    10. ' ' → logprob: -19.62598419189453

Token 851: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.56102097814437e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -16.125045776367188
    4. '(' → logprob: -17.875045776367188
    5. '()
' → logprob: -18.125045776367188
    6. '()[' → logprob: -18.250045776367188
    7. '())' → logprob: -18.375045776367188
    8. '().__' → logprob: -19.000045776367188
    9. '()?.' → logprob: -19.625045776367188
    10. '()]' → logprob: -19.875045776367188

Token 852: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.644463479053229e-05
    2. 'strip' → logprob: -10.000046730041504
    3. '(split' → logprob: -14.500046730041504
    4. ' split' → logprob: -15.875046730041504
    5. 'rstrip' → logprob: -15.875046730041504
    6. 'spl' → logprob: -16.250045776367188
    7. '().' → logprob: -16.375045776367188
    8. 'read' → logprob: -17.875045776367188
    9. '.split' → logprob: -19.125045776367188
    10. '()' → logprob: -19.125045776367188

Token 853: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03590201586484909
    2. ')' → logprob: -3.6609020233154297
    3. '()' → logprob: -4.66090202331543
    4. '(),' → logprob: -10.03590202331543
    5. '(' → logprob: -10.16090202331543
    6. '())
' → logprob: -11.66090202331543
    7. '(','' → logprob: -13.28590202331543
    8. '());' → logprob: -13.66090202331543
    9. '().' → logprob: -13.91090202331543
    10. ' ())' → logprob: -14.16090202331543

Token 854: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03847334906458855
    2. 'S' → logprob: -3.28847336769104
    3. 'a' → logprob: -9.038473129272461
    4. 'steps' → logprob: -10.038473129272461
    5. '
' → logprob: -10.288473129272461
    6. 'h' → logprob: -10.413473129272461
    7. 'dp' → logprob: -10.663473129272461
    8. 'A' → logprob: -11.288473129272461
    9. 'string' → logprob: -11.288473129272461
    10. 'x' → logprob: -11.288473129272461

Token 855: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868732452392578
    2. '=' → logprob: -1.1368732452392578
    3. '=input' → logprob: -13.511873245239258
    4. 's' → logprob: -14.886873245239258
    5. ' ' → logprob: -14.886873245239258
    6. '_' → logprob: -17.136873245239258
    7. 'input' → logprob: -17.261873245239258
    8. ' ' → logprob: -17.761873245239258
    9. '=s' → logprob: -17.761873245239258
    10. '=int' → logprob: -17.761873245239258

Token 856: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.135819760151207e-05
    2. ' input' → logprob: -9.75007152557373
    3. 'list' → logprob: -11.25007152557373
    4. 'str' → logprob: -17.875070571899414
    5. '<input' → logprob: -19.750070571899414
    6. ' list' → logprob: -20.250070571899414
    7. '(input' → logprob: -20.250070571899414
    8. '=input' → logprob: -20.875070571899414
    9. '[input' → logprob: -21.125070571899414
    10. '	input' → logprob: -21.875070571899414

Token 857: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018983196059707552
    2. '().' → logprob: -8.625189781188965
    3. '()
' → logprob: -12.625189781188965
    4. '())' → logprob: -12.875189781188965
    5. '(' → logprob: -13.625189781188965
    6. ' ()' → logprob: -13.875189781188965
    7. '_' → logprob: -15.000189781188965
    8. ')' → logprob: -15.125189781188965
    9. '_str' → logprob: -15.375189781188965
    10. '()`' → logprob: -15.375189781188965

Token 858: '                        ' (ID: 10406)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03025718778371811
    2. 'INF' → logprob: -3.655257225036621
    3. 'dist' → logprob: -6.030257225036621
    4. '#' → logprob: -7.405257225036621
    5. 'from' → logprob: -7.530257225036621
    6. 'inf' → logprob: -8.405257225036621
    7. 'DP' → logprob: -10.405257225036621
    8. 'd' → logprob: -10.655257225036621
    9. 'import' → logprob: -10.905257225036621
    10. 'can' → logprob: -10.905257225036621

Token 859: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05628754943609238
    2. 'INF' → logprob: -3.0562875270843506
    3. 'dist' → logprob: -5.30628776550293
    4. '#' (adapté à ' #') → logprob: -6.93128776550293
    5. 'inf' → logprob: -7.30628776550293
    6. 'seg' → logprob: -8.30628776550293
    7. 'from' → logprob: -8.43128776550293
    8. 'DP' → logprob: -9.43128776550293
    9. 'cost' → logprob: -9.68128776550293
    10. 'segment' → logprob: -9.68128776550293

Token 860: ' Input' (ID: 10090)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08470684289932251
    2. 'list' → logprob: -2.7097067832946777
    3. 's' → logprob: -4.334706783294678
    4. '"#' → logprob: -7.834706783294678
    5. '[input' → logprob: -8.084707260131836
    6. '"."' → logprob: -8.459707260131836
    7. '"' → logprob: -8.459707260131836
    8. ' input' → logprob: -9.334707260131836
    9. '[' → logprob: -9.834707260131836
    10. '""' → logprob: -10.209707260131836

Token 861: ' string' (ID: 1621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07324916124343872
    2. 's' → logprob: -3.323249101638794
    3. 'string' → logprob: -4.198249340057373
    4. '_string' → logprob: -5.698249340057373
    5. '_s' → logprob: -5.823249340057373
    6. '())' → logprob: -6.198249340057373
    7. '()
' → logprob: -6.448249340057373
    8. '().' → logprob: -6.573249340057373
    9. '#' → logprob: -6.698249340057373
    10. 'dp' → logprob: -6.823249340057373

Token 862: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013940421864390373
    2. 'INF' → logprob: -4.763940334320068
    3. 'dist' → logprob: -5.638940334320068
    4. 'from' → logprob: -7.388940334320068
    5. '#' → logprob: -8.263940811157227
    6. 'seg' → logprob: -8.388940811157227
    7. 'inf' → logprob: -8.763940811157227
    8. 'can' → logprob: -8.888940811157227
    9. 'cost' → logprob: -9.763940811157227
    10. 'd' → logprob: -10.138940811157227

Token 863: 'INF' (ID: 64358)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008597081527113914
    2. 'INF' → logprob: -5.383596897125244
    3. 'dist' → logprob: -6.008596897125244
    4. 'from' → logprob: -6.883596897125244
    5. '#' → logprob: -8.508597373962402
    6. 'inf' → logprob: -8.758597373962402
    7. 'can' → logprob: -10.133597373962402
    8. 'import' → logprob: -10.758597373962402
    9. 'DP' → logprob: -11.383597373962402
    10. 'seg' → logprob: -11.633597373962402

Token 864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692853808403015
    2. '=' → logprob: -2.1269285678863525
    3. '=int' → logprob: -15.376928329467773
    4. '＝' → logprob: -16.626928329467773
    5. ',' → logprob: -17.251928329467773
    6. ' ' → logprob: -17.751928329467773
    7. '	' → logprob: -18.001928329467773
    8. ')' → logprob: -18.376928329467773
    9. ' ' → logprob: -18.376928329467773
    10. '   ' → logprob: -18.501928329467773

Token 865: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.87501335144043
    3. 'float' → logprob: -12.37501335144043
    4. 'int' → logprob: -13.25001335144043
    5. '1' → logprob: -14.75001335144043
    6. 'n' → logprob: -16.00001335144043
    7. '100' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.37501335144043
    9. '(' → logprob: -17.62501335144043
    10. '  ' → logprob: -19.25001335144043

Token 866: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002116462419508025
    2. 'float' → logprob: -8.625211715698242
    3. 'int' → logprob: -10.625211715698242
    4. '1' → logprob: -11.875211715698242
    5. ' ' → logprob: -15.000211715698242
    6. '100' → logprob: -15.625211715698242
    7. '(' → logprob: -15.625211715698242
    8. '2' → logprob: -17.375211715698242
    9. 'n' → logprob: -17.500211715698242
    10. 'pow' → logprob: -17.875211715698242

Token 867: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.00023774817236699164
    2. '15' → logprob: -8.750237464904785
    3. '9' → logprob: -10.125237464904785
    4. '**' → logprob: -11.000237464904785
    5. '19' → logprob: -11.000237464904785
    6. '10' → logprob: -12.250237464904785
    7. '12' → logprob: -15.000237464904785
    8. '```' → logprob: -15.375237464904785
    9. '16' → logprob: -15.625237464904785
    10. '20' → logprob: -15.875237464904785

Token 868: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.17644396424293518
    2. '9' → logprob: -2.3014440536499023
    3. '15' → logprob: -2.8014440536499023
    4. '10' → logprob: -7.176444053649902
    5. '12' → logprob: -9.551444053649902
    6. '16' → logprob: -10.301444053649902
    7. '14' → logprob: -11.301444053649902
    8. '17' → logprob: -11.301444053649902
    9. '13' → logprob: -11.551444053649902
    10. '19' → logprob: -11.801444053649902

Token 869: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.14418944716453552
    2. '9' → logprob: -2.6441893577575684
    3. '15' → logprob: -2.7691893577575684
    4. '10' → logprob: -7.894189357757568
    5. '12' → logprob: -9.519189834594727
    6. '16' → logprob: -10.769189834594727
    7. '14' → logprob: -11.644189834594727
    8. '13' → logprob: -11.894189834594727
    9. '17' → logprob: -11.894189834594727
    10. '19' → logprob: -12.519189834594727

Token 870: '                    ' (ID: 7692)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23005390167236328
    2. 'dist' → logprob: -1.6050539016723633
    3. 'cost' → logprob: -6.105053901672363
    4. '
' → logprob: -6.355053901672363
    5. 'distance' → logprob: -7.605053901672363
    6. '#' → logprob: -10.480053901672363
    7. 'steps' → logprob: -10.480053901672363
    8. ' dp' → logprob: -10.605053901672363
    9. 'd' → logprob: -10.855053901672363
    10. 'DP' → logprob: -10.980053901672363

Token 871: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14703887701034546
    2. 'dist' → logprob: -2.1470389366149902
    3. '
' → logprob: -4.02203893661499
    4. 'cost' → logprob: -6.77203893661499
    5. 'distance' → logprob: -7.39703893661499
    6. 'steps' → logprob: -9.772038459777832
    7. 'DP' → logprob: -9.897038459777832
    8. 'ans' → logprob: -10.522038459777832
    9. 'answer' → logprob: -10.647038459777832
    10. '
' → logprob: -10.647038459777832

Token 872: ' A' (ID: 355)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.076724648475647
    2. 'Segment' → logprob: -1.326724648475647
    3. 'segment' → logprob: -1.326724648475647
    4. 'dist' → logprob: -3.2017245292663574
    5. 'INF' → logprob: -3.5767245292663574
    6. 'from' → logprob: -3.9517245292663574
    7. 'dp' → logprob: -4.076724529266357
    8. 'inf' → logprob: -4.451724529266357
    9. 'ans' → logprob: -5.576724529266357
    10. 'tree' → logprob: -6.076724529266357

Token 873: ' large' (ID: 4410)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.4437960982322693
    2. ' large' → logprob: -1.818796157836914
    3. '
' → logprob: -2.443796157836914
    4. 's' → logprob: -2.818796157836914
    5. '<|end|>' → logprob: -4.193796157836914
    6. 'big' → logprob: -5.068796157836914
    7. 'INF' → logprob: -5.818796157836914
    8. 'int' → logprob: -5.943796157836914
    9. ' =' → logprob: -6.068796157836914
    10. 'n' → logprob: -6.193796157836914

Token 874: ' constant' (ID: 9594)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.13066762685775757
    2. 'value' → logprob: -2.1306676864624023
    3. 'integer' → logprob: -5.755667686462402
    4. ' number' → logprob: -8.255667686462402
    5. 'constant' → logprob: -8.255667686462402
    6. ' value' → logprob: -11.380667686462402
    7. 'INF' → logprob: -11.380667686462402
    8. 'int' → logprob: -12.005667686462402
    9. 'num' → logprob: -12.755667686462402
    10. 'distance' → logprob: -12.755667686462402

Token 875: ' representing' (ID: 25389)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.035421404987573624
    2. 'dist' → logprob: -3.410421371459961
    3. 'cost' → logprob: -6.660421371459961
    4. '#' → logprob: -8.285421371459961
    5. 'from' → logprob: -9.285421371459961
    6. '
' → logprob: -10.535421371459961
    7. 'distance' → logprob: -10.660421371459961
    8. 'd' → logprob: -10.910421371459961
    9. 'ans' → logprob: -10.910421371459961
    10. 'steps' → logprob: -11.035421371459961

Token 876: ' infinity' (ID: 103156)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06156928092241287
    2. 'float' → logprob: -3.3115692138671875
    3. '10' → logprob: -3.8115692138671875
    4. 'inf' → logprob: -6.8115692138671875
    5. '999' → logprob: -11.061569213867188
    6. 'int' → logprob: -11.561569213867188
    7. 'IN' → logprob: -12.686569213867188
    8. '100' → logprob: -12.936569213867188
    9. '1' → logprob: -13.061569213867188
    10. ' INF' → logprob: -13.436569213867188

Token 877: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02499534748494625
    2. 'dist' → logprob: -3.7749953269958496
    3. 'from' → logprob: -7.39999532699585
    4. 'cost' → logprob: -7.39999532699585
    5. '#' → logprob: -8.399995803833008
    6. 'seg' → logprob: -8.524995803833008
    7. 'segment' → logprob: -10.649995803833008
    8. 'd' → logprob: -10.899995803833008
    9. 'distance' → logprob: -11.149995803833008
    10. 'ans' → logprob: -11.774995803833008

Token 878: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036228811368346214
    2. 'dist' → logprob: -6.128623008728027
    3. 'seg' → logprob: -6.878623008728027
    4. 'st' → logprob: -8.503623008728027
    5. 'from' → logprob: -9.503623008728027
    6. 'cost' → logprob: -9.753623008728027
    7. 'segment' → logprob: -10.253623008728027
    8. 'tree' → logprob: -11.253623008728027
    9. '#' → logprob: -11.378623008728027
    10. 'dt' → logprob: -12.253623008728027

Token 879: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029985351487994194
    2. 'seg' → logprob: -4.404985427856445
    3. '#' → logprob: -5.029985427856445
    4. 'dist' → logprob: -5.279985427856445
    5. 'st' → logprob: -5.904985427856445
    6. 'from' → logprob: -6.779985427856445
    7. 'segment' → logprob: -7.029985427856445
    8. 'cost' → logprob: -8.029985427856445
    9. 'tree' → logprob: -8.154985427856445
    10. 'dt' → logprob: -9.154985427856445

Token 880: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09111994504928589
    2. 'seg' → logprob: -2.5911200046539307
    3. 'st' → logprob: -4.841119766235352
    4. 'dist' → logprob: -5.841119766235352
    5. 'segment' → logprob: -6.841119766235352
    6. 'Segment' → logprob: -8.716119766235352
    7. 'tree' → logprob: -9.841119766235352
    8. 'sg' → logprob: -10.466119766235352
    9. 'cost' → logprob: -11.091119766235352
    10. 'se' → logprob: -12.091119766235352

Token 881: ' segment' (ID: 14806)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14753775298595428
    2. 'seg' → logprob: -2.1475377082824707
    3. 'Segment' → logprob: -4.397537708282471
    4. 'st' → logprob: -5.272537708282471
    5. 'dist' → logprob: -6.022537708282471
    6. 'segment' → logprob: -8.022538185119629
    7. 'tree' → logprob: -9.647538185119629
    8. 'sg' → logprob: -10.022538185119629
    9. '#' → logprob: -10.272538185119629
    10. 'Seg' → logprob: -10.772538185119629

Token 882: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.016445929184556007
    2. '_tree' → logprob: -4.266446113586426
    3. 'Tree' → logprob: -6.266446113586426
    4. ' tree' → logprob: -8.016446113586426
    5. '=' → logprob: -10.016446113586426
    6. ' =' → logprob: -12.766446113586426
    7. 'ree' → logprob: -13.391446113586426
    8. 'trees' → logprob: -14.891446113586426
    9. '-tree' → logprob: -15.016446113586426
    10. 'TREE' → logprob: -15.141446113586426

Token 883: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.117568850517273
    2. 'seg' → logprob: -1.242568850517273
    3. 'Segment' → logprob: -1.367568850517273
    4. 'st' → logprob: -2.2425689697265625
    5. 'tree' → logprob: -4.1175689697265625
    6. 'segment' → logprob: -5.7425689697265625
    7. 'sg' → logprob: -6.4925689697265625
    8. 'Seg' → logprob: -6.9925689697265625
    9. 'ST' → logprob: -7.7425689697265625
    10. 'dist' → logprob: -8.492568969726562

Token 884: ' min' (ID: 1349)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.023734193295240402
    2. 'min' → logprob: -4.023734092712402
    3. 'int' → logprob: -5.398734092712402
    4. ' Segment' → logprob: -8.023734092712402
    5. 'lambda' → logprob: -8.148734092712402
    6. 'range' → logprob: -8.398734092712402
    7. 'sum' → logprob: -9.023734092712402
    8. 'cost' → logprob: -10.773734092712402
    9. 'float' → logprob: -11.023734092712402
    10. 'dp' → logprob: -11.273734092712402

Token 885: ' range' (ID: 3352)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1262365579605103
    2. ' =' → logprob: -1.8762365579605103
    3. 'imum' → logprob: -1.8762365579605103
    4. 'query' → logprob: -2.7512364387512207
    5. 'range' → logprob: -2.8762364387512207
    6. 'Segment' → logprob: -3.0012364387512207
    7. '_segment' → logprob: -3.5012364387512207
    8. '_cost' → logprob: -4.001236438751221
    9. '=' → logprob: -4.001236438751221
    10. 'dp' → logprob: -4.126236438751221

Token 886: ' queries' (ID: 32122)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7452296018600464
    2. ' =' → logprob: -1.2452296018600464
    3. 'query' → logprob: -2.620229721069336
    4. '=' → logprob: -3.245229721069336
    5. '_query' → logprob: -3.370229721069336
    6. 'm' → logprob: -3.370229721069336
    7. 'queries' → logprob: -4.245229721069336
    8. '(' → logprob: -5.245229721069336
    9. 'tree' → logprob: -5.245229721069336
    10. 'n' → logprob: -5.620229721069336

Token 887: ' with' (ID: 483)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.17790116369724274
    2. 'dp' → logprob: -2.302901268005371
    3. 'st' → logprob: -2.927901268005371
    4. 'segment' → logprob: -5.552901268005371
    5. 'Segment' → logprob: -5.802901268005371
    6. ' seg' → logprob: -6.802901268005371
    7. 'tree' → logprob: -6.927901268005371
    8. 'sg' → logprob: -8.927901268005371
    9. 'Seg' → logprob: -9.427901268005371
    10. 'ST' → logprob: -9.552901268005371

Token 888: ' indices' (ID: 30378)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.2523537576198578
    2. 'Segment' → logprob: -2.0023536682128906
    3. 'lambda' → logprob: -2.7523536682128906
    4. 'n' → logprob: -4.627353668212891
    5. 'm' → logprob: -5.127353668212891
    6. 'size' → logprob: -6.252353668212891
    7. 'float' → logprob: -6.502353668212891
    8. 'inf' → logprob: -6.627353668212891
    9. 'cost' → logprob: -7.252353668212891
    10. '```' → logprob: -7.502353668212891

Token 889: ' [' (ID: 723)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.07154779881238937
    2. ' =' → logprob: -3.946547746658325
    3. 'segment' → logprob: -3.946547746658325
    4. 'seg' → logprob: -4.821547985076904
    5. 'st' → logprob: -5.446547985076904
    6. '(S' → logprob: -5.696547985076904
    7. '(n' → logprob: -5.821547985076904
    8. '_segment' → logprob: -5.946547985076904
    9. ' Segment' → logprob: -6.446547985076904
    10. '=' → logprob: -6.446547985076904

Token 890: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1983068883419037
    2. 'n' → logprob: -1.823306918144226
    3. 'range' → logprob: -4.698307037353516
    4. '1' → logprob: -5.323307037353516
    5. ']' → logprob: -6.198307037353516
    6. 'm' → logprob: -7.448307037353516
    7. '(n' → logprob: -8.323307037353516
    8. 'i' → logprob: -8.448307037353516
    9. ')' → logprob: -8.698307037353516
    10. 'dp' → logprob: -9.073307037353516

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003602798329666257
    2. ',n' → logprob: -6.628602981567383
    3. ' ,' → logprob: -6.753602981567383
    4. ']' → logprob: -7.253602981567383
    5. 'n' → logprob: -8.503602981567383
    6. ',
' → logprob: -9.378602981567383
    7. '...' → logprob: -10.378602981567383
    8. ' n' → logprob: -10.878602981567383
    9. '=' → logprob: -11.378602981567383
    10. '```' → logprob: -11.628602981567383

Token 892: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013440960901789367
    2. ' n' → logprob: -9.375134468078613
    3. 'm' → logprob: -10.000134468078613
    4. '10' → logprob: -13.750134468078613
    5. '100' → logprob: -14.125134468078613
    6. ')n' → logprob: -14.875134468078613
    7. '0' → logprob: -15.000134468078613
    8. ']' → logprob: -15.750134468078613
    9. '...' → logprob: -15.875134468078613
    10. '_n' → logprob: -16.000133514404297

Token 893: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17078323662281036
    2. '+' → logprob: -2.045783281326294
    3. ']
' → logprob: -4.170783042907715
    4. ')' → logprob: -4.920783042907715
    5. ' +' → logprob: -6.545783042907715
    6. '-' → logprob: -6.795783042907715
    7. ')
' → logprob: -7.170783042907715
    8. ',' → logprob: -7.295783042907715
    9. '+n' → logprob: -7.670783042907715
    10. 'n' → logprob: -8.545783042907715

Token 894: 'st' (ID: 302)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.33545631170272827
    2. 'st' → logprob: -1.585456371307373
    3. 'dp' → logprob: -2.585456371307373
    4. 'Segment' → logprob: -6.335456371307373
    5. 'segment' → logprob: -6.460456371307373
    6. 'tree' → logprob: -7.085456371307373
    7. 'sg' → logprob: -7.960456371307373
    8. ' seg' → logprob: -9.460455894470215
    9. 'Seg' → logprob: -9.585455894470215
    10. 'dist' → logprob: -10.585455894470215

Token 895: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.724077224731445
    4. '(' → logprob: -16.349077224731445
    5. '=
' → logprob: -16.974077224731445
    6. ')' → logprob: -17.599077224731445
    7. '.' → logprob: -17.849077224731445
    8. '＝' → logprob: -18.099077224731445
    9. ',' → logprob: -18.349077224731445
    10. ' =
' → logprob: -18.536577224731445

Token 896: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.676292231422849e-05
    2. ' Segment' → logprob: -11.000017166137695
    3. 'Seg' → logprob: -21.000017166137695
    4. 'class' → logprob: -22.500017166137695
    5. 'Class' → logprob: -22.500017166137695
    6. '   ' → logprob: -23.000017166137695
    7. 'segment' → logprob: -23.125017166137695
    8. '_segment' → logprob: -24.125017166137695
    9. 'Segments' → logprob: -24.500017166137695
    10. '  ' → logprob: -25.250017166137695

Token 897: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.5048530030981055e-06
    2. '	Tree' → logprob: -14.500001907348633
    3. ' Tree' → logprob: -14.625001907348633
    4. '<Tree' → logprob: -15.625001907348633
    5. 'ree' → logprob: -15.750001907348633
    6. 'tree' → logprob: -16.500001907348633
    7. '_tree' → logprob: -16.625001907348633
    8. '_TREE' → logprob: -18.000001907348633
    9. '(Tree' → logprob: -18.000001907348633
    10. '.Tree' → logprob: -18.625001907348633

Token 898: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3874055743217468
    2. 'n' → logprob: -1.1374056339263916
    3. '(' → logprob: -7.8874053955078125
    4. '(m' → logprob: -9.387405395507812
    5. 'm' → logprob: -9.887405395507812
    6. ' n' → logprob: -11.012405395507812
    7. '(
' → logprob: -13.387405395507812
    8. ' (' → logprob: -13.637405395507812
    9. '1' → logprob: -14.137405395507812
    10. '((' → logprob: -14.262405395507812

Token 899: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0658600926399231
    2. ' +' → logprob: -2.8158600330352783
    3. ',' → logprob: -5.565860271453857
    4. '+m' → logprob: -11.1908597946167
    5. ' ,' → logprob: -11.6908597946167
    6. '=' → logprob: -11.8158597946167
    7. '+,' → logprob: -11.8158597946167
    8. '+
' → logprob: -12.1908597946167
    9. ',
' → logprob: -12.3158597946167
    10. 'm' → logprob: -12.9408597946167

Token 900: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'm' → logprob: -14.875001907348633
    4. '2' → logprob: -16.250001907348633
    5. '
' → logprob: -18.250001907348633
    6. '10' → logprob: -18.687501907348633
    7. '   ' → logprob: -18.687501907348633
    8. '0' → logprob: -19.000001907348633
    9. '```' → logprob: -19.250001907348633
    10. '100' → logprob: -19.312501907348633

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. 'm' → logprob: -11.000018119812012
    3. '2' → logprob: -14.625018119812012
    4. ' ' → logprob: -14.750018119812012
    5. '0' → logprob: -16.000019073486328
    6. '
' → logprob: -16.500019073486328
    7. '10' → logprob: -16.875019073486328
    8. '100' → logprob: -17.125019073486328
    9. 'n' → logprob: -17.312519073486328
    10. '3' → logprob: -17.562519073486328

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002920830447692424
    2. ',min' → logprob: -8.62529182434082
    3. ' ,' → logprob: -9.12529182434082
    4. 'min' → logprob: -13.12529182434082
    5. '   ' → logprob: -14.12529182434082
    6. ')' → logprob: -16.00029182434082
    7. ',
' → logprob: -16.25029182434082
    8. ' min' → logprob: -16.25029182434082
    9. ',max' → logprob: -16.37529182434082
    10. ',m' → logprob: -16.37529182434082

Token 903: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024758970830589533
    2. 'lambda' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.12747573852539
    4. ' min' → logprob: -16.37747573852539
    5. '
' → logprob: -16.87747573852539
    6. ' lambda' → logprob: -19.25247573852539
    7. 'minimum' → logprob: -19.25247573852539
    8. '(min' → logprob: -19.62747573852539
    9. '	min' → logprob: -19.75247573852539
    10. '```' → logprob: -20.50247573852539

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014585316239390522
    2. ' ,' → logprob: -8.87514591217041
    3. ',
' → logprob: -12.62514591217041
    4. ',int' → logprob: -14.75014591217041
    5. ',n' → logprob: -15.00014591217041
    6. ',",' → logprob: -15.50014591217041
    7. ',None' → logprob: -15.75014591217041
    8. ')' → logprob: -15.87514591217041
    9. '`,' → logprob: -15.87514591217041
    10. ',min' → logprob: -15.87514591217041

Token 905: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -7.584239938296378e-06
    2. '0' → logprob: -12.375007629394531
    3. '10' → logprob: -12.875007629394531
    4. ' INF' → logprob: -14.625007629394531
    5. 'IN' → logprob: -16.25000762939453
    6. 'inf' → logprob: -16.25000762939453
    7. '_INF' → logprob: -16.25000762939453
    8. '999' → logprob: -17.37500762939453
    9. '100' → logprob: -17.37500762939453
    10. 'n' → logprob: -18.25000762939453

Token 906: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005570820067077875
    2. ')
' → logprob: -7.500556945800781
    3. ' )' → logprob: -12.750556945800781
    4. ')
' → logprob: -14.000556945800781
    5. ')

' → logprob: -16.00055694580078
    6. ')#' → logprob: -17.00055694580078
    7. ')`' → logprob: -17.25055694580078
    8. '))' → logprob: -17.62555694580078
    9. '),' → logprob: -17.87555694580078
    10. ')}' → logprob: -18.50055694580078

Token 907: '#' (ID: 2)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.000003814697266
    3. ' st' → logprob: -14.625003814697266
    4. '#' → logprob: -14.875003814697266
    5. 'for' → logprob: -15.625003814697266
    6. 'print' → logprob: -17.250003814697266
    7. '>>>' → logprob: -17.625003814697266
    8. '[' → logprob: -17.625003814697266
    9. '	st' → logprob: -18.625003814697266
    10. '
' → logprob: -18.875003814697266

Token 908: ' Set' (ID: 3957)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.004086828324943781
    2. '#' → logprob: -5.504086971282959
    3. 'for' → logprob: -12.6290864944458
    4. 'from' → logprob: -13.7540864944458
    5. '```' → logprob: -14.0040864944458
    6. 'update' → logprob: -14.6290864944458
    7. 'dp' → logprob: -14.8790864944458
    8. ' st' → logprob: -15.0040864944458
    9. 'initial' → logprob: -15.0040864944458
    10. 'array' → logprob: -15.1290864944458

Token 909: ' the' (ID: 290)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.053752750158309937
    2. '0' → logprob: -3.6787526607513428
    3. 'the' → logprob: -3.6787526607513428
    4. ' st' → logprob: -7.803752899169922
    5. ' the' → logprob: -7.803752899169922
    6. 'up' → logprob: -8.928752899169922
    7. '```' → logprob: -9.053752899169922
    8. 's' → logprob: -9.178752899169922
    9. '<|end|>' → logprob: -9.178752899169922
    10. 'value' → logprob: -9.303752899169922

Token 910: ' last' (ID: 2174)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.8401521444320679
    2. 'node' → logprob: -0.9651521444320679
    3. 'value' → logprob: -2.4651522636413574
    4. 'st' → logprob: -2.7151522636413574
    5. 'initial' → logprob: -4.465152263641357
    6. '0' → logprob: -4.715152263641357
    7. '#' → logprob: -5.840152263641357
    8. 'segment' → logprob: -5.965152263641357
    9. 'root' → logprob: -6.090152263641357
    10. 'val' → logprob: -6.965152263641357

Token 911: ' position' (ID: 4010)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2169920951128006
    2. ' node' → logprob: -2.216992139816284
    3. 'value' → logprob: -3.216992139816284
    4. 'token' → logprob: -4.591991901397705
    5. 'update' → logprob: -5.216991901397705
    6. 'st' → logprob: -5.216991901397705
    7. ' value' → logprob: -5.341991901397705
    8. 'cost' → logprob: -5.591991901397705
    9. 'position' → logprob: -5.716991901397705
    10. 'element' → logprob: -6.091991901397705

Token 912: ' (' (ID: 350)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0023861145600676537
    2. '.update' → logprob: -6.877386093139648
    3. '```' → logprob: -7.627386093139648
    4. '.st' → logprob: -8.252386093139648
    5. ' st' → logprob: -8.627386093139648
    6. 'update' → logprob: -9.377386093139648
    7. '   ' → logprob: -9.377386093139648
    8. '.' → logprob: -9.752386093139648
    9. 'to' → logprob: -10.002386093139648
    10. ''s' → logprob: -10.877386093139648

Token 913: 'goal' (ID: 47313)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24184191226959229
    2. 'st' → logprob: -1.6168419122695923
    3. '0' → logprob: -4.366841793060303
    4. ')' → logprob: -6.241841793060303
    5. 's' → logprob: -6.741841793060303
    6. ' n' → logprob: -9.366842269897461
    7. ')n' → logprob: -9.366842269897461
    8. '```' → logprob: -9.491842269897461
    9. ']' → logprob: -9.741842269897461
    10. ' st' → logprob: -9.991842269897461

Token 914: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08575304597616196
    2. ',' → logprob: -2.7107529640197754
    3. '```' → logprob: -5.460752964019775
    4. ').' → logprob: -5.585752964019775
    5. ' ,' → logprob: -6.585752964019775
    6. ' )' → logprob: -6.710752964019775
    7. ')
' → logprob: -6.710752964019775
    8. '=' → logprob: -7.835752964019775
    9. ']' → logprob: -7.835752964019775
    10. 'st' → logprob: -8.085753440856934

Token 915: ' to' (ID: 316)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.014184189029037952
    2. 'to' → logprob: -5.38918399810791
    3. '.update' → logprob: -5.38918399810791
    4. 'update' → logprob: -6.38918399810791
    5. ')' → logprob: -7.13918399810791
    6. ' to' → logprob: -7.38918399810791
    7. '```' → logprob: -8.01418399810791
    8. ' st' → logprob: -8.13918399810791
    9. '   ' → logprob: -8.26418399810791
    10. '=' → logprob: -9.01418399810791

Token 916: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.375001907348633
    4. '1' → logprob: -18.750001907348633
    5. 'zero' → logprob: -18.750001907348633
    6. '۰' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '...' → logprob: -19.250001907348633
    9. 'st' → logprob: -20.000001907348633
    10. '[' → logprob: -20.250001907348633

Token 917: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'zero' → logprob: -16.750003814697266
    4. 'st' → logprob: -17.625003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '1' → logprob: -18.250003814697266
    7. '[' → logprob: -19.125003814697266
    8. '...' → logprob: -19.375003814697266
    9. '۰' → logprob: -19.375003814697266
    10. '```' → logprob: -19.500003814697266

Token 918: ' (' (ID: 350)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -3.726595241460018e-05
    2. '```' → logprob: -10.50003719329834
    3. '
' → logprob: -12.37503719329834
    4. ' st' → logprob: -12.75003719329834
    5. 's' → logprob: -14.00003719329834
    6. '(st' → logprob: -14.62503719329834
    7. '_st' → logprob: -15.62503719329834
    8. ',' → logprob: -15.75003719329834
    9. '.st' → logprob: -15.75003719329834
    10. '``' → logprob: -15.75003719329834

Token 919: 'no' (ID: 1750)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8015562891960144
    2. 'distance' → logprob: -1.1765563488006592
    3. ')' → logprob: -1.8015563488006592
    4. 'because' → logprob: -4.30155611038208
    5. ',' → logprob: -4.42655611038208
    6. 'since' → logprob: -4.67655611038208
    7. 'update' → logprob: -5.05155611038208
    8. ' because' → logprob: -5.17655611038208
    9. 'value' → logprob: -5.30155611038208
    10. ' cost' → logprob: -5.42655611038208

Token 920: ' steps' (ID: 10331)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5409777164459229
    2. 'cost' → logprob: -1.5409777164459229
    3. ' steps' → logprob: -1.6659777164459229
    4. 'steps' → logprob: -4.665977478027344
    5. ')' → logprob: -6.290977478027344
    6. ' jumps' → logprob: -6.665977478027344
    7. 'jump' → logprob: -7.040977478027344
    8. ' jump' → logprob: -7.665977478027344
    9. 'distance' → logprob: -8.665977478027344
    10. '<|end|>' → logprob: -9.290977478027344

Token 921: ' needed' (ID: 6118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29310721158981323
    2. 'needed' → logprob: -1.543107271194458
    3. 'required' → logprob: -4.168107032775879
    4. ')
' → logprob: -4.668107032775879
    5. ' needed' → logprob: -4.793107032775879
    6. 'cost' → logprob: -5.293107032775879
    7. ' required' → logprob: -6.293107032775879
    8. ' cost' → logprob: -9.418107032775879
    9. '),' → logprob: -10.168107032775879
    10. 'need' → logprob: -10.668107032775879

Token 922: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01885560341179371
    2. ')
' → logprob: -4.018855571746826
    3. ' to' → logprob: -8.018856048583984
    4. 'st' → logprob: -8.768856048583984
    5. 'to' → logprob: -9.643856048583984
    6. ' at' → logprob: -10.143856048583984
    7. ')
' → logprob: -10.143856048583984
    8. 'self' → logprob: -11.143856048583984
    9. ' for' → logprob: -11.268856048583984
    10. 'for' → logprob: -11.393856048583984

Token 923: ' finish' (ID: 9115)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.018434366211295128
    2. ' reach' → logprob: -4.018434524536133
    3. 'jump' → logprob: -8.893434524536133
    4. ' ' → logprob: -10.018434524536133
    5. 'stand' → logprob: -10.393434524536133
    6. 'finish' → logprob: -11.143434524536133
    7. 'go' → logprob: -11.268434524536133
    8. 'goal' → logprob: -11.518434524536133
    9. '0' → logprob: -11.893434524536133
    10. 'get' → logprob: -12.268434524536133

Token 924: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2020852118730545
    2. ')
' → logprob: -1.702085256576538
    3. ')
' → logprob: -7.327085018157959
    4. ' )' → logprob: -12.327085494995117
    5. ' )
' → logprob: -13.077085494995117
    6. ').' → logprob: -13.702085494995117
    7. ')

' → logprob: -13.952085494995117
    8. '   ' → logprob: -14.077085494995117
    9. ' at' → logprob: -14.202085494995117
    10. '),' → logprob: -14.577085494995117

Token 925: ' goal' (ID: 8583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014259646646678448
    2. ' n' → logprob: -4.7642598152160645
    3. 'position' → logprob: -5.8892598152160645
    4. ')' → logprob: -7.1392598152160645
    5. 'here' → logprob: -7.1392598152160645
    6. 'the' → logprob: -7.6392598152160645
    7. ' here' → logprob: -8.639259338378906
    8. 'end' → logprob: -9.014259338378906
    9. ')n' → logprob: -9.014259338378906
    10. ' position' → logprob: -9.139259338378906

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693436861038208
    2. ')
' → logprob: -0.693436861038208
    3. ')
' → logprob: -8.193436622619629
    4. '   ' → logprob: -12.693436622619629
    5. ')

' → logprob: -12.818436622619629
    6. ')`
' → logprob: -13.818436622619629
    7. ' )
' → logprob: -14.193436622619629
    8. 'self' → logprob: -14.193436622619629
    9. '`)
' → logprob: -14.568436622619629
    10. '[' → logprob: -14.818436622619629

Token 927: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.625001907348633
    3. ' st' → logprob: -14.750001907348633
    4. '
' → logprob: -17.125001907348633
    5. '``' → logprob: -19.250001907348633
    6. '	st' → logprob: -19.875001907348633
    7. 'update' → logprob: -20.750001907348633
    8. 's' → logprob: -20.875001907348633
    9. '-st' → logprob: -21.000001907348633
    10. ')' → logprob: -21.000001907348633

Token 928: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.0029784177895635366
    2. '.node' → logprob: -5.877978324890137
    3. '.' → logprob: -8.752978324890137
    4. 'update' → logprob: -11.627978324890137
    5. 'node' → logprob: -13.127978324890137
    6. '.set' → logprob: -14.127978324890137
    7. '.up' → logprob: -14.252978324890137
    8. '.updated' → logprob: -14.252978324890137
    9. ' .' → logprob: -14.502978324890137
    10. '\.' → logprob: -14.752978324890137

Token 929: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.266944157890975e-05
    2. '(' → logprob: -9.625072479248047
    3. 'n' → logprob: -12.000072479248047
    4. '((' → logprob: -15.875072479248047
    5. '(
' → logprob: -16.625072479248047
    6. ' (' → logprob: -16.625072479248047
    7. ' n' → logprob: -16.625072479248047
    8. '(s' → logprob: -17.000072479248047
    9. ')n' → logprob: -17.625072479248047
    10. ',n' → logprob: -17.875072479248047

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015491410158574581
    2. ')' → logprob: -7.126549243927002
    3. '(),' → logprob: -7.876549243927002
    4. ' ,' → logprob: -8.501548767089844
    5. ',n' → logprob: -10.126548767089844
    6. '(n' → logprob: -10.251548767089844
    7. ',
' → logprob: -11.001548767089844
    8. '0' → logprob: -11.376548767089844
    9. '()' → logprob: -11.376548767089844
    10. '`,' → logprob: -11.376548767089844

Token 931: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -21.75
    5. ')' → logprob: -22.75
    6. '00' → logprob: -24.125
    7. '  ' → logprob: -25.25
    8. '٠' → logprob: -25.25
    9. '000' → logprob: -25.375
    10. '０' → logprob: -25.375

Token 932: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -20.625
    5. '00' → logprob: -21.375
    6. ')' → logprob: -21.375
    7. '000' → logprob: -22.0
    8. '０' → logprob: -22.625
    9. '1' → logprob: -22.875
    10. '```' → logprob: -22.875

Token 933: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023131117632146925
    2. ')
' → logprob: -8.375231742858887
    3. ')

' → logprob: -15.250231742858887
    4. ' )' → logprob: -15.625231742858887
    5. ')
' → logprob: -16.12523078918457
    6. ')#' → logprob: -16.50023078918457
    7. ')`' → logprob: -16.75023078918457
    8. ')n' → logprob: -17.50023078918457
    9. '))' → logprob: -17.62523078918457
    10. '),' → logprob: -18.25023078918457

Token 934: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16552311182022095
    2. 'from' → logprob: -2.165523052215576
    3. 'dp' → logprob: -3.290523052215576
    4. 'import' → logprob: -7.540523052215576
    5. 'deque' → logprob: -10.415523529052734
    6. 'prev' → logprob: -10.915523529052734
    7. '```' → logprob: -11.665523529052734
    8. 'queue' → logprob: -11.915523529052734
    9. 'positions' → logprob: -12.165523529052734
    10. '#' → logprob: -12.290523529052734

Token 935: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047128599137067795
    2. 'from' → logprob: -3.172128677368164
    3. 'dp' → logprob: -6.047128677368164
    4. '#' → logprob: -6.672128677368164
    5. 'import' → logprob: -7.672128677368164
    6. 'dq' → logprob: -11.922128677368164
    7. 'deque' → logprob: -12.422128677368164
    8. 'def' → logprob: -12.547128677368164
    9. 'queue' → logprob: -12.797128677368164
    10. 'positions' → logprob: -13.047128677368164

Token 936: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38934531807899475
    2. 'for' → logprob: -1.1393452882766724
    3. ' for' → logprob: -7.139345169067383
    4. 'steps' → logprob: -8.014345169067383
    5. 'from' → logprob: -8.014345169067383
    6. '#' → logprob: -8.139345169067383
    7. ' dp' → logprob: -8.514345169067383
    8. 'cost' → logprob: -8.639345169067383
    9. '```' → logprob: -9.139345169067383
    10. 'ans' → logprob: -10.014345169067383

Token 937: ' minimum' (ID: 11085)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39085376262664795
    2. 'dp' → logprob: -1.140853762626648
    3. '#' → logprob: -5.6408538818359375
    4. 'from' → logprob: -8.515853881835938
    5. 'import' → logprob: -9.765853881835938
    6. 'cost' → logprob: -9.765853881835938
    7. 'steps' → logprob: -10.515853881835938
    8. 'answer' → logprob: -11.015853881835938
    9. '```' → logprob: -11.265853881835938
    10. 'ans' → logprob: -11.390853881835938

Token 938: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.027244102209806442
    2. 'dp' → logprob: -3.6522440910339355
    3. 'cost' → logprob: -7.1522440910339355
    4. 'step' → logprob: -9.777244567871094
    5. ' steps' → logprob: -10.527244567871094
    6. 'j' → logprob: -11.027244567871094
    7. 'for' → logprob: -11.277244567871094
    8. '#' → logprob: -11.277244567871094
    9. 'number' → logprob: -11.777244567871094
    10. '_steps' → logprob: -11.777244567871094

Token 939: ' needed' (ID: 6118)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002756366156972945
    2. 'dp' → logprob: -8.750275611877441
    3. 'from' → logprob: -9.250275611877441
    4. ' for' → logprob: -11.500275611877441
    5. '#' → logprob: -11.750275611877441
    6. 'i' → logprob: -14.250275611877441
    7. '```' → logprob: -14.375275611877441
    8. '
' → logprob: -14.625275611877441
    9. 'import' → logprob: -15.000275611877441
    10. 'cost' → logprob: -15.500275611877441

Token 940: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020674681290984154
    2. 'from' → logprob: -6.377067565917969
    3. 'to' → logprob: -8.377067565917969
    4. 'dp' → logprob: -9.627067565917969
    5. '#' → logprob: -10.002067565917969
    6. ' for' → logprob: -11.002067565917969
    7. '```' → logprob: -12.127067565917969
    8. '
' → logprob: -14.127067565917969
    9. 'd' → logprob: -15.377067565917969
    10. 'import' → logprob: -16.12706756591797

Token 941: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.0009433844243176281
    2. 'finish' → logprob: -7.500943183898926
    3. ' reach' → logprob: -8.500943183898926
    4. 'jump' → logprob: -9.625943183898926
    5. 'complete' → logprob: -10.375943183898926
    6. 'go' → logprob: -10.375943183898926
    7. 'move' → logprob: -11.125943183898926
    8. '
' → logprob: -11.625943183898926
    9. 'win' → logprob: -11.875943183898926
    10. '```' → logprob: -12.125943183898926

Token 942: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.717808723449707
    2. 'n' → logprob: -1.092808723449707
    3. 'position' → logprob: -2.092808723449707
    4. 'the' → logprob: -4.342808723449707
    5. 'positions' → logprob: -4.717808723449707
    6. 'pos' → logprob: -4.717808723449707
    7. 'each' → logprob: -5.092808723449707
    8. 's' → logprob: -5.467808723449707
    9. 'from' → logprob: -5.467808723449707
    10. 'index' → logprob: -5.842808723449707

Token 943: ' end' (ID: 1268)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.3616892993450165
    2. 'n' → logprob: -1.8616893291473389
    3. 'end' → logprob: -2.611689329147339
    4. 'position' → logprob: -2.861689329147339
    5. 'i' → logprob: -4.23668909072876
    6. 'start' → logprob: -6.61168909072876
    7. 'finish' → logprob: -7.86168909072876
    8. '#' → logprob: -7.98668909072876
    9. 'target' → logprob: -8.736689567565918
    10. '0' → logprob: -8.986689567565918

Token 944: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.407366916188039e-05
    2. ' for' → logprob: -11.000054359436035
    3. 'from' → logprob: -11.125054359436035
    4. '
' → logprob: -11.250054359436035
    5. '```' → logprob: -11.625054359436035
    6. '#' → logprob: -15.250054359436035
    7. '``' → logprob: -15.750054359436035
    8. ')' → logprob: -17.25005340576172
    9. '   ' → logprob: -17.50005340576172
    10. 'i' → logprob: -17.87505340576172

Token 945: ' each' (ID: 2454)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025513652712106705
    2. 'i' → logprob: -4.150513648986816
    3. 'position' → logprob: -4.900513648986816
    4. 'the' → logprob: -6.775513648986816
    5. 'index' → logprob: -8.025513648986816
    6. ' n' → logprob: -8.650513648986816
    7. 'range' → logprob: -9.150513648986816
    8. '#' → logprob: -9.900513648986816
    9. ' position' → logprob: -10.150513648986816
    10. ' i' → logprob: -10.275513648986816

Token 946: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0519864596426487
    2. 'i' → logprob: -3.3019864559173584
    3. 'index' → logprob: -4.5519866943359375
    4. ' position' → logprob: -5.9269866943359375
    5. ' i' → logprob: -8.301986694335938
    6. 'pos' → logprob: -8.676986694335938
    7. '#' → logprob: -8.926986694335938
    8. ' index' → logprob: -10.926986694335938
    9. '   ' → logprob: -11.676986694335938
    10. 'idx' → logprob: -11.801986694335938

Token 947: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.319370302458992e-06
    2. '
' → logprob: -12.625005722045898
    3. '```' → logprob: -14.000005722045898
    4. ' for' → logprob: -14.625005722045898
    5. 'dp' → logprob: -15.250005722045898
    6. 'i' → logprob: -15.375005722045898
    7. 'res' → logprob: -16.7500057220459
    8. 'from' → logprob: -17.2500057220459
    9. '#' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.7500057220459

Token 948: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04394902288913727
    2. 'i' → logprob: -4.043949127197266
    3. ' for' → logprob: -4.543949127197266
    4. 'from' → logprob: -4.793949127197266
    5. 'starting' → logprob: -6.293949127197266
    6. '#' → logprob: -6.418949127197266
    7. '
' → logprob: -6.543949127197266
    8. ' i' → logprob: -7.543949127197266
    9. 'n' → logprob: -8.293949127197266
    10. '   ' → logprob: -8.543949127197266

Token 949: ' reverse' (ID: 18199)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029045434668660164
    2. 'reverse' → logprob: -4.029045581817627
    3. 're' → logprob: -4.529045581817627
    4. '
' → logprob: -11.279045104980469
    5. '   ' → logprob: -11.779045104980469
    6. ' range' → logprob: -12.029045104980469
    7. 'for' → logprob: -12.029045104980469
    8. '```' → logprob: -12.154045104980469
    9. '[::-' → logprob: -13.404045104980469
    10. '#' → logprob: -13.529045104980469

Token 950: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038169484469108284
    2. ' for' → logprob: -8.625381469726562
    3. 'range' → logprob: -9.000381469726562
    4. '
' → logprob: -9.625381469726562
    5. '```' → logprob: -12.125381469726562
    6. 'i' → logprob: -12.500381469726562
    7. 'from' → logprob: -13.500381469726562
    8. '   ' → logprob: -14.625381469726562
    9. 's' → logprob: -15.250381469726562
    10. '_' → logprob: -15.250381469726562

Token 951: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6286106983898208e-05
    2. '
' → logprob: -12.125016212463379
    3. 'i' → logprob: -12.500016212463379
    4. ' for' → logprob: -12.625016212463379
    5. '```' → logprob: -12.750016212463379
    6. '   ' → logprob: -14.125016212463379
    7. '``' → logprob: -17.125017166137695
    8. 'from' → logprob: -17.375017166137695
    9. '#' → logprob: -17.750017166137695
    10. '    
' → logprob: -17.875017166137695

Token 952: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.500000953674316
    3. ' for' → logprob: -15.125000953674316
    4. '
' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.250001907348633
    6. 'i' → logprob: -18.000001907348633
    7. 'from' → logprob: -18.375001907348633
    8. '``' → logprob: -19.875001907348633
    9. '    
' → logprob: -21.000001907348633
    10. '

' → logprob: -21.625001907348633

Token 953: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011206500232219696
    2. 'pos' → logprob: -5.13620662689209
    3. ' i' → logprob: -5.26120662689209
    4. 'idx' → logprob: -10.01120662689209
    5. ' pos' → logprob: -10.88620662689209
    6. 'p' → logprob: -11.63620662689209
    7. 'x' → logprob: -13.76120662689209
    8. 'v' → logprob: -15.13620662689209
    9. ' idx' → logprob: -15.38620662689209
    10. '   ' → logprob: -15.51120662689209

Token 954: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42872071266174316
    2. 'in' → logprob: -1.0537207126617432
    3. '   ' → logprob: -11.678720474243164
    4. '	in' → logprob: -12.678720474243164
    5. 'n' → logprob: -13.553720474243164
    6. '=' → logprob: -13.553720474243164
    7. 'from' → logprob: -13.678720474243164
    8. 'range' → logprob: -14.428720474243164
    9. ' ' → logprob: -14.553720474243164
    10. '_' → logprob: -14.803720474243164

Token 955: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012042811140418053
    2. ' range' → logprob: -6.751204490661621
    3. 're' → logprob: -10.501204490661621
    4. '   ' → logprob: -12.751204490661621
    5. 'reverse' → logprob: -13.376204490661621
    6. ' reversed' → logprob: -13.501204490661621
    7. 'ange' → logprob: -15.001204490661621
    8. 'r' → logprob: -16.001203536987305
    9. 'rang' → logprob: -16.126203536987305
    10. '(range' → logprob: -16.376203536987305

Token 956: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5759912729263306
    2. 'n' → logprob: -0.8259912729263306
    3. ' n' → logprob: -9.9509916305542
    4. '(' → logprob: -12.8259916305542
    5. '	n' → logprob: -14.7009916305542
    6. '_n' → logprob: -15.7009916305542
    7. '   ' → logprob: -15.9509916305542
    8. '[n' → logprob: -16.075990676879883
    9. '<n' → logprob: -16.075990676879883
    10. '=n' → logprob: -16.075990676879883

Token 957: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06498902291059494
    2. ' -' → logprob: -2.8149890899658203
    3. ',' → logprob: -5.81498908996582
    4. 'n' → logprob: -11.18998908996582
    5. '   ' → logprob: -12.06498908996582
    6. '+' → logprob: -12.18998908996582
    7. ' ,' → logprob: -12.43998908996582
    8. ',-' → logprob: -13.56498908996582
    9. ' ' → logprob: -14.06498908996582
    10. '1' → logprob: -14.31498908996582

Token 958: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -17.125003814697266
    4. '-' → logprob: -17.125003814697266
    5. ' -' → logprob: -17.750003814697266
    6. '   ' → logprob: -19.000003814697266
    7. ',' → logprob: -20.250003814697266
    8. '0' → logprob: -20.375003814697266
    9. '```' → logprob: -20.750003814697266
    10. '+' → logprob: -21.125003814697266

Token 959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '-' → logprob: -11.375014305114746
    3. '2' → logprob: -13.250014305114746
    4. ' -' → logprob: -15.250014305114746
    5. ' ' → logprob: -15.625014305114746
    6. '   ' → logprob: -17.00001335144043
    7. '0' → logprob: -17.50001335144043
    8. 'i' → logprob: -17.87501335144043
    9. '
' → logprob: -18.06251335144043
    10. '```' → logprob: -18.06251335144043

Token 960: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ' ,' → logprob: -10.625044822692871
    3. ',-' → logprob: -11.250044822692871
    4. '-' → logprob: -12.375044822692871
    5. '   ' → logprob: -14.000044822692871
    6. ',
' → logprob: -14.000044822692871
    7. ' -' → logprob: -14.500044822692871
    8. '_,' → logprob: -15.000044822692871
    9. '```' → logprob: -16.250043869018555
    10. '       ' → logprob: -16.375043869018555

Token 961: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00043233807082287967
    2. ' -' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.750432014465332
    4. ' ' → logprob: -15.000432014465332
    5. '-i' → logprob: -15.750432014465332
    6. '0' → logprob: -16.87543296813965
    7. '  ' → logprob: -17.37543296813965
    8. '       ' → logprob: -18.00043296813965
    9. '     ' → logprob: -18.12543296813965
    10. '    ' → logprob: -18.12543296813965

Token 962: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.125
    3. '```' → logprob: -17.375
    4. '2' → logprob: -17.5
    5. ' ' → logprob: -17.625
    6. '
' → logprob: -17.75
    7. '   ' → logprob: -18.0
    8. ' -' → logprob: -18.125
    9. '...' → logprob: -18.5
    10. '(-' → logprob: -19.25

Token 963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44671741127967834
    2. '-' → logprob: -1.321717381477356
    3. ' -' → logprob: -2.4467175006866455
    4. '1' → logprob: -5.446717262268066
    5. ',-' → logprob: -6.196717262268066
    6. ' ,' → logprob: -8.571717262268066
    7. '```' → logprob: -8.571717262268066
    8. '   ' → logprob: -9.196717262268066
    9. 's' → logprob: -9.321717262268066
    10. ':' → logprob: -11.196717262268066

Token 964: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003360582049936056
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.875335693359375
    4. '```' → logprob: -16.125335693359375
    5. ' ' → logprob: -16.250335693359375
    6. '1' → logprob: -17.625335693359375
    7. ')' → logprob: -18.125335693359375
    8. '  ' → logprob: -18.125335693359375
    9. '−' → logprob: -19.000335693359375
    10. '       ' → logprob: -19.375335693359375

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -17.75
    4. '-' → logprob: -18.125
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -19.125
    7. ')' → logprob: -19.625
    8. ' -' → logprob: -20.5
    9. '
' → logprob: -20.625
    10. ',' → logprob: -21.0625

Token 966: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7971986532211304
    2. '-' → logprob: -0.9221986532211304
    3. '):' → logprob: -2.17219877243042
    4. ':' → logprob: -3.79719877243042
    5. ',' → logprob: -4.54719877243042
    6. ' -' → logprob: -5.92219877243042
    7. '   ' → logprob: -6.92219877243042
    8. '):
' → logprob: -7.92219877243042
    9. ',-' → logprob: -8.547198295593262
    10. ':
' → logprob: -8.672198295593262

Token 967: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06815554946660995
    2. 'if' → logprob: -3.193155527114868
    3. '   ' → logprob: -3.818155527114868
    4. '       ' → logprob: -6.193155765533447
    5. '```' → logprob: -8.193155288696289
    6. ' ' → logprob: -8.568155288696289
    7. 'If' → logprob: -9.193155288696289
    8. '<|end|>' → logprob: -9.443155288696289
    9. '	if' → logprob: -10.068155288696289
    10. 'token' → logprob: -10.943155288696289

Token 968: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001487140398239717
    2. 'res' → logprob: -9.50014877319336
    3. '   ' → logprob: -10.00014877319336
    4. 'dp' → logprob: -12.00014877319336
    5. 'min' → logprob: -12.12514877319336
    6. ' if' → logprob: -12.25014877319336
    7. 'steps' → logprob: -12.37514877319336
    8. 'ans' → logprob: -12.87514877319336
    9. 'val' → logprob: -13.25014877319336
    10. '```' → logprob: -14.00014877319336

Token 969: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.362307223957032e-05
    2. ' s' → logprob: -10.125073432922363
    3. '   ' → logprob: -10.375073432922363
    4. ' ' → logprob: -13.875073432922363
    5. '(s' → logprob: -14.750073432922363
    6. 'st' → logprob: -15.375073432922363
    7. '`s' → logprob: -16.37507438659668
    8. 'i' → logprob: -16.50007438659668
    9. '    ' → logprob: -16.87507438659668
    10. '    
' → logprob: -17.00007438659668

Token 970: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -16.5
    4. ''[' → logprob: -16.875
    5. '```' → logprob: -17.25
    6. '[I' → logprob: -17.25
    7. '[
' → logprob: -17.875
    8. '   ' → logprob: -18.25
    9. '"[' → logprob: -18.5
    10. '\[' → logprob: -18.75

Token 971: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6342310309410095
    2. '!=' → logprob: -1.0092310905456543
    3. ' !=' → logprob: -3.1342310905456543
    4. ' ==' → logprob: -3.2592310905456543
    5. ']' → logprob: -5.009231090545654
    6. ')' → logprob: -5.384231090545654
    7. ']==' → logprob: -5.634231090545654
    8. ''' → logprob: -5.759231090545654
    9. '=='' → logprob: -6.759231090545654
    10. ']!=' → logprob: -6.884231090545654

Token 972: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6699778437614441
    2. '==' → logprob: -0.9199778437614441
    3. ' !=' → logprob: -2.794977903366089
    4. ' ==' → logprob: -3.669977903366089
    5. '!='' → logprob: -6.54497766494751
    6. '=='' → logprob: -7.16997766494751
    7. '   ' → logprob: -8.169978141784668
    8. '[' → logprob: -9.669978141784668
    9. '=' → logprob: -9.794978141784668
    10. '!' → logprob: -9.794978141784668

Token 973: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15896086394786835
    2. ''#' → logprob: -2.7839608192443848
    3. ''.' → logprob: -3.5339608192443848
    4. ''o' → logprob: -4.033960819244385
    5. ''A' → logprob: -4.408960819244385
    6. '"' → logprob: -4.908960819244385
    7. ''O' → logprob: -5.033960819244385
    8. ''a' → logprob: -6.283960819244385
    9. '"#' → logprob: -6.658960819244385
    10. ''H' → logprob: -6.658960819244385

Token 974: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7391027212142944
    2. '"#' → logprob: -1.4891027212142944
    3. '.' → logprob: -2.364102840423584
    4. '"' → logprob: -2.989102840423584
    5. '0' → logprob: -3.364102840423584
    6. ''#' → logprob: -3.614102840423584
    7. '1' → logprob: -4.114102840423584
    8. '".' → logprob: -4.239102840423584
    9. 'x' → logprob: -4.364102840423584
    10. ''' → logprob: -4.489102840423584

Token 975: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.7064599394798279
    2. '":
' → logprob: -0.7064599394798279
    3. '"' → logprob: -4.831459999084473
    4. ':' → logprob: -5.831459999084473
    5. '":
' → logprob: -6.331459999084473
    6. '   ' → logprob: -8.706459999084473
    7. ':
' → logprob: -8.706459999084473
    8. ' "' → logprob: -9.456459999084473
    9. '       ' → logprob: -10.081459999084473
    10. '"):
' → logprob: -10.831459999084473

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010531729785725474
    2. ' continue' → logprob: -7.501053333282471
    3. 'continue' → logprob: -7.751053333282471
    4. '   ' → logprob: -10.501052856445312
    5. '```' → logprob: -10.876052856445312
    6. ' continues' → logprob: -12.626052856445312
    7. ',' → logprob: -12.876052856445312
    8. '	continue' → logprob: -13.251052856445312
    9. '           ' → logprob: -13.251052856445312
    10. '        
' → logprob: -13.376052856445312

Token 977: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.02710314653813839
    2. '   ' → logprob: -3.7771031856536865
    3. '#' (adapté à ' #') → logprob: -6.277102947235107
    4. ' continue' → logprob: -7.152102947235107
    5. 'st' → logprob: -7.527102947235107
    6. '       ' → logprob: -7.902102947235107
    7. '```' → logprob: -9.527103424072266
    8. 'continu' → logprob: -9.777103424072266
    9. '	continue' → logprob: -10.527103424072266
    10. 'steps' → logprob: -10.777103424072266

Token 978: ' Cannot' (ID: 68113)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05018121376633644
    2. 'st' → logprob: -3.1751811504364014
    3. '#' → logprob: -5.3001813888549805
    4. '   ' → logprob: -6.6751813888549805
    5. ' continue' → logprob: -7.8001813888549805
    6. 'steps' → logprob: -8.92518138885498
    7. 'cost' → logprob: -9.17518138885498
    8. 'res' → logprob: -10.05018138885498
    9. 'continu' → logprob: -10.30018138885498
    10. 'val' → logprob: -10.42518138885498

Token 979: ' stand' (ID: 3182)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.620552122592926
    2. 'jump' → logprob: -1.2455520629882812
    3. 'step' → logprob: -2.8705520629882812
    4. '   ' → logprob: -3.6205520629882812
    5. 'pass' → logprob: -3.7455520629882812
    6. 'move' → logprob: -3.8705520629882812
    7. ' jump' → logprob: -4.120552062988281
    8. ' continue' → logprob: -4.745552062988281
    9. 'reach' → logprob: -5.370552062988281
    10. ' step' → logprob: -5.370552062988281

Token 980: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4272863268852234
    2. '       ' → logprob: -1.8022863864898682
    3. '   ' → logprob: -2.552286386489868
    4. ' continue' → logprob: -2.677286386489868
    5. '           ' → logprob: -4.427286148071289
    6. 'inue' → logprob: -4.677286148071289
    7. 'on' → logprob: -5.177286148071289
    8. ' on' → logprob: -5.427286148071289
    9. ')' → logprob: -6.677286148071289
    10. '_continue' → logprob: -6.927286148071289

Token 981: ' or' (ID: 503)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07647756487131119
    2. ' i' → logprob: -3.326477527618408
    3. 's' → logprob: -4.076477527618408
    4. '"' → logprob: -4.701477527618408
    5. 'this' → logprob: -5.326477527618408
    6. ' this' → logprob: -6.451477527618408
    7. 'that' → logprob: -6.951477527618408
    8. ' s' → logprob: -7.201477527618408
    9. ' that' → logprob: -7.576477527618408
    10. '1' → logprob: -7.576477527618408

Token 982: ' move' (ID: 5275)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.009177346713840961
    2. 'pass' → logprob: -5.759177207946777
    3. 'step' → logprob: -5.759177207946777
    4. ' jump' → logprob: -6.134177207946777
    5. 'move' → logprob: -8.009177207946777
    6. 'land' → logprob: -8.884177207946777
    7. '   ' → logprob: -10.259177207946777
    8. '#' → logprob: -10.259177207946777
    9. 'walk' → logprob: -11.134177207946777
    10. 'go' → logprob: -11.509177207946777

Token 983: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1847362369298935
    2. ' to' → logprob: -2.8097362518310547
    3. ' onto' → logprob: -3.1847362518310547
    4. 'onto' → logprob: -3.3097362518310547
    5. 'on' → logprob: -3.9347362518310547
    6. 'i' → logprob: -5.309736251831055
    7. '   ' → logprob: -5.934736251831055
    8. '[i' → logprob: -7.184736251831055
    9. '       ' → logprob: -7.434736251831055
    10. ' i' → logprob: -7.684736251831055

Token 984: ' this' (ID: 495)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010460498742759228
    2. ' i' → logprob: -4.635460376739502
    3. 's' → logprob: -7.510460376739502
    4. '"' → logprob: -10.01046085357666
    5. ')' → logprob: -10.63546085357666
    6. '`' → logprob: -11.13546085357666
    7. 'this' → logprob: -11.13546085357666
    8. 'the' → logprob: -11.38546085357666
    9. ' s' → logprob: -11.51046085357666
    10. '[i' → logprob: -11.88546085357666

Token 985: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.008815704844892025
    2. ' position' → logprob: -4.758815765380859
    3. 'i' → logprob: -9.38381576538086
    4. 'index' → logprob: -9.63381576538086
    5. 'point' → logprob: -11.25881576538086
    6. 'cell' → logprob: -12.00881576538086
    7. 'pos' → logprob: -12.13381576538086
    8. ' i' → logprob: -12.38381576538086
    9. ' ' → logprob: -12.50881576538086
    10. '```' → logprob: -12.88381576538086

Token 986: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1016169860959053
    2. 'continue' → logprob: -2.8516170978546143
    3. '   ' → logprob: -3.4766170978546143
    4. ' continue' → logprob: -4.976616859436035
    5. '```' → logprob: -7.976616859436035
    6. '	continue' → logprob: -8.226616859436035
    7. '_continue' → logprob: -8.976616859436035
    8. '
' → logprob: -8.976616859436035
    9. ',' → logprob: -9.851616859436035
    10. '           ' → logprob: -10.226616859436035

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048062801361083984
    2. 'continue' → logprob: -5.6298065185546875
    3. ' continue' → logprob: -7.3798065185546875
    4. '   ' → logprob: -7.7548065185546875
    5. '```' → logprob: -9.379806518554688
    6. '           ' → logprob: -10.379806518554688
    7. '	continue' → logprob: -11.254806518554688
    8. ',' → logprob: -12.129806518554688
    9. '_continue' → logprob: -12.254806518554688
    10. 'Continue' → logprob: -12.879806518554688

Token 988: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07453787326812744
    2. '   ' → logprob: -2.949537754058838
    3. 'st' → logprob: -4.324537754058838
    4. '       ' → logprob: -5.449537754058838
    5. ' continue' → logprob: -6.324537754058838
    6. '```' → logprob: -10.199538230895996
    7. '	continue' → logprob: -10.699538230895996
    8. '           ' → logprob: -10.824538230895996
    9. 'continu' → logprob: -11.699538230895996
    10. 'pass' → logprob: -11.699538230895996

Token 989: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004941512364894152
    2. 'cost' → logprob: -6.754941463470459
    3. 'steps' → logprob: -7.004941463470459
    4. 'res' → logprob: -7.129941463470459
    5. 'val' → logprob: -7.379941463470459
    6. '    
' → logprob: -8.129941940307617
    7. 'dp' → logprob: -8.254941940307617
    8. 'step' → logprob: -8.379941940307617
    9. 'next' → logprob: -9.254941940307617
    10. ' steps' → logprob: -9.754941940307617

Token 990: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016316106542944908
    2. 'res' → logprob: -4.891315937042236
    3. 'val' → logprob: -6.141315937042236
    4. ' res' → logprob: -6.516315937042236
    5. 'cost' → logprob: -6.891315937042236
    6. 'next' → logprob: -7.516315937042236
    7. 'steps' → logprob: -7.516315937042236
    8. 'dp' → logprob: -7.641315937042236
    9. 'l' → logprob: -8.141316413879395
    10. '```' → logprob: -8.141316413879395

Token 991: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5629600286483765
    2. 'res' → logprob: -1.8129600286483765
    3. 'left' → logprob: -2.062960147857666
    4. 'min' → logprob: -2.687960147857666
    5. 'r' → logprob: -3.187960147857666
    6. '   ' → logprob: -4.812960147857666
    7. 'right' → logprob: -5.187960147857666
    8. 'val' → logprob: -5.187960147857666
    9. 'else' → logprob: -5.687960147857666
    10. '#' (adapté à ' #') → logprob: -6.312960147857666

Token 992: ' Calculate' (ID: 38942)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2266082763671875
    2. 'r' → logprob: -1.4766082763671875
    3. 'min' → logprob: -1.6016082763671875
    4. 'right' → logprob: -2.3516082763671875
    5. 'l' → logprob: -2.7266082763671875
    6. 'left' → logprob: -3.2266082763671875
    7. 'val' → logprob: -3.3516082763671875
    8. '#' → logprob: -4.2266082763671875
    9. 'cost' → logprob: -4.9766082763671875
    10. 'step' → logprob: -5.1016082763671875

Token 993: ' the' (ID: 290)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5123788714408875
    2. 'min' → logprob: -1.6373789310455322
    3. 'val' → logprob: -2.6373789310455322
    4. 'cost' → logprob: -3.1373789310455322
    5. 'steps' → logprob: -3.2623789310455322
    6. 'dp' → logprob: -4.262378692626953
    7. 'j' → logprob: -4.637378692626953
    8. 'step' → logprob: -5.387378692626953
    9. 'next' → logprob: -5.637378692626953
    10. 'cur' → logprob: -5.637378692626953

Token 994: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10823047906160355
    2. 'res' → logprob: -2.8582305908203125
    3. 'minimum' → logprob: -3.7332305908203125
    4. 'val' → logprob: -4.6082305908203125
    5. 'cost' → logprob: -5.3582305908203125
    6. '#' → logprob: -6.9832305908203125
    7. 'dp' → logprob: -6.9832305908203125
    8. 'minimal' → logprob: -7.3582305908203125
    9. 'next' → logprob: -7.4832305908203125
    10. 'steps' → logprob: -7.4832305908203125

Token 995: ' number' (ID: 2086)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.09743957966566086
    2. 'cost' → logprob: -2.9724395275115967
    3. 'step' → logprob: -3.9724395275115967
    4. 'val' → logprob: -4.222439765930176
    5. 'next' → logprob: -5.972439765930176
    6. 'res' → logprob: -6.222439765930176
    7. 'jump' → logprob: -6.847439765930176
    8. 'dp' → logprob: -7.347439765930176
    9. 'j' → logprob: -7.597439765930176
    10. '   ' → logprob: -8.347439765930176

Token 996: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.47979578375816345
    2. '_of' → logprob: -1.6047958135604858
    3. ' of' → logprob: -2.1047956943511963
    4. ' =' → logprob: -4.229795932769775
    5. '=' → logprob: -4.354795932769775
    6. '_steps' → logprob: -4.354795932769775
    7. '   ' → logprob: -4.604795932769775
    8. 'steps' → logprob: -5.729795932769775
    9. ' steps' → logprob: -7.229795932769775
    10. '       ' → logprob: -7.354795932769775

Token 997: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.025824693962931633
    2. 'st' → logprob: -4.275824546813965
    3. ' steps' → logprob: -4.900824546813965
    4. 'j' → logprob: -5.900824546813965
    5. 'next' → logprob: -7.150824546813965
    6. 'moves' → logprob: -8.275824546813965
    7. '   ' → logprob: -10.150824546813965
    8. '1' → logprob: -10.275824546813965
    9. ' jumps' → logprob: -10.400824546813965
    10. '_steps' → logprob: -10.525824546813965

Token 998: ' needed' (ID: 6118)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3154003918170929
    2. ' =' → logprob: -1.8154003620147705
    3. '   ' → logprob: -2.4404003620147705
    4. 'needed' → logprob: -4.44040060043335
    5. ' needed' → logprob: -6.44040060043335
    6. 'to' → logprob: -6.56540060043335
    7. 'required' → logprob: -6.69040060043335
    8. '```' → logprob: -7.06540060043335
    9. 'next' → logprob: -7.44040060043335
    10. 'for' → logprob: -7.56540060043335

Token 999: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03235079348087311
    2. '=' → logprob: -4.407351016998291
    3. ' =' → logprob: -4.407351016998291
    4. 'to' → logprob: -5.657351016998291
    5. 'from' → logprob: -6.532351016998291
    6. 'next' → logprob: -6.907351016998291
    7. 'in' → logprob: -8.282350540161133
    8. 'for' → logprob: -8.532350540161133
    9. 'needed' → logprob: -8.532350540161133
    10. 'between' → logprob: -9.032350540161133

Token 1000: ' positions' (ID: 15897)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026940828189253807
    2. 'st' → logprob: -3.6519408226013184
    3. '(i' → logprob: -8.651941299438477
    4. ' i' → logprob: -9.026941299438477
    5. 'position' → logprob: -9.401941299438477
    6. '   ' → logprob: -9.526941299438477
    7. 'the' → logprob: -10.026941299438477
    8. 'next' → logprob: -10.151941299438477
    9. 'positions' → logprob: -10.401941299438477
    10. 'min' → logprob: -11.026941299438477

Token 1001: ' ahead' (ID: 12207)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39267826080322266
    2. '[i' → logprob: -1.1426782608032227
    3. '   ' → logprob: -5.267678260803223
    4. '(i' → logprob: -8.017678260803223
    5. '=i' → logprob: -9.392678260803223
    6. 'in' → logprob: -9.517678260803223
    7. 'from' → logprob: -9.642678260803223
    8. ' i' → logprob: -10.392678260803223
    9. '=' → logprob: -10.642678260803223
    10. ' =' → logprob: -11.017678260803223

Token 1002: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4110480844974518
    2. 'res' → logprob: -1.5360480546951294
    3. 'val' → logprob: -3.036048173904419
    4. ' =' → logprob: -4.28604793548584
    5. 'next' → logprob: -4.41104793548584
    6. 'min' → logprob: -4.66104793548584
    7. '=' → logprob: -4.78604793548584
    8. 'to' → logprob: -4.78604793548584
    9. 'result' → logprob: -5.16104793548584
    10. 'dp' → logprob: -5.16104793548584

Token 1003: 'up' (ID: 817)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002587550552561879
    2. '   ' → logprob: -6.00258731842041
    3. ' i' → logprob: -9.50258731842041
    4. ')' → logprob: -10.87758731842041
    5. '(i' → logprob: -12.12758731842041
    6. '       ' → logprob: -12.62758731842041
    7. ')
' → logprob: -12.87758731842041
    8. '```' → logprob: -13.37758731842041
    9. '
' → logprob: -14.00258731842041
    10. '`' → logprob: -14.12758731842041

Token 1004: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06621930748224258
    2. '   ' → logprob: -3.0662193298339844
    3. ' to' → logprob: -4.691219329833984
    4. 'i' → logprob: -4.816219329833984
    5. '       ' → logprob: -9.441219329833984
    6. '```' → logprob: -9.816219329833984
    7. '=' → logprob: -11.066219329833984
    8. '=i' → logprob: -11.316219329833984
    9. '_to' → logprob: -11.441219329833984
    10. ' i' → logprob: -11.941219329833984

Token 1005: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006953967968001962
    2. ' i' → logprob: -7.50069522857666
    3. '```' → logprob: -9.75069522857666
    4. '   ' → logprob: -10.25069522857666
    5. '`' → logprob: -10.25069522857666
    6. 'm' → logprob: -11.62569522857666
    7. 'min' → logprob: -13.25069522857666
    8. ')' → logprob: -14.50069522857666
    9. '``' → logprob: -14.75069522857666
    10. '(i' → logprob: -14.87569522857666

Token 1006: ' steps' (ID: 10331)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1733589768409729
    2. ' +' → logprob: -2.673358917236328
    3. '   ' → logprob: -3.048358917236328
    4. '=' → logprob: -4.173358917236328
    5. ')' → logprob: -4.548358917236328
    6. '+i' → logprob: -5.298358917236328
    7. ',' → logprob: -5.798358917236328
    8. '```' → logprob: -5.923358917236328
    9. 'i' → logprob: -6.923358917236328
    10. ' =' → logprob: -7.548358917236328

Token 1007: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6139786839485168
    2. '=' → logprob: -1.488978624343872
    3. ')' → logprob: -2.363978624343872
    4. ' ahead' → logprob: -2.863978624343872
    5. 'ahead' → logprob: -3.488978624343872
    6. '=i' → logprob: -4.113978862762451
    7. '[i' → logprob: -4.863978862762451
    8. ' =' → logprob: -4.988978862762451
    9. '```' → logprob: -5.488978862762451
    10. ',' → logprob: -5.613978862762451

Token 1008: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5311222076416016
    2. 'val' → logprob: -1.4061222076416016
    3. 'res' → logprob: -2.5311222076416016
    4. 'dp' → logprob: -3.4061222076416016
    5. 'min' → logprob: -4.156122207641602
    6. 'cost' → logprob: -4.281122207641602
    7. '```' → logprob: -4.906122207641602
    8. 'cur' → logprob: -5.031122207641602
    9. 'steps' → logprob: -5.656122207641602
    10. 'next' → logprob: -6.406122207641602

Token 1009: ' tmp' (ID: 8919)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5438944101333618
    2. 'min' → logprob: -1.5438944101333618
    3. 'val' → logprob: -2.9188942909240723
    4. '   ' → logprob: -3.2938942909240723
    5. 'dp' → logprob: -3.2938942909240723
    6. 'right' → logprob: -3.6688942909240723
    7. 'r' → logprob: -3.9188942909240723
    8. 'cost' → logprob: -4.668894290924072
    9. 'steps' → logprob: -5.293894290924072
    10. 'l' → logprob: -5.293894290924072

Token 1010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254255712032318
    2. '=' → logprob: -1.6004256010055542
    3. '=min' → logprob: -11.725425720214844
    4. '_min' → logprob: -14.225425720214844
    5. '=_' → logprob: -14.225425720214844
    6. ' ' → logprob: -14.350425720214844
    7. ',' → logprob: -14.725425720214844
    8. ' ' → logprob: -14.850425720214844
    9. 'min' → logprob: -14.975425720214844
    10. '＝' → logprob: -15.600425720214844

Token 1011: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.006832113955169916
    2. ' st' → logprob: -5.006832122802734
    3. 'min' → logprob: -9.756832122802734
    4. '   ' → logprob: -10.131832122802734
    5. '1' → logprob: -11.256832122802734
    6. '	st' → logprob: -13.381832122802734
    7. ' min' → logprob: -13.756832122802734
    8. 'inf' → logprob: -14.131832122802734
    9. ' ' → logprob: -14.881832122802734
    10. '0' → logprob: -14.881832122802734

Token 1012: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005045388825237751
    2. 'get' → logprob: -7.625504493713379
    3. '.' → logprob: -11.625504493713379
    4. '   ' → logprob: -12.875504493713379
    5. ' .' → logprob: -13.375504493713379
    6. '_get' → logprob: -13.875504493713379
    7. ' ' → logprob: -14.375504493713379
    8. '```' → logprob: -14.875504493713379
    9. 's' → logprob: -15.125504493713379
    10. '._' → logprob: -16.438005447387695

Token 1013: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0028582511004060507
    2. '(i' → logprob: -6.0028581619262695
    3. 'val' → logprob: -7.8778581619262695
    4. 'Val' → logprob: -14.25285816192627
    5. '_VAL' → logprob: -14.75285816192627
    6. '_min' → logprob: -15.12785816192627
    7. '[i' → logprob: -15.25285816192627
    8. 'i' → logprob: -15.25285816192627
    9. 'v' → logprob: -15.37785816192627
    10. '((' → logprob: -15.75285816192627

Token 1014: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.875007629394531
    3. '((' → logprob: -14.250007629394531
    4. 'i' → logprob: -15.625007629394531
    5. '(
' → logprob: -15.625007629394531
    6. '   ' → logprob: -17.37500762939453
    7. '```' → logprob: -17.62500762939453
    8. ' (' → logprob: -18.50000762939453
    9. '(I' → logprob: -20.50000762939453
    10. '(ii' → logprob: -20.75000762939453

Token 1015: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028397241607308388
    2. ' +' → logprob: -4.403397083282471
    3. 'i' → logprob: -4.778397083282471
    4. '1' → logprob: -5.528397083282471
    5. ',' → logprob: -6.278397083282471
    6. '+i' → logprob: -6.778397083282471
    7. ' i' → logprob: -9.153397560119629
    8. ',i' → logprob: -9.403397560119629
    9. '+,' → logprob: -9.528397560119629
    10. '(i' → logprob: -9.903397560119629

Token 1016: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '```' → logprob: -16.750003814697266
    5. '2' → logprob: -18.375003814697266
    6. '
' → logprob: -18.687503814697266
    7. '+' → logprob: -19.125003814697266
    8. '１' → logprob: -20.000003814697266
    9. '    ' → logprob: -20.125003814697266
    10. '۱' → logprob: -20.187503814697266

Token 1017: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -17.375001907348633
    5. '
' → logprob: -17.500001907348633
    6. '2' → logprob: -18.562501907348633
    7. '１' → logprob: -19.500001907348633
    8. '``' → logprob: -19.937501907348633
    9. '0' → logprob: -20.000001907348633
    10. '۱' → logprob: -20.062501907348633

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003242951352149248
    2. ',i' → logprob: -5.7532429695129395
    3. ',min' → logprob: -10.128242492675781
    4. ' ,' → logprob: -10.878242492675781
    5. 'i' → logprob: -13.503242492675781
    6. '   ' → logprob: -13.628242492675781
    7. ',
' → logprob: -14.003242492675781
    8. 'min' → logprob: -14.128242492675781
    9. ',max' → logprob: -14.253242492675781
    10. ',m' → logprob: -14.628242492675781

Token 1019: ' min' (ID: 1349)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3489345610141754
    2. 'min' → logprob: -1.223934531211853
    3. ' min' → logprob: -8.348934173583984
    4. '   ' → logprob: -8.848934173583984
    5. ' i' → logprob: -9.223934173583984
    6. '(min' → logprob: -12.973934173583984
    7. '(i' → logprob: -13.098934173583984
    8. 'max' → logprob: -13.473934173583984
    9. '	min' → logprob: -13.723934173583984
    10. '  ' → logprob: -14.348934173583984

Token 1020: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029759865254163742
    2. '(n' → logprob: -3.5297598838806152
    3. '(' → logprob: -11.779759407043457
    4. '((' → logprob: -14.529759407043457
    5. 'i' → logprob: -14.654759407043457
    6. 'n' → logprob: -15.404759407043457
    7. '(
' → logprob: -16.029760360717773
    8. '```' → logprob: -16.154760360717773
    9. ')i' → logprob: -16.404760360717773
    10. ')(' → logprob: -16.529760360717773

Token 1021: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4826410412788391
    2. '+' → logprob: -0.9826410412788391
    3. '+m' → logprob: -4.982641220092773
    4. '+n' → logprob: -7.232641220092773
    5. '+i' → logprob: -8.232641220092773
    6. '(n' → logprob: -8.607641220092773
    7. 'm' → logprob: -8.857641220092773
    8. '(m' → logprob: -9.232641220092773
    9. '(i' → logprob: -9.732641220092773
    10. 'i' → logprob: -9.857641220092773

Token 1022: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37110862135887146
    2. 'n' → logprob: -1.2461086511611938
    3. 'm' → logprob: -3.9961085319519043
    4. '(n' → logprob: -6.121108531951904
    5. '(i' → logprob: -6.621108531951904
    6. ' i' → logprob: -8.871109008789062
    7. '(m' → logprob: -8.996109008789062
    8. ' n' → logprob: -9.246109008789062
    9. '   ' → logprob: -9.621109008789062
    10. '+' → logprob: -10.496109008789062

Token 1023: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14306865632534027
    2. 'n' → logprob: -2.018068552017212
    3. ' i' → logprob: -8.268068313598633
    4. ' n' → logprob: -9.768068313598633
    5. '(n' → logprob: -10.393068313598633
    6. '(i' → logprob: -11.143068313598633
    7. 'm' → logprob: -11.143068313598633
    8. '   ' → logprob: -11.893068313598633
    9. '+' → logprob: -12.893068313598633
    10. '{i' → logprob: -13.393068313598633

Token 1024: ' +' (ID: 659)
  Prédit: '+m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.527508020401001
    2. ' +' → logprob: -1.152508020401001
    3. '+' → logprob: -2.527508020401001
    4. '(m' → logprob: -5.152507781982422
    5. ',' → logprob: -5.652507781982422
    6. '```' → logprob: -6.902507781982422
    7. '(' → logprob: -7.152507781982422
    8. 'm' → logprob: -7.277507781982422
    9. '(i' → logprob: -7.277507781982422
    10. '+n' → logprob: -7.527507781982422

Token 1025: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029809851199388504
    2. '(m' → logprob: -3.5298099517822266
    3. ' m' → logprob: -9.904809951782227
    4. '(' → logprob: -12.779809951782227
    5. ' (' → logprob: -12.904809951782227
    6. '```' → logprob: -13.779809951782227
    7. ')m' → logprob: -14.154809951782227
    8. ')' → logprob: -14.279809951782227
    9. '+m' → logprob: -14.654809951782227
    10. '[m' → logprob: -14.904809951782227

Token 1026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03230394050478935
    2. ',r' → logprob: -3.532304048538208
    3. '(r' → logprob: -7.282303810119629
    4. ',n' → logprob: -7.407303810119629
    5. '(n' → logprob: -8.032303810119629
    6. '```' → logprob: -8.532303810119629
    7. '+r' → logprob: -8.907303810119629
    8. '+' → logprob: -9.032303810119629
    9. ',i' → logprob: -9.407303810119629
    10. 'r' → logprob: -9.657303810119629

Token 1027: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.9875325708417222e-05
    2. '   ' → logprob: -11.125029563903809
    3. ' n' → logprob: -11.500029563903809
    4. '(n' → logprob: -13.000029563903809
    5. 'st' → logprob: -14.125029563903809
    6. '	n' → logprob: -14.500029563903809
    7. '```' → logprob: -14.875029563903809
    8. '       ' → logprob: -14.875029563903809
    9. ')' → logprob: -15.625029563903809
    10. '           ' → logprob: -15.625029563903809

Token 1028: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004625699482858181
    2. ' +' → logprob: -5.3796257972717285
    3. '+
' → logprob: -12.87962532043457
    4. ')' → logprob: -13.50462532043457
    5. ')+' → logprob: -14.50462532043457
    6. '   ' → logprob: -15.12962532043457
    7. '+n' → logprob: -15.12962532043457
    8. '```' → logprob: -15.25462532043457
    9. 'n' → logprob: -15.37962532043457
    10. '()+' → logprob: -17.37962532043457

Token 1029: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '+' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.875000953674316
    5. ')' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '`' → logprob: -18.625
    8. '```' → logprob: -18.625
    9. 'n' → logprob: -19.1875
    10. 'i' → logprob: -19.5

Token 1030: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.812508583068848
    4. '+' → logprob: -14.937508583068848
    5. '
' → logprob: -15.187508583068848
    6. '2' → logprob: -15.437508583068848
    7. '```' → logprob: -15.937508583068848
    8. '`' → logprob: -16.250009536743164
    9. ')' → logprob: -16.750009536743164
    10. '``' → logprob: -16.875009536743164

Token 1031: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12969255447387695
    2. '))' → logprob: -2.129692554473877
    3. ')+' → logprob: -6.129692554473877
    4. '))
' → logprob: -8.004692077636719
    5. ')
' → logprob: -9.004692077636719
    6. '))+' → logprob: -9.754692077636719
    7. ')))' → logprob: -10.629692077636719
    8. '())' → logprob: -11.504692077636719
    9. ' )' → logprob: -11.879692077636719
    10. '()' → logprob: -12.004692077636719

Token 1032: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2533310055732727
    2. '+' → logprob: -2.253330945968628
    3. '
' → logprob: -2.253330945968628
    4. 'tmp' → logprob: -4.878331184387207
    5. ' +' → logprob: -6.753331184387207
    6. ')' → logprob: -7.378331184387207
    7. 'if' → logprob: -7.378331184387207
    8. ')
' → logprob: -7.753331184387207
    9. '
' → logprob: -7.878331184387207
    10. '    
' → logprob: -7.878331184387207

Token 1033: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -18.5
    5. '`' → logprob: -19.375
    6. '
' → logprob: -19.75
    7. '+' → logprob: -20.25
    8. '(' → logprob: -20.75
    9. '``' → logprob: -21.875
    10. '**' → logprob: -21.875

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '+' → logprob: -18.625
    5. '```' → logprob: -19.125
    6. '`' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. '  ' → logprob: -20.375
    9. '(' → logprob: -20.5
    10. '<|end|>' → logprob: -20.875

Token 1035: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013105978723615408
    2. '
' → logprob: -6.8763108253479
    3. '    
' → logprob: -9.501310348510742
    4. '<|end|>' → logprob: -9.751310348510742
    5. 'st' → logprob: -9.876310348510742
    6. '       ' → logprob: -11.126310348510742
    7. '  
' → logprob: -11.376310348510742
    8. '  ' → logprob: -11.376310348510742
    9. ' if' → logprob: -11.501310348510742
    10. '	st' → logprob: -11.626310348510742

Token 1036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033347986172884703
    2. 'st' → logprob: -5.753334999084473
    3. '```' → logprob: -10.128334999084473
    4. '<|end|>' → logprob: -10.628334999084473
    5. 'if' → logprob: -10.878334999084473
    6. ' st' → logprob: -10.878334999084473
    7. '       ' → logprob: -11.003334999084473
    8. ' if' → logprob: -11.378334999084473
    9. '
' → logprob: -12.128334999084473
    10. '	st' → logprob: -12.503334999084473

Token 1037: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -0.038882218301296234
    2. '   ' → logprob: -3.288882255554199
    3. 'if' → logprob: -7.163882255554199
    4. ' st' → logprob: -9.9138822555542
    5. 'try' → logprob: -12.6638822555542
    6. ' if' → logprob: -12.7888822555542
    7. '       ' → logprob: -13.0388822555542
    8. '  ' → logprob: -13.5388822555542
    9. '	st' → logprob: -14.0388822555542
    10. '```' → logprob: -14.0388822555542

Token 1038: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -4.842555426876061e-06
    2. 'update' → logprob: -12.625004768371582
    3. '.' → logprob: -13.500004768371582
    4. '`.' → logprob: -18.0000057220459
    5. '>.' → logprob: -18.0000057220459
    6. '```' → logprob: -18.0000057220459
    7. '.up' → logprob: -18.2500057220459
    8. '.write' → logprob: -18.8750057220459
    9. '.setdefault' → logprob: -18.8750057220459
    10. ' .' → logprob: -18.8750057220459

Token 1039: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.4868770196917467e-05
    2. 'i' → logprob: -10.750024795532227
    3. '(' → logprob: -12.750024795532227
    4. '(
' → logprob: -15.500024795532227
    5. ' i' → logprob: -16.125024795532227
    6. ' (' → logprob: -17.250024795532227
    7. ')i' → logprob: -17.875024795532227
    8. '<|end|>' → logprob: -17.875024795532227
    9. '	i' → logprob: -18.000024795532227
    10. ',i' → logprob: -18.500024795532227

Token 1040: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018708095885813236
    2. ',i' → logprob: -7.126870632171631
    3. ' ,' → logprob: -7.376870632171631
    4. 'i' → logprob: -8.126871109008789
    5. ',tmp' → logprob: -9.626871109008789
    6. ' i' → logprob: -10.126871109008789
    7. '(i' → logprob: -11.501871109008789
    8. '`,' → logprob: -11.751871109008789
    9. 'tmp' → logprob: -12.126871109008789
    10. ')' → logprob: -12.126871109008789

Token 1041: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0002036595979006961
    2. ' tmp' → logprob: -8.500204086303711
    3. 'temp' → logprob: -16.25020408630371
    4. '(tmp' → logprob: -16.75020408630371
    5. '	tmp' → logprob: -17.12520408630371
    6. '/tmp' → logprob: -17.37520408630371
    7. '[tmp' → logprob: -17.87520408630371
    8. '   ' → logprob: -17.87520408630371
    9. '$tmp' → logprob: -17.87520408630371
    10. 'txt' → logprob: -19.75020408630371

Token 1042: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062972805462777615
    2. '<|end|>' → logprob: -5.1312971115112305
    3. '
' → logprob: -8.88129711151123
    4. '<|end|>' → logprob: -9.13129711151123
    5. '   ' → logprob: -10.00629711151123
    6. ' )' → logprob: -10.88129711151123
    7. '#' → logprob: -11.13129711151123
    8. ')
' → logprob: -11.25629711151123
    9. ')return' → logprob: -11.88129711151123
    10. '```' → logprob: -12.50629711151123

Token 1043: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9095728993415833
    2. 'ans' → logprob: -1.6595728397369385
    3. 'path' → logprob: -1.6595728397369385
    4. 'if' → logprob: -2.1595728397369385
    5. 'answer' → logprob: -3.2845728397369385
    6. 'dp' → logprob: -3.9095728397369385
    7. 'result' → logprob: -4.159573078155518
    8. 'steps' → logprob: -4.534573078155518
    9. '#' → logprob: -5.034573078155518
    10. 'from' → logprob: -5.159573078155518

Token 1044: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01484717521816492
    2. 'ans' → logprob: -5.014847278594971
    3. 'res' → logprob: -5.139847278594971
    4. 'answer' → logprob: -7.389847278594971
    5. '#' → logprob: -7.514847278594971
    6. 'result' → logprob: -8.139846801757812
    7. 'pos' → logprob: -8.514846801757812
    8. 'dp' → logprob: -8.764846801757812
    9. 'from' → logprob: -9.139846801757812
    10. 'path' → logprob: -9.139846801757812

Token 1045: ' the' (ID: 290)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -6.988221684878226e-06
    2. ' st' → logprob: -12.000006675720215
    3. '(st' → logprob: -14.375006675720215
    4. 's' → logprob: -16.37500762939453
    5. '
' → logprob: -17.62500762939453
    6. 'tmp' → logprob: -17.62500762939453
    7. '0' → logprob: -19.25000762939453
    8. '   ' → logprob: -19.37500762939453
    9. '```' → logprob: -19.50000762939453
    10. '	st' → logprob: -20.12500762939453

Token 1046: ' start' (ID: 1604)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.4855663721391466e-05
    2. ' st' → logprob: -11.625015258789062
    3. 's' → logprob: -12.125015258789062
    4. '
' → logprob: -15.625015258789062
    5. '0' → logprob: -16.125015258789062
    6. '```' → logprob: -16.250015258789062
    7. '#' → logprob: -17.250015258789062
    8. '(st' → logprob: -17.250015258789062
    9. 'n' → logprob: -17.875015258789062
    10. 'tmp' → logprob: -18.250015258789062

Token 1047: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.38816937804222107
    2. '==' → logprob: -2.263169288635254
    3. 'pos' → logprob: -2.638169288635254
    4. ' ==' → logprob: -2.638169288635254
    5. '[' → logprob: -3.513169288635254
    6. '0' → logprob: -4.388169288635254
    7. 'if' → logprob: -4.513169288635254
    8. 'index' → logprob: -5.013169288635254
    9. ' position' → logprob: -5.388169288635254
    10. 'point' → logprob: -5.888169288635254

Token 1048: ' is' (ID: 382)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9647695422172546
    2. '==' → logprob: -0.9647695422172546
    3. 'is' → logprob: -2.5897696018218994
    4. 's' → logprob: -2.7147696018218994
    5. 'st' → logprob: -2.7147696018218994
    6. ' ==' → logprob: -4.58976936340332
    7. 'has' → logprob: -5.46476936340332
    8. '>' → logprob: -5.83976936340332
    9. 'self' → logprob: -5.83976936340332
    10. 'node' → logprob: -6.21476936340332

Token 1049: ' unreachable' (ID: 171303)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.007549128029495478
    2. 'INF' → logprob: -5.007549285888672
    3. ' st' → logprob: -7.382549285888672
    4. 'inf' → logprob: -9.257549285888672
    5. 'self' → logprob: -9.882549285888672
    6. ' INF' → logprob: -11.507549285888672
    7. 'in' → logprob: -11.632549285888672
    8. 'still' → logprob: -11.882549285888672
    9. '0' → logprob: -11.882549285888672
    10. 'not' → logprob: -12.007549285888672

Token 1050: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017422933597117662
    2. 'or' → logprob: -7.751742362976074
    3. '==' → logprob: -7.751742362976074
    4. 'res' → logprob: -8.626742362976074
    5. 'result' → logprob: -8.751742362976074
    6. '```' → logprob: -8.751742362976074
    7. '>=' → logprob: -9.126742362976074
    8. ' if' → logprob: -9.876742362976074
    9. ' or' → logprob: -10.126742362976074
    10. ':' → logprob: -10.251742362976074

Token 1051: ' output' (ID: 4733)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06352546066045761
    2. 'print' → logprob: -3.188525438308716
    3. 'ans' → logprob: -4.563525676727295
    4. 'res' → logprob: -4.813525676727295
    5. 'result' → logprob: -6.813525676727295
    6. 'answer' → logprob: -8.438525199890137
    7. ' if' → logprob: -8.688525199890137
    8. 'import' → logprob: -9.063525199890137
    9. 'pos' → logprob: -9.688525199890137
    10. 'ret' → logprob: -10.313525199890137

Token 1052: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003509676083922386
    2. '-st' → logprob: -6.253509521484375
    3. ' -' → logprob: -7.503509521484375
    4. 'print' → logprob: -7.753509521484375
    5. '-print' → logprob: -8.128509521484375
    6. 'st' → logprob: -9.003509521484375
    7. '"-' → logprob: -9.878509521484375
    8. '-im' → logprob: -10.878509521484375
    9. '-in' → logprob: -11.003509521484375
    10. '-INF' → logprob: -11.253509521484375

Token 1053: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '`' → logprob: -16.375001907348633
    4. '2' → logprob: -16.750001907348633
    5. 'print' → logprob: -16.875001907348633
    6. '11' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. '10' → logprob: -17.500001907348633
    9. '
' → logprob: -18.000001907348633
    10. '``' → logprob: -18.125001907348633

Token 1054: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05302494764328003
    2. 'print' → logprob: -3.053025007247925
    3. '```' → logprob: -5.553024768829346
    4. 'result' → logprob: -8.178025245666504
    5. '``' → logprob: -9.053025245666504
    6. ' if' → logprob: -10.053025245666504
    7. 'res' → logprob: -10.178025245666504
    8. '
' → logprob: -10.678025245666504
    9. 'answer' → logprob: -11.053025245666504
    10. 'val' → logprob: -11.053025245666504

Token 1055: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03825951740145683
    2. 'print' → logprob: -3.288259506225586
    3. '```' → logprob: -8.663259506225586
    4. 'result' → logprob: -10.413259506225586
    5. 'res' → logprob: -11.538259506225586
    6. ' if' → logprob: -13.163259506225586
    7. 'ans' → logprob: -13.538259506225586
    8. 'val' → logprob: -13.538259506225586
    9. '``' → logprob: -15.163259506225586
    10. '
' → logprob: -15.538259506225586

Token 1056: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -3.619311974034645e-05
    2. ' st' → logprob: -10.250036239624023
    3. '(st' → logprob: -14.250036239624023
    4. 's' → logprob: -16.625036239624023
    5. '	st' → logprob: -17.750036239624023
    6. '   ' → logprob: -18.750036239624023
    7. '```' → logprob: -19.500036239624023
    8. ' ' → logprob: -20.000036239624023
    9. '_st' → logprob: -20.375036239624023
    10. 'St' → logprob: -20.375036239624023

Token 1057: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.000429596402682364
    2. 'get' → logprob: -8.250429153442383
    3. '.' → logprob: -9.125429153442383
    4. '.node' → logprob: -10.250429153442383
    5. '```' → logprob: -12.125429153442383
    6. '   ' → logprob: -12.250429153442383
    7. 'node' → logprob: -12.500429153442383
    8. ' .' → logprob: -13.250429153442383
    9. '.update' → logprob: -13.375429153442383
    10. '_get' → logprob: -13.500429153442383

Token 1058: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.023302195593714714
    2. '(' → logprob: -3.7733020782470703
    3. 'val' → logprob: -10.02330207824707
    4. '0' → logprob: -12.52330207824707
    5. 'Val' → logprob: -12.64830207824707
    6. '_VAL' → logprob: -13.39830207824707
    7. '_pos' → logprob: -13.52330207824707
    8. '_' → logprob: -14.14830207824707
    9. '(i' → logprob: -14.52330207824707
    10. '```' → logprob: -15.64830207824707

Token 1059: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001612267515156418
    2. '0' → logprob: -8.750161170959473
    3. ' (' → logprob: -13.000161170959473
    4. '(
' → logprob: -14.875161170959473
    5. '```' → logprob: -16.62516212463379
    6. '((' → logprob: -19.37516212463379
    7. ' ' → logprob: -19.50016212463379
    8. 'def' → logprob: -20.37516212463379
    9. '1' → logprob: -20.37516212463379
    10. ')(' → logprob: -20.50016212463379

Token 1060: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '(' → logprob: -19.25
    4. '   ' → logprob: -20.25
    5. '０' → logprob: -20.625
    6. '۰' → logprob: -20.875
    7. '```' → logprob: -21.5
    8. ')' → logprob: -22.125
    9. '00' → logprob: -23.125
    10. '०' → logprob: -23.5

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020759211853146553
    2. '(' → logprob: -4.520759105682373
    3. '0' → logprob: -4.645759105682373
    4. ' ,' → logprob: -10.145759582519531
    5. ',(' → logprob: -11.645759582519531
    6. ',
' → logprob: -12.645759582519531
    7. '```' → logprob: -12.645759582519531
    8. ' (' → logprob: -12.895759582519531
    9. '`,' → logprob: -13.520759582519531
    10. '(),' → logprob: -13.895759582519531

Token 1062: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.25
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -19.625
    5. 'n' → logprob: -20.75
    6. '   ' → logprob: -21.5
    7. '１' → logprob: -21.75
    8. ')' → logprob: -21.75
    9. '`' → logprob: -22.125
    10. '' → logprob: -22.5

Token 1063: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '0' → logprob: -18.125
    4. 'n' → logprob: -18.625
    5. '```' → logprob: -19.0
    6. '(' → logprob: -20.125
    7. '   ' → logprob: -20.125
    8. '１' → logprob: -20.875
    9. '' → logprob: -21.125
    10. ')' → logprob: -21.125

Token 1064: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008341164328157902
    2. '```' → logprob: -6.133341312408447
    3. '[' → logprob: -6.383341312408447
    4. '()' → logprob: -6.508341312408447
    5. '(' → logprob: -6.633341312408447
    6. '0' → logprob: -7.633341312408447
    7. ')==' → logprob: -8.008340835571289
    8. '>' → logprob: -8.258340835571289
    9. '==' → logprob: -8.258340835571289
    10. '``' → logprob: -9.508340835571289

Token 1065: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.034312181174755096
    2. ' ==' → logprob: -3.5343122482299805
    3. '>=' → logprob: -5.4093122482299805
    4. ' >=' → logprob: -10.28431224822998
    5. '()==' → logprob: -11.03431224822998
    6. '>' → logprob: -11.40931224822998
    7. '   ' → logprob: -12.03431224822998
    8. '```' → logprob: -12.65931224822998
    9. '==
' → logprob: -12.90931224822998
    10. '===' → logprob: -14.03431224822998

Token 1066: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.128163257315464e-07
    2. '10' → logprob: -15.125
    3. 'IN' → logprob: -18.375
    4. ' INF' → logprob: -18.375
    5. '_INF' → logprob: -19.0
    6. '1' → logprob: -20.25
    7. '100' → logprob: -20.25
    8. '   ' → logprob: -21.25
    9. 'inf' → logprob: -22.125
    10. 'INT' → logprob: -22.25

Token 1067: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16103312373161316
    2. ':' → logprob: -1.9110331535339355
    3. '   ' → logprob: -7.5360331535339355
    4. ':return' → logprob: -8.661032676696777
    5. '):
' → logprob: -10.161032676696777
    6. 'print' → logprob: -10.411032676696777
    7. '==' → logprob: -11.411032676696777
    8. '():
' → logprob: -11.786032676696777
    9. ':
' → logprob: -12.661032676696777
    10. ' print' → logprob: -12.911032676696777

Token 1068: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04866821691393852
    2. '   ' → logprob: -3.048668146133423
    3. ' print' → logprob: -10.048667907714844
    4. '```' → logprob: -10.298667907714844
    5. '	print' → logprob: -12.548667907714844
    6. '``' → logprob: -15.423667907714844
    7. '       ' → logprob: -17.423667907714844
    8. '`' → logprob: -17.423667907714844
    9. '-print' → logprob: -17.673667907714844
    10. '#print' → logprob: -17.798667907714844

Token 1069: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.961759259458631e-06
    2. '```' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. ' print' → logprob: -16.8750057220459
    5. '``' → logprob: -17.3750057220459
    6. '
' → logprob: -19.3750057220459
    7. '`' → logprob: -20.0000057220459
    8. '	print' → logprob: -20.3750057220459
    9. '    
' → logprob: -21.0000057220459
    10. '#print' → logprob: -21.3750057220459

Token 1070: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -14.875000953674316
    3. '(-' → logprob: -16.625
    4. '-print' → logprob: -21.125
    5. '\-' → logprob: -21.625
    6. '-end' → logprob: -21.75
    7. '()-' → logprob: -22.25
    8. '-int' → logprob: -22.375
    9. '−' → logprob: -22.375
    10. '-im' → logprob: -22.875

Token 1071: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -18.25
    3. '2' → logprob: -18.75
    4. '9' → logprob: -18.75
    5. ')' → logprob: -19.375
    6. '')' → logprob: -19.875
    7. '4' → logprob: -20.25
    8. '`' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '3' → logprob: -20.875

Token 1072: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46615472435951233
    2. ')
' → logprob: -1.71615469455719
    3. '   ' → logprob: -1.71615469455719
    4. 'else' → logprob: -4.3411545753479
    5. ')
' → logprob: -10.216155052185059
    6. ')return' → logprob: -11.966155052185059
    7. ' )' → logprob: -12.716155052185059
    8. ')`
' → logprob: -13.091155052185059
    9. ')#' → logprob: -13.466155052185059
    10. '")' → logprob: -13.716155052185059

Token 1073: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015029559144750237
    2. '   ' → logprob: -6.501502990722656
    3. '```' → logprob: -15.001502990722656
    4. 'elif' → logprob: -15.251502990722656
    5. ' else' → logprob: -17.376502990722656
    6. '    
' → logprob: -17.626502990722656
    7. '_else' → logprob: -18.376502990722656
    8. 'import' → logprob: -19.001502990722656
    9. 'elses' → logprob: -19.251502990722656
    10. '
' → logprob: -19.876502990722656

Token 1074: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.029761482030153275
    2. '   ' → logprob: -3.529761552810669
    3. 'elif' → logprob: -11.52976131439209
    4. '    
' → logprob: -14.52976131439209
    5. '```' → logprob: -15.27976131439209
    6. '_else' → logprob: -16.154762268066406
    7. ' else' → logprob: -16.279762268066406
    8. '
' → logprob: -16.779762268066406
    9. 'import' → logprob: -16.904762268066406
    10. 'e' → logprob: -17.154762268066406

Token 1075: '()

' (ID: 5874)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0856315940618515
    2. 'pos' → logprob: -3.3356316089630127
    3. 'ans' → logprob: -3.9606316089630127
    4. 'res' → logprob: -4.085631370544434
    5. 'steps' → logprob: -6.085631370544434
    6. 'cur' → logprob: -6.210631370544434
    7. 'else' → logprob: -6.335631370544434
    8. 'dp' → logprob: -6.835631370544434
    9. '#' → logprob: -7.335631370544434
    10. 'result' → logprob: -7.710631370544434

Token 1076: '#' (ID: 2)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3206098973751068
    2. 'path' → logprob: -2.0706098079681396
    3. 'cur' → logprob: -2.8206098079681396
    4. 'res' → logprob: -2.8206098079681396
    5. 'ans' → logprob: -3.8206098079681396
    6. 'current' → logprob: -6.070610046386719
    7. 'position' → logprob: -6.695610046386719
    8. 'curr' → logprob: -6.695610046386719
    9. 'steps' → logprob: -7.445610046386719
    10. 'result' → logprob: -7.695610046386719

Token 1077: ' Re' (ID: 907)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5884351134300232
    2. 'res' → logprob: -1.963435173034668
    3. 'path' → logprob: -1.963435173034668
    4. 'ans' → logprob: -2.588435173034668
    5. 'cur' → logprob: -2.588435173034668
    6. 'current' → logprob: -5.588435173034668
    7. 'curr' → logprob: -5.838435173034668
    8. 'answer' → logprob: -6.338435173034668
    9. 'now' → logprob: -6.463435173034668
    10. 'result' → logprob: -6.963435173034668

Token 1078: 'construct' (ID: 17936)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019208014011383057
    2. 'res' → logprob: -4.644207954406738
    3. 'ans' → logprob: -5.519207954406738
    4. 'pos' → logprob: -6.019207954406738
    5. 'path' → logprob: -6.644207954406738
    6. 'result' → logprob: -7.769207954406738
    7. '#' → logprob: -8.394207954406738
    8. 'construction' → logprob: -8.644207954406738
    9. 'construct' → logprob: -8.769207954406738
    10. 'answer' → logprob: -9.144207954406738

Token 1079: ' the' (ID: 290)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.04170411825180054
    2. 'pos' → logprob: -3.7917041778564453
    3. 'ans' → logprob: -4.291704177856445
    4. ' path' → logprob: -5.791704177856445
    5. 'res' → logprob: -7.166704177856445
    6. '```' → logprob: -7.916704177856445
    7. 'cur' → logprob: -8.541704177856445
    8. 'answer' → logprob: -9.041704177856445
    9. '_path' → logprob: -10.791704177856445
    10. '   ' → logprob: -11.166704177856445

Token 1080: ' actual' (ID: 6290)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00030972150852903724
    2. ' path' → logprob: -9.250309944152832
    3. 'ans' → logprob: -9.500309944152832
    4. 'pos' → logprob: -9.625309944152832
    5. 'answer' → logprob: -10.375309944152832
    6. 'res' → logprob: -10.625309944152832
    7. '_path' → logprob: -12.375309944152832
    8. 'route' → logprob: -12.375309944152832
    9. 'result' → logprob: -12.750309944152832
    10. '#' → logprob: -13.125309944152832

Token 1081: ' jump' (ID: 13843)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.003550178138539195
    2. ' path' → logprob: -5.878550052642822
    3. 'steps' → logprob: -7.628550052642822
    4. '_path' → logprob: -9.37855052947998
    5. 'answer' → logprob: -9.50355052947998
    6. '```' → logprob: -10.25355052947998
    7. 'pos' → logprob: -10.37855052947998
    8. 'step' → logprob: -11.87855052947998
    9. 'ans' → logprob: -12.50355052947998
    10. 'jump' → logprob: -12.62855052947998

Token 1082: ' sequence' (ID: 16281)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00044926130794920027
    2. 'sequence' → logprob: -8.375449180603027
    3. '_path' → logprob: -9.375449180603027
    4. 'route' → logprob: -10.250449180603027
    5. ' path' → logprob: -11.000449180603027
    6. 'i' → logprob: -11.000449180603027
    7. 'points' → logprob: -11.250449180603027
    8. 'steps' → logprob: -11.500449180603027
    9. 'positions' → logprob: -11.625449180603027
    10. 'paths' → logprob: -11.750449180603027

Token 1083: ' to' (ID: 316)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5823853015899658
    2. 'pos' → logprob: -1.0823853015899658
    3. 'res' → logprob: -2.832385301589966
    4. 'ans' → logprob: -3.582385301589966
    5. 'cur' → logprob: -4.457385063171387
    6. '```' → logprob: -6.707385063171387
    7. 'result' → logprob: -7.207385063171387
    8. 'answer' → logprob: -7.457385063171387
    9. '   ' → logprob: -7.707385063171387
    10. '
' → logprob: -8.207385063171387

Token 1084: ' reach' (ID: 7627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016618048772215843
    2. 'reach' → logprob: -4.891618251800537
    3. '[]' → logprob: -6.391618251800537
    4. ' print' → logprob: -6.766618251800537
    5. 'go' → logprob: -6.891618251800537
    6. ' reach' → logprob: -6.891618251800537
    7. 'get' → logprob: -7.391618251800537
    8. 'output' → logprob: -7.891618251800537
    9. 'complete' → logprob: -8.141617774963379
    10. '[' → logprob: -8.266617774963379

Token 1085: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06377872079610825
    2. 'the' → logprob: -2.8137786388397217
    3. '[n' → logprob: -7.313778877258301
    4. ' n' → logprob: -7.813778877258301
    5. '```' → logprob: -8.1887788772583
    6. '
' → logprob: -8.9387788772583
    7. ' the' → logprob: -9.1887788772583
    8. 'end' → logprob: -9.6887788772583
    9. '0' → logprob: -9.8137788772583
    10. '1' → logprob: -11.0637788772583

Token 1086: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.003771458752453327
    2. 'n' → logprob: -5.6287713050842285
    3. 'goal' → logprob: -9.003771781921387
    4. ' end' → logprob: -10.378771781921387
    5. '=end' → logprob: -12.503771781921387
    6. '```' → logprob: -12.503771781921387
    7. 'exit' → logprob: -12.878771781921387
    8. '#' → logprob: -13.003771781921387
    9. 'last' → logprob: -13.628771781921387
    10. 'print' → logprob: -14.253771781921387

Token 1087: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2759205400943756
    2. 'path' → logprob: -1.7759205102920532
    3. 'res' → logprob: -3.2759206295013428
    4. 'ans' → logprob: -3.7759206295013428
    5. 'cur' → logprob: -4.775920391082764
    6. 'current' → logprob: -7.275920391082764
    7. 'curr' → logprob: -7.525920391082764
    8. 'result' → logprob: -7.775920391082764
    9. 'position' → logprob: -8.025920867919922
    10. 'answer' → logprob: -8.150920867919922

Token 1088: 'ans' (ID: 616)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6478571891784668
    2. 'pos' → logprob: -0.8978571891784668
    3. 'res' → logprob: -2.897857189178467
    4. 'ans' → logprob: -4.647857189178467
    5. 'cur' → logprob: -5.647857189178467
    6. 'result' → logprob: -8.397857666015625
    7. 'curr' → logprob: -8.522857666015625
    8. 'current' → logprob: -8.647857666015625
    9. 'answer' → logprob: -8.897857666015625
    10. 'position' → logprob: -9.022857666015625

Token 1089: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133244514465332
    2. '=' → logprob: -1.3133244514465332
    3. '=[]' → logprob: -10.063323974609375
    4. '_' → logprob: -12.188323974609375
    5. ',' → logprob: -12.438323974609375
    6. '=[' → logprob: -12.563323974609375
    7. '[' → logprob: -12.813323974609375
    8. '[]' → logprob: -13.813323974609375
    9. '_=' → logprob: -14.313323974609375
    10. 's' → logprob: -14.438323974609375

Token 1090: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10246004164218903
    2. '[]
' → logprob: -2.3524601459503174
    3. '[' → logprob: -6.102459907531738
    4. '[]

' → logprob: -12.227459907531738
    5. '[start' → logprob: -12.977459907531738
    6. '[i' → logprob: -13.352459907531738
    7. '[j' → logprob: -13.977459907531738
    8. '[]}' → logprob: -14.602459907531738
    9. '[int' → logprob: -14.852459907531738
    10. '[user' → logprob: -14.977459907531738

Token 1091: 'ind' (ID: 521)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011146738193929195
    2. 'current' → logprob: -5.011146545410156
    3. 'cur' → logprob: -5.511146545410156
    4. 'i' → logprob: -8.511146545410156
    5. 'curr' → logprob: -9.261146545410156
    6. 'position' → logprob: -10.011146545410156
    7. '```' → logprob: -10.261146545410156
    8. 'now' → logprob: -12.886146545410156
    9. ' pos' → logprob: -15.136146545410156
    10. 'p' → logprob: -15.136146545410156

Token 1092: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1275065839290619
    2. ' =' → logprob: -2.1275064945220947
    3. 'ex' → logprob: -7.502506732940674
    4. 'x' → logprob: -11.127506256103516
    5. '=i' → logprob: -12.252506256103516
    6. '=int' → logprob: -12.877506256103516
    7. '=
' → logprob: -14.502506256103516
    8. '_=' → logprob: -14.627506256103516
    9. ' ' → logprob: -15.002506256103516
    10. 'ext' → logprob: -15.002506256103516

Token 1093: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'n' → logprob: -19.375
    4. '```' → logprob: -19.875
    5. '۰' → logprob: -20.5
    6. '=' → logprob: -21.25
    7. '０' → logprob: -22.0
    8. '00' → logprob: -22.125
    9. '   ' → logprob: -22.125
    10. '[' → logprob: -22.375

Token 1094: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'n' → logprob: -21.25
    4. '۰' → logprob: -21.625
    5. '00' → logprob: -22.375
    6. '```' → logprob: -22.625
    7. '=' → logprob: -22.875
    8. '000' → logprob: -22.875
    9. '[' → logprob: -22.875
    10. '０' → logprob: -23.25

Token 1095: '     ' (ID: 530)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001052103703841567
    2. ' while' → logprob: -7.001051902770996
    3. '```' → logprob: -9.376051902770996
    4. '
' → logprob: -10.376051902770996
    5. 'current' → logprob: -11.751051902770996
    6. 'prev' → logprob: -12.001051902770996
    7. 'for' → logprob: -13.251051902770996
    8. 'While' → logprob: -13.626051902770996
    9. 'pos' → logprob: -13.751051902770996
    10. 'length' → logprob: -13.876051902770996

Token 1096: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1589331030845642
    2. '
' → logprob: -2.033933162689209
    3. ' while' → logprob: -4.283933162689209
    4. ' 
' → logprob: -6.533933162689209
    5. '```' → logprob: -8.28393268585205
    6. 'for' → logprob: -8.53393268585205
    7. '+' → logprob: -8.53393268585205
    8. '  
' → logprob: -10.28393268585205
    9. 'While' → logprob: -10.28393268585205
    10. '' → logprob: -11.03393268585205

Token 1097: ' Current' (ID: 14536)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0001769616355886683
    2. 'pos' → logprob: -9.125177383422852
    3. 'current' → logprob: -10.500177383422852
    4. '
' → logprob: -10.875177383422852
    5. 'While' → logprob: -11.500177383422852
    6. ' while' → logprob: -12.500177383422852
    7. 'cur' → logprob: -12.875177383422852
    8. 'position' → logprob: -13.375177383422852
    9. 'curr' → logprob: -13.625177383422852
    10. 'prev' → logprob: -14.500177383422852

Token 1098: ' index' (ID: 3472)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.64311683177948
    2. 'pos' → logprob: -0.76811683177948
    3. ' position' → logprob: -5.6431169509887695
    4. 'ind' → logprob: -6.0181169509887695
    5. '+' → logprob: -6.3931169509887695
    6. '_pos' → logprob: -6.7681169509887695
    7. '=' → logprob: -7.8931169509887695
    8. '_position' → logprob: -8.14311695098877
    9. 'index' → logprob: -8.39311695098877
    10. '+=' → logprob: -8.64311695098877

Token 1099: ' (' (ID: 350)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18502658605575562
    2. '+' → logprob: -2.4350266456604004
    3. '
' → logprob: -2.8100266456604004
    4. ' while' → logprob: -4.5600266456604
    5. '```' → logprob: -5.3100266456604
    6. '+
' → logprob: -6.4350266456604
    7. '<|end|>' → logprob: -6.5600266456604
    8. 'for' → logprob: -7.6850266456604
    9. ' 
' → logprob: -8.060026168823242
    10. '+=' → logprob: -8.560026168823242

Token 1100: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006237810477614403
    2. ' )' → logprob: -5.756237983703613
    3. ')
' → logprob: -7.006237983703613
    4. '```' → logprob: -7.631237983703613
    5. '#' → logprob: -7.881237983703613
    6. '<|end|>' → logprob: -8.256237983703613
    7. '0' → logprob: -8.506237983703613
    8. '=' → logprob: -8.756237983703613
    9. 'while' → logprob: -8.756237983703613
    10. 'ind' → logprob: -8.881237983703613

Token 1101: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.334380567073822
    2. '+' → logprob: -1.7093806266784668
    3. '=' → logprob: -3.209380626678467
    4. ')
' → logprob: -3.209380626678467
    5. 'while' → logprob: -5.209380626678467
    6. '+=' → logprob: -5.334380626678467
    7. '
' → logprob: -5.709380626678467
    8. '```' → logprob: -6.209380626678467
    9. ' =' → logprob: -6.334380626678467
    10. ' +' → logprob: -7.084380626678467

Token 1102: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -12.875006675720215
    3. ' ' → logprob: -13.375006675720215
    4. 'ind' → logprob: -13.625006675720215
    5. '```' → logprob: -14.000006675720215
    6. '`' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.3750057220459
    8. ')
' → logprob: -17.2500057220459
    9. '#' → logprob: -17.3750057220459
    10. 'start' → logprob: -18.1250057220459

Token 1103: ' beginning' (ID: 10526)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002957783581223339
    2. '`' → logprob: -9.250295639038086
    3. 'start' → logprob: -9.250295639038086
    4. ')' → logprob: -10.500295639038086
    5. ' ' → logprob: -10.750295639038086
    6. '```' → logprob: -10.750295639038086
    7. 'current' → logprob: -11.125295639038086
    8. 'begin' → logprob: -12.375295639038086
    9. '#' → logprob: -13.250295639038086
    10. ')
' → logprob: -13.500295639038086

Token 1104: ')
' (ID: 446)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14693555235862732
    2. '+' → logprob: -3.02193546295166
    3. '
' → logprob: -3.02193546295166
    4. ')' → logprob: -3.64693546295166
    5. '```' → logprob: -5.14693546295166
    6. '<|end|>' → logprob: -5.77193546295166
    7. ' while' → logprob: -6.52193546295166
    8. ')
' → logprob: -6.77193546295166
    9. 'for' → logprob: -8.52193546295166
    10. 'While' → logprob: -9.02193546295166

Token 1105: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -3.786196975852363e-05
    2. ' while' → logprob: -11.000038146972656
    3. '```' → logprob: -11.375038146972656
    4. '
' → logprob: -12.000038146972656
    5. 'While' → logprob: -13.625038146972656
    6. 'current' → logprob: -15.000038146972656
    7. 'prev' → logprob: -15.125038146972656
    8. '	while' → logprob: -15.375038146972656
    9. 'wh' → logprob: -15.500038146972656
    10. 'last' → logprob: -15.625038146972656

Token 1106: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08212204277515411
    2. 'ind' → logprob: -3.2071220874786377
    3. 'i' → logprob: -3.4571220874786377
    4. '_i' → logprob: -6.207121849060059
    5. '_ind' → logprob: -6.582121849060059
    6. ' ind' → logprob: -6.582121849060059
    7. 'ans' → logprob: -7.582121849060059
    8. ' _' → logprob: -7.957121849060059
    9. ' i' → logprob: -8.582121849060059
    10. '_
' → logprob: -8.582121849060059

Token 1107: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2812310755252838
    2. ' in' → logprob: -1.4062310457229614
    3. '   ' → logprob: -10.781230926513672
    4. ',' → logprob: -10.906230926513672
    5. '1' → logprob: -11.156230926513672
    6. '=' → logprob: -11.906230926513672
    7. '0' → logprob: -12.031230926513672
    8. ' ' → logprob: -12.656230926513672
    9. '	in' → logprob: -12.656230926513672
    10. '_' → logprob: -13.031230926513672

Token 1108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004927450208924711
    2. ' range' → logprob: -7.625492572784424
    3. '_' → logprob: -13.000493049621582
    4. '   ' → logprob: -13.625493049621582
    5. 'in' → logprob: -14.625493049621582
    6. '(range' → logprob: -15.500493049621582
    7. ' ' → logprob: -15.750493049621582
    8. 'ra' → logprob: -16.500492095947266
    9. '
' → logprob: -16.625492095947266
    10. '[' → logprob: -17.125492095947266

Token 1109: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5994836091995239
    2. 'n' → logprob: -0.8494836091995239
    3. 'ind' → logprob: -4.349483489990234
    4. '0' → logprob: -5.599483489990234
    5. '(' → logprob: -6.099483489990234
    6. '   ' → logprob: -6.349483489990234
    7. 'ans' → logprob: -6.974483489990234
    8. '(n' → logprob: -7.099483489990234
    9. 'm' → logprob: -7.849483489990234
    10. '(ind' → logprob: -8.599483489990234

Token 1110: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00416850671172142
    2. '1' → logprob: -6.379168510437012
    3. 'ans' → logprob: -6.754168510437012
    4. '0' → logprob: -7.254168510437012
    5. 'm' → logprob: -8.879168510437012
    6. 'len' → logprob: -8.879168510437012
    7. '   ' → logprob: -9.379168510437012
    8. 'ind' → logprob: -9.379168510437012
    9. 'st' → logprob: -10.129168510437012
    10. ' n' → logprob: -10.379168510437012

Token 1111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003565977094694972
    2. ',n' → logprob: -5.878565788269043
    3. 'n' → logprob: -7.628565788269043
    4. '(n' → logprob: -8.878565788269043
    5. ' ,' → logprob: -9.503565788269043
    6. '   ' → logprob: -11.128565788269043
    7. '1' → logprob: -11.253565788269043
    8. '(' → logprob: -11.253565788269043
    9. 'm' → logprob: -12.128565788269043
    10. ',m' → logprob: -12.503565788269043

Token 1112: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4855663721391466e-05
    2. ' n' → logprob: -12.000015258789062
    3. '   ' → logprob: -12.500015258789062
    4. 'len' → logprob: -12.875015258789062
    5. 'm' → logprob: -13.500015258789062
    6. '
' → logprob: -15.500015258789062
    7. '(n' → logprob: -15.625015258789062
    8. '       ' → logprob: -16.125015258789062
    9. '	n' → logprob: -16.375015258789062
    10. '10' → logprob: -16.500015258789062

Token 1113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07890697568655014
    2. ' +' → logprob: -2.578907012939453
    3. ',' → logprob: -11.953907012939453
    4. '):
' → logprob: -12.328907012939453
    5. '   ' → logprob: -12.828907012939453
    6. '+
' → logprob: -13.703907012939453
    7. '+n' → logprob: -13.828907012939453
    8. '
' → logprob: -14.703907012939453
    9. 'n' → logprob: -15.203907012939453
    10. '1' → logprob: -15.203907012939453

Token 1114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.875066757202148
    3. '+' → logprob: -11.750066757202148
    4. '2' → logprob: -12.625066757202148
    5. 'n' → logprob: -13.875066757202148
    6. ')' → logprob: -14.000066757202148
    7. '```' → logprob: -14.250066757202148
    8. '   ' → logprob: -14.500066757202148
    9. '
' → logprob: -15.250066757202148
    10. '):
' → logprob: -15.375066757202148

Token 1115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2617008400848135e-05
    2. '2' → logprob: -11.000032424926758
    3. ' ' → logprob: -11.250032424926758
    4. '+' → logprob: -13.375032424926758
    5. '   ' → logprob: -14.625032424926758
    6. '
' → logprob: -14.875032424926758
    7. '```' → logprob: -16.250032424926758
    8. 'n' → logprob: -16.375032424926758
    9. '0' → logprob: -16.500032424926758
    10. 'm' → logprob: -17.000032424926758

Token 1116: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010318108834326267
    2. ':
' → logprob: -5.385318279266357
    3. ':' → logprob: -5.885318279266357
    4. '):' → logprob: -6.385318279266357
    5. '   ' → logprob: -6.885318279266357
    6. '():
' → logprob: -9.3853178024292
    7. ',' → logprob: -10.2603178024292
    8. '+' → logprob: -10.6353178024292
    9. '):
' → logprob: -11.5103178024292
    10. ')' → logprob: -12.2603178024292

Token 1117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02254384197294712
    2. ' if' → logprob: -3.8975439071655273
    3. ' while' → logprob: -7.647543907165527
    4. 'if' → logprob: -7.772543907165527
    5. '       ' → logprob: -7.897543907165527
    6. '	if' → logprob: -8.772543907165527
    7. '    
' → logprob: -8.897543907165527
    8. '<|end|>' → logprob: -8.897543907165527
    9. 'while' → logprob: -9.897543907165527
    10. '```' → logprob: -10.147543907165527

Token 1118: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2927709221839905
    2. '   ' → logprob: -1.4177708625793457
    3. ' if' → logprob: -4.542770862579346
    4. '       ' → logprob: -8.542771339416504
    5. 'diff' → logprob: -8.542771339416504
    6. 'while' → logprob: -8.917771339416504
    7. '	if' → logprob: -9.167771339416504
    8. 'step' → logprob: -9.667771339416504
    9. 'd' → logprob: -9.667771339416504
    10. '```' → logprob: -9.917771339416504

Token 1119: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01104157604277134
    2. 'cur' → logprob: -5.386041641235352
    3. 'step' → logprob: -6.261041641235352
    4. 'curr' → logprob: -7.386041641235352
    5. 'diff' → logprob: -7.386041641235352
    6. 'dist' → logprob: -7.636041641235352
    7. 'while' → logprob: -7.886041641235352
    8. '   ' → logprob: -8.011041641235352
    9. 'val' → logprob: -8.261041641235352
    10. 'd' → logprob: -8.386041641235352

Token 1120: ' moving' (ID: 10067)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6169792413711548
    2. 'st' → logprob: -0.8669792413711548
    3. 'ind' → logprob: -3.6169791221618652
    4. 'i' → logprob: -4.741979122161865
    5. ' s' → logprob: -6.116979122161865
    6. '   ' → logprob: -7.116979122161865
    7. ' st' → logprob: -7.491979122161865
    8. 'ans' → logprob: -7.491979122161865
    9. ' ind' → logprob: -8.491979598999023
    10. '(st' → logprob: -9.866979598999023

Token 1121: ' from' (ID: 591)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.022699538618326187
    2. ' ind' → logprob: -4.147699356079102
    3. 'i' → logprob: -5.647699356079102
    4. '[ind' → logprob: -6.272699356079102
    5. 'from' → logprob: -7.022699356079102
    6. 'ans' → logprob: -9.272699356079102
    7. '(ind' → logprob: -9.272699356079102
    8. ' i' → logprob: -10.272699356079102
    9. '   ' → logprob: -10.272699356079102
    10. ' from' → logprob: -10.522699356079102

Token 1122: ' '' (ID: 461)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0133518660441041
    2. ' ind' → logprob: -4.638351917266846
    3. 'i' → logprob: -5.638351917266846
    4. ' i' → logprob: -11.388351440429688
    5. '[ind' → logprob: -11.763351440429688
    6. '(ind' → logprob: -12.263351440429688
    7. '0' → logprob: -13.263351440429688
    8. 'indent' → logprob: -13.513351440429688
    9. 'ans' → logprob: -14.138351440429688
    10. 'indt' → logprob: -14.763351440429688

Token 1123: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.000768413650803268
    2. ' ind' → logprob: -7.750768184661865
    3. 'i' → logprob: -8.000768661499023
    4. ''ind' → logprob: -14.625768661499023
    5. '[ind' → logprob: -14.750768661499023
    6. '`' → logprob: -14.750768661499023
    7. '(ind' → logprob: -15.250768661499023
    8. 'index' → logprob: -15.375768661499023
    9. '   ' → logprob: -15.625768661499023
    10. 'ans' → logprob: -15.750768661499023

Token 1124: ''' (ID: 6)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9909046292304993
    2. ' +' → logprob: -1.4909045696258545
    3. ' ==' → logprob: -1.6159045696258545
    4. '+' → logprob: -2.6159045696258545
    5. '==' → logprob: -2.9909045696258545
    6. 'to' → logprob: -3.1159045696258545
    7. ' <' → logprob: -4.615904808044434
    8. '   ' → logprob: -4.865904808044434
    9. ' <=' → logprob: -4.865904808044434
    10. ' ' → logprob: -5.865904808044434

Token 1125: ' to' (ID: 316)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3706256151199341
    2. ' ==' → logprob: -1.870625615119934
    3. ' to' → logprob: -2.9956254959106445
    4. 'to' → logprob: -3.3706254959106445
    5. '<=' → logprob: -3.7456254959106445
    6. '+' → logprob: -3.9956254959106445
    7. ' <=' → logprob: -4.2456254959106445
    8. ' +' → logprob: -4.9956254959106445
    9. '   ' → logprob: -5.4956254959106445
    10. 'and' → logprob: -6.9956254959106445

Token 1126: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020950648467987776
    2. ' i' → logprob: -6.5020952224731445
    3. 'ind' → logprob: -7.6270952224731445
    4. '   ' → logprob: -9.877095222473145
    5. '`' → logprob: -10.752095222473145
    6. ''i' → logprob: -11.377095222473145
    7. ' ind' → logprob: -11.752095222473145
    8. '```' → logprob: -12.252095222473145
    9. 's' → logprob: -13.877095222473145
    10. ' ' → logprob: -14.127095222473145

Token 1127: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010759611177491024
    2. '   ' → logprob: -10.375107765197754
    3. ' i' → logprob: -10.375107765197754
    4. 'ind' → logprob: -10.500107765197754
    5. ''i' → logprob: -11.625107765197754
    6. '`' → logprob: -13.250107765197754
    7. ''' → logprob: -13.625107765197754
    8. ' ' → logprob: -14.000107765197754
    9. '
' → logprob: -14.000107765197754
    10. '       ' → logprob: -14.812607765197754

Token 1128: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48633238673210144
    2. ' ==' → logprob: -2.111332416534424
    3. ' -' → logprob: -2.361332416534424
    4. '==' → logprob: -3.486332416534424
    5. '-' → logprob: -3.611332416534424
    6. ' and' → logprob: -3.736332416534424
    7. '   ' → logprob: -3.861332416534424
    8. 'and' → logprob: -4.486332416534424
    9. ' >' → logprob: -4.486332416534424
    10. ' <=' → logprob: -4.611332416534424

Token 1129: ' is' (ID: 382)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5380277633666992
    2. ' and' → logprob: -1.0380277633666992
    3. '==' → logprob: -3.788027763366699
    4. '   ' → logprob: -3.788027763366699
    5. '       ' → logprob: -5.163027763366699
    6. ' ==' → logprob: -5.163027763366699
    7. 'if' → logprob: -6.788027763366699
    8. '```' → logprob: -7.163027763366699
    9. ' is' → logprob: -7.288027763366699
    10. '>' → logprob: -7.538027763366699

Token 1130: ' optimal' (ID: 24174)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10124754905700684
    2. 'valid' → logprob: -2.976247549057007
    3. ' possible' → logprob: -3.976247549057007
    4. ' valid' → logprob: -4.851247787475586
    5. 'not' → logprob: -4.851247787475586
    6. 'allowed' → logprob: -5.476247787475586
    7. ' not' → logprob: -5.976247787475586
    8. 'i' → logprob: -6.851247787475586
    9. '0' → logprob: -7.476247787475586
    10. 's' → logprob: -7.851247787475586

Token 1131: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.289400577545166
    2. 'and' → logprob: -1.789400577545166
    3. '   ' → logprob: -2.539400577545166
    4. '       ' → logprob: -5.289400577545166
    5. ':' → logprob: -9.039400100708008
    6. '    ' → logprob: -10.539400100708008
    7. ' =' → logprob: -11.039400100708008
    8. ',' → logprob: -11.164400100708008
    9. '           ' → logprob: -11.164400100708008
    10. ':
' → logprob: -11.414400100708008

Token 1132: 'cost' (ID: 33457)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.034773051738739014
    2. 'ans' → logprob: -3.659773111343384
    3. ' st' → logprob: -5.784772872924805
    4. '   ' → logprob: -5.909772872924805
    5. 'ind' → logprob: -7.034772872924805
    6. 's' → logprob: -7.159772872924805
    7. 'i' → logprob: -7.909772872924805
    8. ' ans' → logprob: -8.534772872924805
    9. '(st' → logprob: -9.284772872924805
    10. 'and' → logprob: -9.784772872924805

Token 1133: ' decreases' (ID: 70943)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16698004305362701
    2. ' ==' → logprob: -1.9169800281524658
    3. '<=' → logprob: -5.666980266571045
    4. '+' → logprob: -6.791980266571045
    5. ' <=' → logprob: -7.041980266571045
    6. '-' → logprob: -8.541979789733887
    7. '```' → logprob: -8.541979789733887
    8. ' -' → logprob: -8.666979789733887
    9. ' +' → logprob: -8.916979789733887
    10. ')==' → logprob: -9.291979789733887

Token 1134: ' by' (ID: 656)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.22813642024993896
    2. ' and' → logprob: -1.603136420249939
    3. ')' → logprob: -6.4781365394592285
    4. '   ' → logprob: -8.10313606262207
    5. ' by' → logprob: -8.35313606262207
    6. '       ' → logprob: -8.47813606262207
    7. 'by' → logprob: -9.22813606262207
    8. '           ' → logprob: -9.35313606262207
    9. '==' → logprob: -9.35313606262207
    10. ',' → logprob: -10.10313606262207

Token 1135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000825825787615031
    2. 'st' → logprob: -7.500825881958008
    3. ' ' → logprob: -9.375825881958008
    4. '(st' → logprob: -10.125825881958008
    5. '(i' → logprob: -10.250825881958008
    6. 'i' → logprob: -10.250825881958008
    7. 'ans' → logprob: -11.250825881958008
    8. ' st' → logprob: -11.500825881958008
    9. 'tmp' → logprob: -11.625825881958008
    10. 's' → logprob: -11.625825881958008

Token 1136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.070975071750581e-05
    2. ' ' → logprob: -11.375030517578125
    3. 'i' → logprob: -11.875030517578125
    4. 'st' → logprob: -12.500030517578125
    5. 'ans' → logprob: -13.000030517578125
    6. 'm' → logprob: -13.250030517578125
    7. 's' → logprob: -13.875030517578125
    8. 'tmp' → logprob: -14.375030517578125
    9. '(i' → logprob: -14.500030517578125
    10. '```' → logprob: -15.000030517578125

Token 1137: '),' (ID: 936)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1500539630651474
    2. 'and' → logprob: -2.1500539779663086
    3. ')' → logprob: -4.025053977966309
    4. '   ' → logprob: -5.775053977966309
    5. '       ' → logprob: -6.775053977966309
    6. '),' → logprob: -8.525053977966309
    7. '           ' → logprob: -8.900053977966309
    8. '):
' → logprob: -9.025053977966309
    9. ' if' → logprob: -9.525053977966309
    10. ',' → logprob: -9.525053977966309

Token 1138: ' record' (ID: 3704)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030147191137075424
    2. ' if' → logprob: -4.155147075653076
    3. 'if' → logprob: -4.280147075653076
    4. '       ' → logprob: -8.905147552490234
    5. '	if' → logprob: -11.280147552490234
    6. '    ' → logprob: -11.905147552490234
    7. '```' → logprob: -12.530147552490234
    8. 'while' → logprob: -12.780147552490234
    9. '   ' → logprob: -13.155147552490234
    10. '  ' → logprob: -13.530147552490234

Token 1139: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6054959297180176
    2. 'ind' → logprob: -1.6054959297180176
    3. 'i' → logprob: -1.7304959297180176
    4. ' ind' → logprob: -2.1054959297180176
    5. 'ans' → logprob: -2.1054959297180176
    6. ' i' → logprob: -3.3554959297180176
    7. ''' → logprob: -3.3554959297180176
    8. '    ' → logprob: -3.4804959297180176
    9. '       ' → logprob: -3.8554959297180176
    10. '"' → logprob: -4.730495929718018

Token 1140: ' jump' (ID: 13843)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1646649837493896
    2. 'i' → logprob: -2.0396649837493896
    3. '`' → logprob: -2.0396649837493896
    4. '"' → logprob: -2.2896649837493896
    5. 'ans' → logprob: -2.6646649837493896
    6. ' i' → logprob: -3.4146649837493896
    7. 'distance' → logprob: -3.4146649837493896
    8. ' jump' → logprob: -3.5396649837493896
    9. 'jump' → logprob: -4.164665222167969
    10. 'space' → logprob: -4.414665222167969

Token 1141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12741003930568695
    2. ' if' → logprob: -2.5024099349975586
    3. 'if' → logprob: -3.6274099349975586
    4. '       ' → logprob: -4.627409934997559
    5. ' and' → logprob: -7.502409934997559
    6. 'while' → logprob: -8.377409934997559
    7. ' while' → logprob: -9.127409934997559
    8. '```' → logprob: -9.127409934997559
    9. ',' → logprob: -9.377409934997559
    10. 'and' → logprob: -9.502409934997559

Token 1142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019054718723054975
    2. ' if' → logprob: -9.500190734863281
    3. '```' → logprob: -9.750190734863281
    4. '       ' → logprob: -10.500190734863281
    5. 'if' → logprob: -10.625190734863281
    6. 'while' → logprob: -13.000190734863281
    7. ' while' → logprob: -13.500190734863281
    8. '`' → logprob: -14.875190734863281
    9. '    ' → logprob: -14.875190734863281
    10. '``' → logprob: -15.000190734863281

Token 1143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028241373598575592
    2. '   ' → logprob: -3.9032413959503174
    3. ' if' → logprob: -4.903241157531738
    4. 'while' → logprob: -8.528241157531738
    5. '	if' → logprob: -10.528241157531738
    6. '```' → logprob: -12.028241157531738
    7. '       ' → logprob: -12.403241157531738
    8. ' ' → logprob: -12.403241157531738
    9. '  ' → logprob: -13.278241157531738
    10. ' while' → logprob: -13.528241157531738

Token 1144: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0031689144670963287
    2. 's' → logprob: -6.253169059753418
    3. 'i' → logprob: -7.378169059753418
    4. ' st' → logprob: -8.378169059753418
    5. 'ind' → logprob: -8.753169059753418
    6. 'ans' → logprob: -9.003169059753418
    7. '(st' → logprob: -10.003169059753418
    8. '   ' → logprob: -10.503169059753418
    9. 'tmp' → logprob: -11.628169059753418
    10. '	st' → logprob: -12.378169059753418

Token 1145: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0031887630466371775
    2. 'get' → logprob: -6.128188610076904
    3. '.update' → logprob: -7.628188610076904
    4. '.' → logprob: -8.003189086914062
    5. 'update' → logprob: -9.378189086914062
    6. '_get' → logprob: -10.378189086914062
    7. '   ' → logprob: -10.628189086914062
    8. '._' → logprob: -12.128189086914062
    9. ').' → logprob: -12.378189086914062
    10. '_update' → logprob: -12.503189086914062

Token 1146: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.641841820150148e-05
    2. 'val' → logprob: -11.12502670288086
    3. '(' → logprob: -11.87502670288086
    4. '_ind' → logprob: -13.62502670288086
    5. '(i' → logprob: -13.75002670288086
    6. '_' → logprob: -14.37502670288086
    7. '(ind' → logprob: -15.12502670288086
    8. '(_' → logprob: -15.25002670288086
    9. '```' → logprob: -15.50002670288086
    10. '`' → logprob: -15.62502670288086

Token 1147: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -8.625866030342877e-05
    2. '(' → logprob: -9.750085830688477
    3. 'ind' → logprob: -10.750085830688477
    4. '(
' → logprob: -13.250085830688477
    5. '(indent' → logprob: -13.375085830688477
    6. ' (' → logprob: -13.750085830688477
    7. '0' → logprob: -14.000085830688477
    8. '[ind' → logprob: -14.250085830688477
    9. '   ' → logprob: -15.500085830688477
    10. ' ind' → logprob: -15.750085830688477

Token 1148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23304609954357147
    2. ',i' → logprob: -1.608046054840088
    3. ' ,' → logprob: -5.858046054840088
    4. 'i' → logprob: -6.108046054840088
    5. '(i' → logprob: -6.733046054840088
    6. '   ' → logprob: -7.483046054840088
    7. '+' → logprob: -7.983046054840088
    8. '       ' → logprob: -9.983046531677246
    9. '+i' → logprob: -9.983046531677246
    10. '```' → logprob: -10.233046531677246

Token 1149: ' ind' (ID: 1383)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020567618776112795
    2. 'ind' → logprob: -6.75205659866333
    3. '   ' → logprob: -7.12705659866333
    4. ' i' → logprob: -10.002057075500488
    5. '  ' → logprob: -12.002057075500488
    6. '    ' → logprob: -12.252057075500488
    7. '     ' → logprob: -12.502057075500488
    8. '       ' → logprob: -12.877057075500488
    9. ' ind' → logprob: -12.877057075500488
    10. '           ' → logprob: -12.877057075500488

Token 1150: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.056631624698638916
    2. ' +' → logprob: -3.056631565093994
    3. '+i' → logprob: -5.181631565093994
    4. ')' → logprob: -6.556631565093994
    5. 'i' → logprob: -7.306631565093994
    6. '   ' → logprob: -8.556632041931152
    7. ')+' → logprob: -10.431632041931152
    8. '),' → logprob: -10.806632041931152
    9. ' i' → logprob: -11.556632041931152
    10. '[i' → logprob: -11.806632041931152

Token 1151: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003201477462425828
    2. '1' → logprob: -5.753201484680176
    3. ' i' → logprob: -11.128201484680176
    4. '   ' → logprob: -12.128201484680176
    5. '(i' → logprob: -13.378201484680176
    6. '_i' → logprob: -15.003201484680176
    7. '`' → logprob: -15.503201484680176
    8. ')' → logprob: -15.628201484680176
    9. '{i' → logprob: -15.628201484680176
    10. '```' → logprob: -15.628201484680176

Token 1152: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048632219433784485
    2. '1' → logprob: -3.0486321449279785
    3. ' i' → logprob: -10.673632621765137
    4. '   ' → logprob: -11.923632621765137
    5. '(i' → logprob: -12.048632621765137
    6. '
' → logprob: -13.986132621765137
    7. '[i' → logprob: -14.361132621765137
    8. '`' → logprob: -14.423632621765137
    9. '_i' → logprob: -14.423632621765137
    10. '{i' → logprob: -14.486132621765137

Token 1153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061704013496637344
    2. ')==' → logprob: -5.131170272827148
    3. '==' → logprob: -9.131170272827148
    4. ' )' → logprob: -10.506170272827148
    5. '   ' → logprob: -10.756170272827148
    6. '`)' → logprob: -10.756170272827148
    7. ')>' → logprob: -11.506170272827148
    8. ')<=' → logprob: -11.506170272827148
    9. '```' → logprob: -11.756170272827148
    10. '")' → logprob: -12.006170272827148

Token 1154: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3985004723072052
    2. ' ==' → logprob: -1.1485004425048828
    3. '>' → logprob: -5.648500442504883
    4. ' -' → logprob: -5.648500442504883
    5. '-' → logprob: -6.023500442504883
    6. ' >' → logprob: -6.523500442504883
    7. '   ' → logprob: -9.023500442504883
    8. '```' → logprob: -9.023500442504883
    9. ' +' → logprob: -9.523500442504883
    10. '+' → logprob: -9.523500442504883

Token 1155: ' ' (ID: 220)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0006364276050589979
    2. '1' → logprob: -7.625636577606201
    3. ' st' → logprob: -8.875636100769043
    4. '   ' → logprob: -12.375636100769043
    5. '(st' → logprob: -13.250636100769043
    6. '	st' → logprob: -13.625636100769043
    7. '       ' → logprob: -14.875636100769043
    8. ' ' → logprob: -15.125636100769043
    9. '           ' → logprob: -15.875636100769043
    10. '  ' → logprob: -16.37563705444336

Token 1156: '1' (ID: 16)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.1269567757844925
    2. '1' → logprob: -2.1269567012786865
    3. '(st' → logprob: -11.126956939697266
    4. ' st' → logprob: -11.876956939697266
    5. '(' → logprob: -13.126956939697266
    6. '
' → logprob: -14.126956939697266
    7. '	st' → logprob: -14.251956939697266
    8. '-st' → logprob: -14.751956939697266
    9. '   ' → logprob: -15.126956939697266
    10. ' ' → logprob: -15.251956939697266

Token 1157: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12734423577785492
    2. ' ==' → logprob: -2.1273441314697266
    3. '>=' → logprob: -7.877344131469727
    4. ' >=' → logprob: -10.377344131469727
    5. '=' → logprob: -12.752344131469727
    6. ')==' → logprob: -14.127344131469727
    7. '===' → logprob: -14.252344131469727
    8. ')' → logprob: -15.127344131469727
    9. ']==' → logprob: -15.127344131469727
    10. '==
' → logprob: -15.502344131469727

Token 1158: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -3.15441757265944e-05
    2. ' st' → logprob: -10.375031471252441
    3. '	st' → logprob: -15.750031471252441
    4. '   ' → logprob: -16.125032424926758
    5. '```' → logprob: -19.125032424926758
    6. '
' → logprob: -19.250032424926758
    7. '       ' → logprob: -19.375032424926758
    8. 'stm' → logprob: -19.375032424926758
    9. ' ' → logprob: -19.750032424926758
    10. '(st' → logprob: -20.000032424926758

Token 1159: '.get' (ID: 775)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.25673627853393555
    2. '.get' → logprob: -1.5067362785339355
    3. 'get' → logprob: -5.8817362785339355
    4. 'i' → logprob: -6.2567362785339355
    5. '[i' → logprob: -10.381736755371094
    6. '(get' → logprob: -11.006736755371094
    7. ' (' → logprob: -11.631736755371094
    8. '(' → logprob: -11.881736755371094
    9. '(ind' → logprob: -12.131736755371094
    10. '```' → logprob: -12.256736755371094

Token 1160: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.006995139177888632
    2. '(i' → logprob: -5.75699520111084
    3. 'val' → logprob: -6.25699520111084
    4. 'get' → logprob: -6.63199520111084
    5. 'i' → logprob: -7.50699520111084
    6. '.get' → logprob: -11.50699520111084
    7. '[i' → logprob: -12.00699520111084
    8. '_get' → logprob: -13.25699520111084
    9. '(get' → logprob: -13.63199520111084
    10. '_i' → logprob: -13.75699520111084

Token 1161: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6331738233566284
    2. '(i' → logprob: -0.7581738233566284
    3. ' i' → logprob: -7.758173942565918
    4. '(ind' → logprob: -9.633173942565918
    5. 'ind' → logprob: -10.383173942565918
    6. '(' → logprob: -11.133173942565918
    7. '[i' → logprob: -11.508173942565918
    8. '   ' → logprob: -12.008173942565918
    9. '```' → logprob: -12.008173942565918
    10. ' (' → logprob: -12.883173942565918

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005722135538235307
    2. ',i' → logprob: -7.625572204589844
    3. ' ,' → logprob: -9.750572204589844
    4. '   ' → logprob: -12.125572204589844
    5. '(ind' → logprob: -12.125572204589844
    6. '(i' → logprob: -12.750572204589844
    7. ')' → logprob: -12.750572204589844
    8. ',int' → logprob: -13.125572204589844
    9. '[ind' → logprob: -13.500572204589844
    10. ',
' → logprob: -13.750572204589844

Token 1163: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006291598547250032
    2. ' i' → logprob: -7.37562894821167
    3. '   ' → logprob: -13.750629425048828
    4. ' ' → logprob: -14.500629425048828
    5. '  ' → logprob: -14.500629425048828
    6. '	i' → logprob: -15.625629425048828
    7. '    ' → logprob: -16.500629425048828
    8. ' ' → logprob: -16.875629425048828
    9. ')' → logprob: -17.000629425048828
    10. '     ' → logprob: -17.125629425048828

Token 1164: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12325572967529297
    2. '):' → logprob: -2.248255729675293
    3. '):
' → logprob: -4.623255729675293
    4. ')+' → logprob: -7.873255729675293
    5. '):

' → logprob: -9.873255729675293
    6. '   ' → logprob: -9.998255729675293
    7. '+' → logprob: -10.873255729675293
    8. ')**' → logprob: -11.998255729675293
    9. ')i' → logprob: -12.123255729675293
    10. '```' → logprob: -12.248255729675293

Token 1165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.25000762939453
    4. '0' → logprob: -19.25000762939453
    5. '`' → logprob: -19.50000762939453
    6. 'i' → logprob: -19.68750762939453
    7. '2' → logprob: -19.75000762939453
    8. '   ' → logprob: -20.31250762939453
    9. '１' → logprob: -20.43750762939453
    10. '-' → logprob: -20.43750762939453

Token 1166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -19.5
    4. '0' → logprob: -19.625
    5. '+' → logprob: -19.75
    6. '```' → logprob: -20.25
    7. '１' → logprob: -20.5625
    8. '2' → logprob: -20.625
    9. '۱' → logprob: -20.9375
    10. '-' → logprob: -21.0

Token 1167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30684003233909607
    2. '):
' → logprob: -1.8068400621414185
    3. ')' → logprob: -2.306839942932129
    4. '   ' → logprob: -8.556839942932129
    5. ' and' → logprob: -9.431839942932129
    6. '):

' → logprob: -10.056839942932129
    7. ':' → logprob: -10.056839942932129
    8. '):
' → logprob: -10.181839942932129
    9. 'and' → logprob: -11.056839942932129
    10. '       ' → logprob: -11.056839942932129

Token 1168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1133263111114502
    2. '   ' → logprob: -2.23832631111145
    3. ' ans' → logprob: -8.613326072692871
    4. '```' → logprob: -9.113326072692871
    5. '	ans' → logprob: -9.613326072692871
    6. '           ' → logprob: -10.363326072692871
    7. '    ' → logprob: -10.488326072692871
    8. '     ' → logprob: -10.988326072692871
    9. 'ans' → logprob: -11.238326072692871
    10. '      ' → logprob: -11.738326072692871

Token 1169: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09609847515821457
    2. ' ans' → logprob: -2.4710984230041504
    3. '   ' → logprob: -5.59609842300415
    4. '	ans' → logprob: -5.72109842300415
    5. '```' → logprob: -9.596098899841309
    6. '(ans' → logprob: -10.471098899841309
    7. '       ' → logprob: -10.846098899841309
    8. '_ans' → logprob: -11.846098899841309
    9. 'anst' → logprob: -12.221098899841309
    10. 'jump' → logprob: -12.221098899841309

Token 1170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00030281138606369495
    2. '.' → logprob: -8.125303268432617
    3. ' .' → logprob: -12.625303268432617
    4. '.app' → logprob: -13.250303268432617
    5. 'append' → logprob: -14.375303268432617
    6. '.extend' → logprob: -14.875303268432617
    7. '.ap' → logprob: -15.125303268432617
    8. '.Append' → logprob: -15.750303268432617
    9. '   ' → logprob: -16.375303268432617
    10. '].' → logprob: -17.125303268432617

Token 1171: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001085497424355708
    2. '(i' → logprob: -9.75010871887207
    3. 'str' → logprob: -10.25010871887207
    4. ' i' → logprob: -11.25010871887207
    5. '   ' → logprob: -13.37510871887207
    6. '(str' → logprob: -15.25010871887207
    7. '{i' → logprob: -16.75010871887207
    8. '`' → logprob: -17.00010871887207
    9. '[i' → logprob: -17.62510871887207
    10. ' str' → logprob: -17.75010871887207

Token 1172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07934511452913284
    2. '-' → logprob: -2.579345226287842
    3. '-ind' → logprob: -7.704345226287842
    4. '   ' → logprob: -13.079344749450684
    5. '-indent' → logprob: -13.579344749450684
    6. '[ind' → logprob: -14.954344749450684
    7. ' ' → logprob: -15.579344749450684
    8. ' ' → logprob: -16.204345703125
    9. ' -
' → logprob: -16.454345703125
    10. '-
' → logprob: -16.454345703125

Token 1173: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.8624639324116288e-06
    2. ' ind' → logprob: -13.250001907348633
    3. '[ind' → logprob: -20.625001907348633
    4. '(ind' → logprob: -20.625001907348633
    5. 'indent' → logprob: -22.250001907348633
    6. 'ans' → logprob: -24.375001907348633
    7. '_ind' → logprob: -25.125001907348633
    8. '   ' → logprob: -26.125001907348633
    9. 'indt' → logprob: -26.625001907348633
    10. ''ind' → logprob: -26.875001907348633

Token 1174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005147866904735565
    2. ')
' → logprob: -8.12551498413086
    3. ' )' → logprob: -8.62551498413086
    4. '<|end|>' → logprob: -11.00051498413086
    5. ')return' → logprob: -11.50051498413086
    6. '       ' → logprob: -12.62551498413086
    7. ')#' → logprob: -13.50051498413086
    8. '   ' → logprob: -13.75051498413086
    9. '[' → logprob: -14.00051498413086
    10. '<|end|>' → logprob: -14.12551498413086

Token 1175: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.251573383808136
    2. 'ind' → logprob: -2.001573324203491
    3. '   ' → logprob: -2.501573324203491
    4. ' ind' → logprob: -5.25157356262207
    5. '           ' → logprob: -9.37657356262207
    6. '[ind' → logprob: -11.37657356262207
    7. '      ' → logprob: -12.87657356262207
    8. '     ' → logprob: -13.37657356262207
    9. '(ind' → logprob: -13.87657356262207
    10. '    ' → logprob: -14.00157356262207

Token 1176: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17363497614860535
    2. 'ind' → logprob: -2.1736350059509277
    3. '   ' → logprob: -3.1736350059509277
    4. ' ind' → logprob: -5.673635005950928
    5. '           ' → logprob: -8.54863452911377
    6. '[ind' → logprob: -9.17363452911377
    7. '(ind' → logprob: -10.92363452911377
    8. '```' → logprob: -11.42363452911377
    9. '      ' → logprob: -12.54863452911377
    10. 'indent' → logprob: -12.67363452911377

Token 1177: ' Jump' (ID: 51108)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0029623692389577627
    2. ' ind' → logprob: -6.002962589263916
    3. '   ' → logprob: -7.752962589263916
    4. '       ' → logprob: -9.877962112426758
    5. 'indent' → logprob: -12.627962112426758
    6. '[ind' → logprob: -13.502962112426758
    7. '(ind' → logprob: -14.752962112426758
    8. '           ' → logprob: -15.002962112426758
    9. '```' → logprob: -15.627962112426758
    10. '_ind' → logprob: -16.877962112426758

Token 1178: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016477346420288086
    2. 'ind' → logprob: -4.516477584838867
    3. ' ind' → logprob: -6.516477584838867
    4. '<|end|>' → logprob: -6.516477584838867
    5. '           ' → logprob: -7.391477584838867
    6. ';' → logprob: -7.516477584838867
    7. '
' → logprob: -7.516477584838867
    8. '[ind' → logprob: -8.266477584838867
    9. '   ' → logprob: -8.766477584838867
    10. '<|end|>' → logprob: -9.641477584838867

Token 1179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012796163558959961
    2. 'ind' → logprob: -4.512796401977539
    3. ' ind' → logprob: -7.137796401977539
    4. '   ' → logprob: -7.387796401977539
    5. '           ' → logprob: -8.387796401977539
    6. '[ind' → logprob: -9.512796401977539
    7. '(ind' → logprob: -11.387796401977539
    8. '      ' → logprob: -12.387796401977539
    9. '     ' → logprob: -12.512796401977539
    10. '<|end|>' → logprob: -13.262796401977539

Token 1180: '       ' (ID: 309)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.05192115530371666
    2. '   ' → logprob: -3.3019211292266846
    3. '       ' → logprob: -4.301921367645264
    4. ' ind' → logprob: -8.426920890808105
    5. '           ' → logprob: -10.926920890808105
    6. 'indent' → logprob: -13.426920890808105
    7. '[ind' → logprob: -13.551920890808105
    8. '```' → logprob: -14.551920890808105
    9. '    ' → logprob: -15.176920890808105
    10. '(ind' → logprob: -15.426920890808105

Token 1181: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' (adapté à ' ind') → logprob: -0.001510335598140955
    2. '       ' → logprob: -6.501510143280029
    3. '   ' → logprob: -12.001510620117188
    4. ' ind' → logprob: -13.251510620117188
    5. '           ' → logprob: -16.626510620117188
    6. 'indent' → logprob: -16.876510620117188
    7. '[ind' → logprob: -18.376510620117188
    8. '(ind' → logprob: -18.751510620117188
    9. '      ' → logprob: -20.001510620117188
    10. '     ' → logprob: -20.501510620117188

Token 1182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.860340752406046e-05
    2. ' =' → logprob: -9.7500581741333
    3. '=i' → logprob: -15.7500581741333
    4. '=
' → logprob: -16.750059127807617
    5. '＝' → logprob: -19.625059127807617
    6. '+=' → logprob: -19.875059127807617
    7. '=

' → logprob: -21.500059127807617
    8. '.=' → logprob: -21.750059127807617
    9. '=}' → logprob: -22.375059127807617
    10. '=int' → logprob: -22.375059127807617

Token 1183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '   ' → logprob: -22.625
    4. '	i' → logprob: -22.625
    5. '_i' → logprob: -23.375
    6. '```' → logprob: -23.375
    7. '=i' → logprob: -24.5
    8. ')i' → logprob: -25.125
    9. '$i' → logprob: -25.25
    10. '       ' → logprob: -25.625

Token 1184: '             ' (ID: 1698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02507231943309307
    2. 'if' → logprob: -3.9000723361968994
    3. 'print' → logprob: -5.52507209777832
    4. ' if' → logprob: -7.90007209777832
    5. 'for' → logprob: -9.02507209777832
    6. '	if' → logprob: -11.40007209777832
    7. '    ' → logprob: -12.15007209777832
    8. '    
' → logprob: -12.27507209777832
    9. 'else' → logprob: -12.65007209777832
    10. '<|end|>' → logprob: -12.77507209777832

Token 1185: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4979030191898346
    2. '   ' → logprob: -1.1229029893875122
    3. ' if' → logprob: -3.3729031085968018
    4. '<|end|>' → logprob: -4.122902870178223
    5. '       ' → logprob: -4.247902870178223
    6. '    ' → logprob: -7.622902870178223
    7. 'else' → logprob: -7.997902870178223
    8. 'continue' → logprob: -8.497902870178223
    9. '<|end|>' → logprob: -8.622902870178223
    10. '	if' → logprob: -8.747902870178223

Token 1186: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02106834575533867
    2. ' if' → logprob: -4.521068572998047
    3. 'continue' → logprob: -4.646068572998047
    4. '       ' → logprob: -9.021068572998047
    5. ' continue' → logprob: -9.146068572998047
    6. '   ' → logprob: -9.146068572998047
    7. 'break' → logprob: -11.146068572998047
    8. '```' → logprob: -11.771068572998047
    9. 'If' → logprob: -11.896068572998047
    10. '	if' → logprob: -13.271068572998047

Token 1187: ' to' (ID: 316)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.18640242516994476
    2. ' on' → logprob: -1.936402440071106
    3. 'ind' → logprob: -4.686402320861816
    4. ' forward' → logprob: -5.186402320861816
    5. ' ahead' → logprob: -6.186402320861816
    6. ' onward' → logprob: -6.561402320861816
    7. ' to' → logprob: -6.686402320861816
    8. 'forward' → logprob: -6.811402320861816
    9. 'ahead' → logprob: -7.061402320861816
    10. 'continue' → logprob: -7.186402320861816

Token 1188: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019317318219691515
    2. 'ind' → logprob: -6.251931667327881
    3. ' i' → logprob: -12.751932144165039
    4. ' ind' → logprob: -15.501932144165039
    5. '```' → logprob: -18.87693214416504
    6. '   ' → logprob: -19.00193214416504
    7. 'ans' → logprob: -19.62693214416504
    8. '`' → logprob: -20.25193214416504
    9. 'indent' → logprob: -21.00193214416504
    10. '	i' → logprob: -21.00193214416504

Token 1189: ' new' (ID: 620)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004084216430783272
    2. 'ind' → logprob: -5.50408411026001
    3. '```' → logprob: -12.754084587097168
    4. ' i' → logprob: -13.379084587097168
    5. ' ind' → logprob: -13.754084587097168
    6. '`' → logprob: -15.629084587097168
    7. 'next' → logprob: -16.75408363342285
    8. 'indent' → logprob: -17.00408363342285
    9. '``' → logprob: -17.75408363342285
    10. 'end' → logprob: -18.12908363342285

Token 1190: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.007216845639050007
    2. 'ind' → logprob: -5.007216930389404
    3. 'index' → logprob: -7.757216930389404
    4. ' position' → logprob: -9.632216453552246
    5. '```' → logprob: -12.382216453552246
    6. '
' → logprob: -13.257216453552246
    7. 'pos' → logprob: -13.882216453552246
    8. 'location' → logprob: -14.507216453552246
    9. ' ind' → logprob: -14.757216453552246
    10. '`' → logprob: -15.132216453552246

Token 1191: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4943232536315918
    2. 'if' → logprob: -0.9943232536315918
    3. ' if' → logprob: -5.119323253631592
    4. 'for' → logprob: -5.244323253631592
    5. 'i' → logprob: -5.494323253631592
    6. '```' → logprob: -6.119323253631592
    7. 'print' → logprob: -7.369323253631592
    8. 'while' → logprob: -7.494323253631592
    9. '<|end|>' → logprob: -7.494323253631592
    10. '       ' → logprob: -8.36932373046875

Token 1192: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -13.375003814697266
    3. 'if' → logprob: -13.875003814697266
    4. '
' → logprob: -13.875003814697266
    5. 'for' → logprob: -15.375003814697266
    6. ' print' → logprob: -15.500003814697266
    7. '#' → logprob: -16.375003814697266
    8. '   ' → logprob: -17.375003814697266
    9. '    
' → logprob: -17.375003814697266
    10. '  
' → logprob: -18.250003814697266

Token 1193: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. 'if' → logprob: -15.25
    3. 'for' → logprob: -17.375
    4. ' print' → logprob: -18.125
    5. '```' → logprob: -20.875
    6. '#print' → logprob: -22.375
    7. '#' → logprob: -22.75
    8. '   ' → logprob: -23.0
    9. '
' → logprob: -24.25
    10. '``' → logprob: -24.625

Token 1194: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3353378176689148
    2. ''' → logprob: -1.3353378772735596
    3. '"' → logprob: -3.8353378772735596
    4. '*' → logprob: -8.58533763885498
    5. 'len' → logprob: -10.71033763885498
    6. ' print' → logprob: -11.33533763885498
    7. '
' → logprob: -11.96033763885498
    8. '   ' → logprob: -12.71033763885498
    9. ''s' → logprob: -12.71033763885498
    10. 'ans' → logprob: -13.21033763885498

Token 1195: ' jump' (ID: 13843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7336407899856567
    2. ''' → logprob: -0.9836407899856567
    3. '"' → logprob: -1.9836407899856567
    4. '*' → logprob: -4.983640670776367
    5. 'ans' → logprob: -6.733640670776367
    6. 'len' → logprob: -8.858640670776367
    7. '   ' → logprob: -10.108640670776367
    8. '
' → logprob: -10.608640670776367
    9. ' print' → logprob: -10.983640670776367
    10. '#' → logprob: -10.983640670776367

Token 1196: ' sequence' (ID: 16281)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4502830505371094
    2. '(*' → logprob: -1.4502830505371094
    3. '()
' → logprob: -2.7002830505371094
    4. '('' → logprob: -3.5752830505371094
    5. '(' → logprob: -4.575283050537109
    6. 'print' → logprob: -4.700283050537109
    7. '("' → logprob: -5.450283050537109
    8. '*' → logprob: -5.700283050537109
    9. ''' → logprob: -6.075283050537109
    10. '"' → logprob: -7.075283050537109

Token 1197: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.500001907348633
    3. ' print' → logprob: -16.375001907348633
    4. '
' → logprob: -18.000001907348633
    5. 'for' → logprob: -18.250001907348633
    6. '``' → logprob: -18.375001907348633
    7. '`' → logprob: -19.375001907348633
    8. '`
' → logprob: -20.125001907348633
    9. 'if' → logprob: -20.375001907348633
    10. '    
' → logprob: -21.000001907348633

Token 1198: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '```' → logprob: -19.25
    4. 'for' → logprob: -24.75
    5. '``' → logprob: -25.375
    6. '
' → logprob: -25.375
    7. '`' → logprob: -25.375
    8. '   ' → logprob: -26.25
    9. '#print' → logprob: -26.625
    10. '    
' → logprob: -26.75

Token 1199: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0007470945129171014
    2. '('' → logprob: -7.250747203826904
    3. '("' → logprob: -10.250746726989746
    4. '*' → logprob: -13.625746726989746
    5. '(' → logprob: -14.750746726989746
    6. ''' → logprob: -16.750747680664062
    7. '(len' → logprob: -17.000747680664062
    8. '(ans' → logprob: -17.125747680664062
    9. '(*(' → logprob: -17.625747680664062
    10. 'ans' → logprob: -18.000747680664062

Token 1200: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.5
    3. '(ans' → logprob: -19.0
    4. '	ans' → logprob: -24.0
    5. '[' → logprob: -25.0
    6. '   ' → logprob: -25.5
    7. '`' → logprob: -25.5
    8. 'ANS' → logprob: -25.75
    9. 'anst' → logprob: -26.0
    10. 'answer' → logprob: -26.125

Token 1201: ')' (ID: 8)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1199
Tokens correctement prédits (1ère position, stricte): 368
Tokens correctement prédits (1ère position, avec adaptation): 405
Tokens correctement prédits (top 10): 859
Précision stricte (1ère position): 30.69%
Précision adaptée (1ère position): 33.78%
Précision (top 10): 71.64%
================================================================================
