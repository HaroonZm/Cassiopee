================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
t = input()
res = None
def rot(st):
    return st[-1] + st[:-1]
n = 0
while True:
    if s == t:
        print('Yes'); res = True
        break
    else:
        if n >= len(s)-1:
            break
        s = rot(s)
        n += 1
if not res:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003895203350111842
    2. '('' → logprob: -6.378895282745361
    3. '()' → logprob: -6.878895282745361
    4. ''' → logprob: -7.128895282745361
    5. '"' → logprob: -8.878894805908203
    6. '(
' → logprob: -9.878894805908203
    7. '`' → logprob: -9.878894805908203
    8. '("("' → logprob: -10.003894805908203
    9. '```' → logprob: -11.003894805908203
    10. ' (' → logprob: -11.628894805908203

Token 4: 't' (ID: 83)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044769834727048874
    2. 'if' → logprob: -4.044769763946533
    3. '+' → logprob: -4.419769763946533
    4. '[' → logprob: -5.419769763946533
    5. '.strip' → logprob: -6.169769763946533
    6. '=' → logprob: -6.544769763946533
    7. 'print' → logprob: -6.669769763946533
    8. ''' → logprob: -7.044769763946533
    9. '[::-' → logprob: -7.044769763946533
    10. ' if' → logprob: -7.669769763946533

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17311497032642365
    2. ' =' → logprob: -2.5481150150299072
    3. '.' → logprob: -3.2981150150299072
    4. '+' → logprob: -3.9231150150299072
    5. '[' → logprob: -3.9231150150299072
    6. 'r' → logprob: -6.673114776611328
    7. '(' → logprob: -6.798114776611328
    8. 'o' → logprob: -7.923114776611328
    9. ' ' → logprob: -8.673114776611328
    10. '_' → logprob: -8.673114776611328

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4076858460903168
    2. ' input' → logprob: -1.5326858758926392
    3. 's' → logprob: -2.7826857566833496
    4. ' s' → logprob: -2.9076857566833496
    5. ' ' → logprob: -6.78268575668335
    6. 'int' → logprob: -7.53268575668335
    7. '"' → logprob: -8.532686233520508
    8. ''s' → logprob: -9.157686233520508
    9. 'list' → logprob: -9.782686233520508
    10. ' int' → logprob: -9.782686233520508

Token 7: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22577813267707825
    2. '(' → logprob: -1.6007781028747559
    3. '`()' → logprob: -9.100778579711914
    4. ')' → logprob: -9.600778579711914
    5. ' ()' → logprob: -10.350778579711914
    6. '```' → logprob: -10.475778579711914
    7. '(
' → logprob: -10.725778579711914
    8. '(

' → logprob: -11.100778579711914
    9. ' (' → logprob: -11.225778579711914
    10. '()`' → logprob: -11.350778579711914

Token 8: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31525376439094543
    2. 'i' → logprob: -1.690253734588623
    3. 'for' → logprob: -3.065253734588623
    4. 'd' → logprob: -3.440253734588623
    5. 'while' → logprob: -6.065253734588623
    6. 'n' → logprob: -6.940253734588623
    7. 's' → logprob: -7.440253734588623
    8. 'a' → logprob: -7.690253734588623
    9. 'result' → logprob: -7.940253734588623
    10. ' if' → logprob: -7.940253734588623

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2844160199165344
    2. '=' → logprob: -1.5344159603118896
    3. '.' → logprob: -4.284416198730469
    4. '[' → logprob: -5.284416198730469
    5. ' +=' → logprob: -5.534416198730469
    6. 's' → logprob: -5.534416198730469
    7. '_' → logprob: -6.159416198730469
    8. ' ' → logprob: -6.659416198730469
    9. '+' → logprob: -7.659416198730469
    10. ',' → logprob: -8.159416198730469

Token 10: ' None' (ID: 4662)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6846778392791748
    2. '0' → logprob: -1.8096778392791748
    3. '''' → logprob: -2.559677839279175
    4. '"' → logprob: -2.684677839279175
    5. '[]' → logprob: -2.809677839279175
    6. ''' → logprob: -3.684677839279175
    7. ' ""' → logprob: -3.809677839279175
    8. ' []' → logprob: -3.934677839279175
    9. ' ' → logprob: -4.184678077697754
    10. 's' → logprob: -4.684678077697754

Token 11: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18842412531375885
    2. 'i' → logprob: -2.8134241104125977
    3. ' if' → logprob: -2.9384241104125977
    4. 'for' → logprob: -3.6884241104125977
    5. '=' → logprob: -4.438424110412598
    6. ' for' → logprob: -5.688424110412598
    7. 's' → logprob: -5.688424110412598
    8. ' =' → logprob: -5.938424110412598
    9. '\n' → logprob: -6.313424110412598
    10. ''' → logprob: -6.313424110412598

Token 12: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3616447448730469
    2. 'for' → logprob: -1.3616447448730469
    3. 'i' → logprob: -3.111644744873047
    4. 'd' → logprob: -6.736644744873047
    5. ' for' → logprob: -8.361644744873047
    6. ' if' → logprob: -8.486644744873047
    7. 'n' → logprob: -8.486644744873047
    8. 'm' → logprob: -8.986644744873047
    9. 'l' → logprob: -9.361644744873047
    10. 'len' → logprob: -9.361644744873047

Token 13: ' rot' (ID: 8845)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.4070037603378296
    2. ' is' → logprob: -1.7820037603378296
    3. ' l' → logprob: -2.032003879547119
    4. ' ' → logprob: -2.282003879547119
    5. ' f' → logprob: -2.782003879547119
    6. ' edit' → logprob: -2.907003879547119
    7. ' check' → logprob: -2.907003879547119
    8. ' find' → logprob: -3.032003879547119
    9. ' solution' → logprob: -3.657003879547119
    10. ' levens' → logprob: -4.407003879547119

Token 14: '(st' (ID: 4065)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.07700804620981216
    2. '13' → logprob: -2.952008008956909
    3. 'a' → logprob: -4.327008247375488
    4. '_' → logprob: -5.827008247375488
    5. '-' → logprob: -5.952008247375488
    6. '(a' → logprob: -6.702008247375488
    7. '(' → logprob: -8.327008247375488
    8. '(s' → logprob: -8.702008247375488
    9. '_a' → logprob: -8.827008247375488
    10. 'e' → logprob: -8.952008247375488

Token 15: '):
' (ID: 1883)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005208624061197042
    2. 'ring' → logprob: -7.875520706176758
    3. 'rf' → logprob: -9.875520706176758
    4. 'rate' → logprob: -10.625520706176758
    5. 'ate' → logprob: -10.750520706176758
    6. ')' → logprob: -10.875520706176758
    7. 'a' → logprob: -12.500520706176758
    8. 'f' → logprob: -12.625520706176758
    9. '_r' → logprob: -12.875520706176758
    10. 'e' → logprob: -13.125520706176758

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15859460830688477
    2. ' return' → logprob: -2.6585946083068848
    3. 's' → logprob: -4.033594608306885
    4. ' s' → logprob: -4.158594608306885
    5. 'eturn' → logprob: -4.408594608306885
    6. ' res' → logprob: -5.033594608306885
    7. 'n' → logprob: -5.283594608306885
    8. ' ' → logprob: -5.783594608306885
    9. ' new' → logprob: -6.033594608306885
    10. ' n' → logprob: -6.283594608306885

Token 17: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2738510370254517
    2. 'result' → logprob: -1.2738510370254517
    3. 'return' (adapté à ' return') → logprob: -2.023850917816162
    4. 's' → logprob: -3.023850917816162
    5. ' res' → logprob: -3.148850917816162
    6. 'rot' → logprob: -3.273850917816162
    7. ' result' → logprob: -3.523850917816162
    8. 'res' → logprob: -3.648850917816162
    9. 'r' → logprob: -3.898850917816162
    10. ' return' → logprob: -4.398850917816162

Token 18: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5878880620002747
    2. '''.' → logprob: -0.9628880620002747
    3. ' st' → logprob: -3.21288800239563
    4. '(st' → logprob: -4.837888240814209
    5. 'str' → logprob: -5.587888240814209
    6. ' ''.' → logprob: -5.962888240814209
    7. 'chr' → logprob: -6.087888240814209
    8. '"' → logprob: -6.712888240814209
    9. '[' → logprob: -6.962888240814209
    10. '''' → logprob: -7.212888240814209

Token 19: '[-' (ID: 17503)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.230293869972229
    2. '+' → logprob: -1.480293869972229
    3. '[:]' → logprob: -1.480293869972229
    4. '[' → logprob: -1.605293869972229
    5. ' +' → logprob: -4.6052937507629395
    6. '.replace' → logprob: -5.1052937507629395
    7. '+s' → logprob: -5.3552937507629395
    8. '+t' → logprob: -5.4802937507629395
    9. 's' → logprob: -5.7302937507629395
    10. '[-' → logprob: -5.8552937507629395

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0981265977025032
    2. '2' → logprob: -2.9731266498565674
    3. '4' → logprob: -3.3481266498565674
    4. '3' → logprob: -5.473126411437988
    5. 'k' → logprob: -6.223126411437988
    6. '7' → logprob: -7.348126411437988
    7. '5' → logprob: -9.473126411437988
    8. 'n' → logprob: -10.098126411437988
    9. 'rotation' → logprob: -10.098126411437988
    10. '6' → logprob: -10.473126411437988

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.066655233502388
    2. ']+' → logprob: -2.816655158996582
    3. '+' → logprob: -5.941655158996582
    4. ':]' → logprob: -6.441655158996582
    5. ':' → logprob: -7.816655158996582
    6. ' ]' → logprob: -10.566655158996582
    7. '+]' → logprob: -11.066655158996582
    8. ' +' → logprob: -13.316655158996582
    9. '']' → logprob: -13.316655158996582
    10. ' :]' → logprob: -13.566655158996582

Token 22: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007194612408056855
    2. ' +' → logprob: -7.2507195472717285
    3. '+s' → logprob: -12.00071907043457
    4. 's' → logprob: -13.50071907043457
    5. '+t' → logprob: -14.62571907043457
    6. '```' → logprob: -15.00071907043457
    7. '}' → logprob: -15.75071907043457
    8. '+
' → logprob: -16.12571907043457
    9. ')' → logprob: -16.12571907043457
    10. '+++' → logprob: -16.37571907043457

Token 23: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0005538671393878758
    2. ' st' → logprob: -7.500554084777832
    3. 's' → logprob: -14.250554084777832
    4. '	st' → logprob: -15.500554084777832
    5. '-st' → logprob: -17.875553131103516
    6. 'str' → logprob: -18.500553131103516
    7. '(st' → logprob: -18.625553131103516
    8. ' ' → logprob: -18.750553131103516
    9. '_st' → logprob: -19.000553131103516
    10. '```' → logprob: -19.375553131103516

Token 24: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -3.5358694731257856e-05
    2. '[' → logprob: -10.875035285949707
    3. '[:' → logprob: -11.375035285949707
    4. '1' → logprob: -13.750035285949707
    5. ':' → logprob: -13.875035285949707
    6. ':-' → logprob: -14.000035285949707
    7. '0' → logprob: -14.000035285949707
    8. 'st' → logprob: -14.500035285949707
    9. '```' → logprob: -15.500035285949707
    10. ':end' → logprob: -16.250036239624023

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. '-' → logprob: -17.75
    4. '```' → logprob: -18.0
    5. '１' → logprob: -18.625
    6. '१' → logprob: -19.125
    7. '' → logprob: -19.3125
    8. '   ' → logprob: -19.4375
    9. '۱' → logprob: -19.5
    10. '১' → logprob: -19.625

Token 26: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.0
    3. '）' → logprob: -16.625
    4. ')
' → logprob: -16.625
    5. '')' → logprob: -17.125
    6. '`)' → logprob: -17.5
    7. ')`' → logprob: -17.5
    8. '}' → logprob: -17.625
    9. ']' → logprob: -17.75
    10. ')return' → logprob: -19.0

Token 27: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05875823274254799
    2. 'for' → logprob: -3.05875825881958
    3. 'res' → logprob: -5.18375825881958
    4. '
' → logprob: -6.05875825881958
    5. ' if' → logprob: -7.55875825881958
    6. 'n' → logprob: -7.55875825881958
    7. '<|end|>' → logprob: -8.183757781982422
    8. '\n' → logprob: -8.808757781982422
    9. '```' → logprob: -9.058757781982422
    10. 'while' → logprob: -9.183757781982422

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3603343367576599
    2. ' =' → logprob: -1.2353343963623047
    3. ' ' → logprob: -4.985334396362305
    4. '=len' → logprob: -5.610334396362305
    5. '-' → logprob: -8.235334396362305
    6. '   ' → logprob: -8.485334396362305
    7. 'o' → logprob: -8.485334396362305
    8. ',' → logprob: -9.360334396362305
    9. '>' → logprob: -9.485334396362305
    10. '_' → logprob: -9.610334396362305

Token 29: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.251937597990036
    2. 'len' → logprob: -1.5019376277923584
    3. ' ' → logprob: -12.001937866210938
    4. '0' → logprob: -14.751937866210938
    5. '(len' → logprob: -15.001937866210938
    6. '10' → logprob: -15.126937866210938
    7. 'int' → logprob: -15.251937866210938
    8. '1' → logprob: -15.251937866210938
    9. ' int' → logprob: -15.376937866210938
    10. '=len' → logprob: -15.751937866210938

Token 30: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.842555426876061e-06
    2. ' len' → logprob: -12.250004768371582
    3. '0' → logprob: -17.2500057220459
    4. '(len' → logprob: -18.1250057220459
    5. '1' → logprob: -18.2500057220459
    6. '10' → logprob: -18.3750057220459
    7. '3' → logprob: -19.6250057220459
    8. '4' → logprob: -19.8750057220459
    9. 'int' → logprob: -20.0000057220459
    10. '5' → logprob: -20.0000057220459

Token 31: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5484845042228699
    2. '<|end|>' → logprob: -0.9234845042228699
    3. '<|end|>' → logprob: -4.9234843254089355
    4. ' while' → logprob: -4.9234843254089355
    5. '
' → logprob: -5.0484843254089355
    6. 'n' → logprob: -6.7984843254089355
    7. 's' → logprob: -7.1734843254089355
    8. '```' → logprob: -7.9234843254089355
    9. '\n' → logprob: -8.173484802246094
    10. 't' → logprob: -8.298484802246094

Token 32: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.023071927949786186
    2. '<|end|>' → logprob: -4.148071765899658
    3. ' while' → logprob: -5.148071765899658
    4. '<|end|>' → logprob: -8.023072242736816
    5. 'w' → logprob: -8.773072242736816
    6. '
' → logprob: -8.773072242736816
    7. 'if' → logprob: -9.023072242736816
    8. '```' → logprob: -9.398072242736816
    9. 'While' → logprob: -9.898072242736816
    10. 'for' → logprob: -9.898072242736816

Token 33: ' True' (ID: 6432)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0480748787522316
    2. 'n' → logprob: -3.173074960708618
    3. ' s' → logprob: -5.423074722290039
    4. 's' → logprob: -8.298074722290039
    5. ' not' → logprob: -8.798074722290039
    6. ' t' → logprob: -8.923074722290039
    7. ' ' → logprob: -10.298074722290039
    8. ' res' → logprob: -10.673074722290039
    9. ' True' → logprob: -10.673074722290039
    10. 't' → logprob: -10.798074722290039

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.203409844194539e-05
    2. ':
' → logprob: -11.000041961669922
    3. ' :' → logprob: -11.250041961669922
    4. '):' → logprob: -12.125041961669922
    5. '():' → logprob: -13.250041961669922
    6. '   ' → logprob: -13.375041961669922
    7. '<|end|>' → logprob: -13.500041961669922
    8. ':**' → logprob: -14.625041961669922
    9. ',' → logprob: -14.750041961669922
    10. ':

' → logprob: -15.125041961669922

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026760143227875233
    2. '<|end|>' → logprob: -7.002676010131836
    3. ' ' → logprob: -7.502676010131836
    4. ' if' → logprob: -7.877676010131836
    5. '    
' → logprob: -8.252676010131836
    6. '       ' → logprob: -8.502676010131836
    7. '  ' → logprob: -9.502676010131836
    8. '    ' → logprob: -9.752676010131836
    9. '<|end|>' → logprob: -9.877676010131836
    10. ' 
' → logprob: -10.252676010131836

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12058866024017334
    2. '   ' → logprob: -2.495588779449463
    3. 'if' (adapté à ' if') → logprob: -3.495588779449463
    4. '    ' → logprob: -8.620588302612305
    5. ' n' → logprob: -8.870588302612305
    6. 'n' → logprob: -8.995588302612305
    7. ' s' → logprob: -8.995588302612305
    8. 's' → logprob: -9.370588302612305
    9. ' ' → logprob: -9.495588302612305
    10. '```' → logprob: -10.745588302612305

Token 37: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.017051517963409424
    2. 's' → logprob: -4.392051696777344
    3. ' t' → logprob: -5.767051696777344
    4. ' res' → logprob: -7.142051696777344
    5. ' n' → logprob: -7.642051696777344
    6. 't' → logprob: -9.892051696777344
    7. 'n' → logprob: -10.767051696777344
    8. ' ' → logprob: -11.017051696777344
    9. 'res' → logprob: -11.017051696777344
    10. ' rot' → logprob: -11.017051696777344

Token 38: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08894895762205124
    2. ' ==' → logprob: -2.463948965072632
    3. '=' → logprob: -12.338949203491211
    4. '==
' → logprob: -13.588949203491211
    5. ')==' → logprob: -13.963949203491211
    6. '===' → logprob: -14.213949203491211
    7. ']==' → logprob: -14.463949203491211
    8. '!=' → logprob: -14.588949203491211
    9. ')' → logprob: -15.088949203491211
    10. ' not' → logprob: -15.713949203491211

Token 39: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931501030921936
    2. ' t' → logprob: -0.6931501030921936
    3. ' ' → logprob: -13.443150520324707
    4. '`t' → logprob: -14.568150520324707
    5. '   ' → logprob: -14.693150520324707
    6. '	t' → logprob: -15.693150520324707
    7. 's' → logprob: -16.56814956665039
    8. '_t' → logprob: -16.56814956665039
    9. '  ' → logprob: -16.69314956665039
    10. ' ' → logprob: -17.06814956665039

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019382734317332506
    2. ':
' → logprob: -6.251938343048096
    3. ' or' → logprob: -12.626937866210938
    4. ' :' → logprob: -12.751937866210938
    5. '):' → logprob: -13.626937866210938
    6. ':return' → logprob: -14.251937866210938
    7. ':
' → logprob: -14.751937866210938
    8. ':

' → logprob: -15.001937866210938
    9. ':**' → logprob: -15.751937866210938
    10. '<|end|>' → logprob: -15.876937866210938

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5342469215393066
    2. ':' → logprob: -0.9092469215393066
    3. ':
' → logprob: -4.909246921539307
    4. '   ' → logprob: -6.034246921539307
    5. '
' → logprob: -8.159246444702148
    6. '<|end|>' → logprob: -8.159246444702148
    7. ' ' → logprob: -9.034246444702148
    8. 'res' → logprob: -9.534246444702148
    9. '        
' → logprob: -9.534246444702148
    10. '     ' → logprob: -9.909246444702148

Token 42: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14231932163238525
    2. ' res' → logprob: -2.2673192024230957
    3. '       ' → logprob: -4.017319202423096
    4. '   ' → logprob: -4.517319202423096
    5. '
' → logprob: -10.142319679260254
    6. '	res' → logprob: -10.392319679260254
    7. '```' → logprob: -10.517319679260254
    8. 'break' → logprob: -10.767319679260254
    9. '           ' → logprob: -12.017319679260254
    10. ' break' → logprob: -12.392319679260254

Token 43: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49609026312828064
    2. '(n' → logprob: -1.121090292930603
    3. '(s' → logprob: -2.8710901737213135
    4. '("' → logprob: -5.246090412139893
    5. '('' → logprob: -6.121090412139893
    6. 's' → logprob: -7.746090412139893
    7. '(True' → logprob: -8.621089935302734
    8. '("("' → logprob: -8.621089935302734
    9. '(res' → logprob: -9.121089935302734
    10. 'n' → logprob: -9.871089935302734

Token 44: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.029356524348258972
    2. 'yes' → logprob: -4.154356479644775
    3. '0' → logprob: -4.529356479644775
    4. 'True' → logprob: -6.904356479644775
    5. '1' → logprob: -7.779356479644775
    6. 'same' → logprob: -8.154356956481934
    7. 'YES' → logprob: -8.279356956481934
    8. 'equal' → logprob: -8.779356956481934
    9. ' Yes' → logprob: -9.529356956481934
    10. 'Equal' → logprob: -9.779356956481934

Token 45: '');' (ID: 10477)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.34616947174072266
    2. '')
' → logprob: -1.3461694717407227
    3. ')' → logprob: -4.096169471740723
    4. '')
' → logprob: -4.221169471740723
    5. ')
' → logprob: -7.346169471740723
    6. ')')
' → logprob: -8.221169471740723
    7. ')
' → logprob: -9.096169471740723
    8. ''' → logprob: -11.846169471740723
    9. '")' → logprob: -11.971169471740723
    10. '")
' → logprob: -12.346169471740723

Token 46: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024283365346491337
    2. ' break' → logprob: -6.3774285316467285
    3. 'break' → logprob: -8.62742805480957
    4. '
' → logprob: -8.75242805480957
    5. 'n' → logprob: -9.12742805480957
    6. '   ' → logprob: -9.12742805480957
    7. '\n' → logprob: -10.37742805480957
    8. '	break' → logprob: -10.75242805480957
    9. '<|end|>' → logprob: -10.87742805480957
    10. ' 
' → logprob: -11.12742805480957

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023250950500369072
    2. ' =' → logprob: -3.7732510566711426
    3. '=True' → logprob: -13.273250579833984
    4. '=None' → logprob: -13.773250579833984
    5. '＝' → logprob: -14.148250579833984
    6. '=n' → logprob: -14.773250579833984
    7. '=end' → logprob: -15.148250579833984
    8. '=}' → logprob: -15.148250579833984
    9. '=
' → logprob: -15.398250579833984
    10. '=res' → logprob: -15.648250579833984

Token 48: ' True' (ID: 6432)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0841262936592102
    2. 'True' → logprob: -2.7091262340545654
    3. '1' → logprob: -5.5841264724731445
    4. 's' → logprob: -5.7091264724731445
    5. ' n' → logprob: -5.7091264724731445
    6. ' True' → logprob: -6.2091264724731445
    7. 't' → logprob: -6.8341264724731445
    8. '0' → logprob: -8.209126472473145
    9. '   ' → logprob: -8.459126472473145
    10. ' ' → logprob: -10.459126472473145

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7379547357559204
    2. '       ' → logprob: -0.8629547357559204
    3. '
' → logprob: -2.987954616546631
    4. '\n' → logprob: -3.487954616546631
    5. '    
' → logprob: -4.737954616546631
    6. ';' → logprob: -5.987954616546631
    7. '  
' → logprob: -6.487954616546631
    8. '        
' → logprob: -6.737954616546631
    9. '<|end|>' → logprob: -6.862954616546631
    10. '```' → logprob: -7.237954616546631

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029250639490783215
    2. '   ' → logprob: -6.002924919128418
    3. ';' → logprob: -8.627924919128418
    4. '	' → logprob: -10.002924919128418
    5. '    
' → logprob: -10.002924919128418
    6. '        
' → logprob: -10.377924919128418
    7. '
' → logprob: -10.877924919128418
    8. ',' → logprob: -10.877924919128418
    9. '	break' → logprob: -11.002924919128418
    10. '<|end|>' → logprob: -11.002924919128418

Token 51: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023929782037157565
    2. ' break' → logprob: -9.375239372253418
    3. '   ' → logprob: -9.500239372253418
    4. '	break' → logprob: -10.750239372253418
    5. 'break' (adapté à ' break') → logprob: -11.250239372253418
    6. ';' → logprob: -11.375239372253418
    7. ' ' → logprob: -12.125239372253418
    8. '\n' → logprob: -12.250239372253418
    9. '
' → logprob: -12.500239372253418
    10. '        
' → logprob: -12.625239372253418

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038419436663389206
    2. '    
' → logprob: -3.663419485092163
    3. '
' → logprob: -4.538419246673584
    4. ' 
' → logprob: -7.913419246673584
    5. '   
' → logprob: -8.288419723510742
    6. 'n' → logprob: -8.288419723510742
    7. '  
' → logprob: -8.538419723510742
    8. '\n' → logprob: -8.788419723510742
    9. '```' → logprob: -10.038419723510742
    10. '<|end|>' → logprob: -10.538419723510742

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020220205187797546
    2. 's' → logprob: -7.127021789550781
    3. ' s' → logprob: -7.252021789550781
    4. '    
' → logprob: -7.877021789550781
    5. 'n' → logprob: -9.627021789550781
    6. '
' → logprob: -10.627021789550781
    7. '```' → logprob: -10.752021789550781
    8. '   
' → logprob: -12.502021789550781
    9. '\n' → logprob: -12.752021789550781
    10. '  
' → logprob: -13.127021789550781

Token 54: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22810615599155426
    2. 's' → logprob: -1.603106141090393
    3. ' s' → logprob: -5.9781060218811035
    4. 'n' → logprob: -9.103106498718262
    5. ' ' → logprob: -10.978106498718262
    6. '```' → logprob: -11.353106498718262
    7. '    
' → logprob: -12.103106498718262
    8. '  ' → logprob: -12.728106498718262
    9. ' if' → logprob: -13.228106498718262
    10. 'if' → logprob: -13.478106498718262

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06578943878412247
    2. '   ' → logprob: -3.4407894611358643
    3. ':
' → logprob: -3.8157894611358643
    4. ' s' → logprob: -5.190789222717285
    5. ' if' → logprob: -6.565789222717285
    6. '       ' → logprob: -6.690789222717285
    7. 's' → logprob: -7.315789222717285
    8. ' :' → logprob: -7.940789222717285
    9. '    ' → logprob: -9.315789222717285
    10. '```' → logprob: -9.815789222717285

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25259536504745483
    2. ' s' → logprob: -1.8775954246520996
    3. ' n' → logprob: -3.0025954246520996
    4. '       ' → logprob: -4.6275954246521
    5. 's' → logprob: -5.2525954246521
    6. ' if' → logprob: -5.6275954246521
    7. 'n' → logprob: -6.3775954246521
    8. '    ' → logprob: -8.752594947814941
    9. '```' → logprob: -9.752594947814941
    10. '    
' → logprob: -10.752594947814941

Token 57: ' if' (ID: 538)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48889610171318054
    2. 's' → logprob: -0.9888961315155029
    3. '   ' → logprob: -4.363895893096924
    4. '       ' → logprob: -6.738895893096924
    5. 'n' → logprob: -7.738895893096924
    6. ' n' → logprob: -8.113896369934082
    7. ' if' → logprob: -10.238896369934082
    8. ' ' → logprob: -11.863896369934082
    9. '    ' → logprob: -11.863896369934082
    10. 'if' (adapté à ' if') → logprob: -12.238896369934082

Token 58: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6332391500473022
    2. 'n' → logprob: -0.7582391500473022
    3. 's' → logprob: -8.008238792419434
    4. ' s' → logprob: -8.383238792419434
    5. ' not' → logprob: -10.633238792419434
    6. 'res' → logprob: -10.758238792419434
    7. '   ' → logprob: -11.258238792419434
    8. ' res' → logprob: -11.383238792419434
    9. 'not' → logprob: -12.383238792419434
    10. ' ' → logprob: -12.883238792419434

Token 59: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.661796510219574
    2. ' >=' → logprob: -0.786796510219574
    3. '==' → logprob: -4.411796569824219
    4. '>=' → logprob: -4.411796569824219
    5. ' <' → logprob: -5.786796569824219
    6. ' ' → logprob: -6.911796569824219
    7. '<' → logprob: -9.036796569824219
    8. ' >' → logprob: -9.161796569824219
    9. '+' → logprob: -10.036796569824219
    10. '   ' → logprob: -10.536796569824219

Token 60: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0020282079931348562
    2. ' len' → logprob: -6.252027988433838
    3. '10' → logprob: -9.377028465270996
    4. '1' → logprob: -12.502028465270996
    5. '(len' → logprob: -12.502028465270996
    6. '=len' → logprob: -12.752028465270996
    7. '9' → logprob: -13.877028465270996
    8. '	len' → logprob: -14.127028465270996
    9. '<len' → logprob: -14.127028465270996
    10. ' ' → logprob: -14.377028465270996

Token 61: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00015860427811276168
    2. 's' → logprob: -9.375158309936523
    3. '(' → logprob: -9.875158309936523
    4. '(t' → logprob: -10.750158309936523
    5. '(st' → logprob: -15.250158309936523
    6. ' s' → logprob: -15.625158309936523
    7. ' (' → logprob: -16.125158309936523
    8. ')' → logprob: -16.750158309936523
    9. '(
' → logprob: -16.750158309936523
    10. 't' → logprob: -16.875158309936523

Token 62: ')-' (ID: 14080)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007060007657855749
    2. ')' → logprob: -5.5070600509643555
    3. '):
' → logprob: -6.1320600509643555
    4. ' ):' → logprob: -7.5070600509643555
    5. ')):' → logprob: -8.507060050964355
    6. '):
' → logprob: -10.632060050964355
    7. ':' → logprob: -12.132060050964355
    8. ')):
' → logprob: -12.382060050964355
    9. '))' → logprob: -12.382060050964355
    10. ''):' → logprob: -12.507060050964355

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '2' → logprob: -15.500007629394531
    4. '<|end|>' → logprob: -16.12500762939453
    5. '<|end|>' → logprob: -18.50000762939453
    6. '１' → logprob: -19.12500762939453
    7. '  ' → logprob: -19.12500762939453
    8. '   ' → logprob: -19.37500762939453
    9. '0' → logprob: -19.62500762939453
    10. '```' → logprob: -19.62500762939453

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029851730912923813
    2. ':
' → logprob: -3.5298516750335693
    3. '       ' → logprob: -10.404851913452148
    4. '   ' → logprob: -10.529851913452148
    5. ':return' → logprob: -11.154851913452148
    6. ' :' → logprob: -11.779851913452148
    7. '):' → logprob: -12.154851913452148
    8. ':
' → logprob: -12.529851913452148
    9. ':

' → logprob: -12.779851913452148
    10. ' :
' → logprob: -13.029851913452148

Token 65: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6087360382080078
    2. 'print' → logprob: -1.1087360382080078
    3. '           ' → logprob: -2.233736038208008
    4. ' print' → logprob: -4.608736038208008
    5. '   ' → logprob: -5.108736038208008
    6. 'break' → logprob: -6.358736038208008
    7. ' break' → logprob: -7.608736038208008
    8. '
' → logprob: -8.358736038208008
    9. '```' → logprob: -8.608736038208008
    10. '        
' → logprob: -9.858736038208008

Token 66: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0058944267220795155
    2. ' print' → logprob: -5.380894660949707
    3. '       ' → logprob: -6.880894660949707
    4. 'break' (adapté à ' break') → logprob: -9.130894660949707
    5. '   ' → logprob: -9.255894660949707
    6. '           ' → logprob: -10.380894660949707
    7. ' break' → logprob: -12.255894660949707
    8. ' ' → logprob: -12.880894660949707
    9. '```' → logprob: -13.505894660949707
    10. '	print' → logprob: -13.880894660949707

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.284048467874527
    2. '   ' → logprob: -1.4090484380722046
    3. '    
' → logprob: -6.409048557281494
    4. '\n' → logprob: -7.659048557281494
    5. 'n' → logprob: -8.159048080444336
    6. '
' → logprob: -8.659048080444336
    7. '  
' → logprob: -9.409048080444336
    8. ' s' → logprob: -9.659048080444336
    9. ' 
' → logprob: -9.784048080444336
    10. 's' → logprob: -9.909048080444336

Token 68: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18462592363357544
    2. '   ' → logprob: -1.8096258640289307
    3. '    
' → logprob: -6.05962610244751
    4. 'n' → logprob: -7.05962610244751
    5. '\n' → logprob: -7.30962610244751
    6. '
' → logprob: -7.55962610244751
    7. '  
' → logprob: -8.309625625610352
    8. ' 
' → logprob: -9.434625625610352
    9. '   
' → logprob: -10.059625625610352
    10. 's' → logprob: -10.934625625610352

Token 69: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14043956995010376
    2. 's' (adapté à ' s') → logprob: -2.265439510345459
    3. ' s' → logprob: -3.640439510345459
    4. 'n' → logprob: -7.140439510345459
    5. '
' → logprob: -8.890439987182617
    6. ' n' → logprob: -10.390439987182617
    7. '    
' → logprob: -11.390439987182617
    8. '       ' → logprob: -11.640439987182617
    9. ' ' → logprob: -12.765439987182617
    10. ' 
' → logprob: -12.890439987182617

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. '＝' → logprob: -14.701414108276367
    4. ',' → logprob: -15.451414108276367
    5. '=

' → logprob: -15.826414108276367
    6. '=s' → logprob: -16.826414108276367
    7. '=
' → logprob: -16.826414108276367
    8. ' ' → logprob: -16.826414108276367
    9. ' =
' → logprob: -17.076414108276367
    10. ' +=' → logprob: -18.826414108276367

Token 71: ' rot' (ID: 8845)
  Prédit: ' rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rot' → logprob: -0.25193363428115845
    2. 'rot' → logprob: -1.5019335746765137
    3. ' ro' → logprob: -12.751934051513672
    4. '(rot' → logprob: -13.626934051513672
    5. 'ro' → logprob: -16.001934051513672
    6. 'r' → logprob: -16.376934051513672
    7. ' ' → logprob: -16.501934051513672
    8. '.rot' → logprob: -16.876934051513672
    9. ' ' → logprob: -18.001934051513672
    10. ' rota' → logprob: -18.001934051513672

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009126556105911732
    2. '(' → logprob: -7.000912666320801
    3. 's' → logprob: -14.5009126663208
    4. '(st' → logprob: -15.2509126663208
    5. ' (' → logprob: -15.5009126663208
    6. '(ss' → logprob: -16.625911712646484
    7. '(
' → logprob: -16.875911712646484
    8. '(sp' → logprob: -18.375911712646484
    9. '(si' → logprob: -19.250911712646484
    10. '(S' → logprob: -19.375911712646484

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10026846826076508
    2. ')
' → logprob: -2.3502683639526367
    3. ')
' → logprob: -9.725268363952637
    4. ')

' → logprob: -13.725268363952637
    5. '   ' → logprob: -15.225268363952637
    6. ' )' → logprob: -15.475268363952637
    7. ' )
' → logprob: -15.850268363952637
    8. ')n' → logprob: -16.350269317626953
    9. ')`
' → logprob: -17.100269317626953
    10. ')return' → logprob: -17.225269317626953

Token 74: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.251568466424942
    2. '   ' → logprob: -1.6265684366226196
    3. '
' → logprob: -3.876568555831909
    4. ' n' → logprob: -6.12656831741333
    5. '       ' → logprob: -6.25156831741333
    6. '	n' → logprob: -8.126568794250488
    7. '
' → logprob: -9.001568794250488
    8. '    
' → logprob: -9.126568794250488
    9. ' ' → logprob: -9.376568794250488
    10. '\n' → logprob: -9.501568794250488

Token 75: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -4.7755875129951164e-05
    2. ' n' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.00004768371582
    4. '	n' → logprob: -17.62504768371582
    5. '
' → logprob: -18.50004768371582
    6. ' ' → logprob: -19.00004768371582
    7. '_n' → logprob: -19.00004768371582
    8. '  ' → logprob: -19.25004768371582
    9. '       ' → logprob: -19.75004768371582
    10. '```' → logprob: -20.12504768371582

Token 76: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2841618061065674
    2. ' +=' → logprob: -1.7841618061065674
    3. '+' → logprob: -2.5341618061065674
    4. '=' → logprob: -9.909161567687988
    5. ' +' → logprob: -10.659161567687988
    6. '+='' → logprob: -11.784161567687988
    7. '+="' → logprob: -12.534161567687988
    8. ' ' → logprob: -13.659161567687988
    9. '<|end|>' → logprob: -14.034161567687988
    10. '++' → logprob: -14.284161567687988

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.125123977661133
    4. '```' → logprob: -18.250123977661133
    5. '１' → logprob: -19.750123977661133
    6. '  ' → logprob: -20.250123977661133
    7. ' ' → logprob: -20.312623977661133
    8. '۱' → logprob: -20.687623977661133
    9. '`' → logprob: -21.437623977661133
    10. '	' → logprob: -21.937623977661133

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -19.0
    5. '１' → logprob: -20.125
    6. '<|end|>' → logprob: -20.25
    7. '۱' → logprob: -20.5625
    8. '  ' → logprob: -21.125
    9. '१' → logprob: -21.4375
    10. '`' → logprob: -21.75

Token 79: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00070230319397524
    2. 'else' → logprob: -8.125701904296875
    3. 'print' → logprob: -8.375701904296875
    4. '
' → logprob: -9.000701904296875
    5. '```' → logprob: -11.000701904296875
    6. ' if' → logprob: -11.125701904296875
    7. 'If' → logprob: -11.500701904296875
    8. ')
' → logprob: -12.875701904296875
    9. 'None' → logprob: -13.125701904296875
    10. '    
' → logprob: -13.500701904296875

Token 80: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00579002033919096
    2. 'else' → logprob: -5.2557902336120605
    3. '
' → logprob: -7.8807902336120605
    4. 'print' → logprob: -8.880789756774902
    5. '```' → logprob: -10.755789756774902
    6. 'None' → logprob: -11.505789756774902
    7. 'If' → logprob: -12.755789756774902
    8. ' if' → logprob: -13.630789756774902
    9. '    
' → logprob: -13.755789756774902
    10. '``' → logprob: -14.755789756774902

Token 81: ' not' (ID: 625)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.22422215342521667
    2. ' not' → logprob: -2.099222183227539
    3. 'res' → logprob: -2.599222183227539
    4. 'not' → logprob: -5.724222183227539
    5. ' ' → logprob: -7.349222183227539
    6. ' ' → logprob: -9.849222183227539
    7. '	res' → logprob: -12.599222183227539
    8. '  ' → logprob: -12.849222183227539
    9. '(res' → logprob: -12.974222183227539
    10. '   ' → logprob: -13.099222183227539

Token 82: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.018162349238991737
    2. 'res' → logprob: -4.018162250518799
    3. ' ' → logprob: -11.518162727355957
    4. '(res' → logprob: -13.143162727355957
    5. ' ' → logprob: -14.768162727355957
    6. '	res' → logprob: -16.01816177368164
    7. '  ' → logprob: -18.14316177368164
    8. '$res' → logprob: -18.39316177368164
    9. '_res' → logprob: -18.76816177368164
    10. 'resi' → logprob: -18.89316177368164

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01604328490793705
    2. ':
' → logprob: -4.141043186187744
    3. ':

' → logprob: -12.141043663024902
    4. ':
' → logprob: -13.391043663024902
    5. ' :' → logprob: -13.516043663024902
    6. '==' → logprob: -15.016043663024902
    7. ':return' → logprob: -16.266042709350586
    8. '=' → logprob: -16.516042709350586
    9. ' :
' → logprob: -16.766042709350586
    10. ' or' → logprob: -17.016042709350586

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06595506519079208
    2. ' print' → logprob: -3.06595516204834
    3. 'print' → logprob: -4.06595516204834
    4. '       ' → logprob: -10.06595516204834
    5. '	print' → logprob: -10.56595516204834
    6. '```' → logprob: -13.94095516204834
    7. '    ' → logprob: -14.19095516204834
    8. '.print' → logprob: -14.94095516204834
    9. ' prints' → logprob: -15.19095516204834
    10. ' ' → logprob: -15.44095516204834

Token 85: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5762555599212646
    2. 'print' (adapté à ' print') → logprob: -0.8262555599212646
    3. '   ' → logprob: -8.326255798339844
    4. '	print' → logprob: -9.576255798339844
    5. '.print' → logprob: -13.326255798339844
    6. '       ' → logprob: -13.701255798339844
    7. '    ' → logprob: -13.826255798339844
    8. ' ' → logprob: -14.951255798339844
    9. '<|end|>' → logprob: -15.326255798339844
    10. ' prints' → logprob: -16.826255798339844

Token 86: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04860009253025055
    2. '(' → logprob: -3.048600196838379
    3. '("' → logprob: -11.298600196838379
    4. '(
' → logprob: -16.548599243164062
    5. ' ('' → logprob: -16.673599243164062
    6. '(False' → logprob: -16.673599243164062
    7. '(\'' → logprob: -17.548599243164062
    8. '()' → logprob: -17.673599243164062
    9. '(

' → logprob: -17.798599243164062
    10. '(`' → logprob: -18.173599243164062

Token 87: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0802738870552275e-05
    2. '"No' → logprob: -11.75001049041748
    3. ''' → logprob: -12.87501049041748
    4. ' No' → logprob: -16.000011444091797
    5. 'Yes' → logprob: -16.375011444091797
    6. '"' → logprob: -17.000011444091797
    7. '(No' → logprob: -17.625011444091797
    8. 'NO' → logprob: -17.875011444091797
    9. '('' → logprob: -18.375011444091797
    10. '_No' → logprob: -19.250011444091797

Token 88: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00022892709239386022
    2. ')' → logprob: -8.750228881835938
    3. ')")' → logprob: -10.000228881835938
    4. '')' → logprob: -10.625228881835938
    5. '")
' → logprob: -14.625228881835938
    6. '}")' → logprob: -15.750228881835938
    7. '"' → logprob: -16.750228881835938
    8. '"))' → logprob: -17.500228881835938
    9. '\")' → logprob: -17.500228881835938
    10. ')"' → logprob: -17.750228881835938


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 31.40%
Précision adaptée (1ère position): 32.56%
Précision (top 10): 80.23%
================================================================================
