================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return int(input())

def get_nlist():
    return list(map(int, input().split()))

def prefix_slice(lst, idx):
    return lst[:idx+1]

def suffix_slice(lst, idx):
    return lst[idx+1:]

def calc_sum(lst):
    return sum(lst)

def calc_abs_diff(left_sum, right_sum):
    return abs(left_sum - right_sum)

def calc_partition_abs(lst, idx):
    left = prefix_slice(lst, idx)
    right = suffix_slice(lst, idx)
    left_sum = calc_sum(left)
    right_sum = calc_sum(right)
    return calc_abs_diff(left_sum, right_sum)

def build_abslist(lst, n):
    abslist = []
    for i in range(n-1):
        abs_val = calc_partition_abs(lst, i)
        abslist.append(abs_val)
    return abslist

def get_min(lst):
    return min(lst)

def main():
    n = get_input()
    nlist = get_nlist()
    abslist = build_abslist(nlist, n)
    min_val = get_min(abslist)
    print(min_val)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158825984224677
    2. '_' → logprob: -6.2521586418151855
    3. '():' → logprob: -9.252159118652344
    4. ' (' → logprob: -10.252159118652344
    5. '()' → logprob: -10.627159118652344
    6. '```' → logprob: -10.627159118652344
    7. '(_' → logprob: -11.502159118652344
    8. '(:' → logprob: -11.627159118652344
    9. '(_:' → logprob: -12.127159118652344
    10. ':' → logprob: -12.502159118652344

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4682254493236542
    2. '\' → logprob: -1.4682254791259766
    3. '\n' → logprob: -3.4682254791259766
    4. '   ' → logprob: -3.5932254791259766
    5. '(' → logprob: -3.8432254791259766
    6. '    
' → logprob: -4.593225479125977
    7. ':' → logprob: -4.718225479125977
    8. ''' → logprob: -5.468225479125977
    9. '()' → logprob: -5.468225479125977
    10. ''\' → logprob: -5.593225479125977

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4695643484592438
    2. 'user' → logprob: -1.9695643186569214
    3. 'i' → logprob: -2.719564437866211
    4. 'input' → logprob: -2.844564437866211
    5. 'x' → logprob: -3.344564437866211
    6. 'r' → logprob: -3.719564437866211
    7. ' ' → logprob: -4.219564437866211
    8. '   ' → logprob: -4.344564437866211
    9. 'u' → logprob: -4.844564437866211
    10. 'n' → logprob: -5.344564437866211

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5008310079574585
    2. ' input' → logprob: -1.1258310079574585
    3. 'input' → logprob: -3.000831127166748
    4. '"' → logprob: -4.375831127166748
    5. ''' → logprob: -5.750831127166748
    6. ' "' → logprob: -6.375831127166748
    7. '  ' → logprob: -7.000831127166748
    8. ' '' → logprob: -7.750831127166748
    9. ' None' → logprob: -8.37583065032959
    10. '(input' → logprob: -8.62583065032959

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003079671412706375
    2. '('' → logprob: -6.253079891204834
    3. ''' → logprob: -7.378079891204834
    4. '("("' → logprob: -9.128079414367676
    5. '`' → logprob: -9.378079414367676
    6. ' (' → logprob: -9.628079414367676
    7. '```' → logprob: -9.753079414367676
    8. '"' → logprob: -9.878079414367676
    9. ' ' → logprob: -10.378079414367676
    10. '   ' → logprob: -10.628079414367676

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021168837323784828
    2. '())' → logprob: -4.5211687088012695
    3. '()' → logprob: -5.0211687088012695
    4. '('' → logprob: -6.7711687088012695
    5. ')' → logprob: -7.0211687088012695
    6. '()))' → logprob: -7.3961687088012695
    7. '(""))' → logprob: -8.02116870880127
    8. '("("' → logprob: -8.89616870880127
    9. '(()' → logprob: -9.39616870880127
    10. '(
' → logprob: -9.64616870880127

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36174455285072327
    2. '```' → logprob: -2.7367446422576904
    3. '(' → logprob: -3.1117446422576904
    4. '#' → logprob: -3.3617446422576904
    5. '<|end|>' → logprob: -3.4867446422576904
    6. '\n' → logprob: -3.4867446422576904
    7. '
' → logprob: -3.6117446422576904
    8. '()' → logprob: -4.361744403839111
    9. '(
' → logprob: -4.611744403839111
    10. 'x' → logprob: -4.861744403839111

Token 10: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7555046081542969
    2. ' calculate' → logprob: -0.7555046081542969
    3. ' compute' → logprob: -3.880504608154297
    4. ' add' → logprob: -4.255504608154297
    5. ' process' → logprob: -4.880504608154297
    6. ' space' → logprob: -5.130504608154297
    7. ' main' → logprob: -5.755504608154297
    8. ' factorial' → logprob: -6.380504608154297
    9. ' check' → logprob: -7.130504608154297
    10. ' sum' → logprob: -7.255504608154297

Token 11: '_n' (ID: 2170)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.043952107429504395
    2. '_output' → logprob: -4.418951988220215
    3. '_' → logprob: -4.668951988220215
    4. '_user' → logprob: -5.043951988220215
    5. '_value' → logprob: -5.418951988220215
    6. '_string' → logprob: -5.918951988220215
    7. '_number' → logprob: -6.043951988220215
    8. '_sum' → logprob: -6.543951988220215
    9. '_data' → logprob: -6.668951988220215
    10. '_integer' → logprob: -7.543951988220215

Token 12: 'list' (ID: 2641)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.10168418288230896
    2. 'ext' → logprob: -2.851684093475342
    3. 'um' → logprob: -3.851684093475342
    4. '_' → logprob: -4.476684093475342
    5. '()' → logprob: -5.476684093475342
    6. '_ext' → logprob: -7.476684093475342
    7. 'ame' → logprob: -7.601684093475342
    8. 'umbers' → logprob: -7.601684093475342
    9. 'a' → logprob: -9.1016845703125
    10. '():
' → logprob: -9.7266845703125

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034234996885061264
    2. '_' → logprob: -3.7842350006103516
    3. '():' → logprob: -5.909235000610352
    4. '("("' → logprob: -6.409235000610352
    5. '_list' → logprob: -6.659235000610352
    6. '()' → logprob: -7.284235000610352
    7. '(_' → logprob: -7.284235000610352
    8. '(_)' → logprob: -7.659235000610352
    9. '('_' → logprob: -8.159235000610352
    10. '```' → logprob: -8.284235000610352

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00848586019128561
    2. '()' → logprob: -6.008485794067383
    3. '[]' → logprob: -6.133485794067383
    4. '(' → logprob: -6.383485794067383
    5. ' return' → logprob: -7.258485794067383
    6. 'return' → logprob: -7.758485794067383
    7. '[' → logprob: -8.008485794067383
    8. '(n' → logprob: -8.508485794067383
    9. '    ' → logprob: -9.008485794067383
    10. 'n' → logprob: -9.133485794067383

Token 15: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07896348088979721
    2. 'n' → logprob: -3.2039635181427
    3. ' n' → logprob: -3.4539635181427
    4. ' return' → logprob: -6.203963279724121
    5. 'return' (adapté à ' return') → logprob: -7.328963279724121
    6. '    ' → logprob: -7.578963279724121
    7. ' ' → logprob: -8.078963279724121
    8. '	n' → logprob: -10.328963279724121
    9. '       ' → logprob: -10.453963279724121
    10. 's' → logprob: -10.703963279724121

Token 16: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7666747570037842
    2. '[list' → logprob: -1.3916747570037842
    3. ' list' → logprob: -2.266674757003784
    4. 'list' → logprob: -2.391674757003784
    5. '[' → logprob: -3.391674757003784
    6. '[int' → logprob: -3.516674757003784
    7. ' []' → logprob: -4.016674995422363
    8. '(list' → logprob: -5.141674995422363
    9. '[]' → logprob: -5.641674995422363
    10. '[input' → logprob: -8.516674995422363

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26374608278274536
    2. '(int' → logprob: -1.7637460231781006
    3. '(input' → logprob: -3.5137460231781006
    4. '(map' → logprob: -3.7637460231781006
    5. '(range' → logprob: -5.13874626159668
    6. '()' → logprob: -7.13874626159668
    7. '(eval' → logprob: -8.63874626159668
    8. '[int' → logprob: -9.01374626159668
    9. '(filter' → logprob: -9.38874626159668
    10. '((' → logprob: -9.38874626159668

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012623480521142483
    2. '(' → logprob: -4.387623310089111
    3. 'int' → logprob: -9.88762378692627
    4. '(input' → logprob: -10.13762378692627
    5. ',int' → logprob: -12.01262378692627
    6. '<int' → logprob: -12.26262378692627
    7. '(
' → logprob: -12.38762378692627
    8. '=int' → logprob: -13.01262378692627
    9. ' (' → logprob: -13.51262378692627
    10. ')' → logprob: -13.63762378692627

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03799203038215637
    2. ',input' → logprob: -3.662992000579834
    3. 'input' → logprob: -4.787992000579834
    4. ',' → logprob: -6.162992000579834
    5. '))' → logprob: -7.662992000579834
    6. '(' → logprob: -8.287992477416992
    7. ' input' → logprob: -8.662992477416992
    8. ')' → logprob: -8.912992477416992
    9. '=input' → logprob: -9.662992477416992
    10. '),' → logprob: -10.162992477416992

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06214715912938118
    2. ' input' → logprob: -2.8121471405029297
    3. '(input' → logprob: -8.68714714050293
    4. ',input' → logprob: -12.06214714050293
    5. '=input' → logprob: -13.68714714050293
    6. '	input' → logprob: -14.31214714050293
    7. '<input' → logprob: -14.31214714050293
    8. '_input' → logprob: -14.93714714050293
    9. ' ' → logprob: -14.93714714050293
    10. ')' → logprob: -15.18714714050293

Token 21: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6324855089187622
    2. '().' → logprob: -1.1324855089187622
    3. '()' → logprob: -2.2574853897094727
    4. '())' → logprob: -3.2574853897094727
    5. '))' → logprob: -6.632485389709473
    6. '()));' → logprob: -7.132485389709473
    7. '())))' → logprob: -7.382485389709473
    8. ')' → logprob: -8.382485389709473
    9. '(' → logprob: -8.507485389709473
    10. '());' → logprob: -10.007485389709473

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001953967846930027
    2. 'strip' → logprob: -6.251954078674316
    3. 'rstrip' → logprob: -10.626954078674316
    4. ' split' → logprob: -14.001954078674316
    5. '(split' → logprob: -16.001953125
    6. ')' → logprob: -16.376953125
    7. 'spl' → logprob: -16.876953125
    8. ' strip' → logprob: -19.001953125
    9. ' ' → logprob: -19.251953125
    10. 's' → logprob: -19.251953125

Token 23: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019697988405823708
    2. '))' → logprob: -4.644698143005371
    3. '()' → logprob: -5.019698143005371
    4. '())' → logprob: -5.894698143005371
    5. '())))' → logprob: -7.894698143005371
    6. ')))' → logprob: -9.394698143005371
    7. '(' → logprob: -10.144698143005371
    8. ')' → logprob: -11.269698143005371
    9. '()))
' → logprob: -11.394698143005371
    10. '()));' → logprob: -12.269698143005371

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40308672189712524
    2. 'd' → logprob: -1.1530866622924805
    3. '
' → logprob: -5.7780866622924805
    4. 'n' → logprob: -5.9030866622924805
    5. '

' → logprob: -6.0280866622924805
    6. '#' → logprob: -6.1530866622924805
    7. '\' → logprob: -6.4030866622924805
    8. '```' → logprob: -6.5280866622924805
    9. '\n' → logprob: -7.2780866622924805
    10. 'a' → logprob: -7.2780866622924805

Token 25: ' prefix' (ID: 18633)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22426797449588776
    2. ' get' → logprob: -2.4742679595947266
    3. ' solve' → logprob: -3.2242679595947266
    4. ' calculate' → logprob: -3.2242679595947266
    5. ' factorial' → logprob: -4.224267959594727
    6. ' sum' → logprob: -5.349267959594727
    7. ' is' → logprob: -5.849267959594727
    8. ' compute' → logprob: -6.099267959594727
    9. ' add' → logprob: -6.224267959594727
    10. ' process' → logprob: -6.474267959594727

Token 26: '_slice' (ID: 62789)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015276718884706497
    2. '_sum' → logprob: -4.265276908874512
    3. '_s' → logprob: -8.265276908874512
    4. '_length' → logprob: -8.390276908874512
    5. '_len' → logprob: -8.515276908874512
    6. '_array' → logprob: -8.890276908874512
    7. ' _' → logprob: -9.890276908874512
    8. '_count' → logprob: -10.640276908874512
    9. '_x' → logprob: -10.765276908874512
    10. '_size' → logprob: -10.765276908874512

Token 27: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007943779928609729
    2. '_' → logprob: -8.000794410705566
    3. 's' → logprob: -9.125794410705566
    4. '(_' → logprob: -10.000794410705566
    5. '(s' → logprob: -10.125794410705566
    6. ' (' → logprob: -10.250794410705566
    7. '_list' → logprob: -10.375794410705566
    8. '(_)' → logprob: -10.500794410705566
    9. '(n' → logprob: -10.625794410705566
    10. 'es' → logprob: -11.375794410705566

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18034560978412628
    2. '(' → logprob: -2.3053455352783203
    3. '[' → logprob: -3.3053455352783203
    4. ' ,' → logprob: -3.6803455352783203
    5. '   ' → logprob: -7.05534553527832
    6. ')' → logprob: -7.68034553527832
    7. '[:' → logprob: -7.93034553527832
    8. '[:]' → logprob: -8.30534553527832
    9. ',:)' → logprob: -8.80534553527832
    10. '[:,' → logprob: -9.05534553527832

Token 29: ' idx' (ID: 14016)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17656877636909485
    2. ' k' → logprob: -2.6765687465667725
    3. 'n' → logprob: -3.5515687465667725
    4. ' idx' → logprob: -3.8015687465667725
    5. ' end' → logprob: -4.676568984985352
    6. ' index' → logprob: -4.676568984985352
    7. 'k' → logprob: -5.301568984985352
    8. ' length' → logprob: -5.301568984985352
    9. ' i' → logprob: -5.551568984985352
    10. ' stop' → logprob: -6.801568984985352

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001057698973454535
    2. ')' → logprob: -7.2510576248168945
    3. ' ):' → logprob: -8.751057624816895
    4. '):
' → logprob: -9.876057624816895
    5. '+' → logprob: -10.001057624816895
    6. 's' → logprob: -10.501057624816895
    7. ':' → logprob: -10.626057624816895
    8. '=' → logprob: -11.876057624816895
    9. ' ' → logprob: -12.126057624816895
    10. '   ' → logprob: -12.626057624816895

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45967936515808105
    2. ':' → logprob: -1.334679365158081
    3. '[:]' → logprob: -2.834679365158081
    4. '[:' → logprob: -3.209679365158081
    5. '[' → logprob: -6.20967960357666
    6. ' :' → logprob: -6.83467960357666
    7. '[]' → logprob: -7.70967960357666
    8. ':return' → logprob: -7.83467960357666
    9. '  ' → logprob: -7.95967960357666
    10. '(' → logprob: -8.08467960357666

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14216835796833038
    2. '   ' → logprob: -2.1421682834625244
    3. 'return' (adapté à ' return') → logprob: -4.2671685218811035
    4. '    ' → logprob: -8.017168045043945
    5. '	return' → logprob: -8.392168045043945
    6. '```' → logprob: -9.142168045043945
    7. '    
' → logprob: -9.767168045043945
    8. '[]' → logprob: -9.767168045043945
    9. '[' → logprob: -9.767168045043945
    10. ' ' → logprob: -9.892168045043945

Token 33: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.31329116225242615
    2. ' lst' → logprob: -1.3132911920547485
    3. '[' → logprob: -11.563291549682617
    4. '(lst' → logprob: -11.938291549682617
    5. '_lst' → logprob: -12.313291549682617
    6. '   ' → logprob: -12.938291549682617
    7. '[]' → logprob: -13.188291549682617
    8. '.lst' → logprob: -14.188291549682617
    9. 'l' → logprob: -14.313291549682617
    10. ' ' → logprob: -14.563291549682617

Token 34: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0005164555623196065
    2. '[' → logprob: -7.875516414642334
    3. '[:]' → logprob: -9.000516891479492
    4. ' [:' → logprob: -12.000516891479492
    5. '[:-' → logprob: -12.750516891479492
    6. '[
' → logprob: -12.875516891479492
    7. ':' → logprob: -14.625516891479492
    8. '[idx' → logprob: -15.250516891479492
    9. '][:' → logprob: -15.500516891479492
    10. ' ' → logprob: -15.875516891479492

Token 35: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.872261317563243e-05
    2. ' idx' → logprob: -9.750059127807617
    3. '	idx' → logprob: -15.500059127807617
    4. '(idx' → logprob: -15.875059127807617
    5. '_idx' → logprob: -17.000059127807617
    6. '   ' → logprob: -17.625059127807617
    7. 'index' → logprob: -18.250059127807617
    8. ' ' → logprob: -18.625059127807617
    9. '(' → logprob: -19.375059127807617
    10. '[idx' → logprob: -19.500059127807617

Token 36: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40987318754196167
    2. '+' → logprob: -1.2848732471466064
    3. ']' → logprob: -3.5348732471466064
    4. ')]' → logprob: -3.7848732471466064
    5. '])' → logprob: -4.909873008728027
    6. ')])' → logprob: -8.534873008728027
    7. ' +' → logprob: -9.659873008728027
    8. ' )' → logprob: -10.659873008728027
    9. '])]' → logprob: -11.284873008728027
    10. '）' → logprob: -11.409873008728027

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. ')' → logprob: -16.000001907348633
    4. ']' → logprob: -18.500001907348633
    5. '```' → logprob: -18.625001907348633
    6. '１' → logprob: -19.750001907348633
    7. '+' → logprob: -20.687501907348633
    8. '۱' → logprob: -20.750001907348633
    9. '0' → logprob: -20.937501907348633
    10. '   ' → logprob: -21.062501907348633

Token 38: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ']' → logprob: -13.375003814697266
    3. '）' → logprob: -14.000003814697266
    4. '])' → logprob: -14.500003814697266
    5. ')
' → logprob: -15.750003814697266
    6. '}' → logprob: -16.000003814697266
    7. '<|end|>' → logprob: -16.000003814697266
    8. ' )' → logprob: -16.125003814697266
    9. '`)' → logprob: -16.250003814697266
    10. ')return' → logprob: -16.500003814697266

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009104225784540176
    2. '#' → logprob: -5.134104251861572
    3. '\' → logprob: -7.384104251861572
    4. '
' → logprob: -7.634104251861572
    5. '```' → logprob: -7.884104251861572
    6. 'd' → logprob: -8.009103775024414
    7. '<|end|>' → logprob: -8.009103775024414
    8. 'print' → logprob: -8.384103775024414
    9. '\n' → logprob: -8.884103775024414
    10. 'n' → logprob: -9.259103775024414

Token 40: ' suffix' (ID: 43412)
  Prédit: ' suffix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suffix' → logprob: -0.5025193691253662
    2. ' main' → logprob: -1.7525193691253662
    3. ' prefix' → logprob: -2.127519369125366
    4. 'suffix' → logprob: -3.502519369125366
    5. ' max' → logprob: -3.877519369125366
    6. ' sum' → logprob: -4.502519607543945
    7. ' reverse' → logprob: -5.127519607543945
    8. ' find' → logprob: -5.502519607543945
    9. ' get' → logprob: -5.627519607543945
    10. ' binary' → logprob: -5.627519607543945

Token 41: '_slice' (ID: 62789)
  Prédit: '_slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slice' → logprob: -7.922563963802531e-05
    2. '_' → logprob: -10.125079154968262
    3. '_s' → logprob: -10.875079154968262
    4. '_strip' → logprob: -12.000079154968262
    5. ' _' → logprob: -12.875079154968262
    6. '_suffix' → logprob: -13.125079154968262
    7. '_append' → logprob: -13.250079154968262
    8. '```' → logprob: -13.625079154968262
    9. '_cut' → logprob: -14.250079154968262
    10. '_slide' → logprob: -14.375079154968262

Token 42: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0011751054553315043
    2. '(' → logprob: -6.7511749267578125
    3. '(ls' → logprob: -13.001174926757812
    4. ' (' → logprob: -14.001174926757812
    5. '(lhs' → logprob: -14.376174926757812
    6. '_lst' → logprob: -14.876174926757812
    7. '(lista' → logprob: -15.376174926757812
    8. '(ll' → logprob: -16.001174926757812
    9. '(l' → logprob: -16.126174926757812
    10. '(lua' → logprob: -16.751174926757812

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ' ,' → logprob: -9.500078201293945
    3. ',l' → logprob: -12.875078201293945
    4. '   ' → logprob: -15.750078201293945
    5. ',n' → logprob: -15.875078201293945
    6. '(lst' → logprob: -16.125078201293945
    7. ',
' → logprob: -16.500078201293945
    8. '‌,' → logprob: -16.875078201293945
    9. ',len' → logprob: -17.000078201293945
    10. ',ll' → logprob: -17.125078201293945

Token 44: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00865286123007536
    2. 'idx' → logprob: -4.758652687072754
    3. '	idx' → logprob: -11.633652687072754
    4. ' ' → logprob: -12.258652687072754
    5. ' lst' → logprob: -12.258652687072754
    6. ' index' → logprob: -12.258652687072754
    7. '(idx' → logprob: -13.008652687072754
    8. 'index' → logprob: -13.133652687072754
    9. '   ' → logprob: -13.383652687072754
    10. ',' → logprob: -13.508652687072754

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006097480072639883
    2. '):
' → logprob: -7.625609874725342
    3. ')' → logprob: -9.250609397888184
    4. ':' → logprob: -11.500609397888184
    5. ' ):' → logprob: -12.000609397888184
    6. '   ' → logprob: -12.125609397888184
    7. '):
' → logprob: -13.000609397888184
    8. ']:' → logprob: -14.500609397888184
    9. '=' → logprob: -15.750609397888184
    10. ' ' → logprob: -15.875609397888184

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007416493725031614
    2. ' return' → logprob: -5.382416725158691
    3. 'return' → logprob: -5.882416725158691
    4. '    ' → logprob: -13.132416725158691
    5. '	return' → logprob: -13.507416725158691
    6. '```' → logprob: -15.007416725158691
    7. '  ' → logprob: -15.632416725158691
    8. '       ' → logprob: -15.757416725158691
    9. '   ' → logprob: -16.382415771484375
    10. ' ' → logprob: -16.382415771484375

Token 47: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.00925175566226244
    2. 'return' (adapté à ' return') → logprob: -5.384251594543457
    3. '   ' → logprob: -5.384251594543457
    4. '    ' → logprob: -10.509251594543457
    5. '	return' → logprob: -12.509251594543457
    6. ' lst' → logprob: -14.259251594543457
    7. ' ' → logprob: -15.009251594543457
    8. 'eturn' → logprob: -15.759251594543457
    9. '```' → logprob: -15.759251594543457
    10. 'lst' → logprob: -16.009252548217773

Token 48: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.16022635996341705
    2. 'lst' → logprob: -1.9102263450622559
    3. '_lst' → logprob: -13.910226821899414
    4. '(lst' → logprob: -14.160226821899414
    5. 'list' → logprob: -15.785226821899414
    6. '.lst' → logprob: -15.910226821899414
    7. ' ls' → logprob: -16.410226821899414
    8. ' list' → logprob: -16.660226821899414
    9. 'Lst' → logprob: -17.285226821899414
    10. ' ' → logprob: -17.410226821899414

Token 49: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.208742156624794
    2. '[:' → logprob: -1.7087421417236328
    3. '[len' → logprob: -5.833742141723633
    4. '[' → logprob: -6.208742141723633
    5. '[:]' → logprob: -6.208742141723633
    6. '[::-' → logprob: -8.583742141723633
    7. '[:-' → logprob: -9.458742141723633
    8. '[-' → logprob: -10.333742141723633
    9. 'lst' → logprob: -11.583742141723633
    10. '```' → logprob: -11.708742141723633

Token 50: '+' (ID: 10)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.06201529875397682
    2. ':' → logprob: -2.8120152950286865
    3. ':].' → logprob: -10.937015533447266
    4. ':],' → logprob: -11.437015533447266
    5. '+' → logprob: -11.812015533447266
    6. ' :]' → logprob: -12.437015533447266
    7. ':]
' → logprob: -12.687015533447266
    8. '+:' → logprob: -13.312015533447266
    9. ':]

' → logprob: -14.062015533447266
    10. ':)' → logprob: -14.062015533447266

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. 'len' → logprob: -13.875001907348633
    3. 'None' → logprob: -14.625001907348633
    4. ' ' → logprob: -14.750001907348633
    5. ')' → logprob: -15.500001907348633
    6. '+' → logprob: -19.000001907348633
    7. '```' → logprob: -19.125001907348633
    8. '0' → logprob: -19.250001907348633
    9. ' None' → logprob: -19.500001907348633
    10. '(None' → logprob: -19.875001907348633

Token 52: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3134051561355591
    2. ':]' → logprob: -1.313405156135559
    3. ':' → logprob: -9.56340503692627
    4. ')' → logprob: -10.68840503692627
    5. ' :]' → logprob: -10.81340503692627
    6. ' ]' → logprob: -11.06340503692627
    7. ')]' → logprob: -12.18840503692627
    8. '])' → logprob: -12.56340503692627
    9. ':],' → logprob: -13.68840503692627
    10. '']' → logprob: -13.81340503692627

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035962676629424095
    2. '<|end|>' → logprob: -6.003596305847168
    3. '
' → logprob: -7.128596305847168
    4. '

' → logprob: -8.628596305847168
    5. '<|end|>' → logprob: -9.753596305847168
    6. '```' → logprob: -10.503596305847168
    7. '\' → logprob: -11.003596305847168
    8. '#' → logprob: -11.378596305847168
    9. ' def' → logprob: -12.753596305847168
    10. '\n' → logprob: -12.878596305847168

Token 54: ' calc' (ID: 25691)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.663648247718811
    2. ' find' → logprob: -2.1636481285095215
    3. ' max' → logprob: -2.2886481285095215
    4. ' main' → logprob: -2.9136481285095215
    5. ' is' → logprob: -3.2886481285095215
    6. ' process' → logprob: -3.5386481285095215
    7. ' get' → logprob: -4.0386481285095215
    8. ' check' → logprob: -4.1636481285095215
    9. ' calculate' → logprob: -4.1636481285095215
    10. ' prefix' → logprob: -4.2886481285095215

Token 55: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5185542106628418
    2. '_max' → logprob: -1.5185542106628418
    3. '_prefix' → logprob: -2.143554210662842
    4. '_min' → logprob: -4.643554210662842
    5. '_suffix' → logprob: -4.643554210662842
    6. '_diff' → logprob: -4.893554210662842
    7. '_' → logprob: -5.268554210662842
    8. '_sub' → logprob: -5.643554210662842
    9. '_difference' → logprob: -5.893554210662842
    10. '_range' → logprob: -6.143554210662842

Token 56: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02302882820367813
    2. '(lst' → logprob: -3.89802885055542
    3. '(l' → logprob: -7.64802885055542
    4. '_' → logprob: -8.398028373718262
    5. '(ls' → logprob: -8.523028373718262
    6. '(a' → logprob: -8.648028373718262
    7. '(prefix' → logprob: -9.148028373718262
    8. '_list' → logprob: -9.148028373718262
    9. '(nums' → logprob: -9.398028373718262
    10. '_lst' → logprob: -9.398028373718262

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012058418244123459
    2. ')' → logprob: -4.512058258056641
    3. '):
' → logprob: -8.01205825805664
    4. ',' → logprob: -8.88705825805664
    5. '(lst' → logprob: -8.88705825805664
    6. '   ' → logprob: -9.13705825805664
    7. ' ):' → logprob: -9.38705825805664
    8. '[]):' → logprob: -9.51205825805664
    9. '(' → logprob: -9.88705825805664
    10. '[' → logprob: -10.63705825805664

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09236055612564087
    2. ' return' → logprob: -2.467360496520996
    3. 'return' → logprob: -5.967360496520996
    4. ' sum' → logprob: -7.467360496520996
    5. 'sum' → logprob: -8.342360496520996
    6. '	return' → logprob: -11.217360496520996
    7. '  ' → logprob: -11.967360496520996
    8. '    ' → logprob: -11.967360496520996
    9. ' ' → logprob: -12.217360496520996
    10. '```' → logprob: -12.592360496520996

Token 59: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.693519115447998
    2. 'return' (adapté à ' return') → logprob: -0.693519115447998
    3. '   ' → logprob: -7.943519115447998
    4. 'sum' → logprob: -11.318519592285156
    5. ' sum' → logprob: -13.068519592285156
    6. ' ' → logprob: -13.818519592285156
    7. '	return' → logprob: -14.693519592285156
    8. '```' → logprob: -14.943519592285156
    9. 'eturn' → logprob: -15.193519592285156
    10. ')' → logprob: -15.568519592285156

Token 60: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.043004684150218964
    2. 'sum' → logprob: -3.1680047512054443
    3. ' ' → logprob: -13.293004989624023
    4. '   ' → logprob: -13.668004989624023
    5. '(sum' → logprob: -13.918004989624023
    6. '	sum' → logprob: -14.168004989624023
    7. ' ' → logprob: -14.543004989624023
    8. '  ' → logprob: -16.168004989624023
    9. '=sum' → logprob: -16.293004989624023
    10. '```' → logprob: -16.418004989624023

Token 61: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.1269412338733673
    2. '(' → logprob: -2.126941204071045
    3. '(ls' → logprob: -12.001941680908203
    4. '(list' → logprob: -13.001941680908203
    5. '(
' → logprob: -13.126941680908203
    6. '(lista' → logprob: -14.626941680908203
    7. '(l' → logprob: -15.251941680908203
    8. 'lst' → logprob: -15.376941680908203
    9. '(

' → logprob: -15.376941680908203
    10. ' (' → logprob: -15.626941680908203

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '())' → logprob: -13.375001907348633
    3. '()' → logprob: -15.125001907348633
    4. ')
' → logprob: -15.750001907348633
    5. ' )' → logprob: -16.000001907348633
    6. '))' → logprob: -16.250001907348633
    7. '[' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '）' → logprob: -17.875001907348633
    10. ')return' → logprob: -18.000001907348633

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001433216268196702
    2. '#' → logprob: -7.751433372497559
    3. '<|end|>' → logprob: -8.001433372497559
    4. '
' → logprob: -8.751433372497559
    5. 'n' → logprob: -9.001433372497559
    6. '\' → logprob: -9.376433372497559
    7. '```' → logprob: -9.501433372497559
    8. 'd' → logprob: -10.626433372497559
    9. '\n' → logprob: -10.876433372497559
    10. 'print' → logprob: -10.876433372497559

Token 64: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.034389927983284
    2. ' max' → logprob: -3.7843899726867676
    3. ' calculate' → logprob: -6.034389972686768
    4. ' calc' → logprob: -6.284389972686768
    5. 'main' → logprob: -6.409389972686768
    6. ' prefix' → logprob: -6.909389972686768
    7. ' process' → logprob: -7.034389972686768
    8. ' find' → logprob: -7.409389972686768
    9. ' solve' → logprob: -7.534389972686768
    10. ' is' → logprob: -8.28438949584961

Token 65: '_abs' (ID: 81310)
  Prédit: '_product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.4820917546749115
    2. '_max' → logprob: -1.8570917844772339
    3. '_average' → logprob: -1.9820917844772339
    4. '_avg' → logprob: -2.9820916652679443
    5. '_mean' → logprob: -4.232091903686523
    6. '_diff' → logprob: -4.982091903686523
    7. '_prod' → logprob: -5.357091903686523
    8. '_mul' → logprob: -6.232091903686523
    9. '_difference' → logprob: -6.232091903686523
    10. '_m' → logprob: -6.857091903686523

Token 66: '_diff' (ID: 41047)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07797995209693909
    2. '_sum' → logprob: -3.3279800415039062
    3. '(_' → logprob: -4.202980041503906
    4. '_diff' → logprob: -4.577980041503906
    5. '(_)' → logprob: -5.827980041503906
    6. '_value' → logprob: -5.952980041503906
    7. '_val' → logprob: -6.452980041503906
    8. '_' → logprob: -6.577980041503906
    9. '('_' → logprob: -7.202980041503906
    10. '<|end|>' → logprob: -7.452980041503906

Token 67: '(left' (ID: 32958)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.5241460204124451
    2. '(' → logprob: -0.8991460204124451
    3. '(lhs' → logprob: -7.77414608001709
    4. '(a' → logprob: -8.64914608001709
    5. '(ls' → logprob: -8.77414608001709
    6. ' (' → logprob: -9.64914608001709
    7. '(list' → logprob: -10.14914608001709
    8. '_lst' → logprob: -10.52414608001709
    9. '(l' → logprob: -11.39914608001709
    10. '()' → logprob: -11.52414608001709

Token 68: '_sum' (ID: 29859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4795657694339752
    2. '(' → logprob: -1.4795657396316528
    3. '_sum' → logprob: -2.8545658588409424
    4. '_,' → logprob: -3.6045658588409424
    5. ')' → logprob: -3.7295658588409424
    6. '(lst' → logprob: -3.8545658588409424
    7. '(left' → logprob: -5.229565620422363
    8. ' ,' → logprob: -5.229565620422363
    9. '_' → logprob: -5.854565620422363
    10. ',_' → logprob: -6.604565620422363

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035274302354082465
    2. ',right' → logprob: -8.75035285949707
    3. ',left' → logprob: -9.00035285949707
    4. ' ,' → logprob: -9.87535285949707
    5. '(left' → logprob: -11.87535285949707
    6. '(' → logprob: -12.25035285949707
    7. ')' → logprob: -13.25035285949707
    8. ',last' → logprob: -13.87535285949707
    9. '):' → logprob: -14.12535285949707
    10. ',
' → logprob: -14.25035285949707

Token 70: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.34845778346061707
    2. ' right' → logprob: -1.2234578132629395
    3. '	right' → logprob: -12.598457336425781
    4. '   ' → logprob: -13.098457336425781
    5. ')' → logprob: -13.223457336425781
    6. 'left' → logprob: -13.598457336425781
    7. ',right' → logprob: -13.848457336425781
    8. '_right' → logprob: -14.223457336425781
    9. ':right' → logprob: -14.598457336425781
    10. 'r' → logprob: -14.598457336425781

Token 71: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0013980952790006995
    2. '_s' → logprob: -7.376398086547852
    3. ')_' → logprob: -8.251398086547852
    4. '_' → logprob: -8.751398086547852
    5. '_diff' → logprob: -9.001398086547852
    6. 's' → logprob: -9.251398086547852
    7. ')' → logprob: -10.126398086547852
    8. ' _' → logprob: -10.376398086547852
    9. '):' → logprob: -10.751398086547852
    10. 'sum' → logprob: -11.376398086547852

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024834630312398076
    2. '):
' → logprob: -9.000247955322266
    3. ')' → logprob: -9.125247955322266
    4. ' ):' → logprob: -11.750247955322266
    5. '   ' → logprob: -12.625247955322266
    6. ':' → logprob: -13.500247955322266
    7. '):
' → logprob: -14.375247955322266
    8. ',' → logprob: -14.750247955322266
    9. ' ' → logprob: -15.000247955322266
    10. '**' → logprob: -15.125247955322266

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0172920860350132
    2. ' return' → logprob: -4.267292022705078
    3. ' abs' → logprob: -5.892292022705078
    4. 'abs' → logprob: -8.267292022705078
    5. 'return' → logprob: -9.392292022705078
    6. '    ' → logprob: -11.267292022705078
    7. ' ' → logprob: -12.892292022705078
    8. '  ' → logprob: -13.142292022705078
    9. '	return' → logprob: -13.267292022705078
    10. '    
' → logprob: -13.517292022705078

Token 74: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21199974417686462
    2. '   ' → logprob: -2.2119996547698975
    3. ' return' → logprob: -2.7119996547698975
    4. 'abs' → logprob: -4.211999893188477
    5. ' abs' → logprob: -8.086999893188477
    6. ' ' → logprob: -11.586999893188477
    7. '	return' → logprob: -11.711999893188477
    8. '```' → logprob: -12.461999893188477
    9. '  ' → logprob: -13.086999893188477
    10. '    ' → logprob: -14.211999893188477

Token 75: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.029752686619758606
    2. 'abs' → logprob: -3.529752731323242
    3. '(abs' → logprob: -13.529752731323242
    4. '   ' → logprob: -14.279752731323242
    5. ' max' → logprob: -15.529752731323242
    6. ' ' → logprob: -16.779752731323242
    7. ' ' → logprob: -17.154752731323242
    8. ' left' → logprob: -17.404752731323242
    9. '.abs' → logprob: -17.779752731323242
    10. '_abs' → logprob: -18.654752731323242

Token 76: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.25193166732788086
    2. '(' → logprob: -1.5019316673278809
    3. '(
' → logprob: -14.126932144165039
    4. '((' → logprob: -14.501932144165039
    5. 'left' → logprob: -14.626932144165039
    6. ' (' → logprob: -15.501932144165039
    7. '(lhs' → logprob: -15.751932144165039
    8. '(

' → logprob: -15.876932144165039
    9. ',left' → logprob: -16.00193214416504
    10. '(right' → logprob: -16.12693214416504

Token 77: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.688212614681106e-05
    2. '_diff' → logprob: -11.625017166137695
    3. '_' → logprob: -12.125017166137695
    4. '_s' → logprob: -13.375017166137695
    5. '_minus' → logprob: -15.500017166137695
    6. 'sum' → logprob: -15.625017166137695
    7. '-_' → logprob: -16.000017166137695
    8. '_difference' → logprob: -16.250017166137695
    9. 's' → logprob: -16.750017166137695
    10. ' _' → logprob: -17.125017166137695

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07891038805246353
    2. ' -' → logprob: -2.5789103507995605
    3. ' ' → logprob: -11.203910827636719
    4. '-right' → logprob: -12.203910827636719
    5. '-left' → logprob: -14.453910827636719
    6. ')' → logprob: -14.703910827636719
    7. '   ' → logprob: -15.078910827636719
    8. '<|end|>' → logprob: -15.203910827636719
    9. '-user' → logprob: -16.57891082763672
    10. '-risk' → logprob: -17.32891082763672

Token 79: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0031781906727701426
    2. ' right' → logprob: -5.753178119659424
    3. '	right' → logprob: -15.128178596496582
    4. '(right' → logprob: -15.878178596496582
    5. ' ' → logprob: -17.128177642822266
    6. '[right' → logprob: -17.253177642822266
    7. '<|end|>' → logprob: -18.003177642822266
    8. ')' → logprob: -18.253177642822266
    9. '   ' → logprob: -18.628177642822266
    10. ':right' → logprob: -18.753177642822266

Token 80: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0007219645194709301
    2. '_s' → logprob: -7.8757219314575195
    3. ')' → logprob: -8.75072193145752
    4. '_' → logprob: -9.00072193145752
    5. ')_' → logprob: -10.25072193145752
    6. '_)' → logprob: -10.87572193145752
    7. ' _' → logprob: -12.87572193145752
    8. '_val' → logprob: -14.75072193145752
    9. '_ss' → logprob: -15.12572193145752
    10. '_SUM' → logprob: -15.25072193145752

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -15.875
    3. ')
' → logprob: -17.125
    4. ' )' → logprob: -17.25
    5. '()' → logprob: -18.0
    6. '(' → logprob: -18.875
    7. ')`' → logprob: -18.875
    8. ')))' → logprob: -19.375
    9. '`)' → logprob: -19.375
    10. '')' → logprob: -19.375

Token 82: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4318501353263855
    2. 'def' → logprob: -1.1818501949310303
    3. '#' → logprob: -4.056849956512451
    4. 'n' → logprob: -4.181849956512451
    5. 'a' → logprob: -5.931849956512451
    6. '
' → logprob: -5.931849956512451
    7. '\' → logprob: -6.431849956512451
    8. '```' → logprob: -6.681849956512451
    9. '\n' → logprob: -7.681849956512451
    10. '(' → logprob: -7.681849956512451

Token 83: ' calc' (ID: 25691)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.03655446320772171
    2. ' get' → logprob: -4.286554336547852
    3. ' calculate' → logprob: -4.661554336547852
    4. ' main' → logprob: -5.536554336547852
    5. ' minimal' → logprob: -6.536554336547852
    6. ' best' → logprob: -6.536554336547852
    7. ' compute' → logprob: -6.786554336547852
    8. ' min' → logprob: -7.036554336547852
    9. ' balance' → logprob: -7.411554336547852
    10. ' split' → logprob: -7.536554336547852

Token 84: '_partition' (ID: 115292)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.1622644662857056
    2. '_' → logprob: -1.6622644662857056
    3. '_prefix' → logprob: -1.7872644662857056
    4. '_split' → logprob: -2.412264347076416
    5. '_diff' → logprob: -2.662264347076416
    6. '_partition' → logprob: -3.162264347076416
    7. '_difference' → logprob: -3.787264347076416
    8. '_max' → logprob: -3.912264347076416
    9. '_sum' → logprob: -4.162264347076416
    10. '_total' → logprob: -4.287264347076416

Token 85: '_abs' (ID: 81310)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.06979501247406
    2. '(' → logprob: -1.19479501247406
    3. '_difference' → logprob: -1.69479501247406
    4. '_' → logprob: -2.5697951316833496
    5. '_point' → logprob: -3.0697951316833496
    6. '_sum' → logprob: -3.8197951316833496
    7. '_index' → logprob: -5.56979513168335
    8. '_split' → logprob: -5.81979513168335
    9. '_cut' → logprob: -6.19479513168335
    10. '_score' → logprob: -6.56979513168335

Token 86: '(lst' (ID: 95688)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.008614103309810162
    2. '_' → logprob: -5.2586140632629395
    3. '_difference' → logprob: -5.8836140632629395
    4. '_sum' → logprob: -8.133614540100098
    5. 'diff' → logprob: -8.508614540100098
    6. '_val' → logprob: -10.383614540100098
    7. '_div' → logprob: -11.133614540100098
    8. '_dist' → logprob: -11.758614540100098
    9. '_d' → logprob: -11.883614540100098
    10. '_value' → logprob: -12.508614540100098

Token 87: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06918039172887802
    2. ')' → logprob: -2.944180488586426
    3. ',' → logprob: -4.444180488586426
    4. '(' → logprob: -6.194180488586426
    5. ' ):' → logprob: -9.194180488586426
    6. '   ' → logprob: -9.944180488586426
    7. '):
' → logprob: -10.444180488586426
    8. '_' → logprob: -10.694180488586426
    9. '(i' → logprob: -10.694180488586426
    10. ')(' → logprob: -10.944180488586426

Token 88: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.13291095197200775
    2. ' idx' → logprob: -2.507910966873169
    3. 'index' → logprob: -3.882910966873169
    4. 'pivot' → logprob: -5.13291072845459
    5. 'i' → logprob: -6.00791072845459
    6. ' index' → logprob: -6.13291072845459
    7. 'partition' → logprob: -6.25791072845459
    8. 'k' → logprob: -6.25791072845459
    9. 'n' → logprob: -6.50791072845459
    10. ')' → logprob: -6.88291072845459

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009190816199406981
    2. ')' → logprob: -7.000918865203857
    3. ' ):' → logprob: -12.500919342041016
    4. ':' → logprob: -13.375919342041016
    5. '):
' → logprob: -13.875919342041016
    6. '=' → logprob: -14.750919342041016
    7. '   ' → logprob: -15.250919342041016
    8. '_' → logprob: -15.500919342041016
    9. '():' → logprob: -15.875919342041016
    10. ''):' → logprob: -16.500919342041016

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006546147167682648
    2. ' left' → logprob: -5.7565460205078125
    3. 'left' → logprob: -7.0065460205078125
    4. ' return' → logprob: -7.1315460205078125
    5. '(' → logprob: -7.7565460205078125
    6. '    
' → logprob: -7.8815460205078125
    7. '    ' → logprob: -8.881546020507812
    8. ' ' → logprob: -9.006546020507812
    9. '(left' → logprob: -9.131546020507812
    10. '  ' → logprob: -9.631546020507812

Token 91: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5054186582565308
    2. 'left' (adapté à ' left') → logprob: -1.0054186582565308
    3. '   ' → logprob: -3.5054187774658203
    4. '_left' → logprob: -8.88041877746582
    5. '```' → logprob: -9.00541877746582
    6. ' lef' → logprob: -9.25541877746582
    7. '	left' → logprob: -9.25541877746582
    8. 'l' → logprob: -9.63041877746582
    9. '    ' → logprob: -9.75541877746582
    10. ' return' → logprob: -9.88041877746582

Token 92: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04258390888571739
    2. '_' → logprob: -3.29258394241333
    3. '_s' → logprob: -5.41758394241333
    4. '=' → logprob: -10.667583465576172
    5. ' =' → logprob: -12.042583465576172
    6. 'sum' → logprob: -12.167583465576172
    7. ' _' → logprob: -12.542583465576172
    8. '=_' → logprob: -12.542583465576172
    9. '_sub' → logprob: -12.667583465576172
    10. '_slice' → logprob: -12.667583465576172

Token 93: ' prefix' (ID: 18633)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.7333055734634399
    2. ' calc' → logprob: -0.8583055734634399
    3. 'sum' → logprob: -2.8583054542541504
    4. ' sum' → logprob: -3.4833054542541504
    5. 'prefix' → logprob: -5.23330545425415
    6. ' prefix' → logprob: -6.23330545425415
    7. ' lst' → logprob: -8.858305931091309
    8. '(calc' → logprob: -9.358305931091309
    9. 'lst' → logprob: -9.858305931091309
    10. '   ' → logprob: -9.983305931091309

Token 94: '_slice' (ID: 62789)
  Prédit: '_slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slice' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.250019073486328
    3. '_sum' → logprob: -12.875019073486328
    4. '_strip' → logprob: -13.125019073486328
    5. '_s' → logprob: -14.500019073486328
    6. '_slide' → logprob: -15.750019073486328
    7. '_cut' → logprob: -16.125019073486328
    8. '_suffix' → logprob: -16.625019073486328
    9. ' _' → logprob: -16.625019073486328
    10. '_space' → logprob: -17.125019073486328

Token 95: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0011814195895567536
    2. '(' → logprob: -6.751181602478027
    3. '(ls' → logprob: -12.001181602478027
    4. '(l' → logprob: -12.751181602478027
    5. '(list' → logprob: -14.501181602478027
    6. '(lista' → logprob: -14.626181602478027
    7. '(
' → logprob: -14.751181602478027
    8. '(lhs' → logprob: -15.376181602478027
    9. 'lst' → logprob: -15.626181602478027
    10. '_lst' → logprob: -16.75118064880371

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',l' → logprob: -13.375007629394531
    4. ')' → logprob: -14.750007629394531
    5. ' ' → logprob: -15.375007629394531
    6. ',
' → logprob: -15.625007629394531
    7. '‌,' → logprob: -16.00000762939453
    8. ',

' → logprob: -16.12500762939453
    9. ',n' → logprob: -16.37500762939453
    10. '   ' → logprob: -16.50000762939453

Token 97: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.31334370374679565
    2. ' idx' → logprob: -1.3133437633514404
    3. '	idx' → logprob: -9.68834400177002
    4. '(idx' → logprob: -11.43834400177002
    5. '[idx' → logprob: -12.06334400177002
    6. ' ' → logprob: -13.93834400177002
    7. '<|end|>' → logprob: -14.06334400177002
    8. 'index' → logprob: -14.93834400177002
    9. '_idx' → logprob: -15.06334400177002
    10. ')' → logprob: -15.31334400177002

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001037691137753427
    2. ')
' → logprob: -6.87603759765625
    3. ' )' → logprob: -12.62603759765625
    4. ')
' → logprob: -14.00103759765625
    5. ')

' → logprob: -14.75103759765625
    6. ' )
' → logprob: -16.62603759765625
    7. ' ' → logprob: -16.62603759765625
    8. '))' → logprob: -17.00103759765625
    9. '')' → logprob: -17.37603759765625
    10. '),' → logprob: -17.50103759765625

Token 99: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.004126722924411297
    2. ' right' → logprob: -5.50412654876709
    3. '	right' → logprob: -10.37912654876709
    4. '   ' → logprob: -11.25412654876709
    5. '.right' → logprob: -13.75412654876709
    6. '[right' → logprob: -14.75412654876709
    7. ',right' → logprob: -14.87912654876709
    8. ' ' → logprob: -15.12912654876709
    9. '  ' → logprob: -15.12912654876709
    10. ':right' → logprob: -15.25412654876709

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804241120815277
    2. '=' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.538042068481445
    4. ')' → logprob: -15.663042068481445
    5. ' =
' → logprob: -16.288042068481445
    6. '_' → logprob: -16.288042068481445
    7. '   ' → logprob: -16.788042068481445
    8. ' =)' → logprob: -17.038042068481445
    9. ',' → logprob: -18.038042068481445
    10. '    ' → logprob: -18.163042068481445

Token 102: ' suffix' (ID: 43412)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.25365129113197327
    2. ' suffix' → logprob: -1.5036512613296509
    3. 's' → logprob: -6.378651142120361
    4. '_suffix' → logprob: -11.25365161895752
    5. '	s' → logprob: -13.12865161895752
    6. 'Suffix' → logprob: -13.25365161895752
    7. 'uffix' → logprob: -13.75365161895752
    8. '(s' → logprob: -14.00365161895752
    9. '   ' → logprob: -14.12865161895752
    10. ' ' → logprob: -14.25365161895752

Token 103: '_slice' (ID: 62789)
  Prédit: '_slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slice' → logprob: -1.4736459888808895e-05
    2. 'slice' → logprob: -11.750014305114746
    3. '_' → logprob: -13.000014305114746
    4. '(slice' → logprob: -13.375014305114746
    5. 's' → logprob: -13.875014305114746
    6. '_suffix' → logprob: -14.500014305114746
    7. '_strip' → logprob: -14.750014305114746
    8. '_s' → logprob: -14.750014305114746
    9. 'Slice' → logprob: -15.875014305114746
    10. '```' → logprob: -16.125015258789062

Token 104: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -4.4418171455617994e-05
    2. 'lst' → logprob: -10.750044822692871
    3. '(' → logprob: -12.000044822692871
    4. ' lst' → logprob: -12.375044822692871
    5. '(l' → logprob: -12.375044822692871
    6. '(ls' → logprob: -12.500044822692871
    7. '<|end|>' → logprob: -13.000044822692871
    8. ' (' → logprob: -14.375044822692871
    9. '(lista' → logprob: -14.875044822692871
    10. '(list' → logprob: -14.875044822692871

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0082539152354002
    2. '(lst' → logprob: -5.133254051208496
    3. 'lst' → logprob: -7.133254051208496
    4. ')' → logprob: -7.383254051208496
    5. ',l' → logprob: -7.883254051208496
    6. ' ,' → logprob: -8.008254051208496
    7. ' lst' → logprob: -9.508254051208496
    8. '   ' → logprob: -10.008254051208496
    9. '),' → logprob: -11.383254051208496
    10. '(' → logprob: -11.758254051208496

Token 106: ' idx' (ID: 14016)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00041637211688794196
    2. ' lst' → logprob: -8.00041675567627
    3. 'idx' → logprob: -9.62541675567627
    4. ')' → logprob: -12.37541675567627
    5. 'ls' → logprob: -12.87541675567627
    6. 'list' → logprob: -12.87541675567627
    7. '(lst' → logprob: -13.12541675567627
    8. '<|end|>' → logprob: -13.62541675567627
    9. '```' → logprob: -14.37541675567627
    10. '_lst' → logprob: -14.37541675567627

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5861724831629544e-05
    2. ')
' → logprob: -10.000056266784668
    3. ' )' → logprob: -11.625056266784668
    4. '   ' → logprob: -14.375056266784668
    5. ')

' → logprob: -15.125056266784668
    6. ' ' → logprob: -15.125056266784668
    7. ')return' → logprob: -15.375056266784668
    8. ')
' → logprob: -16.62505531311035
    9. '))' → logprob: -17.37505531311035
    10. '）' → logprob: -18.12505531311035

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051827626302838326
    2. '
' → logprob: -5.38018274307251
    3. '    
' → logprob: -8.005183219909668
    4. 'return' → logprob: -9.630183219909668
    5. 'left' → logprob: -9.755183219909668
    6. ' return' → logprob: -10.380183219909668
    7. ' left' → logprob: -11.255183219909668
    8. '  
' → logprob: -11.380183219909668
    9. ' ' → logprob: -11.630183219909668
    10. ')' → logprob: -11.630183219909668

Token 109: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.14337795972824097
    2. 'return' → logprob: -2.1433780193328857
    3. '   ' → logprob: -4.643377780914307
    4. ' left' → logprob: -5.393377780914307
    5. ' return' → logprob: -6.268377780914307
    6. 'l' → logprob: -9.143378257751465
    7. '```' → logprob: -9.893378257751465
    8. '
' → logprob: -11.018378257751465
    9. ' ' → logprob: -11.143378257751465
    10. '  ' → logprob: -11.393378257751465

Token 110: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8550976164988242e-05
    2. '_' → logprob: -11.250018119812012
    3. 'sum' → logprob: -13.500018119812012
    4. ')_' → logprob: -13.875018119812012
    5. '_s' → logprob: -14.250018119812012
    6. '_len' → logprob: -14.250018119812012
    7. '_val' → logprob: -14.750018119812012
    8. '_total' → logprob: -15.000018119812012
    9. ')' → logprob: -15.500018119812012
    10. '```' → logprob: -16.250019073486328

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488093316555023
    2. '=' → logprob: -1.2238093614578247
    3. ')' → logprob: -8.848809242248535
    4. '(' → logprob: -9.223809242248535
    5. ' ' → logprob: -9.848809242248535
    6. ',' → logprob: -9.973809242248535
    7. '_' → logprob: -11.223809242248535
    8. '_sum' → logprob: -12.973809242248535
    9. '=sum' → logprob: -13.348809242248535
    10. '   ' → logprob: -13.848809242248535

Token 112: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.011117856949567795
    2. ' calc' → logprob: -4.511117935180664
    3. 'sum' → logprob: -9.636117935180664
    4. '(calc' → logprob: -13.136117935180664
    5. ' sum' → logprob: -13.261117935180664
    6. 'cal' → logprob: -14.386117935180664
    7. '   ' → logprob: -15.261117935180664
    8. '.calc' → logprob: -15.886117935180664
    9. 'calculate' → logprob: -17.011117935180664
    10. '_calc' → logprob: -17.261117935180664

Token 113: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.125017166137695
    3. 'sum' → logprob: -13.250017166137695
    4. '(sum' → logprob: -16.625017166137695
    5. 'Sum' → logprob: -17.625017166137695
    6. '_abs' → logprob: -18.500017166137695
    7. ')_' → logprob: -18.625017166137695
    8. '_s' → logprob: -18.750017166137695
    9. ' _' → logprob: -18.875017166137695
    10. '_(' → logprob: -18.875017166137695

Token 114: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -15.001171112060547
    4. 'left' → logprob: -15.876171112060547
    5. '(

' → logprob: -16.751171112060547
    6. '(right' → logprob: -17.001171112060547
    7. '(lhs' → logprob: -17.251171112060547
    8. ',left' → logprob: -18.251171112060547
    9. ' (' → logprob: -18.376171112060547
    10. ':left' → logprob: -18.501171112060547

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.619311974034645e-05
    2. ',' → logprob: -11.125036239624023
    3. ')
' → logprob: -11.500036239624023
    4. '   ' → logprob: -12.500036239624023
    5. '<|end|>' → logprob: -13.500036239624023
    6. '<|end|>' → logprob: -13.500036239624023
    7. 'right' → logprob: -13.625036239624023
    8. ' )' → logprob: -13.875036239624023
    9. '),' → logprob: -14.375036239624023
    10. 'left' → logprob: -14.500036239624023

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43296608328819275
    2. ' right' → logprob: -1.5579661130905151
    3. 'right' → logprob: -2.1829659938812256
    4. '	right' → logprob: -4.807966232299805
    5. '    
' → logprob: -5.682966232299805
    6. ' ' → logprob: -5.807966232299805
    7. ' 
' → logprob: -6.057966232299805
    8. '    ' → logprob: -6.057966232299805
    9. '
' → logprob: -6.307966232299805
    10. '<|end|>' → logprob: -6.307966232299805

Token 117: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5761569738388062
    2. 'right' (adapté à ' right') → logprob: -0.8261569738388062
    3. '	right' → logprob: -8.951156616210938
    4. '   ' → logprob: -10.201156616210938
    5. '    ' → logprob: -10.576156616210938
    6. '.right' → logprob: -12.076156616210938
    7. '[right' → logprob: -12.076156616210938
    8. '(right' → logprob: -12.576156616210938
    9. ',right' → logprob: -12.951156616210938
    10. ' ' → logprob: -13.451156616210938

Token 118: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003025729674845934
    2. '_' → logprob: -8.2503023147583
    3. '=' → logprob: -11.5003023147583
    4. '_s' → logprob: -11.8753023147583
    5. '=_' → logprob: -12.1253023147583
    6. 'sum' → logprob: -12.3753023147583
    7. ')_' → logprob: -12.6253023147583
    8. ' _' → logprob: -12.8753023147583
    9. '```' → logprob: -13.2503023147583
    10. ' =' → logprob: -13.8753023147583

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2450428009033203
    2. '=' → logprob: -1.6200428009033203
    3. ')' → logprob: -3.9950428009033203
    4. '<|end|>' → logprob: -7.12004280090332
    5. '(' → logprob: -9.62004280090332
    6. ')=' → logprob: -10.37004280090332
    7. '<|end|>' → logprob: -10.87004280090332
    8. '_' → logprob: -10.99504280090332
    9. 's' → logprob: -10.99504280090332
    10. ' =)' → logprob: -11.37004280090332

Token 120: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.04861222952604294
    2. ' calc' → logprob: -3.048612117767334
    3. '(calc' → logprob: -11.673612594604492
    4. 'sum' → logprob: -11.923612594604492
    5. '.calc' → logprob: -12.798612594604492
    6. ' ' → logprob: -13.048612594604492
    7. 'cal' → logprob: -13.173612594604492
    8. ' sum' → logprob: -13.923612594604492
    9. '   ' → logprob: -14.298612594604492
    10. '  ' → logprob: -14.923612594604492

Token 121: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0008330935961566865
    2. '_abs' → logprob: -7.125833034515381
    3. 'sum' → logprob: -10.750833511352539
    4. '_' → logprob: -12.125833511352539
    5. 'abs' → logprob: -13.625833511352539
    6. '__' → logprob: -15.625833511352539
    7. '_s' → logprob: -16.00083351135254
    8. '_right' → logprob: -16.37583351135254
    9. '_diff' → logprob: -17.00083351135254
    10. '_ab' → logprob: -17.25083351135254

Token 122: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -6.825890159234405e-05
    2. '(' → logprob: -9.750068664550781
    3. '(rhs' → logprob: -11.875068664550781
    4. 'right' → logprob: -13.250068664550781
    5. '(s' → logprob: -14.625068664550781
    6. '[right' → logprob: -15.375068664550781
    7. ' (' → logprob: -15.875068664550781
    8. '(r' → logprob: -16.75006866455078
    9. '(
' → logprob: -16.75006866455078
    10. 's' → logprob: -17.00006866455078

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033834490925073624
    2. '(right' → logprob: -3.658834457397461
    3. '[right' → logprob: -5.533834457397461
    4. 'right' → logprob: -5.783834457397461
    5. 's' → logprob: -8.533834457397461
    6. ')
' → logprob: -9.158834457397461
    7. ' right' → logprob: -10.408834457397461
    8. ':right' → logprob: -10.783834457397461
    9. ')

' → logprob: -11.033834457397461
    10. ',right' → logprob: -11.283834457397461

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24791550636291504
    2. 'return' → logprob: -1.872915506362915
    3. ' return' → logprob: -2.747915506362915
    4. ')' → logprob: -6.997915267944336
    5. ' ' → logprob: -8.122915267944336
    6. '	return' → logprob: -8.372915267944336
    7. '  ' → logprob: -8.872915267944336
    8. 'abs' → logprob: -9.497915267944336
    9. 'diff' → logprob: -10.247915267944336
    10. '    
' → logprob: -10.747915267944336

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011211805045604706
    2. ' return' → logprob: -4.63621187210083
    3. 'diff' → logprob: -7.51121187210083
    4. '   ' → logprob: -7.88621187210083
    5. 'abs' → logprob: -8.386211395263672
    6. 'calc' → logprob: -8.761211395263672
    7. 'result' → logprob: -9.886211395263672
    8. ' ' → logprob: -10.636211395263672
    9. '
' → logprob: -11.011211395263672
    10. 'ret' → logprob: -11.136211395263672

Token 126: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5760107040405273
    2. 'calc' → logprob: -0.8260107040405273
    3. '(calc' → logprob: -10.326010704040527
    4. ' abs' → logprob: -10.826010704040527
    5. 'abs' → logprob: -11.076010704040527
    6. 'cal' → logprob: -13.326010704040527
    7. '_calc' → logprob: -14.701010704040527
    8. '.calc' → logprob: -14.701010704040527
    9. '   ' → logprob: -15.326010704040527
    10. ' ' → logprob: -15.576010704040527

Token 127: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.951771421066951e-05
    2. '_' → logprob: -10.500029563903809
    3. '_ab' → logprob: -13.750029563903809
    4. '_absolute' → logprob: -14.750029563903809
    5. '_diff' → logprob: -15.375029563903809
    6. '_sum' → logprob: -15.625029563903809
    7. 'abs' → logprob: -16.125028610229492
    8. 'Abs' → logprob: -19.250028610229492
    9. '_a' → logprob: -19.500028610229492
    10. '_
' → logprob: -19.750028610229492

Token 128: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -11.250016212463379
    3. '_dist' → logprob: -13.750016212463379
    4. 'Diff' → logprob: -14.500016212463379
    5. 'diff' → logprob: -14.875016212463379
    6. '_difference' → logprob: -15.125016212463379
    7. '_DIFF' → logprob: -15.625016212463379
    8. '_d' → logprob: -16.000015258789062
    9. '_calc' → logprob: -16.375015258789062
    10. '(' → logprob: -16.625015258789062

Token 129: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.008625093847513199
    2. '(' → logprob: -4.758625030517578
    3. '(lhs' → logprob: -12.508625030517578
    4. '(
' → logprob: -13.008625030517578
    5. ' (' → logprob: -13.633625030517578
    6. '(right' → logprob: -13.758625030517578
    7. '(parent' → logprob: -14.008625030517578
    8. 'left' → logprob: -14.883625030517578
    9. '(last' → logprob: -15.133625030517578
    10. '(paren' → logprob: -15.883625030517578

Token 130: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.2961512513575144e-05
    2. 'sum' → logprob: -11.375022888183594
    3. ',' → logprob: -12.250022888183594
    4. '_s' → logprob: -13.125022888183594
    5. ')' → logprob: -13.125022888183594
    6. 's' → logprob: -14.125022888183594
    7. '_' → logprob: -14.750022888183594
    8. ',_' → logprob: -15.000022888183594
    9. '```' → logprob: -15.500022888183594
    10. ')_' → logprob: -15.875022888183594

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ',right' → logprob: -10.875022888183594
    3. ',
' → logprob: -13.250022888183594
    4. ' ,' → logprob: -13.875022888183594
    5. 'right' → logprob: -14.125022888183594
    6. ' ' → logprob: -15.375022888183594
    7. ',

' → logprob: -16.000022888183594
    8. ' right' → logprob: -17.000022888183594
    9. '```' → logprob: -17.500022888183594
    10. '<|end|>' → logprob: -17.625022888183594

Token 132: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4740777015686035
    2. ' right' → logprob: -0.9740777015686035
    3. '	right' → logprob: -14.974077224731445
    4. '(right' → logprob: -15.474077224731445
    5. '[right' → logprob: -16.599077224731445
    6. 'r' → logprob: -17.224077224731445
    7. ',right' → logprob: -17.474077224731445
    8. ')' → logprob: -17.599077224731445
    9. '
' → logprob: -18.349077224731445
    10. ':right' → logprob: -18.474077224731445

Token 133: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00017159747949335724
    2. 'sum' → logprob: -9.625171661376953
    3. ')' → logprob: -10.250171661376953
    4. 's' → logprob: -10.750171661376953
    5. '_' → logprob: -11.000171661376953
    6. '_s' → logprob: -11.000171661376953
    7. '_)' → logprob: -13.250171661376953
    8. ')_' → logprob: -13.250171661376953
    9. '<|end|>' → logprob: -13.500171661376953
    10. 'right' → logprob: -13.625171661376953

Token 134: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.250001907348633
    4. '(' → logprob: -17.750001907348633
    5. ')`' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.125001907348633
    7. '}' → logprob: -18.500001907348633
    8. '))' → logprob: -18.625001907348633
    9. ')return' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.625001907348633

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6391220688819885
    2. 'd' → logprob: -0.7641220688819885
    3. 'n' → logprob: -5.639122009277344
    4. '
' → logprob: -6.514122009277344
    5. 'i' → logprob: -8.014122009277344
    6. '\' → logprob: -8.014122009277344
    7. '#' → logprob: -8.389122009277344
    8. ' 
' → logprob: -9.389122009277344
    9. '  
' → logprob: -9.639122009277344
    10. 'a' → logprob: -9.764122009277344

Token 136: ' build' (ID: 3024)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3685450553894043
    2. ' main' → logprob: -1.7435450553894043
    3. ' min' → logprob: -2.3685450553894043
    4. ' get' → logprob: -4.493545055389404
    5. ' minimal' → logprob: -4.493545055389404
    6. ' minimize' → logprob: -4.993545055389404
    7. ' calc' → logprob: -5.243545055389404
    8. 'min' → logprob: -6.493545055389404
    9. ' best' → logprob: -7.118545055389404
    10. ' def' → logprob: -7.618545055389404

Token 137: '_abs' (ID: 81310)
  Prédit: '_partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_partition' → logprob: -0.31778135895729065
    2. '_part' → logprob: -2.567781448364258
    3. '_array' → logprob: -2.817781448364258
    4. '_' → logprob: -3.317781448364258
    5. '_prefix' → logprob: -3.317781448364258
    6. '_min' → logprob: -4.192781448364258
    7. '_opt' → logprob: -5.067781448364258
    8. '_diff' → logprob: -5.192781448364258
    9. '_split' → logprob: -5.442781448364258
    10. '_parts' → logprob: -5.567781448364258

Token 138: 'list' (ID: 2641)
  Prédit: '_partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_partition' → logprob: -0.5991572737693787
    2. '_diff' → logprob: -1.5991573333740234
    3. '_part' → logprob: -1.9741573333740234
    4. '_array' → logprob: -2.7241573333740234
    5. '_list' → logprob: -3.3491573333740234
    6. '_' → logprob: -6.224157333374023
    7. '_parts' → logprob: -6.349157333374023
    8. '_arr' → logprob: -6.724157333374023
    9. '_d' → logprob: -6.849157333374023
    10. '_difference' → logprob: -7.099157333374023

Token 139: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.014737242832779884
    2. '(' → logprob: -4.264737129211426
    3. '(l' → logprob: -8.139737129211426
    4. '(ls' → logprob: -9.264737129211426
    5. '<|end|>' → logprob: -10.014737129211426
    6. '(n' → logprob: -10.139737129211426
    7. '(list' → logprob: -10.889737129211426
    8. '(lista' → logprob: -11.139737129211426
    9. '(lhs' → logprob: -11.764737129211426
    10. ' (' → logprob: -11.889737129211426

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03022606670856476
    2. '):' → logprob: -3.530225992202759
    3. ',l' → logprob: -8.53022575378418
    4. ',n' → logprob: -9.53022575378418
    5. '):
' → logprob: -9.78022575378418
    6. ',index' → logprob: -10.40522575378418
    7. ' ,' → logprob: -10.78022575378418
    8. ')' → logprob: -10.78022575378418
    9. ',list' → logprob: -11.03022575378418
    10. '(lst' → logprob: -11.15522575378418

Token 141: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5795312523841858
    2. '):' → logprob: -1.954531192779541
    3. ' n' → logprob: -2.329531192779541
    4. 'length' → logprob: -2.579531192779541
    5. '):
' → logprob: -3.329531192779541
    6. ')' → logprob: -3.954531192779541
    7. 'size' → logprob: -4.079531192779541
    8. 'lst' → logprob: -4.204531192779541
    9. 'max' → logprob: -4.704531192779541
    10. '   ' → logprob: -5.454531192779541

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005772123113274574
    2. '):
' → logprob: -5.255772113800049
    3. ')' → logprob: -7.755772113800049
    4. ' ):' → logprob: -10.755772590637207
    5. '-' → logprob: -10.880772590637207
    6. '):

' → logprob: -11.005772590637207
    7. 'e' → logprob: -12.005772590637207
    8. 'ex' → logprob: -12.505772590637207
    9. 'x' → logprob: -12.505772590637207
    10. ''):' → logprob: -12.505772590637207

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018518301658332348
    2. 'abs' → logprob: -9.375185012817383
    3. ' abs' → logprob: -9.500185012817383
    4. '    
' → logprob: -12.250185012817383
    5. '(abs' → logprob: -12.375185012817383
    6. ' return' → logprob: -13.250185012817383
    7. ' ' → logprob: -13.250185012817383
    8. '       ' → logprob: -13.375185012817383
    9. '   ' → logprob: -13.375185012817383
    10. '```' → logprob: -13.750185012817383

Token 144: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -0.38784393668174744
    2. ' abs' → logprob: -1.5128439664840698
    3. '   ' → logprob: -2.5128438472747803
    4. 'result' → logprob: -5.137844085693359
    5. ' res' → logprob: -5.262844085693359
    6. ' result' → logprob: -5.637844085693359
    7. 'res' → logprob: -5.887844085693359
    8. ' ans' → logprob: -7.262844085693359
    9. ' return' → logprob: -8.13784408569336
    10. '[' → logprob: -8.63784408569336

Token 145: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31364378333091736
    2. '_list' → logprob: -1.3136438131332397
    3. '_lst' → logprob: -8.313643455505371
    4. 'lst' → logprob: -10.313643455505371
    5. 'List' → logprob: -10.563643455505371
    6. '_lists' → logprob: -10.813643455505371
    7. 'l' → logprob: -11.188643455505371
    8. 'lists' → logprob: -11.313643455505371
    9. '_l' → logprob: -11.438643455505371
    10. 's' → logprob: -12.063643455505371

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14616481959819794
    2. '=' → logprob: -2.146164894104004
    3. '(' → logprob: -4.146164894104004
    4. '=[]' → logprob: -6.146164894104004
    5. '(lst' → logprob: -7.521164894104004
    6. '=[' → logprob: -9.021164894104004
    7. ' =[' → logprob: -9.021164894104004
    8. '   ' → logprob: -9.271164894104004
    9. ' ' → logprob: -9.396164894104004
    10. ' (' → logprob: -11.271164894104004

Token 147: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015118100680410862
    2. '[' → logprob: -4.51511812210083
    3. ' []' → logprob: -5.51511812210083
    4. ' [' → logprob: -10.515117645263672
    5. '[]
' → logprob: -11.765117645263672
    6. '[]}' → logprob: -14.015117645263672
    7. '[]>' → logprob: -15.140117645263672
    8. '[n' → logprob: -16.015117645263672
    9. '[]

' → logprob: -16.140117645263672
    10. '[list' → logprob: -16.390117645263672

Token 148: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5933898687362671
    2. '   ' → logprob: -0.8433898687362671
    3. '
' → logprob: -5.093389987945557
    4. '<|end|>' → logprob: -5.593389987945557
    5. '	for' → logprob: -5.843389987945557
    6. 'for' → logprob: -6.218389987945557
    7. ' ' → logprob: -6.843389987945557
    8. '    
' → logprob: -6.968389987945557
    9. ' 
' → logprob: -8.968389511108398
    10. '  ' → logprob: -9.218389511108398

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0022638519294559956
    2. ' for' → logprob: -6.252264022827148
    3. '   ' → logprob: -8.002264022827148
    4. ' ' → logprob: -15.252264022827148
    5. '	for' → logprob: -15.377264022827148
    6. '
' → logprob: -18.50226402282715
    7. '```' → logprob: -18.50226402282715
    8. '  ' → logprob: -18.75226402282715
    9. '    
' → logprob: -20.25226402282715
    10. '``' → logprob: -21.50226402282715

Token 150: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1586827039718628
    2. 'i' → logprob: -2.0336828231811523
    3. ' idx' → logprob: -4.533682823181152
    4. 'idx' → logprob: -5.283682823181152
    5. '	i' → logprob: -10.658682823181152
    6. '	idx' → logprob: -11.283682823181152
    7. ' ' → logprob: -11.408682823181152
    8. '_i' → logprob: -12.158682823181152
    9. '
' → logprob: -12.533682823181152
    10. '_idx' → logprob: -12.533682823181152

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010372732765972614
    2. 'in' → logprob: -4.760372638702393
    3. ' ' → logprob: -6.385372638702393
    4. 'n' → logprob: -10.26037311553955
    5. '_' → logprob: -11.13537311553955
    6. '  ' → logprob: -12.38537311553955
    7. 'space' → logprob: -12.63537311553955
    8. 's' → logprob: -12.88537311553955
    9. '	in' → logprob: -12.88537311553955
    10. ' i' → logprob: -13.01037311553955

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014196664094925
    2. ' range' → logprob: -1.701419711112976
    3. '	range' → logprob: -12.326419830322266
    4. ' ' → logprob: -13.951419830322266
    5. '(range' → logprob: -14.326419830322266
    6. ' xrange' → logprob: -15.576419830322266
    7. '  ' → logprob: -16.826419830322266
    8. ')' → logprob: -17.076419830322266
    9. '_range' → logprob: -17.201419830322266
    10. '
' → logprob: -17.701419830322266

Token 153: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.048609279096126556
    2. '(' → logprob: -3.0486092567443848
    3. ' (' → logprob: -11.548609733581543
    4. ' n' → logprob: -12.298609733581543
    5. 'n' → logprob: -12.548609733581543
    6. '(
' → logprob: -12.923609733581543
    7. '1' → logprob: -13.548609733581543
    8. '(

' → logprob: -16.048608779907227
    9. ' ' → logprob: -16.423608779907227
    10. '	n' → logprob: -17.048608779907227

Token 154: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1920432299375534
    2. '-' → logprob: -1.8170431852340698
    3. ' -' → logprob: -4.942043304443359
    4. ' ):' → logprob: -5.817043304443359
    5. '):
' → logprob: -6.442043304443359
    6. ')' → logprob: -7.692043304443359
    7. ' ' → logprob: -10.81704330444336
    8. '   ' → logprob: -11.44204330444336
    9. ' ):
' → logprob: -12.31704330444336
    10. ' )' → logprob: -12.31704330444336

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. '-' → logprob: -14.375006675720215
    4. '2' → logprob: -15.000006675720215
    5. '
' → logprob: -15.500006675720215
    6. ')' → logprob: -16.25000762939453
    7. '

' → logprob: -16.31250762939453
    8. '１' → logprob: -16.93750762939453
    9. '```' → logprob: -17.06250762939453
    10. '۱' → logprob: -17.18750762939453

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004833425919059664
    2. '):
' → logprob: -8.500483512878418
    3. ':' → logprob: -8.750483512878418
    4. ' ):' → logprob: -9.125483512878418
    5. ')' → logprob: -11.750483512878418
    6. ',' → logprob: -13.875483512878418
    7. '():' → logprob: -14.125483512878418
    8. '<|end|>' → logprob: -14.250483512878418
    9. ']:' → logprob: -14.500483512878418
    10. ' ' → logprob: -14.625483512878418

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017274183919653296
    2. '<|end|>' → logprob: -7.50172758102417
    3. ' abs' → logprob: -7.62672758102417
    4. '   ' → logprob: -8.126727104187012
    5. 'abs' → logprob: -8.251727104187012
    6. ',' → logprob: -9.876727104187012
    7. '(abs' → logprob: -11.251727104187012
    8. '<|end|>' → logprob: -11.501727104187012
    9. '        
' → logprob: -11.626727104187012
    10. '
' → logprob: -11.751727104187012

Token 158: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.4325956702232361
    2. 'abs' (adapté à ' abs') → logprob: -1.0575957298278809
    3. '       ' → logprob: -5.807595729827881
    4. '        ' → logprob: -8.307595252990723
    5. '           ' → logprob: -8.807595252990723
    6. '   ' → logprob: -9.307595252990723
    7. '(abs' → logprob: -9.307595252990723
    8. '_abs' → logprob: -10.057595252990723
    9. '        
' → logprob: -10.182595252990723
    10. '.abs' → logprob: -10.307595252990723

Token 159: '_val' (ID: 13694)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.015305552864447e-05
    2. '_abs' → logprob: -10.250060081481934
    3. '_diff' → logprob: -11.875060081481934
    4. 'diff' → logprob: -12.000060081481934
    5. 'abs' → logprob: -12.000060081481934
    6. ')' → logprob: -13.250060081481934
    7. '   ' → logprob: -14.125060081481934
    8. '_val' → logprob: -14.500060081481934
    9. 'li' → logprob: -15.250060081481934
    10. '_list' → logprob: -15.500060081481934

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34876906871795654
    2. ' =' → logprob: -1.2237690687179565
    3. 'ues' → logprob: -8.848769187927246
    4. 'ist' → logprob: -8.848769187927246
    5. 'ue' → logprob: -11.098769187927246
    6. '   ' → logprob: -11.973769187927246
    7. 's' → logprob: -12.473769187927246
    8. ')' → logprob: -12.973769187927246
    9. 'uate' → logprob: -12.973769187927246
    10. 'u' → logprob: -13.848769187927246

Token 161: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2519303858280182
    2. ' calc' → logprob: -1.5019303560256958
    3. '(calc' → logprob: -14.001930236816406
    4. '.calc' → logprob: -15.626930236816406
    5. 'cal' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.376930236816406
    7. '_calc' → logprob: -17.376930236816406
    8. 'calculate' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.376930236816406
    10. ' calculate' → logprob: -19.251930236816406

Token 162: '_partition' (ID: 115292)
  Prédit: '_partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_partition' → logprob: -0.002671376569196582
    2. '_abs' → logprob: -6.252671241760254
    3. '_' → logprob: -7.502671241760254
    4. '_part' → logprob: -8.627671241760254
    5. '_absolute' → logprob: -11.877671241760254
    6. 'partition' → logprob: -13.752671241760254
    7. 'abs' → logprob: -14.252671241760254
    8. '_val' → logprob: -14.877671241760254
    9. '__' → logprob: -15.002671241760254
    10. '_ab' → logprob: -15.377671241760254

Token 163: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -1.8074162653647363e-05
    2. 'abs' → logprob: -11.000018119812012
    3. '_ab' → logprob: -14.750018119812012
    4. '(abs' → logprob: -15.000018119812012
    5. '_absolute' → logprob: -15.250018119812012
    6. '_' → logprob: -15.625018119812012
    7. ' abs' → logprob: -16.125017166137695
    8. 'Abs' → logprob: -17.625017166137695
    9. 's' → logprob: -18.250017166137695
    10. '.abs' → logprob: -18.375017166137695

Token 164: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.375033378601074
    3. '(lista' → logprob: -13.875033378601074
    4. '(ls' → logprob: -14.375033378601074
    5. '(list' → logprob: -14.750033378601074
    6. '(lhs' → logprob: -15.375033378601074
    7. 'lst' → logprob: -17.25003433227539
    8. '(l' → logprob: -17.37503433227539
    9. '(
' → logprob: -17.50003433227539
    10. '(nums' → logprob: -17.75003433227539

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026076447684317827
    2. '(' → logprob: -6.502607822418213
    3. '(i' → logprob: -7.377607822418213
    4. ',i' → logprob: -8.627607345581055
    5. '(lst' → logprob: -8.752607345581055
    6. ' ,' → logprob: -9.252607345581055
    7. ',n' → logprob: -10.627607345581055
    8. ',l' → logprob: -11.627607345581055
    9. '(n' → logprob: -12.377607345581055
    10. ')' → logprob: -13.002607345581055

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043138445471413434
    2. ' i' → logprob: -7.750431537628174
    3. ')' → logprob: -15.000431060791016
    4. ')i' → logprob: -15.875431060791016
    5. '   ' → logprob: -16.125431060791016
    6. '(i' → logprob: -17.125431060791016
    7. '	i' → logprob: -18.250431060791016
    8. ' ' → logprob: -18.375431060791016
    9. '[i' → logprob: -19.125431060791016
    10. '
' → logprob: -19.125431060791016

Token 167: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5773858428001404
    2. ')' → logprob: -0.8273858428001404
    3. ')
' → logprob: -6.827385902404785
    4. '       ' → logprob: -7.952385902404785
    5. ')

' → logprob: -12.077385902404785
    6. ')`
' → logprob: -13.702385902404785
    7. '   ' → logprob: -14.202385902404785
    8. ' )
' → logprob: -14.327385902404785
    9. ')`' → logprob: -14.952385902404785
    10. ' )' → logprob: -15.327385902404785

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002600245934445411
    2. ' abs' → logprob: -8.500260353088379
    3. 'abs' → logprob: -10.250260353088379
    4. '   ' → logprob: -11.125260353088379
    5. '        
' → logprob: -13.125260353088379
    6. '
' → logprob: -13.875260353088379
    7. '<|end|>' → logprob: -14.000260353088379
    8. '(abs' → logprob: -14.500260353088379
    9. ')' → logprob: -14.750260353088379
    10. '           ' → logprob: -15.125260353088379

Token 169: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.05568540841341019
    2. '       ' → logprob: -3.555685520172119
    3. 'abs' (adapté à ' abs') → logprob: -3.680685520172119
    4. '   ' → logprob: -8.555685043334961
    5. '
' → logprob: -8.930685043334961
    6. '        
' → logprob: -10.680685043334961
    7. ' 
' → logprob: -11.055685043334961
    8. '(abs' → logprob: -11.555685043334961
    9. '.abs' → logprob: -12.180685043334961
    10. '_abs' → logprob: -12.555685043334961

Token 170: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.4121114822482923e-06
    2. '       ' → logprob: -13.500003814697266
    3. '_val' → logprob: -13.625003814697266
    4. '   ' → logprob: -14.250003814697266
    5. '_list' → logprob: -16.625003814697266
    6. 'val' → logprob: -16.875003814697266
    7. '_vals' → logprob: -17.625003814697266
    8. ' list' → logprob: -17.750003814697266
    9. '	list' → logprob: -18.750003814697266
    10. ')' → logprob: -18.750003814697266

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04859520494937897
    2. '.' → logprob: -3.0485951900482178
    3. '.app' → logprob: -12.798595428466797
    4. '.push' → logprob: -13.048595428466797
    5. '.ap' → logprob: -14.048595428466797
    6. '.extend' → logprob: -14.298595428466797
    7. '.Append' → logprob: -14.548595428466797
    8. 'append' → logprob: -15.173595428466797
    9. '.setdefault' → logprob: -15.298595428466797
    10. '.add' → logprob: -15.673595428466797

Token 172: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.000123977661133
    3. '(ab' → logprob: -14.750123977661133
    4. 'abs' → logprob: -17.250123977661133
    5. ' (' → logprob: -18.500123977661133
    6. '(
' → logprob: -18.625123977661133
    7. ' abs' → logprob: -20.250123977661133
    8. '(ans' → logprob: -20.250123977661133
    9. '(ins' → logprob: -20.500123977661133
    10. '(os' → logprob: -21.000123977661133

Token 173: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.961759259458631e-06
    2. 'val' → logprob: -12.500004768371582
    3. ')' → logprob: -14.125004768371582
    4. ')_' → logprob: -15.375004768371582
    5. '_' → logprob: -16.6250057220459
    6. 'Val' → logprob: -17.2500057220459
    7. '_VAL' → logprob: -17.7500057220459
    8. '_value' → logprob: -17.8750057220459
    9. '))' → logprob: -18.0000057220459
    10. 'list' → logprob: -18.3750057220459

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005630709230899811
    2. ')
' → logprob: -5.3806304931640625
    3. '   ' → logprob: -7.6306304931640625
    4. ')return' → logprob: -7.7556304931640625
    5. '
' → logprob: -10.380630493164062
    6. '<|end|>' → logprob: -10.880630493164062
    7. ' ' → logprob: -11.380630493164062
    8. 'return' → logprob: -11.630630493164062
    9. ' )' → logprob: -11.880630493164062
    10. '       ' → logprob: -12.130630493164062

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006580962333828211
    2. ' return' → logprob: -5.506580829620361
    3. 'return' → logprob: -6.506580829620361
    4. '<|end|>' → logprob: -7.381580829620361
    5. '    
' → logprob: -8.88158130645752
    6. '	return' → logprob: -9.00658130645752
    7. '
' → logprob: -9.38158130645752
    8. ' ' → logprob: -11.13158130645752
    9. ' 
' → logprob: -12.38158130645752
    10. '       ' → logprob: -12.38158130645752

Token 176: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35138994455337524
    2. 'return' (adapté à ' return') → logprob: -1.3513898849487305
    3. ' return' → logprob: -3.3513898849487305
    4. '	return' → logprob: -6.2263898849487305
    5. '
' → logprob: -8.22638988494873
    6. '    
' → logprob: -9.85138988494873
    7. ' ' → logprob: -10.35138988494873
    8. '<|end|>' → logprob: -11.22638988494873
    9. '       ' → logprob: -11.85138988494873
    10. 'eturn' → logprob: -11.97638988494873

Token 177: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0052342405542731285
    2. ' abs' → logprob: -5.255234241485596
    3. '(abs' → logprob: -14.630233764648438
    4. 'ab' → logprob: -17.505233764648438
    5. '_abs' → logprob: -18.755233764648438
    6. '.abs' → logprob: -19.005233764648438
    7. 'absor' → logprob: -19.755233764648438
    8. 'ans' → logprob: -20.380233764648438
    9. 'a' → logprob: -20.755233764648438
    10. 'absolute' → logprob: -20.880233764648438

Token 178: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00020711649267468601
    2. 'ist' → logprob: -8.50020694732666
    3. 'abs' → logprob: -12.87520694732666
    4. '_list' → logprob: -14.12520694732666
    5. 'alist' → logprob: -15.87520694732666
    6. 'val' → logprob: -17.125207901000977
    7. 'List' → logprob: -17.250207901000977
    8. ' list' → logprob: -17.625207901000977
    9. 'lst' → logprob: -17.750207901000977
    10. 'tolist' → logprob: -18.125207901000977

Token 179: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001864499063231051
    2. '
' → logprob: -7.001864433288574
    3. '<|end|>' → logprob: -7.001864433288574
    4. '

' → logprob: -11.126864433288574
    5. '```' → logprob: -11.251864433288574
    6. '#' → logprob: -12.626864433288574
    7. '[' → logprob: -12.751864433288574
    8. ' def' → logprob: -13.376864433288574
    9. '  
' → logprob: -13.501864433288574
    10. '<|end|>' → logprob: -13.501864433288574

Token 180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3306015716807451e-05
    2. '<|end|>' → logprob: -12.00001335144043
    3. 'n' → logprob: -12.75001335144043
    4. '#' → logprob: -13.37501335144043
    5. '```' → logprob: -13.75001335144043
    6. ' def' → logprob: -14.75001335144043
    7. '
' → logprob: -14.87501335144043
    8. 'import' → logprob: -15.75001335144043
    9. 'if' → logprob: -16.00001335144043
    10. 'from' → logprob: -16.12501335144043

Token 181: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23781085014343262
    2. ' find' → logprob: -1.6128108501434326
    3. ' get' → logprob: -4.862811088562012
    4. ' minimize' → logprob: -6.362811088562012
    5. ' min' → logprob: -6.487811088562012
    6. ' solve' → logprob: -8.237811088562012
    7. ' calc' → logprob: -8.362811088562012
    8. ' minimal' → logprob: -8.487811088562012
    9. ' calculate' → logprob: -8.487811088562012
    10. ' compute' → logprob: -9.487811088562012

Token 182: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0682813748717308
    2. '_best' → logprob: -3.318281412124634
    3. '_input' → logprob: -4.818281173706055
    4. '_' → logprob: -4.943281173706055
    5. '_opt' → logprob: -5.193281173706055
    6. '_max' → logprob: -5.693281173706055
    7. '_abs' → logprob: -6.693281173706055
    8. '_n' → logprob: -6.693281173706055
    9. '_result' → logprob: -7.568281173706055
    10. '_partition' → logprob: -7.568281173706055

Token 183: '(lst' (ID: 95688)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6247487664222717
    2. '_' → logprob: -1.249748706817627
    3. '_partition' → logprob: -2.749748706817627
    4. '_val' → logprob: -3.374748706817627
    5. '_diff' → logprob: -3.624748706817627
    6. '_abs' → logprob: -3.624748706817627
    7. '_value' → logprob: -3.999748706817627
    8. '_split' → logprob: -6.249748706817627
    9. '_list' → logprob: -6.999748706817627
    10. '()' → logprob: -7.124748706817627

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008135556243360043
    2. '()' → logprob: -5.8831353187561035
    3. ')' → logprob: -6.0081353187561035
    4. '):
' → logprob: -6.1331353187561035
    5. '():' → logprob: -7.5081353187561035
    6. '[]):' → logprob: -9.758135795593262
    7. '()):
' → logprob: -10.758135795593262
    8. '():
' → logprob: -11.258135795593262
    9. ' ):' → logprob: -11.508135795593262
    10. '(lst' → logprob: -11.758135795593262

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014060820103622973
    2. ' return' → logprob: -9.500140190124512
    3. 'return' → logprob: -9.750140190124512
    4. 'min' → logprob: -12.625140190124512
    5. ' min' → logprob: -13.375140190124512
    6. '    ' → logprob: -14.250140190124512
    7. '   ' → logprob: -14.750140190124512
    8. '    
' → logprob: -14.875140190124512
    9. '	return' → logprob: -15.125140190124512
    10. ')' → logprob: -15.125140190124512

Token 186: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2847389876842499
    2. '   ' → logprob: -1.7847390174865723
    3. ' return' → logprob: -2.5347390174865723
    4. 'min' → logprob: -7.409739017486572
    5. ' min' → logprob: -10.284738540649414
    6. ' ' → logprob: -12.034738540649414
    7. '  ' → logprob: -12.284738540649414
    8. '```' → logprob: -12.284738540649414
    9. '	return' → logprob: -12.534738540649414
    10. '
' → logprob: -12.659738540649414

Token 187: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759403705596924
    2. ' min' → logprob: -0.8259403705596924
    3. '(min' → logprob: -14.200940132141113
    4. '	min' → logprob: -15.575940132141113
    5. '[min' → logprob: -16.45094108581543
    6. ' ' → logprob: -18.57594108581543
    7. ',min' → logprob: -18.57594108581543
    8. '.min' → logprob: -18.70094108581543
    9. '=min' → logprob: -18.82594108581543
    10. '_min' → logprob: -19.45094108581543

Token 188: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.011097338981926441
    2. '(' → logprob: -4.511097431182861
    3. '(list' → logprob: -10.511096954345703
    4. '(ls' → logprob: -11.136096954345703
    5. '(lista' → logprob: -12.886096954345703
    6. '(l' → logprob: -13.136096954345703
    7. 'lst' → logprob: -13.511096954345703
    8. '(
' → logprob: -15.011096954345703
    9. '(len' → logprob: -15.761096954345703
    10. '(ll' → logprob: -15.761096954345703

Token 189: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.125
    3. '())' → logprob: -16.875
    4. '<|end|>' → logprob: -16.875
    5. ' )' → logprob: -17.5
    6. '}' → logprob: -17.5
    7. '()' → logprob: -17.5
    8. ')

' → logprob: -18.875
    9. ')return' → logprob: -19.25
    10. '),' → logprob: -19.375

Token 190: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038793113082647324
    2. '<|end|>' → logprob: -3.9137930870056152
    3. '
' → logprob: -4.413793087005615
    4. '

' → logprob: -5.163793087005615
    5. '()' → logprob: -9.788793563842773
    6. ' def' → logprob: -9.913793563842773
    7. '<|end|>' → logprob: -10.288793563842773
    8. '()

' → logprob: -10.413793563842773
    9. '```' → logprob: -10.788793563842773
    10. 'n' → logprob: -11.413793563842773

Token 191: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12679390609264374
    2. 'main' → logprob: -2.37679386138916
    3. ' get' → logprob: -4.37679386138916
    4. 'get' → logprob: -5.00179386138916
    5. ' min' → logprob: -6.50179386138916
    6. 'def' → logprob: -6.62679386138916
    7. 'min' → logprob: -7.00179386138916
    8. ' find' → logprob: -7.62679386138916
    9. '__' → logprob: -7.62679386138916
    10. ' solve' → logprob: -7.62679386138916

Token 192: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -12.375015258789062
    3. ' ():' → logprob: -12.375015258789062
    4. '()' → logprob: -12.500015258789062
    5. '():
' → logprob: -12.875015258789062
    6. '_' → logprob: -15.875015258789062
    7. '(:' → logprob: -16.000015258789062
    8. '(":' → logprob: -16.625015258789062
    9. ':' → logprob: -17.000015258789062
    10. '()>' → logprob: -17.250015258789062

Token 193: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16488999128341675
    2. '   ' → logprob: -2.0398900508880615
    3. ' n' → logprob: -4.039889812469482
    4. '
' → logprob: -5.664889812469482
    5. '```' → logprob: -8.41489028930664
    6. '_n' → logprob: -8.53989028930664
    7. '	n' → logprob: -8.91489028930664
    8. '    
' → logprob: -9.78989028930664
    9. ' ' → logprob: -9.78989028930664
    10. '\' → logprob: -10.16489028930664

Token 194: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00013882013445254415
    2. ' n' → logprob: -9.625139236450195
    3. '   ' → logprob: -9.625139236450195
    4. 'def' → logprob: -12.750139236450195
    5. '
' → logprob: -14.250139236450195
    6. '    ' → logprob: -14.375139236450195
    7. '	n' → logprob: -14.625139236450195
    8. ' ' → logprob: -14.750139236450195
    9. '    
' → logprob: -14.750139236450195
    10. '  ' → logprob: -15.000139236450195

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889419049024582
    2. '=' → logprob: -2.5788941383361816
    3. '_' → logprob: -13.20389461517334
    4. ',' → logprob: -14.20389461517334
    5. '=int' → logprob: -14.20389461517334
    6. ' ' → logprob: -14.45389461517334
    7. ' =
' → logprob: -16.203893661499023
    8. '   ' → logprob: -16.203893661499023
    9. '=input' → logprob: -16.328893661499023
    10. ' ' → logprob: -16.828893661499023

Token 196: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20141352713108063
    2. 'get' → logprob: -1.7014135122299194
    3. ' int' → logprob: -16.201414108276367
    4. 'int' → logprob: -16.951414108276367
    5. '_get' → logprob: -17.076414108276367
    6. '(get' → logprob: -17.576414108276367
    7. '=get' → logprob: -17.951414108276367
    8. '	get' → logprob: -18.076414108276367
    9. ')get' → logprob: -19.326414108276367
    10. '.get' → logprob: -19.576414108276367

Token 197: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.029757322743535042
    2. '_n' → logprob: -3.529757261276245
    3. '_' → logprob: -12.654757499694824
    4. '_in' → logprob: -12.904757499694824
    5. '_int' → logprob: -14.154757499694824
    6. 'n' → logprob: -15.654757499694824
    7. '_i' → logprob: -16.654756546020508
    8. '(input' → logprob: -17.029756546020508
    9. 'input' → logprob: -17.279756546020508
    10. '_Input' → logprob: -17.279756546020508

Token 198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012523093027994037
    2. '()
' → logprob: -9.00012493133545
    3. '()

' → logprob: -13.75012493133545
    4. '()\' → logprob: -15.50012493133545
    5. ' ()' → logprob: -16.125125885009766
    6. '()<' → logprob: -16.625125885009766
    7. '()
' → logprob: -16.625125885009766
    8. '())' → logprob: -16.875125885009766
    9. '()`' → logprob: -17.375125885009766
    10. '()]' → logprob: -17.625125885009766

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04385102540254593
    2. 'lst' → logprob: -3.793851137161255
    3. 'n' → logprob: -3.918851137161255
    4. ' lst' → logprob: -7.793850898742676
    5. ' n' → logprob: -10.293850898742676
    6. 'l' → logprob: -10.543850898742676
    7. 'list' → logprob: -11.043850898742676
    8. '	n' → logprob: -11.668850898742676
    9. '```' → logprob: -12.293850898742676
    10. 'nl' → logprob: -12.418850898742676

Token 200: ' n' (ID: 297)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.4750620126724243
    2. 'n' (adapté à ' n') → logprob: -0.9750620126724243
    3. ' lst' → logprob: -7.975061893463135
    4. 'nl' → logprob: -8.600062370300293
    5. 'arr' → logprob: -8.725062370300293
    6. '   ' → logprob: -9.350062370300293
    7. 'nums' → logprob: -9.725062370300293
    8. 'l' → logprob: -10.100062370300293
    9. 'a' → logprob: -10.725062370300293
    10. ' n' → logprob: -10.725062370300293

Token 201: 'list' (ID: 2641)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.19865986704826355
    2. 'list' → logprob: -1.948659896850586
    3. '_lst' → logprob: -4.073659896850586
    4. 'lst' → logprob: -4.073659896850586
    5. '_' → logprob: -5.698659896850586
    6. '=' → logprob: -9.448659896850586
    7. 'ist' → logprob: -9.573659896850586
    8. ' =' → logprob: -9.823659896850586
    9. 's' → logprob: -10.198659896850586
    10. 'List' → logprob: -11.323659896850586

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07265516370534897
    2. ' =' → logprob: -2.697655200958252
    3. '()' → logprob: -5.947655200958252
    4. '(' → logprob: -9.322654724121094
    5. ')' → logprob: -11.822654724121094
    6. ',' → logprob: -13.447654724121094
    7. '=[]' → logprob: -13.697654724121094
    8. '_' → logprob: -14.322654724121094
    9. 's' → logprob: -14.322654724121094
    10. '   ' → logprob: -14.697654724121094

Token 203: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1269298940896988
    2. ' get' → logprob: -2.126929998397827
    3. '(get' → logprob: -13.251930236816406
    4. '_get' → logprob: -17.251930236816406
    5. '	get' → logprob: -17.876930236816406
    6. '=get' → logprob: -18.126930236816406
    7. '.get' → logprob: -19.126930236816406
    8. '[get' → logprob: -19.251930236816406
    9. '@get' → logprob: -20.001930236816406
    10. ' ' → logprob: -20.501930236816406

Token 204: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: 0.0
    2. '_' → logprob: -18.875
    3. '_input' → logprob: -19.25
    4. 'n' → logprob: -19.5
    5. '(n' → logprob: -20.5
    6. '_list' → logprob: -20.875
    7. ' _' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. '
' → logprob: -22.25
    10. '_
' → logprob: -23.25

Token 205: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. '_list' → logprob: -14.625000953674316
    3. ' list' → logprob: -16.875
    4. 'olist' → logprob: -17.25
    5. 'n' → logprob: -17.625
    6. 'ist' → logprob: -18.0
    7. 'List' → logprob: -18.625
    8. 'alist' → logprob: -19.0
    9. 'l' → logprob: -19.125
    10. '(' → logprob: -19.375

Token 206: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014176673255860806
    2. '()
' → logprob: -4.264176845550537
    3. '   ' → logprob: -11.889176368713379
    4. '()
' → logprob: -12.889176368713379
    5. '()

' → logprob: -13.764176368713379
    6. '(' → logprob: -13.889176368713379
    7. ' ()' → logprob: -14.139176368713379
    8. '(n' → logprob: -14.514176368713379
    9. '()\' → logprob: -15.264176368713379
    10. '(
' → logprob: -16.139177322387695

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00991356372833252
    2. 'abs' → logprob: -4.884913444519043
    3. ' abs' → logprob: -6.134913444519043
    4. '    
' → logprob: -9.759913444519043
    5. '```' → logprob: -10.634913444519043
    6. '
' → logprob: -10.759913444519043
    7. 'min' → logprob: -11.884913444519043
    8. '_abs' → logprob: -12.009913444519043
    9. '(abs' → logprob: -12.259913444519043
    10. ' min' → logprob: -13.134913444519043

Token 208: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -0.02101103402674198
    2. ' abs' → logprob: -4.021010875701904
    3. '   ' → logprob: -5.896010875701904
    4. 'ans' → logprob: -10.771011352539062
    5. 'result' → logprob: -11.021011352539062
    6. 'res' → logprob: -11.146011352539062
    7. '    
' → logprob: -11.646011352539062
    8. 'ab' → logprob: -11.896011352539062
    9. 'abl' → logprob: -12.271011352539062
    10. 'min' → logprob: -12.521011352539062

Token 209: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. '_list' → logprob: -15.5
    3. 'val' → logprob: -18.875
    4. 'lst' → logprob: -19.5
    5. '_vals' → logprob: -19.75
    6. 'vals' → logprob: -19.875
    7. '_val' → logprob: -20.25
    8. 'array' → logprob: -21.625
    9. 'lists' → logprob: -21.75
    10. ' list' → logprob: -22.0

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766742825508118
    2. ' =' → logprob: -0.8266742825508118
    3. '.append' → logprob: -7.451674461364746
    4. '.' → logprob: -8.951674461364746
    5. '.=' → logprob: -11.201674461364746
    6. '.extend' → logprob: -12.451674461364746
    7. ')' → logprob: -13.451674461364746
    8. ' .=' → logprob: -13.701674461364746
    9. '=[]' → logprob: -14.076674461364746
    10. '＝' → logprob: -14.201674461364746

Token 211: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.06196959316730499
    2. 'build' → logprob: -2.811969518661499
    3. '(build' → logprob: -13.811969757080078
    4. ' buil' → logprob: -14.561969757080078
    5. '	build' → logprob: -15.561969757080078
    6. '   ' → logprob: -16.311969757080078
    7. ' building' → logprob: -16.686969757080078
    8. ' ' → logprob: -17.186969757080078
    9. '_build' → logprob: -17.811969757080078
    10. ' buildup' → logprob: -18.061969757080078

Token 212: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.045823566731997e-05
    2. '_ab' → logprob: -11.375020027160645
    3. '(abs' → logprob: -12.250020027160645
    4. 'abs' → logprob: -12.625020027160645
    5. '_' → logprob: -14.125020027160645
    6. '_absolute' → logprob: -17.50002098083496
    7. ' abs' → logprob: -18.12502098083496
    8. '```' → logprob: -18.87502098083496
    9. '(' → logprob: -19.25002098083496
    10. '_(' → logprob: -19.37502098083496

Token 213: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. 'abs' → logprob: -15.125000953674316
    3. '_list' → logprob: -16.625
    4. '(list' → logprob: -17.125
    5. '_abs' → logprob: -17.5
    6. '(abs' → logprob: -18.375
    7. 'lst' → logprob: -18.625
    8. '```' → logprob: -18.875
    9. '(' → logprob: -20.5
    10. 'array' → logprob: -20.75

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.400689305039123e-05
    2. '(lst' → logprob: -9.375094413757324
    3. '(' → logprob: -11.750094413757324
    4. '(abs' → logprob: -14.000094413757324
    5. ' (' → logprob: -15.250094413757324
    6. '(list' → logprob: -16.875093460083008
    7. '(noun' → logprob: -17.875093460083008
    8. '```' → logprob: -18.125093460083008
    9. '(
' → logprob: -19.000093460083008
    10. '(ls' → logprob: -19.000093460083008

Token 215: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003932713996618986
    2. '(n' → logprob: -6.003932476043701
    3. ',' → logprob: -7.878932476043701
    4. 'lst' → logprob: -7.878932476043701
    5. 'ist' → logprob: -8.12893295288086
    6. ',n' → logprob: -8.62893295288086
    7. ')' → logprob: -8.75393295288086
    8. 'n' → logprob: -10.50393295288086
    9. '),' → logprob: -11.00393295288086
    10. '(' → logprob: -12.00393295288086

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006736095994710922
    2. ',n' → logprob: -5.0067362785339355
    3. '(n' → logprob: -11.256735801696777
    4. ')' → logprob: -12.756735801696777
    5. ' ,' → logprob: -12.756735801696777
    6. '(' → logprob: -13.506735801696777
    7. 'n' → logprob: -15.006735801696777
    8. '   ' → logprob: -16.131736755371094
    9. ',
' → logprob: -16.756736755371094
    10. ',N' → logprob: -17.381736755371094

Token 217: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015023599844425917
    2. ' n' → logprob: -6.501502513885498
    3. '	n' → logprob: -18.251502990722656
    4. ')n' → logprob: -18.626502990722656
    5. '   ' → logprob: -19.876502990722656
    6. ')' → logprob: -21.501502990722656
    7. '    ' → logprob: -22.626502990722656
    8. '
' → logprob: -22.751502990722656
    9. '(n' → logprob: -22.751502990722656
    10. ',n' → logprob: -22.876502990722656

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003370118502061814
    2. ')
' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.375336647033691
    4. ' )' → logprob: -14.375336647033691
    5. ')
' → logprob: -15.500336647033691
    6. ')

' → logprob: -16.500337600708008
    7. '()' → logprob: -17.125337600708008
    8. ' ' → logprob: -17.875337600708008
    9. '())' → logprob: -18.500337600708008
    10. ')n' → logprob: -18.500337600708008

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04136653244495392
    2. 'min' → logprob: -3.5413665771484375
    3. '
' → logprob: -4.6663665771484375
    4. ' min' → logprob: -7.2913665771484375
    5. '    
' → logprob: -7.4163665771484375
    6. '_min' → logprob: -8.291366577148438
    7. '```' → logprob: -8.541366577148438
    8. '	min' → logprob: -9.416366577148438
    9. 'minimum' → logprob: -9.541366577148438
    10. 'print' → logprob: -10.166366577148438

Token 220: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.35542649030685425
    2. 'print' → logprob: -1.230426549911499
    3. 'result' → logprob: -5.60542631149292
    4. 'ans' → logprob: -6.48042631149292
    5. 'answer' → logprob: -7.60542631149292
    6. '   ' → logprob: -8.105426788330078
    7. 'res' → logprob: -8.230426788330078
    8. 'minimum' → logprob: -8.355426788330078
    9. 'mind' → logprob: -9.355426788330078
    10. '_min' → logprob: -9.605426788330078

Token 221: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.08210930228233337
    2. '_' → logprob: -2.707109212875366
    3. '_value' → logprob: -4.832109451293945
    4. '_abs' → logprob: -5.582109451293945
    5. '(' → logprob: -8.457109451293945
    6. '(abs' → logprob: -9.582109451293945
    7. '_min' → logprob: -10.457109451293945
    8. '_ab' → logprob: -10.707109451293945
    9. 'Val' → logprob: -11.957109451293945
    10. 'val' → logprob: -12.457109451293945

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411516308784485
    2. '=' → logprob: -0.9741151332855225
    3. '_' → logprob: -10.724115371704102
    4. '   ' → logprob: -11.974115371704102
    5. '(' → logprob: -12.474115371704102
    6. '()' → logprob: -13.599115371704102
    7. ',' → logprob: -13.724115371704102
    8. ')' → logprob: -13.974115371704102
    9. '_=' → logprob: -14.599115371704102
    10. '＝' → logprob: -15.099115371704102

Token 223: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2014138251543045
    2. ' get' → logprob: -1.701413869857788
    3. '(get' → logprob: -15.201414108276367
    4. '_get' → logprob: -16.076414108276367
    5. ' ' → logprob: -17.201414108276367
    6. '	get' → logprob: -17.451414108276367
    7. 'min' → logprob: -17.826414108276367
    8. '.get' → logprob: -17.826414108276367
    9. '
' → logprob: -18.201414108276367
    10. '[get' → logprob: -18.451414108276367

Token 224: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -8.101369894575328e-05
    2. 'min' → logprob: -9.750081062316895
    3. '(min' → logprob: -11.375081062316895
    4. '_abs' → logprob: -12.375081062316895
    5. '(abs' → logprob: -12.625081062316895
    6. '(' → logprob: -13.250081062316895
    7. '_' → logprob: -13.375081062316895
    8. 'abs' → logprob: -16.250080108642578
    9. '_val' → logprob: -16.500080108642578
    10. '_max' → logprob: -16.625080108642578

Token 225: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.375097274780273
    3. ' (' → logprob: -11.750097274780273
    4. '(ab' → logprob: -12.500097274780273
    5. '(
' → logprob: -16.000097274780273
    6. 'abs' → logprob: -16.375097274780273
    7. '(lst' → logprob: -16.750097274780273
    8. '(ans' → logprob: -17.250097274780273
    9. '```' → logprob: -18.375097274780273
    10. ' abs' → logprob: -18.375097274780273

Token 226: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1472419600977446e-06
    2. 'ist' → logprob: -14.375000953674316
    3. '(abs' → logprob: -14.750000953674316
    4. 'abs' → logprob: -16.125001907348633
    5. '(' → logprob: -18.625001907348633
    6. ')' → logprob: -19.625001907348633
    7. 'lst' → logprob: -20.625001907348633
    8. '(list' → logprob: -20.625001907348633
    9. 'lista' → logprob: -21.375001907348633
    10. 'List' → logprob: -21.375001907348633

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003992084879428148
    2. '()' → logprob: -5.628992080688477
    3. '())' → logprob: -8.253992080688477
    4. ')
' → logprob: -9.128992080688477
    5. '()
' → logprob: -11.503992080688477
    6. '   ' → logprob: -11.753992080688477
    7. ' )' → logprob: -12.378992080688477
    8. '())
' → logprob: -15.378992080688477
    9. '))' → logprob: -15.753992080688477
    10. '(' → logprob: -15.878992080688477

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06228046119213104
    2. 'print' → logprob: -2.8122804164886475
    3. ' print' → logprob: -8.187280654907227
    4. '```' → logprob: -11.312280654907227
    5. '    
' → logprob: -11.437280654907227
    6. '	print' → logprob: -11.937280654907227
    7. '
' → logprob: -13.062280654907227
    8. 'return' → logprob: -14.062280654907227
    9. '<|end|>' → logprob: -14.187280654907227
    10. '(print' → logprob: -15.312280654907227

Token 229: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.56102097814437e-05
    2. '   ' → logprob: -10.250045776367188
    3. ' print' → logprob: -11.500045776367188
    4. '```' → logprob: -16.625045776367188
    5. '
' → logprob: -18.000045776367188
    6. 'return' → logprob: -18.500045776367188
    7. '	print' → logprob: -20.125045776367188
    8. '``' → logprob: -21.250045776367188
    9. '  ' → logprob: -21.750045776367188
    10. '#print' → logprob: -22.000045776367188

Token 230: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.006715370807796717
    2. '(' → logprob: -5.006715297698975
    3. 'min' → logprob: -18.256715774536133
    4. ' (' → logprob: -18.256715774536133
    5. '(
' → logprob: -18.756715774536133
    6. '(f' → logprob: -19.006715774536133
    7. '(max' → logprob: -19.131715774536133
    8. '(

' → logprob: -20.006715774536133
    9. '("("' → logprob: -20.381715774536133
    10. '()' → logprob: -20.506715774536133

Token 231: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -12.87500286102295
    3. ' _' → logprob: -16.250001907348633
    4. '_VAL' → logprob: -16.750001907348633
    5. '(' → logprob: -17.375001907348633
    6. 'Val' → logprob: -18.250001907348633
    7. 'val' → logprob: -18.500001907348633
    8. '(_' → logprob: -18.500001907348633
    9. '_va' → logprob: -18.625001907348633
    10. '_)' → logprob: -18.750001907348633

Token 232: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. '')' → logprob: -16.25
    4. ')
' → logprob: -16.5
    5. '")' → logprob: -18.125
    6. ')`' → logprob: -18.375
    7. '`)' → logprob: -19.25
    8. '))' → logprob: -19.5
    9. '()' → logprob: -19.625
    10. '(' → logprob: -20.0

Token 233: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03466297313570976
    2. '
' → logprob: -3.534662961959839
    3. '\n' → logprob: -6.034663200378418
    4. 'main' → logprob: -6.409663200378418
    5. ' if' → logprob: -8.284663200378418
    6. '#' → logprob: -8.534663200378418
    7. '<|end|>' → logprob: -9.284663200378418
    8. '\' → logprob: -9.409663200378418
    9. '_' → logprob: -9.534663200378418
    10. '```' → logprob: -9.659663200378418

Token 234: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3911396861076355
    2. '<|end|>' → logprob: -1.3911397457122803
    3. '
' → logprob: -3.3911397457122803
    4. '(' → logprob: -3.6411397457122803
    5. '\n' → logprob: -5.391139507293701
    6. '```' → logprob: -5.516139507293701
    7. ')' → logprob: -6.141139507293701
    8. '#' → logprob: -6.266139507293701
    9. '()
' → logprob: -7.516139507293701
    10. '<|end|>' → logprob: -7.766139507293701


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 232
Tokens correctement prédits (1ère position, stricte): 120
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 203
Précision stricte (1ère position): 51.72%
Précision adaptée (1ère position): 56.90%
Précision (top 10): 87.50%
================================================================================
