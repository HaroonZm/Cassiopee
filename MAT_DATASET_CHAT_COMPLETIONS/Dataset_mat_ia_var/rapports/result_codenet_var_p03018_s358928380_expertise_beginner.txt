================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    s = input()
    s = list(s)
    ans = 0
    a = 0
    cur = 0

    while cur < len(s) - 2:
        if s[cur] == "A" and s[cur+1] == "B" and s[cur+2] == "C":
            ans += a + 1
            cur += 2
            s[cur] = "A"
        else:
            if s[cur] == "A":
                a += 1
            else:
                a = 0
            cur += 1

    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3835870623588562
    2. ' main' → logprob: -1.883587121963501
    3. ' process' → logprob: -2.758587121963501
    4. ' space' → logprob: -3.258587121963501
    5. ' calculate' → logprob: -4.633586883544922
    6. ' read' → logprob: -4.883586883544922
    7. ' hello' → logprob: -4.883586883544922
    8. ' my' → logprob: -5.133586883544922
    9. '_' → logprob: -5.258586883544922
    10. ' a' → logprob: -5.758586883544922

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03178084269165993
    2. '():' → logprob: -3.656780958175659
    3. ':' → logprob: -5.90678071975708
    4. '(:' → logprob: -6.03178071975708
    5. '(
' → logprob: -9.531781196594238
    6. '```' → logprob: -9.781781196594238
    7. '):' → logprob: -10.031781196594238
    8. '(":' → logprob: -10.281781196594238
    9. ' (' → logprob: -10.281781196594238
    10. '(`' → logprob: -10.656781196594238

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017721280455589294
    2. '(' → logprob: -5.017721176147461
    3. '\' → logprob: -5.892721176147461
    4. ':' → logprob: -6.017721176147461
    5. '(sys' → logprob: -6.392721176147461
    6. '    ' → logprob: -6.517721176147461
    7. '():' → logprob: -7.392721176147461
    8. '()' → logprob: -7.517721176147461
    9. '```' → logprob: -7.517721176147461
    10. 'print' → logprob: -8.517721176147461

Token 7: ' s' (ID: 265)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.23423999547958374
    2. ' ' → logprob: -1.9842400550842285
    3. '   ' → logprob: -3.3592400550842285
    4. 'print' → logprob: -3.8592400550842285
    5. ' pass' → logprob: -5.1092400550842285
    6. 'pass' → logprob: -5.8592400550842285
    7. ' print' → logprob: -6.2342400550842285
    8. '     
' → logprob: -6.4842400550842285
    9. '  ' → logprob: -6.9842400550842285
    10. '     ' → logprob: -7.4842400550842285

Token 8: ' =' (ID: 314)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9487192630767822
    2. '.' → logprob: -1.3237192630767822
    3. 'tr' → logprob: -1.9487192630767822
    4. 't' → logprob: -2.5737192630767822
    5. 'ys' → logprob: -2.9487192630767822
    6. ' =' → logprob: -3.9487192630767822
    7. '[:' → logprob: -5.073719024658203
    8. ')' → logprob: -5.198719024658203
    9. 'trip' → logprob: -5.198719024658203
    10. ' .' → logprob: -5.198719024658203

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4358886480331421
    2. 'input' → logprob: -1.685888648033142
    3. ' sys' → logprob: -2.1858887672424316
    4. ' "' → logprob: -3.6858887672424316
    5. '"' → logprob: -4.060888767242432
    6. ' ' → logprob: -5.310888767242432
    7. 'sys' → logprob: -5.310888767242432
    8. ' '' → logprob: -6.810888767242432
    9. ''' → logprob: -6.935888767242432
    10. ''s' → logprob: -8.498388290405273

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004997736308723688
    2. '('' → logprob: -5.629997730255127
    3. '()' → logprob: -7.129997730255127
    4. '("("' → logprob: -8.629998207092285
    5. ''' → logprob: -8.879998207092285
    6. '```' → logprob: -9.754998207092285
    7. '("")' → logprob: -10.254998207092285
    8. '(
' → logprob: -10.379998207092285
    9. ')' → logprob: -10.379998207092285
    10. ' ' → logprob: -10.754998207092285

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4367755055427551
    2. '.' → logprob: -1.3117754459381104
    3. '```' → logprob: -3.9367754459381104
    4. '    
' → logprob: -4.1867756843566895
    5. ')' → logprob: -4.1867756843566895
    6. ' ' → logprob: -5.1867756843566895
    7. '    ' → logprob: -5.5617756843566895
    8. ' if' → logprob: -5.9367756843566895
    9. '
' → logprob: -6.0617756843566895
    10. '[' → logprob: -6.3117756843566895

Token 12: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8742828965187073
    2. '   ' → logprob: -1.3742828369140625
    3. ' if' → logprob: -1.9992828369140625
    4. 'i' → logprob: -3.1242828369140625
    5. 'count' → logprob: -3.7492828369140625
    6. 'try' → logprob: -3.8742828369140625
    7. 'print' → logprob: -3.9992828369140625
    8. 'n' → logprob: -3.9992828369140625
    9. 'for' → logprob: -4.2492828369140625
    10. 'p' → logprob: -4.6242828369140625

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006049312651157379
    2. '[' → logprob: -5.881049156188965
    3. '.strip' → logprob: -6.881049156188965
    4. '.split' → logprob: -8.131049156188965
    5. '<|end|>' → logprob: -8.256049156188965
    6. '+' → logprob: -8.381049156188965
    7. ')' → logprob: -8.381049156188965
    8. '[:]' → logprob: -8.756049156188965
    9. '.upper' → logprob: -9.006049156188965
    10. '.lower' → logprob: -9.006049156188965

Token 14: ' list' (ID: 1562)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.012818403542041779
    2. 's' → logprob: -4.387818336486816
    3. ' sys' → logprob: -8.387818336486816
    4. '.s' → logprob: -10.137818336486816
    5. ' ' → logprob: -11.387818336486816
    6. '.' → logprob: -11.512818336486816
    7. 'sys' → logprob: -11.512818336486816
    8. ' .' → logprob: -13.512818336486816
    9. '.strip' → logprob: -13.762818336486816
    10. '[::-' → logprob: -13.762818336486816

Token 15: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.11298107355833054
    2. '(' → logprob: -2.237981081008911
    3. '("("' → logprob: -10.362980842590332
    4. '('' → logprob: -10.612980842590332
    5. '(str' → logprob: -10.612980842590332
    6. 's' → logprob: -10.862980842590332
    7. '(ss' → logprob: -11.362980842590332
    8. '(`' → logprob: -12.112980842590332
    9. '(
' → logprob: -12.362980842590332
    10. '((' → logprob: -12.362980842590332

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.802049756515771e-05
    2. '))' → logprob: -10.125067710876465
    3. '())' → logprob: -11.250067710876465
    4. '()' → logprob: -12.125067710876465
    5. ')))' → logprob: -12.625067710876465
    6. ' )' → logprob: -13.375067710876465
    7. '   ' → logprob: -13.750067710876465
    8. '[' → logprob: -14.000067710876465
    9. ')])' → logprob: -14.625067710876465
    10. '(' → logprob: -15.125067710876465

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307026743888855
    2. '[' → logprob: -2.5057027339935303
    3. '    
' → logprob: -4.380702495574951
    4. ')' → logprob: -4.630702495574951
    5. '[]' → logprob: -5.380702495574951
    6. '[:]' → logprob: -6.130702495574951
    7. '```' → logprob: -6.505702495574951
    8. '.' → logprob: -6.630702495574951
    9. ' ' → logprob: -7.005702495574951
    10. ':' → logprob: -7.005702495574951

Token 18: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31138744950294495
    2. '[' → logprob: -1.9363874197006226
    3. ' ' → logprob: -3.436387538909912
    4. ' for' → logprob: -3.686387538909912
    5. 'for' → logprob: -4.061387538909912
    6. 's' → logprob: -4.311387538909912
    7. '```' → logprob: -4.436387538909912
    8. 'i' → logprob: -5.561387538909912
    9. ' if' → logprob: -6.061387538909912
    10. '    
' → logprob: -6.186387538909912

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7894250154495239
    2. ' =' → logprob: -1.289425015449524
    3. '[:]' → logprob: -2.1644248962402344
    4. '.' → logprob: -2.9144248962402344
    5. '.append' → logprob: -3.0394248962402344
    6. '=' → logprob: -3.2894248962402344
    7. '   ' → logprob: -5.664424896240234
    8. '[]' → logprob: -5.914424896240234
    9. '_' → logprob: -6.164424896240234
    10. '.extend' → logprob: -6.664424896240234

Token 20: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6575161814689636
    2. '[]' → logprob: -0.7825161814689636
    3. '0' → logprob: -4.157516002655029
    4. ' ' → logprob: -5.282516002655029
    5. ' [' → logprob: -6.907516002655029
    6. 's' → logprob: -7.157516002655029
    7. '[' → logprob: -7.157516002655029
    8. ' s' → logprob: -7.657516002655029
    9. '[s' → logprob: -7.782516002655029
    10. '['' → logprob: -9.657516479492188

Token 21: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03207838162779808
    2. '0' → logprob: -3.782078266143799
    3. '[' → logprob: -5.782078266143799
    4. 's' → logprob: -6.407078266143799
    5. '""' → logprob: -7.282078266143799
    6. '[]
' → logprob: -7.407078266143799
    7. '{}' → logprob: -7.532078266143799
    8. 'len' → logprob: -7.657078266143799
    9. '[s' → logprob: -7.782078266143799
    10. 'set' → logprob: -7.907078266143799

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4057813286781311
    2. ' ' → logprob: -2.0307812690734863
    3. '
' → logprob: -2.9057812690734863
    4. ' for' → logprob: -3.2807812690734863
    5. 'for' → logprob: -3.2807812690734863
    6. '<|end|>' → logprob: -3.5307812690734863
    7. '    
' → logprob: -4.280781269073486
    8. ' 
' → logprob: -5.030781269073486
    9. '  
' → logprob: -5.280781269073486
    10. '  ' → logprob: -5.280781269073486

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051016561686992645
    2. 'for' → logprob: -3.6760165691375732
    3. ' for' → logprob: -3.9260165691375732
    4. ' ' → logprob: -6.051016330718994
    5. 'n' → logprob: -7.551016330718994
    6. '
' → logprob: -7.676016330718994
    7. '    
' → logprob: -7.801016330718994
    8. '```' → logprob: -8.426016807556152
    9. '\n' → logprob: -8.551016807556152
    10. '  ' → logprob: -8.801016807556152

Token 24: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8375154137611389
    2. 'for' → logprob: -0.8375154137611389
    3. '   ' → logprob: -2.837515354156494
    4. ' ' → logprob: -3.212515354156494
    5. 'n' → logprob: -4.212515354156494
    6. '\n' → logprob: -4.587515354156494
    7. ':' → logprob: -6.337515354156494
    8. '```' → logprob: -6.587515354156494
    9. '
' → logprob: -6.837515354156494
    10. 'i' → logprob: -6.962515354156494

Token 25: ' =' (ID: 314)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.1241312101483345
    2. ' =' → logprob: -2.874131202697754
    3. 'i' → logprob: -3.624131202697754
    4. '=' → logprob: -4.499131202697754
    5. 'n' → logprob: -5.499131202697754
    6. '   ' → logprob: -5.749131202697754
    7. 'cc' → logprob: -6.124131202697754
    8. 's' → logprob: -6.124131202697754
    9. '[i' → logprob: -6.624131202697754
    10. 'ss' → logprob: -6.874131202697754

Token 26: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7648141384124756
    2. '0' → logprob: -1.1398141384124756
    3. ' []' → logprob: -2.6398141384124756
    4. '[' → logprob: -3.1398141384124756
    5. ' ' → logprob: -3.3898141384124756
    6. '1' → logprob: -4.014814376831055
    7. ' [' → logprob: -4.389814376831055
    8. '{}' → logprob: -4.639814376831055
    9. 'len' → logprob: -4.889814376831055
    10. 's' → logprob: -5.389814376831055

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7429589629173279
    2. '[]' → logprob: -1.3679590225219727
    3. 's' → logprob: -2.4929590225219727
    4. 'len' → logprob: -3.1179590225219727
    5. '[' → logprob: -3.2429590225219727
    6. ''s' → logprob: -3.2429590225219727
    7. '1' → logprob: -3.7429590225219727
    8. '[s' → logprob: -4.367959022521973
    9. '{}' → logprob: -5.492959022521973
    10. 'ord' → logprob: -5.492959022521973

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24968889355659485
    2. '<|end|>' → logprob: -1.8746888637542725
    3. '<|end|>' → logprob: -3.6246888637542725
    4. '   ' → logprob: -4.749689102172852
    5. ' ' → logprob: -4.874689102172852
    6. 'x' → logprob: -5.124689102172852
    7. 'b' → logprob: -5.249689102172852
    8. 'a' → logprob: -5.749689102172852
    9. 'for' → logprob: -6.124689102172852
    10. 's' → logprob: -6.249689102172852

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5719276666641235
    2. ' ' → logprob: -1.6969276666641235
    3. '
' → logprob: -2.071927547454834
    4. '<|end|>' → logprob: -3.321927547454834
    5. ' for' → logprob: -4.321927547454834
    6. 'for' → logprob: -4.571927547454834
    7. ' 
' → logprob: -4.571927547454834
    8. 'b' → logprob: -4.821927547454834
    9. 'while' → logprob: -4.946927547454834
    10. 'x' → logprob: -5.071927547454834

Token 30: ' cur' (ID: 4396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6664572954177856
    2. 'while' → logprob: -1.7914572954177856
    3. 'n' → logprob: -2.541457176208496
    4. ' for' → logprob: -2.666457176208496
    5. '   ' → logprob: -3.041457176208496
    6. ' ' → logprob: -3.666457176208496
    7. 'b' → logprob: -3.791457176208496
    8. '
' → logprob: -4.041457176208496
    9. ' while' → logprob: -4.166457176208496
    10. 'x' → logprob: -4.541457176208496

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47790107131004333
    2. '=' → logprob: -0.9779011011123657
    3. ' ' → logprob: -7.102900981903076
    4. ')' → logprob: -7.852900981903076
    5. 'nt' → logprob: -8.102901458740234
    6. ' +=' → logprob: -8.477901458740234
    7. '_' → logprob: -8.727901458740234
    8. 'l' → logprob: -8.852901458740234
    9. 'a' → logprob: -8.977901458740234
    10. '_char' → logprob: -9.102901458740234

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5169368982315063
    2. ' ' → logprob: -1.0169368982315063
    3. ''' → logprob: -4.891936779022217
    4. ' ''' → logprob: -5.391936779022217
    5. '''' → logprob: -5.516936779022217
    6. ' '' → logprob: -5.891936779022217
    7. '1' → logprob: -5.891936779022217
    8. ''s' → logprob: -6.141936779022217
    9. ' []' → logprob: -6.266936779022217
    10. 'a' → logprob: -6.391936779022217

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1006118580698967
    2. ''a' → logprob: -4.225611686706543
    3. '''' → logprob: -4.350611686706543
    4. '1' → logprob: -4.475611686706543
    5. ''' → logprob: -4.725611686706543
    6. ''s' → logprob: -4.850611686706543
    7. '-' → logprob: -4.850611686706543
    8. 'a' → logprob: -5.100611686706543
    9. 'None' → logprob: -5.225611686706543
    10. 's' → logprob: -5.475611686706543

Token 34: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7463951110839844
    2. ' ' → logprob: -1.2463951110839844
    3. '<|end|>' → logprob: -1.8713951110839844
    4. ' 
' → logprob: -3.7463951110839844
    5. '  ' → logprob: -3.9963951110839844
    6. '
' → logprob: -4.371395111083984
    7. '    ' → logprob: -5.121395111083984
    8. '    
' → logprob: -5.621395111083984
    9. ' for' → logprob: -5.746395111083984
    10. ' while' → logprob: -5.746395111083984

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46889474987983704
    2. ' for' → logprob: -1.3438947200775146
    3. 'for' → logprob: -2.9688947200775146
    4. ' ' → logprob: -3.2188947200775146
    5. ' while' → logprob: -4.718894958496094
    6. 'while' → logprob: -5.843894958496094
    7. 'n' → logprob: -6.093894958496094
    8. ':' → logprob: -6.343894958496094
    9. '  ' → logprob: -6.593894958496094
    10. '
' → logprob: -6.968894958496094

Token 36: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11321508139371872
    2. ' for' → logprob: -2.4882149696350098
    3. 'while' (adapté à ' while') → logprob: -4.48821496963501
    4. '   ' → logprob: -4.73821496963501
    5. ' while' → logprob: -6.48821496963501
    6. 'n' → logprob: -6.73821496963501
    7. ' ' → logprob: -7.23821496963501
    8. 'i' → logprob: -8.113215446472168
    9. ':' → logprob: -9.113215446472168
    10. '    ' → logprob: -10.238215446472168

Token 37: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.08953344821929932
    2. ' a' → logprob: -2.5895333290100098
    3. ' ' → logprob: -5.71453332901001
    4. 'cur' → logprob: -5.96453332901001
    5. ' True' → logprob: -6.08953332901001
    6. 'a' → logprob: -7.08953332901001
    7. '(cur' → logprob: -7.33953332901001
    8. ' len' → logprob: -7.71453332901001
    9. ' not' → logprob: -8.964533805847168
    10. 'True' → logprob: -9.089533805847168

Token 38: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06278035044670105
    2. '<' → logprob: -2.8127803802490234
    3. '<len' → logprob: -7.312780380249023
    4. '+' → logprob: -9.312780380249023
    5. ' ' → logprob: -11.187780380249023
    6. '<n' → logprob: -11.687780380249023
    7. '<size' → logprob: -11.812780380249023
    8. ' <=' → logprob: -11.937780380249023
    9. ' +' → logprob: -12.187780380249023
    10. '[' → logprob: -12.687780380249023

Token 39: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3132646679878235
    2. ' len' → logprob: -1.3132646083831787
    3. '(len' → logprob: -13.438264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '   ' → logprob: -14.438264846801758
    6. '=len' → logprob: -16.313264846801758
    7. '<len' → logprob: -17.563264846801758
    8. '10' → logprob: -17.688264846801758
    9. '	len' → logprob: -17.813264846801758
    10. 'length' → logprob: -18.188264846801758

Token 40: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0015235526952892542
    2. '(' → logprob: -6.501523494720459
    3. 's' → logprob: -10.876523971557617
    4. ' (' → logprob: -13.126523971557617
    5. ')' → logprob: -16.501523971557617
    6. '(
' → logprob: -16.626523971557617
    7. '(S' → logprob: -16.751523971557617
    8. '(cur' → logprob: -16.876523971557617
    9. ' s' → logprob: -17.501523971557617
    10. '(

' → logprob: -17.626523971557617

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11037372797727585
    2. '):' → logprob: -2.3603737354278564
    3. '):
' → logprob: -5.360373497009277
    4. ' and' → logprob: -5.360373497009277
    5. ' )' → logprob: -7.860373497009277
    6. 'and' → logprob: -8.860373497009277
    7. '   ' → logprob: -9.485373497009277
    8. ' ):' → logprob: -9.735373497009277
    9. '):

' → logprob: -11.610373497009277
    10. ' ' → logprob: -11.985373497009277

Token 42: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017708394676446915
    2. ' and' → logprob: -4.1427083015441895
    3. ':
' → logprob: -6.7677083015441895
    4. 'and' → logprob: -7.7677083015441895
    5. ' :' → logprob: -9.767708778381348
    6. '   ' → logprob: -11.017708778381348
    7. '():' → logprob: -12.142708778381348
    8. '[' → logprob: -12.392708778381348
    9. '):' → logprob: -12.392708778381348
    10. 's' → logprob: -13.517708778381348

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006443457677960396
    2. ' ' → logprob: -5.131443500518799
    3. '2' → logprob: -7.631443500518799
    4. '3' → logprob: -10.88144302368164
    5. '4' → logprob: -12.50644302368164
    6. '   ' → logprob: -12.75644302368164
    7. 'a' → logprob: -14.31894302368164
    8. '5' → logprob: -14.69394302368164
    9. '0' → logprob: -14.88144302368164
    10. 's' → logprob: -14.94394302368164

Token 44: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005321830976754427
    2. '2' → logprob: -8.000532150268555
    3. ' ' → logprob: -8.625532150268555
    4. '3' → logprob: -11.250532150268555
    5. '4' → logprob: -13.500532150268555
    6. '   ' → logprob: -14.500532150268555
    7. '0' → logprob: -14.688032150268555
    8. '10' → logprob: -15.375532150268555
    9. '5' → logprob: -15.438032150268555
    10. 'a' → logprob: -15.813032150268555

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037384144961833954
    2. ' and' → logprob: -3.412384033203125
    3. ':
' → logprob: -6.037384033203125
    4. ' :' → logprob: -7.287384033203125
    5. 'and' → logprob: -7.662384033203125
    6. '   ' → logprob: -9.162384033203125
    7. '       ' → logprob: -11.287384033203125
    8. '):' → logprob: -11.287384033203125
    9. ' :
' → logprob: -11.287384033203125
    10. ' or' → logprob: -11.537384033203125

Token 46: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46080726385116577
    2. '       ' → logprob: -2.0858073234558105
    3. ' ' → logprob: -2.5858073234558105
    4. '   ' → logprob: -3.0858073234558105
    5. ' :' → logprob: -3.3358073234558105
    6. '    ' → logprob: -3.8358073234558105
    7. ' and' → logprob: -4.0858073234558105
    8. '+' → logprob: -4.5858073234558105
    9. '<|end|>' → logprob: -4.7108073234558105
    10. ':
' → logprob: -5.3358073234558105

Token 47: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1669018566608429
    2. ' if' → logprob: -3.0419018268585205
    3. '       ' → logprob: -3.7919018268585205
    4. '        ' → logprob: -3.9169018268585205
    5. '    ' → logprob: -3.9169018268585205
    6. 'if' (adapté à ' if') → logprob: -4.0419020652771
    7. '  ' → logprob: -5.5419020652771
    8. '   ' → logprob: -5.6669020652771
    9. '           ' → logprob: -6.1669020652771
    10. '[' → logprob: -6.2919020652771

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.014428739435970783
    2. 's' → logprob: -4.264428615570068
    3. ' ' → logprob: -9.139429092407227
    4. ' not' → logprob: -9.264429092407227
    5. ' (' → logprob: -11.139429092407227
    6. '    ' → logprob: -11.389429092407227
    7. ' '' → logprob: -11.889429092407227
    8. ' cur' → logprob: -12.264429092407227
    9. '(s' → logprob: -12.639429092407227
    10. ''s' → logprob: -13.014429092407227

Token 49: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0009194392478093505
    2. '[' → logprob: -7.250919342041016
    3. ' [' → logprob: -8.500919342041016
    4. '[c' → logprob: -13.000919342041016
    5. ' ' → logprob: -13.875919342041016
    6. '   ' → logprob: -14.000919342041016
    7. '[curr' → logprob: -14.750919342041016
    8. '[a' → logprob: -15.250919342041016
    9. '[i' → logprob: -15.625919342041016
    10. '==' → logprob: -16.000919342041016

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0465383343398571
    2. ' ]' → logprob: -3.9215383529663086
    3. ']==' → logprob: -4.421538352966309
    4. '[' → logprob: -4.546538352966309
    5. ' ' → logprob: -6.921538352966309
    6. '+' → logprob: -7.046538352966309
    7. ' ==' → logprob: -8.046538352966309
    8. '==' → logprob: -8.546538352966309
    9. ':' → logprob: -8.921538352966309
    10. ']=='' → logprob: -9.296538352966309

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37111109495162964
    2. '==' → logprob: -1.2461111545562744
    3. ' ' → logprob: -4.996110916137695
    4. '[' → logprob: -4.996110916137695
    5. '+' → logprob: -5.746110916137695
    6. ' in' → logprob: -5.996110916137695
    7. ' !=' → logprob: -6.996110916137695
    8. '=' → logprob: -7.121110916137695
    9. '!=' → logprob: -7.496110916137695
    10. '===' → logprob: -8.996110916137695

Token 52: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6902472972869873
    2. 's' → logprob: -1.5652472972869873
    3. ''a' → logprob: -2.1902472972869873
    4. ''s' → logprob: -2.5652472972869873
    5. 'a' → logprob: -4.065247535705566
    6. ''S' → logprob: -4.690247535705566
    7. ''o' → logprob: -4.815247535705566
    8. ' '' → logprob: -4.940247535705566
    9. ''A' → logprob: -4.940247535705566
    10. ''i' → logprob: -5.190247535705566

Token 53: 'A' (ID: 32)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0992813110351562
    2. 'A' → logprob: -2.2242813110351562
    3. 'a' → logprob: -2.4742813110351562
    4. 'R' → logprob: -2.7242813110351562
    5. 's' → logprob: -2.8492813110351562
    6. '"' → logprob: -2.9742813110351562
    7. 'I' → logprob: -3.3492813110351562
    8. ''A' → logprob: -3.4742813110351562
    9. 'o' → logprob: -4.224281311035156
    10. ''a' → logprob: -4.224281311035156

Token 54: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0027665982488542795
    2. 'B' → logprob: -6.6277666091918945
    3. 'A' → logprob: -7.6277666091918945
    4. '"B' → logprob: -8.377766609191895
    5. 'a' → logprob: -8.752766609191895
    6. 'C' → logprob: -9.252766609191895
    7. ' "' → logprob: -9.627766609191895
    8. '"A' → logprob: -9.752766609191895
    9. 'R' → logprob: -10.127766609191895
    10. 'n' → logprob: -10.252766609191895

Token 55: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032688893377780914
    2. 'and' → logprob: -3.782688856124878
    3. ' ' → logprob: -5.032689094543457
    4. ' a' → logprob: -6.907689094543457
    5. 'nd' → logprob: -7.407689094543457
    6. 'a' → logprob: -7.407689094543457
    7. 'n' → logprob: -8.407689094543457
    8. ' or' → logprob: -8.782689094543457
    9. '   ' → logprob: -10.157689094543457
    10. '"' → logprob: -10.407689094543457

Token 56: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.019128596410155296
    2. 's' → logprob: -4.019128799438477
    3. ' ' → logprob: -7.019128799438477
    4. ' (' → logprob: -10.769128799438477
    5. '"' → logprob: -10.894128799438477
    6. ' "' → logprob: -11.394128799438477
    7. ' not' → logprob: -11.769128799438477
    8. '  ' → logprob: -12.269128799438477
    9. ' '' → logprob: -12.394128799438477
    10. '    ' → logprob: -13.456628799438477

Token 57: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -5.32392441527918e-05
    2. '[' → logprob: -10.125053405761719
    3. ' [' → logprob: -12.250053405761719
    4. 'cur' → logprob: -12.875053405761719
    5. '[c' → logprob: -13.125053405761719
    6. '[next' → logprob: -13.500053405761719
    7. '+' → logprob: -15.125053405761719
    8. 'a' → logprob: -15.250053405761719
    9. 'b' → logprob: -15.250053405761719
    10. '   ' → logprob: -15.375053405761719

Token 58: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07898959517478943
    2. ' +' → logprob: -2.5789895057678223
    3. ']' → logprob: -9.95398998260498
    4. '[' → logprob: -10.32898998260498
    5. ' ' → logprob: -11.32898998260498
    6. '   ' → logprob: -12.95398998260498
    7. '+]' → logprob: -13.45398998260498
    8. '[cur' → logprob: -13.82898998260498
    9. '1' → logprob: -14.57898998260498
    10. '[next' → logprob: -14.82898998260498

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019079314079135656
    2. '2' → logprob: -6.501907825469971
    3. ' ' → logprob: -7.876907825469971
    4. '+' → logprob: -11.501908302307129
    5. '0' → logprob: -12.126908302307129
    6. '3' → logprob: -12.626908302307129
    7. '   ' → logprob: -12.626908302307129
    8. '  ' → logprob: -14.189408302307129
    9. '4' → logprob: -14.751908302307129
    10. ']' → logprob: -15.001908302307129

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013853528536856174
    2. ']==' → logprob: -4.763853549957275
    3. '==' → logprob: -5.888853549957275
    4. ' ==' → logprob: -6.638853549957275
    5. ' ]' → logprob: -7.138853549957275
    6. '"]' → logprob: -8.638853073120117
    7. ' ' → logprob: -9.513853073120117
    8. '"' → logprob: -10.638853073120117
    9. ']=="' → logprob: -10.763853073120117
    10. '   ' → logprob: -11.513853073120117

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34960827231407166
    2. '==' → logprob: -1.224608302116394
    3. ' ' → logprob: -8.099608421325684
    4. '=="' → logprob: -8.349608421325684
    5. '"' → logprob: -8.474608421325684
    6. '  ' → logprob: -8.974608421325684
    7. '=' → logprob: -9.474608421325684
    8. ' =="' → logprob: -10.099608421325684
    9. ' =' → logprob: -10.974608421325684
    10. ' "' → logprob: -11.099608421325684

Token 62: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.733683168888092
    2. ' "' → logprob: -1.3586831092834473
    3. '"B' → logprob: -1.4836831092834473
    4. '"A' → logprob: -4.358683109283447
    5. '"C' → logprob: -4.358683109283447
    6. ''' → logprob: -5.233683109283447
    7. '"T' → logprob: -6.733683109283447
    8. '"I' → logprob: -7.358683109283447
    9. ' ' → logprob: -7.608683109283447
    10. ' '' → logprob: -7.858683109283447

Token 63: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008358067832887173
    2. 'C' → logprob: -5.258358001708984
    3. 'A' → logprob: -6.633358001708984
    4. 'G' → logprob: -7.008358001708984
    5. 'R' → logprob: -8.508358001708984
    6. ' B' → logprob: -8.508358001708984
    7. '"' → logprob: -9.383358001708984
    8. '"B' → logprob: -9.508358001708984
    9. 'N' → logprob: -10.258358001708984
    10. 'T' → logprob: -10.445858001708984

Token 64: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004107732092961669
    2. 'A' → logprob: -8.500411033630371
    3. 'C' → logprob: -9.750411033630371
    4. '"A' → logprob: -10.250411033630371
    5. '":' → logprob: -10.750411033630371
    6. ' "' → logprob: -10.875411033630371
    7. '"C' → logprob: -10.875411033630371
    8. ' and' → logprob: -11.000411033630371
    9. 'a' → logprob: -11.750411033630371
    10. '"""' → logprob: -11.875411033630371

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009414627216756344
    2. 'and' → logprob: -4.8844146728515625
    3. '"' → logprob: -6.5094146728515625
    4. ' ' → logprob: -8.884414672851562
    5. ' "' → logprob: -10.509414672851562
    6. '       ' → logprob: -10.509414672851562
    7. ' a' → logprob: -10.884414672851562
    8. ':' → logprob: -10.884414672851562
    9. '    ' → logprob: -10.884414672851562
    10. 'a' → logprob: -11.009414672851562

Token 66: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07059537619352341
    2. 's' → logprob: -2.6955952644348145
    3. '"' → logprob: -8.195595741271973
    4. ' "' → logprob: -8.570595741271973
    5. ' ' → logprob: -10.195595741271973
    6. '    ' → logprob: -10.320595741271973
    7. ' not' → logprob: -10.320595741271973
    8. ' (' → logprob: -10.570595741271973
    9. '   ' → logprob: -11.445595741271973
    10. '"s' → logprob: -11.570595741271973

Token 67: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.750006675720215
    3. ' [' → logprob: -13.000006675720215
    4. 'cur' → logprob: -14.625006675720215
    5. '   ' → logprob: -15.250006675720215
    6. '[next' → logprob: -16.3750057220459
    7. '[c' → logprob: -16.5000057220459
    8. ' ' → logprob: -16.7500057220459
    9. '[curr' → logprob: -17.0000057220459
    10. '(cur' → logprob: -17.2500057220459

Token 68: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006970516871660948
    2. '[' → logprob: -5.256970405578613
    3. ']' → logprob: -7.506970405578613
    4. ' +' → logprob: -7.756970405578613
    5. '[cur' → logprob: -7.756970405578613
    6. '2' → logprob: -9.381970405578613
    7. ']+' → logprob: -9.506970405578613
    8. '"+' → logprob: -10.131970405578613
    9. '+]' → logprob: -10.631970405578613
    10. '   ' → logprob: -11.256970405578613

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11209246516227722
    2. '1' → logprob: -2.3620924949645996
    3. '0' → logprob: -4.8620924949646
    4. '3' → logprob: -5.7370924949646
    5. ' ' → logprob: -7.7370924949646
    6. '4' → logprob: -8.362092018127441
    7. '>' → logprob: -10.299592018127441
    8. '5' → logprob: -10.549592018127441
    9. '```' → logprob: -10.987092018127441
    10. ')' → logprob: -11.049592018127441

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00798395462334156
    2. ']==' → logprob: -5.632984161376953
    3. '==' → logprob: -5.757984161376953
    4. ' ==' → logprob: -7.507984161376953
    5. '"]' → logprob: -8.007984161376953
    6. ' ]' → logprob: -8.757984161376953
    7. ')' → logprob: -9.507984161376953
    8. '"' → logprob: -10.132984161376953
    9. '[' → logprob: -11.507984161376953
    10. ']=="' → logprob: -11.632984161376953

Token 71: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5786953568458557
    2. ' ==' → logprob: -0.8286953568458557
    3. '=="' → logprob: -6.828695297241211
    4. '!=' → logprob: -7.703695297241211
    5. ' !=' → logprob: -7.828695297241211
    6. '"' → logprob: -7.828695297241211
    7. '=' → logprob: -8.703695297241211
    8. ' ' → logprob: -9.953695297241211
    9. '=='' → logprob: -10.453695297241211
    10. ' =="' → logprob: -10.453695297241211

Token 72: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2794930338859558
    2. '"A' → logprob: -1.7794930934906006
    3. '"C' → logprob: -2.6544930934906006
    4. ' "' → logprob: -6.0294928550720215
    5. '"B' → logprob: -7.0294928550720215
    6. ' ' → logprob: -7.9044928550720215
    7. ''' → logprob: -8.15449333190918
    8. '"a' → logprob: -8.65449333190918
    9. '  ' → logprob: -9.40449333190918
    10. '"O' → logprob: -9.40449333190918

Token 73: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2331041693687439
    2. 'A' → logprob: -1.6081042289733887
    3. 'B' → logprob: -5.483104228973389
    4. '"C' → logprob: -5.983104228973389
    5. '"A' → logprob: -7.608104228973389
    6. ''C' → logprob: -8.35810375213623
    7. '"' → logprob: -9.48310375213623
    8. '"B' → logprob: -9.60810375213623
    9. ''A' → logprob: -10.48310375213623
    10. 'a' → logprob: -10.98310375213623

Token 74: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.1539471298456192
    2. '"' → logprob: -2.278947114944458
    3. '":
' → logprob: -3.278947114944458
    4. ':' → logprob: -6.278947353363037
    5. '       ' → logprob: -8.028946876525879
    6. ' "' → logprob: -9.403946876525879
    7. '":
' → logprob: -9.653946876525879
    8. ':
' → logprob: -9.778946876525879
    9. ' ":' → logprob: -9.778946876525879
    10. '":

' → logprob: -9.903946876525879

Token 75: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6431589126586914
    2. '           ' → logprob: -1.3931589126586914
    3. ':' → logprob: -1.5181589126586914
    4. ':
' → logprob: -6.643158912658691
    5. ' :' → logprob: -6.893158912658691
    6. '):' → logprob: -7.018158912658691
    7. '        ' → logprob: -7.518158912658691
    8. '   ' → logprob: -7.643158912658691
    9. ',' → logprob: -8.018158912658691
    10. '               ' → logprob: -8.143158912658691

Token 76: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4652175307273865
    2. ' ans' → logprob: -1.4652175903320312
    3. 'ans' (adapté à ' ans') → logprob: -2.2152175903320312
    4. '               ' → logprob: -4.090217590332031
    5. ' a' → logprob: -5.090217590332031
    6. 'a' → logprob: -5.590217590332031
    7. '            ' → logprob: -6.590217590332031
    8. 'cur' → logprob: -7.090217590332031
    9. '            
' → logprob: -7.590217590332031
    10. ' cur' → logprob: -7.965217590332031

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029798975214362144
    2. '+=' → logprob: -3.529798984527588
    3. '+' → logprob: -10.02979850769043
    4. ' =' → logprob: -12.90479850769043
    5. ']+=' → logprob: -14.65479850769043
    6. '++' → logprob: -14.90479850769043
    7. ' +' → logprob: -15.02979850769043
    8. '=' → logprob: -15.02979850769043
    9. '+='' → logprob: -16.27979850769043
    10. '+="' → logprob: -16.27979850769043

Token 78: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011133184656500816
    2. ' ' → logprob: -4.511133193969727
    3. '3' → logprob: -9.511133193969727
    4. '2' → logprob: -12.011133193969727
    5. 'a' → logprob: -13.011133193969727
    6. '4' → logprob: -14.761133193969727
    7. 's' → logprob: -14.886133193969727
    8. '   ' → logprob: -15.136133193969727
    9. '  ' → logprob: -15.261133193969727
    10. '6' → logprob: -15.261133193969727

Token 79: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007018702570348978
    2. ' 
' → logprob: -6.007018566131592
    3. '+' → logprob: -6.882018566131592
    4. '  
' → logprob: -7.132018566131592
    5. '    
' → logprob: -7.257018566131592
    6. '
' → logprob: -7.507018566131592
    7. '           ' → logprob: -7.882018566131592
    8. '            
' → logprob: -8.50701904296875
    9. '        
' → logprob: -8.88201904296875
    10. '\n' → logprob: -8.88201904296875

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07007937133312225
    2. ' ' → logprob: -2.6950793266296387
    3. 'cur' → logprob: -9.945079803466797
    4. ' cur' → logprob: -10.945079803466797
    5. ' s' → logprob: -11.195079803466797
    6. 'b' → logprob: -11.195079803466797
    7. 's' → logprob: -11.320079803466797
    8. ' (' → logprob: -11.445079803466797
    9. '(' → logprob: -12.070079803466797
    10. ' b' → logprob: -12.320079803466797

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004048482980579138
    2. 'cur' → logprob: -5.7540483474731445
    3. 'b' → logprob: -7.8790483474731445
    4. ' ' → logprob: -8.754048347473145
    5. 's' → logprob: -9.129048347473145
    6. '(' → logprob: -9.254048347473145
    7. 'ans' → logprob: -10.254048347473145
    8. '(cur' → logprob: -10.629048347473145
    9. 'c' → logprob: -10.754048347473145
    10. '(s' → logprob: -11.129048347473145

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027352333068847656
    2. '\n' → logprob: -4.152352333068848
    3. '    
' → logprob: -5.652352333068848
    4. '
' → logprob: -5.777352333068848
    5. '  
' → logprob: -6.652352333068848
    6. '           ' → logprob: -6.902352333068848
    7. '            
' → logprob: -7.277352333068848
    8. '        
' → logprob: -7.652352333068848
    9. ' 
' → logprob: -7.902352333068848
    10. '   
' → logprob: -8.527352333068848

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8927508592605591
    2. '\n' → logprob: -1.392750859260559
    3. '
' → logprob: -1.892750859260559
    4. '        
' → logprob: -2.6427507400512695
    5. '    
' → logprob: -3.0177507400512695
    6. '            
' → logprob: -3.6427507400512695
    7. '       ' → logprob: -4.1427507400512695
    8. ' 
' → logprob: -4.7677507400512695
    9. '  
' → logprob: -5.3927507400512695
    10. '               ' → logprob: -5.8927507400512695

Token 84: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.26187315583229065
    2. 'a' → logprob: -1.6368731260299683
    3. '           ' → logprob: -4.136873245239258
    4. '   ' → logprob: -5.136873245239258
    5. ' cur' → logprob: -5.386873245239258
    6. '
' → logprob: -5.511873245239258
    7. ' a' → logprob: -5.761873245239258
    8. '       ' → logprob: -7.636873245239258
    9. '            
' → logprob: -7.636873245239258
    10. '    
' → logprob: -8.011873245239258

Token 85: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16065281629562378
    2. '+=' → logprob: -2.1606528759002686
    3. '+' → logprob: -3.4106528759002686
    4. ' +' → logprob: -9.285653114318848
    5. '++' → logprob: -11.035653114318848
    6. ' ' → logprob: -11.535653114318848
    7. ' =' → logprob: -11.660653114318848
    8. '=' → logprob: -11.785653114318848
    9. '+++' → logprob: -12.160653114318848
    10. '+='' → logprob: -14.660653114318848

Token 86: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009364192374050617
    2. '1' → logprob: -4.759364128112793
    3. '2' → logprob: -7.259364128112793
    4. ' ' → logprob: -10.009364128112793
    5. '4' → logprob: -15.946864128112793
    6. '   ' → logprob: -16.07186508178711
    7. '```' → logprob: -16.44686508178711
    8. '３' → logprob: -17.07186508178711
    9. '0' → logprob: -17.13436508178711
    10. '  ' → logprob: -17.25936508178711

Token 87: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007422287482768297
    2. '1' → logprob: -5.00742244720459
    3. '2' → logprob: -7.25742244720459
    4. ' ' → logprob: -13.94492244720459
    5. '```' → logprob: -15.31992244720459
    6. '4' → logprob: -16.069921493530273
    7. '３' → logprob: -16.569921493530273
    8. '   ' → logprob: -17.069921493530273
    9. '۳' → logprob: -17.507421493530273
    10. '`' → logprob: -17.632421493530273

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7521179914474487
    2. '       ' → logprob: -0.7521179914474487
    3. '   ' → logprob: -3.5021181106567383
    4. '    
' → logprob: -4.752118110656738
    5. ' 
' → logprob: -5.002118110656738
    6. '  
' → logprob: -5.752118110656738
    7. '        
' → logprob: -6.127118110656738
    8. '   
' → logprob: -6.752118110656738
    9. '\n' → logprob: -7.002118110656738
    10. '+' → logprob: -7.127118110656738

Token 89: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018838961841538548
    2. '   ' → logprob: -6.7518839836120605
    3. '
' → logprob: -8.376883506774902
    4. '        
' → logprob: -8.501883506774902
    5. '    
' → logprob: -9.126883506774902
    6. '      ' → logprob: -10.251883506774902
    7. '     ' → logprob: -10.876883506774902
    8. '  
' → logprob: -10.876883506774902
    9. '    ' → logprob: -11.126883506774902
    10. 'else' → logprob: -11.376883506774902

Token 90: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04091920331120491
    2. '   ' → logprob: -3.790919303894043
    3. 'else' → logprob: -5.165919303894043
    4. '
' → logprob: -5.290919303894043
    5. '    
' → logprob: -5.415919303894043
    6. ' else' → logprob: -7.665919303894043
    7. '        
' → logprob: -7.790919303894043
    8. ' 
' → logprob: -8.165919303894043
    9. 'elif' → logprob: -8.540919303894043
    10. '           ' → logprob: -8.665919303894043

Token 91: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.005044948309659958
    2. '.pop' → logprob: -5.505044937133789
    3. '[' → logprob: -8.130044937133789
    4. '.remove' → logprob: -8.255044937133789
    5. '.insert' → logprob: -8.380044937133789
    6. '[:]' → logprob: -9.630044937133789
    7. '.append' → logprob: -9.755044937133789
    8. '.' → logprob: -11.130044937133789
    9. 'cur' → logprob: -11.755044937133789
    10. '.clear' → logprob: -12.005044937133789

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03594157472252846
    2. '=' → logprob: -4.2859416007995605
    3. ' =' → logprob: -4.5359416007995605
    4. '+' → logprob: -5.0359416007995605
    5. ']=' → logprob: -6.5359416007995605
    6. ' ]' → logprob: -6.9109416007995605
    7. '+=' → logprob: -7.7859416007995605
    8. ' +=' → logprob: -7.9109416007995605
    9. ']+=' → logprob: -8.035941123962402
    10. ')' → logprob: -8.660941123962402

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22592857480049133
    2. ' =' → logprob: -1.600928544998169
    3. '='' → logprob: -8.35092830657959
    4. ',' → logprob: -9.60092830657959
    5. '="' → logprob: -9.72592830657959
    6. '+=' → logprob: -9.97592830657959
    7. ' ='' → logprob: -10.72592830657959
    8. ' +=' → logprob: -10.97592830657959
    9. ' ="' → logprob: -11.72592830657959
    10. ' ' → logprob: -11.97592830657959

Token 94: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.7207584381103516
    2. '"' → logprob: -1.7207584381103516
    3. '"D' → logprob: -1.8457584381103516
    4. ''' → logprob: -2.5957584381103516
    5. '"A' → logprob: -3.5957584381103516
    6. '".' → logprob: -4.220758438110352
    7. '"."' → logprob: -4.595758438110352
    8. ''D' → logprob: -4.595758438110352
    9. ''.' → logprob: -4.970758438110352
    10. '"C' → logprob: -5.470758438110352

Token 95: 'A' (ID: 32)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0336521863937378
    2. '"' → logprob: -1.7836521863937378
    3. 'B' → logprob: -1.9086521863937378
    4. 'X' → logprob: -2.0336523056030273
    5. 'A' → logprob: -2.9086523056030273
    6. 'Z' → logprob: -3.1586523056030273
    7. '@"' → logprob: -3.2836523056030273
    8. '@' → logprob: -4.783652305603027
    9. '."' → logprob: -4.908652305603027
    10. 'C' → logprob: -5.408652305603027

Token 96: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00010807292710524052
    2. '"
' → logprob: -10.125107765197754
    3. '"B' → logprob: -10.250107765197754
    4. ' "' → logprob: -11.125107765197754
    5. '")' → logprob: -12.375107765197754
    6. '"""' → logprob: -13.125107765197754
    7. '"C' → logprob: -13.125107765197754
    8. 'B' → logprob: -13.375107765197754
    9. '<|end|>' → logprob: -13.500107765197754
    10. '"I' → logprob: -13.500107765197754

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11639294028282166
    2. '    
' → logprob: -3.7413928508758545
    3. '   ' → logprob: -4.116393089294434
    4. '
' → logprob: -4.366393089294434
    5. '        
' → logprob: -4.366393089294434
    6. '  
' → logprob: -4.616393089294434
    7. ' 
' → logprob: -4.741393089294434
    8. ' ' → logprob: -5.241393089294434
    9. '   
' → logprob: -5.491393089294434
    10. 'cur' → logprob: -5.866393089294434

Token 98: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24119313061237335
    2. '   ' → logprob: -1.616193175315857
    3. '    
' → logprob: -5.1161932945251465
    4. '
' → logprob: -5.6161932945251465
    5. 'else' (adapté à ' else') → logprob: -6.4911932945251465
    6. '    ' → logprob: -6.8661932945251465
    7. '        
' → logprob: -7.3661932945251465
    8. ' else' → logprob: -7.3661932945251465
    9. '     ' → logprob: -7.6161932945251465
    10. ' ' → logprob: -8.116192817687988

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12738768756389618
    2. ':
' → logprob: -2.252387762069702
    3. '   ' → logprob: -4.502387523651123
    4. '       ' → logprob: -6.002387523651123
    5. '
' → logprob: -8.252388000488281
    6. '           ' → logprob: -8.252388000488281
    7. 'cur' → logprob: -10.002388000488281
    8. ' :' → logprob: -10.002388000488281
    9. ' :
' → logprob: -10.002388000488281
    10. '    ' → logprob: -10.377388000488281

Token 100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06909294426441193
    2. '   ' → logprob: -3.1940929889678955
    3. 'cur' → logprob: -4.194092750549316
    4. ' cur' → logprob: -4.694092750549316
    5. '           ' → logprob: -6.569092750549316
    6. '	cur' → logprob: -10.069092750549316
    7. '	   ' → logprob: -10.819092750549316
    8. ' ' → logprob: -11.069092750549316
    9. '     ' → logprob: -11.819092750549316
    10. '	       ' → logprob: -11.944092750549316

Token 101: ' if' (ID: 538)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.5935531258583069
    2. 'cur' → logprob: -0.8435531258583069
    3. '   ' → logprob: -4.343553066253662
    4. '           ' → logprob: -6.093553066253662
    5. '       ' → logprob: -6.968553066253662
    6. ' if' → logprob: -7.968553066253662
    7. ' ' → logprob: -7.968553066253662
    8. '	cur' → logprob: -8.34355354309082
    9. '    ' → logprob: -9.21855354309082
    10. 'if' (adapté à ' if') → logprob: -9.84355354309082

Token 102: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31346580386161804
    2. 's' → logprob: -1.4384658336639404
    3. 'cur' → logprob: -3.6884658336639404
    4. ' cur' → logprob: -5.063465595245361
    5. ' ' → logprob: -8.18846607208252
    6. '   ' → logprob: -9.93846607208252
    7. ' a' → logprob: -11.06346607208252
    8. '  ' → logprob: -11.25096607208252
    9. 'a' → logprob: -11.37596607208252
    10. 'ans' → logprob: -11.50096607208252

Token 103: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.843177233240567e-05
    2. 'cur' → logprob: -11.250018119812012
    3. '[' → logprob: -13.875018119812012
    4. '   ' → logprob: -14.250018119812012
    5. '[c' → logprob: -14.375018119812012
    6. ' ' → logprob: -14.375018119812012
    7. '(cur' → logprob: -14.625018119812012
    8. '	cur' → logprob: -15.000018119812012
    9. '[curr' → logprob: -15.000018119812012
    10. ' [' → logprob: -15.375018119812012

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007330929394811392
    2. ']==' → logprob: -5.132330894470215
    3. '+' → logprob: -7.632330894470215
    4. ']!=' → logprob: -7.757330894470215
    5. ' ]' → logprob: -8.132330894470215
    6. '==' → logprob: -9.632330894470215
    7. '-' → logprob: -10.257330894470215
    8. ']=="' → logprob: -10.882330894470215
    9. '"]' → logprob: -11.507330894470215
    10. ']+' → logprob: -11.632330894470215

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5303820371627808
    2. '==' → logprob: -0.9053820371627808
    3. ' in' → logprob: -5.65538215637207
    4. '!=' → logprob: -6.53038215637207
    5. ' !=' → logprob: -6.78038215637207
    6. '=' → logprob: -8.03038215637207
    7. 'in' → logprob: -8.28038215637207
    8. ' ' → logprob: -8.40538215637207
    9. ']==' → logprob: -9.28038215637207
    10. '   ' → logprob: -9.90538215637207

Token 106: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.58060222864151
    2. '"B' → logprob: -1.2056021690368652
    3. ' "' → logprob: -2.7056021690368652
    4. '"' → logprob: -2.8306021690368652
    5. '"C' → logprob: -4.955602169036865
    6. 'A' → logprob: -5.830602169036865
    7. ' ' → logprob: -6.455602169036865
    8. ''A' → logprob: -7.205602169036865
    9. ''' → logprob: -7.330602169036865
    10. ' '' → logprob: -7.455602169036865

Token 107: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2044558972120285
    2. 'B' → logprob: -2.079455852508545
    3. '"A' → logprob: -3.704455852508545
    4. '"B' → logprob: -4.079455852508545
    5. '"' → logprob: -4.829455852508545
    6. 'C' → logprob: -5.454455852508545
    7. ''A' → logprob: -5.954455852508545
    8. ''' → logprob: -6.329455852508545
    9. '"C' → logprob: -6.704455852508545
    10. ''C' → logprob: -9.079456329345703

Token 108: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1934453845024109
    2. '":
' → logprob: -2.5684454441070557
    3. '":' → logprob: -2.8184454441070557
    4. '"B' → logprob: -3.9434454441070557
    5. 'B' → logprob: -4.193445205688477
    6. ' and' → logprob: -6.443445205688477
    7. ':
' → logprob: -6.568445205688477
    8. ' "' → logprob: -7.193445205688477
    9. 'and' → logprob: -7.943445205688477
    10. '"C' → logprob: -8.693445205688477

Token 109: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3954203128814697
    2. ' a' → logprob: -1.5204203128814697
    3. '               ' → logprob: -2.2704203128814697
    4. '   ' → logprob: -5.645420074462891
    5. '           ' → logprob: -7.270420074462891
    6. ' ' → logprob: -8.77042007446289
    7. '       ' → logprob: -9.52042007446289
    8. '	a' → logprob: -9.89542007446289
    9. ' if' → logprob: -10.02042007446289
    10. 'b' → logprob: -10.39542007446289

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.10081838071346283
    2. ' a' → logprob: -2.350818395614624
    3. 'if' → logprob: -8.600818634033203
    4. ' if' → logprob: -8.850818634033203
    5. '   ' → logprob: -9.725818634033203
    6. 'cur' → logprob: -9.725818634033203
    7. 'b' → logprob: -10.350818634033203
    8. ' ' → logprob: -10.600818634033203
    9. '
' → logprob: -10.725818634033203
    10. '           ' → logprob: -10.975818634033203

Token 111: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6939871311187744
    2. '+=' → logprob: -0.6939871311187744
    3. '=' → logprob: -7.443986892700195
    4. ' =' → logprob: -8.318986892700195
    5. '+' → logprob: -11.568986892700195
    6. ']+=' → logprob: -15.068986892700195
    7. '   ' → logprob: -15.193986892700195
    8. ' +' → logprob: -15.318986892700195
    9. ' ' → logprob: -15.568986892700195
    10. '1' → logprob: -16.318986892700195

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019313741941004992
    2. ' ' → logprob: -6.251931190490723
    3. 's' → logprob: -13.626931190490723
    4. '0' → logprob: -14.126931190490723
    5. 'cur' → logprob: -15.751931190490723
    6. ' s' → logprob: -15.876931190490723
    7. '  ' → logprob: -16.12693214416504
    8. '   ' → logprob: -16.12693214416504
    9. '2' → logprob: -16.62693214416504
    10. ' ' → logprob: -17.18943214416504

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027134892297908664
    2. ' ' → logprob: -8.250271797180176
    3. 'cur' → logprob: -12.750271797180176
    4. 's' → logprob: -12.750271797180176
    5. '0' → logprob: -12.875271797180176
    6. 'ans' → logprob: -14.000271797180176
    7. '2' → logprob: -15.375271797180176
    8. '  ' → logprob: -16.68777084350586
    9. 'b' → logprob: -16.81277084350586
    10. '   ' → logprob: -16.93777084350586

Token 114: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09417311102151871
    2. '       ' → logprob: -2.9691731929779053
    3. '\n' → logprob: -3.9691731929779053
    4. '    
' → logprob: -4.969172954559326
    5. '           ' → logprob: -5.344172954559326
    6. '   ' → logprob: -5.594172954559326
    7. '        
' → logprob: -6.344172954559326
    8. '1' → logprob: -7.594172954559326
    9. '            
' → logprob: -7.969172954559326
    10. '  
' → logprob: -7.969172954559326

Token 115: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15825428068637848
    2. '
' → logprob: -2.158254384994507
    3. '       ' → logprob: -4.033254146575928
    4. '    
' → logprob: -5.283254146575928
    5. '   ' → logprob: -5.408254146575928
    6. '           ' → logprob: -6.783254146575928
    7. '        
' → logprob: -7.658254146575928
    8. ' 
' → logprob: -7.783254146575928
    9. '  
' → logprob: -8.158254623413086
    10. '\
' → logprob: -8.408254623413086

Token 116: ' else' (ID: 1203)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.008993406780064106
    2. '       ' → logprob: -5.008993625640869
    3. ' cur' → logprob: -6.508993625640869
    4. '   ' → logprob: -7.258993625640869
    5. 'else' (adapté à ' else') → logprob: -9.883993148803711
    6. '	cur' → logprob: -11.758993148803711
    7. '    ' → logprob: -11.883993148803711
    8. ' else' → logprob: -12.508993148803711
    9. '           ' → logprob: -13.008993148803711
    10. ' ' → logprob: -13.258993148803711

Token 117: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14145538210868835
    2. '           ' → logprob: -3.0164554119110107
    3. ':
' → logprob: -3.6414554119110107
    4. ':' → logprob: -4.016455173492432
    5. '   ' → logprob: -4.266455173492432
    6. '       ' → logprob: -5.016455173492432
    7. '
' → logprob: -5.016455173492432
    8. 'cur' → logprob: -5.141455173492432
    9. ' cur' → logprob: -6.641455173492432
    10. ' ' → logprob: -7.891455173492432

Token 118: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5138071179389954
    2. '               ' → logprob: -1.2638070583343506
    3. '           ' → logprob: -3.0138070583343506
    4. ' a' → logprob: -3.0138070583343506
    5. '   ' → logprob: -4.26380729675293
    6. 'cur' → logprob: -5.13880729675293
    7. ' cur' → logprob: -7.51380729675293
    8. '       ' → logprob: -8.01380729675293
    9. ' ' → logprob: -9.88880729675293
    10. ' if' → logprob: -10.51380729675293

Token 119: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03443494811654091
    2. ' a' → logprob: -3.5344350337982178
    3. '   ' → logprob: -5.659434795379639
    4. '           ' → logprob: -7.409434795379639
    5. '               ' → logprob: -8.034435272216797
    6. ' ' → logprob: -9.034435272216797
    7. '	a' → logprob: -9.909435272216797
    8. '  ' → logprob: -10.784435272216797
    9. ' if' → logprob: -10.909435272216797
    10. 'if' → logprob: -11.034435272216797

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014166564680635929
    2. ' =' → logprob: -4.264166355133057
    3. '0' → logprob: -12.889166831970215
    4. ' ' → logprob: -15.514166831970215
    5. '+=' → logprob: -16.0141658782959
    6. '           ' → logprob: -16.6391658782959
    7. '.=' → logprob: -17.5141658782959
    8. ' +=' → logprob: -18.2641658782959
    9. '*=' → logprob: -18.2641658782959
    10. '-=' → logprob: -18.5141658782959

Token 121: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -16.000804901123047
    4. ' ' → logprob: -17.250804901123047
    5. '  ' → logprob: -17.625804901123047
    6. '۰' → logprob: -18.063304901123047
    7. '000' → logprob: -18.875804901123047
    8. 's' → logprob: -19.000804901123047
    9. '00' → logprob: -19.000804901123047
    10. '	' → logprob: -19.063304901123047

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.000059127807617
    4. '۰' → logprob: -18.250059127807617
    5. '  ' → logprob: -18.625059127807617
    6. '00' → logprob: -18.750059127807617
    7. 'o' → logprob: -19.125059127807617
    8. 's' → logprob: -19.562559127807617
    9. '000' → logprob: -19.625059127807617
    10. '０' → logprob: -19.750059127807617

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.118857741355896
    2. '
' → logprob: -2.2438578605651855
    3. '           ' → logprob: -5.9938578605651855
    4. '   ' → logprob: -6.3688578605651855
    5. '\n' → logprob: -7.4938578605651855
    6. 'cur' → logprob: -7.7438578605651855
    7. '    
' → logprob: -7.9938578605651855
    8. '        
' → logprob: -8.368857383728027
    9. '            
' → logprob: -9.743857383728027
    10. '
' → logprob: -9.993857383728027

Token 124: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02523959055542946
    2. '
' → logprob: -4.40023946762085
    3. '   ' → logprob: -5.15023946762085
    4. 'cur' → logprob: -5.15023946762085
    5. '           ' → logprob: -7.27523946762085
    6. '    
' → logprob: -9.525239944458008
    7. '	cur' → logprob: -9.650239944458008
    8. '        
' → logprob: -9.775239944458008
    9. ' cur' → logprob: -9.900239944458008
    10. '	' → logprob: -10.025239944458008

Token 125: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.06571878492832184
    2. '       ' → logprob: -2.81571888923645
    3. ' cur' → logprob: -6.315718650817871
    4. '   ' → logprob: -6.315718650817871
    5. '           ' → logprob: -9.690718650817871
    6. '	cur' → logprob: -9.940718650817871
    7. '
' → logprob: -12.315718650817871
    8. '    ' → logprob: -12.815718650817871
    9. '```' → logprob: -12.815718650817871
    10. ' ' → logprob: -12.940718650817871

Token 126: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.939359188079834
    2. '+' → logprob: -1.189359188079834
    3. ' +=' → logprob: -1.189359188079834
    4. ' +' → logprob: -8.564359664916992
    5. '++' → logprob: -10.189359664916992
    6. '1' → logprob: -10.689359664916992
    7. ' ' → logprob: -10.939359664916992
    8. '=' → logprob: -11.939359664916992
    9. '<|end|>' → logprob: -12.564359664916992
    10. '+++' → logprob: -12.939359664916992

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. '```' → logprob: -19.0000057220459
    5. '１' → logprob: -19.7500057220459
    6. '  ' → logprob: -19.8750057220459
    7. '﻿' → logprob: -20.2500057220459
    8. ' ' → logprob: -20.5000057220459
    9. '	' → logprob: -20.8750057220459
    10. '۱' → logprob: -21.0000057220459

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -18.875001907348633
    4. '```' → logprob: -19.625001907348633
    5. '１' → logprob: -20.062501907348633
    6. '۱' → logprob: -20.125001907348633
    7. '+' → logprob: -20.562501907348633
    8. '
' → logprob: -20.750001907348633
    9. '  ' → logprob: -20.812501907348633
    10. '   ' → logprob: -20.875001907348633

Token 129: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13780944049358368
    2. 'if' → logprob: -2.6378095149993896
    3. 'print' → logprob: -3.3878095149993896
    4. 'return' → logprob: -4.6378092765808105
    5. '    
' → logprob: -5.2628092765808105
    6. 'main' → logprob: -6.0128092765808105
    7. '
' → logprob: -6.1378092765808105
    8. '<|end|>' → logprob: -6.5128092765808105
    9. ')' → logprob: -7.3878092765808105
    10. '\n' → logprob: -8.137809753417969

Token 131: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006011391058564186
    2. '   ' → logprob: -5.756011486053467
    3. 'return' → logprob: -5.881011486053467
    4. ' print' → logprob: -10.381011009216309
    5. '```' → logprob: -13.381011009216309
    6. ' return' → logprob: -13.631011009216309
    7. 'if' → logprob: -13.756011009216309
    8. '    
' → logprob: -13.881011009216309
    9. 'while' → logprob: -14.506011009216309
    10. '#print' → logprob: -15.006011009216309

Token 132: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4743841588497162
    2. '(ans' → logprob: -0.9743841886520386
    3. '()' → logprob: -8.224384307861328
    4. '(s' → logprob: -11.474384307861328
    5. '('' → logprob: -12.224384307861328
    6. '(
' → logprob: -12.474384307861328
    7. '(len' → logprob: -12.599384307861328
    8. ' (' → logprob: -12.599384307861328
    9. 'ans' → logprob: -13.099384307861328
    10. '("("' → logprob: -13.224384307861328

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')`' → logprob: -15.125000953674316
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -16.0
    5. '')' → logprob: -17.25
    6. '`)' → logprob: -17.375
    7. ')
' → logprob: -17.625
    8. '```' → logprob: -17.875
    9. '()' → logprob: -18.0
    10. '#' → logprob: -18.125

Token 134: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.033915963023900986
    2. '__' → logprob: -3.4089159965515137
    3. ' ' → logprob: -8.533915519714355
    4. '_' → logprob: -10.033915519714355
    5. '_name' → logprob: -11.033915519714355
    6. ' name' → logprob: -12.783915519714355
    7. ' _' → logprob: -12.783915519714355
    8. ' ' → logprob: -13.033915519714355
    9. ' True' → logprob: -13.033915519714355
    10. ' sys' → logprob: -14.158915519714355

Token 136: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022320961579680443
    2. '.__' → logprob: -4.397320747375488
    3. '==' → logprob: -5.397320747375488
    4. '__.' → logprob: -6.272320747375488
    5. '__.__' → logprob: -6.772320747375488
    6. ' ==' → logprob: -7.147320747375488
    7. '.' → logprob: -7.147320747375488
    8. '.name' → logprob: -9.147320747375488
    9. ' __' → logprob: -9.147320747375488
    10. 'name' → logprob: -9.397320747375488

Token 137: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4021237802808173e-05
    2. '__.__' → logprob: -11.500014305114746
    3. '==' → logprob: -13.375014305114746
    4. '___' → logprob: -14.000014305114746
    5. '__["' → logprob: -14.250014305114746
    6. '_' → logprob: -14.875014305114746
    7. '__.' → logprob: -16.00001335144043
    8. '____' → logprob: -16.00001335144043
    9. '=="' → logprob: -16.25001335144043
    10. '__("' → logprob: -16.50001335144043

Token 138: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04417738318443298
    2. ' ==' → logprob: -3.419177293777466
    3. '==' → logprob: -4.669177532196045
    4. '=="' → logprob: -6.919177532196045
    5. '__.__' → logprob: -10.419177055358887
    6. '___' → logprob: -10.919177055358887
    7. '_' → logprob: -11.169177055358887
    8. '__["' → logprob: -11.294177055358887
    9. '=='' → logprob: -11.544177055358887
    10. ' =="' → logprob: -12.169177055358887

Token 139: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02327296882867813
    2. ''' → logprob: -3.77327299118042
    3. ' "__' → logprob: -11.148272514343262
    4. '__' → logprob: -11.398272514343262
    5. '"user' → logprob: -13.898272514343262
    6. ' '__' → logprob: -14.773272514343262
    7. '"name' → logprob: -15.773272514343262
    8. ''"' → logprob: -16.148273468017578
    9. '"'' → logprob: -16.898273468017578
    10. '"_' → logprob: -16.898273468017578

Token 140: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020129792392253876
    2. 'name' → logprob: -6.252013206481934
    3. '__' → logprob: -9.752013206481934
    4. 'built' → logprob: -11.127013206481934
    5. '_main' → logprob: -12.377013206481934
    6. 'file' → logprob: -13.502013206481934
    7. 'ma' → logprob: -14.377013206481934
    8. ' main' → logprob: -14.502013206481934
    9. '```' → logprob: -14.502013206481934
    10. '"' → logprob: -14.627013206481934

Token 141: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.004227508790791035
    2. '__' → logprob: -5.504227638244629
    3. '__':
' → logprob: -9.004227638244629
    4. '__.' → logprob: -10.754227638244629
    5. '__.__' → logprob: -13.129227638244629
    6. '__["' → logprob: -13.129227638244629
    7. '__
' → logprob: -15.129227638244629
    8. '__:' → logprob: -15.254227638244629
    9. '__("' → logprob: -16.504226684570312
    10. '_' → logprob: -16.754226684570312

Token 142: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1724790334701538
    2. '   ' → logprob: -2.5474791526794434
    3. 'main' → logprob: -2.5474791526794434
    4. '	main' → logprob: -6.297479152679443
    5. ' ' → logprob: -11.547478675842285
    6. '  ' → logprob: -12.047478675842285
    7. '   ' → logprob: -12.922478675842285
    8. ' ' → logprob: -12.922478675842285
    9. '_main' → logprob: -13.547478675842285
    10. '(main' → logprob: -13.547478675842285

Token 143: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.15310683415737e-05
    2. ' main' → logprob: -10.750021934509277
    3. '	main' → logprob: -17.50002098083496
    4. 'ma' → logprob: -20.12502098083496
    5. 'sys' → logprob: -20.25002098083496
    6. '   ' → logprob: -20.75002098083496
    7. '.main' → logprob: -21.00002098083496
    8. 'mai' → logprob: -21.00002098083496
    9. '(main' → logprob: -21.12502098083496
    10. '_main' → logprob: -21.50002098083496

Token 144: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0055772485211491585
    2. '(' → logprob: -5.255577087402344
    3. '()
' → logprob: -8.130577087402344
    4. '(
' → logprob: -10.630577087402344
    5. '()

' → logprob: -12.755577087402344
    6. '```' → logprob: -12.755577087402344
    7. ')' → logprob: -12.880577087402344
    8. '#' → logprob: -13.005577087402344
    9. ' ()' → logprob: -13.130577087402344
    10. '()`' → logprob: -13.255577087402344


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 120
Précision stricte (1ère position): 43.66%
Précision adaptée (1ère position): 47.89%
Précision (top 10): 84.51%
================================================================================
