================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S=input()
l=0
r=len(S)-1
ans=0
while l<r:
    if S[l]!=S[r]:
        ans+=1
    l+=1
    r-=1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 3: 'l' (ID: 75)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018467722460627556
    2. '[' → logprob: -4.393467903137207
    3. '[::-' → logprob: -6.393467903137207
    4. '+' → logprob: -6.643467903137207
    5. '.count' → logprob: -7.518467903137207
    6. '.strip' → logprob: -7.518467903137207
    7. '.
' → logprob: -7.768467903137207
    8. 'if' → logprob: -8.143467903137207
    9. '.split' → logprob: -8.393467903137207
    10. '=' → logprob: -8.518467903137207

Token 4: '=' (ID: 28)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5030108690261841
    2. 'en' → logprob: -1.503010869026184
    3. '=' → logprob: -2.1280107498168945
    4. '=len' → logprob: -3.1280107498168945
    5. 'i' → logprob: -5.3780107498168945
    6. ' =' → logprob: -6.0030107498168945
    7. '=[]' → logprob: -7.3780107498168945
    8. '=e' → logprob: -8.003010749816895
    9. '=en' → logprob: -8.128010749816895
    10. '=[]
' → logprob: -8.253010749816895

Token 5: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.027549851685762405
    2. 'list' → logprob: -4.152549743652344
    3. '[]' → logprob: -5.152549743652344
    4. 'int' → logprob: -5.902549743652344
    5. 'en' → logprob: -6.527549743652344
    6. '[len' → logprob: -7.027549743652344
    7. 'S' → logprob: -8.652549743652344
    8. 'ist' → logprob: -9.152549743652344
    9. ' len' → logprob: -9.527549743652344
    10. '[int' → logprob: -9.777549743652344

Token 6: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6086240410804749
    2. ' ' → logprob: -1.35862398147583
    3. ',' → logprob: -2.60862398147583
    4. 'i' → logprob: -3.35862398147583
    5. ' while' → logprob: -3.48362398147583
    6. ':' → logprob: -4.73362398147583
    7. 'while' → logprob: -4.98362398147583
    8. '.' → logprob: -5.60862398147583
    9. '<|end|>' → logprob: -5.60862398147583
    10. '=' → logprob: -5.73362398147583

Token 7: 'r' (ID: 81)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6997625827789307
    2. 'i' → logprob: -1.1997625827789307
    3. 'for' → logprob: -2.5747625827789307
    4. ' for' → logprob: -3.0747625827789307
    5. '=' → logprob: -4.574762344360352
    6. 'w' → logprob: -4.699762344360352
    7. 'f' → logprob: -4.824762344360352
    8. 'n' → logprob: -4.824762344360352
    9. ''' → logprob: -5.074762344360352
    10. '_' → logprob: -5.199762344360352

Token 8: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005940532311797142
    2. ' =' → logprob: -5.1309404373168945
    3. '+=' → logprob: -12.755940437316895
    4. '+' → logprob: -12.755940437316895
    5. '=

' → logprob: -13.380940437316895
    6. '=input' → logprob: -14.255940437316895
    7. '=}' → logprob: -14.255940437316895
    8. ',' → logprob: -14.630940437316895
    9. '=
' → logprob: -14.755940437316895
    10. ' +=' → logprob: -14.880940437316895

Token 9: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.062470078468322754
    2. '(' → logprob: -2.812469959259033
    3. '(s' → logprob: -7.687469959259033
    4. '(
' → logprob: -10.812470436096191
    5. 'S' → logprob: -11.687470436096191
    6. '(`' → logprob: -12.687470436096191
    7. ')' → logprob: -12.812470436096191
    8. '(l' → logprob: -13.062470436096191
    9. 's' → logprob: -13.312470436096191
    10. '(

' → logprob: -13.812470436096191

Token 10: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. '-' → logprob: -11.375020027160645
    3. ')-' → logprob: -12.625020027160645
    4. ' )' → logprob: -12.750020027160645
    5. '-)' → logprob: -14.125020027160645
    6. '')' → logprob: -14.250020027160645
    7. ')
' → logprob: -15.250020027160645
    8. '`)' → logprob: -15.250020027160645
    9. '```' → logprob: -15.500020027160645
    10. '()' → logprob: -16.62502098083496

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'l' → logprob: -16.500017166137695
    4. ')' → logprob: -16.625017166137695
    5. '`' → logprob: -17.375017166137695
    6. '```' → logprob: -17.500017166137695
    7. '0' → logprob: -17.875017166137695
    8. 'r' → logprob: -18.312517166137695
    9. '2' → logprob: -18.562517166137695
    10. '１' → logprob: -18.812517166137695

Token 12: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: 'ans' (ID: 616)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4832978844642639
    2. ' while' → logprob: -1.1082978248596191
    3. ':' → logprob: -3.483297824859619
    4. '<|end|>' → logprob: -4.733297824859619
    5. 'w' → logprob: -5.233297824859619
    6. ' ' → logprob: -5.358297824859619
    7. ' 
' → logprob: -7.483297824859619
    8. '	while' → logprob: -7.983297824859619
    9. '```' → logprob: -7.983297824859619
    10. '+' → logprob: -8.108298301696777

Token 14: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019372005481272936
    2. ' =' → logprob: -6.251937389373779
    3. '+=' → logprob: -13.251936912536621
    4. '={}' → logprob: -13.626936912536621
    5. '=}' → logprob: -13.751936912536621
    6. '=

' → logprob: -14.001936912536621
    7. '=
' → logprob: -14.251936912536621
    8. '=[]' → logprob: -14.251936912536621
    9. ',' → logprob: -14.626936912536621
    10. ' ' → logprob: -14.751936912536621

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004591872915625572
    2. '""' → logprob: -6.004591941833496
    3. '''' → logprob: -7.129591941833496
    4. 'True' → logprob: -7.254591941833496
    5. '"' → logprob: -7.879591941833496
    6. '-' → logprob: -9.504591941833496
    7. 'False' → logprob: -9.879591941833496
    8. '1' → logprob: -10.504591941833496
    9. '[]' → logprob: -10.754591941833496
    10. ''' → logprob: -11.254591941833496

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.617026686668396
    2. 'while' → logprob: -1.492026686668396
    3. ' while' → logprob: -1.742026686668396
    4. '<|end|>' → logprob: -3.1170268058776855
    5. '\n' → logprob: -5.1170268058776855
    6. ':' → logprob: -5.4920268058776855
    7. ' 
' → logprob: -6.1170268058776855
    8. '```' → logprob: -7.1170268058776855
    9. ':
' → logprob: -7.2420268058776855
    10. ' ' → logprob: -7.9920268058776855

Token 17: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5791904926300049
    2. ' while' → logprob: -0.8291904926300049
    3. ':' → logprob: -6.579190254211426
    4. ' ' → logprob: -8.079190254211426
    5. '
' → logprob: -8.079190254211426
    6. '<|end|>' → logprob: -8.204190254211426
    7. '```' → logprob: -8.329190254211426
    8. '\n' → logprob: -8.579190254211426
    9. '	while' → logprob: -8.954190254211426
    10. ')' → logprob: -9.454190254211426

Token 18: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0032671953085809946
    2. 'l' → logprob: -5.753267288208008
    3. ' ' → logprob: -9.503267288208008
    4. ' S' → logprob: -11.503267288208008
    5. ' r' → logprob: -13.128267288208008
    6. '	l' → logprob: -14.378267288208008
    7. 'S' → logprob: -14.753267288208008
    8. ' ' → logprob: -14.878267288208008
    9. ' not' → logprob: -15.003267288208008
    10. '(l' → logprob: -15.128267288208008

Token 19: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7482069134712219
    2. ' <=' → logprob: -1.3732068538665771
    3. '<=' → logprob: -1.8732068538665771
    4. ' <' → logprob: -2.123206853866577
    5. '<len' → logprob: -9.498207092285156
    6. '<size' → logprob: -10.623207092285156
    7. ' ' → logprob: -10.873207092285156
    8. '<n' → logprob: -11.123207092285156
    9. '<int' → logprob: -11.373207092285156
    10. '<char' → logprob: -11.998207092285156

Token 20: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.786196975852363e-05
    2. ' r' → logprob: -10.250038146972656
    3. 'len' → logprob: -13.625038146972656
    4. '=' → logprob: -14.375038146972656
    5. ' ' → logprob: -15.125038146972656
    6. '=r' → logprob: -15.375038146972656
    7. '=len' → logprob: -16.000038146972656
    8. '	r' → logprob: -17.500038146972656
    9. ' len' → logprob: -18.125038146972656
    10. '   ' → logprob: -18.250038146972656

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009102925658226013
    2. ':
' → logprob: -4.759102821350098
    3. ' and' → logprob: -8.384102821350098
    4. '   ' → logprob: -8.634102821350098
    5. ' :' → logprob: -10.634102821350098
    6. ' ' → logprob: -11.134102821350098
    7. 'and' → logprob: -11.634102821350098
    8. ')' → logprob: -11.884102821350098
    9. ',' → logprob: -12.009102821350098
    10. '):' → logprob: -12.759102821350098

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45538267493247986
    2. ' if' → logprob: -1.2053827047348022
    3. ' ' → logprob: -3.3303825855255127
    4. '<|end|>' → logprob: -3.9553825855255127
    5. 'if' → logprob: -5.205382823944092
    6. '    ' → logprob: -6.080382823944092
    7. '	if' → logprob: -7.205382823944092
    8. '```' → logprob: -7.455382823944092
    9. '<|end|>' → logprob: -7.455382823944092
    10. ' while' → logprob: -7.580382823944092

Token 23: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19249127805233002
    2. ' if' → logprob: -1.8174912929534912
    3. '   ' → logprob: -4.567491054534912
    4. ' ' → logprob: -6.692491054534912
    5. 'while' → logprob: -8.06749153137207
    6. '```' → logprob: -8.06749153137207
    7. ' while' → logprob: -8.69249153137207
    8. '    ' → logprob: -9.69249153137207
    9. '  ' → logprob: -10.06749153137207
    10. '<|end|>' → logprob: -10.19249153137207

Token 24: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31332844495773315
    2. ' S' → logprob: -1.313328504562378
    3. ' ' → logprob: -9.813328742980957
    4. '   ' → logprob: -12.438328742980957
    5. '(S' → logprob: -12.938328742980957
    6. '  ' → logprob: -13.438328742980957
    7. 's' → logprob: -13.688328742980957
    8. ' ' → logprob: -13.813328742980957
    9. '	S' → logprob: -14.313328742980957
    10. '(' → logprob: -15.688328742980957

Token 25: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.02055169641971588
    2. '[' → logprob: -3.8955516815185547
    3. ' [' → logprob: -12.770551681518555
    4. '```' → logprob: -13.020551681518555
    5. '[left' → logprob: -13.770551681518555
    6. '\[' → logprob: -14.145551681518555
    7. '[i' → logprob: -14.270551681518555
    8. '==' → logprob: -14.645551681518555
    9. '[r' → logprob: -15.145551681518555
    10. '[L' → logprob: -15.395551681518555

Token 26: ']!=' (ID: 85780)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0368463471531868
    2. ' ==' → logprob: -3.786846399307251
    3. '!=' → logprob: -4.911846160888672
    4. ']==' → logprob: -5.786846160888672
    5. '=' → logprob: -6.661846160888672
    6. ' !=' → logprob: -7.286846160888672
    7. ']' → logprob: -7.536846160888672
    8. '[' → logprob: -8.411846160888672
    9. ' ' → logprob: -9.661846160888672
    10. ' ' → logprob: -9.786846160888672

Token 27: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.954393079970032e-05
    2. ' S' → logprob: -10.750049591064453
    3. ''S' → logprob: -11.750049591064453
    4. ''' → logprob: -12.000049591064453
    5. ')' → logprob: -12.250049591064453
    6. ' ' → logprob: -12.375049591064453
    7. '')' → logprob: -13.625049591064453
    8. 's' → logprob: -14.375049591064453
    9. '   ' → logprob: -14.500049591064453
    10. '`' → logprob: -14.625049591064453

Token 28: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0003221150254830718
    2. '[' → logprob: -8.250322341918945
    3. 'r' → logprob: -11.000322341918945
    4. ' [' → logprob: -11.125322341918945
    5. ']' → logprob: -11.625322341918945
    6. '[l' → logprob: -12.375322341918945
    7. '   ' → logprob: -12.500322341918945
    8. ' ' → logprob: -13.250322341918945
    9. '][' → logprob: -13.375322341918945
    10. '[right' → logprob: -13.375322341918945

Token 29: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0707802027463913
    2. ']:
' → logprob: -2.8207802772521973
    3. ']' → logprob: -5.445780277252197
    4. ':' → logprob: -6.320780277252197
    5. '):' → logprob: -6.320780277252197
    6. '):
' → logprob: -7.695780277252197
    7. ']:
' → logprob: -8.570779800415039
    8. ':
' → logprob: -9.695779800415039
    9. '   ' → logprob: -10.570779800415039
    10. ']:

' → logprob: -11.070779800415039

Token 30: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9694925546646118
    2. '       ' → logprob: -0.9694925546646118
    3. 'ans' → logprob: -2.5944924354553223
    4. ' ans' → logprob: -3.2194924354553223
    5. 'r' → logprob: -3.4694924354553223
    6. ' l' → logprob: -3.5944924354553223
    7. 'l' → logprob: -4.094492435455322
    8. '    ' → logprob: -4.844492435455322
    9. ' ' → logprob: -4.969492435455322
    10. '	ans' → logprob: -5.094492435455322

Token 31: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004772938322275877
    2. 'r' → logprob: -5.879773139953613
    3. 'l' → logprob: -6.754773139953613
    4. ' ans' → logprob: -7.504773139953613
    5. 'if' → logprob: -9.504773139953613
    6. '	ans' → logprob: -10.004773139953613
    7. 'break' → logprob: -10.379773139953613
    8. '   ' → logprob: -10.504773139953613
    9. '           ' → logprob: -10.879773139953613
    10. '```' → logprob: -11.254773139953613

Token 32: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0012329687597230077
    2. ' +=' → logprob: -6.751233100891113
    3. '+' → logprob: -10.501233100891113
    4. '=' → logprob: -10.501233100891113
    5. ']+=' → logprob: -12.751233100891113
    6. '+=(' → logprob: -13.126233100891113
    7. '+='' → logprob: -13.251233100891113
    8. '+="' → logprob: -14.251233100891113
    9. ' =' → logprob: -15.876233100891113
    10. '-=' → logprob: -16.126232147216797

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003500050224829465
    2. '2' → logprob: -8.375349998474121
    3. 'r' → logprob: -9.375349998474121
    4. 'abs' → logprob: -11.625349998474121
    5. ' ' → logprob: -11.875349998474121
    6. 'l' → logprob: -12.375349998474121
    7. '25' → logprob: -12.500349998474121
    8. 'min' → logprob: -12.750349998474121
    9. '3' → logprob: -12.875349998474121
    10. '0' → logprob: -14.125349998474121

Token 34: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0423438623547554
    2. '
' → logprob: -3.542343854904175
    3. '   ' → logprob: -5.417344093322754
    4. '<|end|>' → logprob: -5.792344093322754
    5. ' l' → logprob: -6.167344093322754
    6. '```' → logprob: -6.792344093322754
    7. ',l' → logprob: -7.667344093322754
    8. '       ' → logprob: -8.167344093322754
    9. '*l' → logprob: -8.542344093322754
    10. 'r' → logprob: -8.667344093322754

Token 35: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21901004016399384
    2. ' l' → logprob: -1.7190099954605103
    3. '   ' → logprob: -4.844009876251221
    4. '```' → logprob: -5.969009876251221
    5. ',l' → logprob: -6.344009876251221
    6. '<|end|>' → logprob: -7.219009876251221
    7. '
' → logprob: -7.344009876251221
    8. '+' → logprob: -7.344009876251221
    9. ' ' → logprob: -7.594009876251221
    10. 'r' → logprob: -7.719009876251221

Token 36: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0017596713732928038
    2. ' l' → logprob: -6.5017595291137695
    3. '   ' → logprob: -8.75175952911377
    4. '```' → logprob: -9.87675952911377
    5. ' ' → logprob: -10.50175952911377
    6. '``' → logprob: -12.25175952911377
    7. 'r' → logprob: -12.62675952911377
    8. '	l' → logprob: -12.62675952911377
    9. '    ' → logprob: -13.25175952911377
    10. '       ' → logprob: -13.87675952911377

Token 37: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07905866205692291
    2. '+=' → logprob: -2.5790586471557617
    3. ' +=' → logprob: -8.829058647155762
    4. '++' → logprob: -11.079058647155762
    5. '+='' → logprob: -13.204058647155762
    6. '+++' → logprob: -13.454058647155762
    7. '+="' → logprob: -13.454058647155762
    8. ' +' → logprob: -14.829058647155762
    9. '```' → logprob: -14.954058647155762
    10. '<|end|>' → logprob: -15.079058647155762

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '+' → logprob: -15.125008583068848
    4. '   ' → logprob: -16.75000762939453
    5. '```' → logprob: -17.50000762939453
    6. '۱' → logprob: -18.37500762939453
    7. '<|end|>' → logprob: -18.87500762939453
    8. '１' → logprob: -18.93750762939453
    9. '१' → logprob: -19.06250762939453
    10. '  ' → logprob: -19.12500762939453

Token 39: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39845749735832214
    2. 'r' → logprob: -1.1484575271606445
    3. ' r' → logprob: -5.2734575271606445
    4. '```' → logprob: -5.5234575271606445
    5. ' ' → logprob: -6.6484575271606445
    6. ',r' → logprob: -8.148457527160645
    7. '	r' → logprob: -8.398457527160645
    8. '<|end|>' → logprob: -8.523457527160645
    9. '``' → logprob: -9.523457527160645
    10. '  ' → logprob: -9.648457527160645

Token 40: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010592726175673306
    2. '   ' → logprob: -9.375105857849121
    3. ' r' → logprob: -11.625105857849121
    4. '```' → logprob: -11.750105857849121
    5. '-r' → logprob: -13.125105857849121
    6. '	r' → logprob: -14.000105857849121
    7. ',r' → logprob: -14.625105857849121
    8. '1' → logprob: -15.000105857849121
    9. '_r' → logprob: -15.250105857849121
    10. '+r' → logprob: -16.000106811523438

Token 41: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0017944201827049255
    2. '1' → logprob: -6.376794338226318
    3. '-' → logprob: -9.626794815063477
    4. '-r' → logprob: -11.876794815063477
    5. '   ' → logprob: -11.876794815063477
    6. '```' → logprob: -12.001794815063477
    7. ' r' → logprob: -12.126794815063477
    8. '	r' → logprob: -15.001794815063477
    9. ' ' → logprob: -15.501794815063477
    10. '_r' → logprob: -16.126794815063477

Token 42: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931647062301636
    2. '-=' → logprob: -0.6931647062301636
    3. ' -=' → logprob: -11.568164825439453
    4. '```' → logprob: -12.068164825439453
    5. '–' → logprob: -13.693164825439453
    6. '−' → logprob: -15.068164825439453
    7. ' -' → logprob: -15.193164825439453
    8. '--' → logprob: -15.443164825439453
    9. '+=' → logprob: -15.943164825439453
    10. '=' → logprob: -16.068164825439453

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -19.250001907348633
    4. '<|end|>' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '１' → logprob: -20.250001907348633
    7. '۱' → logprob: -20.250001907348633
    8. '  ' → logprob: -21.500001907348633
    9. '१' → logprob: -21.625001907348633
    10. '<|end|>' → logprob: -21.812501907348633

Token 44: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008668818511068821
    2. '
' → logprob: -4.758668899536133
    3. '\n' → logprob: -11.133668899536133
    4. ' print' → logprob: -11.133668899536133
    5. '
' → logprob: -11.508668899536133
    6. '```' → logprob: -11.633668899536133
    7. ' 
' → logprob: -13.133668899536133
    8. '\' → logprob: -14.133668899536133
    9. '  
' → logprob: -14.258668899536133
    10. '<|end|>' → logprob: -14.508668899536133

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00027325618430040777
    2. '
' → logprob: -8.250273704528809
    3. '```' → logprob: -12.250273704528809
    4. ' print' → logprob: -12.375273704528809
    5. '\n' → logprob: -13.750273704528809
    6. '
' → logprob: -14.875273704528809
    7. 'if' → logprob: -15.125273704528809
    8. '  
' → logprob: -15.500273704528809
    9. ' 
' → logprob: -15.500273704528809
    10. '<|end|>' → logprob: -15.750273704528809

Token 46: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10021411627531052
    2. '(' → logprob: -2.3502140045166016
    3. '()' → logprob: -12.600214004516602
    4. '(abs' → logprob: -13.350214004516602
    5. '(
' → logprob: -14.100214004516602
    6. 'ans' → logprob: -14.225214004516602
    7. '(answer' → logprob: -15.100214004516602
    8. ' (' → logprob: -15.725214004516602
    9. '(a' → logprob: -15.975214004516602
    10. '((' → logprob: -16.1002140045166

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.5
    3. ')`' → logprob: -18.0
    4. '')' → logprob: -18.75
    5. '))' → logprob: -18.75
    6. ')
' → logprob: -18.875
    7. '()' → logprob: -19.625
    8. '`)' → logprob: -20.0
    9. '）' → logprob: -20.625
    10. '```' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 80.00%
================================================================================
