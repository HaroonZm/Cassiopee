================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
count = 1
tmp = s[0]
i = 1
while i < len(s):
    if tmp != s[i]:
        count += 1
        tmp = s[i]
        i += 1
    elif i == len(s) - 1:
        break
    else:
        count += 1
        tmp = s[i] + s[i + 1]
        i += 2
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005606530699878931
    2. '('' → logprob: -5.880606651306152
    3. '()' → logprob: -6.380606651306152
    4. ''' → logprob: -7.130606651306152
    5. '"' → logprob: -9.130606651306152
    6. '`' → logprob: -10.005606651306152
    7. '("("' → logprob: -10.005606651306152
    8. '(
' → logprob: -10.255606651306152
    9. '```' → logprob: -10.880606651306152
    10. ''s' → logprob: -11.380606651306152

Token 4: 'count' (ID: 5420)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04521610587835312
    2. '+' → logprob: -4.170216083526611
    3. '[' → logprob: -4.795216083526611
    4. '.strip' → logprob: -5.045216083526611
    5. 'if' → logprob: -5.045216083526611
    6. 'print' → logprob: -6.295216083526611
    7. '[::-' → logprob: -6.795216083526611
    8. '=' → logprob: -7.170216083526611
    9. '[:]' → logprob: -7.420216083526611
    10. '.lower' → logprob: -7.670216083526611

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4438323974609375
    2. '(' → logprob: -1.1938323974609375
    3. 's' → logprob: -3.0688323974609375
    4. '[' → logprob: -4.9438323974609375
    5. '.' → logprob: -7.9438323974609375
    6. '=' → logprob: -8.068832397460938
    7. ''' → logprob: -8.568832397460938
    8. ')' → logprob: -8.693832397460938
    9. '('' → logprob: -9.068832397460938
    10. '_space' → logprob: -9.693832397460938

Token 6: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2649620771408081
    2. ' ' → logprob: -2.1399621963500977
    3. '{}' → logprob: -2.2649621963500977
    4. ' {}' → logprob: -4.514962196350098
    5. '{' → logprob: -8.514962196350098
    6. 's' → logprob: -9.764962196350098
    7. '1' → logprob: -10.639962196350098
    8. ' s' → logprob: -11.514962196350098
    9. ' {' → logprob: -11.639962196350098
    10. '{'' → logprob: -12.639962196350098

Token 7: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25228151679039
    2. '{}' → logprob: -1.5022815465927124
    3. '{' → logprob: -8.002281188964844
    4. 'dict' → logprob: -12.377281188964844
    5. '{}
' → logprob: -12.752281188964844
    6. '1' → logprob: -13.127281188964844
    7. '{})' → logprob: -13.252281188964844
    8. '{}

' → logprob: -13.752281188964844
    9. ' {}' → logprob: -13.877281188964844
    10. ' ' → logprob: -14.002281188964844

Token 8: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4696455001831055
    2. '=' → logprob: -1.8446455001831055
    3. 'for' → logprob: -1.8446455001831055
    4. ',' → logprob: -2.2196455001831055
    5. ':' → logprob: -3.0946455001831055
    6. '```' → logprob: -3.0946455001831055
    7. '#' → logprob: -3.3446455001831055
    8. ' for' → logprob: -3.7196455001831055
    9. '*' → logprob: -3.8446455001831055
    10. '.' → logprob: -3.8446455001831055

Token 9: 'tmp' (ID: 11669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07936592400074005
    2. 'while' → logprob: -3.4543659687042236
    3. 'i' → logprob: -3.5793659687042236
    4. 'c' → logprob: -5.4543657302856445
    5. '```' → logprob: -5.4543657302856445
    6. ' for' → logprob: -5.8293657302856445
    7. 'if' → logprob: -6.8293657302856445
    8. 'prev' → logprob: -6.9543657302856445
    9. '`' → logprob: -7.0793657302856445
    10. 'char' → logprob: -7.5793657302856445

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011753086000680923
    2. '=' → logprob: -5.386753082275391
    3. ' =' → logprob: -6.011753082275391
    4. 's' → logprob: -6.636753082275391
    5. '[' → logprob: -6.886753082275391
    6. ' ' → logprob: -7.386753082275391
    7. ' _' → logprob: -7.511753082275391
    8. ')' → logprob: -7.886753082275391
    9. '.' → logprob: -8.26175308227539
    10. '_count' → logprob: -9.88675308227539

Token 11: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6488240361213684
    2. ' s' → logprob: -0.8988240361213684
    3. ''' → logprob: -4.023824214935303
    4. ' ''' → logprob: -4.148824214935303
    5. '''' → logprob: -4.273824214935303
    6. ''s' → logprob: -4.898824214935303
    7. ' ' → logprob: -5.398824214935303
    8. '"' → logprob: -5.773824214935303
    9. '""' → logprob: -6.023824214935303
    10. ' '' → logprob: -6.273824214935303

Token 12: '[' (ID: 58)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5662957429885864
    2. '[' → logprob: -1.8162957429885864
    3. '\n' → logprob: -2.441295623779297
    4. '\' → logprob: -3.316295623779297
    5. ' for' → logprob: -3.316295623779297
    6. '<|end|>' → logprob: -3.941295623779297
    7. '```' → logprob: -4.066295623779297
    8. '_' → logprob: -4.191295623779297
    9. '
' → logprob: -4.316295623779297
    10. '.' → logprob: -4.566295623779297

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013386933133006096
    2. '-' → logprob: -6.751338481903076
    3. '1' → logprob: -9.251338958740234
    4. ' ' → logprob: -9.626338958740234
    5. 'count' → logprob: -13.001338958740234
    6. ' -' → logprob: -13.751338958740234
    7. ']' → logprob: -13.876338958740234
    8. '```' → logprob: -14.126338958740234
    9. '-count' → logprob: -14.751338958740234
    10. '   ' → logprob: -15.126338958740234

Token 14: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.9040898880339228e-05
    2. '']' → logprob: -11.125028610229492
    3. ' ]' → logprob: -11.250028610229492
    4. ']
' → logprob: -14.875028610229492
    5. '`]' → logprob: -14.875028610229492
    6. '"]' → logprob: -15.250028610229492
    7. ')]' → logprob: -16.625028610229492
    8. ')' → logprob: -16.625028610229492
    9. '()]' → logprob: -17.375028610229492
    10. ']

' → logprob: -17.375028610229492

Token 15: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11610396206378937
    2. ' for' → logprob: -2.3661038875579834
    3. '\n' → logprob: -4.4911041259765625
    4. '```' → logprob: -5.7411041259765625
    5. '
' → logprob: -6.8661041259765625
    6. '\' → logprob: -9.241104125976562
    7. 'i' → logprob: -9.866104125976562
    8. ':' → logprob: -10.491104125976562
    9. 'n' → logprob: -10.741104125976562
    10. '	for' → logprob: -10.991104125976562

Token 16: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6461341977119446
    2. '=' → logprob: -1.6461341381072998
    3. 'f' → logprob: -1.8961341381072998
    4. 'n' → logprob: -2.2711341381073
    5. ' +=' → logprob: -4.521134376525879
    6. ' =' → logprob: -4.646134376525879
    7. '+=' → logprob: -5.646134376525879
    8. ' ' → logprob: -6.396134376525879
    9. 'nd' → logprob: -6.646134376525879
    10. '++' → logprob: -7.646134376525879

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019577592611312866
    2. '0' → logprob: -4.144577503204346
    3. ' ' → logprob: -5.644577503204346
    4. '2' → logprob: -15.394577980041504
    5. '```' → logprob: -16.519577026367188
    6. '`' → logprob: -17.519577026367188
    7. '１' → logprob: -18.957077026367188
    8. '+' → logprob: -19.082077026367188
    9. 's' → logprob: -19.394577026367188
    10. '  ' → logprob: -19.582077026367188

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010987765854224563
    2. '0' → logprob: -6.8760986328125
    3. ' ' → logprob: -9.6260986328125
    4. '2' → logprob: -17.5010986328125
    5. '```' → logprob: -18.0010986328125
    6. 'len' → logprob: -19.0635986328125
    7. '１' → logprob: -19.1885986328125
    8. '   ' → logprob: -19.3760986328125
    9. '  ' → logprob: -20.0010986328125
    10. '+' → logprob: -20.0635986328125

Token 19: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4555181860923767
    2. ' while' → logprob: -1.8305182456970215
    3. '```' → logprob: -1.9555182456970215
    4. ':' → logprob: -3.0805182456970215
    5. '<|end|>' → logprob: -4.4555182456970215
    6. '``' → logprob: -6.8305182456970215
    7. '\n' → logprob: -6.9555182456970215
    8. '>' → logprob: -7.2055182456970215
    9. '<' → logprob: -7.4555182456970215
    10. 'While' → logprob: -7.5805182456970215

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004751814994961023
    2. 'i' → logprob: -5.379751682281494
    3. ' ' → logprob: -9.004752159118652
    4. ' ' → logprob: -12.629752159118652
    5. ' len' → logprob: -13.254752159118652
    6. '  ' → logprob: -13.754752159118652
    7. ' s' → logprob: -14.379752159118652
    8. 's' → logprob: -14.879752159118652
    9. '(i' → logprob: -14.879752159118652
    10. ' count' → logprob: -15.004752159118652

Token 22: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023479098454117775
    2. '<' → logprob: -3.7734789848327637
    3. ' ' → logprob: -8.648479461669922
    4. ' <=' → logprob: -10.148479461669922
    5. '<len' → logprob: -12.148479461669922
    6. ' <
' → logprob: -12.148479461669922
    7. '<|end|>' → logprob: -13.148479461669922
    8. ' <",' → logprob: -13.648479461669922
    9. '<size' → logprob: -13.898479461669922
    10. '<=' → logprob: -14.148479461669922

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804241120815277
    2. 'len' → logprob: -3.2880423069000244
    3. '(len' → logprob: -14.538042068481445
    4. ' ' → logprob: -15.663042068481445
    5. '=len' → logprob: -16.163042068481445
    6. ' n' → logprob: -16.413042068481445
    7. '<len' → logprob: -16.788042068481445
    8. '[len' → logprob: -17.788042068481445
    9. ' length' → logprob: -17.913042068481445
    10. '	len' → logprob: -18.538042068481445

Token 24: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00015920029545668513
    2. '(' → logprob: -8.75015926361084
    3. 's' → logprob: -14.50015926361084
    4. ' (' → logprob: -16.500158309936523
    5. '(
' → logprob: -17.250158309936523
    6. ' s' → logprob: -18.000158309936523
    7. '(i' → logprob: -20.375158309936523
    8. '(

' → logprob: -20.375158309936523
    9. '(t' → logprob: -20.625158309936523
    10. ')' → logprob: -21.000158309936523

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8167787194252014
    2. ' and' → logprob: -1.0667786598205566
    3. ')' → logprob: -1.5667786598205566
    4. 'and' → logprob: -6.191778659820557
    5. '):
' → logprob: -6.566778659820557
    6. ' ):' → logprob: -6.941778659820557
    7. ':' → logprob: -7.691778659820557
    8. ' )' → logprob: -7.941778659820557
    9. ' ' → logprob: -10.191779136657715
    10. '):

' → logprob: -11.566779136657715

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7775327563285828
    2. ' ' → logprob: -1.4025328159332275
    3. ' if' → logprob: -1.7775328159332275
    4. '<|end|>' → logprob: -2.6525328159332275
    5. '```' → logprob: -4.027532577514648
    6. ':' → logprob: -4.527532577514648
    7. ' 
' → logprob: -4.777532577514648
    8. '    ' → logprob: -5.027532577514648
    9. '  ' → logprob: -6.277532577514648
    10. '<|end|>' → logprob: -6.277532577514648

Token 27: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5744341015815735
    2. 'if' (adapté à ' if') → logprob: -0.9494341015815735
    3. '   ' → logprob: -4.074434280395508
    4. ''' → logprob: -4.324434280395508
    5. '    ' → logprob: -4.949434280395508
    6. '```' → logprob: -5.199434280395508
    7. ' ' → logprob: -5.699434280395508
    8. 's' → logprob: -6.574434280395508
    9. ''s' → logprob: -6.949434280395508
    10. '`' → logprob: -7.824434280395508

Token 28: ' tmp' (ID: 8919)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07957324385643005
    2. 's' → logprob: -2.579573154449463
    3. ' tmp' → logprob: -7.454573154449463
    4. 'tmp' → logprob: -9.204573631286621
    5. ' ' → logprob: -12.704573631286621
    6. ' ' → logprob: -15.204573631286621
    7. '(s' → logprob: -15.704573631286621
    8. '	s' → logprob: -16.079572677612305
    9. '(tmp' → logprob: -16.454572677612305
    10. '​' → logprob: -17.454572677612305

Token 29: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4290739893913269
    2. ' ==' → logprob: -1.0540740489959717
    3. '=' → logprob: -8.05407428741455
    4. '!=' → logprob: -11.05407428741455
    5. ')' → logprob: -11.67907428741455
    6. 's' → logprob: -11.92907428741455
    7. ')==' → logprob: -12.05407428741455
    8. ' !=' → logprob: -12.30407428741455
    9. ']==' → logprob: -12.80407428741455
    10. ' =' → logprob: -12.92907428741455

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22541870176792145
    2. ' s' → logprob: -1.6004186868667603
    3. ' ' → logprob: -12.475419044494629
    4. '   ' → logprob: -14.350419044494629
    5. '	s' → logprob: -14.850419044494629
    6. '`s' → logprob: -14.975419044494629
    7. '(s' → logprob: -15.725419044494629
    8. '```' → logprob: -15.975419044494629
    9. ' ' → logprob: -16.225418090820312
    10. '_s' → logprob: -16.350418090820312

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. '```' → logprob: -15.750008583068848
    4. ' [' → logprob: -17.12500762939453
    5. 'i' → logprob: -17.12500762939453
    6. '[I' → logprob: -18.00000762939453
    7. '[
' → logprob: -18.12500762939453
    8. ' ' → logprob: -18.25000762939453
    9. '   ' → logprob: -18.37500762939453
    10. '[index' → logprob: -18.75000762939453

Token 32: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14424093067646027
    2. ':
' → logprob: -2.7692408561706543
    3. '):' → logprob: -3.2692408561706543
    4. '):
' → logprob: -3.6442408561706543
    5. ']:' → logprob: -6.144240856170654
    6. '       ' → logprob: -6.769240856170654
    7. ')' → logprob: -7.144240856170654
    8. ']:
' → logprob: -7.269240856170654
    9. ' :' → logprob: -7.769240856170654
    10. '   ' → logprob: -7.894240856170654

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36344969272613525
    2. '   ' → logprob: -1.9884496927261353
    3. 'count' → logprob: -2.1134495735168457
    4. ' count' → logprob: -3.9884495735168457
    5. '    ' → logprob: -4.613449573516846
    6. ' ' → logprob: -5.113449573516846
    7. '	count' → logprob: -6.238449573516846
    8. '        
' → logprob: -6.613449573516846
    9. '
' → logprob: -6.988449573516846
    10. '```' → logprob: -7.238449573516846

Token 34: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.056950248777866364
    2. 'print' → logprob: -3.181950330734253
    3. ' count' → logprob: -4.556950092315674
    4. '       ' → logprob: -6.556950092315674
    5. ' print' → logprob: -7.306950092315674
    6. '   ' → logprob: -7.431950092315674
    7. '\n' → logprob: -7.931950092315674
    8. '
' → logprob: -9.681950569152832
    9. ' 
' → logprob: -10.056950569152832
    10. '        
' → logprob: -10.181950569152832

Token 35: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28824084997177124
    2. ' =' → logprob: -1.413240909576416
    3. '=' → logprob: -5.288240909576416
    4. '+=' → logprob: -6.788240909576416
    5. ' ' → logprob: -7.663240909576416
    6. ' +' → logprob: -8.288240432739258
    7. '+' → logprob: -8.788240432739258
    8. ' -=' → logprob: -13.288240432739258
    9. ' *=' → logprob: -13.288240432739258
    10. '    ' → logprob: -13.413240432739258

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '+' → logprob: -17.262510299682617
    4. '   ' → logprob: -17.387510299682617
    5. ' ' → logprob: -18.137510299682617
    6. '１' → logprob: -18.325010299682617
    7. '```' → logprob: -18.387510299682617
    8. '  ' → logprob: -18.575010299682617
    9. 'count' → logprob: -18.825010299682617
    10. ' +' → logprob: -19.012510299682617

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '１' → logprob: -18.875019073486328
    4. '```' → logprob: -19.000019073486328
    5. '-' → logprob: -19.125019073486328
    6. '<|end|>' → logprob: -19.750019073486328
    7. '+' → logprob: -19.937519073486328
    8. 'count' → logprob: -20.125019073486328
    9. '  ' → logprob: -20.187519073486328
    10. '१' → logprob: -20.187519073486328

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2548770308494568
    2. '       ' → logprob: -1.6298770904541016
    3. 'tmp' → logprob: -4.879877090454102
    4. '   ' → logprob: -5.129877090454102
    5. ' tmp' → logprob: -5.754877090454102
    6. ' 
' → logprob: -5.879877090454102
    7. '        
' → logprob: -6.004877090454102
    8. '<|end|>' → logprob: -6.254877090454102
    9. '
' → logprob: -6.879877090454102
    10. '    
' → logprob: -7.004877090454102

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2644728124141693
    2. '
' → logprob: -2.264472723007202
    3. 'tmp' → logprob: -2.889472723007202
    4. '        
' → logprob: -4.014472961425781
    5. '   ' → logprob: -4.139472961425781
    6. ' tmp' → logprob: -4.139472961425781
    7. ' 
' → logprob: -5.014472961425781
    8. '\n' → logprob: -5.514472961425781
    9. '```' → logprob: -5.514472961425781
    10. '    
' → logprob: -6.264472961425781

Token 40: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.4126187562942505
    2. '       ' → logprob: -1.7876187562942505
    3. ' tmp' → logprob: -2.537618637084961
    4. '   ' → logprob: -3.162618637084961
    5. '        
' → logprob: -4.412618637084961
    6. '    
' → logprob: -4.537618637084961
    7. ' 
' → logprob: -4.912618637084961
    8. '\n' → logprob: -5.162618637084961
    9. '
' → logprob: -5.912618637084961
    10. '`
' → logprob: -6.412618637084961

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141461491584778
    2. '=' → logprob: -1.7014145851135254
    3. ' ' → logprob: -14.076415061950684
    4. '＝' → logprob: -14.951415061950684
    5. '=s' → logprob: -15.951415061950684
    6. '<|end|>' → logprob: -17.576414108276367
    7. ' =)' → logprob: -17.701414108276367
    8. ' +=' → logprob: -18.076414108276367
    9. ')' → logprob: -18.326414108276367
    10. 'space' → logprob: -18.326414108276367

Token 42: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022595763206482
    2. ' s' → logprob: -1.9102259874343872
    3. ' ' → logprob: -14.035225868225098
    4. ''s' → logprob: -14.535225868225098
    5. '`s' → logprob: -15.910225868225098
    6. ' ' → logprob: -16.035226821899414
    7. ''' → logprob: -16.160226821899414
    8. '	s' → logprob: -16.410226821899414
    9. '_s' → logprob: -17.160226821899414
    10. '"' → logprob: -17.285226821899414

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009162207134068012
    2. '[' → logprob: -7.000916004180908
    3. '[
' → logprob: -12.875916481018066
    4. '```' → logprob: -14.250916481018066
    5. '[index' → logprob: -15.250916481018066
    6. '[I' → logprob: -15.625916481018066
    7. '[user' → logprob: -15.875916481018066
    8. '\[' → logprob: -15.875916481018066
    9. 'i' → logprob: -16.00091552734375
    10. '[idx' → logprob: -16.37591552734375

Token 44: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017302791820839047
    2. ')' → logprob: -9.50017261505127
    3. '']' → logprob: -10.25017261505127
    4. ']
' → logprob: -10.37517261505127
    5. '<|end|>' → logprob: -10.75017261505127
    6. ' ]' → logprob: -12.37517261505127
    7. '}' → logprob: -13.37517261505127
    8. '<|end|>' → logprob: -13.37517261505127
    9. '"]' → logprob: -14.00017261505127
    10. '   ' → logprob: -14.50017261505127

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04960215091705322
    2. 'i' → logprob: -3.7996020317077637
    3. '```' → logprob: -3.7996020317077637
    4. ' i' → logprob: -6.549602031707764
    5. '
' → logprob: -6.674602031707764
    6. '``' → logprob: -8.049602508544922
    7. '    
' → logprob: -8.299602508544922
    8. '	i' → logprob: -9.674602508544922
    9. '  
' → logprob: -9.799602508544922
    10. '       ' → logprob: -9.924602508544922

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.12884710729122162
    2. '   ' → logprob: -2.128847122192383
    3. ' i' → logprob: -6.503847122192383
    4. '```' → logprob: -8.753847122192383
    5. 'else' → logprob: -9.128847122192383
    6. '    
' → logprob: -9.753847122192383
    7. '       ' → logprob: -11.003847122192383
    8. ')' → logprob: -11.503847122192383
    9. ' ' → logprob: -11.628847122192383
    10. '	i' → logprob: -11.628847122192383

Token 47: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5051562786102295
    2. '+=' → logprob: -1.0051562786102295
    3. ' +=' → logprob: -3.5051562786102295
    4. '=' → logprob: -7.880156517028809
    5. '++' → logprob: -9.630156517028809
    6. '<|end|>' → logprob: -9.880156517028809
    7. ' ' → logprob: -10.505156517028809
    8. ' +' → logprob: -10.880156517028809
    9. '+++' → logprob: -12.505156517028809
    10. '+='' → logprob: -12.630156517028809

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018327576981391758
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -13.37518310546875
    4. '0' → logprob: -13.75018310546875
    5. '```' → logprob: -14.50018310546875
    6. '  ' → logprob: -15.75018310546875
    7. '+' → logprob: -16.18768310546875
    8. '2' → logprob: -16.50018310546875
    9. '4' → logprob: -16.93768310546875
    10. '    ' → logprob: -17.37518310546875

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.375033378601074
    3. '0' → logprob: -13.250033378601074
    4. '   ' → logprob: -16.625032424926758
    5. '```' → logprob: -16.875032424926758
    6. '  ' → logprob: -17.062532424926758
    7. '2' → logprob: -17.187532424926758
    8. '+' → logprob: -17.750032424926758
    9. '-' → logprob: -17.937532424926758
    10. '１' → logprob: -18.875032424926758

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25643080472946167
    2. 'else' → logprob: -1.6314308643341064
    3. ' else' → logprob: -3.6314308643341064
    4. '```' → logprob: -6.006430625915527
    5. '<|end|>' → logprob: -6.631430625915527
    6. 'elif' → logprob: -9.506430625915527
    7. '	else' → logprob: -9.506430625915527
    8. ')' → logprob: -10.006430625915527
    9. '#else' → logprob: -11.381430625915527
    10. '<|end|>' → logprob: -11.381430625915527

Token 51: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05358452722430229
    2. '   ' → logprob: -3.678584575653076
    3. ' else' → logprob: -3.678584575653076
    4. '```' → logprob: -7.053584575653076
    5. '<|end|>' → logprob: -7.428584575653076
    6. ')' → logprob: -9.678584098815918
    7. 'elif' → logprob: -9.678584098815918
    8. '	else' → logprob: -10.303584098815918
    9. '#else' → logprob: -11.303584098815918
    10. '#' → logprob: -11.803584098815918

Token 52: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003695562481880188
    2. ' else' → logprob: -5.628695487976074
    3. '```' → logprob: -9.628695487976074
    4. 'elif' (adapté à ' elif') → logprob: -10.628695487976074
    5. '	else' → logprob: -13.753695487976074
    6. '   ' → logprob: -14.128695487976074
    7. '#else' → logprob: -14.128695487976074
    8. '<|end|>' → logprob: -14.128695487976074
    9. '_else' → logprob: -14.378695487976074
    10. ')' → logprob: -15.003695487976074

Token 53: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5272790789604187
    2. 's' → logprob: -1.5272791385650635
    3. 'tmp' → logprob: -2.7772791385650635
    4. 'count' → logprob: -2.9022791385650635
    5. ' tmp' → logprob: -3.0272791385650635
    6. ' count' → logprob: -4.527278900146484
    7. ' True' → logprob: -5.402278900146484
    8. ' i' → logprob: -5.777278900146484
    9. 'True' → logprob: -5.777278900146484
    10. 'i' → logprob: -6.277278900146484

Token 54: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5730631947517395
    2. ' +' → logprob: -1.3230631351470947
    3. ' +=' → logprob: -2.1980631351470947
    4. '+=' → logprob: -3.9480631351470947
    5. ' ==' → logprob: -4.073063373565674
    6. ' ' → logprob: -4.573063373565674
    7. '==' → logprob: -5.573063373565674
    8. ' <=' → logprob: -6.073063373565674
    9. '   ' → logprob: -6.198063373565674
    10. '-' → logprob: -6.948063373565674

Token 55: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0699913501739502
    2. ' len' → logprob: -2.69499135017395
    3. '0' → logprob: -10.694991111755371
    4. ' ' → logprob: -10.819991111755371
    5. '1' → logprob: -11.944991111755371
    6. '(len' → logprob: -13.319991111755371
    7. '	len' → logprob: -13.569991111755371
    8. '<len' → logprob: -13.944991111755371
    9. '[len' → logprob: -14.194991111755371
    10. '=len' → logprob: -14.694991111755371

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00018399098189547658
    2. 's' → logprob: -8.875184059143066
    3. '(' → logprob: -10.750184059143066
    4. '-' → logprob: -10.875184059143066
    5. ')' → logprob: -12.875184059143066
    6. '(tmp' → logprob: -16.00018310546875
    7. '(
' → logprob: -16.00018310546875
    8. ')s' → logprob: -16.00018310546875
    9. ' -' → logprob: -16.12518310546875
    10. '()' → logprob: -16.62518310546875

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2635539472103119
    2. ')-' → logprob: -1.8885539770126343
    3. '-' → logprob: -2.6385538578033447
    4. ' -' → logprob: -5.513554096221924
    5. '):' → logprob: -5.638554096221924
    6. ' )' → logprob: -7.138554096221924
    7. '   ' → logprob: -9.013553619384766
    8. ' ' → logprob: -9.138553619384766
    9. '()-' → logprob: -9.638553619384766
    10. '-)' → logprob: -10.263553619384766

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0164931770414114
    2. ' -' → logprob: -4.141493320465088
    3. ' ' → logprob: -8.64149284362793
    4. ':' → logprob: -9.14149284362793
    5. '   ' → logprob: -9.51649284362793
    6. ' or' → logprob: -9.76649284362793
    7. '()-' → logprob: -11.14149284362793
    8. '  ' → logprob: -12.14149284362793
    9. 'or' → logprob: -12.26649284362793
    10. 'and' → logprob: -12.51649284362793

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036737099289894104
    2. ' ' → logprob: -5.628673553466797
    3. '2' → logprob: -9.628673553466797
    4. '   ' → logprob: -12.628673553466797
    5. '0' → logprob: -13.378673553466797
    6. '１' → logprob: -14.941173553466797
    7. '  ' → logprob: -15.003673553466797
    8. '-' → logprob: -15.128673553466797
    9. '...' → logprob: -15.441173553466797
    10. '```' → logprob: -15.503673553466797

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7053759519476444e-05
    2. '2' → logprob: -10.250057220458984
    3. ' ' → logprob: -10.875057220458984
    4. '0' → logprob: -13.812557220458984
    5. '3' → logprob: -15.000057220458984
    6. '10' → logprob: -15.437557220458984
    7. '-' → logprob: -15.687557220458984
    8. '11' → logprob: -15.875057220458984
    9. '   ' → logprob: -16.125057220458984
    10. '１' → logprob: -16.437557220458984

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016547059640288353
    2. ' :' → logprob: -6.876654624938965
    3. '       ' → logprob: -8.126654624938965
    4. ':
' → logprob: -8.501654624938965
    5. '   ' → logprob: -9.751654624938965
    6. ' and' → logprob: -10.376654624938965
    7. '    ' → logprob: -11.251654624938965
    8. ':return' → logprob: -12.751654624938965
    9. '.' → logprob: -13.001654624938965
    10. '):' → logprob: -13.376654624938965

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038863636553287506
    2. '   ' → logprob: -3.2888636589050293
    3. ' break' → logprob: -7.913863658905029
    4. '           ' → logprob: -8.913863182067871
    5. 'break' → logprob: -9.413863182067871
    6. '```' → logprob: -9.538863182067871
    7. ':' → logprob: -9.913863182067871
    8. '    ' → logprob: -10.413863182067871
    9. '	break' → logprob: -10.788863182067871
    10. '	' → logprob: -11.413863182067871

Token 63: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08861004561185837
    2. '   ' → logprob: -3.4636099338531494
    3. ' break' → logprob: -3.5886099338531494
    4. 'count' → logprob: -3.8386099338531494
    5. '       ' → logprob: -5.9636101722717285
    6. 'i' → logprob: -6.7136101722717285
    7. ' i' → logprob: -8.71360969543457
    8. '```' → logprob: -9.21360969543457
    9. '	break' → logprob: -9.46360969543457
    10. ' count' → logprob: -9.46360969543457

Token 64: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4937615990638733
    2. '   ' → logprob: -1.1187615394592285
    3. 'i' → logprob: -3.3687615394592285
    4. ' else' → logprob: -3.6187615394592285
    5. '<|end|>' → logprob: -7.4937615394592285
    6. '```' → logprob: -7.9937615394592285
    7. 'elif' → logprob: -8.493762016296387
    8. ' i' → logprob: -8.993762016296387
    9. 's' → logprob: -9.118762016296387
    10. ')' → logprob: -9.618762016296387

Token 65: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2060185819864273
    2. '   ' → logprob: -1.8310185670852661
    3. ' else' → logprob: -3.8310186862945557
    4. 'i' → logprob: -5.581018447875977
    5. 'elif' → logprob: -8.831018447875977
    6. '<|end|>' → logprob: -9.081018447875977
    7. '```' → logprob: -9.581018447875977
    8. '	else' → logprob: -10.331018447875977
    9. ' ' → logprob: -10.581018447875977
    10. '  ' → logprob: -10.956018447875977

Token 66: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05742287263274193
    2. ' else' → logprob: -3.1824228763580322
    3. '   ' → logprob: -4.432422637939453
    4. 'i' → logprob: -6.307422637939453
    5. 'elif' → logprob: -7.807422637939453
    6. '```' → logprob: -9.932422637939453
    7. ' ' → logprob: -10.182422637939453
    8. ' i' → logprob: -10.557422637939453
    9. '       ' → logprob: -10.807422637939453
    10. 's' → logprob: -11.057422637939453

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023344974033534527
    2. '   ' → logprob: -6.2523345947265625
    3. ':i' → logprob: -8.502334594726562
    4. 'i' → logprob: -9.252334594726562
    5. ',' → logprob: -10.877334594726562
    6. ':
' → logprob: -10.877334594726562
    7. ',i' → logprob: -10.877334594726562
    8. '       ' → logprob: -11.127334594726562
    9. 's' → logprob: -11.752334594726562
    10. ' i' → logprob: -12.002334594726562

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7598920464515686
    2. 'i' → logprob: -0.8848920464515686
    3. 'count' → logprob: -2.509891986846924
    4. '   ' → logprob: -3.634891986846924
    5. ' i' → logprob: -4.509891986846924
    6. ' count' → logprob: -7.759891986846924
    7. '```' → logprob: -8.509892463684082
    8. 'while' → logprob: -9.884892463684082
    9. '	i' → logprob: -10.384892463684082
    10. ' ' → logprob: -10.634892463684082

Token 69: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18780960142612457
    2. 'count' (adapté à ' count') → logprob: -1.8128095865249634
    3. 'while' → logprob: -5.062809467315674
    4. '   ' → logprob: -7.062809467315674
    5. 'cnt' → logprob: -8.312809944152832
    6. 'tmp' → logprob: -8.437809944152832
    7. 'j' → logprob: -8.812809944152832
    8. ' i' → logprob: -9.562809944152832
    9. 'for' → logprob: -10.562809944152832
    10. '```' → logprob: -10.812809944152832

Token 70: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6444733738899231
    2. ' +=' → logprob: -0.7694733738899231
    3. '=' → logprob: -4.519473552703857
    4. '-=' → logprob: -7.769473552703857
    5. ' -=' → logprob: -7.894473552703857
    6. ' ' → logprob: -10.0194730758667
    7. ' =' → logprob: -10.7694730758667
    8. ' *=' → logprob: -11.2694730758667
    9. '+' → logprob: -12.1444730758667
    10. '-' → logprob: -12.1444730758667

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5770715475082397
    2. ' ' → logprob: -0.8270715475082397
    3. '0' → logprob: -7.077071666717529
    4. '2' → logprob: -8.452071189880371
    5. '-' → logprob: -11.077071189880371
    6. 's' → logprob: -11.327071189880371
    7. 'tmp' → logprob: -11.452071189880371
    8. ' -' → logprob: -11.827071189880371
    9. ' s' → logprob: -12.077071189880371
    10. '10' → logprob: -12.452071189880371

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002458533737808466
    2. '2' → logprob: -6.377458572387695
    3. '0' → logprob: -7.377458572387695
    4. 's' → logprob: -10.252458572387695
    5. ' ' → logprob: -10.377458572387695
    6. 'tmp' → logprob: -10.502458572387695
    7. 'len' → logprob: -11.377458572387695
    8. '-' → logprob: -11.627458572387695
    9. '10' → logprob: -12.502458572387695
    10. 'i' → logprob: -12.752458572387695

Token 73: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00670056976377964
    2. '       ' → logprob: -5.75670051574707
    3. ' i' → logprob: -6.25670051574707
    4. '   ' → logprob: -6.88170051574707
    5. '```' → logprob: -8.38170051574707
    6. '
' → logprob: -9.38170051574707
    7. '[i' → logprob: -9.88170051574707
    8. '	i' → logprob: -10.25670051574707
    9. ' ' → logprob: -11.13170051574707
    10. '    ' → logprob: -11.13170051574707

Token 74: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19135364890098572
    2. '       ' → logprob: -1.816353678703308
    3. ' i' → logprob: -4.816353797912598
    4. '   ' → logprob: -6.691353797912598
    5. '<|end|>' → logprob: -7.566353797912598
    6. '[i' → logprob: -8.191353797912598
    7. 'while' → logprob: -8.691353797912598
    8. '```' → logprob: -8.816353797912598
    9. '	i' → logprob: -8.941353797912598
    10. 's' → logprob: -9.066353797912598

Token 75: ' tmp' (ID: 8919)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05760800838470459
    2. 'while' → logprob: -2.932608127593994
    3. 'tmp' (adapté à ' tmp') → logprob: -6.307608127593994
    4. 'count' → logprob: -8.682607650756836
    5. 'if' → logprob: -8.807607650756836
    6. 'break' → logprob: -9.057607650756836
    7. 'for' → logprob: -9.432607650756836
    8. 's' → logprob: -9.557607650756836
    9. 'j' → logprob: -9.557607650756836
    10. '   ' → logprob: -10.307607650756836

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5867066979408264
    2. '=' → logprob: -0.8367066979408264
    3. ' +=' → logprob: -4.961706638336182
    4. ' ==' → logprob: -6.211706638336182
    5. '+=' → logprob: -7.336706638336182
    6. '==' → logprob: -7.586706638336182
    7. ' ' → logprob: -7.711706638336182
    8. 's' → logprob: -10.46170711517334
    9. ')' → logprob: -12.08670711517334
    10. '<|end|>' → logprob: -12.08670711517334

Token 77: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014370197895914316
    2. 'tmp' → logprob: -7.251437187194824
    3. ''' → logprob: -8.251437187194824
    4. ''s' → logprob: -9.126437187194824
    5. 'chr' → logprob: -9.251437187194824
    6. '''' → logprob: -9.251437187194824
    7. '"' → logprob: -10.001437187194824
    8. ' s' → logprob: -10.376437187194824
    9. '""' → logprob: -10.376437187194824
    10. 'str' → logprob: -12.001437187194824

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007225605077110231
    2. '[' → logprob: -7.250722408294678
    3. 'i' → logprob: -12.125722885131836
    4. '[++' → logprob: -13.000722885131836
    5. '```' → logprob: -14.500722885131836
    6. '[I' → logprob: -14.625722885131836
    7. '[j' → logprob: -14.875722885131836
    8. '[min' → logprob: -14.875722885131836
    9. '[s' → logprob: -14.875722885131836
    10. '[
' → logprob: -15.000722885131836

Token 79: ']' (ID: 60)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17918571829795837
    2. ')
' → logprob: -3.054185628890991
    3. ']
' → logprob: -3.304185628890991
    4. ']' → logprob: -3.429185628890991
    5. '
' → logprob: -4.30418586730957
    6. ' i' → logprob: -5.05418586730957
    7. '[i' → logprob: -5.55418586730957
    8. ')' → logprob: -5.67918586730957
    9. '   ' → logprob: -5.67918586730957
    10. 's' → logprob: -5.80418586730957

Token 80: ' +' (ID: 659)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00044032474397681653
    2. '   ' → logprob: -8.12544059753418
    3. ' i' → logprob: -10.00044059753418
    4. 'while' → logprob: -10.37544059753418
    5. 'ii' → logprob: -10.75044059753418
    6. '    ' → logprob: -10.87544059753418
    7. '```' → logprob: -12.00044059753418
    8. ' ' → logprob: -12.37544059753418
    9. '     ' → logprob: -12.62544059753418
    10. '       ' → logprob: -13.00044059753418

Token 81: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1514916867017746
    2. '1' → logprob: -2.526491641998291
    3. ' s' → logprob: -2.901491641998291
    4. ' ' → logprob: -5.401491641998291
    5. 'tmp' → logprob: -8.27649211883545
    6. ''' → logprob: -9.02649211883545
    7. 'str' → logprob: -9.02649211883545
    8. ''s' → logprob: -9.15149211883545
    9. '"s' → logprob: -9.15149211883545
    10. '"' → logprob: -9.27649211883545

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006128363311290741
    2. '[' → logprob: -7.625612735748291
    3. '[++' → logprob: -9.87561321258545
    4. '<|end|>' → logprob: -10.12561321258545
    5. '[int' → logprob: -12.50061321258545
    6. '"' → logprob: -12.62561321258545
    7. '```' → logprob: -12.62561321258545
    8. ''[' → logprob: -12.75061321258545
    9. '`' → logprob: -13.12561321258545
    10. '"[' → logprob: -13.12561321258545

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7042743563652039
    2. '1' → logprob: -0.7042743563652039
    3. ']' → logprob: -4.7042741775512695
    4. '[' → logprob: -7.2042741775512695
    5. '[i' → logprob: -7.4542741775512695
    6. '-' → logprob: -8.57927417755127
    7. '```' → logprob: -8.57927417755127
    8. '   ' → logprob: -9.82927417755127
    9. 'i' → logprob: -9.95427417755127
    10. '(i' → logprob: -10.07927417755127

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -8.875144958496094
    3. '2' → logprob: -12.750144958496094
    4. '   ' → logprob: -14.625144958496094
    5. '0' → logprob: -15.187644958496094
    6. 'count' → logprob: -15.187644958496094
    7. '```' → logprob: -15.437644958496094
    8. '+' → logprob: -15.812644958496094
    9. '`' → logprob: -15.937644958496094
    10. '...' → logprob: -16.187644958496094

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. '2' → logprob: -10.625038146972656
    3. ' ' → logprob: -11.375038146972656
    4. '0' → logprob: -14.187538146972656
    5. 'count' → logprob: -14.750038146972656
    6. '```' → logprob: -15.875038146972656
    7. '3' → logprob: -15.937538146972656
    8. '   ' → logprob: -16.312538146972656
    9. '`' → logprob: -16.625038146972656
    10. '１' → logprob: -16.625038146972656

Token 86: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25232672691345215
    2. 'i' → logprob: -2.377326726913452
    3. '   ' → logprob: -2.752326726913452
    4. '
' → logprob: -3.377326726913452
    5. ')
' → logprob: -4.252326965332031
    6. ')' → logprob: -5.002326965332031
    7. '<|end|>' → logprob: -5.752326965332031
    8. '           ' → logprob: -5.877326965332031
    9. ']' → logprob: -7.252326965332031
    10. ' i' → logprob: -7.502326965332031

Token 87: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25007331371307373
    2. '       ' → logprob: -1.7500733137130737
    3. 'i' → logprob: -3.2500734329223633
    4. ' i' → logprob: -5.000073432922363
    5. '	i' → logprob: -7.250073432922363
    6. '```' → logprob: -7.625073432922363
    7. ' ' → logprob: -8.750073432922363
    8. '<|end|>' → logprob: -9.000073432922363
    9. '           ' → logprob: -9.500073432922363
    10. '  ' → logprob: -9.625073432922363

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -4.632542913896032e-05
    2. ' i' → logprob: -10.500046730041504
    3. '```' → logprob: -11.625046730041504
    4. '   ' → logprob: -12.125046730041504
    5. '       ' → logprob: -12.625046730041504
    6. '           ' → logprob: -14.750046730041504
    7. ' ' → logprob: -16.250045776367188
    8. '[i' → logprob: -16.375045776367188
    9. '	i' → logprob: -16.625045776367188
    10. '++' → logprob: -16.875045776367188

Token 89: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01281310897320509
    2. ' +=' → logprob: -4.512813091278076
    3. '+' → logprob: -6.387813091278076
    4. '=' → logprob: -9.512813568115234
    5. '```' → logprob: -13.262813568115234
    6. '++' → logprob: -13.387813568115234
    7. ' ' → logprob: -13.762813568115234
    8. '   ' → logprob: -14.137813568115234
    9. '+++' → logprob: -14.262813568115234
    10. '2' → logprob: -14.262813568115234

Token 90: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -13.625005722045898
    4. '3' → logprob: -14.000005722045898
    5. '   ' → logprob: -15.687505722045898
    6. '```' → logprob: -17.7500057220459
    7. '  ' → logprob: -17.8125057220459
    8. '２' → logprob: -17.8750057220459
    9. '	' → logprob: -18.1875057220459
    10. '२' → logprob: -18.1875057220459

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.630610641877865e-06
    2. '1' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '3' → logprob: -14.125006675720215
    5. '２' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.0000057220459
    7. '```' → logprob: -17.5000057220459
    8. '۲' → logprob: -17.7500057220459
    9. '	' → logprob: -18.0625057220459
    10. '२' → logprob: -18.1250057220459

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001400356413796544
    2. ')' → logprob: -7.876400470733643
    3. '#' → logprob: -8.251399993896484
    4. '
' → logprob: -8.751399993896484
    5. ' print' → logprob: -9.251399993896484
    6. 'if' → logprob: -9.251399993896484
    7. 's' → logprob: -9.501399993896484
    8. '```' → logprob: -9.626399993896484
    9. '<|end|>' → logprob: -10.126399993896484
    10. 'for' → logprob: -10.501399993896484

Token 94: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16034425795078278
    2. '(count' → logprob: -1.9103442430496216
    3. '('' → logprob: -9.910344123840332
    4. '(s' → logprob: -9.910344123840332
    5. '("("' → logprob: -11.910344123840332
    6. '()' → logprob: -12.660344123840332
    7. '((' → logprob: -12.785344123840332
    8. '(sum' → logprob: -13.160344123840332
    9. '(`' → logprob: -13.660344123840332
    10. '(len' → logprob: -13.660344123840332

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -15.875000953674316
    4. '))' → logprob: -16.875
    5. ')
' → logprob: -17.375
    6. '')' → logprob: -17.875
    7. '`)' → logprob: -18.125
    8. '(' → logprob: -18.125
    9. '```' → logprob: -18.375
    10. '#' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 39.78%
Précision (top 10): 87.10%
================================================================================
