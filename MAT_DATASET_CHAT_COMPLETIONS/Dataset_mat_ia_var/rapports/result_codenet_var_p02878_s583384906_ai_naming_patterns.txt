================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_value, a_value, b_value = map(int, input().split())
modulus = 998244353
factorial_size = n_value + 1
factorial_current = 1
factorial_table = [1] * factorial_size
inverse_table = [1] * factorial_size
result_sum = 0
range_func = range

if b_value == 0:
    print(1)
    exit()

# Compute factorial table
for idx in range_func(1, factorial_size):
    factorial_table[idx] = factorial_current = factorial_current * idx % modulus

# Compute inverse factorial table
inverse_table[n_value] = inverse_current = pow(factorial_current, modulus - 2, modulus)
for idx in range_func(n_value, 1, -1):
    inverse_table[idx - 1] = inverse_current = inverse_current * idx % modulus

# Calculate sum following pattern
if n_value - b_value - a_value:
    k_limit = min(a_value + 1, n_value - b_value)
else:
    k_limit = a_value + 1

for k_idx in range_func(k_limit):
    q_value = n_value - b_value - k_idx - 1
    term = (b_value - k_idx) * factorial_table[b_value + k_idx - 1] * inverse_table[b_value] * inverse_table[k_idx]
    term = term * factorial_table[q_value + a_value - k_idx] * inverse_table[q_value] * inverse_table[a_value - k_idx]
    result_sum = (result_sum + term) % modulus

print(result_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4440154433250427
    2. ')' → logprob: -1.5690155029296875
    3. '_' → logprob: -2.8190155029296875
    4. ',' → logprob: -3.0690155029296875
    5. ' =' → logprob: -4.1940155029296875
    6. '.' → logprob: -4.6940155029296875
    7. '```' → logprob: -5.0690155029296875
    8. ' ' → logprob: -5.1940155029296875
    9. '+' → logprob: -7.1940155029296875
    10. ':' → logprob: -7.5690155029296875

Token 4: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8438990116119385
    2. ',' → logprob: -0.9688990116119385
    3. '_' → logprob: -1.8438990116119385
    4. ' =' → logprob: -3.9688990116119385
    5. 's' → logprob: -5.843898773193359
    6. ')' → logprob: -6.093898773193359
    7. '[' → logprob: -6.468898773193359
    8. '+' → logprob: -6.593898773193359
    9. '.' → logprob: -6.843898773193359
    10. 'm' → logprob: -6.968898773193359

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2696862816810608
    2. '_' → logprob: -1.894686222076416
    3. ',' → logprob: -2.894686222076416
    4. ' =' → logprob: -3.769686222076416
    5. '```' → logprob: -5.394686222076416
    6. ')' → logprob: -6.769686222076416
    7. '*' → logprob: -7.644686222076416
    8. '+' → logprob: -8.144686698913574
    9. '.' → logprob: -8.144686698913574
    10. ':' → logprob: -8.769686698913574

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1866287738084793
    2. ',' → logprob: -2.186628818511963
    3. ' =' → logprob: -3.061628818511963
    4. '_' → logprob: -4.686628818511963
    5. ')' → logprob: -6.811628818511963
    6. '```' → logprob: -8.311628341674805
    7. ' ' → logprob: -8.936628341674805
    8. ' ,' → logprob: -9.561628341674805
    9. ':' → logprob: -9.936628341674805
    10. '.' → logprob: -10.186628341674805

Token 7: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22703668475151062
    2. '=' → logprob: -1.852036714553833
    3. ' =' → logprob: -4.102036476135254
    4. ')' → logprob: -4.602036476135254
    5. '[' → logprob: -4.852036476135254
    6. '```' → logprob: -5.602036476135254
    7. ',' → logprob: -5.727036476135254
    8. '.' → logprob: -6.102036476135254
    9. ' _' → logprob: -7.727036476135254
    10. '**' → logprob: -8.477036476135254

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7112695574760437
    2. '=' → logprob: -0.8362695574760437
    3. ' =' → logprob: -3.3362696170806885
    4. ',' → logprob: -3.4612696170806885
    5. '```' → logprob: -5.461269378662109
    6. ')' → logprob: -5.961269378662109
    7. '+' → logprob: -7.461269378662109
    8. '.' → logprob: -8.58626937866211
    9. '*' → logprob: -8.71126937866211
    10. ':' → logprob: -8.71126937866211

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6838001012802124
    2. ' ' → logprob: -1.6838001012802124
    3. '0' → logprob: -1.9338001012802124
    4. 'map' → logprob: -2.808800220489502
    5. ' input' → logprob: -3.433800220489502
    6. ' [' → logprob: -3.558800220489502
    7. 'input' → logprob: -4.058800220489502
    8. '1' → logprob: -4.433800220489502
    9. '[' → logprob: -5.933800220489502
    10. '10' → logprob: -6.058800220489502

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24886798858642578
    2. '(lambda' → logprob: -2.248867988586426
    3. '(int' → logprob: -2.373867988586426
    4. '<|end|>' → logprob: -4.873867988586426
    5. '(str' → logprob: -5.123867988586426
    6. '```' → logprob: -5.873867988586426
    7. 'int' → logprob: -6.873867988586426
    8. '[int' → logprob: -7.373867988586426
    9. '(token' → logprob: -7.998867988586426
    10. '<|end|>' → logprob: -8.123867988586426

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04148867353796959
    2. '(' → logprob: -3.5414886474609375
    3. ')' → logprob: -4.6664886474609375
    4. 'input' → logprob: -7.0414886474609375
    5. '(raw' → logprob: -7.7914886474609375
    6. '(user' → logprob: -7.9164886474609375
    7. '('' → logprob: -8.416488647460938
    8. '```' → logprob: -9.666488647460938
    9. '(value' → logprob: -9.791488647460938
    10. '`' → logprob: -10.541488647460938

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4294241666793823
    2. 'input' → logprob: -1.0544241666793823
    3. ')' → logprob: -7.679424285888672
    4. '(input' → logprob: -8.429424285888672
    5. ' )' → logprob: -10.554424285888672
    6. ',input' → logprob: -11.679424285888672
    7. '[input' → logprob: -13.804424285888672
    8. '=input' → logprob: -13.929424285888672
    9. '<input' → logprob: -14.304424285888672
    10. '```' → logprob: -14.429424285888672

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1881551444530487
    2. '())' → logprob: -2.438155174255371
    3. '(' → logprob: -3.063155174255371
    4. '('' → logprob: -4.188155174255371
    5. '().' → logprob: -4.938155174255371
    6. '(()' → logprob: -5.313155174255371
    7. ')' → logprob: -6.313155174255371
    8. '();)' → logprob: -6.688155174255371
    9. '`()' → logprob: -6.813155174255371
    10. '());' → logprob: -7.313155174255371

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044092073221690953
    2. 'strip' → logprob: -7.750441074371338
    3. 'rstrip' → logprob: -11.75044059753418
    4. ' split' → logprob: -14.00044059753418
    5. 'read' → logprob: -14.50044059753418
    6. '(split' → logprob: -14.62544059753418
    7. '```' → logprob: -15.50044059753418
    8. ')' → logprob: -15.50044059753418
    9. 'replace' → logprob: -16.50044059753418
    10. 'spl' → logprob: -16.87544059753418

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1937466412782669
    2. '())' → logprob: -2.068746566772461
    3. '))' → logprob: -3.068746566772461
    4. '(' → logprob: -6.443746566772461
    5. '`)' → logprob: -7.568746566772461
    6. '()' → logprob: -7.693746566772461
    7. '()))' → logprob: -7.943746566772461
    8. '('' → logprob: -8.818746566772461
    9. ')`' → logprob: -9.693746566772461
    10. '')' → logprob: -9.818746566772461

Token 16: 'mod' (ID: 4847)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3549939692020416
    2. '#' → logprob: -1.9799939393997192
    3. '\n' → logprob: -3.854994058609009
    4. '<|end|>' → logprob: -3.854994058609009
    5. ')' → logprob: -4.10499382019043
    6. '*' → logprob: -4.22999382019043
    7. 'if' → logprob: -4.22999382019043
    8. '
' → logprob: -4.60499382019043
    9. ',' → logprob: -4.72999382019043
    10. '+
' → logprob: -5.10499382019043

Token 17: 'ulus' (ID: 40006)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14183799922466278
    2. '=' → logprob: -2.2668380737304688
    3. ' =' → logprob: -4.016838073730469
    4. 'ular' → logprob: -5.766838073730469
    5. '_space' → logprob: -6.141838073730469
    6. 'ul' → logprob: -6.766838073730469
    7. ')' → logprob: -7.516838073730469
    8. ' ' → logprob: -7.641838073730469
    9. '_mod' → logprob: -7.641838073730469
    10. 'ulus' → logprob: -7.766838073730469

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2715802788734436
    2. ' =' → logprob: -1.5215802192687988
    3. '_' → logprob: -4.396580219268799
    4. ' ' → logprob: -5.646580219268799
    5. '<|end|>' → logprob: -6.521580219268799
    6. ')' → logprob: -6.771580219268799
    7. ',' → logprob: -7.771580219268799
    8. '_space' → logprob: -8.771580696105957
    9. '**' → logprob: -9.646580696105957
    10. '<|end|>' → logprob: -10.021580696105957

Token 19: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4204294681549072
    2. ' ' → logprob: -1.1704294681549072
    3. '100' → logprob: -3.4204294681549072
    4. '1' → logprob: -8.420429229736328
    5. '998' → logprob: -9.545429229736328
    6. ' (' → logprob: -12.670429229736328
    7. '(' → logprob: -12.670429229736328
    8. '0' → logprob: -13.170429229736328
    9. 'int' → logprob: -14.170429229736328
    10. 'pow' → logprob: -14.420429229736328

Token 20: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20344328880310059
    2. '100' → logprob: -1.7034432888031006
    3. '1' → logprob: -7.07844352722168
    4. '998' → logprob: -7.32844352722168
    5. ' ' → logprob: -7.57844352722168
    6. '(' → logprob: -11.32844352722168
    7. '2' → logprob: -13.82844352722168
    8. 'int' → logprob: -13.82844352722168
    9. '0' → logprob: -14.07844352722168
    10. '123' → logprob: -14.70344352722168

Token 21: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.00034714414505288005
    2. '247' → logprob: -8.125347137451172
    3. '447' → logprob: -11.000347137451172
    4. '457' → logprob: -11.125347137451172
    5. '245' → logprob: -12.000347137451172
    6. '243' → logprob: -12.375347137451172
    7. '```' → logprob: -13.375347137451172
    8. '7' → logprob: -13.750347137451172
    9. '445' → logprob: -13.750347137451172
    10. '_' → logprob: -14.250347137451172

Token 22: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '257' → logprob: -0.8579604625701904
    2. '244' → logprob: -1.2329604625701904
    3. '7' → logprob: -1.3579604625701904
    4. '247' → logprob: -4.2329607009887695
    5. '256' → logprob: -5.8579607009887695
    6. '264' → logprob: -6.1079607009887695
    7. '254' → logprob: -6.6079607009887695
    8. '258' → logprob: -6.8579607009887695
    9. '57' → logprob: -7.2329607009887695
    10. '255' → logprob: -7.3579607009887695

Token 23: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2869387865066528
    2. '\n' → logprob: -1.5369387865066528
    3. '' → logprob: -1.6619387865066528
    4. '
' → logprob: -2.1619386672973633
    5. 'n' → logprob: -2.7869386672973633
    6. '*' → logprob: -3.2869386672973633
    7. '**' → logprob: -3.4119386672973633
    8. '#' → logprob: -4.411938667297363
    9. ',' → logprob: -4.661938667297363
    10. ' 
' → logprob: -5.036938667297363

Token 24: 'factor' (ID: 73174)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19698064029216766
    2. 'n' → logprob: -2.8219807147979736
    3. '\' → logprob: -3.1969807147979736
    4. '
' → logprob: -3.9469807147979736
    5. 'def' → logprob: -4.5719804763793945
    6. '' → logprob: -4.9469804763793945
    7. '```' → logprob: -5.3219804763793945
    8. 'a' → logprob: -5.4469804763793945
    9. '\n' → logprob: -5.4469804763793945
    10. 'dp' → logprob: -5.5719804763793945

Token 25: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.6945610642433167
    2. 'ials' → logprob: -0.6945610642433167
    3. 's' → logprob: -7.319561004638672
    4. '_' → logprob: -7.694561004638672
    5. 'ialize' → logprob: -8.944561004638672
    6. 'al' → logprob: -10.444561004638672
    7. '```' → logprob: -10.444561004638672
    8. ' =' → logprob: -10.444561004638672
    9. '_count' → logprob: -10.944561004638672
    10. ' ' → logprob: -11.819561004638672

Token 26: '_size' (ID: 5044)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5868799090385437
    2. 's' → logprob: -1.3368799686431885
    3. '(' → logprob: -2.2118799686431885
    4. '_' → logprob: -3.0868799686431885
    5. '_factor' → logprob: -4.086879730224609
    6. '_s' → logprob: -5.586879730224609
    7. '(s' → logprob: -6.836879730224609
    8. '[n' → logprob: -7.086879730224609
    9. '[s' → logprob: -7.211879730224609
    10. '```' → logprob: -7.461879730224609

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013585673877969384
    2. '=' → logprob: -6.626358509063721
    3. ' ' → logprob: -10.376358985900879
    4. '_' → logprob: -14.251358985900879
    5. ' =
' → logprob: -15.251358985900879
    6. ' =)' → logprob: -15.751358985900879
    7. ',' → logprob: -16.001358032226562
    8. 's' → logprob: -16.376358032226562
    9. ' ,' → logprob: -16.876358032226562
    10. ')' → logprob: -17.376358032226562

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04178941249847412
    2. ' ' → logprob: -3.5417895317077637
    3. 'n' → logprob: -4.541789531707764
    4. '10' → logprob: -7.291789531707764
    5. '100' → logprob: -8.291789054870605
    6. ' max' → logprob: -8.791789054870605
    7. '1' → logprob: -9.416789054870605
    8. 'max' → logprob: -9.916789054870605
    9. ' a' → logprob: -11.041789054870605
    10. '2' → logprob: -11.166789054870605

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.22669975459575653
    2. '_' → logprob: -1.601699709892273
    3. '_val' → logprob: -7.1016998291015625
    4. '_size' → logprob: -8.351699829101562
    5. '_values' → logprob: -9.851699829101562
    6. ' _' → logprob: -9.976699829101562
    7. '_n' → logprob: -10.101699829101562
    8. '_
' → logprob: -11.726699829101562
    9. '_v' → logprob: -11.726699829101562
    10. '+' → logprob: -11.976699829101562

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038697246462106705
    2. ' +' → logprob: -3.2886972427368164
    3. '+
' → logprob: -8.538697242736816
    4. '<|end|>' → logprob: -8.538697242736816
    5. ' +
' → logprob: -9.663697242736816
    6. '
' → logprob: -9.663697242736816
    7. ' ' → logprob: -10.038697242736816
    8. '<|end|>' → logprob: -10.663697242736816
    9. '+n' → logprob: -11.288697242736816
    10. 'import' → logprob: -11.538697242736816

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20887750387191772
    2. '1' → logprob: -1.8338775634765625
    3. '10' → logprob: -4.3338775634765625
    4. '2' → logprob: -5.0838775634765625
    5. '20' → logprob: -6.0838775634765625
    6. ' b' → logprob: -6.2088775634765625
    7. '5' → logprob: -6.2088775634765625
    8. '100' → logprob: -6.4588775634765625
    9. '50' → logprob: -7.8338775634765625
    10. 'b' → logprob: -8.208877563476562

Token 32: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.016520619392395
    2. '2' → logprob: -1.516520619392395
    3. '10' → logprob: -1.766520619392395
    4. '1' → logprob: -2.0165205001831055
    5. '100' → logprob: -3.1415205001831055
    6. '5' → logprob: -3.3915205001831055
    7. '3' → logprob: -4.5165205001831055
    8. '20' → logprob: -4.8915205001831055
    9. 'a' → logprob: -5.2665205001831055
    10. '50' → logprob: -5.7665205001831055

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07382597029209137
    2. '
' → logprob: -3.1988260746002197
    3. 'factor' → logprob: -3.9488260746002197
    4. '\n' → logprob: -5.198825836181641
    5. '' → logprob: -6.573825836181641
    6. ' 
' → logprob: -6.823825836181641
    7. 'fact' → logprob: -7.323825836181641
    8. '\' → logprob: -7.573825836181641
    9. '

' → logprob: -7.823825836181641
    10. '_factor' → logprob: -7.823825836181641

Token 34: 'factor' (ID: 73174)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03106589801609516
    2. '
' → logprob: -3.7810659408569336
    3. 'factor' → logprob: -5.531065940856934
    4. '_factor' → logprob: -6.656065940856934
    5. '\n' → logprob: -6.906065940856934
    6. '```' → logprob: -7.906065940856934
    7. ' 
' → logprob: -8.156065940856934
    8. '

' → logprob: -8.531065940856934
    9. 'fact' → logprob: -8.656065940856934
    10. '' → logprob: -8.906065940856934

Token 35: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.013766643591225147
    2. 'ial' → logprob: -4.388766765594482
    3. '_' → logprob: -7.013766765594482
    4. '_al' → logprob: -8.388766288757324
    5. 'onal' → logprob: -10.263766288757324
    6. 'o' → logprob: -11.138766288757324
    7. '_size' → logprob: -11.388766288757324
    8. 'otal' → logprob: -11.888766288757324
    9. 's' → logprob: -12.513766288757324
    10. 'isal' → logprob: -12.513766288757324

Token 36: '_current' (ID: 23981)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32669156789779663
    2. '_s' → logprob: -1.3266916275024414
    3. '_' → logprob: -4.451691627502441
    4. '[' → logprob: -7.076691627502441
    5. '_factor' → logprob: -7.826691627502441
    6. ' =' → logprob: -9.326691627502441
    7. '_size' → logprob: -9.451691627502441
    8. '[s' → logprob: -9.951691627502441
    9. '=' → logprob: -10.201691627502441
    10. ' s' → logprob: -10.201691627502441

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05226821452379227
    2. ' =' → logprob: -4.052268028259277
    3. '_factor' → logprob: -4.052268028259277
    4. '=' → logprob: -4.302268028259277
    5. 's' → logprob: -7.177268028259277
    6. '_value' → logprob: -7.427268028259277
    7. '_=' → logprob: -8.052268028259277
    8. ' ' → logprob: -8.177268028259277
    9. ' _' → logprob: -8.677268028259277
    10. '_size' → logprob: -9.552268028259277

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14419449865818024
    2. ' ' → logprob: -2.0191946029663086
    3. ' [' → logprob: -7.144194602966309
    4. '[' → logprob: -7.269194602966309
    5. '[int' → logprob: -11.894194602966309
    6. '0' → logprob: -12.394194602966309
    7. 'factor' → logprob: -12.456694602966309
    8. '  ' → logprob: -12.831694602966309
    9. '   ' → logprob: -13.331694602966309
    10. '{' → logprob: -13.769194602966309

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027257020119577646
    2. '[' → logprob: -6.002725601196289
    3. ' ' → logprob: -9.002725601196289
    4. '[int' → logprob: -10.627725601196289
    5. 'factor' → logprob: -10.752725601196289
    6. '0' → logprob: -10.877725601196289
    7. '{' → logprob: -11.252725601196289
    8. ' [' → logprob: -11.377725601196289
    9. '[n' → logprob: -11.627725601196289
    10. '[f' → logprob: -11.627725601196289

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3507694900035858
    2. 'for' → logprob: -1.6007695198059082
    3. 'factor' → logprob: -3.225769519805908
    4. ' for' → logprob: -3.475769519805908
    5. '<|end|>' → logprob: -5.225769519805908
    6. '' → logprob: -5.600769519805908
    7. '\n' → logprob: -5.600769519805908
    8. ' 
' → logprob: -5.725769519805908
    9. '
' → logprob: -6.725769519805908
    10. '

' → logprob: -6.975769519805908

Token 41: 'factor' (ID: 73174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15408571064472198
    2. ' for' → logprob: -2.154085636138916
    3. '
' → logprob: -3.904085636138916
    4. 'factor' → logprob: -5.529085636138916
    5. '<|end|>' → logprob: -7.029085636138916
    6. '```' → logprob: -7.279085636138916
    7. 'n' → logprob: -8.154086112976074
    8. '\n' → logprob: -8.404086112976074
    9. 'fact' → logprob: -9.279086112976074
    10. '
' → logprob: -9.779086112976074

Token 42: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0033017699606716633
    2. '_al' → logprob: -5.753301620483398
    3. '_' → logprob: -10.253301620483398
    4. '_size' → logprob: -10.378301620483398
    5. ' al' → logprob: -11.003301620483398
    6. 'ial' → logprob: -11.503301620483398
    7. 's' → logprob: -12.253301620483398
    8. 'a' → logprob: -12.503301620483398
    9. '	al' → logprob: -13.003301620483398
    10. '_to' → logprob: -13.378301620483398

Token 43: '_table' (ID: 11721)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.525585949420929
    2. 's' → logprob: -0.900585949420929
    3. '_' → logprob: -6.900586128234863
    4. '_size' → logprob: -7.525586128234863
    5. '_array' → logprob: -8.025586128234863
    6. '_values' → logprob: -9.025586128234863
    7. '_factor' → logprob: -9.400586128234863
    8. '[' → logprob: -9.650586128234863
    9. '_list' → logprob: -9.775586128234863
    10. ' s' → logprob: -9.900586128234863

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4749748110771179
    2. '=' → logprob: -0.9749748110771179
    3. '[' → logprob: -7.099974632263184
    4. '=[]' → logprob: -10.849974632263184
    5. ' ' → logprob: -11.224974632263184
    6. '=[' → logprob: -11.349974632263184
    7. '[]' → logprob: -11.724974632263184
    8. ' =[' → logprob: -11.724974632263184
    9. '[:]' → logprob: -11.849974632263184
    10. 's' → logprob: -12.974974632263184

Token 45: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12791481614112854
    2. ' [' → logprob: -2.1279149055480957
    3. '[]' → logprob: -7.002914905548096
    4. ' []' → logprob: -9.627914428710938
    5. '[n' → logprob: -12.502914428710938
    6. '[int' → logprob: -13.252914428710938
    7. '[array' → logprob: -13.502914428710938
    8. '[f' → logprob: -15.002914428710938
    9. '[len' → logprob: -15.252914428710938
    10. '[num' → logprob: -15.252914428710938

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. 'factor' → logprob: -11.25001335144043
    3. ' ' → logprob: -14.62501335144043
    4. '0' → logprob: -16.50001335144043
    5. '```' → logprob: -17.12501335144043
    6. 'fact' → logprob: -17.37501335144043
    7. ')' → logprob: -17.75001335144043
    8. ' factorial' → logprob: -17.75001335144043
    9. '   ' → logprob: -18.25001335144043
    10. '`' → logprob: -18.75001335144043

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019160262309014797
    2. ',' → logprob: -6.87691593170166
    3. ' ]' → logprob: -7.12691593170166
    4. ' for' → logprob: -9.75191593170166
    5. ']*' → logprob: -11.25191593170166
    6. ']*(' → logprob: -12.37691593170166
    7. ')' → logprob: -13.62691593170166
    8. 'for' → logprob: -13.87691593170166
    9. ' ' → logprob: -14.75191593170166
    10. ' ,' → logprob: -15.00191593170166

Token 48: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10010776668787003
    2. '\n' → logprob: -3.3501076698303223
    3. '[' → logprob: -3.8501076698303223
    4. ' for' → logprob: -3.9751076698303223
    5. '\' → logprob: -5.100107669830322
    6. '
' → logprob: -6.100107669830322
    7. '```' → logprob: -6.100107669830322
    8. '*' → logprob: -6.600107669830322
    9. '0' → logprob: -6.725107669830322
    10. '#' → logprob: -6.725107669830322

Token 49: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0009086026693694293
    2. '(f' → logprob: -7.625908374786377
    3. ' factorial' → logprob: -7.875908374786377
    4. 'fact' → logprob: -10.250908851623535
    5. ' factor' → logprob: -12.625908851623535
    6. '_factor' → logprob: -14.250908851623535
    7. '(' → logprob: -14.875908851623535
    8. '.factor' → logprob: -14.875908851623535
    9. ' (' → logprob: -15.125908851623535
    10. 'fac' → logprob: -16.12590789794922

Token 50: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -5.8126592193730175e-05
    2. 'size' → logprob: -9.8750581741333
    3. '_s' → logprob: -12.3750581741333
    4. '_' → logprob: -13.2500581741333
    5. 's' → logprob: -15.0000581741333
    6. '```' → logprob: -16.500057220458984
    7. '_sizes' → logprob: -16.750057220458984
    8. 'siz' → logprob: -16.875057220458984
    9. '_value' → logprob: -17.125057220458984
    10. ' size' → logprob: -17.625057220458984

Token 51: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016754860058426857
    2. ' for' → logprob: -4.516754627227783
    3. '\n' → logprob: -5.516754627227783
    4. '
' → logprob: -7.016754627227783
    5. '```' → logprob: -7.391754627227783
    6. 'n' → logprob: -9.391755104064941
    7. '\' → logprob: -11.641755104064941
    8. '[' → logprob: -11.641755104064941
    9. '
' → logprob: -11.891755104064941
    10. '`' → logprob: -11.891755104064941

Token 52: 'inverse' (ID: 153422)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6985688209533691
    2. 'for' → logprob: -0.6985688209533691
    3. '```' → logprob: -6.198568820953369
    4. '\n' → logprob: -6.573568820953369
    5. ' for' → logprob: -6.573568820953369
    6. '
' → logprob: -7.823568820953369
    7. '

' → logprob: -9.323568344116211
    8. 'n' → logprob: -10.198568344116211
    9. '' → logprob: -10.448568344116211
    10. '``' → logprob: -12.448568344116211

Token 53: '_table' (ID: 11721)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.10509242862462997
    2. '_table' → logprob: -2.8550925254821777
    3. '_' → logprob: -3.6050925254821777
    4. 's' → logprob: -5.105092525482178
    5. '_fact' → logprob: -6.105092525482178
    6. '_current' → logprob: -6.230092525482178
    7. '_f' → logprob: -6.605092525482178
    8. '_mod' → logprob: -6.730092525482178
    9. '_value' → logprob: -7.480092525482178
    10. '_values' → logprob: -7.730092525482178

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004097277764230967
    2. '=' → logprob: -5.5040974617004395
    3. '[' → logprob: -11.004096984863281
    4. '_' → logprob: -14.004096984863281
    5. ' =[' → logprob: -14.754096984863281
    6. 's' → logprob: -14.879096984863281
    7. ' ' → logprob: -15.504096984863281
    8. '  ' → logprob: -15.754096984863281
    9. ',' → logprob: -15.879096984863281
    10. '[]' → logprob: -16.00409698486328

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021281987428665
    2. ' [' → logprob: -2.350212812423706
    3. ' ' → logprob: -13.225213050842285
    4. 'factor' → logprob: -13.725213050842285
    5. '[]' → logprob: -14.225213050842285
    6. '[n' → logprob: -14.350213050842285
    7. '[-' → logprob: -14.975213050842285
    8. '[len' → logprob: -15.100213050842285
    9. '[int' → logprob: -15.100213050842285
    10. ' factorial' → logprob: -15.475213050842285

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22607380151748657
    2. 'factor' → logprob: -1.6010737419128418
    3. ' ' → logprob: -8.47607421875
    4. ' factorial' → logprob: -8.85107421875
    5. 'fact' → logprob: -8.97607421875
    6. '0' → logprob: -9.22607421875
    7. '[' → logprob: -11.60107421875
    8. '-' → logprob: -11.72607421875
    9. '2' → logprob: -11.85107421875
    10. '(' → logprob: -11.97607421875

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006760010030120611
    2. ' ]' → logprob: -5.006760120391846
    3. ',' → logprob: -10.756759643554688
    4. ')' → logprob: -11.131759643554688
    5. ' ' → logprob: -13.256759643554688
    6. '<|end|>' → logprob: -13.381759643554688
    7. ' *' → logprob: -13.881759643554688
    8. '*' → logprob: -14.506759643554688
    9. '<|end|>' → logprob: -14.506759643554688
    10. ')]' → logprob: -14.506759643554688

Token 58: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.34586763381958
    2. '0' → logprob: -1.84586763381958
    3. '[' → logprob: -1.97086763381958
    4. ' ' → logprob: -2.47086763381958
    5. '```' → logprob: -2.47086763381958
    6. '<|end|>' → logprob: -2.47086763381958
    7. ')' → logprob: -2.72086763381958
    8. '
' → logprob: -3.97086763381958
    9. '*' → logprob: -4.22086763381958
    10. '_' → logprob: -4.47086763381958

Token 59: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0011959441471844912
    2. ' factorial' → logprob: -6.751195907592773
    3. 'fact' → logprob: -10.876195907592773
    4. ' factor' → logprob: -12.251195907592773
    5. '(f' → logprob: -15.001195907592773
    6. '_factor' → logprob: -15.126195907592773
    7. ' ' → logprob: -15.126195907592773
    8. 'fraction' → logprob: -15.626195907592773
    9. '   ' → logprob: -15.751195907592773
    10. 'fac' → logprob: -16.251195907592773

Token 60: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.2127087504486553e-05
    2. 'size' → logprob: -10.875021934509277
    3. '_s' → logprob: -13.250021934509277
    4. '_' → logprob: -14.125021934509277
    5. '_value' → logprob: -15.500021934509277
    6. '_sizes' → logprob: -16.125022888183594
    7. '_table' → logprob: -16.250022888183594
    8. '_SIZE' → logprob: -16.375022888183594
    9. '```' → logprob: -16.750022888183594
    10. 's' → logprob: -17.000022888183594

Token 61: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004061242798343301
    2. ' for' → logprob: -8.000406265258789
    3. '```' → logprob: -9.875406265258789
    4. '\n' → logprob: -11.625406265258789
    5. '
' → logprob: -12.250406265258789
    6. 'n' → logprob: -13.750406265258789
    7. '_for' → logprob: -14.125406265258789
    8. '#' → logprob: -14.750406265258789
    9. '`' → logprob: -14.750406265258789
    10. 'factor' → logprob: -14.750406265258789

Token 62: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005943780997768044
    2. ' for' → logprob: -7.500594615936279
    3. '
' → logprob: -10.875594139099121
    4. '```' → logprob: -11.500594139099121
    5. 'n' → logprob: -12.125594139099121
    6. 'factor' → logprob: -12.875594139099121
    7. '#' → logprob: -13.500594139099121
    8. ')' → logprob: -14.125594139099121
    9. 'i' → logprob: -14.875594139099121
    10. '\n' → logprob: -14.875594139099121

Token 63: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3656562268733978
    2. '_' → logprob: -1.3656562566757202
    3. '=' → logprob: -2.9906561374664307
    4. ' ' → logprob: -8.240655899047852
    5. '_=' → logprob: -8.615655899047852
    6. '_space' → logprob: -9.365655899047852
    7. 's' → logprob: -9.365655899047852
    8. ' _' → logprob: -9.615655899047852
    9. 'space' → logprob: -10.865655899047852
    10. '  ' → logprob: -11.615655899047852

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1700303703546524
    2. '=' → logprob: -1.9200303554534912
    3. '_' → logprob: -4.67003059387207
    4. ' ' → logprob: -8.79503059387207
    5. ' +=' → logprob: -9.54503059387207
    6. '_=' → logprob: -9.67003059387207
    7. 's' → logprob: -10.79503059387207
    8. '[' → logprob: -10.79503059387207
    9. ' _' → logprob: -11.29503059387207
    10. '<|end|>' → logprob: -11.92003059387207

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04860122874379158
    2. ' ' → logprob: -3.0486011505126953
    3. '1' → logprob: -11.923601150512695
    4. ' ' → logprob: -12.423601150512695
    5. 'int' → logprob: -15.173601150512695
    6. 'factor' → logprob: -15.298601150512695
    7. 'n' → logprob: -15.361101150512695
    8. '   ' → logprob: -15.736101150512695
    9. '"' → logprob: -15.798601150512695
    10. ' (' → logprob: -15.861101150512695

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011367550177965313
    2. ' ' → logprob: -9.250113487243652
    3. '1' → logprob: -11.625113487243652
    4. 'factor' → logprob: -12.937613487243652
    5. '(' → logprob: -13.375113487243652
    6. 'n' → logprob: -14.062613487243652
    7. 'fact' → logprob: -15.062613487243652
    8. 'a' → logprob: -15.125113487243652
    9. 'int' → logprob: -15.187613487243652
    10. '[' → logprob: -15.375113487243652

Token 67: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015484727919101715
    2. '
' → logprob: -4.765484809875488
    3. ' for' → logprob: -5.640484809875488
    4. '\n' → logprob: -6.015484809875488
    5. '```' → logprob: -7.890484809875488
    6. 'n' → logprob: -8.015484809875488
    7. 'i' → logprob: -10.515484809875488
    8. '#' → logprob: -10.765484809875488
    9. '' → logprob: -11.140484809875488
    10. '\' → logprob: -11.140484809875488

Token 68: 'range' (ID: 20967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005284877843223512
    2. '```' → logprob: -7.875528335571289
    3. '
' → logprob: -9.125528335571289
    4. ' for' → logprob: -10.750528335571289
    5. 'i' → logprob: -11.875528335571289
    6. '\n' → logprob: -12.750528335571289
    7. '' → logprob: -13.125528335571289
    8. 'n' → logprob: -13.375528335571289
    9. '
' → logprob: -13.375528335571289
    10. '``' → logprob: -13.875528335571289

Token 69: '_func' (ID: 22252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6618372797966003
    2. '(' → logprob: -0.9118372797966003
    3. '_factor' → logprob: -2.911837339401245
    4. '_range' → logprob: -4.411837100982666
    5. '(n' → logprob: -4.786837100982666
    6. 'factor' → logprob: -6.661837100982666
    7. '_n' → logprob: -6.786837100982666
    8. '(f' → logprob: -7.286837100982666
    9. 's' → logprob: -7.536837100982666
    10. '(_' → logprob: -7.536837100982666

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6257067322731018
    2. '(' → logprob: -0.8757067322731018
    3. ' =' → logprob: -3.750706672668457
    4. '_' → logprob: -4.625706672668457
    5. '_range' → logprob: -5.125706672668457
    6. '(n' → logprob: -5.625706672668457
    7. '(range' → logprob: -6.125706672668457
    8. '_n' → logprob: -7.125706672668457
    9. ')' → logprob: -7.250706672668457
    10. 'range' → logprob: -7.500706672668457

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0337667241692543
    2. ' range' → logprob: -3.408766746520996
    3. '(range' → logprob: -9.658766746520996
    4. '```' → logprob: -10.408766746520996
    5. '	range' → logprob: -11.033766746520996
    6. ' xrange' → logprob: -12.533766746520996
    7. ' ' → logprob: -13.408766746520996
    8. 'x' → logprob: -13.408766746520996
    9. '
' → logprob: -13.658766746520996
    10. '  ' → logprob: -14.158766746520996

Token 72: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26176223158836365
    2. '
' → logprob: -2.1367621421813965
    3. ' for' → logprob: -3.0117621421813965
    4. '<|end|>' → logprob: -3.1367621421813965
    5. '[' → logprob: -5.2617621421813965
    6. 'n' → logprob: -6.1367621421813965
    7. '\n' → logprob: -6.1367621421813965
    8. '_' → logprob: -6.2617621421813965
    9. '```' → logprob: -6.3867621421813965
    10. '' → logprob: -7.3867621421813965

Token 73: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034112296998500824
    2. '_' → logprob: -4.659112453460693
    3. ' for' → logprob: -4.659112453460693
    4. '\n' → logprob: -5.409112453460693
    5. '
' → logprob: -5.909112453460693
    6. '```' → logprob: -6.284112453460693
    7. 'n' → logprob: -6.409112453460693
    8. '_for' → logprob: -7.159112453460693
    9. '1' → logprob: -7.784112453460693
    10. ')' → logprob: -7.909112453460693

Token 74: ' b' (ID: 287)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01609361171722412
    2. 'n' → logprob: -4.516093730926514
    3. ' factorial' → logprob: -6.016093730926514
    4. ' a' → logprob: -6.516093730926514
    5. ' ' → logprob: -7.891093730926514
    6. 'a' → logprob: -7.891093730926514
    7. ' b' → logprob: -9.016093254089355
    8. ' not' → logprob: -9.141093254089355
    9. 'factor' → logprob: -10.266093254089355
    10. '	n' → logprob: -11.141093254089355

Token 75: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0034215240739285946
    2. '_' → logprob: -5.753421306610107
    3. ' _' → logprob: -9.503421783447266
    4. '_val' → logprob: -10.003421783447266
    5. '>' → logprob: -10.628421783447266
    6. '```' → logprob: -10.878421783447266
    7. 'alue' → logprob: -11.003421783447266
    8. '__' → logprob: -12.003421783447266
    9. '_values' → logprob: -12.128421783447266
    10. '<_' → logprob: -12.253421783447266

Token 76: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1780480146408081
    2. ' >=' → logprob: -2.1780481338500977
    3. ' <' → logprob: -3.8030481338500977
    4. ' <=' → logprob: -4.553048133850098
    5. '>' → logprob: -4.803048133850098
    6. ' ==' → logprob: -5.678048133850098
    7. ' ' → logprob: -5.803048133850098
    8. '>=' → logprob: -7.053048133850098
    9. ' !=' → logprob: -7.303048133850098
    10. ':' → logprob: -8.553048133850098

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10087774693965912
    2. '0' → logprob: -2.3508777618408203
    3. '1' → logprob: -7.97587776184082
    4. ' a' → logprob: -8.97587776184082
    5. 'a' → logprob: -9.22587776184082
    6. ' n' → logprob: -10.72587776184082
    7. '2' → logprob: -11.22587776184082
    8. '  ' → logprob: -11.35087776184082
    9. ' -' → logprob: -11.72587776184082
    10. ' b' → logprob: -11.72587776184082

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015288805589079857
    2. ' ' → logprob: -4.265288829803467
    3. '1' → logprob: -7.015288829803467
    4. 'a' → logprob: -9.140288352966309
    5. 'n' → logprob: -10.390288352966309
    6. '2' → logprob: -10.765288352966309
    7. 'b' → logprob: -11.515288352966309
    8. '-' → logprob: -11.515288352966309
    9. '3' → logprob: -12.327788352966309
    10. '  ' → logprob: -12.640288352966309

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.2855416066013277e-05
    2. ' :' → logprob: -10.375032424926758
    3. ':
' → logprob: -13.500032424926758
    4. ':return' → logprob: -15.875032424926758
    5. ':

' → logprob: -16.875032424926758
    6. ':**' → logprob: -17.000032424926758
    7. ',' → logprob: -17.625032424926758
    8. ' and' → logprob: -18.375032424926758
    9. ':def' → logprob: -18.500032424926758
    10. '):' → logprob: -18.625032424926758

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6868681311607361
    2. '
' → logprob: -1.9368681907653809
    3. ':' → logprob: -2.311868190765381
    4. ' print' → logprob: -2.311868190765381
    5. 'print' → logprob: -2.561868190765381
    6. '\n' → logprob: -3.061868190765381
    7. ':
' → logprob: -4.811868190765381
    8. '    
' → logprob: -4.936868190765381
    9. ' 
' → logprob: -5.561868190765381
    10. ' ' → logprob: -5.936868190765381

Token 81: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.22177726030349731
    2. 'print' (adapté à ' print') → logprob: -1.7217772006988525
    3. ' result' → logprob: -4.596777439117432
    4. 'result' → logprob: -4.846777439117432
    5. '   ' → logprob: -7.596777439117432
    6. '    ' → logprob: -8.096776962280273
    7. ' ' → logprob: -8.221776962280273
    8. '0' → logprob: -8.346776962280273
    9. 'factor' → logprob: -8.346776962280273
    10. ' for' → logprob: -8.721776962280273

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01013367809355259
    2. '(n' → logprob: -4.760133743286133
    3. '(f' → logprob: -7.760133743286133
    4. '(a' → logprob: -8.135133743286133
    5. '((' → logprob: -8.260133743286133
    6. '("' → logprob: -8.885133743286133
    7. '('' → logprob: -9.260133743286133
    8. '(b' → logprob: -9.385133743286133
    9. '(-' → logprob: -9.760133743286133
    10. '()' → logprob: -10.010133743286133

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1862756758928299
    2. '0' → logprob: -2.0612757205963135
    3. 'factor' → logprob: -3.5612757205963135
    4. '(' → logprob: -5.686275482177734
    5. ' ' → logprob: -5.686275482177734
    6. 'a' → logprob: -5.811275482177734
    7. 'n' → logprob: -6.061275482177734
    8. 'b' → logprob: -8.311275482177734
    9. '(n' → logprob: -8.311275482177734
    10. '"' → logprob: -8.436275482177734

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018221933394670486
    2. ')
' → logprob: -4.018221855163574
    3. ' )' → logprob: -10.143221855163574
    4. ')
' → logprob: -10.518221855163574
    5. '   ' → logprob: -12.768221855163574
    6. ' )
' → logprob: -13.393221855163574
    7. 'else' → logprob: -15.018221855163574
    8. ')return' → logprob: -15.143221855163574
    9. ')

' → logprob: -16.01822280883789
    10. '))' → logprob: -16.39322280883789

Token 85: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.030160032212734222
    2. '
' → logprob: -4.405159950256348
    3. '   ' → logprob: -4.655159950256348
    4. ' else' → logprob: -5.655159950256348
    5. 'elif' → logprob: -5.655159950256348
    6. '    
' → logprob: -7.405159950256348
    7. ')' → logprob: -9.405159950256348
    8. '\n' → logprob: -9.780159950256348
    9. '```' → logprob: -9.780159950256348
    10. ' 
' → logprob: -9.780159950256348

Token 86: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7223676443099976
    2. '   ' → logprob: -0.8473676443099976
    3. 'exit' (adapté à ' exit') → logprob: -2.597367763519287
    4. ' exit' → logprob: -5.597367763519287
    5. '
' → logprob: -6.222367763519287
    6. 'elif' → logprob: -6.347367763519287
    7. ' else' → logprob: -6.597367763519287
    8. '	exit' → logprob: -6.597367763519287
    9. '    
' → logprob: -7.847367763519287
    10. '```' → logprob: -8.722367286682129

Token 87: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0026483095716685057
    2. '(' → logprob: -6.12764835357666
    3. '()
' → logprob: -7.75264835357666
    4. '()

' → logprob: -11.37764835357666
    5. '(
' → logprob: -11.50264835357666
    6. '()\' → logprob: -12.00264835357666
    7. '()
' → logprob: -13.50264835357666
    8. '()`' → logprob: -13.62764835357666
    9. ' ()' → logprob: -13.87764835357666
    10. '0' → logprob: -14.62764835357666

Token 88: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3963606059551239
    2. '
' → logprob: -1.6463606357574463
    3. ' for' → logprob: -2.2713606357574463
    4. '\n' → logprob: -4.021360397338867
    5. ' 
' → logprob: -5.021360397338867
    6. 'n' → logprob: -6.646360397338867
    7. '```' → logprob: -6.646360397338867
    8. '' → logprob: -6.896360397338867
    9. '
' → logprob: -7.021360397338867
    10. ')' → logprob: -7.771360397338867

Token 89: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003335585934109986
    2. ' for' → logprob: -8.125333786010742
    3. 'from' → logprob: -10.750333786010742
    4. '#' → logprob: -11.750333786010742
    5. 'def' → logprob: -12.250333786010742
    6. 'factor' → logprob: -14.000333786010742
    7. 'f' → logprob: -14.375333786010742
    8. 'import' → logprob: -14.625333786010742
    9. 'range' → logprob: -14.625333786010742
    10. '```' → logprob: -15.125333786010742

Token 90: ' factorial' (ID: 111204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2834053039550781
    2. 'factor' → logprob: -1.6584053039550781
    3. ' for' → logprob: -3.283405303955078
    4. ' factorial' → logprob: -4.158405303955078
    5. '(' → logprob: -6.908405303955078
    6. '_factor' → logprob: -7.908405303955078
    7. 'the' → logprob: -8.033405303955078
    8. 'i' → logprob: -8.033405303955078
    9. ' the' → logprob: -8.158405303955078
    10. 'fact' → logprob: -8.283405303955078

Token 91: ' table' (ID: 3293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6149882078170776
    2. 's' → logprob: -0.9899882078170776
    3. ' for' → logprob: -2.864988327026367
    4. '_' → logprob: -3.864988327026367
    5. '(' → logprob: -5.739988327026367
    6. '_for' → logprob: -5.739988327026367
    7. ' ' → logprob: -7.614988327026367
    8. '[' → logprob: -7.739988327026367
    9. '(s' → logprob: -7.989988327026367
    10. 'i' → logprob: -8.114988327026367

Token 92: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2567253112792969
    2. ' for' → logprob: -1.5067253112792969
    3. '
' → logprob: -5.381725311279297
    4. '```' → logprob: -10.256725311279297
    5. '<|end|>' → logprob: -10.381725311279297
    6. '
' → logprob: -10.631725311279297
    7. ' ' → logprob: -11.506725311279297
    8. '' → logprob: -11.506725311279297
    9. ':' → logprob: -11.631725311279297
    10. '_for' → logprob: -12.006725311279297

Token 93: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00283055379986763
    2. ' for' → logprob: -5.877830505371094
    3. '```' → logprob: -10.752830505371094
    4. '
' → logprob: -12.752830505371094
    5. '<|end|>' → logprob: -14.377830505371094
    6. 'i' → logprob: -15.252830505371094
    7. '`' → logprob: -16.002830505371094
    8. '``' → logprob: -16.752830505371094
    9. 'n' → logprob: -16.877830505371094
    10. '	for' → logprob: -16.877830505371094

Token 94: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004211958963423967
    2. 'i' → logprob: -5.629211902618408
    3. ' _' → logprob: -7.629211902618408
    4. '_' → logprob: -10.004212379455566
    5. ' ' → logprob: -10.504212379455566
    6. '_i' → logprob: -11.379212379455566
    7. ' n' → logprob: -11.629212379455566
    8. ' index' → logprob: -11.879212379455566
    9. '	i' → logprob: -11.879212379455566
    10. ' factorial' → logprob: -12.129212379455566

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020596429705619812
    2. 'in' → logprob: -3.895596504211426
    3. ' ' → logprob: -10.020596504211426
    4. ',' → logprob: -12.395596504211426
    5. '	in' → logprob: -13.520596504211426
    6. '_in' → logprob: -14.270596504211426
    7. 'range' → logprob: -15.020596504211426
    8. ' ,' → logprob: -15.020596504211426
    9. '1' → logprob: -15.083096504211426
    10. '_' → logprob: -15.208096504211426

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04863903298974037
    2. 'range' → logprob: -3.0486390590667725
    3. '(range' → logprob: -10.923639297485352
    4. '	range' → logprob: -11.798639297485352
    5. ' factorial' → logprob: -11.798639297485352
    6. ' ' → logprob: -11.923639297485352
    7. 'factor' → logprob: -11.923639297485352
    8. ' factor' → logprob: -13.673639297485352
    9. '   ' → logprob: -14.173639297485352
    10. '  ' → logprob: -14.173639297485352

Token 97: '_func' (ID: 22252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010480545461177826
    2. '(f' → logprob: -6.8760480880737305
    3. 'factor' → logprob: -11.37604808807373
    4. '1' → logprob: -13.62604808807373
    5. '_factor' → logprob: -13.75104808807373
    6. 'f' → logprob: -14.00104808807373
    7. ' (' → logprob: -14.87604808807373
    8. '   ' → logprob: -15.87604808807373
    9. 'fact' → logprob: -16.626047134399414
    10. 's' → logprob: -16.751047134399414

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014168102643452585
    2. '(f' → logprob: -8.875142097473145
    3. '1' → logprob: -14.250142097473145
    4. ' (' → logprob: -14.500142097473145
    5. 'factor' → logprob: -14.750142097473145
    6. ' factorial' → logprob: -17.000141143798828
    7. 'f' → logprob: -17.250141143798828
    8. '(
' → logprob: -17.250141143798828
    9. 's' → logprob: -18.125141143798828
    10. '(len' → logprob: -18.250141143798828

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003213997988495976
    2. ' ' → logprob: -8.500321388244629
    3. '2' → logprob: -9.250321388244629
    4. '(' → logprob: -11.250321388244629
    5. 'factor' → logprob: -11.875321388244629
    6. '   ' → logprob: -13.500321388244629
    7. 'f' → logprob: -15.750321388244629
    8. ')' → logprob: -16.125322341918945
    9. '0' → logprob: -17.250322341918945
    10. 'fact' → logprob: -17.375322341918945

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012815415393561125
    2. ' ,' → logprob: -6.75128173828125
    3. ',f' → logprob: -9.12628173828125
    4. 'factor' → logprob: -13.25128173828125
    5. ',
' → logprob: -15.25128173828125
    6. 'f' → logprob: -15.25128173828125
    7. ' factorial' → logprob: -16.12628173828125
    8. '   ' → logprob: -16.25128173828125
    9. ',n' → logprob: -16.50128173828125
    10. ' ' → logprob: -17.50128173828125

Token 101: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.005245498847216368
    2. ' factorial' → logprob: -5.255245685577393
    3. ' factor' → logprob: -11.630245208740234
    4. 'fact' → logprob: -12.880245208740234
    5. '_factor' → logprob: -16.380245208740234
    6. '.factor' → logprob: -17.005245208740234
    7. '```' → logprob: -17.505245208740234
    8. '   ' → logprob: -17.880245208740234
    9. 'fac' → logprob: -18.130245208740234
    10. '-factor' → logprob: -18.505245208740234

Token 102: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.1008713702030946e-06
    2. 'size' → logprob: -13.375001907348633
    3. '_' → logprob: -15.750001907348633
    4. '_current' → logprob: -15.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.625001907348633
    7. ')' → logprob: -18.000001907348633
    8. '_value' → logprob: -18.250001907348633
    9. '_s' → logprob: -18.375001907348633
    10. '_sizes' → logprob: -18.500001907348633

Token 103: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16077442467212677
    2. '):' → logprob: -1.9107744693756104
    3. '):
' → logprob: -7.785774230957031
    4. ':' → logprob: -9.660774230957031
    5. ' ):
' → logprob: -9.785774230957031
    6. ' ):' → logprob: -11.785774230957031
    7. ')' → logprob: -12.285774230957031
    8. ':
' → logprob: -13.660774230957031
    9. '):

' → logprob: -15.035774230957031
    10. '   ' → logprob: -15.410774230957031

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026597201358526945
    2. ' factorial' → logprob: -6.127659797668457
    3. 'factor' → logprob: -8.127659797668457
    4. '```' → logprob: -9.002659797668457
    5. ' factor' → logprob: -10.877659797668457
    6. '    
' → logprob: -11.002659797668457
    7. '   ' → logprob: -12.002659797668457
    8. '_factor' → logprob: -12.752659797668457
    9. '.factor' → logprob: -13.127659797668457
    10. '
' → logprob: -13.252659797668457

Token 105: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.147173672914505
    2. ' factorial' → logprob: -2.2721736431121826
    3. '   ' → logprob: -3.3971736431121826
    4. ' factor' → logprob: -8.272173881530762
    5. 'fact' → logprob: -10.647173881530762
    6. '	f' → logprob: -11.897173881530762
    7. '_factor' → logprob: -12.522173881530762
    8. '.factor' → logprob: -13.147173881530762
    9. '    
' → logprob: -13.272173881530762
    10. ' ' → logprob: -13.647173881530762

Token 106: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.6931914687156677
    2. '_current' → logprob: -0.6931914687156677
    3. 'current' → logprob: -10.943191528320312
    4. '_' → logprob: -11.318191528320312
    5. 'table' → logprob: -11.943191528320312
    6. '   ' → logprob: -13.568191528320312
    7. '```' → logprob: -13.693191528320312
    8. '_factor' → logprob: -14.193191528320312
    9. ' _' → logprob: -14.693191528320312
    10. 'Current' → logprob: -14.693191528320312

Token 107: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00025406808708794415
    2. '[' → logprob: -8.375253677368164
    3. ' [' → logprob: -10.750253677368164
    4. '=' → logprob: -14.500253677368164
    5. 'idx' → logprob: -14.875253677368164
    6. '   ' → logprob: -15.625253677368164
    7. '[i' → logprob: -15.750253677368164
    8. '[index' → logprob: -16.000253677368164
    9. ' =' → logprob: -16.000253677368164
    10. '```' → logprob: -16.000253677368164

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12680260837078094
    2. '=' → logprob: -3.001802682876587
    3. ')' → logprob: -3.126802682876587
    4. ' =' → logprob: -3.876802682876587
    5. ' ]' → logprob: -5.751802444458008
    6. ']=' → logprob: -6.751802444458008
    7. ' )' → logprob: -8.501802444458008
    8. ')=' → logprob: -8.876802444458008
    9. ' *=' → logprob: -9.876802444458008
    10. ' ' → logprob: -10.376802444458008

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007065458223223686
    2. ' =' → logprob: -5.007065296173096
    3. '*=' → logprob: -8.007065773010254
    4. ' *=' → logprob: -11.007065773010254
    5. '=

' → logprob: -15.882065773010254
    6. '=f' → logprob: -16.257064819335938
    7. ' ' → logprob: -16.757064819335938
    8. '*' → logprob: -17.382064819335938
    9. '   ' → logprob: -17.507064819335938
    10. '＝' → logprob: -18.132064819335938

Token 110: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.1802215874195099
    2. ' factorial' → logprob: -1.8052215576171875
    3. ' (' → logprob: -8.805221557617188
    4. '(f' → logprob: -8.930221557617188
    5. 'fact' → logprob: -9.555221557617188
    6. ' factor' → logprob: -9.680221557617188
    7. '   ' → logprob: -10.805221557617188
    8. ' ' → logprob: -11.555221557617188
    9. '(' → logprob: -11.805221557617188
    10. '_factor' → logprob: -11.930221557617188

Token 111: '_current' (ID: 23981)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.039714448153972626
    2. '_current' → logprob: -3.2897143363952637
    3. 'table' → logprob: -6.539714336395264
    4. 'current' → logprob: -8.414714813232422
    5. '```' → logprob: -13.914714813232422
    6. '_' → logprob: -14.414714813232422
    7. 'Table' → logprob: -14.414714813232422
    8. '_factor' → logprob: -14.414714813232422
    9. '_tab' → logprob: -15.414714813232422
    10. '\' → logprob: -15.414714813232422

Token 112: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31326937675476074
    2. '*' → logprob: -1.3132693767547607
    3. ' ' → logprob: -12.31326961517334
    4. ' ' → logprob: -13.06326961517334
    5. '   ' → logprob: -14.93826961517334
    6. '  ' → logprob: -15.81326961517334
    7. '*object' → logprob: -15.93826961517334
    8. ' *=' → logprob: -16.063268661499023
    9. '**' → logprob: -16.313268661499023
    10. '	' → logprob: -17.438268661499023

Token 113: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05514325574040413
    2. ' factorial' → logprob: -2.930143356323242
    3. 'fact' → logprob: -8.930143356323242
    4. ' factor' → logprob: -9.305143356323242
    5. '(f' → logprob: -11.305143356323242
    6. '_factor' → logprob: -11.680143356323242
    7. '   ' → logprob: -12.055143356323242
    8. '.factor' → logprob: -12.680143356323242
    9. ' (' → logprob: -13.180143356323242
    10. 'idx' → logprob: -13.180143356323242

Token 114: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.00010819212911883369
    2. '_table' → logprob: -9.500107765197754
    3. 'current' → logprob: -10.375107765197754
    4. 'Current' → logprob: -13.750107765197754
    5. 'table' → logprob: -14.625107765197754
    6. '_' → logprob: -15.375107765197754
    7. '*' → logprob: -15.875107765197754
    8. ' current' → logprob: -16.25010871887207
    9. '_CURRENT' → logprob: -17.50010871887207
    10. '$current' → logprob: -17.75010871887207

Token 115: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02975083328783512
    2. ' *' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.90475082397461
    4. ' ' → logprob: -16.40475082397461
    5. '**' → logprob: -17.15475082397461
    6. '*object' → logprob: -17.15475082397461
    7. '*(' → logprob: -19.65475082397461
    8. '   ' → logprob: -19.77975082397461
    9. '*=' → logprob: -19.77975082397461
    10. '  ' → logprob: -19.90475082397461

Token 116: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00671584764495492
    2. ' idx' → logprob: -5.006715774536133
    3. '	idx' → logprob: -14.881715774536133
    4. '(idx' → logprob: -15.756715774536133
    5. '   ' → logprob: -16.881715774536133
    6. ' ' → logprob: -17.631715774536133
    7. '[idx' → logprob: -17.881715774536133
    8. '_idx' → logprob: -17.881715774536133
    9. '.idx' → logprob: -19.506715774536133
    10. 'index' → logprob: -19.756715774536133

Token 117: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014164102263748646
    2. '%' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.014163970947266
    4. '%n' → logprob: -15.639163970947266
    5. ' %=' → logprob: -16.014163970947266
    6. ' ' → logprob: -17.264163970947266
    7. '   ' → logprob: -17.389163970947266
    8. ' mod' → logprob: -17.889163970947266
    9. '%d' → logprob: -18.264163970947266
    10. '%c' → logprob: -18.264163970947266

Token 118: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008618474006652832
    2. ' modulus' → logprob: -4.758618354797363
    3. 'modifier' → logprob: -13.133618354797363
    4. '(mod' → logprob: -14.508618354797363
    5. 'moder' → logprob: -14.633618354797363
    6. 'module' → logprob: -15.258618354797363
    7. '	mod' → logprob: -15.258618354797363
    8. 'factor' → logprob: -16.00861930847168
    9. 'MOD' → logprob: -16.25861930847168
    10. 'modus' → logprob: -16.75861930847168

Token 119: '

' (ID: 279)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.29226118326187134
    2. '#' → logprob: -1.4172611236572266
    3. 'for' → logprob: -4.542261123657227
    4. 'inv' → logprob: -8.792261123657227
    5. '   ' → logprob: -10.042261123657227
    6. 'factor' → logprob: -10.167261123657227
    7. ' inverse' → logprob: -10.167261123657227
    8. 'from' → logprob: -10.292261123657227
    9. 'import' → logprob: -10.667261123657227
    10. ' for' → logprob: -10.792261123657227

Token 120: '#' (ID: 2)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.014849645085632801
    2. '#' → logprob: -4.514849662780762
    3. 'for' → logprob: -5.639849662780762
    4. 'inv' → logprob: -8.889849662780762
    5. 'factor' → logprob: -10.264849662780762
    6. ' inverse' → logprob: -10.264849662780762
    7. 'reverse' → logprob: -11.889849662780762
    8. ' for' → logprob: -12.014849662780762
    9. 'from' → logprob: -12.639849662780762
    10. '_inverse' → logprob: -12.764849662780762

Token 121: ' Compute' (ID: 45438)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.016480393707752228
    2. '#' → logprob: -4.141480445861816
    3. 'inv' → logprob: -8.391480445861816
    4. 'for' → logprob: -8.641480445861816
    5. ' inverse' → logprob: -10.641480445861816
    6. 'factor' → logprob: -11.766480445861816
    7. 'reverse' → logprob: -12.516480445861816
    8. 'def' → logprob: -12.891480445861816
    9. '```' → logprob: -14.391480445861816
    10. '   ' → logprob: -14.516480445861816

Token 122: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.06265696883201599
    2. ' inverse' → logprob: -2.812656879425049
    3. '#' → logprob: -7.812656879425049
    4. 'inv' → logprob: -9.312657356262207
    5. 'for' → logprob: -9.562657356262207
    6. ' for' → logprob: -10.312657356262207
    7. 'factor' → logprob: -10.687657356262207
    8. '_inverse' → logprob: -11.562657356262207
    9. 'mod' → logprob: -12.062657356262207
    10. '   ' → logprob: -12.062657356262207

Token 123: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.32879340648651123
    2. 'inverse' → logprob: -1.8287934064865112
    3. 'for' → logprob: -2.953793525695801
    4. '_factor' → logprob: -3.203793525695801
    5. ' factorial' → logprob: -5.078793525695801
    6. ' for' → logprob: -5.953793525695801
    7. '_inverse' → logprob: -6.078793525695801
    8. 'value' → logprob: -6.203793525695801
    9. '_table' → logprob: -6.328793525695801
    10. 'inv' → logprob: -6.453793525695801

Token 124: ' table' (ID: 3293)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.4453851580619812
    2. 'factor' → logprob: -1.195385217666626
    3. 'for' → logprob: -3.070385217666626
    4. 'current' → logprob: -5.570384979248047
    5. 'inv' → logprob: -6.195384979248047
    6. '_inverse' → logprob: -6.695384979248047
    7. '_factor' → logprob: -7.445384979248047
    8. '_current' → logprob: -7.820384979248047
    9. 'import' → logprob: -7.945384979248047
    10. ' =' → logprob: -8.195384979248047

Token 125: '
' (ID: 198)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.0018202434293925762
    2. 'for' → logprob: -7.376820087432861
    3. 'factor' → logprob: -7.376820087432861
    4. 'import' → logprob: -8.75182056427002
    5. ',' → logprob: -9.00182056427002
    6. ' inverse' → logprob: -9.50182056427002
    7. 'inv' → logprob: -9.75182056427002
    8. '#' → logprob: -9.75182056427002
    9. '.inverse' → logprob: -10.62682056427002
    10. 'from' → logprob: -10.75182056427002

Token 126: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.000433291686931625
    2. 'factor' → logprob: -8.500432968139648
    3. ' inverse' → logprob: -9.250432968139648
    4. 'import' → logprob: -9.750432968139648
    5. 'for' → logprob: -10.125432968139648
    6. 'from' → logprob: -10.875432968139648
    7. '.inverse' → logprob: -12.625432968139648
    8. '#' → logprob: -12.875432968139648
    9. 'inv' → logprob: -13.250432968139648
    10. ',' → logprob: -13.375432968139648

Token 127: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.013831314630806446
    2. '_current' → logprob: -4.38883113861084
    3. '_value' → logprob: -7.76383113861084
    4. '_factor' → logprob: -7.76383113861084
    5. 'current' → logprob: -8.26383113861084
    6. 'table' → logprob: -9.26383113861084
    7. ' =' → logprob: -10.51383113861084
    8. '=' → logprob: -11.13883113861084
    9. '_val' → logprob: -11.51383113861084
    10. '_temp' → logprob: -11.63883113861084

Token 128: '[n' (ID: 15433)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5811565518379211
    2. '[f' → logprob: -0.8311565518379211
    3. '[' → logprob: -5.3311567306518555
    4. ' =' → logprob: -8.456156730651855
    5. '=f' → logprob: -9.706156730651855
    6. '=' → logprob: -10.206156730651855
    7. '=[' → logprob: -11.456156730651855
    8. '[idx' → logprob: -11.706156730651855
    9. '[in' → logprob: -11.956156730651855
    10. '[len' → logprob: -12.081156730651855

Token 129: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0564331205387134e-05
    2. 'value' → logprob: -12.25001049041748
    3. '_size' → logprob: -12.37501049041748
    4. '-' → logprob: -15.00001049041748
    5. ']_' → logprob: -15.25001049041748
    6. '_factor' → logprob: -15.62501049041748
    7. ']' → logprob: -15.62501049041748
    8. '_' → logprob: -16.250011444091797
    9. '_VALUE' → logprob: -16.375011444091797
    10. 'alue' → logprob: -16.375011444091797

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006558468448929489
    2. ']=' → logprob: -7.375655651092529
    3. ' ]' → logprob: -10.875656127929688
    4. '=' → logprob: -13.250656127929688
    5. '],' → logprob: -13.625656127929688
    6. ']
' → logprob: -13.750656127929688
    7. ')' → logprob: -13.875656127929688
    8. ']+=' → logprob: -14.250656127929688
    9. ',' → logprob: -14.375656127929688
    10. '<|end|>' → logprob: -14.500656127929688

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017027945723384619
    2. ' =' → logprob: -6.376702785491943
    3. 'pow' → logprob: -15.001703262329102
    4. '%=' → logprob: -16.8767032623291
    5. '=int' → logprob: -17.2517032623291
    6. '=

' → logprob: -17.2517032623291
    7. '=num' → logprob: -17.3767032623291
    8. '=
' → logprob: -17.3767032623291
    9. '<|end|>' → logprob: -17.5017032623291
    10. '＝' → logprob: -17.5017032623291

Token 132: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.27099974633893e-05
    2. ' pow' → logprob: -11.375012397766113
    3. '(pow' → logprob: -13.750012397766113
    4. '1' → logprob: -16.37501335144043
    5. 'Pow' → logprob: -18.12501335144043
    6. '_pow' → logprob: -18.50001335144043
    7. 'power' → logprob: -19.00001335144043
    8. '   ' → logprob: -19.37501335144043
    9. '3' → logprob: -20.25001335144043
    10. '2' → logprob: -20.50001335144043

Token 133: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.5039136409759521
    2. '_table' → logprob: -1.3789136409759521
    3. 'pow' → logprob: -2.378913640975952
    4. '_value' → logprob: -3.753913640975952
    5. 'current' → logprob: -4.128913879394531
    6. '_factor' → logprob: -5.628913879394531
    7. 'table' → logprob: -5.878913879394531
    8. '_pow' → logprob: -5.878913879394531
    9. 'value' → logprob: -7.878913879394531
    10. '(pow' → logprob: -8.128913879394531

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2153303027153015
    2. 'pow' → logprob: -1.7153303623199463
    3. ' =' → logprob: -4.340330123901367
    4. ' pow' → logprob: -7.590330123901367
    5. '*' → logprob: -8.965330123901367
    6. '(pow' → logprob: -8.965330123901367
    7. '_pow' → logprob: -11.590330123901367
    8. '   ' → logprob: -12.965330123901367
    9. ')' → logprob: -13.340330123901367
    10. 'def' → logprob: -13.340330123901367

Token 135: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00035083942930214107
    2. ' pow' → logprob: -8.000350952148438
    3. '1' → logprob: -11.500350952148438
    4. '(pow' → logprob: -12.250350952148438
    5. '   ' → logprob: -15.000350952148438
    6. ' ' → logprob: -16.375350952148438
    7. '_pow' → logprob: -17.500350952148438
    8. 'Pow' → logprob: -17.750350952148438
    9. '  ' → logprob: -18.625350952148438
    10. '.pow' → logprob: -19.125350952148438

Token 136: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -8.339776832144707e-05
    2. 'factor' → logprob: -9.500082969665527
    3. '(' → logprob: -11.750082969665527
    4. '(n' → logprob: -14.625082969665527
    5. 'f' → logprob: -16.500083923339844
    6. ' factorial' → logprob: -17.875083923339844
    7. '.factor' → logprob: -18.250083923339844
    8. '_factor' → logprob: -18.625083923339844
    9. '(
' → logprob: -19.000083923339844
    10. 'n' → logprob: -19.500083923339844

Token 137: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.7672085165977478
    2. 'factor' → logprob: -0.7672085165977478
    3. 'n' → logprob: -2.7672085762023926
    4. '(n' → logprob: -5.017208576202393
    5. 'mod' → logprob: -7.392208576202393
    6. 'act' → logprob: -7.517208576202393
    7. '_factor' → logprob: -8.517208099365234
    8. 'ctor' → logprob: -9.142208099365234
    9. '(f' → logprob: -9.517208099365234
    10. 'a' → logprob: -9.767208099365234

Token 138: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -1.4259644558478612e-05
    2. 'al' → logprob: -11.250014305114746
    3. 'factor' → logprob: -15.000014305114746
    4. 'orial' → logprob: -15.375014305114746
    5. 'rial' → logprob: -15.625014305114746
    6. 'nal' → logprob: -16.12501335144043
    7. '_factor' → logprob: -16.37501335144043
    8. 'val' → logprob: -16.62501335144043
    9. '_table' → logprob: -16.62501335144043
    10. 'omial' → logprob: -17.00001335144043

Token 139: '_current' (ID: 23981)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.006248357240110636
    2. 'table' → logprob: -5.256248474121094
    3. '_current' → logprob: -7.131248474121094
    4. '[n' → logprob: -8.756248474121094
    5. '_value' → logprob: -10.506248474121094
    6. 'current' → logprob: -11.381248474121094
    7. 'n' → logprob: -12.006248474121094
    8. '_size' → logprob: -12.131248474121094
    9. 'Table' → logprob: -13.131248474121094
    10. '[current' → logprob: -13.506248474121094

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00884217582643032
    2. '(mod' → logprob: -5.0088419914245605
    3. 'mod' → logprob: -6.2588419914245605
    4. ' ,' → logprob: -9.133842468261719
    5. ',n' → logprob: -10.633842468261719
    6. ',
' → logprob: -11.008842468261719
    7. ',module' → logprob: -11.133842468261719
    8. '(' → logprob: -11.633842468261719
    9. ',-' → logprob: -12.008842468261719
    10. ' mod' → logprob: -12.008842468261719

Token 141: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0038853425066918135
    2. '-' → logprob: -6.378885269165039
    3. ' modulus' → logprob: -6.378885269165039
    4. ' mod' → logprob: -8.003885269165039
    5. '-mod' → logprob: -9.128885269165039
    6. ' -' → logprob: -11.128885269165039
    7. '	mod' → logprob: -11.128885269165039
    8. '(mod' → logprob: -12.253885269165039
    9. '.mod' → logprob: -13.378885269165039
    10. ' modul' → logprob: -13.378885269165039

Token 142: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005530327325686812
    2. ' -' → logprob: -7.500553131103516
    3. '-mod' → logprob: -17.250553131103516
    4. ' ' → logprob: -17.750553131103516
    5. 'mod' → logprob: -18.125553131103516
    6. '–' → logprob: -18.500553131103516
    7. '−' → logprob: -18.750553131103516
    8. '```' → logprob: -20.000553131103516
    9. ')' → logprob: -20.500553131103516
    10. '(mod' → logprob: -20.625553131103516

Token 143: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4498052223643754e-05
    2. '-' → logprob: -11.250014305114746
    3. ' ' → logprob: -14.250014305114746
    4. ' -' → logprob: -14.750014305114746
    5. '```' → logprob: -16.125015258789062
    6. '   ' → logprob: -17.562515258789062
    7. '

' → logprob: -17.625015258789062
    8. '
' → logprob: -17.687515258789062
    9. '۲' → logprob: -17.875015258789062
    10. '' → logprob: -18.000015258789062

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. '-' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.500004768371582
    4. '```' → logprob: -16.250003814697266
    5. ' -' → logprob: -16.500003814697266
    6. '
' → logprob: -16.750003814697266
    7. '

' → logprob: -17.437503814697266
    8. '   ' → logprob: -18.125003814697266
    9. '２' → logprob: -18.562503814697266
    10. '' → logprob: -18.625003814697266

Token 145: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001249925117008388
    2. ',' → logprob: -9.25012493133545
    3. ')
' → logprob: -11.12512493133545
    4. ' )' → logprob: -11.25012493133545
    5. ')

' → logprob: -14.62512493133545
    6. '   ' → logprob: -16.125125885009766
    7. ',)' → logprob: -16.375125885009766
    8. '))' → logprob: -16.625125885009766
    9. ')`' → logprob: -16.625125885009766
    10. ')
' → logprob: -16.750125885009766

Token 146: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00023166877508629113
    2. ' modulus' → logprob: -8.375231742858887
    3. '	mod' → logprob: -15.125231742858887
    4. ' mod' → logprob: -15.500231742858887
    5. '   ' → logprob: -15.625231742858887
    6. ')' → logprob: -15.875231742858887
    7. '(mod' → logprob: -16.25023078918457
    8. 'module' → logprob: -16.62523078918457
    9. 'moder' → logprob: -16.87523078918457
    10. 'modifier' → logprob: -16.87523078918457

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008627224713563919
    2. ')
' → logprob: -4.758627414703369
    3. ')

' → logprob: -11.883626937866211
    4. ' )' → logprob: -12.258626937866211
    5. ')
' → logprob: -14.258626937866211
    6. '))' → logprob: -16.38362693786621
    7. 'for' → logprob: -16.38362693786621
    8. ')#' → logprob: -16.50862693786621
    9. ' )
' → logprob: -16.50862693786621
    10. ')`' → logprob: -17.13362693786621

Token 148: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -14.375008583068848
    4. ')' → logprob: -16.250009536743164
    5. '	for' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '``' → logprob: -18.875009536743164
    8. '
' → logprob: -19.625009536743164
    9. 'i' → logprob: -19.750009536743164
    10. 'idx' → logprob: -20.625009536743164

Token 149: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.012674573808908463
    2. 'i' → logprob: -4.512674808502197
    3. ' idx' → logprob: -6.512674808502197
    4. ' i' → logprob: -9.387674331665039
    5. 'rev' → logprob: -10.512674331665039
    6. 'index' → logprob: -11.137674331665039
    7. 'inv' → logprob: -11.762674331665039
    8. 'x' → logprob: -13.387674331665039
    9. 'reverse' → logprob: -13.512674331665039
    10. 'j' → logprob: -14.262674331665039

Token 150: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16022604703903198
    2. ' in' → logprob: -1.9102261066436768
    3. 'range' → logprob: -14.285225868225098
    4. 'n' → logprob: -15.160225868225098
    5. 'down' → logprob: -15.535225868225098
    6. '```' → logprob: -15.535225868225098
    7. '	in' → logprob: -15.910225868225098
    8. 'idx' → logprob: -16.160226821899414
    9. ' ' → logprob: -16.285226821899414
    10. 'reverse' → logprob: -16.285226821899414

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005795120727270842
    2. ' range' → logprob: -5.255795001983643
    3. 're' → logprob: -7.505795001983643
    4. ' reversed' → logprob: -11.6307954788208
    5. '(range' → logprob: -13.5057954788208
    6. 'n' → logprob: -14.3807954788208
    7. 'reverse' → logprob: -15.6307954788208
    8. '   ' → logprob: -16.380794525146484
    9. ' ' → logprob: -16.880794525146484
    10. 'r' → logprob: -17.380794525146484

Token 152: '_func' (ID: 22252)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02360333688557148
    2. '(f' → logprob: -3.7736034393310547
    3. '(range' → logprob: -8.773603439331055
    4. 'factor' → logprob: -9.273603439331055
    5. 'range' → logprob: -9.648603439331055
    6. '_range' → logprob: -10.773603439331055
    7. ' factorial' → logprob: -11.773603439331055
    8. 'n' → logprob: -12.273603439331055
    9. '_factor' → logprob: -12.398603439331055
    10. '(' → logprob: -13.148603439331055

Token 153: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023596010578330606
    2. '(f' → logprob: -8.375235557556152
    3. 'n' → logprob: -12.625235557556152
    4. '(' → logprob: -13.500235557556152
    5. 'factor' → logprob: -14.500235557556152
    6. '(b' → logprob: -16.25023651123047
    7. ' (' → logprob: -16.62523651123047
    8. '(range' → logprob: -17.62523651123047
    9. '((' → logprob: -17.87523651123047
    10. 'b' → logprob: -18.62523651123047

Token 154: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006267757853493094
    2. 'value' → logprob: -7.500626564025879
    3. 'alue' → logprob: -10.000626564025879
    4. '-' → logprob: -10.500626564025879
    5. 'Value' → logprob: -15.250626564025879
    6. '_VALUE' → logprob: -15.625626564025879
    7. 'val' → logprob: -16.125627517700195
    8. '_val' → logprob: -16.375627517700195
    9. '_' → logprob: -16.625627517700195
    10. 'v' → logprob: -16.875627517700195

Token 155: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007730607409030199
    2. ' -' → logprob: -4.882730484008789
    3. ',' → logprob: -9.007730484008789
    4. ' ,' → logprob: -13.257730484008789
    5. ' ' → logprob: -15.132730484008789
    6. '-,' → logprob: -16.75773048400879
    7. ',-' → logprob: -17.75773048400879
    8. '   ' → logprob: -17.88273048400879
    9. '1' → logprob: -17.88273048400879
    10. 'n' → logprob: -18.25773048400879

Token 156: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005647073267027736
    2. ' ' → logprob: -7.5005645751953125
    3. '1' → logprob: -11.500564575195312
    4. '   ' → logprob: -14.250564575195312
    5. 'factor' → logprob: -14.625564575195312
    6. 'b' → logprob: -15.125564575195312
    7. '
' → logprob: -16.250564575195312
    8. '  ' → logprob: -16.250564575195312
    9. ',' → logprob: -16.875564575195312
    10. '-' → logprob: -17.500564575195312

Token 157: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.250017166137695
    3. '1' → logprob: -12.625017166137695
    4. '   ' → logprob: -15.625017166137695
    5. 'b' → logprob: -16.375017166137695
    6. 'factor' → logprob: -16.875017166137695
    7. '
' → logprob: -17.375017166137695
    8. '-' → logprob: -17.750017166137695
    9. '

' → logprob: -17.875017166137695
    10. '  ' → logprob: -18.375017166137695

Token 158: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029058977961540222
    2. ' -' → logprob: -3.9040589332580566
    3. ',' → logprob: -4.779058933258057
    4. '   ' → logprob: -10.404059410095215
    5. ',-' → logprob: -10.654059410095215
    6. '0' → logprob: -11.279059410095215
    7. ' ,' → logprob: -12.404059410095215
    8. '-,' → logprob: -12.654059410095215
    9. ' ' → logprob: -13.529059410095215
    10. '  ' → logprob: -14.279059410095215

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.860340752406046e-05
    2. ' -' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.5000581741333
    4. '  ' → logprob: -16.250059127807617
    5. '-step' → logprob: -16.875059127807617
    6. ' ' → logprob: -17.625059127807617
    7. '```' → logprob: -18.375059127807617
    8. '--' → logprob: -19.500059127807617
    9. '﻿' → logprob: -20.000059127807617
    10. '0' → logprob: -20.125059127807617

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10115522146224976
    2. '-' → logprob: -2.3511552810668945
    3. ' -' → logprob: -6.9761552810668945
    4. ')' → logprob: -11.726155281066895
    5. '):
' → logprob: -12.601155281066895
    6. ' ' → logprob: -14.101155281066895
    7. '```' → logprob: -14.601155281066895
    8. ',' → logprob: -14.851155281066895
    9. '   ' → logprob: -14.976155281066895
    10. '):

' → logprob: -15.226155281066895

Token 161: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024637170135974884
    2. ' -' → logprob: -4.149637222290039
    3. '):
' → logprob: -5.399637222290039
    4. '):' → logprob: -5.524637222290039
    5. '   ' → logprob: -10.774637222290039
    6. '):
' → logprob: -11.274637222290039
    7. ',-' → logprob: -12.274637222290039
    8. ',' → logprob: -12.649637222290039
    9. ' ):' → logprob: -12.649637222290039
    10. ':' → logprob: -12.899637222290039

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001095926738344133
    2. ' inverse' → logprob: -7.501095771789551
    3. 'inverse' → logprob: -7.876095771789551
    4. ':' → logprob: -8.87609577178955
    5. ':
' → logprob: -12.50109577178955
    6. '[in' → logprob: -12.50109577178955
    7. '):
' → logprob: -12.62609577178955
    8. '```' → logprob: -13.00109577178955
    9. '_inverse' → logprob: -13.12609577178955
    10. 'in' → logprob: -13.75109577178955

Token 163: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' (adapté à ' inverse') → logprob: -0.0226634219288826
    2. '   ' → logprob: -4.147663593292236
    3. ' inverse' → logprob: -5.022663593292236
    4. '       ' → logprob: -11.397663116455078
    5. '_inverse' → logprob: -13.272663116455078
    6. '.inverse' → logprob: -13.272663116455078
    7. '
' → logprob: -13.397663116455078
    8. ' ' → logprob: -13.522663116455078
    9. '    
' → logprob: -14.147663116455078
    10. '  ' → logprob: -14.272663116455078

Token 164: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -3.881560041918419e-05
    2. 'table' → logprob: -10.375039100646973
    3. '[' → logprob: -13.375039100646973
    4. '[_' → logprob: -13.625039100646973
    5. '_current' → logprob: -13.750039100646973
    6. '_tab' → logprob: -14.000039100646973
    7. 's' → logprob: -14.500039100646973
    8. '```' → logprob: -15.125039100646973
    9. 'idx' → logprob: -15.250039100646973
    10. 'current' → logprob: -15.250039100646973

Token 165: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.8670179997570813e-05
    2. '[' → logprob: -11.000019073486328
    3. 'idx' → logprob: -13.500019073486328
    4. '[
' → logprob: -16.250019073486328
    5. '[int' → logprob: -16.625019073486328
    6. ' [' → logprob: -16.750019073486328
    7. '
' → logprob: -16.875019073486328
    8. '[...]' → logprob: -17.125019073486328
    9. '	idx' → logprob: -17.250019073486328
    10. '[id' → logprob: -17.375019073486328

Token 166: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009769308380782604
    2. ' -' → logprob: -4.634769439697266
    3. ']' → logprob: -12.009769439697266
    4. '-=' → logprob: -12.759769439697266
    5. '[idx' → logprob: -14.009769439697266
    6. '[' → logprob: -14.134769439697266
    7. '−' → logprob: -14.384769439697266
    8. '_minus' → logprob: -14.384769439697266
    9. '=' → logprob: -14.509769439697266
    10. 'idx' → logprob: -15.134769439697266

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'idx' → logprob: -15.250004768371582
    4. '   ' → logprob: -15.375004768371582
    5. '```' → logprob: -16.875003814697266
    6. ']' → logprob: -17.250003814697266
    7. '  ' → logprob: -18.750003814697266
    8. ' idx' → logprob: -19.250003814697266
    9. '１' → logprob: -19.250003814697266
    10. '    ' → logprob: -19.375003814697266

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'idx' → logprob: -14.500003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '```' → logprob: -16.375003814697266
    6. ']' → logprob: -16.875003814697266
    7. '<|end|>' → logprob: -17.375003814697266
    8. ')' → logprob: -17.625003814697266
    9. '  ' → logprob: -18.312503814697266
    10. ' idx' → logprob: -18.750003814697266

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01496520359069109
    2. '=' → logprob: -4.264965057373047
    3. ']=' → logprob: -7.264965057373047
    4. ' =' → logprob: -9.389965057373047
    5. ')' → logprob: -11.264965057373047
    6. ' ]' → logprob: -12.639965057373047
    7. '   ' → logprob: -14.264965057373047
    8. ')=' → logprob: -14.639965057373047
    9. '[' → logprob: -14.764965057373047
    10. ' ' → logprob: -15.389965057373047

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '*=' → logprob: -16.758615493774414
    4. '＝' → logprob: -17.258615493774414
    5. '=

' → logprob: -18.008615493774414
    6. ' *=' → logprob: -19.258615493774414
    7. '   ' → logprob: -19.508615493774414
    8. ' ' → logprob: -19.633615493774414
    9. '.=' → logprob: -20.008615493774414
    10. ']' → logprob: -20.133615493774414

Token 171: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.03629939630627632
    2. ' inverse' → logprob: -3.411299467086792
    3. 'in' → logprob: -6.536299228668213
    4. '(in' → logprob: -6.786299228668213
    5. ' (' → logprob: -10.286299705505371
    6. '   ' → logprob: -11.411299705505371
    7. '_inverse' → logprob: -12.036299705505371
    8. '(' → logprob: -12.411299705505371
    9. 'factor' → logprob: -12.661299705505371
    10. ' ' → logprob: -13.161299705505371

Token 172: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.08239147812128067
    2. '_table' → logprob: -2.5823915004730225
    3. 'current' → logprob: -5.707391262054443
    4. 'table' → logprob: -8.832391738891602
    5. 'Current' → logprob: -11.332391738891602
    6. '[current' → logprob: -12.582391738891602
    7. '*' → logprob: -13.457391738891602
    8. 'Table' → logprob: -13.832391738891602
    9. 'idx' → logprob: -13.832391738891602
    10. '[' → logprob: -13.957391738891602

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000495605927426368
    2. ' =' → logprob: -7.625495433807373
    3. '*' → logprob: -11.875495910644531
    4. '*=' → logprob: -14.250495910644531
    5. ' *' → logprob: -17.12549591064453
    6. '＝' → logprob: -18.12549591064453
    7. ' ' → logprob: -19.25049591064453
    8. '   ' → logprob: -19.62549591064453
    9. '=
' → logprob: -20.00049591064453
    10. '```' → logprob: -20.37549591064453

Token 174: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.014925165101885796
    2. ' inverse' → logprob: -4.764925003051758
    3. '(in' → logprob: -5.264925003051758
    4. 'in' → logprob: -6.889925003051758
    5. ' (' → logprob: -9.514925003051758
    6. '   ' → logprob: -11.639925003051758
    7. '_inverse' → logprob: -12.764925003051758
    8. 'Inverse' → logprob: -13.139925003051758
    9. '.inverse' → logprob: -13.264925003051758
    10. 'multip' → logprob: -13.327425003051758

Token 175: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.0012107107322663069
    2. 'current' → logprob: -6.751210689544678
    3. '*' → logprob: -10.876211166381836
    4. '_table' → logprob: -11.376211166381836
    5. 'Current' → logprob: -12.126211166381836
    6. 'table' → logprob: -13.501211166381836
    7. '```' → logprob: -14.001211166381836
    8. '_' → logprob: -14.126211166381836
    9. '_CURRENT' → logprob: -15.126211166381836
    10. '[current' → logprob: -15.376211166381836

Token 176: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31326693296432495
    2. '*' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.93826675415039
    4. '   ' → logprob: -13.31326675415039
    5. '*object' → logprob: -14.31326675415039
    6. ' ' → logprob: -15.93826675415039
    7. '  ' → logprob: -16.31326675415039
    8. '    ' → logprob: -16.81326675415039
    9. '＊' → logprob: -17.31326675415039
    10. '	' → logprob: -17.81326675415039

Token 177: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.842555426876061e-06
    2. ' idx' → logprob: -12.375004768371582
    3. '	idx' → logprob: -15.000004768371582
    4. '[idx' → logprob: -15.875004768371582
    5. '(idx' → logprob: -15.875004768371582
    6. '   ' → logprob: -17.2500057220459
    7. '_idx' → logprob: -19.2500057220459
    8. 'id' → logprob: -19.5000057220459
    9. '.idx' → logprob: -20.5000057220459
    10. '  ' → logprob: -21.0000057220459

Token 178: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932530403137207
    2. ' %' → logprob: -0.6932530403137207
    3. '%n' → logprob: -10.318252563476562
    4. '%x' → logprob: -10.443252563476562
    5. '-' → logprob: -11.568252563476562
    6. '%m' → logprob: -11.693252563476562
    7. '%i' → logprob: -11.693252563476562
    8. '%d' → logprob: -12.318252563476562
    9. '%s' → logprob: -12.318252563476562
    10. '%c' → logprob: -13.568252563476562

Token 179: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.054500666621607e-06
    2. '998' → logprob: -13.62500286102295
    3. 'factor' → logprob: -14.00000286102295
    4. '(mod' → logprob: -14.12500286102295
    5. 'module' → logprob: -16.375003814697266
    6. ' modulus' → logprob: -16.750003814697266
    7. '	mod' → logprob: -17.500003814697266
    8. 'modifier' → logprob: -17.625003814697266
    9. '   ' → logprob: -18.250003814697266
    10. ' mod' → logprob: -18.500003814697266

Token 180: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.317211389541626
    2. '+' → logprob: -2.317211389541626
    3. '<|end|>' → logprob: -2.942211389541626
    4. ')' → logprob: -3.192211389541626
    5. '```' → logprob: -3.692211389541626
    6. '#' → logprob: -4.567211151123047
    7. 'n' → logprob: -5.067211151123047
    8. 'for' → logprob: -5.192211151123047
    9. '
' → logprob: -5.317211151123047
    10. '(' → logprob: -5.442211151123047

Token 181: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27542972564697266
    2. ')' → logprob: -1.7754297256469727
    3. '+' → logprob: -3.6504297256469727
    4. 'for' → logprob: -4.275429725646973
    5. '```' → logprob: -5.150429725646973
    6. '<|end|>' → logprob: -5.400429725646973
    7. ' ' → logprob: -5.400429725646973
    8. '#' → logprob: -6.025429725646973
    9. ' for' → logprob: -6.275429725646973
    10. 'n' → logprob: -6.400429725646973

Token 182: ' Calculate' (ID: 38942)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4428871273994446
    2. 'def' → logprob: -1.1928870677947998
    3. ' for' → logprob: -4.317887306213379
    4. 'factor' → logprob: -4.317887306213379
    5. 'range' → logprob: -4.942887306213379
    6. '#' → logprob: -4.942887306213379
    7. ')' → logprob: -5.567887306213379
    8. 'result' → logprob: -5.692887306213379
    9. '   ' → logprob: -6.067887306213379
    10. 'b' → logprob: -6.817887306213379

Token 183: ' sum' (ID: 4215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.850368320941925
    2. 'for' → logprob: -1.4753682613372803
    3. 'result' → logprob: -1.6003682613372803
    4. ' for' → logprob: -3.7253682613372803
    5. 'n' → logprob: -3.8503682613372803
    6. 'factor' → logprob: -4.100368499755859
    7. ' range' → logprob: -4.225368499755859
    8. 'comb' → logprob: -4.225368499755859
    9. ' combination' → logprob: -4.600368499755859
    10. 'def' → logprob: -4.850368499755859

Token 184: ' following' (ID: 3992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009829049929976463
    2. ' for' → logprob: -4.884829044342041
    3. 'range' → logprob: -6.259829044342041
    4. '   ' → logprob: -9.0098295211792
    5. '
' → logprob: -9.1348295211792
    6. '```' → logprob: -10.3848295211792
    7. ' range' → logprob: -11.3848295211792
    8. '(range' → logprob: -11.6348295211792
    9. '_for' → logprob: -12.3848295211792
    10. '_range' → logprob: -12.8848295211792

Token 185: ' pattern' (ID: 8302)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10025271773338318
    2. 'for' → logprob: -2.475252628326416
    3. ' range' → logprob: -4.850252628326416
    4. ' for' → logprob: -6.100252628326416
    5. '(range' → logprob: -7.725252628326416
    6. 'factor' → logprob: -8.225253105163574
    7. 'n' → logprob: -8.850253105163574
    8. 'b' → logprob: -9.475253105163574
    9. '```' → logprob: -9.850253105163574
    10. 'idx' → logprob: -10.100253105163574

Token 186: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0726364329457283
    2. ' for' → logprob: -2.697636365890503
    3. 'range' → logprob: -6.072636604309082
    4. ' range' → logprob: -9.322636604309082
    5. '```' → logprob: -9.447636604309082
    6. '   ' → logprob: -9.447636604309082
    7. 'b' → logprob: -10.697636604309082
    8. 'n' → logprob: -10.822636604309082
    9. 'in' → logprob: -10.947636604309082
    10. ' in' → logprob: -10.947636604309082

Token 187: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001975802006199956
    2. ' for' → logprob: -8.750197410583496
    3. 'range' → logprob: -10.750197410583496
    4. '```' → logprob: -11.000197410583496
    5. ')' → logprob: -15.500197410583496
    6. '   ' → logprob: -15.500197410583496
    7. '
' → logprob: -15.875197410583496
    8. 'idx' → logprob: -16.125198364257812
    9. '_for' → logprob: -16.625198364257812
    10. '+' → logprob: -16.750198364257812

Token 188: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5816434621810913
    2. 'a' → logprob: -1.5816434621810913
    3. ' b' → logprob: -1.8316434621810913
    4. 'b' → logprob: -3.206643581390381
    5. ' n' → logprob: -3.581643581390381
    6. 'n' → logprob: -5.081643581390381
    7. ' ' → logprob: -8.331643104553223
    8. '(a' → logprob: -9.456643104553223
    9. ' range' → logprob: -9.581643104553223
    10. 'range' → logprob: -9.706643104553223

Token 189: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3782830137643032e-05
    2. '_' → logprob: -11.50001335144043
    3. 'value' → logprob: -13.50001335144043
    4. '_val' → logprob: -14.50001335144043
    5. '```' → logprob: -14.87501335144043
    6. 'Value' → logprob: -15.87501335144043
    7. ' _' → logprob: -15.87501335144043
    8. '_Value' → logprob: -16.12501335144043
    9. '>=' → logprob: -16.37501335144043
    10. '_VALUE' → logprob: -16.37501335144043

Token 190: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3734024167060852
    2. '>=' → logprob: -1.2484023571014404
    3. ' ==' → logprob: -5.1234025955200195
    4. ' >' → logprob: -5.1234025955200195
    5. '==' → logprob: -5.7484025955200195
    6. '>' → logprob: -5.7484025955200195
    7. ' <' → logprob: -5.9984025955200195
    8. '+' → logprob: -6.9984025955200195
    9. ' <=' → logprob: -7.2484025955200195
    10. '<=' → logprob: -7.4984025955200195

Token 191: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003911099396646023
    2. ' b' → logprob: -6.128911018371582
    3. 'a' → logprob: -6.378911018371582
    4. ' a' → logprob: -11.503911018371582
    5. '(b' → logprob: -11.753911018371582
    6. 'n' → logprob: -12.503911018371582
    7. '1' → logprob: -12.878911018371582
    8. ' ' → logprob: -13.878911018371582
    9. '(a' → logprob: -14.628911018371582
    10. ' (' → logprob: -15.128911018371582

Token 192: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.909333023941144e-05
    2. '>=' → logprob: -10.125068664550781
    3. '_' → logprob: -12.000068664550781
    4. '>' → logprob: -12.000068664550781
    5. '+' → logprob: -12.125068664550781
    6. 'value' → logprob: -12.250068664550781
    7. ' >=' → logprob: -12.625068664550781
    8. '_val' → logprob: -14.125068664550781
    9. '```' → logprob: -15.125068664550781
    10. 'Value' → logprob: -15.250068664550781

Token 193: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4149121940135956
    2. ' >=' → logprob: -1.789912223815918
    3. '<' → logprob: -2.664912223815918
    4. '+' → logprob: -3.164912223815918
    5. ' <' → logprob: -3.539912223815918
    6. '-' → logprob: -4.539912223815918
    7. ' +' → logprob: -5.039912223815918
    8. '<=' → logprob: -5.164912223815918
    9. '>' → logprob: -5.414912223815918
    10. ' <=' → logprob: -6.914912223815918

Token 194: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001307617872953415
    2. 'a' → logprob: -7.376307487487793
    3. '0' → logprob: -7.876307487487793
    4. ' ' → logprob: -8.626307487487793
    5. '2' → logprob: -9.251307487487793
    6. ' a' → logprob: -10.876307487487793
    7. '>' → logprob: -13.501307487487793
    8. '```' → logprob: -13.626307487487793
    9. '   ' → logprob: -13.876307487487793
    10. 'n' → logprob: -14.251307487487793

Token 195: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0011136623797938228
    2. '>' → logprob: -7.0011138916015625
    3. '>=' → logprob: -10.001113891601562
    4. '_' → logprob: -10.126113891601562
    5. ' >' → logprob: -10.251113891601562
    6. '+' → logprob: -10.251113891601562
    7. ' >=' → logprob: -11.001113891601562
    8. '_val' → logprob: -12.001113891601562
    9. '```' → logprob: -12.251113891601562
    10. '-' → logprob: -12.751113891601562

Token 196: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9575929045677185
    2. '>=' → logprob: -1.0825929641723633
    3. ' >=' → logprob: -2.4575929641723633
    4. '<' → logprob: -2.5825929641723633
    5. ' >' → logprob: -3.0825929641723633
    6. ' <' → logprob: -3.3325929641723633
    7. '-' → logprob: -3.7075929641723633
    8. '<=' → logprob: -5.332592964172363
    9. ' ' → logprob: -6.707592964172363
    10. ' <=' → logprob: -6.707592964172363

Token 197: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6362863183021545
    2. ' >' → logprob: -1.2612862586975098
    3. '>' → logprob: -1.7612862586975098
    4. ' ==' → logprob: -5.76128625869751
    5. ' !=' → logprob: -5.88628625869751
    6. ' <=' → logprob: -6.01128625869751
    7. ' <' → logprob: -6.38628625869751
    8. '   ' → logprob: -6.76128625869751
    9. ' :' → logprob: -6.76128625869751
    10. ' >=' → logprob: -7.13628625869751

Token 198: ' k' (ID: 372)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.035293698310852
    2. ' for' → logprob: -1.660293698310852
    3. ':' → logprob: -1.910293698310852
    4. 'result' → logprob: -1.910293698310852
    5. 'for' → logprob: -2.6602935791015625
    6. ':
' → logprob: -3.5352935791015625
    7. ' range' → logprob: -3.5352935791015625
    8. '   ' → logprob: -4.7852935791015625
    9. 'range' → logprob: -5.2852935791015625
    10. '>' → logprob: -6.0352935791015625

Token 199: '_limit' (ID: 34361)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049375019967556
    2. '=' → logprob: -3.049375057220459
    3. '_' → logprob: -7.924375057220459
    4. ' ' → logprob: -9.5493745803833
    5. '_range' → logprob: -9.9243745803833
    6. '_space' → logprob: -9.9243745803833
    7. ',' → logprob: -10.0493745803833
    8. ' in' → logprob: -10.4243745803833
    9. ' +=' → logprob: -10.5493745803833
    10. ' _' → logprob: -10.7993745803833

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694323062896729
    2. '=' → logprob: -2.1269431114196777
    3. '=k' → logprob: -12.126943588256836
    4. ',' → logprob: -12.626943588256836
    5. ' ' → logprob: -13.376943588256836
    6. '=int' → logprob: -14.251943588256836
    7. '=n' → logprob: -14.501943588256836
    8. 'k' → logprob: -14.501943588256836
    9. '   ' → logprob: -14.751943588256836
    10. 'range' → logprob: -14.876943588256836

Token 201: ' min' (ID: 1349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11457201838493347
    2. ' n' → logprob: -2.614572048187256
    3. 'min' → logprob: -3.739572048187256
    4. ' min' → logprob: -5.114572048187256
    5. 'b' → logprob: -6.114572048187256
    6. '(n' → logprob: -6.739572048187256
    7. 'range' → logprob: -7.864572048187256
    8. '1' → logprob: -7.989572048187256
    9. ' b' → logprob: -8.489571571350098
    10. '0' → logprob: -8.739571571350098

Token 202: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5999254584312439
    2. '(b' → logprob: -0.9749254584312439
    3. '(a' → logprob: -3.2249255180358887
    4. '(' → logprob: -3.5999255180358887
    5. '(
' → logprob: -5.349925518035889
    6. ' (' → logprob: -6.724925518035889
    7. '(k' → logprob: -7.599925518035889
    8. '((' → logprob: -8.34992504119873
    9. 'b' → logprob: -9.84992504119873
    10. 'a' → logprob: -9.97492504119873

Token 203: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00020711649267468601
    2. ',' → logprob: -8.87520694732666
    3. '_,' → logprob: -10.87520694732666
    4. ',_' → logprob: -10.87520694732666
    5. 'value' → logprob: -11.75020694732666
    6. ' ,' → logprob: -12.62520694732666
    7. '+' → logprob: -13.00020694732666
    8. 'n' → logprob: -13.50020694732666
    9. ')' → logprob: -13.62520694732666
    10. '_' → logprob: -13.62520694732666

Token 204: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08899377286434174
    2. ' ,' → logprob: -3.338993787765503
    3. ' +' → logprob: -3.463993787765503
    4. '+' → logprob: -4.213993549346924
    5. ',b' → logprob: -5.963993549346924
    6. '+b' → logprob: -8.088994026184082
    7. '   ' → logprob: -8.463994026184082
    8. ' -' → logprob: -8.963994026184082
    9. '-' → logprob: -9.463994026184082
    10. ',k' → logprob: -9.963994026184082

Token 205: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03978341072797775
    2. ' b' → logprob: -3.789783477783203
    3. '1' → logprob: -4.539783477783203
    4. 'n' → logprob: -5.539783477783203
    5. ' n' → logprob: -7.539783477783203
    6. '(n' → logprob: -8.039783477783203
    7. '(b' → logprob: -8.289783477783203
    8. ' ' → logprob: -8.914783477783203
    9. ',' → logprob: -9.289783477783203
    10. ' (' → logprob: -9.664783477783203

Token 206: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013976969756186008
    2. '1' → logprob: -4.76397705078125
    3. ' b' → logprob: -5.63897705078125
    4. 'n' → logprob: -6.88897705078125
    5. '(b' → logprob: -9.01397705078125
    6. ',' → logprob: -9.01397705078125
    7. '(n' → logprob: -9.26397705078125
    8. ',b' → logprob: -9.38897705078125
    9. 'range' → logprob: -9.51397705078125
    10. 'a' → logprob: -10.01397705078125

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015084865503013134
    2. ' ,' → logprob: -4.390084743499756
    3. ')' → logprob: -6.890084743499756
    4. ',b' → logprob: -7.515084743499756
    5. ' +' → logprob: -8.140085220336914
    6. '+' → logprob: -8.515085220336914
    7. ',k' → logprob: -8.765085220336914
    8. ',n' → logprob: -9.140085220336914
    9. '   ' → logprob: -9.640085220336914
    10. ',
' → logprob: -9.765085220336914

Token 208: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07348665595054626
    2. 'n' → logprob: -2.698486566543579
    3. ' b' → logprob: -6.073486804962158
    4. ' n' → logprob: -7.198486804962158
    5. 'mod' → logprob: -8.823486328125
    6. '   ' → logprob: -9.573486328125
    7. '(n' → logprob: -9.698486328125
    8. ')' → logprob: -9.823486328125
    9. ' ' → logprob: -10.073486328125
    10. 'a' → logprob: -10.198486328125

Token 209: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.360996485454962e-05
    2. '_' → logprob: -11.0000638961792
    3. ' -' → logprob: -11.7500638961792
    4. 'b' → logprob: -11.8750638961792
    5. '-' → logprob: -11.8750638961792
    6. ' _' → logprob: -12.0000638961792
    7. 'value' → logprob: -12.3750638961792
    8. '_b' → logprob: -12.7500638961792
    9. '-_' → logprob: -12.8750638961792
    10. ')' → logprob: -13.2500638961792

Token 210: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14262740314006805
    2. '-' → logprob: -2.142627477645874
    3. '+' → logprob: -4.892627239227295
    4. '-b' → logprob: -5.392627239227295
    5. ' +' → logprob: -6.517627239227295
    6. ',' → logprob: -7.017627239227295
    7. ')' → logprob: -7.017627239227295
    8. ' ' → logprob: -9.767627716064453
    9. 'b' → logprob: -9.892627716064453
    10. ' ,' → logprob: -10.392627716064453

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004902481101453304
    2. ' b' → logprob: -5.379902362823486
    3. 'a' → logprob: -8.379902839660645
    4. '(b' → logprob: -11.129902839660645
    5. '   ' → logprob: -11.379902839660645
    6. ' ' → logprob: -12.254902839660645
    7. '	b' → logprob: -12.504902839660645
    8. ' a' → logprob: -12.504902839660645
    9. '1' → logprob: -12.879902839660645
    10. ' (' → logprob: -12.879902839660645

Token 212: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.034592388459714e-06
    2. 'value' → logprob: -12.250005722045898
    3. ')' → logprob: -15.625005722045898
    4. '-value' → logprob: -15.750005722045898
    5. '_' → logprob: -15.875005722045898
    6. '_VALUE' → logprob: -16.2500057220459
    7. 'a' → logprob: -16.2500057220459
    8. '_a' → logprob: -16.2500057220459
    9. 'alue' → logprob: -16.6250057220459
    10. 'Value' → logprob: -16.7500057220459

Token 213: ')
' (ID: 446)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5793518424034119
    2. '-' → logprob: -1.3293519020080566
    3. ')' → logprob: -1.9543519020080566
    4. '+' → logprob: -3.5793519020080566
    5. ' +' → logprob: -6.079351902008057
    6. '-a' → logprob: -6.204351902008057
    7. '-k' → logprob: -8.204351425170898
    8. '-n' → logprob: -8.329351425170898
    9. '))' → logprob: -8.954351425170898
    10. '-b' → logprob: -8.954351425170898

Token 214: 'else' (ID: 2807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6248598098754883
    2. ')' → logprob: -1.6248598098754883
    3. '
' → logprob: -2.6248598098754883
    4. 'for' → logprob: -2.7498598098754883
    5. ')
' → logprob: -2.9998598098754883
    6. ':' → logprob: -3.7498598098754883
    7. ' for' → logprob: -4.374859809875488
    8. '    
' → logprob: -4.749859809875488
    9. '):' → logprob: -4.999859809875488
    10. '):
' → logprob: -5.124859809875488

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013145994395017624
    2. ':
' → logprob: -4.388145923614502
    3. '   ' → logprob: -7.388145923614502
    4. ' :' → logprob: -11.51314640045166
    5. ':return' → logprob: -13.76314640045166
    6. ':
' → logprob: -14.01314640045166
    7. '=' → logprob: -14.01314640045166
    8. '{' → logprob: -14.01314640045166
    9. ' :
' → logprob: -14.01314640045166
    10. '    ' → logprob: -14.63814640045166

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039429131895303726
    2. ' k' → logprob: -3.414429187774658
    3. 'k' → logprob: -5.164429187774658
    4. '```' → logprob: -10.9144287109375
    5. '0' → logprob: -11.7894287109375
    6. '
' → logprob: -12.5394287109375
    7. 'n' → logprob: -13.0394287109375
    8. 'b' → logprob: -13.1644287109375
    9. '	k' → logprob: -13.5394287109375
    10. ' b' → logprob: -13.5394287109375

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.01818517968058586
    2. ' k' → logprob: -4.393185138702393
    3. '   ' → logprob: -5.768185138702393
    4. 'print' → logprob: -6.143185138702393
    5. '0' → logprob: -8.51818561553955
    6. ' print' → logprob: -10.39318561553955
    7. 'exit' → logprob: -10.39318561553955
    8. 'result' → logprob: -10.51818561553955
    9. '1' → logprob: -10.89318561553955
    10. 'for' → logprob: -11.39318561553955

Token 218: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0015624772058799863
    2. '=' → logprob: -6.876562595367432
    3. ' =' → logprob: -7.751562595367432
    4. '_' → logprob: -10.501562118530273
    5. 'limit' → logprob: -10.501562118530273
    6. '_value' → logprob: -10.876562118530273
    7. ':' → logprob: -11.376562118530273
    8. '_LIMIT' → logprob: -13.126562118530273
    9. '   ' → logprob: -13.376562118530273
    10. '_limits' → logprob: -13.376562118530273

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760385990142822
    2. ' =' → logprob: -0.8260385990142822
    3. ':' → logprob: -9.951038360595703
    4. '   ' → logprob: -10.326038360595703
    5. '=k' → logprob: -11.201038360595703
    6. 'k' → logprob: -13.576038360595703
    7. ' ' → logprob: -14.076038360595703
    8. '+=' → logprob: -14.951038360595703
    9. ' +=' → logprob: -15.076038360595703
    10. '=int' → logprob: -15.451038360595703

Token 220: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1026841476559639
    2. 'a' → logprob: -3.102684259414673
    3. 'min' → logprob: -3.727684259414673
    4. '1' → logprob: -3.977684259414673
    5. 'b' → logprob: -4.977684020996094
    6. ' min' → logprob: -6.852684020996094
    7. ' ' → logprob: -7.227684020996094
    8. ' a' → logprob: -7.602684020996094
    9. 'n' → logprob: -8.352684020996094
    10. 'max' → logprob: -8.602684020996094

Token 221: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.2729995988775045e-06
    2. 'value' → logprob: -12.875006675720215
    3. '+' → logprob: -13.000006675720215
    4. '_' → logprob: -13.750006675720215
    5. 'alue' → logprob: -16.3750057220459
    6. '_limit' → logprob: -17.3750057220459
    7. 'n' → logprob: -17.7500057220459
    8. '\' → logprob: -17.8750057220459
    9. 'Value' → logprob: -18.0000057220459
    10. ' _' → logprob: -18.0000057220459

Token 222: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12877017259597778
    2. 'for' → logprob: -2.378770112991333
    3. ' for' → logprob: -4.628770351409912
    4. ')' → logprob: -5.253770351409912
    5. '+
' → logprob: -5.503770351409912
    6. '<|end|>' → logprob: -5.753770351409912
    7. '+k' → logprob: -6.503770351409912
    8. '
' → logprob: -7.003770351409912
    9. ' +' → logprob: -7.128770351409912
    10. ':' → logprob: -7.628770351409912

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000708501785993576
    2. ' ' → logprob: -7.37570858001709
    3. '2' → logprob: -9.62570858001709
    4. '0' → logprob: -11.12570858001709
    5. '   ' → logprob: -14.75070858001709
    6. '```' → logprob: -15.00070858001709
    7. '+' → logprob: -16.750707626342773
    8. 'b' → logprob: -16.750707626342773
    9. '  ' → logprob: -17.438207626342773
    10. '3' → logprob: -17.500707626342773

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.827200897736475e-05
    2. '0' → logprob: -10.000078201293945
    3. ' ' → logprob: -10.625078201293945
    4. '2' → logprob: -11.750078201293945
    5. 'b' → logprob: -15.000078201293945
    6. '   ' → logprob: -16.125078201293945
    7. '```' → logprob: -16.500078201293945
    8. 'a' → logprob: -16.750078201293945
    9. '3' → logprob: -17.937578201293945
    10. '-' → logprob: -18.250078201293945

Token 225: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1262667030096054
    2. ':' → logprob: -3.1262667179107666
    3. ' for' → logprob: -3.5012667179107666
    4. '+' → logprob: -4.5012664794921875
    5. ')' → logprob: -4.6262664794921875
    6. '<|end|>' → logprob: -4.7512664794921875
    7. '
' → logprob: -6.1262664794921875
    8. '   ' → logprob: -6.2512664794921875
    9. '#' → logprob: -6.2512664794921875
    10. '(' → logprob: -6.5012664794921875

Token 226: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.755678961984813e-05
    2. ' for' → logprob: -9.750077247619629
    3. 'k' → logprob: -11.625077247619629
    4. '
' → logprob: -12.500077247619629
    5. ')' → logprob: -13.125077247619629
    6. '```' → logprob: -13.250077247619629
    7. 'range' → logprob: -13.250077247619629
    8. 'def' → logprob: -15.000077247619629
    9. 'result' → logprob: -15.250077247619629
    10. 'print' → logprob: -16.000078201293945

Token 227: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.01676119491457939
    2. 'k' → logprob: -4.141761302947998
    3. ' _' → logprob: -7.641761302947998
    4. '_' → logprob: -8.76676082611084
    5. ' i' → logprob: -10.01676082611084
    6. '_k' → logprob: -10.14176082611084
    7. 'i' → logprob: -12.89176082611084
    8. ' idx' → logprob: -13.51676082611084
    9. ' ' → logprob: -14.26676082611084
    10. '	k' → logprob: -14.76676082611084

Token 228: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029773633927106857
    2. 'in' → logprob: -3.529773712158203
    3. ' ' → logprob: -11.279773712158203
    4. 'n' → logprob: -12.904773712158203
    5. 'space' → logprob: -13.404773712158203
    6. '	in' → logprob: -13.529773712158203
    7. '_' → logprob: -13.779773712158203
    8. 'range' → logprob: -14.279773712158203
    9. '_in' → logprob: -14.404773712158203
    10. ' _' → logprob: -14.779773712158203

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020582882687449455
    2. 'in' → logprob: -3.895582914352417
    3. ' ' → logprob: -10.520583152770996
    4. ',' → logprob: -12.145583152770996
    5. 'range' → logprob: -12.770583152770996
    6. ')' → logprob: -13.270583152770996
    7. '_' → logprob: -14.145583152770996
    8. 'space' → logprob: -14.395583152770996
    9. 'k' → logprob: -15.145583152770996
    10. '	in' → logprob: -15.395583152770996

Token 230: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3484678268432617
    2. 'range' → logprob: -1.2234678268432617
    3. '(range' → logprob: -11.348467826843262
    4. '	range' → logprob: -12.223467826843262
    5. ' ' → logprob: -13.223467826843262
    6. 'k' → logprob: -14.098467826843262
    7. '```' → logprob: -14.348467826843262
    8. ' k' → logprob: -14.348467826843262
    9. 'space' → logprob: -14.848467826843262
    10. ' xrange' → logprob: -15.285967826843262

Token 231: '_func' (ID: 22252)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03849446028470993
    2. '(' → logprob: -3.288494348526001
    3. '(range' → logprob: -7.91349458694458
    4. '(b' → logprob: -10.538494110107422
    5. '(a' → logprob: -10.538494110107422
    6. 'k' → logprob: -11.163494110107422
    7. ' (' → logprob: -11.413494110107422
    8. 'range' → logprob: -12.913494110107422
    9. '(r' → logprob: -13.413494110107422
    10. ' k' → logprob: -13.788494110107422

Token 232: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.004078997299075127
    2. '(' → logprob: -5.5040788650512695
    3. 'k' → logprob: -15.25407886505127
    4. '(b' → logprob: -15.75407886505127
    5. '(
' → logprob: -16.754079818725586
    6. '(a' → logprob: -17.629079818725586
    7. '((' → logprob: -18.254079818725586
    8. '1' → logprob: -18.254079818725586
    9. '(n' → logprob: -18.254079818725586
    10. '(r' → logprob: -18.379079818725586

Token 233: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0008372656302526593
    2. 'limit' → logprob: -7.125837326049805
    3. 'imit' → logprob: -11.250837326049805
    4. 'k' → logprob: -12.125837326049805
    5. '(k' → logprob: -12.125837326049805
    6. '_k' → logprob: -12.375837326049805
    7. '(' → logprob: -14.000837326049805
    8. ')' → logprob: -14.375837326049805
    9. 'Limit' → logprob: -14.375837326049805
    10. 'lim' → logprob: -15.000837326049805

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026423722505569458
    2. '):
' → logprob: -3.651423692703247
    3. ':' → logprob: -9.151423454284668
    4. ' ):' → logprob: -11.776423454284668
    5. '):
' → logprob: -11.901423454284668
    6. '):

' → logprob: -14.526423454284668
    7. '   ' → logprob: -14.651423454284668
    8. ')' → logprob: -14.901423454284668
    9. ',' → logprob: -15.151423454284668
    10. ' ):
' → logprob: -15.276423454284668

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016010083258152008
    2. 'result' → logprob: -4.516010284423828
    3. ' result' → logprob: -5.516010284423828
    4. ':' → logprob: -8.391010284423828
    5. '       ' → logprob: -8.641010284423828
    6. '```' → logprob: -8.641010284423828
    7. 'factor' → logprob: -9.641010284423828
    8. '):
' → logprob: -9.766010284423828
    9. '    
' → logprob: -10.141010284423828
    10. ':
' → logprob: -10.516010284423828

Token 236: ' q' (ID: 2335)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.0033873319625854
    2. 'term' → logprob: -1.6283873319625854
    3. 'temp' → logprob: -1.8783873319625854
    4. 'numer' → logprob: -2.003387451171875
    5. 'num' → logprob: -3.253387451171875
    6. 'part' → logprob: -4.253387451171875
    7. 'if' → logprob: -4.378387451171875
    8. 'c' → logprob: -4.503387451171875
    9. 'com' → logprob: -4.628387451171875
    10. 'result' → logprob: -4.753387451171875

Token 237: '_value' (ID: 6734)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6730325222015381
    2. ' =' → logprob: -1.298032522201538
    3. '=' → logprob: -1.923032522201538
    4. '_value' → logprob: -3.923032522201538
    5. 'ual' → logprob: -4.673032760620117
    6. '_val' → logprob: -4.923032760620117
    7. 'k' → logprob: -5.173032760620117
    8. '_result' → logprob: -5.173032760620117
    9. '   ' → logprob: -5.923032760620117
    10. 'uant' → logprob: -5.923032760620117

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326124668121338
    2. ' =' → logprob: -0.7576124668121338
    3. ',' → logprob: -12.132612228393555
    4. ' ' → logprob: -13.382612228393555
    5. '=k' → logprob: -13.507612228393555
    6. 'k' → logprob: -13.757612228393555
    7. ')' → logprob: -14.632612228393555
    8. '=
' → logprob: -14.757612228393555
    9. '   ' → logprob: -14.757612228393555
    10. ' =
' → logprob: -15.382612228393555

Token 239: ' n' (ID: 297)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.03973197191953659
    2. ' factorial' → logprob: -3.789731979370117
    3. '(f' → logprob: -4.539731979370117
    4. ' (' → logprob: -6.789731979370117
    5. '(
' → logprob: -6.914731979370117
    6. '(n' → logprob: -6.914731979370117
    7. '(' → logprob: -7.164731979370117
    8. 'fact' → logprob: -8.039731979370117
    9. '(k' → logprob: -8.539731979370117
    10. '(com' → logprob: -8.539731979370117

Token 240: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00014847563579678535
    2. '_factor' → logprob: -9.25014877319336
    3. '_idx' → logprob: -10.25014877319336
    4. '_' → logprob: -12.37514877319336
    5. '_k' → logprob: -13.50014877319336
    6. '_val' → logprob: -13.50014877319336
    7. 'value' → logprob: -13.50014877319336
    8. 'k' → logprob: -14.00014877319336
    9. ' _' → logprob: -14.12514877319336
    10. '_index' → logprob: -14.37514877319336

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023870395496487617
    2. '-' → logprob: -4.023870468139648
    3. '-k' → logprob: -5.648870468139648
    4. ' *' → logprob: -6.773870468139648
    5. '*' → logprob: -8.023870468139648
    6. '<|end|>' → logprob: -8.273870468139648
    7. '   ' → logprob: -9.273870468139648
    8. ' ' → logprob: -9.398870468139648
    9. ',' → logprob: -9.523870468139648
    10. 'k' → logprob: -10.773870468139648

Token 242: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20124226808547974
    2. '1' → logprob: -2.326242208480835
    3. 'k' → logprob: -2.701242208480835
    4. 'a' → logprob: -4.076242446899414
    5. ' b' → logprob: -7.951242446899414
    6. ' k' → logprob: -10.201242446899414
    7. '   ' → logprob: -10.451242446899414
    8. ' ' → logprob: -10.701242446899414
    9. ' a' → logprob: -11.076242446899414
    10. '2' → logprob: -11.201242446899414

Token 243: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00031985383247956634
    2. '_idx' → logprob: -8.125319480895996
    3. 'value' → logprob: -11.000319480895996
    4. '_val' → logprob: -13.125319480895996
    5. '-value' → logprob: -13.625319480895996
    6. 'idx' → logprob: -13.750319480895996
    7. '_k' → logprob: -14.125319480895996
    8. 'k' → logprob: -14.250319480895996
    9. '_index' → logprob: -15.375319480895996
    10. 'Value' → logprob: -15.625319480895996

Token 244: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3955738842487335
    2. ' -' → logprob: -1.1455738544464111
    3. '+' → logprob: -5.77057409286499
    4. '-k' → logprob: -5.89557409286499
    5. '<|end|>' → logprob: -6.89557409286499
    6. '-q' → logprob: -8.145573616027832
    7. 'q' → logprob: -8.270573616027832
    8. ' +' → logprob: -8.520573616027832
    9. '
' → logprob: -8.520573616027832
    10. ',' → logprob: -8.645573616027832

Token 245: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010795250535011292
    2. '1' → logprob: -4.7607951164245605
    3. 'a' → logprob: -6.1357951164245605
    4. ' k' → logprob: -11.885795593261719
    5. '
' → logprob: -13.385795593261719
    6. '-' → logprob: -13.760795593261719
    7. '(k' → logprob: -14.010795593261719
    8. '2' → logprob: -14.260795593261719
    9. 'q' → logprob: -14.510795593261719
    10. '-k' → logprob: -14.760795593261719

Token 246: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0012264199322089553
    2. 'idx' → logprob: -7.251226425170898
    3. '_value' → logprob: -7.626226425170898
    4. 'value' → logprob: -11.126226425170898
    5. 'x' → logprob: -12.126226425170898
    6. 'k' → logprob: -12.626226425170898
    7. 'Idx' → logprob: -13.876226425170898
    8. '-' → logprob: -14.001226425170898
    9. '*' → logprob: -14.126226425170898
    10. '+' → logprob: -14.626226425170898

Token 247: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.540364146232605
    2. '
' → logprob: -2.1653642654418945
    3. '   ' → logprob: -2.2903642654418945
    4. '+' → logprob: -2.7903642654418945
    5. 'factor' → logprob: -2.9153642654418945
    6. ')
' → logprob: -3.6653642654418945
    7. 'if' → logprob: -4.6653642654418945
    8. 'q' → logprob: -4.7903642654418945
    9. '-' → logprob: -5.4153642654418945
    10. ' ' → logprob: -5.5403642654418945

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010998018842656165
    2. 'a' → logprob: -9.750109672546387
    3. ' ' → logprob: -10.250109672546387
    4. '2' → logprob: -11.875109672546387
    5. '   ' → logprob: -12.125109672546387
    6. '-' → logprob: -13.375109672546387
    7. 'k' → logprob: -14.125109672546387
    8. ' a' → logprob: -15.000109672546387
    9. 'q' → logprob: -15.500109672546387
    10. '  ' → logprob: -15.500109672546387

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -11.375025749206543
    3. 'a' → logprob: -11.500025749206543
    4. '2' → logprob: -13.000025749206543
    5. '   ' → logprob: -13.250025749206543
    6. '  ' → logprob: -16.75002670288086
    7. 'k' → logprob: -17.00002670288086
    8. '
' → logprob: -17.25002670288086
    9. '```' → logprob: -17.50002670288086
    10. '-' → logprob: -17.62502670288086

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6963725686073303
    2. ')' → logprob: -1.9463725090026855
    3. '
' → logprob: -2.4463725090026855
    4. 'q' → logprob: -2.4463725090026855
    5. 'if' → logprob: -2.8213725090026855
    6. ')
' → logprob: -3.4463725090026855
    7. 'comb' → logprob: -4.5713725090026855
    8. 'result' → logprob: -4.5713725090026855
    9. '    
' → logprob: -4.6963725090026855
    10. 'factor' → logprob: -4.6963725090026855

Token 251: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2778779864311218
    2. '   ' → logprob: -2.5278780460357666
    3. 'factor' → logprob: -3.0278780460357666
    4. 'if' → logprob: -3.1528780460357666
    5. '<|end|>' → logprob: -3.6528780460357666
    6. '*' → logprob: -5.0278778076171875
    7. '*q' → logprob: -5.0278778076171875
    8. ' if' → logprob: -5.4028778076171875
    9. 'inverse' → logprob: -5.4028778076171875
    10. ')
' → logprob: -5.6528778076171875

Token 252: ' term' (ID: 2914)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20686256885528564
    2. 'comb' → logprob: -2.831862449645996
    3. 'if' → logprob: -3.081862449645996
    4. 'term' (adapté à ' term') → logprob: -3.581862449645996
    5. 'q' → logprob: -3.706862449645996
    6. 'numer' → logprob: -4.831862449645996
    7. 'factor' → logprob: -5.456862449645996
    8. 'temp' → logprob: -6.206862449645996
    9. 'r' → logprob: -6.456862449645996
    10. 'res' → logprob: -6.581862449645996

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025239735841751
    2. '=' → logprob: -2.350252389907837
    3. '_factor' → logprob: -10.850252151489258
    4. ' ' → logprob: -11.975252151489258
    5. '_' → logprob: -12.225252151489258
    6. '_value' → logprob: -12.475252151489258
    7. '   ' → logprob: -13.350252151489258
    8. 's' → logprob: -13.600252151489258
    9. '_val' → logprob: -13.600252151489258
    10. '_sum' → logprob: -13.850252151489258

Token 254: ' (' (ID: 350)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.08552029728889465
    2. '(f' → logprob: -2.7105202674865723
    3. ' factorial' → logprob: -4.585520267486572
    4. '(' → logprob: -6.085520267486572
    5. 'fact' → logprob: -6.585520267486572
    6. ' (' → logprob: -7.210520267486572
    7. '(
' → logprob: -8.21052074432373
    8. '((' → logprob: -8.46052074432373
    9. ' factor' → logprob: -9.33552074432373
    10. 'pow' → logprob: -9.83552074432373

Token 255: 'b' (ID: 65)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.003189478302374482
    2. ' factorial' → logprob: -5.878189563751221
    3. 'fact' → logprob: -9.003189086914062
    4. '(f' → logprob: -9.128189086914062
    5. 'pow' → logprob: -10.253189086914062
    6. '(' → logprob: -10.253189086914062
    7. '   ' → logprob: -11.128189086914062
    8. ' factor' → logprob: -11.253189086914062
    9. 'comb' → logprob: -11.503189086914062
    10. '(
' → logprob: -11.753189086914062

Token 256: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.4272752852994017e-05
    2. 'alue' → logprob: -11.87502384185791
    3. '_factor' → logprob: -12.00002384185791
    4. ')' → logprob: -12.50002384185791
    5. ')_' → logprob: -13.37502384185791
    6. 'value' → logprob: -13.37502384185791
    7. '_idx' → logprob: -14.00002384185791
    8. '_val' → logprob: -14.37502384185791
    9. '_VALUE' → logprob: -14.50002384185791
    10. '_' → logprob: -14.87502384185791

Token 257: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4351591467857361
    2. ' +' → logprob: -1.8101592063903809
    3. '+' → logprob: -2.185159206390381
    4. '*' → logprob: -3.060159206390381
    5. ')' → logprob: -3.935159206390381
    6. ' ' → logprob: -6.310159206390381
    7. ',' → logprob: -6.810159206390381
    8. '   ' → logprob: -7.060159206390381
    9. ' -' → logprob: -7.060159206390381
    10. ' *
' → logprob: -7.185159206390381

Token 258: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5804415941238403
    2. 'k' → logprob: -0.8304415941238403
    3. ' k' → logprob: -6.580441474914551
    4. 'q' → logprob: -6.830441474914551
    5. '0' → logprob: -7.080441474914551
    6. ' ' → logprob: -7.205441474914551
    7. ')' → logprob: -8.20544147491455
    8. '   ' → logprob: -10.20544147491455
    9. '+' → logprob: -10.45544147491455
    10. '
' → logprob: -11.20544147491455

Token 259: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.77627644513268e-06
    2. '_value' → logprob: -12.375008583068848
    3. 'idx' → logprob: -12.750008583068848
    4. ')' → logprob: -14.500008583068848
    5. ')_' → logprob: -15.125008583068848
    6. '_ix' → logprob: -15.500008583068848
    7. '_idxs' → logprob: -15.625008583068848
    8. 'x' → logprob: -16.000009536743164
    9. '_index' → logprob: -16.750009536743164
    10. '_val' → logprob: -16.750009536743164

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011876791715621948
    2. ' )' → logprob: -4.886876583099365
    3. ' +' → logprob: -6.261876583099365
    4. '+' → logprob: -6.261876583099365
    5. '   ' → logprob: -8.636877059936523
    6. ')*' → logprob: -9.386877059936523
    7. ')
' → logprob: -9.761877059936523
    8. '*' → logprob: -10.011877059936523
    9. ' *' → logprob: -10.511877059936523
    10. ' ' → logprob: -11.636877059936523

Token 261: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02039075642824173
    2. '*' → logprob: -4.39539098739624
    3. ')' → logprob: -5.14539098739624
    4. ' *
' → logprob: -7.27039098739624
    5. '   ' → logprob: -7.77039098739624
    6. '
' → logprob: -8.145390510559082
    7. '*
' → logprob: -9.145390510559082
    8. '*q' → logprob: -9.145390510559082
    9. '+' → logprob: -9.520390510559082
    10. ',' → logprob: -9.770390510559082

Token 262: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.22245457768440247
    2. 'pow' → logprob: -2.22245454788208
    3. ' factorial' → logprob: -2.47245454788208
    4. 'q' → logprob: -5.84745454788208
    5. 'fact' → logprob: -6.84745454788208
    6. ' pow' → logprob: -7.09745454788208
    7. ' q' → logprob: -8.097455024719238
    8. ' (' → logprob: -8.222455024719238
    9. 'inverse' → logprob: -8.347455024719238
    10. ' factor' → logprob: -8.597455024719238

Token 263: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.966313281329349e-05
    2. 'table' → logprob: -10.500049591064453
    3. '_value' → logprob: -12.000049591064453
    4. '_current' → logprob: -12.375049591064453
    5. '_factor' → logprob: -13.375049591064453
    6. '```' → logprob: -13.375049591064453
    7. '[' → logprob: -13.500049591064453
    8. '[q' → logprob: -14.000049591064453
    9. 'Table' → logprob: -14.125049591064453
    10. '_term' → logprob: -14.250049591064453

Token 264: '[b' (ID: 40800)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.08632193505764008
    2. '[n' → logprob: -2.5863218307495117
    3. '[a' → logprob: -5.086321830749512
    4. '[' → logprob: -7.086321830749512
    5. '[b' → logprob: -7.961321830749512
    6. 'q' → logprob: -11.211321830749512
    7. '[
' → logprob: -11.586321830749512
    8. '[(' → logprob: -12.836321830749512
    9. ' [' → logprob: -13.086321830749512
    10. '[k' → logprob: -13.211321830749512

Token 265: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0012014202075079083
    2. '_idx' → logprob: -6.751201629638672
    3. '_index' → logprob: -11.126201629638672
    4. 'value' → logprob: -11.876201629638672
    5. 'idx' → logprob: -12.251201629638672
    6. 'alue' → logprob: -12.501201629638672
    7. ']' → logprob: -14.501201629638672
    8. 'b' → logprob: -16.001201629638672
    9. '_val' → logprob: -16.501201629638672
    10. '_size' → logprob: -16.626201629638672

Token 266: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014760562917217612
    2. ']%' → logprob: -6.876476287841797
    3. '+' → logprob: -8.501476287841797
    4. '-' → logprob: -9.126476287841797
    5. ' -' → logprob: -10.501476287841797
    6. '-k' → logprob: -10.626476287841797
    7. ']*' → logprob: -10.751476287841797
    8. '   ' → logprob: -10.751476287841797
    9. ']
' → logprob: -11.001476287841797
    10. ' ]' → logprob: -11.751476287841797

Token 267: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07246814668178558
    2. 'a' → logprob: -2.9474680423736572
    3. 'q' → logprob: -4.697468280792236
    4. 'n' → logprob: -5.072468280792236
    5. 'b' → logprob: -6.947468280792236
    6. '1' → logprob: -7.197468280792236
    7. 'factor' → logprob: -9.697467803955078
    8. '-' → logprob: -9.822467803955078
    9. ' k' → logprob: -10.072467803955078
    10. 'idx' → logprob: -10.447467803955078

Token 268: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0022561182267963886
    2. '_value' → logprob: -6.127255916595459
    3. 'idx' → logprob: -9.877256393432617
    4. 'x' → logprob: -12.252256393432617
    5. 'value' → logprob: -12.252256393432617
    6. 'Idx' → logprob: -12.377256393432617
    7. ']' → logprob: -14.002256393432617
    8. '_index' → logprob: -14.252256393432617
    9. '[idx' → logprob: -14.377256393432617
    10. '```' → logprob: -14.377256393432617

Token 269: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022590947337448597
    2. ']%' → logprob: -6.127259254455566
    3. ' ]' → logprob: -10.502259254455566
    4. ']
' → logprob: -11.002259254455566
    5. '+' → logprob: -11.127259254455566
    6. '   ' → logprob: -12.002259254455566
    7. '%' → logprob: -12.627259254455566
    8. '']' → logprob: -13.627259254455566
    9. '-' → logprob: -14.127259254455566
    10. ')' → logprob: -14.252259254455566

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. '2' → logprob: -10.375036239624023
    3. ' ' → logprob: -12.500036239624023
    4. '0' → logprob: -15.375036239624023
    5. '   ' → logprob: -15.625036239624023
    6. 'b' → logprob: -16.000036239624023
    7. 'a' → logprob: -16.125036239624023
    8. '-' → logprob: -16.875036239624023
    9. '(' → logprob: -17.250036239624023
    10. '```' → logprob: -17.375036239624023

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '2' → logprob: -12.125005722045898
    3. ' ' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.2500057220459
    5. 'a' → logprob: -18.1250057220459
    6. 'b' → logprob: -18.1250057220459
    7. '0' → logprob: -18.3750057220459
    8. '```' → logprob: -19.7500057220459
    9. '-' → logprob: -20.1250057220459
    10. 'k' → logprob: -20.5000057220459

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004013561410829425
    2. ']%' → logprob: -8.000401496887207
    3. ' ]' → logprob: -9.750401496887207
    4. '%' → logprob: -12.750401496887207
    5. ']
' → logprob: -13.375401496887207
    6. '   ' → logprob: -14.000401496887207
    7. ')' → logprob: -14.375401496887207
    8. '']' → logprob: -14.500401496887207
    9. '```' → logprob: -15.000401496887207
    10. ' %' → logprob: -15.375401496887207

Token 273: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22106575965881348
    2. '%' → logprob: -1.8460657596588135
    3. ')' → logprob: -4.096065521240234
    4. '<|end|>' → logprob: -4.471065521240234
    5. ' *' → logprob: -5.221065521240234
    6. '   ' → logprob: -5.221065521240234
    7. ')%' → logprob: -8.221065521240234
    8. '*' → logprob: -8.346065521240234
    9. ']' → logprob: -8.471065521240234
    10. ' ' → logprob: -8.721065521240234

Token 274: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.030276264995336533
    2. ' inverse' → logprob: -3.530276298522949
    3. '(in' → logprob: -9.03027629852295
    4. 'in' → logprob: -9.03027629852295
    5. 'factor' → logprob: -9.15527629852295
    6. '   ' → logprob: -9.28027629852295
    7. ' factorial' → logprob: -10.53027629852295
    8. '.inverse' → logprob: -11.53027629852295
    9. '(' → logprob: -11.90527629852295
    10. ' (' → logprob: -11.90527629852295

Token 275: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0002553793019615114
    2. 'table' → logprob: -8.375255584716797
    3. '[' → logprob: -11.875255584716797
    4. '```' → logprob: -13.000255584716797
    5. 'factor' → logprob: -13.000255584716797
    6. 'b' → logprob: -13.125255584716797
    7. 'Table' → logprob: -13.250255584716797
    8. '_factor' → logprob: -13.625255584716797
    9. 'inverse' → logprob: -14.125255584716797
    10. '[b' → logprob: -14.250255584716797

Token 276: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.03926580399274826
    2. '[k' → logprob: -3.2892658710479736
    3. '[q' → logprob: -7.1642656326293945
    4. '[a' → logprob: -7.9142656326293945
    5. '[' → logprob: -10.039265632629395
    6. '[n' → logprob: -10.289265632629395
    7. 'b' → logprob: -12.789265632629395
    8. '[key' → logprob: -13.914265632629395
    9. '[f' → logprob: -14.789265632629395
    10. '[idx' → logprob: -15.039265632629395

Token 277: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.009293687529861927
    2. 'alue' → logprob: -4.759293556213379
    3. 'value' → logprob: -7.384293556213379
    4. '_idx' → logprob: -10.384293556213379
    5. '_index' → logprob: -10.884293556213379
    6. 'idx' → logprob: -12.509293556213379
    7. 'index' → logprob: -12.884293556213379
    8. 'Value' → logprob: -14.884293556213379
    9. '_VALUE' → logprob: -15.634293556213379
    10. '_Value' → logprob: -15.634293556213379

Token 278: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7024690508842468
    2. '-' → logprob: -1.7024691104888916
    3. '-k' → logprob: -1.7024691104888916
    4. '+k' → logprob: -2.2024691104888916
    5. ' -' → logprob: -4.2024688720703125
    6. ' +' → logprob: -4.7024688720703125
    7. '[' → logprob: -5.4524688720703125
    8. '[-' → logprob: -7.9524688720703125
    9. ']' → logprob: -8.327468872070312
    10. '-b' → logprob: -9.077468872070312

Token 279: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6043500304222107
    2. ' *' → logprob: -1.6043500900268555
    3. '   ' → logprob: -2.3543500900268555
    4. ' %' → logprob: -2.6043500900268555
    5. '*' → logprob: -3.2293500900268555
    6. '<|end|>' → logprob: -3.3543500900268555
    7. ')' → logprob: -5.4793500900268555
    8. '<|end|>' → logprob: -6.9793500900268555
    9. 'import' → logprob: -7.4793500900268555
    10. '  ' → logprob: -7.4793500900268555

Token 280: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.007245129905641079
    2. ' inverse' → logprob: -5.132245063781738
    3. 'factor' → logprob: -7.382245063781738
    4. '   ' → logprob: -8.007245063781738
    5. 'pow' → logprob: -9.382245063781738
    6. ' factorial' → logprob: -9.382245063781738
    7. '  ' → logprob: -10.757245063781738
    8. ' ' → logprob: -10.882245063781738
    9. '.inverse' → logprob: -10.882245063781738
    10. '(in' → logprob: -10.882245063781738

Token 281: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.816093228830141e-06
    2. 'table' → logprob: -13.87500286102295
    3. '_value' → logprob: -14.50000286102295
    4. '```' → logprob: -14.87500286102295
    5. '[b' → logprob: -15.00000286102295
    6. '[_' → logprob: -15.25000286102295
    7. '[' → logprob: -16.500001907348633
    8. 'Table' → logprob: -16.625001907348633
    9. '
' → logprob: -17.500001907348633
    10. '_array' → logprob: -17.500001907348633

Token 282: '[k' (ID: 14298)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.002608475275337696
    2. '[k' → logprob: -6.002608299255371
    3. '[a' → logprob: -9.627608299255371
    4. '[' → logprob: -9.877608299255371
    5. 'b' → logprob: -11.627608299255371
    6. '[n' → logprob: -12.752608299255371
    7. '[
' → logprob: -13.502608299255371
    8. '   ' → logprob: -14.377608299255371
    9. 'k' → logprob: -15.252608299255371
    10. ' [' → logprob: -15.377608299255371

Token 283: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.3120038501219824e-05
    2. 'idx' → logprob: -9.875053405761719
    3. '_value' → logprob: -13.500053405761719
    4. 'x' → logprob: -16.12505340576172
    5. '```' → logprob: -17.37505340576172
    6. 'k' → logprob: -17.62505340576172
    7. 'value' → logprob: -17.75005340576172
    8. '[idx' → logprob: -18.00005340576172
    9. '	idx' → logprob: -18.37505340576172
    10. 'Idx' → logprob: -18.37505340576172

Token 284: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03661433234810829
    2. '%' → logprob: -3.786614418029785
    3. ' %' → logprob: -5.411614418029785
    4. ']%' → logprob: -5.661614418029785
    5. '   ' → logprob: -6.036614418029785
    6. ')' → logprob: -6.036614418029785
    7. ' ]' → logprob: -8.286614418029785
    8. '[' → logprob: -9.661614418029785
    9. '```' → logprob: -9.911614418029785
    10. ')%' → logprob: -10.036614418029785

Token 285: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5734400153160095
    2. ' *' → logprob: -1.5734400749206543
    3. ' %' → logprob: -1.8234400749206543
    4. '<|end|>' → logprob: -3.4484400749206543
    5. '*' → logprob: -3.8234400749206543
    6. ')' → logprob: -4.573440074920654
    7. '   ' → logprob: -6.198440074920654
    8. '...' → logprob: -8.073439598083496
    9. '```' → logprob: -8.448439598083496
    10. '<|end|>' → logprob: -8.448439598083496

Token 286: ' term' (ID: 2914)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8412087559700012
    2. '%' → logprob: -1.2162086963653564
    3. ' *' → logprob: -1.5912086963653564
    4. ')' → logprob: -2.9662086963653564
    5. '*' → logprob: -4.8412089347839355
    6. '   ' → logprob: -5.2162089347839355
    7. '<|end|>' → logprob: -5.8412089347839355
    8. ')%' → logprob: -8.341208457946777
    9. ']' → logprob: -8.841208457946777
    10. 'term' (adapté à ' term') → logprob: -9.216208457946777

Token 287: ' =' (ID: 314)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5749161839485168
    2. '=' → logprob: -1.449916124343872
    3. ' %=' → logprob: -2.199916124343872
    4. '%' → logprob: -2.449916124343872
    5. ' =' → logprob: -5.324916362762451
    6. ' %' → logprob: -8.074915885925293
    7. '*=' → logprob: -8.449915885925293
    8. ' *=' → logprob: -10.199915885925293
    9. ')' → logprob: -10.324915885925293
    10. '```' → logprob: -10.574915885925293

Token 288: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.3302624523639679
    2. ' term' → logprob: -1.3302624225616455
    3. '(term' → logprob: -4.205262660980225
    4. ' (' → logprob: -6.830262660980225
    5. '(' → logprob: -7.080262660980225
    6. ' ' → logprob: -12.580262184143066
    7. 'factor' → logprob: -12.830262184143066
    8. '-term' → logprob: -12.830262184143066
    9. '   ' → logprob: -12.955262184143066
    10. 'terms' → logprob: -13.955262184143066

Token 289: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3474988043308258
    2. ' %' → logprob: -1.4724987745285034
    3. '%' → logprob: -2.972498893737793
    4. '*' → logprob: -4.347498893737793
    5. ' ' → logprob: -9.722498893737793
    6. '   ' → logprob: -11.972498893737793
    7. '=' → logprob: -12.097498893737793
    8. ' ' → logprob: -12.097498893737793
    9. '```' → logprob: -14.097498893737793
    10. '**' → logprob: -14.722498893737793

Token 290: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.06421436369419098
    2. 'pow' → logprob: -3.4392144680023193
    3. ' factorial' → logprob: -4.06421422958374
    4. '(f' → logprob: -5.31421422958374
    5. 'inverse' → logprob: -5.68921422958374
    6. 'q' → logprob: -6.93921422958374
    7. 'mod' → logprob: -7.43921422958374
    8. ' pow' → logprob: -7.93921422958374
    9. 'fact' → logprob: -8.064214706420898
    10. '   ' → logprob: -8.189214706420898

Token 291: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00017517358355689794
    2. '_current' → logprob: -9.125175476074219
    3. '[b' → logprob: -10.500175476074219
    4. 'table' → logprob: -11.750175476074219
    5. '[n' → logprob: -11.875175476074219
    6. '_value' → logprob: -12.000175476074219
    7. '[_' → logprob: -12.375175476074219
    8. '_size' → logprob: -12.625175476074219
    9. '[q' → logprob: -12.750175476074219
    10. '[current' → logprob: -13.000175476074219

Token 292: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.14915962517261505
    2. '[a' → logprob: -2.5241596698760986
    3. '[n' → logprob: -2.8991596698760986
    4. '[b' → logprob: -6.0241594314575195
    5. '[' → logprob: -7.0241594314575195
    6. '[k' → logprob: -10.64915943145752
    7. '[
' → logprob: -12.27415943145752
    8. 'q' → logprob: -12.52415943145752
    9. '[-' → logprob: -12.64915943145752
    10. '[(' → logprob: -12.77415943145752

Token 293: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.0868278524139896e-05
    2. 'value' → logprob: -9.75006103515625
    3. 'alue' → logprob: -13.62506103515625
    4. 'Value' → logprob: -15.50006103515625
    5. 'q' → logprob: -15.62506103515625
    6. '-value' → logprob: -15.75006103515625
    7. '_VALUE' → logprob: -16.12506103515625
    8. ' value' → logprob: -16.37506103515625
    9. ')' → logprob: -16.37506103515625
    10. '```' → logprob: -16.62506103515625

Token 294: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003970828372985125
    2. ']%' → logprob: -5.628970623016357
    3. '%' → logprob: -8.003971099853516
    4. ' %' → logprob: -11.378971099853516
    5. '-' → logprob: -12.003971099853516
    6. ' ]' → logprob: -12.253971099853516
    7. '   ' → logprob: -12.628971099853516
    8. '+' → logprob: -12.753971099853516
    9. ']
' → logprob: -13.003971099853516
    10. '```' → logprob: -14.378971099853516

Token 295: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6725012063980103
    2. 'k' → logprob: -0.9225012063980103
    3. 'a' → logprob: -2.4225010871887207
    4. 'n' → logprob: -6.797501087188721
    5. 'q' → logprob: -7.422501087188721
    6. ' b' → logprob: -7.547501087188721
    7. 'term' → logprob: -7.922501087188721
    8. ' k' → logprob: -8.047501564025879
    9. '1' → logprob: -8.922501564025879
    10. ' a' → logprob: -9.422501564025879

Token 296: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0022606407292187214
    2. '_idx' → logprob: -6.377260684967041
    3. 'value' → logprob: -7.752260684967041
    4. 'idx' → logprob: -9.127260208129883
    5. '_index' → logprob: -11.377260208129883
    6. 'Value' → logprob: -13.252260208129883
    7. '_func' → logprob: -13.502260208129883
    8. '_table' → logprob: -14.002260208129883
    9. 'a' → logprob: -14.252260208129883
    10. '```' → logprob: -14.377260208129883

Token 297: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026561550330370665
    2. '+' → logprob: -6.252655982971191
    3. ']%' → logprob: -7.877655982971191
    4. '%' → logprob: -8.877655982971191
    5. ' ]' → logprob: -9.627655982971191
    6. '-' → logprob: -10.127655982971191
    7. ' +' → logprob: -10.502655982971191
    8. ']
' → logprob: -10.627655982971191
    9. ' -' → logprob: -10.877655982971191
    10. '   ' → logprob: -11.252655982971191

Token 298: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00721708033233881
    2. 'k' → logprob: -5.257216930389404
    3. ' ' → logprob: -7.132216930389404
    4. 'q' → logprob: -8.132217407226562
    5. 'b' → logprob: -8.632217407226562
    6. 'term' → logprob: -8.757217407226562
    7. '0' → logprob: -9.007217407226562
    8. 'a' → logprob: -9.382217407226562
    9. ' k' → logprob: -9.382217407226562
    10. ']' → logprob: -9.757217407226562

Token 299: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.004460854921489954
    2. '_limit' → logprob: -5.75446081161499
    3. 'idx' → logprob: -7.12946081161499
    4. '_value' → logprob: -7.87946081161499
    5. '_val' → logprob: -10.129461288452148
    6. 'limit' → logprob: -11.004461288452148
    7. 'value' → logprob: -12.379461288452148
    8. 'k' → logprob: -12.379461288452148
    9. 'Idx' → logprob: -12.379461288452148
    10. 'q' → logprob: -12.504461288452148

Token 300: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000609867216553539
    2. ']%' → logprob: -8.250609397888184
    3. ' ]' → logprob: -8.500609397888184
    4. '%' → logprob: -9.125609397888184
    5. ')' → logprob: -11.500609397888184
    6. '   ' → logprob: -11.875609397888184
    7. ' %' → logprob: -12.125609397888184
    8. ']
' → logprob: -12.250609397888184
    9. '']' → logprob: -12.875609397888184
    10. '<|end|>' → logprob: -13.000609397888184

Token 301: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6118836998939514
    2. ' *' → logprob: -1.4868836402893066
    3. '*' → logprob: -1.6118836402893066
    4. ' %' → logprob: -4.486883640289307
    5. '   ' → logprob: -4.611883640289307
    6. 'term' → logprob: -4.611883640289307
    7. '```' → logprob: -8.236884117126465
    8. '<|end|>' → logprob: -8.611884117126465
    9. '#' → logprob: -8.986884117126465
    10. ')' → logprob: -9.486884117126465

Token 302: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.07012338191270828
    2. ' inverse' → logprob: -2.6951234340667725
    3. '   ' → logprob: -9.445123672485352
    4. ' ' → logprob: -11.070123672485352
    5. '.inverse' → logprob: -11.070123672485352
    6. '  ' → logprob: -11.445123672485352
    7. 'factor' → logprob: -11.882623672485352
    8. '_inverse' → logprob: -12.070123672485352
    9. 'reverse' → logprob: -12.320123672485352
    10. '    ' → logprob: -12.382623672485352

Token 303: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.002188449027016759
    2. 'table' → logprob: -6.127188682556152
    3. 'Table' → logprob: -13.127188682556152
    4. '[' → logprob: -15.252188682556152
    5. 'inverse' → logprob: -15.252188682556152
    6. ' table' → logprob: -15.502188682556152
    7. '-table' → logprob: -15.502188682556152
    8. '```' → logprob: -16.377187728881836
    9. '<table' → logprob: -16.502187728881836
    10. '[q' → logprob: -16.502187728881836

Token 304: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0017226649215444922
    2. '[a' → logprob: -6.376722812652588
    3. '[b' → logprob: -11.50172233581543
    4. '[' → logprob: -11.87672233581543
    5. '[n' → logprob: -13.00172233581543
    6. '[
' → logprob: -15.12672233581543
    7. 'q' → logprob: -15.25172233581543
    8. '[(' → logprob: -15.87672233581543
    9. '(q' → logprob: -16.25172233581543
    10. '[k' → logprob: -16.50172233581543

Token 305: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.002175719942897558
    2. 'value' → logprob: -6.252175807952881
    3. 'q' → logprob: -9.502175331115723
    4. 'alue' → logprob: -9.502175331115723
    5. '[q' → logprob: -10.127175331115723
    6. '_idx' → logprob: -11.377175331115723
    7. 'a' → logprob: -11.877175331115723
    8. '_VALUE' → logprob: -11.877175331115723
    9. 'Value' → logprob: -11.877175331115723
    10. 'idx' → logprob: -11.877175331115723

Token 306: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2874587774276733
    2. '-a' → logprob: -1.2874587774276733
    3. ' -' → logprob: -1.4124587774276733
    4. ']' → logprob: -1.9124587774276733
    5. '+a' → logprob: -3.537458896636963
    6. '+' → logprob: -3.912458896636963
    7. ' +' → logprob: -5.287458896636963
    8. 'a' → logprob: -6.537458896636963
    9. '-k' → logprob: -8.037458419799805
    10. '[a' → logprob: -8.787458419799805

Token 307: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06103425472974777
    2. ' *' → logprob: -3.3110342025756836
    3. '   ' → logprob: -3.8110342025756836
    4. '%' → logprob: -7.936034202575684
    5. 'term' → logprob: -9.061034202575684
    6. '```' → logprob: -10.686034202575684
    7. 'def' → logprob: -10.811034202575684
    8. ')' → logprob: -11.061034202575684
    9. ' ' → logprob: -11.061034202575684
    10. 'import' → logprob: -11.186034202575684

Token 308: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.0019546831026673317
    2. ' inverse' → logprob: -6.251954555511475
    3. 'factor' → logprob: -11.501955032348633
    4. ' factorial' → logprob: -12.501955032348633
    5. '   ' → logprob: -12.626955032348633
    6. '.inverse' → logprob: -12.876955032348633
    7. ' ' → logprob: -13.376955032348633
    8. '
' → logprob: -14.126955032348633
    9. '  ' → logprob: -14.751955032348633
    10. '    ' → logprob: -14.751955032348633

Token 309: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.4021237802808173e-05
    2. 'table' → logprob: -12.000014305114746
    3. '_value' → logprob: -13.375014305114746
    4. '[' → logprob: -13.750014305114746
    5. '```' → logprob: -13.875014305114746
    6. '"_' → logprob: -14.500014305114746
    7. ''_' → logprob: -14.500014305114746
    8. 'Table' → logprob: -14.875014305114746
    9. '_tab' → logprob: -15.000014305114746
    10. '[_' → logprob: -15.125014305114746

Token 310: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.020650619640946388
    2. '[q' → logprob: -3.895650625228882
    3. '[n' → logprob: -10.020650863647461
    4. '[' → logprob: -10.520650863647461
    5. 'a' → logprob: -11.020650863647461
    6. '(a' → logprob: -12.270650863647461
    7. '[b' → logprob: -12.520650863647461
    8. '[
' → logprob: -12.645650863647461
    9. '```' → logprob: -12.895650863647461
    10. 'q' → logprob: -13.270650863647461

Token 311: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.416665640543215e-05
    2. 'value' → logprob: -11.00003433227539
    3. '_idx' → logprob: -11.00003433227539
    4. 'idx' → logprob: -15.25003433227539
    5. '_index' → logprob: -16.12503433227539
    6. 'alue' → logprob: -16.50003433227539
    7. 'a' → logprob: -16.62503433227539
    8. 'Value' → logprob: -16.62503433227539
    9. '```' → logprob: -16.62503433227539
    10. '_VALUE' → logprob: -17.25003433227539

Token 312: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.033876433968544006
    2. ']' → logprob: -4.158876419067383
    3. '-' → logprob: -4.658876419067383
    4. ' -' → logprob: -4.908876419067383
    5. '[k' → logprob: -7.783876419067383
    6. '_k' → logprob: -8.158876419067383
    7. '   ' → logprob: -9.783876419067383
    8. '+k' → logprob: -10.158876419067383
    9. '[' → logprob: -11.908876419067383
    10. ']
' → logprob: -12.783876419067383

Token 313: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.274932143744081e-05
    2. ' k' → logprob: -10.125042915344238
    3. '_k' → logprob: -13.000042915344238
    4. '(k' → logprob: -15.000042915344238
    5. '(' → logprob: -18.250041961669922
    6. ' (' → logprob: -18.625041961669922
    7. '   ' → logprob: -18.750041961669922
    8. '```' → logprob: -18.750041961669922
    9. '	k' → logprob: -18.750041961669922
    10. '{k' → logprob: -19.000041961669922

Token 314: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0008377424674108624
    2. 'idx' → logprob: -7.125837802886963
    3. 'x' → logprob: -10.750837326049805
    4. 'dx' → logprob: -11.875837326049805
    5. '_value' → logprob: -13.500837326049805
    6. 'ex' → logprob: -14.000837326049805
    7. 'Idx' → logprob: -14.125837326049805
    8. 'd' → logprob: -14.875837326049805
    9. '	idx' → logprob: -14.875837326049805
    10. '_index' → logprob: -15.750837326049805

Token 315: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001907855912577361
    2. ')' → logprob: -9.375190734863281
    3. '   ' → logprob: -9.750190734863281
    4. ' ]' → logprob: -10.875190734863281
    5. ']
' → logprob: -11.125190734863281
    6. ']*' → logprob: -12.750190734863281
    7. '])' → logprob: -13.375190734863281
    8. '<|end|>' → logprob: -13.375190734863281
    9. '']' → logprob: -13.500190734863281
    10. '}' → logprob: -13.500190734863281

Token 316: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.24250578880310059
    2. ')' → logprob: -2.4925057888031006
    3. '<|end|>' → logprob: -2.4925057888031006
    4. ' %' → logprob: -3.2425057888031006
    5. '   ' → logprob: -5.11750602722168
    6. ')%' → logprob: -6.49250602722168
    7. ' *' → logprob: -7.24250602722168
    8. '*' → logprob: -7.49250602722168
    9. '%n' → logprob: -7.86750602722168
    10. '
' → logprob: -7.99250602722168

Token 317: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5079566240310669
    2. 'term' → logprob: -1.007956624031067
    3. '%' → logprob: -3.7579565048217773
    4. ' %' → logprob: -5.257956504821777
    5. ' term' → logprob: -6.382956504821777
    6. ' result' → logprob: -6.757956504821777
    7. '   ' → logprob: -7.007956504821777
    8. ')' → logprob: -7.632956504821777
    9. '(term' → logprob: -9.507956504821777
    10. ' *' → logprob: -9.632956504821777

Token 318: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.051066520740278e-05
    2. '+=' → logprob: -10.625060081481934
    3. ' +=' → logprob: -10.750060081481934
    4. '_s' → logprob: -12.625060081481934
    5. 's' → logprob: -12.750060081481934
    6. '_' → logprob: -13.375060081481934
    7. '=' → logprob: -13.875060081481934
    8. '_SUM' → logprob: -14.125060081481934
    9. '```' → logprob: -14.250060081481934
    10. 'Sum' → logprob: -14.375060081481934

Token 319: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3187386989593506
    2. '=' → logprob: -1.3187386989593506
    3. ' +=' → logprob: -5.44373893737793
    4. ' =' → logprob: -7.31873893737793
    5. '%=' → logprob: -7.69373893737793
    6. '=(' → logprob: -11.81873893737793
    7. '+=(' → logprob: -11.81873893737793
    8. ' %=' → logprob: -13.44373893737793
    9. '+' → logprob: -14.19373893737793
    10. '(' → logprob: -14.44373893737793

Token 320: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00043257648940198123
    2. ' (' → logprob: -7.75043249130249
    3. '(' → logprob: -13.625432968139648
    4. '   ' → logprob: -14.625432968139648
    5. '[result' → logprob: -16.37543296813965
    6. '(results' → logprob: -16.62543296813965
    7. '(res' → logprob: -17.62543296813965
    8. ' ' → logprob: -18.12543296813965
    9. '(Result' → logprob: -18.62543296813965
    10. 'result' → logprob: -18.62543296813965

Token 321: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -9.817902173381299e-05
    2. ' result' → logprob: -9.25009822845459
    3. '(result' → logprob: -13.12509822845459
    4. '   ' → logprob: -16.750097274780273
    5. '
' → logprob: -18.500097274780273
    6. '	result' → logprob: -19.500097274780273
    7. '[result' → logprob: -19.625097274780273
    8. 'res' → logprob: -19.875097274780273
    9. ' ' → logprob: -20.625097274780273
    10. '$result' → logprob: -20.750097274780273

Token 322: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1637164789135568e-05
    2. '_' → logprob: -12.000011444091797
    3. ' _' → logprob: -12.625011444091797
    4. '_s' → logprob: -14.000011444091797
    5. '+' → logprob: -14.375011444091797
    6. 'sum' → logprob: -15.250011444091797
    7. '_add' → logprob: -15.625011444091797
    8. '_SUM' → logprob: -16.000011444091797
    9. ')' → logprob: -17.375011444091797
    10. 'Sum' → logprob: -17.500011444091797

Token 323: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326204538345337
    2. '+' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.313262939453125
    4. ' plus' → logprob: -16.688262939453125
    5. ' ' → logprob: -16.688262939453125
    6. ' +
' → logprob: -16.938262939453125
    7. '＋' → logprob: -17.563262939453125
    8. '+
' → logprob: -17.938262939453125
    9. '+k' → logprob: -18.063262939453125
    10. ')' → logprob: -18.563262939453125

Token 324: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.25193047523498535
    2. ' term' → logprob: -1.5019304752349854
    3. '   ' → logprob: -14.376930236816406
    4. '(term' → logprob: -14.626930236816406
    5. 'int' → logprob: -15.376930236816406
    6. ' ' → logprob: -16.251930236816406
    7. ' int' → logprob: -16.751930236816406
    8. '-term' → logprob: -17.501930236816406
    9. '_term' → logprob: -18.001930236816406
    10. 'terms' → logprob: -18.251930236816406

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03482047840952873
    2. ' )' → logprob: -3.409820556640625
    3. ' %' → logprob: -7.284820556640625
    4. '%' → logprob: -8.284820556640625
    5. ')%' → logprob: -8.409820556640625
    6. '   ' → logprob: -11.909820556640625
    7. ' ' → logprob: -14.159820556640625
    8. '```' → logprob: -14.159820556640625
    9. '%)' → logprob: -14.534820556640625
    10. ' +' → logprob: -14.534820556640625

Token 326: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029757777228951454
    2. '%' → logprob: -3.5297577381134033
    3. ')' → logprob: -12.029757499694824
    4. '
' → logprob: -14.779757499694824
    5. ')%' → logprob: -15.529757499694824
    6. ' %=' → logprob: -15.904757499694824
    7. '%n' → logprob: -16.02975845336914
    8. ' ' → logprob: -16.27975845336914
    9. ' ' → logprob: -16.27975845336914
    10. '%b' → logprob: -16.77975845336914

Token 327: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.111979357432574e-05
    2. ' modulus' → logprob: -9.62507152557373
    3. '(mod' → logprob: -13.12507152557373
    4. '998' → logprob: -13.50007152557373
    5. 'modifier' → logprob: -13.62507152557373
    6. 'module' → logprob: -15.87507152557373
    7. '	mod' → logprob: -16.250070571899414
    8. 'moder' → logprob: -16.750070571899414
    9. 'MOD' → logprob: -16.750070571899414
    10. '```' → logprob: -17.125070571899414

Token 328: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10744483023881912
    2. 'print' → logprob: -2.4824447631835938
    3. '   ' → logprob: -5.357444763183594
    4. '<|end|>' → logprob: -5.482444763183594
    5. ')
' → logprob: -5.982444763183594
    6. '```' → logprob: -6.857444763183594
    7. 'factor' → logprob: -6.982444763183594
    8. 'for' → logprob: -7.107444763183594
    9. '+' → logprob: -7.107444763183594
    10. '*' → logprob: -7.607444763183594

Token 329: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3827233612537384
    2. '<|end|>' → logprob: -1.257723331451416
    3. '   ' → logprob: -5.382723331451416
    4. '*' → logprob: -5.382723331451416
    5. 'print' → logprob: -5.632723331451416
    6. '[' → logprob: -5.632723331451416
    7. ' ' → logprob: -5.757723331451416
    8. '(' → logprob: -5.757723331451416
    9. '+' → logprob: -6.007723331451416
    10. '```' → logprob: -6.257723331451416

Token 330: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933148503303528
    2. '(result' → logprob: -0.6933148503303528
    3. '()' → logprob: -8.818314552307129
    4. '(
' → logprob: -11.693314552307129
    5. 'result' → logprob: -12.318314552307129
    6. '((' → logprob: -13.443314552307129
    7. '("("' → logprob: -13.693314552307129
    8. '('' → logprob: -13.818314552307129
    9. ' (' → logprob: -14.693314552307129
    10. '(final' → logprob: -15.068314552307129

Token 331: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. '_s' → logprob: -14.375000953674316
    3. ')_' → logprob: -15.375000953674316
    4. ')' → logprob: -15.500000953674316
    5. '_' → logprob: -16.875001907348633
    6. '_)' → logprob: -17.125001907348633
    7. '_SUM' → logprob: -17.375001907348633
    8. ' _' → logprob: -17.500001907348633
    9. '```' → logprob: -18.250001907348633
    10. '_value' → logprob: -18.625001907348633

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ')
' → logprob: -11.750011444091797
    3. ' )' → logprob: -13.500011444091797
    4. '```' → logprob: -13.750011444091797
    5. '`)' → logprob: -15.750011444091797
    6. '))' → logprob: -16.500011444091797
    7. '**' → logprob: -16.500011444091797
    8. '')' → logprob: -17.250011444091797
    9. ')`' → logprob: -17.375011444091797
    10. '
' → logprob: -17.375011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 330
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 130
Tokens correctement prédits (top 10): 270
Précision stricte (1ère position): 38.48%
Précision adaptée (1ère position): 39.39%
Précision (top 10): 81.82%
================================================================================
