================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_total, input_subtract = map(int, input().split())

output_result = input_total - input_subtract + 1

print(output_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_total' (ID: 23814)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.005385398864746
    2. '_output' → logprob: -1.880385398864746
    3. ' ' → logprob: -2.255385398864746
    4. 'input' → logprob: -2.380385398864746
    5. '_' → logprob: -2.755385398864746
    6. ' output' → logprob: -2.755385398864746
    7. ' _' → logprob: -3.380385398864746
    8. '_input' → logprob: -3.630385398864746
    9. ' input' → logprob: -4.005385398864746
    10. '_value' → logprob: -4.130385398864746

Token 4: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3751891255378723
    2. '.' → logprob: -1.6251890659332275
    3. '[' → logprob: -2.6251890659332275
    4. ')' → logprob: -4.000189304351807
    5. ',' → logprob: -4.625189304351807
    6. '=' → logprob: -5.000189304351807
    7. '```' → logprob: -5.750189304351807
    8. '(' → logprob: -6.625189304351807
    9. '._' → logprob: -7.375189304351807
    10. ''' → logprob: -8.000188827514648

Token 5: 'tract' (ID: 2642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16584815084934235
    2. '[' → logprob: -2.5408482551574707
    3. '+' → logprob: -3.5408482551574707
    4. '```' → logprob: -4.540848255157471
    5. '.' → logprob: -5.040848255157471
    6. '=' → logprob: -5.040848255157471
    7. '*' → logprob: -5.165848255157471
    8. ',' → logprob: -5.665848255157471
    9. ' +' → logprob: -5.790848255157471
    10. ' =' → logprob: -6.415848255157471

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3224470913410187
    2. '=' → logprob: -1.9474470615386963
    3. ' =' → logprob: -3.0724470615386963
    4. '```' → logprob: -3.4474470615386963
    5. ',' → logprob: -3.6974470615386963
    6. ')' → logprob: -5.197447299957275
    7. '.' → logprob: -5.197447299957275
    8. '+' → logprob: -5.322447299957275
    9. '(' → logprob: -5.822447299957275
    10. '[' → logprob: -5.947447299957275

Token 7: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.164503812789917
    2. 'input' → logprob: -1.289503812789917
    3. ' []' → logprob: -1.914503812789917
    4. ' ' → logprob: -2.414503812789917
    5. ' map' → logprob: -2.664503812789917
    6. '0' → logprob: -3.664503812789917
    7. '[]' → logprob: -3.914503812789917
    8. ' [' → logprob: -4.039504051208496
    9. ' [],' → logprob: -4.039504051208496
    10. 'map' → logprob: -4.164504051208496

Token 8: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030528003349900246
    2. 'input' → logprob: -3.7805280685424805
    3. ')' → logprob: -5.1555280685424805
    4. '(' → logprob: -7.1555280685424805
    5. '(user' → logprob: -8.28052806854248
    6. 'user' → logprob: -8.78052806854248
    7. ' input' → logprob: -9.53052806854248
    8. ',input' → logprob: -9.53052806854248
    9. '```' → logprob: -10.15552806854248
    10. '[input' → logprob: -10.65552806854248

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12696076929569244
    2. ' input' → logprob: -2.1269607543945312
    3. '(input' → logprob: -10.626960754394531
    4. ')' → logprob: -11.876960754394531
    5. ',input' → logprob: -14.501960754394531
    6. '=input' → logprob: -15.126960754394531
    7. '<input' → logprob: -15.251960754394531
    8. '[input' → logprob: -15.876960754394531
    9. '```' → logprob: -16.12696075439453
    10. ' )' → logprob: -16.25196075439453

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5964674353599548
    2. '()' → logprob: -1.8464674949645996
    3. '().' → logprob: -2.0964674949645996
    4. '(' → logprob: -2.0964674949645996
    5. ')' → logprob: -4.0964674949646
    6. '`()' → logprob: -5.2214674949646
    7. '```' → logprob: -5.7214674949646
    8. '()))' → logprob: -5.7214674949646
    9. '());' → logprob: -6.4714674949646
    10. '(""))' → logprob: -6.4714674949646

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010163593105971813
    2. 'strip' → logprob: -9.250102043151855
    3. 'rstrip' → logprob: -12.750102043151855
    4. ' split' → logprob: -13.625102043151855
    5. 'spl' → logprob: -13.875102043151855
    6. ')' → logprob: -15.750102043151855
    7. 'startswith' → logprob: -16.00010108947754
    8. 'replace' → logprob: -16.25010108947754
    9. '(split' → logprob: -16.62510108947754
    10. 's' → logprob: -17.25010108947754

Token 13: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.35959869623184204
    2. ')' → logprob: -1.2345986366271973
    3. '))' → logprob: -5.359598636627197
    4. '()' → logprob: -5.484598636627197
    5. '()))' → logprob: -6.609598636627197
    6. '(' → logprob: -7.359598636627197
    7. '`)' → logprob: -9.859599113464355
    8. '('' → logprob: -9.859599113464355
    9. ' ())' → logprob: -10.109599113464355
    10. '```' → logprob: -11.734599113464355

Token 14: 'output' (ID: 6130)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21327891945838928
    2. 'if' → logprob: -2.5882790088653564
    3. '+
' → logprob: -3.0882790088653564
    4. '#' → logprob: -3.7132790088653564
    5. 'print' → logprob: -4.338278770446777
    6. '*' → logprob: -5.088278770446777
    7. '```' → logprob: -5.588278770446777
    8. '\n' → logprob: -5.713278770446777
    9. '.' → logprob: -5.963278770446777
    10. ',' → logprob: -6.088278770446777

Token 15: '_result' (ID: 11623)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1873818188905716
    2. '*' → logprob: -2.6873817443847656
    3. '```' → logprob: -3.4373817443847656
    4. '<|end|>' → logprob: -3.5623817443847656
    5. ',' → logprob: -4.187381744384766
    6. '(' → logprob: -5.687381744384766
    7. ':' → logprob: -5.687381744384766
    8. '[' → logprob: -5.812381744384766
    9. ')' → logprob: -5.937381744384766
    10. '#' → logprob: -6.062381744384766

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8492492437362671
    2. '=' → logprob: -1.599249243736267
    3. '+' → logprob: -1.599249243736267
    4. '<|end|>' → logprob: -2.7242493629455566
    5. '_' → logprob: -3.3492493629455566
    6. '(' → logprob: -4.349249362945557
    7. '[' → logprob: -4.474249362945557
    8. '```' → logprob: -4.599249362945557
    9. ' =' → logprob: -4.724249362945557
    10. '_output' → logprob: -5.349249362945557

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2259148806333542
    2. ' input' → logprob: -1.6009148359298706
    3. '0' → logprob: -8.47591495513916
    4. 'sum' → logprob: -8.72591495513916
    5. 'output' → logprob: -10.47591495513916
    6. ' sum' → logprob: -10.72591495513916
    7. 'max' → logprob: -10.72591495513916
    8. ' ' → logprob: -10.97591495513916
    9. 'int' → logprob: -11.22591495513916
    10. '(input' → logprob: -11.47591495513916

Token 18: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.014768959023058414
    2. '_' → logprob: -4.264769077301025
    3. '_.' → logprob: -8.014768600463867
    4. '_output' → logprob: -9.889768600463867
    5. '_sub' → logprob: -10.139768600463867
    6. 'Total' → logprob: -10.264768600463867
    7. 'total' → logprob: -10.764768600463867
    8. '```' → logprob: -11.014768600463867
    9. '_Total' → logprob: -11.014768600463867
    10. '_sum' → logprob: -11.139768600463867

Token 19: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18308548629283905
    2. ' -' → logprob: -2.0580854415893555
    3. '<|end|>' → logprob: -3.6830854415893555
    4. ' ' → logprob: -4.6830854415893555
    5. '+' → logprob: -5.8080854415893555
    6. ')' → logprob: -6.9330854415893555
    7. '_' → logprob: -7.5580854415893555
    8. '<|end|>' → logprob: -8.683085441589355
    9. ' +' → logprob: -9.433085441589355
    10. '*' → logprob: -9.558085441589355

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04859157279133797
    2. ' input' → logprob: -3.0485916137695312
    3. '1' → logprob: -13.173591613769531
    4. '_input' → logprob: -13.798591613769531
    5. '<input' → logprob: -14.798591613769531
    6. 'output' → logprob: -15.048591613769531
    7. '(input' → logprob: -15.673591613769531
    8. '=input' → logprob: -15.798591613769531
    9. ' ' → logprob: -15.923591613769531
    10. '	input' → logprob: -16.67359161376953

Token 21: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.12812605500221252
    2. '_' → logprob: -2.3781261444091797
    3. '_total' → logprob: -3.6281261444091797
    4. '_s' → logprob: -7.37812614440918
    5. ')_' → logprob: -9.87812614440918
    6. '_output' → logprob: -10.75312614440918
    7. '__' → logprob: -10.87812614440918
    8. ')' → logprob: -11.12812614440918
    9. '```' → logprob: -11.12812614440918
    10. '_)' → logprob: -11.25312614440918

Token 22: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.00012701898231171072
    2. 'r' → logprob: -9.125126838684082
    3. 'stract' → logprob: -11.250126838684082
    4. 'tr' → logprob: -12.750126838684082
    5. ' tract' → logprob: -14.375126838684082
    6. 'tra' → logprob: -14.625126838684082
    7. 't' → logprob: -14.875126838684082
    8. 'truct' → logprob: -15.625126838684082
    9. '```' → logprob: -15.875126838684082
    10. 'tracted' → logprob: -16.1251277923584

Token 23: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14628098905086517
    2. '1' → logprob: -2.0212810039520264
    3. '0' → logprob: -6.646280765533447
    4. ' input' → logprob: -7.146280765533447
    5. '10' → logprob: -7.771280765533447
    6. '2' → logprob: -7.896280765533447
    7. ' (' → logprob: -8.896281242370605
    8. 'input' → logprob: -9.021281242370605
    9. '5' → logprob: -9.146281242370605
    10. '7' → logprob: -9.396281242370605

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0747339129447937
    2. ' ' → logprob: -3.4497339725494385
    3. '10' → logprob: -3.9497339725494385
    4. '0' → logprob: -5.199733734130859
    5. '5' → logprob: -5.199733734130859
    6. 'input' → logprob: -5.824733734130859
    7. '100' → logprob: -5.949733734130859
    8. '2' → logprob: -6.324733734130859
    9. '42' → logprob: -7.574733734130859
    10. '(' → logprob: -7.949733734130859

Token 26: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10027135908603668
    2. '(output' → logprob: -2.350271463394165
    3. '(input' → logprob: -10.225271224975586
    4. '("("' → logprob: -11.850271224975586
    5. '(print' → logprob: -12.350271224975586
    6. ' (' → logprob: -12.475271224975586
    7. '(open' → logprob: -12.850271224975586
    8. '('' → logprob: -13.100271224975586
    9. '(Output' → logprob: -13.850271224975586
    10. '()' → logprob: -13.850271224975586

Token 29: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.009153129532933235
    2. '_output' → logprob: -5.384153366088867
    3. ')_' → logprob: -6.634153366088867
    4. ')' → logprob: -6.884153366088867
    5. '_' → logprob: -6.884153366088867
    6. '_)' → logprob: -7.759153366088867
    7. '_r' → logprob: -7.884153366088867
    8. '_t' → logprob: -8.384153366088867
    9. '_results' → logprob: -10.384153366088867
    10. '_res' → logprob: -10.634153366088867

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.750001907348633
    5. ')`' → logprob: -16.000001907348633
    6. '')' → logprob: -17.000001907348633
    7. ')
' → logprob: -18.500001907348633
    8. '）' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '#' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 28
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 64.29%
================================================================================
