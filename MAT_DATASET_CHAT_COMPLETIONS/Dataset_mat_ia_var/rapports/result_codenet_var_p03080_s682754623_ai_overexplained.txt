================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une valeur qui sera évaluée comme une expression Python.
# Cela permet d'accepter aussi bien des nombres entiers, des flottants, des opérations arithmétiques, etc.
# Par exemple, si l'utilisateur tape "3 + 2", le résultat de eval(input()) sera 5.
n = eval(input())

# Demande à l'utilisateur d'entrer une chaîne de caractères.
# input() lit toute la ligne entrée par l'utilisateur au format texte (string).
# La méthode count('R') compte combien de fois la lettre 'R' apparaît dans la chaîne saisie.
r_count = input().count('R')

# On veut savoir si le nombre de 'R' rencontrés dans la chaîne donnée par l'utilisateur
# dépasse la moitié de la valeur de n (c'est-à-dire si r_count > n/2).
# Si c'est vrai, on affiche "Yes". Sinon, on affiche "No".
# L'instruction print() affiche le texte à l'écran.
# L'opérateur conditionnel ternaire (ou expression conditionnelle) permet d'effectuer ce test en une ligne :
# "Yes" if condition else "No". Si la condition (r_count > n/2) est vraie, "Yes" est affiché, sinon "No" l'est.
print("Yes" if r_count > n/2 else "No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01568765938282013
    2. ' l' → logprob: -4.390687465667725
    3. 'user' → logprob: -6.640687465667725
    4. '#' → logprob: -7.390687465667725
    5. 'util' → logprob: -7.515687465667725
    6. 'la' → logprob: -9.390687942504883
    7. ' user' → logprob: -9.515687942504883
    8. '`' → logprob: -9.640687942504883
    9. '```' → logprob: -9.640687942504883
    10. ''' → logprob: -9.765687942504883

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17506203055381775
    2. 'name' → logprob: -2.6750619411468506
    3. 'n' → logprob: -3.4250619411468506
    4. 's' → logprob: -4.30006217956543
    5. ' nom' → logprob: -4.80006217956543
    6. 'user' → logprob: -4.92506217956543
    7. ' =' → logprob: -6.05006217956543
    8. 'prenom' → logprob: -6.05006217956543
    9. 'print' → logprob: -6.17506217956543
    10. 'input' → logprob: -6.17506217956543

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2136872112751007
    2. ''' → logprob: -1.7136871814727783
    3. ''entrée' → logprob: -5.963687419891357
    4. '_' → logprob: -6.713687419891357
    5. 'a' → logprob: -6.963687419891357
    6. ''une' → logprob: -7.088687419891357
    7. 'é' → logprob: -7.213687419891357
    8. 'u' → logprob: -7.213687419891357
    9. ''e' → logprob: -7.338687419891357
    10. ''é' → logprob: -7.713687419891357

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.4258287847042084
    2. 'entrée' → logprob: -1.5508288145065308
    3. 'ent' → logprob: -2.050828695297241
    4. 'input' → logprob: -6.42582893371582
    5. 's' → logprob: -6.55082893371582
    6. 'entre' → logprob: -7.30082893371582
    7. 'enter' → logprob: -8.17582893371582
    8. 'int' → logprob: -8.55082893371582
    9. 'é' → logprob: -8.55082893371582
    10. 'e' → logprob: -8.55082893371582

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0002516839886084199
    2. 'éer' → logprob: -9.125251770019531
    3. 'rer' → logprob: -9.625251770019531
    4. 'e' → logprob: -11.250251770019531
    5. 'é' → logprob: -11.625251770019531
    6. 'érer' → logprob: -11.625251770019531
    7. ''er' → logprob: -11.750251770019531
    8. ' er' → logprob: -11.875251770019531
    9. 'erer' → logprob: -12.000251770019531
    10. 'trer' → logprob: -12.125251770019531

Token 10: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09051872789859772
    2. ' un' → logprob: -3.2155187129974365
    3. ''' → logprob: -4.090518951416016
    4. ' une' → logprob: -4.590518951416016
    5. '_' → logprob: -4.840518951416016
    6. 'u' → logprob: -5.965518951416016
    7. 'une' → logprob: -6.715518951416016
    8. ' u' → logprob: -6.965518951416016
    9. 'un' → logprob: -6.965518951416016
    10. ''un' → logprob: -6.965518951416016

Token 11: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08472118526697159
    2. ' chaîne' → logprob: -2.709721088409424
    3. 'chaine' → logprob: -5.459721088409424
    4. ' phrase' → logprob: -5.584721088409424
    5. ' chaine' → logprob: -5.959721088409424
    6. ' ligne' → logprob: -7.084721088409424
    7. ' espace' → logprob: -7.834721088409424
    8. 'phrase' → logprob: -7.834721088409424
    9. ' valeur' → logprob: -8.084721565246582
    10. '   ' → logprob: -8.084721565246582

Token 12: ' qui' (ID: 2780)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4114089012145996
    2. 'value' → logprob: -2.4114089012145996
    3. '`' → logprob: -3.2864089012145996
    4. 'input' → logprob: -3.2864089012145996
    5. 'x' → logprob: -3.4114089012145996
    6. 'i' → logprob: -3.4114089012145996
    7. 'n' → logprob: -3.9114089012145996
    8. 'user' → logprob: -4.0364089012146
    9. '_' → logprob: -4.0364089012146
    10. '```' → logprob: -4.1614089012146

Token 13: ' sera' (ID: 15511)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2897992134094238
    2. ' sera' → logprob: -1.5397992134094238
    3. ' ' → logprob: -1.9147992134094238
    4. 's' → logprob: -2.039799213409424
    5. '_' → logprob: -2.289799213409424
    6. 'n' → logprob: -3.289799213409424
    7. '`' → logprob: -4.164799213409424
    8. 'sera' → logprob: -4.539799213409424
    9. ' est' → logprob: -5.039799213409424
    10. 'a' → logprob: -5.289799213409424

Token 14: ' évalu' (ID: 158074)
  Prédit: ' utilisée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.4853638708591461
    2. ' stock' → logprob: -1.9853638410568237
    3. ' multip' → logprob: -2.7353639602661133
    4. 's' → logprob: -3.1103639602661133
    5. ' ' → logprob: -3.9853639602661133
    6. ' affect' → logprob: -4.235363960266113
    7. 'util' → logprob: -4.235363960266113
    8. ' assign' → logprob: -4.860363960266113
    9. ' convert' → logprob: -4.985363960266113
    10. 'convert' → logprob: -5.110363960266113

Token 15: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6342359781265259
    2. 'é' → logprob: -0.7592359781265259
    3. 'ée' → logprob: -7.259235858917236
    4. '_' → logprob: -7.509235858917236
    5. '```' → logprob: -9.259236335754395
    6. '�' → logprob: -10.134236335754395
    7. '#' → logprob: -10.134236335754395
    8. '(' → logprob: -10.384236335754395
    9. 'è' → logprob: -10.634236335754395
    10. '`' → logprob: -11.009236335754395

Token 16: ' comme' (ID: 7971)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6322450637817383
    2. 'val' → logprob: -2.1322450637817383
    3. 'input' → logprob: -2.2572450637817383
    4. 'value' → logprob: -2.5072450637817383
    5. 'e' → logprob: -3.5072450637817383
    6. 'eval' → logprob: -3.5072450637817383
    7. 'x' → logprob: -3.8822450637817383
    8. 'i' → logprob: -4.382245063781738
    9. 'user' → logprob: -4.632245063781738
    10. '_' → logprob: -4.757245063781738

Token 17: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.07613947987556458
    2. 'input' → logprob: -3.576139450073242
    3. ' une' → logprob: -3.951139450073242
    4. 'python' → logprob: -4.826139450073242
    5. 'Python' → logprob: -5.326139450073242
    6. 'du' → logprob: -5.576139450073242
    7. ' input' → logprob: -6.326139450073242
    8. 'un' → logprob: -6.576139450073242
    9. ' Python' → logprob: -6.576139450073242
    10. 'expression' → logprob: -6.826139450073242

Token 18: ' expression' (ID: 12973)
  Prédit: ' expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.490960031747818
    2. 'expression' → logprob: -1.8659600019454956
    3. ' ' → logprob: -2.115960121154785
    4. ' chaîne' → logprob: -2.865960121154785
    5. ' espace' → logprob: -4.365960121154785
    6. 'chaine' → logprob: -4.740960121154785
    7. ' valeur' → logprob: -4.740960121154785
    8. ' chaine' → logprob: -5.490960121154785
    9. 'entrée' → logprob: -6.115960121154785
    10. 'é' → logprob: -6.490960121154785

Token 19: ' Python' (ID: 26534)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8469531536102295
    2. 'x' → logprob: -1.5969531536102295
    3. 'input' → logprob: -2.5969531536102295
    4. 'i' → logprob: -3.0969531536102295
    5. 'e' → logprob: -3.2219531536102295
    6. 'n' → logprob: -3.3469531536102295
    7. 'eval' → logprob: -3.4719531536102295
    8. 'a' → logprob: -3.4719531536102295
    9. '_' → logprob: -3.9719531536102295
    10. 'val' → logprob: -4.346953392028809

Token 20: '.
' (ID: 558)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.019494891166687
    2. 'input' → logprob: -1.644494891166687
    3. 'value' → logprob: -1.769494891166687
    4. 'val' → logprob: -2.1444950103759766
    5. 'x' → logprob: -2.7694950103759766
    6. 'user' → logprob: -3.6444950103759766
    7. '`' → logprob: -4.269495010375977
    8. 'i' → logprob: -4.644495010375977
    9. 'result' → logprob: -4.644495010375977
    10. '```' → logprob: -4.644495010375977

Token 21: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3851538896560669
    2. 'val' → logprob: -2.3851537704467773
    3. 'x' → logprob: -2.5101537704467773
    4. 'value' → logprob: -2.8851537704467773
    5. 'user' → logprob: -4.635153770446777
    6. '`' → logprob: -4.760153770446777
    7. 'e' → logprob: -4.760153770446777
    8. 'i' → logprob: -4.760153770446777
    9. 'n' → logprob: -4.885153770446777
    10. 'input' → logprob: -4.885153770446777

Token 22: ' Cela' (ID: 44403)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3659507930278778
    2. 'val' → logprob: -1.6159508228302002
    3. 'user' → logprob: -3.2409508228302
    4. 'v' → logprob: -3.4909508228302
    5. 'input' → logprob: -4.365950584411621
    6. 'result' → logprob: -4.615950584411621
    7. '#' → logprob: -5.865950584411621
    8. 'x' → logprob: -5.990950584411621
    9. ' value' → logprob: -5.990950584411621
    10. ' valeur' → logprob: -6.490950584411621

Token 23: ' permet' (ID: 11798)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.7860750555992126
    2. ' s' → logprob: -1.9110751152038574
    3. ' continue' → logprob: -2.9110751152038574
    4. ' va' → logprob: -3.0360751152038574
    5. ' continu' → logprob: -3.2860751152038574
    6. 's' → logprob: -3.5360751152038574
    7. ' ' → logprob: -3.6610751152038574
    8. ' permettra' → logprob: -4.161075115203857
    9. ' peut' → logprob: -4.286075115203857
    10. ' print' → logprob: -4.536075115203857

Token 24: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08459336310625076
    2. ' de' → logprob: -3.3345932960510254
    3. ' à' → logprob: -3.9595932960510254
    4. 'd' → logprob: -3.9595932960510254
    5. 'de' → logprob: -5.834593296051025
    6. 't' → logprob: -7.084593296051025
    7. '	d' → logprob: -7.084593296051025
    8. ' l' → logprob: -7.334593296051025
    9. 'à' → logprob: -7.709593296051025
    10. ' une' → logprob: -8.334593772888184

Token 25: ''ac' (ID: 44993)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ex' → logprob: -1.2438544034957886
    2. ''être' → logprob: -1.2438544034957886
    3. ''é' → logprob: -1.3688544034957886
    4. ''' → logprob: -2.618854522705078
    5. 'é' → logprob: -2.743854522705078
    6. 'être' → logprob: -4.243854522705078
    7. 'e' → logprob: -5.618854522705078
    8. ''év' → logprob: -5.993854522705078
    9. ''utiliser' → logprob: -6.243854522705078
    10. ''effect' → logprob: -6.243854522705078

Token 26: 'cepter' (ID: 145013)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23272952437400818
    2. 'cé' → logprob: -3.232729434967041
    3. 'cue' → logprob: -3.357729434967041
    4. 'quer' → logprob: -4.107729434967041
    5. 'cepter' → logprob: -4.232729434967041
    6. 't' → logprob: -4.232729434967041
    7. 'é' → logprob: -4.357729434967041
    8. 'cess' → logprob: -4.607729434967041
    9. 'e' → logprob: -4.732729434967041
    10. '#' → logprob: -4.732729434967041

Token 27: ' aussi' (ID: 9894)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6356794238090515
    2. ' des' → logprob: -1.1356794834136963
    3. 'des' → logprob: -3.3856794834136963
    4. ' toute' → logprob: -3.5106794834136963
    5. ' une' → logprob: -3.6356794834136963
    6. ' quasiment' → logprob: -4.260679244995117
    7. 'n' → logprob: -4.385679244995117
    8. 'a' → logprob: -5.260679244995117
    9. ' presque' → logprob: -5.385679244995117
    10. ' toutes' → logprob: -5.510679244995117

Token 28: ' bien' (ID: 5340)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08774365484714508
    2. 'des' → logprob: -3.4627437591552734
    3. ' les' → logprob: -3.8377437591552734
    4. ' d' → logprob: -4.712743759155273
    5. ' une' → logprob: -4.712743759155273
    6. ' ' → logprob: -5.462743759155273
    7. ' l' → logprob: -5.962743759155273
    8. 'les' → logprob: -6.087743759155273
    9. ' n' → logprob: -6.587743759155273
    10. 'l' → logprob: -7.962743759155273

Token 29: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.16192542016506195
    2. ' une' → logprob: -3.1619253158569336
    3. ' les' → logprob: -3.7869253158569336
    4. ' n' → logprob: -3.9119253158569336
    5. 'des' → logprob: -3.9119253158569336
    6. ' d' → logprob: -4.161925315856934
    7. ' l' → logprob: -4.411925315856934
    8. ' ' → logprob: -4.911925315856934
    9. 'les' → logprob: -6.411925315856934
    10. ' un' → logprob: -6.536925315856934

Token 30: ' nombres' (ID: 76205)
  Prédit: ' expressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.2518622875213623
    2. ' nombres' → logprob: -1.8768622875213623
    3. ' ' → logprob: -3.5018622875213623
    4. ' chiffres' → logprob: -4.876862525939941
    5. 'express' → logprob: -5.126862525939941
    6. ' ent' → logprob: -5.376862525939941
    7. ' opérations' → logprob: -5.626862525939941
    8. ' calcul' → logprob: -5.751862525939941
    9. ' valeurs' → logprob: -5.876862525939941
    10. 'ent' → logprob: -6.501862525939941

Token 31: ' ent' (ID: 1121)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5411714911460876
    2. ' ,' → logprob: -1.5411715507507324
    3. ' ' → logprob: -1.7911715507507324
    4. '<|end|>' → logprob: -3.4161715507507324
    5. ' )' → logprob: -6.291171550750732
    6. ')' → logprob: -7.666171550750732
    7. ' qu' → logprob: -7.666171550750732
    8. 's' → logprob: -8.416171073913574
    9. '  ' → logprob: -8.666171073913574
    10. ' (' → logprob: -8.791171073913574

Token 32: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.4482996463775635
    2. 'i' → logprob: -1.0732996463775635
    3. 'ières' → logprob: -4.573299407958984
    4. '#' → logprob: -5.948299407958984
    5. 'ier' → logprob: -6.198299407958984
    6. 'ière' → logprob: -6.323299407958984
    7. '```' → logprob: -6.323299407958984
    8. '`' → logprob: -8.448299407958984
    9. '   ' → logprob: -8.823299407958984
    10. 'ié' → logprob: -9.698299407958984

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04478796198964119
    2. ' ,' → logprob: -3.419787883758545
    3. ' ' → logprob: -5.169787883758545
    4. ' qu' → logprob: -5.669787883758545
    5. '<|end|>' → logprob: -6.919787883758545
    6. ' que' → logprob: -7.669787883758545
    7. ' ou' → logprob: -8.794788360595703
    8. 's' → logprob: -9.544788360595703
    9. 'qu' → logprob: -9.669788360595703
    10. ' )' → logprob: -10.169788360595703

Token 34: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08895625174045563
    2. ' ' → logprob: -2.838956356048584
    3. 'des' → logprob: -4.588956356048584
    4. ' #' → logprob: -5.588956356048584
    5. ' flott' → logprob: -5.713956356048584
    6. '#' → logprob: -5.963956356048584
    7. ' floats' → logprob: -6.713956356048584
    8. ',' → logprob: -7.213956356048584
    9. ' que' → logprob: -7.463956356048584
    10. 's' → logprob: -7.838956356048584

Token 35: ' flott' (ID: 108700)
  Prédit: ' flott'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.6781178712844849
    2. 'fl' → logprob: -2.1781177520751953
    3. 'float' → logprob: -2.4281177520751953
    4. ' nombres' → logprob: -2.6781177520751953
    5. 'flo' → logprob: -2.8031177520751953
    6. ' float' → logprob: -3.1781177520751953
    7. ' expressions' → logprob: -3.8031177520751953
    8. ' ' → logprob: -4.178117752075195
    9. ' floats' → logprob: -4.303117752075195
    10. 'n' → logprob: -4.303117752075195

Token 36: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.5249003767967224
    2. 'ant' → logprob: -0.8999003767967224
    3. ' ants' → logprob: -7.024900436401367
    4. '#' → logprob: -8.149900436401367
    5. 'a' → logprob: -8.274900436401367
    6. ']' → logprob: -10.024900436401367
    7. '```' → logprob: -10.149900436401367
    8. 'antd' → logprob: -10.274900436401367
    9. 'ans' → logprob: -10.274900436401367
    10. 'ант' → logprob: -10.649900436401367

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011234086006879807
    2. ' ,' → logprob: -4.636234283447266
    3. ' ' → logprob: -7.636234283447266
    4. '.' → logprob: -7.886234283447266
    5. ')' → logprob: -8.386234283447266
    6. 's' → logprob: -8.511234283447266
    7. ',
' → logprob: -10.011234283447266
    8. ' ou' → logprob: -10.386234283447266
    9. 'e' → logprob: -10.886234283447266
    10. ' )' → logprob: -10.886234283447266

Token 38: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.20788128674030304
    2. 'des' → logprob: -2.082881212234497
    3. '#' → logprob: -2.832881212234497
    4. ' #' → logprob: -6.332881450653076
    5. ' que' → logprob: -7.082881450653076
    6. ',' → logprob: -8.332880973815918
    7. 'que' → logprob: -8.582880973815918
    8. ' ' → logprob: -8.582880973815918
    9. ' mais' → logprob: -8.957880973815918
    10. ' qu' → logprob: -9.082880973815918

Token 39: ' opérations' (ID: 102793)
  Prédit: ' expressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.667635977268219
    2. ' chaînes' → logprob: -1.7926359176635742
    3. 'express' → logprob: -2.792635917663574
    4. 'op' → logprob: -3.292635917663574
    5. ' opérations' → logprob: -3.792635917663574
    6. ' opér' → logprob: -3.792635917663574
    7. ' op' → logprob: -3.917635917663574
    8. ' listes' → logprob: -3.917635917663574
    9. ' nombres' → logprob: -4.042635917663574
    10. ' list' → logprob: -4.167635917663574

Token 40: ' ar' (ID: 646)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4718473553657532
    2. '.' → logprob: -1.5968472957611084
    3. ',' → logprob: -2.8468472957611084
    4. ')' → logprob: -4.2218475341796875
    5. '\' → logprob: -4.2218475341796875
    6. 's' → logprob: -4.2218475341796875
    7. '(' → logprob: -4.3468475341796875
    8. ' )' → logprob: -4.7218475341796875
    9. ' ,' → logprob: -4.7218475341796875
    10. ' (' → logprob: -5.0968475341796875

Token 41: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.04868592321872711
    2. 'i' → logprob: -3.0486860275268555
    3. 'it' → logprob: -9.798686027526855
    4. '+' → logprob: -11.298686027526855
    5. 'ithmetic' → logprob: -11.548686027526855
    6. 'é' → logprob: -12.048686027526855
    7. '```' → logprob: -12.798686027526855
    8. 'í' → logprob: -13.423686027526855
    9. '   ' → logprob: -13.798686027526855
    10. 'î' → logprob: -13.923686027526855

Token 42: 'mé' (ID: 35328)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010575286112725735
    2. 't' → logprob: -4.760575294494629
    3. '-' → logprob: -7.510575294494629
    4. '+' → logprob: -7.885575294494629
    5. 'mé' → logprob: -8.260575294494629
    6. 'th' → logprob: -8.260575294494629
    7. '*' → logprob: -9.010575294494629
    8. '#' → logprob: -9.260575294494629
    9. '1' → logprob: -10.010575294494629
    10. '2' → logprob: -10.510575294494629

Token 43: 'tiques' (ID: 60539)
  Prédit: 'tiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tiques' → logprob: -0.34884342551231384
    2. 't' → logprob: -1.2238434553146362
    3. 'ti' → logprob: -8.348843574523926
    4. '```' → logprob: -10.598843574523926
    5. '#' → logprob: -10.848843574523926
    6. 'th' → logprob: -11.348843574523926
    7. '`' → logprob: -11.598843574523926
    8. '2' → logprob: -11.723843574523926
    9. 'т' → logprob: -11.723843574523926
    10. 'étiques' → logprob: -11.848843574523926

Token 44: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1758601665496826
    2. '#' → logprob: -1.4258601665496826
    3. ',' → logprob: -1.8008601665496826
    4. ')' → logprob: -2.3008601665496826
    5. '\' → logprob: -2.8008601665496826
    6. 'n' → logprob: -3.3008601665496826
    7. '\n' → logprob: -4.175860404968262
    8. ' ' → logprob: -4.425860404968262
    9. 'v' → logprob: -4.675860404968262
    10. 'e' → logprob: -4.675860404968262

Token 45: ' etc' (ID: 5178)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7055578827857971
    2. ' ' → logprob: -1.2055578231811523
    3. ' des' → logprob: -2.5805578231811523
    4. ' ,' → logprob: -3.3305578231811523
    5. '#' → logprob: -3.8305578231811523
    6. ' ou' → logprob: -4.080557823181152
    7. ' #' → logprob: -4.205557823181152
    8. ' et' → logprob: -5.455557823181152
    9. ' etc' → logprob: -5.580557823181152
    10. ' )' → logprob: -5.580557823181152

Token 46: '.
' (ID: 558)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12636946141719818
    2. '#' → logprob: -3.8763694763183594
    3. 'n' → logprob: -3.8763694763183594
    4. 'i' → logprob: -4.001369476318359
    5. 'value' → logprob: -4.501369476318359
    6. 'val' → logprob: -4.501369476318359
    7. 'x' → logprob: -5.126369476318359
    8. '\n' → logprob: -5.126369476318359
    9. '`' → logprob: -5.876369476318359
    10. 'e' → logprob: -6.126369476318359

Token 47: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1366373896598816
    2. 'x' → logprob: -3.1366374492645264
    3. 'n' → logprob: -3.3866374492645264
    4. 'val' → logprob: -3.5116374492645264
    5. 'value' → logprob: -4.261637210845947
    6. 'i' → logprob: -6.386637210845947
    7. '\n' → logprob: -6.761637210845947
    8. '#' → logprob: -7.011637210845947
    9. 'a' → logprob: -7.636637210845947
    10. 'u' → logprob: -8.011637687683105

Token 48: ' Par' (ID: 3371)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18836162984371185
    2. 'i' → logprob: -2.563361644744873
    3. '#' → logprob: -3.688361644744873
    4. 'value' → logprob: -3.813361644744873
    5. 'n' → logprob: -4.063361644744873
    6. 'val' → logprob: -4.563361644744873
    7. 'x' → logprob: -5.063361644744873
    8. '_' → logprob: -6.188361644744873
    9. ' ' → logprob: -6.313361644744873
    10. 'r' → logprob: -6.563361644744873

Token 49: ' exemple' (ID: 26320)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.5551610589027405
    2. ' exemple' → logprob: -2.5551609992980957
    3. 'a' → logprob: -2.9301609992980957
    4. 'e' → logprob: -3.1801609992980957
    5. ' valeur' → logprob: -3.4301609992980957
    6. 'ex' → logprob: -3.5551609992980957
    7. 'val' → logprob: -3.8051609992980957
    8. 'import' → logprob: -4.055160999298096
    9. ' la' → logprob: -4.055160999298096
    10. ' suite' → logprob: -4.180160999298096

Token 50: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9945592284202576
    2. 'x' → logprob: -1.4945592880249023
    3. 'a' → logprob: -1.8695592880249023
    4. 'n' → logprob: -2.4945592880249023
    5. 'v' → logprob: -3.2445592880249023
    6. 'val' → logprob: -4.244559288024902
    7. 'value' → logprob: -4.369559288024902
    8. '\' → logprob: -4.744559288024902
    9. 's' → logprob: -4.869559288024902
    10. '#' → logprob: -4.869559288024902

Token 51: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012941618449985981
    2. '1' → logprob: -5.762941837310791
    3. 'a' → logprob: -5.887941837310791
    4. '2' → logprob: -6.762941837310791
    5. ' 
' → logprob: -6.762941837310791
    6. 'x' → logprob: -7.262941837310791
    7. '4' → logprob: -7.512941837310791
    8. ' `' → logprob: -7.637941837310791
    9. ' a' → logprob: -7.762941837310791
    10. 'n' → logprob: -8.137941360473633

Token 52: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2872316539287567
    2. ' ' → logprob: -1.412231683731079
    3. 'l' → logprob: -5.2872314453125
    4. ' user' → logprob: -8.5372314453125
    5. ' ' → logprob: -8.9122314453125
    6. '  ' → logprob: -9.5372314453125
    7. ' on' → logprob: -9.9122314453125
    8. ''' → logprob: -10.1622314453125
    9. ' '' → logprob: -10.1622314453125
    10. 'user' → logprob: -10.2872314453125

Token 53: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5888698101043701
    2. ''utilisateur' → logprob: -0.9638698101043701
    3. ''' → logprob: -3.58886981010437
    4. ' utilisateur' → logprob: -4.463870048522949
    5. '#' → logprob: -5.463870048522949
    6. 'a' → logprob: -5.588870048522949
    7. '’utilisateur' → logprob: -5.838870048522949
    8. 'e' → logprob: -6.088870048522949
    9. ''u' → logprob: -6.463870048522949
    10. ''util' → logprob: -6.838870048522949

Token 54: ' tape' (ID: 27444)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.23550933599472046
    2. ' tape' → logprob: -2.7355093955993652
    3. ' sais' → logprob: -2.8605093955993652
    4. 's' → logprob: -3.6105093955993652
    5. ' ' → logprob: -3.9855093955993652
    6. 'entre' → logprob: -4.485509395599365
    7. ' veut' → logprob: -5.235509395599365
    8. ' souhaite' → logprob: -5.235509395599365
    9. ' s' → logprob: -5.860509395599365
    10. ' chois' → logprob: -5.860509395599365

Token 55: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3193777799606323
    2. '1' → logprob: -2.319377899169922
    3. '2' → logprob: -2.694377899169922
    4. '3' → logprob: -2.944377899169922
    5. ' "' → logprob: -4.569377899169922
    6. '4' → logprob: -4.694377899169922
    7. '5' → logprob: -4.694377899169922
    8. '"' → logprob: -4.694377899169922
    9. ''' → logprob: -5.319377899169922
    10. '7' → logprob: -5.819377899169922

Token 56: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15964457392692566
    2. '3' → logprob: -2.284644603729248
    3. '1' → logprob: -3.534644603729248
    4. ' ' → logprob: -4.659644603729248
    5. '5' → logprob: -6.284644603729248
    6. '(' → logprob: -6.534644603729248
    7. '"' → logprob: -6.784644603729248
    8. '4' → logprob: -6.784644603729248
    9. '10' → logprob: -7.409644603729248
    10. '12' → logprob: -7.909644603729248

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1336401253938675
    2. '+' → logprob: -2.1336400508880615
    3. ' *' → logprob: -5.633640289306641
    4. '*' → logprob: -5.883640289306641
    5. ' ' → logprob: -8.13364028930664
    6. '  ' → logprob: -10.88364028930664
    7. '   ' → logprob: -12.13364028930664
    8. ' **' → logprob: -12.75864028930664
    9. '**' → logprob: -12.88364028930664
    10. ' plus' → logprob: -13.75864028930664

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2598055601119995
    2. '4' → logprob: -1.5098055601119995
    3. '7' → logprob: -5.509805679321289
    4. '2' → logprob: -6.009805679321289
    5. '5' → logprob: -6.884805679321289
    6. '3' → logprob: -8.134805679321289
    7. '1' → logprob: -11.384805679321289
    8. '  ' → logprob: -11.759805679321289
    9. '8' → logprob: -13.134805679321289
    10. ' ' → logprob: -13.509805679321289

Token 59: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10636727511882782
    2. ' ' → logprob: -2.606367349624634
    3. '5' → logprob: -3.981367349624634
    4. '7' → logprob: -5.106367111206055
    5. '2' → logprob: -6.106367111206055
    6. '3' → logprob: -9.231367111206055
    7. '  ' → logprob: -11.231367111206055
    8. '   ' → logprob: -11.356367111206055
    9. '8' → logprob: -11.981367111206055
    10. '6' → logprob: -11.981367111206055

Token 60: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1264282763004303
    2. '",' → logprob: -2.8764283657073975
    3. '")' → logprob: -4.001428127288818
    4. ')' → logprob: -4.126428127288818
    5. ' "' → logprob: -5.126428127288818
    6. '*' → logprob: -5.126428127288818
    7. ' ",' → logprob: -5.376428127288818
    8. ' *' → logprob: -5.626428127288818
    9. ')",' → logprob: -5.751428127288818
    10. ')"' → logprob: -6.126428127288818

Token 61: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009908962063491344
    2. ' eval' → logprob: -5.509909152984619
    3. ' ,' → logprob: -7.259909152984619
    4. ' 
' → logprob: -7.634909152984619
    5. ' l' → logprob: -7.634909152984619
    6. ' \' → logprob: -7.759909152984619
    7. ' )' → logprob: -7.759909152984619
    8. ' a' → logprob: -7.884909152984619
    9. ',' → logprob: -8.009908676147461
    10. ' "' → logprob: -8.259908676147461

Token 62: ' résultat' (ID: 62556)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8822298645973206
    2. ' code' → logprob: -1.1322298049926758
    3. ' result' → logprob: -2.507229804992676
    4. ' résultat' → logprob: -2.757229804992676
    5. 'result' → logprob: -2.882229804992676
    6. 'rés' → logprob: -4.382229804992676
    7. ' eval' → logprob: -4.632229804992676
    8. ' resultat' → logprob: -5.132229804992676
    9. 'code' → logprob: -5.257229804992676
    10. 'eval' → logprob: -5.507229804992676

Token 63: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06217259541153908
    2. ' =' → logprob: -3.5621726512908936
    3. ' sera' → logprob: -3.6871726512908936
    4. ' est' → logprob: -6.4371724128723145
    5. '=' → logprob: -6.9371724128723145
    6. ' "' → logprob: -7.1871724128723145
    7. 's' → logprob: -7.3121724128723145
    8. ' s' → logprob: -7.5621724128723145
    9. '"' → logprob: -8.187172889709473
    10. ' #' → logprob: -8.312172889709473

Token 64: ' eval' (ID: 29383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3143704831600189
    2. ' l' → logprob: -1.6893705129623413
    3. ' eval' → logprob: -2.5643703937530518
    4. 'eval' → logprob: -5.314370632171631
    5. 'l' → logprob: -6.939370632171631
    6. ' la' → logprob: -7.064370632171631
    7. ' input' → logprob: -7.814370632171631
    8. ' ```' → logprob: -8.439370155334473
    9. ' `' → logprob: -8.814370155334473
    10. '`' → logprob: -9.564370155334473

Token 65: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019320894498378038
    2. 'u' → logprob: -7.376932144165039
    3. '"' → logprob: -7.751932144165039
    4. '("' → logprob: -8.001932144165039
    5. '('' → logprob: -8.501932144165039
    6. '(eval' → logprob: -9.501932144165039
    7. '("("' → logprob: -9.876932144165039
    8. '(
' → logprob: -9.876932144165039
    9. '(u' → logprob: -10.501932144165039
    10. '()' → logprob: -10.876932144165039

Token 66: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8053690791130066
    2. ')' → logprob: -1.5553691387176514
    3. '('' → logprob: -1.8053691387176514
    4. '())' → logprob: -2.3053691387176514
    5. '("' → logprob: -2.6803691387176514
    6. '()' → logprob: -5.930368900299072
    7. '))' → logprob: -6.305368900299072
    8. '(""))' → logprob: -6.680368900299072
    9. '")' → logprob: -6.930368900299072
    10. '(
' → logprob: -7.055368900299072

Token 67: ' sera' (ID: 15511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6662868857383728
    2. ' ' → logprob: -0.9162868857383728
    3. '(' → logprob: -3.0412869453430176
    4. ' )' → logprob: -3.6662869453430176
    5. ' (' → logprob: -5.041286945343018
    6. '  
' → logprob: -7.166286945343018
    7. '(
' → logprob: -7.416286945343018
    8. ' 

' → logprob: -7.791286945343018
    9. '()' → logprob: -8.04128646850586
    10. ' "' → logprob: -8.04128646850586

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6328147053718567
    2. '5' → logprob: -0.7578147053718567
    3. ' ' → logprob: -9.632814407348633
    4. '    ' → logprob: -9.882814407348633
    5. '```' → logprob: -11.132814407348633
    6. '3' → logprob: -11.257814407348633
    7. ' ```' → logprob: -11.382814407348633
    8. ' cinq' → logprob: -11.757814407348633
    9. '`' → logprob: -11.882814407348633
    10. '&nbsp' → logprob: -12.507814407348633

Token 69: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08894839882850647
    2. ' ' → logprob: -2.4639484882354736
    3. '```' → logprob: -13.338948249816895
    4. '    ' → logprob: -13.838948249816895
    5. '3' → logprob: -14.151448249816895
    6. '7' → logprob: -14.151448249816895
    7. '1' → logprob: -14.151448249816895
    8. ' (' → logprob: -14.713948249816895
    9. ' ' → logprob: -15.026448249816895
    10. '<' → logprob: -15.026448249816895

Token 70: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.552646815776825
    2. 'v' → logprob: -1.8026468753814697
    3. ')' → logprob: -2.6776468753814697
    4. 'n' → logprob: -2.8026468753814697
    5. '.' → logprob: -4.052646636962891
    6. ',' → logprob: -4.177646636962891
    7. '\n' → logprob: -4.177646636962891
    8. '' → logprob: -4.677646636962891
    9. ' ' → logprob: -4.677646636962891
    10. 'i' → logprob: -4.927646636962891

Token 71: 'n' (ID: 77)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2896222770214081
    2. '#' → logprob: -2.1646223068237305
    3. 'n' → logprob: -2.6646223068237305
    4. 'r' → logprob: -4.2896223068237305
    5. 'i' → logprob: -4.2896223068237305
    6. 'x' → logprob: -4.4146223068237305
    7. 'val' → logprob: -4.5396223068237305
    8. 'u' → logprob: -5.4146223068237305
    9. 'value' → logprob: -5.9146223068237305
    10. '\n' → logprob: -6.6646223068237305

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6169509291648865
    2. '=' → logprob: -0.8669509291648865
    3. ' ' → logprob: -4.116950988769531
    4. 'u' → logprob: -4.116950988769531
    5. 'um' → logprob: -5.741950988769531
    6. 'umber' → logprob: -6.116950988769531
    7. 'a' → logprob: -7.241950988769531
    8. 'b' → logprob: -8.116950988769531
    9. 'e' → logprob: -8.991950988769531
    10. '.' → logprob: -8.991950988769531

Token 73: ' eval' (ID: 29383)
  Prédit: ' eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eval' → logprob: -0.00419664429500699
    2. 'eval' → logprob: -5.879196643829346
    3. ' ' → logprob: -6.754196643829346
    4. ' input' → logprob: -8.629197120666504
    5. ' eva' → logprob: -11.254197120666504
    6. ' int' → logprob: -11.504197120666504
    7. '(eval' → logprob: -11.504197120666504
    8. ' evalu' → logprob: -12.129197120666504
    9. ' e' → logprob: -13.504197120666504
    10. '.eval' → logprob: -13.629197120666504

Token 74: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25203055143356323
    2. '(input' → logprob: -1.502030611038208
    3. '(eval' → logprob: -9.627030372619629
    4. ' (' → logprob: -10.502030372619629
    5. '(
' → logprob: -12.877030372619629
    6. '(in' → logprob: -13.502030372619629
    7. '(

' → logprob: -14.002030372619629
    8. '((' → logprob: -14.627030372619629
    9. '(user' → logprob: -14.877030372619629
    10. '('' → logprob: -15.127030372619629

Token 75: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40839919447898865
    2. '()' → logprob: -1.158399224281311
    3. '(' → logprob: -4.0333991050720215
    4. '('' → logprob: -6.5333991050720215
    5. ')' → logprob: -6.9083991050720215
    6. '("' → logprob: -7.6583991050720215
    7. '("("' → logprob: -8.78339958190918
    8. '(""))' → logprob: -9.40839958190918
    9. '()))' → logprob: -9.40839958190918
    10. '(()' → logprob: -9.53339958190918

Token 76: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7180747985839844
    2. '+' → logprob: -0.8430747985839844
    3. '#' → logprob: -3.2180747985839844
    4. ' ' → logprob: -4.218074798583984
    5. ')' → logprob: -4.468074798583984
    6. '
' → logprob: -5.718074798583984
    7. '.' → logprob: -5.843074798583984
    8. '<|end|>' → logprob: -6.343074798583984
    9. '  
' → logprob: -6.718074798583984
    10. '\' → logprob: -6.718074798583984

Token 77: ' Dem' (ID: 9458)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5625613927841187
    2. 'if' → logprob: -1.3125613927841187
    3. ' if' → logprob: -2.312561511993408
    4. '#' → logprob: -3.312561511993408
    5. 'n' → logprob: -4.687561511993408
    6. ' print' → logprob: -4.687561511993408
    7. ' #' → logprob: -6.062561511993408
    8. 'p' → logprob: -6.187561511993408
    9. ' n' → logprob: -7.187561511993408
    10. 'i' → logprob: -7.187561511993408

Token 78: 'ande' (ID: 4102)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02568213641643524
    2. 'e' → logprob: -3.900682210922241
    3. 'ande' → logprob: -5.900681972503662
    4. '#' → logprob: -7.400681972503662
    5. '.' → logprob: -7.775681972503662
    6. 'd' → logprob: -7.900681972503662
    7. 'an' → logprob: -8.52568244934082
    8. 'n' → logprob: -8.65068244934082
    9. 'andez' → logprob: -8.77568244934082
    10. 'and' → logprob: -9.02568244934082

Token 79: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008632414974272251
    2. '("' → logprob: -5.633632183074951
    3. '('' → logprob: -6.258632183074951
    4. ' ' → logprob: -6.758632183074951
    5. ' (' → logprob: -6.883632183074951
    6. 'a' → logprob: -8.75863265991211
    7. ')' → logprob: -9.00863265991211
    8. '()' → logprob: -9.25863265991211
    9. '("""' → logprob: -9.50863265991211
    10. 'u' → logprob: -9.50863265991211

Token 80: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.31807878613471985
    2. 'l' → logprob: -1.3180787563323975
    3. ' ' → logprob: -6.693078994750977
    4. ' input' → logprob: -7.193078994750977
    5. ' n' → logprob: -7.318078994750977
    6. ' une' → logprob: -7.443078994750977
    7. 'input' → logprob: -7.693078994750977
    8. ' ' → logprob: -7.818078994750977
    9. ' user' → logprob: -8.943078994750977
    10. 'une' → logprob: -8.943078994750977

Token 81: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.28975334763526917
    2. 'u' → logprob: -1.6647533178329468
    3. ''' → logprob: -3.0397534370422363
    4. ''u' → logprob: -5.414753437042236
    5. 'a' → logprob: -5.539753437042236
    6. ''util' → logprob: -5.914753437042236
    7. ''us' → logprob: -6.539753437042236
    8. '’utilisateur' → logprob: -7.789753437042236
    9. ''user' → logprob: -7.789753437042236
    10. ''a' → logprob: -8.164752960205078

Token 82: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12684252858161926
    2. '(' → logprob: -3.126842498779297
    3. ',' → logprob: -4.251842498779297
    4. 's' → logprob: -4.751842498779297
    5. ' d' → logprob: -5.251842498779297
    6. 'u' → logprob: -5.376842498779297
    7. ':' → logprob: -5.376842498779297
    8. ' de' → logprob: -5.501842498779297
    9. '_' → logprob: -5.626842498779297
    10. ')' → logprob: -5.626842498779297

Token 83: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1515708863735199
    2. 'e' → logprob: -2.6515707969665527
    3. ''entrée' → logprob: -3.1515707969665527
    4. ''ent' → logprob: -4.526570796966553
    5. ''é' → logprob: -5.901570796966553
    6. ''ex' → logprob: -6.276570796966553
    7. ' '' → logprob: -7.026570796966553
    8. ''entre' → logprob: -7.151570796966553
    9. ''aff' → logprob: -7.151570796966553
    10. 'a' → logprob: -7.276570796966553

Token 84: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.8830410242080688
    2. 'é' → logprob: -1.2580410242080688
    3. ''aff' → logprob: -2.7580409049987793
    4. 'e' → logprob: -2.8830409049987793
    5. 'aff' → logprob: -3.1330409049987793
    6. ''' → logprob: -3.1330409049987793
    7. 'entrée' → logprob: -3.8830409049987793
    8. ''é' → logprob: -4.008040904998779
    9. ''entrée' → logprob: -4.383040904998779
    10. 'a' → logprob: -4.633040904998779

Token 85: 'er' (ID: 259)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8801913857460022
    2. 'er' → logprob: -0.8801913857460022
    3. 'e' → logprob: -2.1301913261413574
    4. 'trer' → logprob: -3.3801913261413574
    5. '```' → logprob: -5.755191326141357
    6. 'tr' → logprob: -6.130191326141357
    7. 'tre' → logprob: -6.255191326141357
    8. ' ' → logprob: -6.755191326141357
    9. 'é' → logprob: -6.755191326141357
    10. 'éer' → logprob: -7.005191326141357

Token 86: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08491940796375275
    2. ' ' → logprob: -3.7099194526672363
    3. '  ' → logprob: -4.584919452667236
    4. ' un' → logprob: -4.834919452667236
    5. 'a' → logprob: -5.209919452667236
    6. ' une' → logprob: -5.334919452667236
    7. '"' → logprob: -5.459919452667236
    8. 'l' → logprob: -5.834919452667236
    9. ',' → logprob: -5.959919452667236
    10. ' la' → logprob: -5.959919452667236

Token 87: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06333773583173752
    2. 'n' → logprob: -4.438337802886963
    3. ' valeur' → logprob: -4.688337802886963
    4. ' second' → logprob: -5.313337802886963
    5. ' deuxième' → logprob: -5.313337802886963
    6. ' nombre' → logprob: -5.438337802886963
    7. 'de' → logprob: -5.438337802886963
    8. 's' → logprob: -5.938337802886963
    9. ' phrase' → logprob: -6.438337802886963
    10. 'b' → logprob: -6.688337802886963

Token 88: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6386192440986633
    2. 's' → logprob: -1.2636191844940186
    3. ' ' → logprob: -2.8886191844940186
    4. ')' → logprob: -3.0136191844940186
    5. ' =' → logprob: -3.5136191844940186
    6. '()' → logprob: -5.138619422912598
    7. 'a' → logprob: -5.638619422912598
    8. ',' → logprob: -5.888619422912598
    9. 'n' → logprob: -5.888619422912598
    10. ' de' → logprob: -5.888619422912598

Token 89: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.10407209396362305
    2. 'car' → logprob: -2.479072093963623
    3. ' caract' → logprob: -4.604072093963623
    4. ' caracteres' → logprob: -6.354072093963623
    5. ' caractère' → logprob: -6.729072093963623
    6. ' car' → logprob: -6.854072093963623
    7. ' ' → logprob: -7.854072093963623
    8. 'c' → logprob: -8.479072570800781
    9. '	car' → logprob: -9.229072570800781
    10. 'texte' → logprob: -9.229072570800781

Token 90: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33417728543281555
    2. ')' → logprob: -2.084177255630493
    3. 'n' → logprob: -3.459177255630493
    4. '(' → logprob: -3.459177255630493
    5. '"' → logprob: -4.334177494049072
    6. '#' → logprob: -4.459177494049072
    7. 'input' → logprob: -4.709177494049072
    8. ',' → logprob: -4.834177494049072
    9. ' ' → logprob: -4.959177494049072
    10. ':' → logprob: -5.084177494049072

Token 91: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003631431143730879
    2. ' s' → logprob: -6.628631591796875
    3. 'm' → logprob: -6.878631591796875
    4. 'c' → logprob: -8.128631591796875
    5. 'str' → logprob: -8.503631591796875
    6. 'chaine' → logprob: -9.128631591796875
    7. 'a' → logprob: -9.253631591796875
    8. 'n' → logprob: -9.253631591796875
    9. 'v' → logprob: -9.503631591796875
    10. 'x' → logprob: -9.503631591796875

Token 92: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01549975574016571
    2. ' s' → logprob: -5.390499591827393
    3. 'text' → logprob: -5.765499591827393
    4. 'chaine' → logprob: -6.140499591827393
    5. 'nom' → logprob: -7.015499591827393
    6. 'm' → logprob: -7.015499591827393
    7. 'texte' → logprob: -7.390499591827393
    8. 'name' → logprob: -7.515499591827393
    9. 'user' → logprob: -7.890499591827393
    10. 'string' → logprob: -8.14050006866455

Token 93: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062275417149066925
    2. '(' → logprob: -2.8122754096984863
    3. '()>' → logprob: -8.937275886535645
    4. ' ()' → logprob: -10.062275886535645
    5. '("")' → logprob: -10.437275886535645
    6. '()">' → logprob: -10.437275886535645
    7. '(
' → logprob: -11.437275886535645
    8. '("' → logprob: -11.437275886535645
    9. '('' → logprob: -11.687275886535645
    10. '())' → logprob: -11.937275886535645

Token 94: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.256965696811676
    2. '(' → logprob: -1.5069656372070312
    3. ' ()' → logprob: -6.256965637207031
    4. ' (' → logprob: -7.006965637207031
    5. ')' → logprob: -7.381965637207031
    6. ' ' → logprob: -7.506965637207031
    7. '('' → logprob: -8.256965637207031
    8. '("")' → logprob: -8.631965637207031
    9. 'n' → logprob: -9.131965637207031
    10. '("' → logprob: -9.506965637207031

Token 95: ' toute' (ID: 16825)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07970336824655533
    2. '("")' → logprob: -3.7047033309936523
    3. '(' → logprob: -3.8297033309936523
    4. ' ' → logprob: -4.704703330993652
    5. ' ()' → logprob: -5.079703330993652
    6. ' une' → logprob: -6.079703330993652
    7. ' la' → logprob: -6.204703330993652
    8. '("' → logprob: -6.329703330993652
    9. '('' → logprob: -6.329703330993652
    10. ' (' → logprob: -6.454703330993652

Token 96: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48589038848876953
    2. ' l' → logprob: -1.6108903884887695
    3. ' la' → logprob: -2.4858903884887695
    4. '()' → logprob: -2.8608903884887695
    5. 's' → logprob: -3.7358903884887695
    6. ' ' → logprob: -4.6108903884887695
    7. 'la' → logprob: -5.7358903884887695
    8. ' chaîne' → logprob: -6.6108903884887695
    9. 'r' → logprob: -7.4858903884887695
    10. ' ()' → logprob: -7.7358903884887695

Token 97: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7574723958969116
    2. 'ligne' → logprob: -0.7574723958969116
    3. 'l' → logprob: -3.132472515106201
    4. ' chaîne' → logprob: -4.382472515106201
    5. 'chaine' → logprob: -5.757472515106201
    6. 's' → logprob: -7.632472515106201
    7. 'li' → logprob: -7.882472515106201
    8. ' lign' → logprob: -8.132472038269043
    9. ' l' → logprob: -8.507472038269043
    10. ' ' → logprob: -8.632472038269043

Token 98: ' entrée' (ID: 95590)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5262069702148438
    2. ',' → logprob: -2.4012069702148438
    3. ')' → logprob: -2.5262069702148438
    4. 's' → logprob: -2.6512069702148438
    5. '(' → logprob: -2.9012069702148438
    6. '.' → logprob: -3.2762069702148438
    7. 'user' → logprob: -3.6512069702148438
    8. ' ' → logprob: -4.401206970214844
    9. '<|end|>' → logprob: -5.401206970214844
    10. ' (' → logprob: -5.526206970214844

Token 99: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21924999356269836
    2. ' ' → logprob: -3.094249963760376
    3. ',' → logprob: -3.219249963760376
    4. '(' → logprob: -3.594249963760376
    5. '<|end|>' → logprob: -3.719249963760376
    6. ')' → logprob: -4.094250202178955
    7. 's' → logprob: -4.219250202178955
    8. ' ()' → logprob: -5.094250202178955
    9. ' (' → logprob: -5.219250202178955
    10. '.' → logprob: -5.344250202178955

Token 100: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6980800628662109
    2. ' l' → logprob: -0.6980800628662109
    3. '	l' → logprob: -5.823080062866211
    4. ''utilisateur' → logprob: -8.198080062866211
    5. ' utilisateur' → logprob: -8.323080062866211
    6. ' défaut' → logprob: -8.323080062866211
    7. ' ' → logprob: -8.448080062866211
    8. 'def' → logprob: -8.573080062866211
    9. 'util' → logprob: -8.948080062866211
    10. '```' → logprob: -9.198080062866211

Token 101: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.006734676193445921
    2. ''' → logprob: -5.631734848022461
    3. ''util' → logprob: -6.506734848022461
    4. '’utilisateur' → logprob: -7.631734848022461
    5. ''user' → logprob: -7.881734848022461
    6. 'u' → logprob: -7.881734848022461
    7. ''us' → logprob: -8.381734848022461
    8. 'util' → logprob: -10.006734848022461
    9. ''u' → logprob: -10.256734848022461
    10. ''use' → logprob: -10.881734848022461

Token 102: ' au' (ID: 2791)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.057609137147665024
    2. 's' → logprob: -3.1826090812683105
    3. '(' → logprob: -5.1826090812683105
    4. 'n' → logprob: -5.5576090812683105
    5. 'user' → logprob: -6.4326090812683105
    6. ')' → logprob: -7.4326090812683105
    7. '()
' → logprob: -7.5576090812683105
    8. '#' → logprob: -8.057609558105469
    9. '_' → logprob: -8.182609558105469
    10. '("")' → logprob: -8.432609558105469

Token 103: ' format' (ID: 6011)
  Prédit: ' clavier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clavier' → logprob: -0.152345672249794
    2. 'cl' → logprob: -2.277345657348633
    3. 'keyboard' → logprob: -4.152345657348633
    4. 'standard' → logprob: -5.652345657348633
    5. 'n' → logprob: -5.902345657348633
    6. 'stdin' → logprob: -6.027345657348633
    7. 'prompt' → logprob: -6.277345657348633
    8. 'terminal' → logprob: -6.402345657348633
    9. 'complete' → logprob: -6.777345657348633
    10. 't' → logprob: -7.152345657348633

Token 104: ' texte' (ID: 53492)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.7607269287109375
    2. ' str' → logprob: -1.7607269287109375
    3. ' texte' → logprob: -1.8857269287109375
    4. ' chaîne' → logprob: -2.7607269287109375
    5. 'str' → logprob: -2.8857269287109375
    6. ' ' → logprob: -3.1357269287109375
    7. 'texte' → logprob: -3.6357269287109375
    8. 'string' → logprob: -4.5107269287109375
    9. ' chaînes' → logprob: -6.2607269287109375
    10. ' chaine' → logprob: -6.2607269287109375

Token 105: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8453285098075867
    2. 's' → logprob: -0.8453285098075867
    3. ',' → logprob: -2.7203285694122314
    4. 'user' → logprob: -4.095328330993652
    5. 'chaine' → logprob: -4.345328330993652
    6. ')' → logprob: -4.720328330993652
    7. '()' → logprob: -5.095328330993652
    8. ' ' → logprob: -5.845328330993652
    9. '_' → logprob: -5.845328330993652
    10. ' s' → logprob: -5.970328330993652

Token 106: 'string' (ID: 1655)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.0192844867706299
    2. ')' → logprob: -1.3942844867706299
    3. ' chaîne' → logprob: -1.3942844867706299
    4. ' string' → logprob: -3.14428448677063
    5. 'string' → logprob: -3.26928448677063
    6. 'chaine' → logprob: -3.76928448677063
    7. ' en' → logprob: -5.144284248352051
    8. ' str' → logprob: -5.144284248352051
    9. ' chaine' → logprob: -5.144284248352051
    10. 'str' → logprob: -5.144284248352051

Token 107: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008332127472385764
    2. ' )' → logprob: -7.250833034515381
    3. ').' → logprob: -9.625833511352539
    4. '()' → logprob: -11.250833511352539
    5. '")' → logprob: -11.375833511352539
    6. '),' → logprob: -12.250833511352539
    7. '')' → logprob: -12.375833511352539
    8. '#' → logprob: -12.500833511352539
    9. ')
' → logprob: -12.750833511352539
    10. '))' → logprob: -12.750833511352539

Token 108: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14168685674667358
    2. 'm' → logprob: -2.8916869163513184
    3. 'x' → logprob: -3.6416869163513184
    4. 'v' → logprob: -4.391686916351318
    5. 'user' → logprob: -5.141686916351318
    6. 'text' → logprob: -5.266686916351318
    7. 'chaine' → logprob: -5.266686916351318
    8. 'n' → logprob: -5.641686916351318
    9. 'a' → logprob: -5.641686916351318
    10. 'result' → logprob: -5.891686916351318

Token 109: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14559881389141083
    2. 'text' → logprob: -3.145598888397217
    3. 'chaine' → logprob: -3.520598888397217
    4. 'texte' → logprob: -4.020598888397217
    5. 'user' → logprob: -5.145598888397217
    6. 'print' → logprob: -5.395598888397217
    7. 'name' → logprob: -5.520598888397217
    8. 'nom' → logprob: -5.520598888397217
    9. 'string' → logprob: -5.895598888397217
    10. 'result' → logprob: -5.895598888397217

Token 110: ' méthode' (ID: 71490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1308504343032837
    2. 'n' → logprob: -2.380850315093994
    3. ' s' → logprob: -2.380850315093994
    4. ' ' → logprob: -2.755850315093994
    5. 'c' → logprob: -2.755850315093994
    6. ' n' → logprob: -3.005850315093994
    7. ' c' → logprob: -3.130850315093994
    8. 'chaine' → logprob: -3.130850315093994
    9. 'v' → logprob: -3.505850315093994
    10. ' chaine' → logprob: -4.255850315093994

Token 111: ' count' (ID: 3605)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3555237352848053
    2. ' strip' → logprob: -2.1055238246917725
    3. '.strip' → logprob: -2.3555238246917725
    4. '.lower' → logprob: -3.6055238246917725
    5. 'lower' → logprob: -3.7305238246917725
    6. ' .' → logprob: -4.230523586273193
    7. ' lower' → logprob: -4.230523586273193
    8. '.' → logprob: -7.230523586273193
    9. 'rstrip' → logprob: -8.105524063110352
    10. 'upper' → logprob: -8.855524063110352

Token 112: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001598056755028665
    2. '()' → logprob: -7.376597881317139
    3. '(
' → logprob: -7.501597881317139
    4. '('' → logprob: -8.251598358154297
    5. '(

' → logprob: -10.126598358154297
    6. 's' → logprob: -10.626598358154297
    7. ')' → logprob: -11.001598358154297
    8. '("' → logprob: -11.251598358154297
    9. '#' → logprob: -11.626598358154297
    10. '("("' → logprob: -11.626598358154297

Token 113: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02686910517513752
    2. ')' → logprob: -4.776869297027588
    3. 'e' → logprob: -4.901869297027588
    4. '('' → logprob: -5.776869297027588
    5. '')' → logprob: -6.026869297027588
    6. '(' → logprob: -6.026869297027588
    7. 'o' → logprob: -7.151869297027588
    8. '(a' → logprob: -7.901869297027588
    9. ' a' → logprob: -7.901869297027588
    10. ',' → logprob: -8.77686882019043

Token 114: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5137433409690857
    2. 'e' → logprob: -1.8887434005737305
    3. 'o' → logprob: -2.0137434005737305
    4. 'a' → logprob: -3.1387434005737305
    5. 'O' → logprob: -4.1387434005737305
    6. 'A' → logprob: -4.1387434005737305
    7. 'R' → logprob: -4.5137434005737305
    8. 'E' → logprob: -4.8887434005737305
    9. ''' → logprob: -5.0137434005737305
    10. 'C' → logprob: -5.2637434005737305

Token 115: ' compte' (ID: 19657)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1785997897386551
    2. '('' → logprob: -2.4285998344421387
    3. ')' → logprob: -2.6785998344421387
    4. '(
' → logprob: -6.428599834442139
    5. '()' → logprob: -6.928599834442139
    6. '("' → logprob: -7.428599834442139
    7. ''' → logprob: -7.678599834442139
    8. '#' → logprob: -7.678599834442139
    9. ' ' → logprob: -8.17859935760498
    10. ',' → logprob: -8.42859935760498

Token 116: ' combien' (ID: 106648)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40508925914764404
    2. ' ' → logprob: -1.655089259147644
    3. '('' → logprob: -2.5300893783569336
    4. ' (' → logprob: -4.155089378356934
    5. 's' → logprob: -4.655089378356934
    6. ')' → logprob: -4.780089378356934
    7. ' le' → logprob: -5.030089378356934
    8. ' la' → logprob: -5.405089378356934
    9. 'n' → logprob: -5.655089378356934
    10. ' les' → logprob: -6.030089378356934

Token 117: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7843778729438782
    2. 's' → logprob: -1.1593778133392334
    3. ' de' → logprob: -1.9093778133392334
    4. ' s' → logprob: -3.9093778133392334
    5. 'de' → logprob: -4.5343780517578125
    6. ' '' → logprob: -4.7843780517578125
    7. 'r' → logprob: -5.2843780517578125
    8. '<|end|>' → logprob: -5.5343780517578125
    9. ''s' → logprob: -5.7843780517578125
    10. ' d' → logprob: -5.7843780517578125

Token 118: ' fois' (ID: 14697)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.31171655654907227
    2. ' fois' → logprob: -2.1867165565490723
    3. ' R' → logprob: -2.1867165565490723
    4. ''' → logprob: -4.436716556549072
    5. 'r' → logprob: -4.561716556549072
    6. ' ' → logprob: -5.311716556549072
    7. ' '' → logprob: -5.561716556549072
    8. 'fois' → logprob: -5.936716556549072
    9. ' caractères' → logprob: -6.686716556549072
    10. 'l' → logprob: -7.186716556549072

Token 119: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7181015014648438
    2. ' '' → logprob: -1.2181015014648438
    3. ' ' → logprob: -2.5931015014648438
    4. ' la' → logprob: -3.0931015014648438
    5. ' R' → logprob: -3.8431015014648438
    6. 'R' → logprob: -4.093101501464844
    7. ' l' → logprob: -4.343101501464844
    8. '"' → logprob: -4.968101501464844
    9. 'r' → logprob: -5.468101501464844
    10. ' le' → logprob: -5.593101501464844

Token 120: ' lettre' (ID: 68013)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4579379558563232
    2. 'n' → logprob: -2.0829379558563232
    3. 'chaine' → logprob: -2.0829379558563232
    4. 's' → logprob: -2.2079379558563232
    5. ''' → logprob: -2.3329379558563232
    6. ' lettre' → logprob: -2.7079379558563232
    7. 'r' → logprob: -3.0829379558563232
    8. ' R' → logprob: -3.3329379558563232
    9. 'lett' → logprob: -3.4579379558563232
    10. ' chaîne' → logprob: -3.8329379558563232

Token 121: ' '' (ID: 461)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.8696256279945374
    2. 'R' → logprob: -0.9946256279945374
    3. ' '' → logprob: -2.1196255683898926
    4. ''' → logprob: -2.4946255683898926
    5. ' ' → logprob: -5.869625568389893
    6. ' "' → logprob: -6.244625568389893
    7. '"' → logprob: -6.369625568389893
    8. 'r' → logprob: -6.994625568389893
    9. 'A' → logprob: -8.49462604522705
    10. ''s' → logprob: -8.86962604522705

Token 122: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004318791441619396
    2. 'a' → logprob: -6.629318714141846
    3. 'e' → logprob: -7.004318714141846
    4. ''' → logprob: -7.629318714141846
    5. ' R' → logprob: -7.629318714141846
    6. 'r' → logprob: -8.004319190979004
    7. 'A' → logprob: -8.129319190979004
    8. 'o' → logprob: -8.379319190979004
    9. 'E' → logprob: -10.129319190979004
    10. '"' → logprob: -10.754319190979004

Token 123: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1782759726047516
    2. ''' → logprob: -2.1782760620117188
    3. 'r' → logprob: -3.5532760620117188
    4. 'a' → logprob: -4.553276062011719
    5. 'e' → logprob: -5.178276062011719
    6. 'R' → logprob: -6.428276062011719
    7. ' ')' → logprob: -7.053276062011719
    8. '")' → logprob: -7.303276062011719
    9. ')' → logprob: -8.428276062011719
    10. '"' → logprob: -8.553276062011719

Token 124: ' apparaît' (ID: 147656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9300639629364014
    2. ' apparaît' → logprob: -2.0550639629364014
    3. ''' → logprob: -2.1800639629364014
    4. ' '' → logprob: -2.9300639629364014
    5. '')' → logprob: -3.3050639629364014
    6. 'r' → logprob: -3.3050639629364014
    7. ' ' → logprob: -3.5550639629364014
    8. ' est' → logprob: -3.8050639629364014
    9. 'occur' → logprob: -3.8050639629364014
    10. ' appara' → logprob: -3.9300639629364014

Token 125: ' dans' (ID: 2671)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.285651683807373
    2. 'n' → logprob: -1.785651683807373
    3. ' dans' → logprob: -1.910651683807373
    4. ' ' → logprob: -2.285651683807373
    5. '(' → logprob: -2.535651683807373
    6. 'dans' → logprob: -3.160651683807373
    7. 's' → logprob: -3.410651683807373
    8. '(n' → logprob: -3.410651683807373
    9. ' (' → logprob: -3.535651683807373
    10. '('' → logprob: -3.535651683807373

Token 126: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6345453858375549
    2. ' n' → logprob: -0.7595453858375549
    3. ' la' → logprob: -7.38454532623291
    4. 'input' → logprob: -8.25954532623291
    5. ' ' → logprob: -8.38454532623291
    6. 'la' → logprob: -8.63454532623291
    7. 'l' → logprob: -8.75954532623291
    8. ' input' → logprob: -9.00954532623291
    9. 's' → logprob: -10.00954532623291
    10. ' l' → logprob: -10.19704532623291

Token 127: ' chaîne' (ID: 89288)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019271738827228546
    2. ' n' → logprob: -4.6442718505859375
    3. 'chaine' → logprob: -5.5192718505859375
    4. 'input' → logprob: -5.6442718505859375
    5. 'string' → logprob: -7.7692718505859375
    6. ' input' → logprob: -8.019271850585938
    7. 's' → logprob: -8.144271850585938
    8. 'str' → logprob: -8.894271850585938
    9. '```' → logprob: -9.394271850585938
    10. ' chaine' → logprob: -9.831771850585938

Token 128: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2577199339866638
    2. 'r' → logprob: -2.5077199935913086
    3. ')' → logprob: -4.007719993591309
    4. '_' → logprob: -4.132719993591309
    5. 'chaine' → logprob: -4.132719993591309
    6. ' ' → logprob: -4.632719993591309
    7. 'texte' → logprob: -4.757719993591309
    8. 'n' → logprob: -4.882719993591309
    9. 'text' → logprob: -4.882719993591309
    10. 'user' → logprob: -5.007719993591309

Token 129: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3424895405769348
    2. 'ie' → logprob: -2.09248948097229
    3. 'e' → logprob: -2.84248948097229
    4. 'i' → logprob: -3.09248948097229
    5. 'ignée' → logprob: -3.46748948097229
    6. 'é' → logprob: -4.717489719390869
    7. 'urée' → logprob: -5.717489719390869
    8. 'a' → logprob: -6.217489719390869
    9. 'onnée' → logprob: -6.217489719390869
    10. 'ur' → logprob: -6.967489719390869

Token 130: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4838429093360901
    2. 'r' → logprob: -1.4838428497314453
    3. 'chaine' → logprob: -2.3588428497314453
    4. '  
' → logprob: -4.358842849731445
    5. 'n' → logprob: -4.733842849731445
    6. ' s' → logprob: -5.483842849731445
    7. ')' → logprob: -5.608842849731445
    8. 'text' → logprob: -5.733842849731445
    9. ' 
' → logprob: -5.733842849731445
    10. ',' → logprob: -5.858842849731445

Token 131: 'r' (ID: 81)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3657039403915405
    2. 'chaine' → logprob: -1.7407039403915405
    3. 'text' → logprob: -2.49070405960083
    4. 'r' → logprob: -3.61570405960083
    5. 'texte' → logprob: -4.86570405960083
    6. 'txt' → logprob: -5.49070405960083
    7. 'print' → logprob: -6.11570405960083
    8. 'str' → logprob: -6.49070405960083
    9. 'user' → logprob: -6.99070405960083
    10. 'n' → logprob: -6.99070405960083

Token 132: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6630221605300903
    2. '_count' → logprob: -1.7880221605300903
    3. ' ' → logprob: -2.413022041320801
    4. '_' → logprob: -2.413022041320801
    5. '.' → logprob: -2.538022041320801
    6. 'e' → logprob: -4.038022041320801
    7. 's' → logprob: -4.413022041320801
    8. '=' → logprob: -5.038022041320801
    9. ')' → logprob: -5.038022041320801
    10. '  ' → logprob: -6.038022041320801

Token 133: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032872553914785385
    2. '=' → logprob: -3.907872438430786
    3. ' =' → logprob: -4.657872676849365
    4. ' (' → logprob: -6.907872676849365
    5. '(n' → logprob: -7.282872676849365
    6. '.' → logprob: -7.657872676849365
    7. '('' → logprob: -8.532872200012207
    8. '(
' → logprob: -8.782872200012207
    9. ')' → logprob: -9.157872200012207
    10. ' ' → logprob: -9.407872200012207

Token 134: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3638238310813904
    2. 'n' → logprob: -1.9888238906860352
    3. ' input' → logprob: -2.113823890686035
    4. ' n' → logprob: -3.113823890686035
    5. 'str' → logprob: -6.738823890686035
    6. 's' → logprob: -7.863823890686035
    7. '(input' → logprob: -7.863823890686035
    8. ' ' → logprob: -8.738823890686035
    9. ' str' → logprob: -9.113823890686035
    10. 'r' → logprob: -9.238823890686035

Token 135: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20152950286865234
    2. '()' → logprob: -1.7015295028686523
    3. '(' → logprob: -9.451529502868652
    4. ' ().' → logprob: -10.576529502868652
    5. ' ()' → logprob: -11.701529502868652
    6. '())' → logprob: -14.326529502868652
    7. '('' → logprob: -14.326529502868652
    8. ')' → logprob: -14.576529502868652
    9. '()`' → logprob: -15.201529502868652
    10. '().'' → logprob: -15.451529502868652

Token 136: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. ' count' → logprob: -16.125
    3. 'upper' → logprob: -16.375
    4. '.count' → logprob: -17.125
    5. 'c' → logprob: -18.0
    6. 'strip' → logprob: -18.75
    7. 'co' → logprob: -18.875
    8. 'replace' → logprob: -19.0
    9. 'counts' → logprob: -19.375
    10. 'capitalize' → logprob: -19.375

Token 137: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012749429792165756
    2. '(' → logprob: -4.387749195098877
    3. '("' → logprob: -9.387749671936035
    4. '("("' → logprob: -9.637749671936035
    5. ''' → logprob: -9.887749671936035
    6. ' ('' → logprob: -10.512749671936035
    7. ' '('' → logprob: -12.262749671936035
    8. ' (' → logprob: -12.637749671936035
    9. '(
' → logprob: -13.387749671936035
    10. '('(' → logprob: -13.762749671936035

Token 138: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.200166469876422e-06
    2. 'r' → logprob: -13.375004768371582
    3. ''' → logprob: -13.625004768371582
    4. ' R' → logprob: -13.750004768371582
    5. ')' → logprob: -14.250004768371582
    6. '')' → logprob: -14.750004768371582
    7. 'A' → logprob: -17.0000057220459
    8. 'P' → logprob: -17.1250057220459
    9. '"' → logprob: -17.2500057220459
    10. 'Ｒ' → logprob: -17.3750057220459

Token 139: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005818653153255582
    2. ''' → logprob: -8.000581741333008
    3. ')' → logprob: -8.375581741333008
    4. '")' → logprob: -11.875581741333008
    5. '')
' → logprob: -12.000581741333008
    6. '('' → logprob: -13.875581741333008
    7. ' ')' → logprob: -14.750581741333008
    8. '"' → logprob: -15.000581741333008
    9. '')

' → logprob: -15.000581741333008
    10. '')"' → logprob: -15.375581741333008

Token 140: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8908071517944336
    2. '<|end|>' → logprob: -1.6408071517944336
    3. 'print' → logprob: -1.7658071517944336
    4. '
' → logprob: -2.3908071517944336
    5. ')' → logprob: -2.6408071517944336
    6. 'n' → logprob: -3.8908071517944336
    7. 'r' → logprob: -3.8908071517944336
    8. '```' → logprob: -5.265807151794434
    9. '+' → logprob: -5.640807151794434
    10. ' ' → logprob: -5.765807151794434

Token 141: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005580098368227482
    2. '#' → logprob: -6.505579948425293
    3. 'r' → logprob: -6.630579948425293
    4. 'p' → logprob: -6.630579948425293
    5. 'if' → logprob: -7.255579948425293
    6. 'n' → logprob: -7.505579948425293
    7. 'pr' → logprob: -9.880579948425293
    8. 'prin' → logprob: -10.005579948425293
    9. ' print' → logprob: -11.255579948425293
    10. '#print' → logprob: -11.380579948425293

Token 142: ' veut' (ID: 41653)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3899949789047241
    2. ' print' → logprob: -1.3899949789047241
    3. 'print' → logprob: -1.6399949789047241
    4. '#' → logprob: -2.1399950981140137
    5. ' #' → logprob: -2.7649950981140137
    6. 'r' → logprob: -3.0149950981140137
    7. ' if' → logprob: -4.264995098114014
    8. ' =' → logprob: -4.639995098114014
    9. 'n' → logprob: -5.264995098114014
    10. '(' → logprob: -5.389995098114014

Token 143: ' savoir' (ID: 22835)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.42665693163871765
    2. ' ' → logprob: -1.67665696144104
    3. ' print' → logprob: -2.42665696144104
    4. ' calcul' → logprob: -4.551656723022461
    5. ' vérifier' → logprob: -4.801656723022461
    6. 'print' → logprob: -4.801656723022461
    7. ' :' → logprob: -5.551656723022461
    8. ' #' → logprob: -5.551656723022461
    9. 'r' → logprob: -5.676656723022461
    10. ':' → logprob: -5.926656723022461

Token 144: ' si' (ID: 1784)
  Prédit: ' combien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.4665764570236206
    2. ' ' → logprob: -1.5915764570236206
    3. ' si' → logprob: -2.59157657623291
    4. ' if' → logprob: -3.09157657623291
    5. '(' → logprob: -4.71657657623291
    6. 'si' → logprob: -5.34157657623291
    7. 'r' → logprob: -5.34157657623291
    8. ' le' → logprob: -5.59157657623291
    9. 'if' → logprob: -6.09157657623291
    10. ' la' → logprob: -6.21657657623291

Token 145: ' le' (ID: 505)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.449336975812912
    2. ' n' → logprob: -1.1993370056152344
    3. 'r' → logprob: -3.5743370056152344
    4. ' '' → logprob: -4.074337005615234
    5. 'n' → logprob: -5.199337005615234
    6. ' ' → logprob: -5.324337005615234
    7. ' "' → logprob: -6.574337005615234
    8. ''' → logprob: -6.699337005615234
    9. ' l' → logprob: -7.199337005615234
    10. ' le' → logprob: -8.074337005615234

Token 146: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.563396692276001
    2. 'n' → logprob: -1.563396692276001
    3. ' r' → logprob: -2.063396692276001
    4. ' n' → logprob: -2.813396692276001
    5. ' nombre' → logprob: -4.313396453857422
    6. ' '' → logprob: -5.063396453857422
    7. 'nombre' → logprob: -5.438396453857422
    8. ' R' → logprob: -6.563396453857422
    9. ''' → logprob: -6.563396453857422
    10. 'R' → logprob: -6.563396453857422

Token 147: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4560849666595459
    2. ' de' → logprob: -2.206084966659546
    3. ' n' → logprob: -2.206084966659546
    4. 'n' → logprob: -2.706084966659546
    5. ' ' → logprob: -3.581084966659546
    6. 'de' → logprob: -3.706084966659546
    7. ' d' → logprob: -4.581085205078125
    8. ' r' → logprob: -5.206085205078125
    9. 'd' → logprob: -5.456085205078125
    10. 's' → logprob: -6.456085205078125

Token 148: ' '' (ID: 461)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.2725048065185547
    2. ' ' → logprob: -1.7725048065185547
    3. 'R' → logprob: -2.0225048065185547
    4. 'r' → logprob: -2.0225048065185547
    5. ' '' → logprob: -2.2725048065185547
    6. ''' → logprob: -2.3975048065185547
    7. ' r' → logprob: -2.6475048065185547
    8. 's' → logprob: -4.897504806518555
    9. ' n' → logprob: -6.272504806518555
    10. ' espaces' → logprob: -6.647504806518555

Token 149: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08011078834533691
    2. ' R' → logprob: -3.455110788345337
    3. ''' → logprob: -3.705110788345337
    4. ' ' → logprob: -4.705110549926758
    5. 'r' → logprob: -4.955110549926758
    6. ' '' → logprob: -6.080110549926758
    7. 's' → logprob: -6.705110549926758
    8. 'n' → logprob: -8.580110549926758
    9. ' r' → logprob: -8.955110549926758
    10. ''s' → logprob: -9.017610549926758

Token 150: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8836626410484314
    2. ''' → logprob: -1.0086627006530762
    3. ' ' → logprob: -2.508662700653076
    4. ' '' → logprob: -2.758662700653076
    5. ''s' → logprob: -3.883662700653076
    6. ' est' → logprob: -3.883662700653076
    7. ' s' → logprob: -4.758662700653076
    8. '>' → logprob: -5.008662700653076
    9. ''>' → logprob: -5.758662700653076
    10. 'est' → logprob: -6.133662700653076

Token 151: ' rencontr' (ID: 49751)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.23540306091308594
    2. 'est' → logprob: -2.110403060913086
    3. ' dans' → logprob: -2.860403060913086
    4. 's' → logprob: -3.860403060913086
    5. 'dans' → logprob: -5.485403060913086
    6. ' ' → logprob: -5.610403060913086
    7. '>' → logprob: -7.860403060913086
    8. ' dépasse' → logprob: -8.235403060913086
    9. ' is' → logprob: -8.360403060913086
    10. ''est' → logprob: -8.610403060913086

Token 152: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4135984480381012
    2. 'e' → logprob: -1.7885984182357788
    3. 'és' → logprob: -1.7885984182357788
    4. 'u' → logprob: -6.538598537445068
    5. 'es' → logprob: -6.538598537445068
    6. 'ées' → logprob: -7.163598537445068
    7. 'a' → logprob: -8.28859806060791
    8. 'ent' → logprob: -9.03859806060791
    9. '```' → logprob: -9.16359806060791
    10. 'ée' → logprob: -9.28859806060791

Token 153: ' dans' (ID: 2671)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.720453679561615
    2. ' ' → logprob: -0.845453679561615
    3. 'est' → logprob: -3.2204537391662598
    4. ' >' → logprob: -3.5954537391662598
    5. '>' → logprob: -4.47045373916626
    6. ' is' → logprob: -6.59545373916626
    7. ' ==' → logprob: -6.97045373916626
    8. 's' → logprob: -7.22045373916626
    9. ' >=' → logprob: -7.84545373916626
    10. ' a' → logprob: -8.845453262329102

Token 154: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13538086414337158
    2. ' la' → logprob: -2.260380744934082
    3. ' r' → logprob: -4.760380744934082
    4. 'n' → logprob: -5.135380744934082
    5. ' l' → logprob: -6.135380744934082
    6. ' le' → logprob: -6.510380744934082
    7. 'r' → logprob: -7.010380744934082
    8. ' ' → logprob: -7.010380744934082
    9. 'la' → logprob: -7.260380744934082
    10. ' the' → logprob: -7.635380744934082

Token 155: ' chaîne' (ID: 89288)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4163094460964203
    2. ' n' → logprob: -1.7913094758987427
    3. 'r' → logprob: -2.791309356689453
    4. 's' → logprob: -3.416309356689453
    5. 'chaine' → logprob: -3.916309356689453
    6. ' texte' → logprob: -4.666309356689453
    7. 'texte' → logprob: -4.666309356689453
    8. 'a' → logprob: -5.416309356689453
    9. ' r' → logprob: -5.541309356689453
    10. 'input' → logprob: -5.541309356689453

Token 156: ' donnée' (ID: 130126)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1450626701116562
    2. ' ' → logprob: -3.1450626850128174
    3. ' dépasse' → logprob: -4.145062446594238
    4. 's' → logprob: -4.270062446594238
    5. 'est' → logprob: -4.520062446594238
    6. ' n' → logprob: -5.020062446594238
    7. ' is' → logprob: -5.145062446594238
    8. ' r' → logprob: -5.270062446594238
    9. ' dans' → logprob: -5.395062446594238
    10. ' '' → logprob: -5.395062446594238

Token 157: ' par' (ID: 686)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.07517596334218979
    2. 'est' → logprob: -2.8251760005950928
    3. ' ' → logprob: -4.950175762176514
    4. 's' → logprob: -6.075175762176514
    5. ' dépasse' → logprob: -6.575175762176514
    6. ' par' → logprob: -6.950175762176514
    7. ' dans' → logprob: -7.700175762176514
    8. ' s' → logprob: -8.075176239013672
    9. ''est' → logprob: -9.700176239013672
    10. 'es' → logprob: -9.825176239013672

Token 158: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07094145566225052
    2. ' la' → logprob: -3.19594144821167
    3. 'n' → logprob: -4.44594144821167
    4. ' r' → logprob: -5.44594144821167
    5. ' l' → logprob: -5.57094144821167
    6. 'la' → logprob: -5.69594144821167
    7. ' ' → logprob: -6.69594144821167
    8. ' le' → logprob: -7.32094144821167
    9. 'r' → logprob: -7.44594144821167
    10. ' cette' → logprob: -7.57094144821167

Token 159: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.013335284776985645
    2. 'a' → logprob: -4.513335227966309
    3. '’utilisateur' → logprob: -6.888335227966309
    4. ''' → logprob: -7.763335227966309
    5. 'util' → logprob: -8.888335227966309
    6. 'u' → logprob: -9.013335227966309
    7. ''us' → logprob: -9.263335227966309
    8. ''user' → logprob: -9.388335227966309
    9. ''util' → logprob: -9.513335227966309
    10. 'e' → logprob: -9.513335227966309

Token 160: '
' (ID: 198)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08794291317462921
    2. 'est' → logprob: -3.3379428386688232
    3. ' ' → logprob: -3.4629428386688232
    4. 's' → logprob: -5.087943077087402
    5. ' is' → logprob: -5.712943077087402
    6. ' s' → logprob: -5.962943077087402
    7. '>' → logprob: -6.462943077087402
    8. ' >' → logprob: -6.712943077087402
    9. ' dépasse' → logprob: -8.087943077087402
    10. '#' → logprob: -8.462943077087402

Token 161: '#' (ID: 2)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8359502553939819
    2. ' ' → logprob: -1.960950255393982
    3. ' >' → logprob: -2.2109503746032715
    4. ' ==' → logprob: -2.8359503746032715
    5. '>' → logprob: -3.2109503746032715
    6. ' >=' → logprob: -3.2109503746032715
    7. ' <=' → logprob: -3.5859503746032715
    8. '%' → logprob: -3.5859503746032715
    9. ' is' → logprob: -3.7109503746032715
    10. ' %' → logprob: -3.8359503746032715

Token 162: ' dépasse' (ID: 165701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7110351920127869
    2. ' est' → logprob: -0.9610351920127869
    3. '%' → logprob: -3.5860352516174316
    4. ' %' → logprob: -4.086035251617432
    5. 'est' → logprob: -4.211035251617432
    6. ' >' → logprob: -4.336035251617432
    7. ' >=' → logprob: -4.586035251617432
    8. ' is' → logprob: -4.711035251617432
    9. ' if' → logprob: -4.961035251617432
    10. 's' → logprob: -5.336035251617432

Token 163: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003909795545041561
    2. ' n' → logprob: -6.628909587860107
    3. ' le' → logprob: -7.003909587860107
    4. '0' → logprob: -7.378909587860107
    5. '1' → logprob: -9.003910064697266
    6. ' la' → logprob: -9.003910064697266
    7. '10' → logprob: -9.253910064697266
    8. 'n' → logprob: -9.378910064697266
    9. ' or' → logprob: -9.503910064697266
    10. '2' → logprob: -9.628910064697266

Token 164: ' moitié' (ID: 93216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.592434287071228
    2. '10' → logprob: -1.717434287071228
    3. ' n' → logprob: -2.0924344062805176
    4. '5' → logprob: -2.5924344062805176
    5. 'n' → logprob: -3.7174344062805176
    6. '2' → logprob: -4.467434406280518
    7. '3' → logprob: -4.467434406280518
    8. '1' → logprob: -5.467434406280518
    9. '9' → logprob: -5.592434406280518
    10. '4' → logprob: -6.217434406280518

Token 165: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06019359454512596
    2. ' ' → logprob: -3.6851935386657715
    3. ' du' → logprob: -4.3101935386657715
    4. 'de' → logprob: -4.6851935386657715
    5. ' (' → logprob: -6.5601935386657715
    6. ' d' → logprob: -6.5601935386657715
    7. ' of' → logprob: -6.9351935386657715
    8. '_' → logprob: -6.9351935386657715
    9. 'du' → logprob: -7.0601935386657715
    10. 'len' → logprob: -7.1851935386657715

Token 166: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8590463399887085
    2. ' n' → logprob: -0.8590463399887085
    3. 'len' → logprob: -2.234046459197998
    4. ' len' → logprob: -3.109046459197998
    5. ' ' → logprob: -7.609046459197998
    6. 'l' → logprob: -8.35904598236084
    7. ' la' → logprob: -8.48404598236084
    8. 'la' → logprob: -9.73404598236084
    9. 'r' → logprob: -10.23404598236084
    10. ' l' → logprob: -10.98404598236084

Token 167: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4623222351074219
    2. ' n' → logprob: -1.2123222351074219
    3. 'len' → logprob: -2.962322235107422
    4. ' len' → logprob: -4.087322235107422
    5. 'length' → logprob: -7.212322235107422
    6. 'nombre' → logprob: -7.337322235107422
    7. 'r' → logprob: -7.462322235107422
    8. ' ' → logprob: -7.712322235107422
    9. ' longueur' → logprob: -7.712322235107422
    10. 'long' → logprob: -7.962322235107422

Token 168: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5646915435791016
    2. ' n' → logprob: -0.9396915435791016
    3. ' de' → logprob: -3.6896915435791016
    4. '(n' → logprob: -5.064691543579102
    5. ' (' → logprob: -5.939691543579102
    6. 'de' → logprob: -6.189691543579102
    7. '(' → logprob: -6.564691543579102
    8. ' ' → logprob: -6.689691543579102
    9. 'r' → logprob: -7.689691543579102
    10. 's' → logprob: -8.314691543579102

Token 169: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03395237773656845
    2. 'n' → logprob: -3.408952474594116
    3. ' ' → logprob: -8.283952713012695
    4. ' ' → logprob: -9.908952713012695
    5. ' l' → logprob: -14.283952713012695
    6. ' la' → logprob: -14.283952713012695
    7. '	n' → logprob: -14.533952713012695
    8. ' ' → logprob: -14.533952713012695
    9. '  ' → logprob: -15.033952713012695
    10. ' `' → logprob: -15.033952713012695

Token 170: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15243791043758392
    2. ' if' → logprob: -2.277437925338745
    3. '
' → logprob: -3.652437925338745
    4. ' 
' → logprob: -5.527437686920166
    5. '.
' → logprob: -6.027437686920166
    6. ':
' → logprob: -6.527437686920166
    7. '.' → logprob: -6.652437686920166
    8. 'i' → logprob: -6.902437686920166
    9. ',
' → logprob: -7.527437686920166
    10. '  
' → logprob: -7.652437686920166

Token 171: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2797345817089081
    2. '):' → logprob: -1.6547346115112305
    3. ' )' → logprob: -3.5297346115112305
    4. ').' → logprob: -4.4047346115112305
    5. ' ):' → logprob: -5.1547346115112305
    6. ':' → logprob: -5.6547346115112305
    7. ' :' → logprob: -7.6547346115112305
    8. ' ).' → logprob: -7.9047346115112305
    9. 'n' → logprob: -8.77973461151123
    10. ' ' → logprob: -8.90473461151123

Token 172: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5463638305664062
    2. '#' → logprob: -2.2963638305664062
    3. 'e' → logprob: -2.2963638305664062
    4. ':' → logprob: -2.7963638305664062
    5. ''' → logprob: -3.1713638305664062
    6. 'u' → logprob: -4.046363830566406
    7. 'on' → logprob: -4.296363830566406
    8. '=' → logprob: -4.421363830566406
    9. '):' → logprob: -4.421363830566406
    10. 'r' → logprob: -4.796363830566406

Token 173: '-à' (ID: 56297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6073722839355469
    2. ' à' → logprob: -1.8573722839355469
    3. ' )' → logprob: -1.9823722839355469
    4. '-à' → logprob: -2.107372283935547
    5. ' ' → logprob: -2.607372283935547
    6. ' n' → logprob: -2.607372283935547
    7. ' >' → logprob: -2.732372283935547
    8. ')' → logprob: -2.982372283935547
    9. 'à' → logprob: -3.357372283935547
    10. '>' → logprob: -3.607372283935547

Token 174: '-dire' (ID: 76064)
  Prédit: '-à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-à' → logprob: -1.006831407546997
    2. 'à' → logprob: -1.256831407546997
    3. 'n' → logprob: -2.131831407546997
    4. '#' → logprob: -2.256831407546997
    5. 'dire' → logprob: -4.006831169128418
    6. 'r' → logprob: -4.006831169128418
    7. '```' → logprob: -4.756831169128418
    8. 'une' → logprob: -4.881831169128418
    9. ' n' → logprob: -4.881831169128418
    10. '...' → logprob: -5.256831169128418

Token 175: ' si' (ID: 1784)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9354619979858398
    2. ' n' → logprob: -1.1854619979858398
    3. ' )' → logprob: -2.43546199798584
    4. 'n' → logprob: -2.68546199798584
    5. ' ' → logprob: -3.18546199798584
    6. '>' → logprob: -3.43546199798584
    7. ' >=' → logprob: -4.06046199798584
    8. ')' → logprob: -4.68546199798584
    9. 'strict' → logprob: -5.06046199798584
    10. ' r' → logprob: -5.18546199798584

Token 176: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04743707925081253
    2. 'r' → logprob: -3.1724371910095215
    3. ' n' → logprob: -5.5474371910095215
    4. ' ' → logprob: -7.9224371910095215
    5. 'n' → logprob: -9.297436714172363
    6. ' ' → logprob: -9.922436714172363
    7. '2' → logprob: -11.672436714172363
    8. ' (' → logprob: -12.547436714172363
    9. ' len' → logprob: -13.047436714172363
    10. ' '' → logprob: -13.297436714172363

Token 177: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0067121777683496475
    2. '_' → logprob: -5.131711959838867
    3. '_c' → logprob: -7.256711959838867
    4. ' _' → logprob: -10.256711959838867
    5. '_co' → logprob: -10.631711959838867
    6. '_counts' → logprob: -12.006711959838867
    7. '>' → logprob: -13.006711959838867
    8. ' ' → logprob: -13.631711959838867
    9. ' >' → logprob: -13.756711959838867
    10. '_counter' → logprob: -14.256711959838867

Token 178: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10075736790895462
    2. '>' → logprob: -2.350757360458374
    3. ' ' → logprob: -8.100757598876953
    4. ')' → logprob: -9.600757598876953
    5. ' ' → logprob: -9.600757598876953
    6. ' >=' → logprob: -10.600757598876953
    7. ' >
' → logprob: -10.850757598876953
    8. '/' → logprob: -10.850757598876953
    9. '">' → logprob: -11.475757598876953
    10. ' )' → logprob: -12.100757598876953

Token 179: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.027265798300504684
    2. 'n' → logprob: -3.652265787124634
    3. ' (' → logprob: -7.902266025543213
    4. ' ' → logprob: -8.027265548706055
    5. '(n' → logprob: -8.777265548706055
    6. ' ' → logprob: -10.902265548706055
    7. ' "' → logprob: -11.277265548706055
    8. '"' → logprob: -11.527265548706055
    9. ' int' → logprob: -11.527265548706055
    10. '(' → logprob: -11.652265548706055

Token 180: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.46937593817710876
    2. ' /' → logprob: -1.2193759679794312
    3. ')' → logprob: -2.9693758487701416
    4. '):' → logprob: -3.7193758487701416
    5. '//' → logprob: -6.719376087188721
    6. ' )' → logprob: -7.094376087188721
    7. ' ):' → logprob: -7.719376087188721
    8. ' //' → logprob: -8.094375610351562
    9. ' ' → logprob: -8.219375610351562
    10. ':' → logprob: -8.844375610351562

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014165159314870834
    2. ' ' → logprob: -4.264164924621582
    3. '```' → logprob: -14.139164924621582
    4. ')' → logprob: -14.514164924621582
    5. '
' → logprob: -15.389164924621582
    6. '  ' → logprob: -16.7641658782959
    7. '２' → logprob: -17.0766658782959
    8. ' ' → logprob: -17.2641658782959
    9. '۲' → logprob: -17.2641658782959
    10. '1' → logprob: -17.7016658782959

Token 182: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05071960389614105
    2. '):' → logprob: -3.0507194995880127
    3. ' )' → logprob: -6.425719738006592
    4. ':' → logprob: -8.050719261169434
    5. ' ):' → logprob: -9.425719261169434
    6. '):
' → logprob: -10.050719261169434
    7. ').' → logprob: -10.550719261169434
    8. ')
' → logprob: -11.050719261169434
    9. '.' → logprob: -12.800719261169434
    10. 'if' → logprob: -13.050719261169434

Token 183: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019822833128273487
    2. 'i' → logprob: -6.25198221206665
    3. '
' → logprob: -10.501982688903809
    4. 'r' → logprob: -11.626982688903809
    5. ' if' → logprob: -11.626982688903809
    6. 'print' → logprob: -13.376982688903809
    7. '```' → logprob: -13.376982688903809
    8. '#' → logprob: -14.126982688903809
    9. 'n' → logprob: -14.126982688903809
    10. 'a' → logprob: -14.501982688903809

Token 184: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033534664544276893
    2. 'print' → logprob: -8.875335693359375
    3. ' if' → logprob: -9.125335693359375
    4. 'i' → logprob: -10.125335693359375
    5. 'result' → logprob: -10.125335693359375
    6. '```' → logprob: -12.750335693359375
    7. '#' → logprob: -14.000335693359375
    8. 'is' → logprob: -14.250335693359375
    9. '
' → logprob: -15.000335693359375
    10. 'r' → logprob: -15.000335693359375

Token 185: ' c' (ID: 274)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.013347860425710678
    2. 'r' → logprob: -4.513347625732422
    3. ' ' → logprob: -6.263347625732422
    4. ' ' → logprob: -7.888347625732422
    5. ' (' → logprob: -12.013347625732422
    6. '  ' → logprob: -12.638347625732422
    7. ' ' → logprob: -13.388347625732422
    8. '	r' → logprob: -14.138347625732422
    9. '(r' → logprob: -14.200847625732422
    10. '(' → logprob: -14.388347625732422

Token 186: ''est' (ID: 6616)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6345217823982239
    2. ' r' → logprob: -1.759521722793579
    3. '_' → logprob: -2.384521722793579
    4. 'ount' → logprob: -2.509521722793579
    5. 'on' → logprob: -3.384521722793579
    6. 'ont' → logprob: -3.759521722793579
    7. 'o' → logprob: -4.134521961212158
    8. '_r' → logprob: -4.134521961212158
    9. 'e' → logprob: -4.884521961212158
    10. ' ' → logprob: -5.509521961212158

Token 187: ' vrai' (ID: 42682)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.10729514062404633
    2. 'r' → logprob: -3.232295036315918
    3. ' ' → logprob: -3.357295036315918
    4. ' True' → logprob: -3.857295036315918
    5. 'True' → logprob: -6.482295036315918
    6. ' (' → logprob: -6.982295036315918
    7. ' ' → logprob: -6.982295036315918
    8. ' true' → logprob: -6.982295036315918
    9. ' vrai' → logprob: -6.982295036315918
    10. ' n' → logprob: -8.357295036315918

Token 188: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012195856310427189
    2. ',' → logprob: -5.262196063995361
    3. ' :' → logprob: -5.637196063995361
    4. ':
' → logprob: -5.762196063995361
    5. ' :
' → logprob: -9.387195587158203
    6. 'if' → logprob: -9.762195587158203
    7. ' ,' → logprob: -10.762195587158203
    8. ' if' → logprob: -11.012195587158203
    9. ',
' → logprob: -11.262195587158203
    10. ',:' → logprob: -12.387195587158203

Token 189: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14871999621391296
    2. 'print' → logprob: -2.0237200260162354
    3. ' if' → logprob: -5.523719787597656
    4. 'if' → logprob: -6.648719787597656
    5. ' ' → logprob: -8.273719787597656
    6. ':' → logprob: -8.898719787597656
    7. '   ' → logprob: -9.273719787597656
    8. ' ' → logprob: -10.023719787597656
    9. 'r' → logprob: -10.273719787597656
    10. ' prin' → logprob: -11.148719787597656

Token 190: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.48351752758026123
    2. 'print' → logprob: -0.9835175275802612
    3. 'pr' → logprob: -5.733517646789551
    4. ' affiche' → logprob: -6.483517646789551
    5. ' imprime' → logprob: -6.858517646789551
    6. 'aff' → logprob: -7.983517646789551
    7. '_print' → logprob: -8.29601764678955
    8. 'p' → logprob: -8.48351764678955
    9. 'if' → logprob: -8.48351764678955
    10. ' afficher' → logprob: -8.85851764678955

Token 191: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9498036503791809
    2. '("' → logprob: -1.0748035907745361
    3. '(' → logprob: -1.4498035907745361
    4. ' "' → logprob: -3.574803590774536
    5. '(
' → logprob: -6.074803829193115
    6. ''' → logprob: -6.199803829193115
    7. '('' → logprob: -6.699803829193115
    8. ' (' → logprob: -6.824803829193115
    9. ' ("' → logprob: -6.824803829193115
    10. ' ' → logprob: -8.074803352355957

Token 192: 'Yes' (ID: 13022)
  Prédit: 'Plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Plus' → logprob: -1.7417651414871216
    2. 'R' → logprob: -2.116765022277832
    3. 'T' → logprob: -2.116765022277832
    4. 'Oui' → logprob: -2.116765022277832
    5. 'O' → logprob: -2.366765022277832
    6. '"' → logprob: -2.991765022277832
    7. 'OK' → logprob: -3.366765022277832
    8. 'Nombre' → logprob: -3.366765022277832
    9. 'True' → logprob: -3.491765022277832
    10. 'Yes' → logprob: -3.616765022277832

Token 193: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005734909325838089
    2. '")' → logprob: -5.255734920501709
    3. '"
' → logprob: -8.13073444366455
    4. '")
' → logprob: -10.38073444366455
    5. '```' → logprob: -10.50573444366455
    6. '";' → logprob: -10.75573444366455
    7. 'if' → logprob: -11.00573444366455
    8. '");' → logprob: -11.13073444366455
    9. '".' → logprob: -11.25573444366455
    10. 'print' → logprob: -11.38073444366455

Token 194: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012524372898042202
    2. '
' → logprob: -4.512524604797363
    3. ' if' → logprob: -6.762524604797363
    4. '```' → logprob: -8.512524604797363
    5. ' 
' → logprob: -9.762524604797363
    6. 'print' → logprob: -10.387524604797363
    7. 'i' → logprob: -11.262524604797363
    8. '``' → logprob: -11.887524604797363
    9. '
' → logprob: -12.512524604797363
    10. '  
' → logprob: -13.387524604797363

Token 195: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01021568477153778
    2. ':
' → logprob: -4.760215759277344
    3. 'print' → logprob: -6.635215759277344
    4. ' :' → logprob: -9.260215759277344
    5. '
' → logprob: -9.635215759277344
    6. ',' → logprob: -9.635215759277344
    7. 'else' → logprob: -11.510215759277344
    8. ' print' → logprob: -11.510215759277344
    9. 'n' → logprob: -11.635215759277344
    10. '```' → logprob: -11.635215759277344

Token 196: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2822336256504059
    2. 'print' → logprob: -1.4072335958480835
    3. '"' → logprob: -7.532233715057373
    4. ' ' → logprob: -7.907233715057373
    5. '    ' → logprob: -9.657233238220215
    6. ' ' → logprob: -10.657233238220215
    7. '	print' → logprob: -10.657233238220215
    8. '(print' → logprob: -11.407233238220215
    9. '   ' → logprob: -11.657233238220215
    10. ''' → logprob: -11.657233238220215

Token 197: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.35035058856010437
    2. 'print' → logprob: -1.2253506183624268
    3. 'pr' → logprob: -7.725350379943848
    4. ' affiche' → logprob: -7.850350379943848
    5. '.print' → logprob: -8.725350379943848
    6. ':' → logprob: -9.225350379943848
    7. '(print' → logprob: -9.350350379943848
    8. ' continue' → logprob: -9.475350379943848
    9. ' imprime' → logprob: -9.850350379943848
    10. ' prints' → logprob: -9.850350379943848

Token 198: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.015430611558258533
    2. '("' → logprob: -4.515430450439453
    3. '(' → logprob: -6.015430450439453
    4. ' ' → logprob: -6.640430450439453
    5. ''' → logprob: -8.390430450439453
    6. ' "' → logprob: -8.515430450439453
    7. '(
' → logprob: -9.015430450439453
    8. '```' → logprob: -11.515430450439453
    9. '()' → logprob: -11.640430450439453
    10. '   ' → logprob: -11.890430450439453

Token 199: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.4259644558478612e-05
    2. ' No' → logprob: -11.625014305114746
    3. '"No' → logprob: -12.500014305114746
    4. 'NO' → logprob: -15.000014305114746
    5. 'N' → logprob: -15.125014305114746
    6. 'Non' → logprob: -15.125014305114746
    7. '"' → logprob: -15.125014305114746
    8. 'Yes' → logprob: -15.500014305114746
    9. 'Not' → logprob: -16.87501335144043
    10. ' ' → logprob: -16.87501335144043

Token 200: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6030797958374023
    2. '"' → logprob: -0.8530797958374023
    3. '"
' → logprob: -4.228079795837402
    4. '")
' → logprob: -4.478079795837402
    5. 'if' → logprob: -7.478079795837402
    6. ')' → logprob: -9.103079795837402
    7. '```' → logprob: -9.978079795837402
    8. '")

' → logprob: -10.603079795837402
    9. '"
' → logprob: -10.853079795837402
    10. '")
' → logprob: -10.853079795837402

Token 201: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011286075226962566
    2. 'print' → logprob: -4.51128625869751
    3. '```' → logprob: -8.886285781860352
    4. 'i' → logprob: -9.386285781860352
    5. '
' → logprob: -11.761285781860352
    6. 'p' → logprob: -12.761285781860352
    7. ' if' → logprob: -13.136285781860352
    8. '``' → logprob: -13.761285781860352
    9. 'pr' → logprob: -14.511285781860352
    10. '  
' → logprob: -14.636285781860352

Token 202: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008663220214657485
    2. 'print' → logprob: -7.125866413116455
    3. 'i' → logprob: -9.750865936279297
    4. '```' → logprob: -12.750865936279297
    5. ' if' → logprob: -14.375865936279297
    6. 'p' → logprob: -16.000865936279297
    7. '
' → logprob: -17.125865936279297
    8. 'If' → logprob: -17.625865936279297
    9. 'pr' → logprob: -17.875865936279297
    10. '  
' → logprob: -18.125865936279297

Token 203: ''in' (ID: 17942)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43440189957618713
    2. 'e' → logprob: -1.5594018697738647
    3. 'i' → logprob: -2.6844019889831543
    4. '#' → logprob: -3.3094019889831543
    5. 'f' → logprob: -3.6844019889831543
    6. 'n' → logprob: -5.059401988983154
    7. 'r' → logprob: -6.684401988983154
    8. ' if' → logprob: -6.809401988983154
    9. '```' → logprob: -7.184401988983154
    10. 'ine' → logprob: -7.434401988983154

Token 204: 'struction' (ID: 5316)
  Prédit: 'struction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'struction' → logprob: -0.467098206281662
    2. 'if' → logprob: -1.2170982360839844
    3. 'f' → logprob: -3.4670982360839844
    4. 'e' → logprob: -3.8420982360839844
    5. 't' → logprob: -6.092098236083984
    6. 'p' → logprob: -6.092098236083984
    7. 'on' → logprob: -6.217098236083984
    8. 'struct' → logprob: -6.467098236083984
    9. 'str' → logprob: -6.592098236083984
    10. 'n' → logprob: -6.592098236083984

Token 205: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1273997575044632
    2. ' if' → logprob: -2.1273996829986572
    3. 'print' → logprob: -7.752399921417236
    4. ' print' → logprob: -10.252399444580078
    5. '```' → logprob: -12.377399444580078
    6. 'i' → logprob: -15.002399444580078
    7. ' ' → logprob: -15.002399444580078
    8. 'If' → logprob: -15.377399444580078
    9. ':' → logprob: -15.627399444580078
    10. 's' → logprob: -15.752399444580078

Token 206: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010285300202667713
    2. '("' → logprob: -5.010285377502441
    3. '('' → logprob: -5.760285377502441
    4. '(print' → logprob: -8.385285377502441
    5. '()' → logprob: -8.885285377502441
    6. '(
' → logprob: -10.510285377502441
    7. '(

' → logprob: -11.760285377502441
    8. '(`' → logprob: -13.010285377502441
    9. '((' → logprob: -13.260285377502441
    10. 'print' → logprob: -13.260285377502441

Token 207: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030759908258914948
    2. '('' → logprob: -6.628076076507568
    3. '(print' → logprob: -6.628076076507568
    4. '()' → logprob: -8.75307559967041
    5. '("' → logprob: -9.00307559967041
    6. '(
' → logprob: -9.50307559967041
    7. 'print' → logprob: -10.00307559967041
    8. '(pr' → logprob: -11.75307559967041
    9. '(

' → logprob: -12.25307559967041
    10. '(True' → logprob: -13.37807559967041

Token 208: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20178167521953583
    2. '(' → logprob: -1.7017816305160522
    3. '('' → logprob: -8.076781272888184
    4. '(
' → logprob: -10.201781272888184
    5. '()' → logprob: -11.326781272888184
    6. '("")' → logprob: -13.201781272888184
    7. '(""' → logprob: -13.326781272888184
    8. '(

' → logprob: -13.451781272888184
    9. '"' → logprob: -13.826781272888184
    10. '((' → logprob: -14.076781272888184

Token 209: ' texte' (ID: 53492)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029994037002325058
    2. '("' → logprob: -3.779994010925293
    3. '(
' → logprob: -5.654994010925293
    4. '"' → logprob: -5.779994010925293
    5. ')' → logprob: -9.654994010925293
    6. '('' → logprob: -10.279994010925293
    7. '()' → logprob: -11.529994010925293
    8. '(

' → logprob: -11.654994010925293
    9. ''' → logprob: -11.904994010925293
    10. ' (' → logprob: -13.029994010925293

Token 210: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13271450996398926
    2. '("' → logprob: -2.1327145099639893
    3. '('' → logprob: -5.63271427154541
    4. '(
' → logprob: -6.38271427154541
    5. '()' → logprob: -8.13271427154541
    6. '(print' → logprob: -9.88271427154541
    7. '((' → logprob: -10.00771427154541
    8. '(

' → logprob: -10.13271427154541
    9. '("\' → logprob: -11.00771427154541
    10. '("")' → logprob: -11.75771427154541

Token 211: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.033140018582344055
    2. ' l' → logprob: -3.533139944076538
    3. ''écran' → logprob: -6.658140182495117
    4. 'la' → logprob: -6.908140182495117
    5. '```' → logprob: -7.783140182495117
    6. 'é' → logprob: -8.158140182495117
    7. ' écran' → logprob: -9.283140182495117
    8. 'à' → logprob: -9.533140182495117
    9. '’écran' → logprob: -10.158140182495117
    10. 'screen' → logprob: -10.783140182495117

Token 212: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.008167481049895287
    2. 'a' → logprob: -5.258167266845703
    3. '’écran' → logprob: -6.633167266845703
    4. ''utilisateur' → logprob: -7.133167266845703
    5. 'é' → logprob: -8.633167266845703
    6. ''' → logprob: -8.633167266845703
    7. ' écran' → logprob: -9.008167266845703
    8. 'e' → logprob: -9.258167266845703
    9. ''é' → logprob: -9.508167266845703
    10. 'screen' → logprob: -9.883167266845703

Token 213: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6645714640617371
    2. 'if' → logprob: -0.7895714640617371
    3. '
' → logprob: -3.539571523666382
    4. '(
' → logprob: -7.414571285247803
    5. ' if' → logprob: -7.664571285247803
    6. '(' → logprob: -8.164571762084961
    7. '\n' → logprob: -8.289571762084961
    8. '(print' → logprob: -8.539571762084961
    9. '  
' → logprob: -8.914571762084961
    10. '()
' → logprob: -9.539571762084961

Token 214: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10026243329048157
    2. 'if' → logprob: -2.350262403488159
    3. '```' → logprob: -10.600262641906738
    4. 'pr' → logprob: -11.225262641906738
    5. 'p' → logprob: -11.600262641906738
    6. '
' → logprob: -12.475262641906738
    7. 'prin' → logprob: -12.975262641906738
    8. 'i' → logprob: -13.600262641906738
    9. ' if' → logprob: -15.350262641906738
    10. '``' → logprob: -15.475262641906738

Token 215: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02326563000679016
    2. 'print' → logprob: -3.7732656002044678
    3. '```' → logprob: -11.523265838623047
    4. 'i' → logprob: -11.773265838623047
    5. ' if' → logprob: -13.773265838623047
    6. 'pr' → logprob: -13.773265838623047
    7. 'prin' → logprob: -15.398265838623047
    8. 'p' → logprob: -15.523265838623047
    9. 'ifs' → logprob: -17.523265838623047
    10. '``' → logprob: -17.773265838623047

Token 216: ''op' (ID: 70747)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1555231660604477
    2. 'if' → logprob: -2.4055230617523193
    3. 'e' → logprob: -3.7805230617523193
    4. 'ine' → logprob: -3.9055230617523193
    5. '```' → logprob: -6.280523300170898
    6. 'n' → logprob: -6.655523300170898
    7. 'r' → logprob: -6.655523300170898
    8. 'i' → logprob: -7.030523300170898
    9. '`' → logprob: -7.155523300170898
    10. 'a' → logprob: -7.905523300170898

Token 217: 'érateur' (ID: 108528)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01936866156756878
    2. 'int' → logprob: -4.269368648529053
    3. 't' → logprob: -6.269368648529053
    4. 'print' → logprob: -6.394368648529053
    5. 'ut' → logprob: -7.769368648529053
    6. 'if' → logprob: -8.019369125366211
    7. 'er' → logprob: -8.394369125366211
    8. 'n' → logprob: -8.894369125366211
    9. 'ort' → logprob: -9.144369125366211
    10. '```' → logprob: -10.019369125366211

Token 218: ' condition' (ID: 7060)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5963631272315979
    2. 'if' → logprob: -1.9713630676269531
    3. ' if' → logprob: -1.9713630676269531
    4. ' >' → logprob: -2.221363067626953
    5. '?' → logprob: -4.346363067626953
    6. ' ' → logprob: -4.721363067626953
    7. '=' → logprob: -4.846363067626953
    8. 'print' → logprob: -5.096363067626953
    9. '<' → logprob: -5.221363067626953
    10. '>=' → logprob: -5.721363067626953

Token 219: 'nel' (ID: 10085)
  Prédit: 'nel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nel' → logprob: -0.017541611567139626
    2. 'nelle' → logprob: -4.642541408538818
    3. ' if' → logprob: -5.892541408538818
    4. 'el' → logprob: -6.142541408538818
    5. 'al' → logprob: -6.642541408538818
    6. 'nels' → logprob: -7.017541408538818
    7. '?' → logprob: -9.017541885375977
    8. 'naire' → logprob: -9.267541885375977
    9. 'nelles' → logprob: -9.267541885375977
    10. ' ' → logprob: -9.517541885375977

Token 220: ' ter' (ID: 3069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21603909134864807
    2. ' print' → logprob: -1.8410390615463257
    3. '"' → logprob: -4.841039180755615
    4. '?' → logprob: -4.966039180755615
    5. '(print' → logprob: -4.966039180755615
    6. ''' → logprob: -5.466039180755615
    7. ' ' → logprob: -5.841039180755615
    8. '(' → logprob: -5.841039180755615
    9. ' (' → logprob: -6.966039180755615
    10. ' ?' → logprob: -7.841039180755615

Token 221: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.06432425230741501
    2. 'n' → logprob: -3.314324140548706
    3. '?' → logprob: -3.689324140548706
    4. 'na' → logprob: -7.814324378967285
    5. '```' → logprob: -8.939324378967285
    6. '?n' → logprob: -9.439324378967285
    7. ''' → logprob: -9.564324378967285
    8. '"' → logprob: -9.564324378967285
    9. 'naires' → logprob: -9.939324378967285
    10. ' ?' → logprob: -10.314324378967285

Token 222: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.057000696659088135
    2. ' print' → logprob: -2.9320006370544434
    3. ':' → logprob: -7.182000637054443
    4. '(print' → logprob: -8.182001113891602
    5. '"' → logprob: -8.432001113891602
    6. ' "' → logprob: -8.682001113891602
    7. ' ' → logprob: -8.807001113891602
    8. ' :' → logprob: -9.432001113891602
    9. ' est' → logprob: -10.432001113891602
    10. ' =' → logprob: -10.432001113891602

Token 223: 'ou' (ID: 283)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4829888641834259
    2. 'print' → logprob: -0.9829888343811035
    3. ' "' → logprob: -5.4829888343811035
    4. ' print' → logprob: -5.7329888343811035
    5. ''' → logprob: -6.7329888343811035
    6. ')' → logprob: -9.357989311218262
    7. 'Yes' → logprob: -9.482989311218262
    8. '
' → logprob: -9.982989311218262
    9. ' ' → logprob: -10.982989311218262
    10. '("' → logprob: -11.107989311218262

Token 224: ' expression' (ID: 12973)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8035513758659363
    2. ')' → logprob: -1.803551435470581
    3. '"' → logprob: -2.053551435470581
    4. ''' → logprob: -2.553551435470581
    5. ' print' → logprob: -2.678551435470581
    6. ' "' → logprob: -3.303551435470581
    7. 'if' → logprob: -3.803551435470581
    8. ' '' → logprob: -4.428551197052002
    9. '?' → logprob: -4.928551197052002
    10. ':' → logprob: -5.053551197052002

Token 225: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2753661870956421
    2. ' print' → logprob: -2.0253663063049316
    3. ' if' → logprob: -3.1503663063049316
    4. '"' → logprob: -4.275366306304932
    5. 'if' → logprob: -4.400366306304932
    6. '?' → logprob: -4.775366306304932
    7. ')' → logprob: -5.150366306304932
    8. ' ' → logprob: -5.150366306304932
    9. ' "' → logprob: -5.275366306304932
    10. ' =' → logprob: -6.025366306304932

Token 226: 'nelle' (ID: 30805)
  Prédit: 'nelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nelle' → logprob: -0.019631002098321915
    2. 'nel' → logprob: -4.2696309089660645
    3. 'naire' → logprob: -5.2696309089660645
    4. '?' → logprob: -9.144631385803223
    5. 'n' → logprob: -9.894631385803223
    6. 'al' → logprob: -10.019631385803223
    7. 'née' → logprob: -10.394631385803223
    8. 'nelles' → logprob: -11.144631385803223
    9. 'el' → logprob: -11.269631385803223
    10. 'ale' → logprob: -11.519631385803223

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16512782871723175
    2. 'print' → logprob: -1.9151278734207153
    3. ':' → logprob: -6.415127754211426
    4. '):' → logprob: -7.040127754211426
    5. ' print' → logprob: -7.290127754211426
    6. ')
' → logprob: -7.415127754211426
    7. '(print' → logprob: -8.165127754211426
    8. ' )' → logprob: -9.040127754211426
    9. '```' → logprob: -9.040127754211426
    10. '
' → logprob: -9.165127754211426

Token 228: ' permet' (ID: 11798)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002836232597474009
    2. ' print' → logprob: -8.625283241271973
    3. '(print' → logprob: -10.750283241271973
    4. '
' → logprob: -10.875283241271973
    5. ':' → logprob: -11.250283241271973
    6. ')' → logprob: -11.750283241271973
    7. 'prin' → logprob: -11.750283241271973
    8. 'pr' → logprob: -12.125283241271973
    9. '#print' → logprob: -12.250283241271973
    10. ',' → logprob: -12.750283241271973

Token 229: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39835935831069946
    2. ' d' → logprob: -1.2733592987060547
    3. ' print' → logprob: -3.7733592987060547
    4. ' de' → logprob: -3.7733592987060547
    5. 'd' → logprob: -6.398359298706055
    6. 'de' → logprob: -7.898359298706055
    7. '_print' → logprob: -8.648359298706055
    8. '#print' → logprob: -8.648359298706055
    9. ' ' → logprob: -9.648359298706055
    10. ' to' → logprob: -9.898359298706055

Token 230: ''effect' (ID: 198544)
  Prédit: ''aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.06247264891862869
    2. ''' → logprob: -3.6874725818634033
    3. 'print' → logprob: -4.312472820281982
    4. 'e' → logprob: -4.562472820281982
    5. ''é' → logprob: -4.937472820281982
    6. ' afficher' → logprob: -7.062472820281982
    7. ''effect' → logprob: -7.187472820281982
    8. ' print' → logprob: -7.437472820281982
    9. ''utiliser' → logprob: -7.437472820281982
    10. ' '' → logprob: -8.437472343444824

Token 231: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.001198086072690785
    2. 'ue' → logprob: -7.1261982917785645
    3. 'u' → logprob: -9.001197814941406
    4. 'uez' → logprob: -9.751197814941406
    5. '#' → logprob: -9.876197814941406
    6. 'iver' → logprob: -10.126197814941406
    7. 'er' → logprob: -10.751197814941406
    8. 'r' → logprob: -11.001197814941406
    9. 'print' → logprob: -11.251197814941406
    10. 'ué' → logprob: -11.376197814941406

Token 232: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005235887598246336
    2. ' print' → logprob: -5.25523567199707
    3. '(print' → logprob: -14.63023567199707
    4. 'prin' → logprob: -14.63023567199707
    5. '.print' → logprob: -14.88023567199707
    6. '"' → logprob: -15.25523567199707
    7. '_print' → logprob: -15.75523567199707
    8. '#print' → logprob: -15.88023567199707
    9. '	print' → logprob: -16.63023567199707
    10. ' prin' → logprob: -16.75523567199707

Token 233: ' test' (ID: 1746)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005906827282160521
    2. ' print' → logprob: -7.500590801239014
    3. 'prin' → logprob: -10.375590324401855
    4. 'pr' → logprob: -13.250590324401855
    5. ' ' → logprob: -13.500590324401855
    6. 'a' → logprob: -14.875590324401855
    7. 'r' → logprob: -15.000590324401855
    8. '"' → logprob: -15.000590324401855
    9. '(print' → logprob: -15.375590324401855
    10. '=' → logprob: -15.625590324401855

Token 234: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005585310515016317
    2. ' print' → logprob: -5.255585193634033
    3. '"' → logprob: -8.755585670471191
    4. '(print' → logprob: -9.755585670471191
    5. ':' → logprob: -9.880585670471191
    6. '.print' → logprob: -10.880585670471191
    7. ',' → logprob: -11.755585670471191
    8. ')' → logprob: -11.880585670471191
    9. '_print' → logprob: -12.005585670471191
    10. '   ' → logprob: -12.005585670471191

Token 235: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2821953296661377
    2. 'une' → logprob: -1.6571953296661377
    3. ' une' → logprob: -3.0321953296661377
    4. ' print' → logprob: -5.532195091247559
    5. 'un' → logprob: -7.282195091247559
    6. '```' → logprob: -7.407195091247559
    7. 'aff' → logprob: -7.907195091247559
    8. '1' → logprob: -8.157195091247559
    9. ' ' → logprob: -8.282195091247559
    10. ''une' → logprob: -8.407195091247559

Token 236: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26848676800727844
    2. ' seul' → logprob: -2.268486738204956
    3. ' print' → logprob: -2.393486738204956
    4. 'se' → logprob: -3.893486738204956
    5. ' seule' → logprob: -4.143486976623535
    6. 'ligne' → logprob: -6.268486976623535
    7. ' ligne' → logprob: -7.893486976623535
    8. ' unique' → logprob: -8.143486976623535
    9. ' ' → logprob: -8.268486976623535
    10. 'single' → logprob: -8.518486976623535

Token 237: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -13.62500286102295
    3. ' print' → logprob: -14.25000286102295
    4. '```' → logprob: -15.12500286102295
    5. 'prin' → logprob: -15.50000286102295
    6. '(print' → logprob: -15.62500286102295
    7. ')
' → logprob: -16.000003814697266
    8. 'pr' → logprob: -16.000003814697266
    9. '.print' → logprob: -16.375003814697266
    10. ')' → logprob: -17.125003814697266

Token 238: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '```' → logprob: -17.0
    4. 'prin' → logprob: -18.0
    5. 'pr' → logprob: -18.75
    6. '
' → logprob: -19.875
    7. '(print' → logprob: -20.625
    8. '.print' → logprob: -21.5
    9. 'prit' → logprob: -21.75
    10. '#print' → logprob: -21.875

Token 239: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. 'prin' → logprob: -16.75
    4. 'pr' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. 'prit' → logprob: -21.375
    7. '
' → logprob: -21.625
    8. '`' → logprob: -21.875
    9. 'pri' → logprob: -22.25
    10. 'p' → logprob: -22.25

Token 240: 'Yes' (ID: 13022)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.875000953674316
    3. 'prin' → logprob: -15.250000953674316
    4. '```' → logprob: -16.625
    5. 'pr' → logprob: -17.5
    6. '"' → logprob: -18.625
    7. '
' → logprob: -18.875
    8. 'Yes' → logprob: -19.125
    9. 'Print' → logprob: -19.25
    10. 'prit' → logprob: -19.375

Token 241: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004726195242255926
    2. 'if' → logprob: -5.754726409912109
    3. 'print' → logprob: -7.504726409912109
    4. ' if' → logprob: -7.629726409912109
    5. ''' → logprob: -8.12972640991211
    6. 'Yes' → logprob: -8.62972640991211
    7. '")' → logprob: -10.75472640991211
    8. ')' → logprob: -11.75472640991211
    9. '```' → logprob: -13.25472640991211
    10. ' Yes' → logprob: -13.62972640991211

Token 242: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.774005115032196
    2. 'if' → logprob: -1.1490051746368408
    3. ' if' → logprob: -1.5240051746368408
    4. ' print' → logprob: -5.774004936218262
    5. 'Yes' → logprob: -7.774004936218262
    6. ')' → logprob: -8.274004936218262
    7. '"' → logprob: -8.524004936218262
    8. 'Print' → logprob: -10.899004936218262
    9. ' Yes' → logprob: -11.149004936218262
    10. ' ' → logprob: -12.149004936218262

Token 243: ' condition' (ID: 7060)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14270098507404327
    2. ' r' → logprob: -2.0177009105682373
    3. '(r' → logprob: -10.892701148986816
    4. ' ' → logprob: -13.142701148986816
    5. '"' → logprob: -13.392701148986816
    6. ' (' → logprob: -14.017701148986816
    7. '	r' → logprob: -14.017701148986816
    8. '_r' → logprob: -15.017701148986816
    9. ''r' → logprob: -15.142701148986816
    10. '   ' → logprob: -15.142701148986816

Token 244: ' else' (ID: 1203)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42230287194252014
    2. ' else' → logprob: -2.4223029613494873
    3. 'else' → logprob: -2.4223029613494873
    4. 'print' → logprob: -2.6723029613494873
    5. 'Yes' → logprob: -2.7973029613494873
    6. 'if' → logprob: -4.422302722930908
    7. ' "' → logprob: -4.547302722930908
    8. ' if' → logprob: -5.297302722930908
    9. ' ' → logprob: -6.297302722930908
    10. 'r' → logprob: -6.422302722930908

Token 245: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.189059317111969
    2. ' "' → logprob: -1.9390592575073242
    3. '"No' → logprob: -3.564059257507324
    4. ' No' → logprob: -10.189059257507324
    5. ''' → logprob: -10.564059257507324
    6. ' ' → logprob: -10.814059257507324
    7. ' ' → logprob: -11.814059257507324
    8. 'No' → logprob: -12.189059257507324
    9. ' '' → logprob: -13.314059257507324
    10. '	' → logprob: -14.439059257507324

Token 246: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.031301263719797134
    2. '"No' → logprob: -3.531301259994507
    3. ' No' → logprob: -6.531301498413086
    4. '"' → logprob: -9.406301498413086
    5. ''' → logprob: -11.656301498413086
    6. ' "' → logprob: -13.906301498413086
    7. ' ' → logprob: -14.781301498413086
    8. '_No' → logprob: -15.531301498413086
    9. '“No' → logprob: -16.906301498413086
    10. '.No' → logprob: -17.781301498413086

Token 247: '".' (ID: 4050)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43382522463798523
    2. ')' → logprob: -1.0588252544403076
    3. '")' → logprob: -5.5588250160217285
    4. '(print' → logprob: -7.8088250160217285
    5. '"' → logprob: -7.9338250160217285
    6. ' print' → logprob: -8.433825492858887
    7. ')
' → logprob: -8.683825492858887
    8. '.print' → logprob: -10.933825492858887
    9. ':' → logprob: -10.933825492858887
    10. '')' → logprob: -11.183825492858887

Token 248: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.537868779967539e-06
    2. '
' → logprob: -11.750008583068848
    3. ' print' → logprob: -14.500008583068848
    4. '```' → logprob: -17.12500762939453
    5. '(print' → logprob: -17.37500762939453
    6. '.print' → logprob: -17.75000762939453
    7. 'prin' → logprob: -18.25000762939453
    8. 'pr' → logprob: -18.37500762939453
    9. '  
' → logprob: -19.00000762939453
    10. '#print' → logprob: -19.37500762939453

Token 249: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47410091757774353
    2. ' r' → logprob: -0.9741009473800659
    3. '(r' → logprob: -11.599101066589355
    4. ' ' → logprob: -12.474101066589355
    5. ' ' → logprob: -12.599101066589355
    6. 'print' → logprob: -12.724101066589355
    7. '	r' → logprob: -13.599101066589355
    8. '"' → logprob: -14.349101066589355
    9. ''r' → logprob: -14.974101066589355
    10. ' print' → logprob: -15.349101066589355

Token 250: ' condition' (ID: 7060)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0012923780595883727
    2. ' r' → logprob: -6.8762922286987305
    3. 'condition' → logprob: -8.37629222869873
    4. ' condition' → logprob: -11.00129222869873
    5. 'count' → logprob: -13.00129222869873
    6. ' ' → logprob: -13.00129222869873
    7. '(r' → logprob: -13.50129222869873
    8. 'n' → logprob: -14.00129222869873
    9. '

' → logprob: -14.50129222869873
    10. '	r' → logprob: -14.62629222869873

Token 251: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0588691234588623
    2. 'r' → logprob: -1.3088691234588623
    3. 'n' → logprob: -1.4338691234588623
    4. ' n' → logprob: -2.3088691234588623
    5. '<|end|>' → logprob: -4.058869361877441
    6. ' r' → logprob: -5.433869361877441
    7. '>' → logprob: -5.558869361877441
    8. ':' → logprob: -5.683869361877441
    9. ')' → logprob: -5.933869361877441
    10. ' ' → logprob: -6.308869361877441

Token 252: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009207503753714263
    2. ' r' → logprob: -7.00092077255249
    3. '   ' → logprob: -12.500920295715332
    4. ')' → logprob: -13.750920295715332
    5. '(r' → logprob: -13.750920295715332
    6. '	r' → logprob: -14.000920295715332
    7. ' ' → logprob: -14.125920295715332
    8. ' ' → logprob: -14.875920295715332
    9. '  ' → logprob: -15.125920295715332
    10. '    ' → logprob: -15.375920295715332

Token 253: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.375006675720215
    3. 'count' → logprob: -12.875006675720215
    4. '_c' → logprob: -16.25000762939453
    5. '>' → logprob: -16.87500762939453
    6. '_r' → logprob: -17.37500762939453
    7. 'r' → logprob: -17.50000762939453
    8. ' _' → logprob: -17.50000762939453
    9. '_counts' → logprob: -17.87500762939453
    10. ' count' → logprob: -18.00000762939453

Token 254: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42908352613449097
    2. '>' → logprob: -1.0540835857391357
    3. ')' → logprob: -8.054083824157715
    4. ' ' → logprob: -11.179083824157715
    5. ')>' → logprob: -11.429083824157715
    6. ' ' → logprob: -11.554083824157715
    7. ' >
' → logprob: -11.804083824157715
    8. '>
' → logprob: -12.179083824157715
    9. '">' → logprob: -12.179083824157715
    10. ' )' → logprob: -13.304083824157715

Token 255: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06997577846050262
    2. 'n' → logprob: -2.6949758529663086
    3. '(n' → logprob: -11.319975852966309
    4. ' ' → logprob: -11.694975852966309
    5. ' (' → logprob: -12.194975852966309
    6. ' ' → logprob: -12.819975852966309
    7. '	n' → logprob: -13.069975852966309
    8. ' 
' → logprob: -13.569975852966309
    9. ')n' → logprob: -13.694975852966309
    10. ')' → logprob: -13.944975852966309

Token 256: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.07907947897911072
    2. ' /' → logprob: -2.5790793895721436
    3. ')' → logprob: -9.079079627990723
    4. '/)' → logprob: -9.954079627990723
    5. ' ' → logprob: -11.079079627990723
    6. ' )' → logprob: -12.954079627990723
    7. '/
' → logprob: -13.454079627990723
    8. '2' → logprob: -13.454079627990723
    9. ' /
' → logprob: -13.579079627990723
    10. ')/' → logprob: -13.954079627990723

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. '1' → logprob: -15.125554084777832
    4. '(' → logprob: -15.750554084777832
    5. '  ' → logprob: -17.000553131103516
    6. '   ' → logprob: -17.375553131103516
    7. '```' → logprob: -17.500553131103516
    8. '
' → logprob: -17.625553131103516
    9. ')' → logprob: -17.750553131103516
    10. ' (' → logprob: -17.875553131103516

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016313401283696294
    2. ' )' → logprob: -10.000163078308105
    3. ' else' → logprob: -10.125163078308105
    4. '')' → logprob: -10.375163078308105
    5. ':' → logprob: -11.125163078308105
    6. '):' → logprob: -11.250163078308105
    7. 'else' → logprob: -11.375163078308105
    8. '")' → logprob: -12.500163078308105
    9. 'print' → logprob: -14.000163078308105
    10. ')
' → logprob: -14.625163078308105

Token 259: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6165964603424072
    2. ')' → logprob: -1.2415964603424072
    3. ':' → logprob: -2.6165964603424072
    4. ' else' → logprob: -2.7415964603424072
    5. ' print' → logprob: -3.7415964603424072
    6. 'else' → logprob: -4.991596221923828
    7. ' is' → logprob: -6.991596221923828
    8. ' ' → logprob: -8.116596221923828
    9. '?' → logprob: -8.491596221923828
    10. '):' → logprob: -8.491596221923828

Token 260: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002115881536155939
    2. ' True' → logprob: -6.252115726470947
    3. '"' → logprob: -9.377116203308105
    4. '(True' → logprob: -10.002116203308105
    5. 'v' → logprob: -10.627116203308105
    6. 'true' → logprob: -10.752116203308105
    7. '_true' → logprob: -12.127116203308105
    8. ''' → logprob: -13.877116203308105
    9. '=True' → logprob: -14.252116203308105
    10. 'r' → logprob: -14.252116203308105

Token 261: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030984194949269295
    2. ' print' → logprob: -4.530984401702881
    3. ' else' → logprob: -4.655984401702881
    4. ')' → logprob: -5.155984401702881
    5. 'else' → logprob: -5.530984401702881
    6. ',' → logprob: -8.405983924865723
    7. ':' → logprob: -8.780983924865723
    8. '(print' → logprob: -9.905983924865723
    9. ']' → logprob: -11.030983924865723
    10. ' ' → logprob: -11.530983924865723

Token 262: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008846574346534908
    2. ' print' → logprob: -7.750884532928467
    3. '"' → logprob: -7.875884532928467
    4. ''' → logprob: -10.375885009765625
    5. ')' → logprob: -10.750885009765625
    6. 'p' → logprob: -12.000885009765625
    7. 'pr' → logprob: -12.500885009765625
    8. '   ' → logprob: -12.625885009765625
    9. 'r' → logprob: -13.000885009765625
    10. 'Yes' → logprob: -13.500885009765625

Token 263: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.000533967511728406
    2. '"' → logprob: -7.7505340576171875
    3. ' Yes' → logprob: -9.250534057617188
    4. ''' → logprob: -12.250534057617188
    5. 'YES' → logprob: -14.875534057617188
    6. ' ' → logprob: -15.375534057617188
    7. 'Y' → logprob: -15.500534057617188
    8. '“Yes' → logprob: -15.625534057617188
    9. 'Ye' → logprob: -15.750534057617188
    10. '   ' → logprob: -15.750534057617188

Token 264: '"' (ID: 1)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.33960428833961487
    2. '"' → logprob: -1.5896042585372925
    3. ')' → logprob: -2.839604377746582
    4. 'else' → logprob: -3.839604377746582
    5. 'print' → logprob: -6.339604377746582
    6. '")' → logprob: -7.089604377746582
    7. ' print' → logprob: -7.339604377746582
    8. ''' → logprob: -8.339604377746582
    9. '```' → logprob: -9.339604377746582
    10. '   ' → logprob: -9.964604377746582

Token 265: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1531427949666977
    2. 'else' → logprob: -2.0281426906585693
    3. ' else' → logprob: -4.903142929077148
    4. ')' → logprob: -6.028142929077148
    5. ' print' → logprob: -7.653142929077148
    6. ':' → logprob: -10.403142929077148
    7. '(print' → logprob: -10.778142929077148
    8. ']' → logprob: -11.028142929077148
    9. ',' → logprob: -11.778142929077148
    10. '```' → logprob: -12.278142929077148

Token 266: ' affich' (ID: 90179)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6572583317756653
    2. 'print' → logprob: -1.4072582721710205
    3. ' print' → logprob: -2.5322582721710205
    4. ' "' → logprob: -2.5322582721710205
    5. ' printed' → logprob: -3.2822582721710205
    6. ''' → logprob: -4.4072585105896
    7. ' affich' → logprob: -4.5322585105896
    8. 'Yes' → logprob: -5.5322585105896
    9. ' '' → logprob: -5.6572585105896
    10. ' Yes' → logprob: -5.9072585105896

Token 267: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8770703673362732
    2. 'é' → logprob: -1.752070426940918
    3. '"' → logprob: -2.252070426940918
    4. 'er' → logprob: -2.627070426940918
    5. 'ay' → logprob: -2.752070426940918
    6. 'ée' → logprob: -3.252070426940918
    7. '")' → logprob: -3.252070426940918
    8. 'print' → logprob: -4.127070426940918
    9. 'ays' → logprob: -5.252070426940918
    10. 'e' → logprob: -5.252070426940918

Token 268: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019901065388694406
    2. ')' → logprob: -9.500199317932129
    3. 'else' → logprob: -9.625199317932129
    4. ' print' → logprob: -10.125199317932129
    5. '(print' → logprob: -12.000199317932129
    6. ',' → logprob: -12.625199317932129
    7. '```' → logprob: -13.375199317932129
    8. ';' → logprob: -13.875199317932129
    9. 'prin' → logprob: -13.875199317932129
    10. ')
' → logprob: -14.000199317932129

Token 269: ' sinon' (ID: 52915)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.908022285439074e-05
    2. ' print' → logprob: -10.375059127807617
    3. 'else' → logprob: -10.625059127807617
    4. '   ' → logprob: -14.625059127807617
    5. '    
' → logprob: -14.625059127807617
    6. ')' → logprob: -14.750059127807617
    7. 'pr' → logprob: -14.875059127807617
    8. '```' → logprob: -15.000059127807617
    9. 'prin' → logprob: -15.125059127807617
    10. 'p' → logprob: -15.375059127807617

Token 270: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.23087574541568756
    2. '"' → logprob: -1.9808757305145264
    3. 'print' → logprob: -2.7308757305145264
    4. ' "' → logprob: -6.3558759689331055
    5. ''' → logprob: -6.9808759689331055
    6. ' print' → logprob: -7.9808759689331055
    7. 'r' → logprob: -11.730875968933105
    8. '@No' → logprob: -11.980875968933105
    9. '"La' → logprob: -12.730875968933105
    10. 'No' → logprob: -13.105875968933105

Token 271: 'No' (ID: 3160)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.25431525707244873
    2. 'No' → logprob: -1.5043152570724487
    3. ' No' → logprob: -6.629315376281738
    4. '"' → logprob: -6.879315376281738
    5. ' "' → logprob: -10.754315376281738
    6. ''' → logprob: -12.129315376281738
    7. ' ' → logprob: -12.754315376281738
    8. '"N' → logprob: -13.504315376281738
    9. '_No' → logprob: -14.129315376281738
    10. '“No' → logprob: -14.629315376281738

Token 272: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006070998962968588
    2. 'print' → logprob: -5.256071090698242
    3. '")' → logprob: -7.631071090698242
    4. ')
' → logprob: -8.381071090698242
    5. '')' → logprob: -9.756071090698242
    6. ').' → logprob: -11.006071090698242
    7. ' print' → logprob: -11.381071090698242
    8. ')")' → logprob: -11.631071090698242
    9. ' )' → logprob: -12.131071090698242
    10. '`)' → logprob: -12.131071090698242

Token 273: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002266622323077172
    2. '
' → logprob: -8.500226974487305
    3. ')
' → logprob: -11.625226974487305
    4. ' print' → logprob: -12.125226974487305
    5. '```' → logprob: -12.375226974487305
    6. ')' → logprob: -13.625226974487305
    7. '(print' → logprob: -13.750226974487305
    8. '.print' → logprob: -14.625226974487305
    9. '  
' → logprob: -15.125226974487305
    10. '
' → logprob: -15.250226974487305

Token 274: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3138520419597626
    2. ')' → logprob: -1.938852071762085
    3. ''est' → logprob: -3.688852071762085
    4. '#' → logprob: -4.063851833343506
    5. '```' → logprob: -4.063851833343506
    6. '.' → logprob: -4.313851833343506
    7. 'e' → logprob: -4.438851833343506
    8. 'es' → logprob: -4.938851833343506
    9. 'est' → logprob: -5.063851833343506
    10. ''' → logprob: -5.188851833343506

Token 275: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12518969178199768
    2. 'print' → logprob: -2.375189781188965
    3. ')
' → logprob: -3.750189781188965
    4. ').' → logprob: -7.125189781188965
    5. '.' → logprob: -8.125189781188965
    6. '.
' → logprob: -11.750189781188965
    7. ')

' → logprob: -11.750189781188965
    8. ').
' → logprob: -11.875189781188965
    9. '")' → logprob: -12.250189781188965
    10. '(print' → logprob: -12.250189781188965

Token 276: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.000000953674316
    3. '
' → logprob: -15.500000953674316
    4. ' print' → logprob: -16.500001907348633
    5. 'prin' → logprob: -16.750001907348633
    6. 'pr' → logprob: -16.750001907348633
    7. '(print' → logprob: -17.000001907348633
    8. '#print' → logprob: -18.625001907348633
    9. '.print' → logprob: -18.875001907348633
    10. '`
' → logprob: -19.125001907348633

Token 277: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008637497201561928
    2. '(' → logprob: -4.758637428283691
    3. '('' → logprob: -11.008637428283691
    4. ' ("' → logprob: -12.758637428283691
    5. '(("' → logprob: -13.133637428283691
    6. '(
' → logprob: -13.883637428283691
    7. '((' → logprob: -15.383637428283691
    8. ' (' → logprob: -15.633637428283691
    9. '(""' → logprob: -16.758638381958008
    10. '"' → logprob: -16.883638381958008

Token 278: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -9.088346359931165e-07
    2. ' Yes' → logprob: -14.000000953674316
    3. '"' → logprob: -17.25
    4. 'YES' → logprob: -18.25
    5. 'Ye' → logprob: -19.75
    6. '{"' → logprob: -20.0
    7. '.Yes' → logprob: -20.125
    8. 'Oui' → logprob: -20.375
    9. '"+"' → logprob: -20.5
    10. '_yes' → logprob: -21.0

Token 279: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3663626305060461e-05
    2. '")' → logprob: -11.62501335144043
    3. ' if' → logprob: -12.50001335144043
    4. 'if' → logprob: -14.00001335144043
    5. '\"' → logprob: -16.25001335144043
    6. ' "' → logprob: -17.50001335144043
    7. ''' → logprob: -17.62501335144043
    8. ')' → logprob: -18.50001335144043
    9. '"""' → logprob: -18.50001335144043
    10. '""' → logprob: -19.12501335144043

Token 280: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006733487825840712
    2. 'if' → logprob: -5.006733417510986
    3. ')' → logprob: -11.006733894348145
    4. ' ' → logprob: -13.631733894348145
    5. ' )' → logprob: -15.631733894348145
    6. '"' → logprob: -16.006732940673828
    7. ' "' → logprob: -17.006732940673828
    8. '	if' → logprob: -17.256732940673828
    9. ' i' → logprob: -17.256732940673828
    10. ' ' → logprob: -17.256732940673828

Token 281: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.061968132853507996
    2. 'r' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.311967849731445
    4. '(r' → logprob: -15.561967849731445
    5. '	r' → logprob: -17.311967849731445
    6. ' ' → logprob: -18.186967849731445
    7. '_r' → logprob: -19.186967849731445
    8. ')' → logprob: -19.436967849731445
    9. ' (' → logprob: -19.436967849731445
    10. ' ' → logprob: -20.811967849731445

Token 282: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00014334988372866064
    2. 'count' → logprob: -9.625143051147461
    3. '_' → logprob: -9.750143051147461
    4. 'ount' → logprob: -11.500143051147461
    5. '_c' → logprob: -12.500143051147461
    6. ' _' → logprob: -13.750143051147461
    7. 'r' → logprob: -14.250143051147461
    8. '>' → logprob: -14.375143051147461
    9. '_r' → logprob: -14.500143051147461
    10. '_cnt' → logprob: -14.500143051147461

Token 283: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009845450520515442
    2. '>' → logprob: -4.63484525680542
    3. ' ' → logprob: -9.384845733642578
    4. ')' → logprob: -12.884845733642578
    5. ' ' → logprob: -13.509845733642578
    6. ' >
' → logprob: -14.884845733642578
    7. ' >
' → logprob: -15.384845733642578
    8. ')>' → logprob: -15.509845733642578
    9. '">' → logprob: -15.509845733642578
    10. ' >

' → logprob: -15.884845733642578

Token 284: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0011749862460419536
    2. 'n' → logprob: -6.7511749267578125
    3. ' ' → logprob: -12.876174926757812
    4. ' (' → logprob: -13.751174926757812
    5. ' ' → logprob: -14.126174926757812
    6. '(n' → logprob: -15.251174926757812
    7. '	n' → logprob: -16.376174926757812
    8. ' 
' → logprob: -19.376174926757812
    9. '(' → logprob: -19.626174926757812
    10. '0' → logprob: -19.751174926757812

Token 285: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02975141443312168
    2. ' /' → logprob: -3.5297513008117676
    3. '/
' → logprob: -15.154751777648926
    4. ' ' → logprob: -15.279751777648926
    5. ' /
' → logprob: -15.529751777648926
    6. ')' → logprob: -16.15475082397461
    7. ' ' → logprob: -16.90475082397461
    8. '/
/' → logprob: -17.77975082397461
    9. '2' → logprob: -17.77975082397461
    10. '.' → logprob: -18.27975082397461

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.625030517578125
    4. '۲' → logprob: -19.750030517578125
    5. '２' → logprob: -19.875030517578125
    6. '  ' → logprob: -20.125030517578125
    7. '```' → logprob: -20.375030517578125
    8. '1' → logprob: -22.000030517578125
    9. '
' → logprob: -22.000030517578125
    10. '٢' → logprob: -22.062530517578125

Token 287: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.126930832862854
    2. 'else' → logprob: -2.1269307136535645
    3. ')' → logprob: -13.626931190490723
    4. ' ' → logprob: -13.751931190490723
    5. '	else' → logprob: -15.001931190490723
    6. ' els' → logprob: -16.876930236816406
    7. ' )' → logprob: -17.001930236816406
    8. '```' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.001930236816406
    10. 'e' → logprob: -18.376930236816406

Token 288: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07006748020648956
    2. '"No' → logprob: -2.8200674057006836
    3. ' "' → logprob: -4.820067405700684
    4. ''' → logprob: -14.695067405700684
    5. ')' → logprob: -15.695067405700684
    6. ' ' → logprob: -16.570068359375
    7. '	' → logprob: -16.820068359375
    8. '("' → logprob: -16.820068359375
    9. ' ' → logprob: -17.070068359375
    10. '"So' → logprob: -17.195068359375

Token 289: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.547789674485102e-05
    2. '"No' → logprob: -10.250035285949707
    3. ' No' → logprob: -17.500036239624023
    4. '"' → logprob: -20.000036239624023
    5. '_No' → logprob: -23.000036239624023
    6. 'N' → logprob: -23.375036239624023
    7. 'NO' → logprob: -23.500036239624023
    8. '.No' → logprob: -23.625036239624023
    9. '(No' → logprob: -23.875036239624023
    10. '“No' → logprob: -24.125036239624023

Token 290: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5797280669212341
    2. ')' → logprob: -0.8297280669212341
    3. ')")' → logprob: -5.579728126525879
    4. ')"' → logprob: -12.579728126525879
    5. ' )' → logprob: -13.204728126525879
    6. '')' → logprob: -14.454728126525879
    7. '))' → logprob: -14.454728126525879
    8. ')">' → logprob: -14.954728126525879
    9. '}")' → logprob: -15.454728126525879
    10. '"' → logprob: -15.454728126525879


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 288
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 27.43%
Précision adaptée (1ère position): 27.43%
Précision (top 10): 61.46%
================================================================================
