================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

X = int(input())

dp = bytearray(X + 1)
dp[0] = 1

for i, flag in enumerate(dp):
    if flag:
        for v in range(100, 106):
            if i + v <= X:
                dp[i + v] = 1

print(dp[X])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3606022894382477
    2. 'partial' → logprob: -1.3606022596359253
    3. 'reduce' → logprob: -3.610602378845215
    4. ' wraps' → logprob: -4.110602378845215
    5. 'l' → logprob: -6.735602378845215
    6. ' partial' → logprob: -7.610602378845215
    7. 'cached' → logprob: -7.985602378845215
    8. 'cmp' → logprob: -8.235602378845215
    9. 'cache' → logprob: -8.485602378845215
    10. '```' → logprob: -8.985602378845215

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'X' (ID: 55)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026581143960356712
    2. 'def' → logprob: -4.026581287384033
    3. '\' → logprob: -5.401581287384033
    4. '(lambda' → logprob: -6.651581287384033
    5. '(
' → logprob: -7.401581287384033
    6. '```' → logprob: -7.651581287384033
    7. ' ' → logprob: -7.901581287384033
    8. '\(' → logprob: -8.401580810546875
    9. ',' → logprob: -8.651580810546875
    10. ' (' → logprob: -8.651580810546875

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1238963603973389
    2. '=' → logprob: -1.3738963603973389
    3. '_' → logprob: -1.6238963603973389
    4. ',' → logprob: -2.123896360397339
    5. '(' → logprob: -2.623896360397339
    6. ' =' → logprob: -4.373896598815918
    7. '[' → logprob: -4.498896598815918
    8. '-' → logprob: -6.123896598815918
    9. ' ' → logprob: -6.248896598815918
    10. ')' → logprob: -6.373896598815918

Token 7: ' int' (ID: 677)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7778222560882568
    2. '[' → logprob: -1.2778222560882568
    3. ' []' → logprob: -2.152822256088257
    4. '[]' → logprob: -2.777822256088257
    5. '0' → logprob: -3.152822256088257
    6. ' ' → logprob: -4.027822494506836
    7. '[int' → logprob: -4.277822494506836
    8. '10' → logprob: -5.902822494506836
    9. '1' → logprob: -6.027822494506836
    10. 'range' → logprob: -7.277822494506836

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024751186720095575
    2. '(
' → logprob: -9.625247955322266
    3. ''' → logprob: -9.750247955322266
    4. '(X' → logprob: -10.375247955322266
    5. '('' → logprob: -10.500247955322266
    6. ')' → logprob: -10.625247955322266
    7. '("("' → logprob: -12.125247955322266
    8. 'X' → logprob: -12.250247955322266
    9. '"' → logprob: -12.500247955322266
    10. '40' → logprob: -12.625247955322266

Token 9: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026386914774775505
    2. ')' → logprob: -3.9013869762420654
    3. '()' → logprob: -5.401386737823486
    4. '(
' → logprob: -7.526386737823486
    5. '())' → logprob: -8.151387214660645
    6. '('' → logprob: -8.901387214660645
    7. '(

' → logprob: -9.401387214660645
    8. '("("' → logprob: -9.651387214660645
    9. '`' → logprob: -10.151387214660645
    10. '(()' → logprob: -10.526387214660645

Token 10: 'dp' (ID: 19037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.192602276802063
    2. ')' → logprob: -1.692602276802063
    3. '[' → logprob: -1.942602276802063
    4. 's' → logprob: -2.4426021575927734
    5. 'factor' → logprob: -3.3176021575927734
    6. 'data' → logprob: -3.4426021575927734
    7. 'numbers' → logprob: -3.6926021575927734
    8. 'if' → logprob: -3.9426021575927734
    9. 'for' → logprob: -4.192602157592773
    10. 'lst' → logprob: -4.317602157592773

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002100965939462185
    2. '=' → logprob: -9.50020980834961
    3. ' =' → logprob: -10.00020980834961
    4. '\[' → logprob: -10.37520980834961
    5. ']' → logprob: -11.12520980834961
    6. '_' → logprob: -11.25020980834961
    7. ' ' → logprob: -11.50020980834961
    8. '[]' → logprob: -11.87520980834961
    9. '```' → logprob: -13.00020980834961
    10. '[:]' → logprob: -13.25020980834961

Token 12: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07917464524507523
    2. ' [' → logprob: -2.579174757003784
    3. '{}' → logprob: -8.829174995422363
    4. '[-' → logprob: -9.704174995422363
    5. '[]' → logprob: -10.829174995422363
    6. '{' → logprob: -11.079174995422363
    7. ' {}' → logprob: -11.829174995422363
    8. '[int' → logprob: -11.829174995422363
    9. '[[' → logprob: -12.454174995422363
    10. ' [-' → logprob: -12.829174995422363

Token 13: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.000495605927426368
    2. 'arr' → logprob: -8.250495910644531
    3. 'arra' → logprob: -8.625495910644531
    4. 'arry' → logprob: -9.875495910644531
    5. ' array' → logprob: -13.250495910644531
    6. 'a' → logprob: -13.750495910644531
    7. 'arrays' → logprob: -15.875495910644531
    8. 'ar' → logprob: -16.00049591064453
    9. ' arra' → logprob: -16.62549591064453
    10. 'rray' → logprob: -16.75049591064453

Token 14: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015260485233739018
    2. '([' → logprob: -6.50152587890625
    3. '((' → logprob: -11.00152587890625
    4. '(X' → logprob: -12.87652587890625
    5. '[' → logprob: -13.00152587890625
    6. '(
' → logprob: -14.00152587890625
    7. ' (' → logprob: -15.62652587890625
    8. '(len' → logprob: -15.62652587890625
    9. '([...' → logprob: -15.87652587890625
    10. '(`' → logprob: -16.00152587890625

Token 15: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005340131931006908
    2. ')' → logprob: -5.880340099334717
    3. ' +' → logprob: -6.005340099334717
    4. '+)' → logprob: -9.755340576171875
    5. '))' → logprob: -12.755340576171875
    6. ')+' → logprob: -13.505340576171875
    7. '+
' → logprob: -13.755340576171875
    8. '1' → logprob: -14.130340576171875
    9. '+')' → logprob: -15.130340576171875
    10. ' ' → logprob: -15.505340576171875

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03805606812238693
    2. ' ' → logprob: -3.2880561351776123
    3. '2' → logprob: -11.288056373596191
    4. '  ' → logprob: -14.288056373596191
    5. ' ' → logprob: -14.288056373596191
    6. '   ' → logprob: -15.663056373596191
    7. '[' → logprob: -16.788055419921875
    8. '7' → logprob: -16.850555419921875
    9. '(' → logprob: -16.913055419921875
    10. '```' → logprob: -16.975555419921875

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039468807517550886
    2. ' ' → logprob: -7.875394821166992
    3. '2' → logprob: -11.375394821166992
    4. '3' → logprob: -14.625394821166992
    5. '[' → logprob: -14.750394821166992
    6. '   ' → logprob: -14.750394821166992
    7. '  ' → logprob: -15.000394821166992
    8. '5' → logprob: -15.375394821166992
    9. '10' → logprob: -15.437894821166992
    10. '7' → logprob: -15.562894821166992

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013512482109945267
    2. '[' → logprob: -9.12513542175293
    3. ']' → logprob: -12.00013542175293
    4. ')`' → logprob: -12.00013542175293
    5. '`)' → logprob: -12.37513542175293
    6. ')
' → logprob: -12.37513542175293
    7. '))' → logprob: -13.75013542175293
    8. '])' → logprob: -14.12513542175293
    9. ',' → logprob: -14.50013542175293
    10. '')' → logprob: -14.62513542175293

Token 19: 'dp' (ID: 19037)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1848118305206299
    2. 'dp' → logprob: -1.4348118305206299
    3. ' ' → logprob: -2.43481183052063
    4. '[' → logprob: -2.43481183052063
    5. '
' → logprob: -2.55981183052063
    6. ' =' → logprob: -2.80981183052063
    7. ' 
' → logprob: -2.80981183052063
    8. ' dp' → logprob: -3.55981183052063
    9. '\' → logprob: -4.559811592102051
    10. ' for' → logprob: -4.684811592102051

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016597089124843478
    2. '[:]' → logprob: -6.876659870147705
    3. '=' → logprob: -8.751659393310547
    4. ' =' → logprob: -9.126659393310547
    5. '```' → logprob: -9.376659393310547
    6. '\[' → logprob: -9.751659393310547
    7. '<|end|>' → logprob: -9.876659393310547
    8. '[
' → logprob: -10.501659393310547
    9. '[...]' → logprob: -10.751659393310547
    10. '[]' → logprob: -10.751659393310547

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035898564383387566
    2. '1' → logprob: -6.003589630126953
    3. ' ' → logprob: -6.878589630126953
    4. ']' → logprob: -10.003589630126953
    5. 'X' → logprob: -11.253589630126953
    6. ')' → logprob: -11.378589630126953
    7. '2' → logprob: -12.503589630126953
    8. ' ]' → logprob: -13.066089630126953
    9. ' )' → logprob: -13.503589630126953
    10. '=' → logprob: -14.003589630126953

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015240935317706317
    2. ']=' → logprob: -9.250152587890625
    3. '=' → logprob: -10.375152587890625
    4. ' ]' → logprob: -10.625152587890625
    5. ' =' → logprob: -15.000152587890625
    6. '[' → logprob: -16.500152587890625
    7. ')' → logprob: -16.875152587890625
    8. ']==' → logprob: -17.000152587890625
    9. ']+=' → logprob: -17.125152587890625
    10. '1' → logprob: -17.250152587890625

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. '=True' → logprob: -14.599078178405762
    4. ' |=' → logprob: -15.099078178405762
    5. ' ' → logprob: -15.349078178405762
    6. ' +=' → logprob: -16.349079132080078
    7. '[' → logprob: -16.724079132080078
    8. ',' → logprob: -16.724079132080078
    9. '1' → logprob: -16.849079132080078
    10. ' =
' → logprob: -16.974079132080078

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. 'True' → logprob: -10.375045776367188
    3. ' ' → logprob: -11.250045776367188
    4. '0' → logprob: -14.000045776367188
    5. 'b' → logprob: -14.625045776367188
    6. ' True' → logprob: -15.000045776367188
    7. '2' → logprob: -16.000045776367188
    8. '255' → logprob: -16.500045776367188
    9. '   ' → logprob: -17.250045776367188
    10. '\' → logprob: -17.500045776367188

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. 'True' → logprob: -10.625027656555176
    3. '0' → logprob: -13.250027656555176
    4. 'b' → logprob: -14.125027656555176
    5. '255' → logprob: -14.750027656555176
    6. ' ' → logprob: -15.000027656555176
    7. '2' → logprob: -15.750027656555176
    8. ' True' → logprob: -16.625028610229492
    9. '32' → logprob: -17.375028610229492
    10. '' → logprob: -18.000028610229492

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6179854273796082
    2. '\n' → logprob: -1.242985486984253
    3. 'for' → logprob: -2.617985486984253
    4. ' for' → logprob: -3.117985486984253
    5. '' → logprob: -3.492985486984253
    6. '\' → logprob: -4.367985248565674
    7. ' 
' → logprob: -5.117985248565674
    8. '*' → logprob: -6.617985248565674
    9. '
' → logprob: -6.617985248565674
    10. '

' → logprob: -6.992985248565674

Token 27: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7234786748886108
    2. '
' → logprob: -1.5984786748886108
    3. ' 
' → logprob: -1.7234786748886108
    4. '' → logprob: -2.7234787940979004
    5. ' for' → logprob: -3.7234787940979004
    6. '  
' → logprob: -4.2234787940979
    7. 'for' → logprob: -5.3484787940979
    8. '+
' → logprob: -5.3484787940979
    9. '+' → logprob: -5.4734787940979
    10. '*' → logprob: -5.4734787940979

Token 28: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2030571550130844
    2. ' i' → logprob: -1.7030571699142456
    3. ' _' → logprob: -6.953057289123535
    4. '  ' → logprob: -8.078057289123535
    5. 'i' → logprob: -8.578057289123535
    6. '_' → logprob: -8.828057289123535
    7. ' ‌' → logprob: -11.328057289123535
    8. ' ' → logprob: -11.453057289123535
    9. ' x' → logprob: -12.453057289123535
    10. ' )' → logprob: -12.828057289123535

Token 29: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04887200891971588
    2. 'in' → logprob: -3.0488719940185547
    3. ' ' → logprob: -8.423871994018555
    4. '+' → logprob: -10.548871994018555
    5. '	in' → logprob: -11.298871994018555
    6. '1' → logprob: -12.298871994018555
    7. '  ' → logprob: -12.298871994018555
    8. ' i' → logprob: -12.673871994018555
    9. 'n' → logprob: -12.673871994018555
    10. 'import' → logprob: -13.423871994018555

Token 30: ' flag' (ID: 9641)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2722207307815552
    2. 'x' → logprob: -1.8972207307815552
    3. ' a' → logprob: -1.8972207307815552
    4. 'a' → logprob: -2.2722206115722656
    5. ' coin' → logprob: -2.7722206115722656
    6. ' v' → logprob: -3.1472206115722656
    7. ' num' → logprob: -3.1472206115722656
    8. ' n' → logprob: -4.272220611572266
    9. 'v' → logprob: -4.272220611572266
    10. ' c' → logprob: -4.397220611572266

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05581235885620117
    2. 'in' → logprob: -2.930812358856201
    3. ' ' → logprob: -7.555812358856201
    4. ',' → logprob: -7.930812358856201
    5. 's' → logprob: -10.93081283569336
    6. 'n' → logprob: -12.05581283569336
    7. ' ,' → logprob: -12.43081283569336
    8. '	in' → logprob: -12.55581283569336
    9. ',in' → logprob: -12.80581283569336
    10. 'i' → logprob: -13.30581283569336

Token 32: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.029763219878077507
    2. 'enumer' → logprob: -3.5297632217407227
    3. '(en' → logprob: -12.154763221740723
    4. ' enumer' → logprob: -13.904763221740723
    5. ' ' → logprob: -14.029763221740723
    6. ' en' → logprob: -14.154763221740723
    7. ' enum' → logprob: -14.279763221740723
    8. '[(' → logprob: -14.279763221740723
    9. 'en' → logprob: -14.654763221740723
    10. ' zip' → logprob: -14.654763221740723

Token 33: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5001993775367737
    2. '(' → logprob: -1.250199317932129
    3. '(range' → logprob: -2.250199317932129
    4. '(en' → logprob: -7.375199317932129
    5. ' (' → logprob: -7.625199317932129
    6. '((' → logprob: -8.500199317932129
    7. '(s' → logprob: -8.875199317932129
    8. 'dp' → logprob: -10.500199317932129
    9. '(flag' → logprob: -10.500199317932129
    10. '(enum' → logprob: -10.500199317932129

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028614234179258347
    2. '[' → logprob: -3.9036142826080322
    3. ':' → logprob: -5.028614044189453
    4. ')' → logprob: -7.278614044189453
    5. '[:' → logprob: -7.653614044189453
    6. '):
' → logprob: -9.028614044189453
    7. ' ):' → logprob: -9.778614044189453
    8. ':)' → logprob: -10.403614044189453
    9. '[:]' → logprob: -10.528614044189453
    10. '[:-' → logprob: -10.653614044189453

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9106779098510742
    2. '<|end|>' → logprob: -1.4106779098510742
    3. '   ' → logprob: -1.7856779098510742
    4. ' if' → logprob: -1.9106779098510742
    5. ' 
' → logprob: -3.660677909851074
    6. '    ' → logprob: -6.160677909851074
    7. '    
' → logprob: -6.160677909851074
    8. '  ' → logprob: -6.535677909851074
    9. ' i' → logprob: -6.660677909851074
    10. ':' → logprob: -6.910677909851074

Token 36: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5893737077713013
    2. ' if' → logprob: -0.8393737077713013
    3. 'if' (adapté à ' if') → logprob: -4.964373588562012
    4. ' i' → logprob: -5.964373588562012
    5. '    ' → logprob: -6.464373588562012
    6. '   ' → logprob: -6.714373588562012
    7. ' )' → logprob: -8.464373588562012
    8. '  ' → logprob: -8.714373588562012
    9. ' for' → logprob: -9.464373588562012
    10. 'i' → logprob: -9.464373588562012

Token 37: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.44839054346084595
    2. ' flag' → logprob: -1.1983904838562012
    3. ' not' → logprob: -3.073390483856201
    4. 'not' → logprob: -4.323390483856201
    5. '	flag' → logprob: -10.07339096069336
    6. ' i' → logprob: -10.19839096069336
    7. '(flag' → logprob: -10.94839096069336
    8. ' ' → logprob: -11.07339096069336
    9. 'i' → logprob: -11.57339096069336
    10. '!' → logprob: -12.32339096069336

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03451108559966087
    2. '==' → logprob: -3.909511089324951
    3. ' ==' → logprob: -5.034511089324951
    4. ' and' → logprob: -5.284511089324951
    5. ' :' → logprob: -6.284511089324951
    6. 'and' → logprob: -8.284510612487793
    7. '>' → logprob: -9.784510612487793
    8. '>:' → logprob: -10.659510612487793
    9. ':
' → logprob: -10.784510612487793
    10. ' ' → logprob: -11.034510612487793

Token 39: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007112686522305012
    2. '    ' → logprob: -6.007112503051758
    3. ' ' → logprob: -6.757112503051758
    4. '   ' → logprob: -6.882112503051758
    5. ' 
' → logprob: -7.007112503051758
    6. ' for' → logprob: -7.632112503051758
    7. '     
' → logprob: -8.007112503051758
    8. '  ' → logprob: -8.507112503051758
    9. '       ' → logprob: -8.632112503051758
    10. ',' → logprob: -9.882112503051758

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03439199551939964
    2. 'for' (adapté à ' for') → logprob: -3.7843918800354004
    3. '   ' → logprob: -4.6593918800354
    4. ' ' → logprob: -7.1593918800354
    5. '    ' → logprob: -8.034392356872559
    6. ' range' → logprob: -8.659392356872559
    7. ' j' → logprob: -9.534392356872559
    8. '       ' → logprob: -10.409392356872559
    9. '	for' → logprob: -10.409392356872559
    10. 'range' → logprob: -10.409392356872559

Token 41: ' v' (ID: 323)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.906195342540741
    2. ' j' → logprob: -1.4061954021453857
    3. 'j' → logprob: -1.5311954021453857
    4. 'range' → logprob: -2.0311954021453857
    5. ' ' → logprob: -6.781195163726807
    6. 'x' → logprob: -7.281195163726807
    7. 'i' → logprob: -8.031195640563965
    8. ' x' → logprob: -8.406195640563965
    9. ' i' → logprob: -8.656195640563965
    10. '1' → logprob: -9.156195640563965

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2522886395454407
    2. 'in' → logprob: -1.502288579940796
    3. ' ' → logprob: -9.377288818359375
    4. 'v' → logprob: -10.002288818359375
    5. '   ' → logprob: -10.377288818359375
    6. 's' → logprob: -10.502288818359375
    7. '  ' → logprob: -10.877288818359375
    8. '_in' → logprob: -11.002288818359375
    9. ',' → logprob: -11.127288818359375
    10. '    ' → logprob: -11.377288818359375

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.37081900238990784
    2. ' range' → logprob: -1.6208189725875854
    3. '[' → logprob: -2.245819091796875
    4. '(range' → logprob: -5.745819091796875
    5. ' [' → logprob: -6.120819091796875
    6. '(' → logprob: -7.370819091796875
    7. ' ' → logprob: -9.995819091796875
    8. '	range' → logprob: -10.120819091796875
    9. ' (' → logprob: -10.245819091796875
    10. ' xrange' → logprob: -10.245819091796875

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38740575313568115
    2. '(i' → logprob: -1.1374057531356812
    3. '1' → logprob: -7.762405872344971
    4. '(v' → logprob: -9.887405395507812
    5. '2' → logprob: -10.887405395507812
    6. 'i' → logprob: -11.262405395507812
    7. '(X' → logprob: -12.012405395507812
    8. '(len' → logprob: -12.887405395507812
    9. ' (' → logprob: -13.137405395507812
    10. '(min' → logprob: -13.262405395507812

Token 45: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42850932478904724
    2. 'i' → logprob: -1.1785093545913696
    3. '3' → logprob: -4.30350923538208
    4. '6' → logprob: -4.67850923538208
    5. '4' → logprob: -4.67850923538208
    6. '2' → logprob: -6.05350923538208
    7. '5' → logprob: -6.42850923538208
    8. '7' → logprob: -6.80350923538208
    9. '10' → logprob: -7.05350923538208
    10. 'v' → logprob: -7.42850923538208

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2508150339126587
    2. '0' → logprob: -1.6258150339126587
    3. '1' → logprob: -4.500814914703369
    4. '00' → logprob: -4.875814914703369
    5. '01' → logprob: -5.750814914703369
    6. ' ,' → logprob: -6.750814914703369
    7. '):' → logprob: -7.000814914703369
    8. '000' → logprob: -7.750814914703369
    9. '):
' → logprob: -8.375815391540527
    10. '+' → logprob: -8.875815391540527

Token 47: ' ' (ID: 220)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.009637917391955853
    2. 'i' → logprob: -4.884637832641602
    3. ' X' → logprob: -7.134637832641602
    4. '100' → logprob: -7.259637832641602
    5. 'v' → logprob: -8.759637832641602
    6. '101' → logprob: -9.384637832641602
    7. 'min' → logprob: -9.509637832641602
    8. ' i' → logprob: -9.884637832641602
    9. '0' → logprob: -10.259637832641602
    10. '999' → logprob: -10.384637832641602

Token 48: '106' (ID: 13365)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0063355411402881145
    2. 'i' → logprob: -5.881335735321045
    3. '100' → logprob: -6.506335735321045
    4. 'v' → logprob: -6.631335735321045
    5. '101' → logprob: -8.006335258483887
    6. 'min' → logprob: -8.756335258483887
    7. '1' → logprob: -9.881335258483887
    8. ' X' → logprob: -10.256335258483887
    9. '110' → logprob: -10.381335258483887
    10. '0' → logprob: -10.506335258483887

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10085392743349075
    2. '1' → logprob: -2.72585391998291
    3. ',' → logprob: -4.85085391998291
    4. ')' → logprob: -4.97585391998291
    5. '+' → logprob: -5.60085391998291
    6. '0' → logprob: -6.10085391998291
    7. '7' → logprob: -6.22585391998291
    8. '3' → logprob: -6.35085391998291
    9. '):
' → logprob: -6.47585391998291
    10. '5' → logprob: -6.97585391998291

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012717652134597301
    2. ' if' → logprob: -5.8877177238464355
    3. '           ' → logprob: -6.0127177238464355
    4. ',' → logprob: -6.8877177238464355
    5. '   ' → logprob: -7.0127177238464355
    6. ' ' → logprob: -7.3877177238464355
    7. '        
' → logprob: -7.3877177238464355
    8. '```' → logprob: -7.3877177238464355
    9. '        ' → logprob: -7.5127177238464355
    10. '+' → logprob: -8.012717247009277

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0788499042391777
    2. '   ' → logprob: -3.8288497924804688
    3. ' i' → logprob: -3.9538497924804688
    4. 'if' (adapté à ' if') → logprob: -4.078849792480469
    5. 'i' → logprob: -5.078849792480469
    6. '           ' → logprob: -5.328849792480469
    7. '    ' → logprob: -5.703849792480469
    8. ' ' → logprob: -6.703849792480469
    9. '               ' → logprob: -7.078849792480469
    10. '```' → logprob: -8.578849792480469

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6345770359039307
    2. 'i' → logprob: -0.7595770359039307
    3. '   ' → logprob: -6.884576797485352
    4. '               ' → logprob: -8.009576797485352
    5. '           ' → logprob: -8.259576797485352
    6. '                   ' → logprob: -9.134576797485352
    7. ' ' → logprob: -9.634576797485352
    8. 'v' → logprob: -9.759576797485352
    9. '    ' → logprob: -10.634576797485352
    10. '            ' → logprob: -11.134576797485352

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859725013375282
    2. ' +' → logprob: -3.0485973358154297
    3. ' ' → logprob: -13.29859733581543
    4. '+=' → logprob: -13.42359733581543
    5. '+
' → logprob: -13.54859733581543
    6. '>=' → logprob: -13.67359733581543
    7. ' ' → logprob: -14.67359733581543
    8. 'v' → logprob: -14.79859733581543
    9. '＋' → logprob: -14.79859733581543
    10. '>' → logprob: -14.98609733581543

Token 54: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.024604277219623e-05
    2. ' v' → logprob: -10.125040054321289
    3. '	v' → logprob: -16.75004005432129
    4. ')v' → logprob: -17.50004005432129
    5. '*v' → logprob: -17.75004005432129
    6. ' ' → logprob: -18.12504005432129
    7. '<|end|>' → logprob: -18.12504005432129
    8. '   ' → logprob: -18.37504005432129
    9. '100' → logprob: -18.50004005432129
    10. 'vj' → logprob: -19.12504005432129

Token 55: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14313943684101105
    2. '<=' → logprob: -2.018139362335205
    3. ' <' → logprob: -8.018139839172363
    4. '<' → logprob: -9.018139839172363
    5. '<len' → logprob: -11.768139839172363
    6. ')' → logprob: -13.143139839172363
    7. ')<=' → logprob: -13.893139839172363
    8. '```' → logprob: -14.018139839172363
    9. ']<=' → logprob: -14.143139839172363
    10. ' ' → logprob: -14.518139839172363

Token 56: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.000912774819880724
    2. ' X' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. ' ' → logprob: -15.5009126663208
    5. '	X' → logprob: -16.750913619995117
    6. '>X' → logprob: -17.000913619995117
    7. '  ' → logprob: -18.250913619995117
    8. 'x' → logprob: -18.250913619995117
    9. '```' → logprob: -18.375913619995117
    10. ')' → logprob: -18.875913619995117

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03380372002720833
    2. ':
' → logprob: -3.408803701400757
    3. ' and' → logprob: -8.908803939819336
    4. '):' → logprob: -12.283803939819336
    5. ':
' → logprob: -12.533803939819336
    6. '):
' → logprob: -12.783803939819336
    7. 'and' → logprob: -13.408803939819336
    8. '           ' → logprob: -13.533803939819336
    9. ':

' → logprob: -13.533803939819336
    10. ' :' → logprob: -13.533803939819336

Token 58: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012468213215470314
    2. ' dp' → logprob: -4.762468338012695
    3. 'dp' → logprob: -5.887468338012695
    4. '           ' → logprob: -8.012468338012695
    5. '                
' → logprob: -8.387468338012695
    6. '	dp' → logprob: -9.137468338012695
    7. '```' → logprob: -9.637468338012695
    8. ':' → logprob: -9.887468338012695
    9. '              ' → logprob: -9.887468338012695
    10. '(dp' → logprob: -10.012468338012695

Token 59: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3262327313423157
    2. 'dp' (adapté à ' dp') → logprob: -1.576232671737671
    3. '                   ' → logprob: -2.701232671737671
    4. '               ' → logprob: -5.82623291015625
    5. '	dp' → logprob: -6.82623291015625
    6. '                ' → logprob: -9.20123291015625
    7. '(dp' → logprob: -9.57623291015625
    8. '                  ' → logprob: -9.95123291015625
    9. '                       ' → logprob: -9.95123291015625
    10. '   ' → logprob: -10.20123291015625

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -19.000001907348633
    4. '[int' → logprob: -20.000001907348633
    5. '[I' → logprob: -20.375001907348633
    6. '```' → logprob: -21.000001907348633
    7. '\[' → logprob: -21.250001907348633
    8. '[j' → logprob: -21.500001907348633
    9. '[ii' → logprob: -22.000001907348633
    10. '[n' → logprob: -22.125001907348633

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005235291086137295
    2. ' +' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.13023567199707
    4. ']' → logprob: -15.50523567199707
    5. '   ' → logprob: -15.88023567199707
    6. '＋' → logprob: -15.88023567199707
    7. '+i' → logprob: -16.50523567199707
    8. '+=' → logprob: -16.63023567199707
    9. '+]' → logprob: -17.00523567199707
    10. '+
' → logprob: -17.88023567199707

Token 62: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2948405128554441e-05
    2. ' v' → logprob: -11.37501335144043
    3. '<|end|>' → logprob: -14.12501335144043
    4. '   ' → logprob: -16.00001335144043
    5. '```' → logprob: -16.00001335144043
    6. '	v' → logprob: -16.25001335144043
    7. ']' → logprob: -16.50001335144043
    8. ' ' → logprob: -16.62501335144043
    9. ')' → logprob: -17.00001335144043
    10. '           ' → logprob: -17.37501335144043

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.051066520740278e-05
    2. ']=' → logprob: -10.375060081481934
    3. ' ]' → logprob: -10.875060081481934
    4. ']+=' → logprob: -11.750060081481934
    5. '|' → logprob: -13.375060081481934
    6. ']|' → logprob: -14.500060081481934
    7. ']
' → logprob: -15.875060081481934
    8. '=' → logprob: -16.37506103515625
    9. '`]' → logprob: -16.50006103515625
    10. '[' → logprob: -17.37506103515625

Token 64: ' =' (ID: 314)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.32732099294662476
    2. '=' → logprob: -1.5773210525512695
    3. ' |=' → logprob: -2.7023210525512695
    4. '+=' → logprob: -5.7023210525512695
    5. ' =' → logprob: -6.2023210525512695
    6. ' +=' → logprob: -8.95232105255127
    7. ' ' → logprob: -10.32732105255127
    8. ']+=' → logprob: -10.95232105255127
    9. ']' → logprob: -11.32732105255127
    10. '```' → logprob: -12.57732105255127

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -9.25015926361084
    3. 'True' → logprob: -9.75015926361084
    4. ' True' → logprob: -13.25015926361084
    5. '255' → logprob: -13.87515926361084
    6. '   ' → logprob: -13.87515926361084
    7. '  ' → logprob: -15.75015926361084
    8. '                           ' → logprob: -16.187658309936523
    9. '(True' → logprob: -16.187658309936523
    10. '           ' → logprob: -16.250158309936523

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004618896055035293
    2. 'True' → logprob: -7.750462055206299
    3. ' ' → logprob: -10.87546157836914
    4. '255' → logprob: -11.75046157836914
    5. ' True' → logprob: -13.50046157836914
    6. '(True' → logprob: -13.87546157836914
    7. '(' → logprob: -15.00046157836914
    8. '   ' → logprob: -15.37546157836914
    9. 'dp' → logprob: -15.56296157836914
    10. '2' → logprob: -16.18796157836914

Token 67: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26887232065200806
    2. '<|end|>' → logprob: -2.5188722610473633
    3. '\n' → logprob: -2.6438722610473633
    4. '0' → logprob: -3.5188722610473633
    5. '#' → logprob: -4.518872261047363
    6. ')' → logprob: -5.018872261047363
    7. '*' → logprob: -5.143872261047363
    8. 'print' → logprob: -5.143872261047363
    9. '[' → logprob: -5.268872261047363
    10. '```' → logprob: -5.643872261047363

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00048596507986076176
    2. ')' → logprob: -8.625486373901367
    3. '
' → logprob: -9.125486373901367
    4. '#' → logprob: -10.250486373901367
    5. '0' → logprob: -10.250486373901367
    6. ' print' → logprob: -10.750486373901367
    7. '```' → logprob: -11.250486373901367
    8. '\n' → logprob: -11.875486373901367
    9. '  
' → logprob: -11.875486373901367
    10. '.' → logprob: -11.875486373901367

Token 69: '(dp' (ID: 68843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008863802999258041
    2. '(dp' → logprob: -4.758863925933838
    3. '(sum' → logprob: -8.75886344909668
    4. '(len' → logprob: -9.88386344909668
    5. '("("' → logprob: -11.25886344909668
    6. '(
' → logprob: -11.63386344909668
    7. '()' → logprob: -12.00886344909668
    8. '('' → logprob: -12.50886344909668
    9. '(

' → logprob: -13.00886344909668
    10. '((' → logprob: -13.50886344909668

Token 70: '[X' (ID: 118621)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018123136833310127
    2. '[X' → logprob: -4.518123149871826
    3. '[' → logprob: -5.268123149871826
    4. '])' → logprob: -6.893123149871826
    5. '[-' → logprob: -7.768123149871826
    6. ']' → logprob: -7.893123149871826
    7. '))' → logprob: -11.018122673034668
    8. ' )' → logprob: -11.143122673034668
    9. '`)' → logprob: -11.268122673034668
    10. ')`' → logprob: -11.643122673034668

Token 71: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07897581905126572
    2. ')' → logprob: -2.5789759159088135
    3. '))' → logprob: -9.953975677490234
    4. ']' → logprob: -11.203975677490234
    5. '})' → logprob: -11.578975677490234
    6. ')]' → logprob: -12.203975677490234
    7. ')])' → logprob: -12.578975677490234
    8. '])
' → logprob: -13.203975677490234
    9. ''])' → logprob: -13.703975677490234
    10. ' ])' → logprob: -14.078975677490234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 34.78%
Précision adaptée (1ère position): 34.78%
Précision (top 10): 78.26%
================================================================================
