================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()
ec = S.count('E')
wc = 0
min_val = ec
for k in S:
    if k == 'E':
        ec -= 1
    else:
        wc += 1
    if min_val > ec + wc:
        min_val = ec + wc
print(min_val)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004046938265673816
    2. '(N' → logprob: -8.250404357910156
    3. '`' → logprob: -9.625404357910156
    4. '```' → logprob: -10.250404357910156
    5. ''' → logprob: -11.750404357910156
    6. '(
' → logprob: -11.875404357910156
    7. '("("' → logprob: -11.875404357910156
    8. 'N' → logprob: -12.250404357910156
    9. '('' → logprob: -12.500404357910156
    10. ' (' → logprob: -12.875404357910156

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'S' (ID: 50)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8439445495605469
    2. 'for' → logprob: -1.8439445495605469
    3. 'a' → logprob: -2.093944549560547
    4. 's' → logprob: -2.218944549560547
    5. '*' → logprob: -2.593944549560547
    6. ''' → logprob: -2.843944549560547
    7. ')' → logprob: -3.218944549560547
    8. 'x' → logprob: -3.218944549560547
    9. 'i' → logprob: -3.218944549560547
    10. '#' → logprob: -3.218944549560547

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11139343678951263
    2. '=' → logprob: -2.861393451690674
    3. '[' → logprob: -3.236393451690674
    4. ' =' → logprob: -4.861393451690674
    5. ')' → logprob: -8.236392974853516
    6. '_' → logprob: -8.486392974853516
    7. 'u' → logprob: -9.861392974853516
    8. '.=' → logprob: -9.861392974853516
    9. '[:]' → logprob: -9.986392974853516
    10. ':' → logprob: -9.986392974853516

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5765805840492249
    2. ' input' → logprob: -0.8265805840492249
    3. '""' → logprob: -8.326581001281738
    4. '"' → logprob: -8.951581001281738
    5. ''' → logprob: -10.076581001281738
    6. ' ' → logprob: -10.201581001281738
    7. '(input' → logprob: -10.326581001281738
    8. '=input' → logprob: -10.576581001281738
    9. '[input' → logprob: -10.701581001281738
    10. '''' → logprob: -10.701581001281738

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0845610573887825
    2. '()' → logprob: -2.5845611095428467
    3. ')' → logprob: -5.459560871124268
    4. ''' → logprob: -8.209561347961426
    5. '('' → logprob: -8.209561347961426
    6. '(
' → logprob: -8.834561347961426
    7. '```' → logprob: -8.959561347961426
    8. ' (' → logprob: -9.084561347961426
    9. '(

' → logprob: -9.334561347961426
    10. '`' → logprob: -9.584561347961426

Token 9: 'ec' (ID: 1007)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5743134617805481
    2. 'count' → logprob: -1.5743134021759033
    3. 'if' → logprob: -1.9493134021759033
    4. 'result' → logprob: -2.8243134021759033
    5. 'c' → logprob: -5.199313640594482
    6. 'i' → logprob: -5.199313640594482
    7. 'sum' → logprob: -5.824313640594482
    8. 'f' → logprob: -6.324313640594482
    9. 'print' → logprob: -6.574313640594482
    10. 'd' → logprob: -6.824313640594482

Token 10: ' =' (ID: 314)
  Prédit: 'ho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.6426133513450623
    2. 'h' → logprob: -1.017613410949707
    3. 'ount' → logprob: -3.517613410949707
    4. 'o' → logprob: -3.642613410949707
    5. '=' → logprob: -3.767613410949707
    6. ' =' → logprob: -3.892613410949707
    7. '[' → logprob: -5.017613410949707
    8. 'ounter' → logprob: -6.017613410949707
    9. 'nt' → logprob: -6.892613410949707
    10. 'har' → logprob: -7.892613410949707

Token 11: ' S' (ID: 336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5053174495697021
    2. ' ' → logprob: -1.1303174495697021
    3. '{}' → logprob: -3.005317449569702
    4. ' {}' → logprob: -3.880317449569702
    5. 'S' → logprob: -6.505317687988281
    6. '{' → logprob: -6.880317687988281
    7. ' S' → logprob: -7.755317687988281
    8. '[' → logprob: -8.380317687988281
    9. ' [' → logprob: -8.755317687988281
    10. ' {' → logprob: -9.005317687988281

Token 12: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2205227166414261
    2. '[' → logprob: -1.8455227613449097
    3. '[:]' → logprob: -3.84552264213562
    4. '.count' → logprob: -4.720522880554199
    5. '+' → logprob: -5.345522880554199
    6. '.replace' → logprob: -6.595522880554199
    7. '[::-' → logprob: -6.970522880554199
    8. '=' → logprob: -7.970522880554199
    9. '[:' → logprob: -8.0955228805542
    10. '.lower' → logprob: -8.2205228805542

Token 13: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5394732356071472
    2. '('' → logprob: -0.9144732356071472
    3. '("("' → logprob: -4.164473056793213
    4. ''' → logprob: -7.914473056793213
    5. '("' → logprob: -8.789473533630371
    6. '(('' → logprob: -10.414473533630371
    7. '"' → logprob: -10.914473533630371
    8. ''(' → logprob: -11.289473533630371
    9. '(
' → logprob: -11.539473533630371
    10. '```' → logprob: -11.914473533630371

Token 14: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.8094229698181152
    2. 'C' → logprob: -2.0594229698181152
    3. 'e' → logprob: -2.1844229698181152
    4. 'a' → logprob: -2.5594229698181152
    5. 'R' → logprob: -2.8094229698181152
    6. ''' → logprob: -2.8094229698181152
    7. '('' → logprob: -3.4344229698181152
    8. ')' → logprob: -4.059422969818115
    9. 'A' → logprob: -4.434422969818115
    10. '')' → logprob: -4.809422969818115

Token 15: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10199996083974838
    2. ')' → logprob: -2.3519999980926514
    3. 'Q' → logprob: -7.351999759674072
    4. 'C' → logprob: -8.22700023651123
    5. ''' → logprob: -8.60200023651123
    6. '')
' → logprob: -9.10200023651123
    7. ''C' → logprob: -9.35200023651123
    8. 'X' → logprob: -9.72700023651123
    9. ' ')' → logprob: -9.72700023651123
    10. 'S' → logprob: -10.22700023651123

Token 16: 'wc' (ID: 51378)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0945744663476944
    2. 'v' → logprob: -4.219574451446533
    3. 'q' → logprob: -4.219574451446533
    4. 'w' → logprob: -4.344574451446533
    5. 'n' → logprob: -4.594574451446533
    6. 'r' → logprob: -4.844574451446533
    7. 'p' → logprob: -5.094574451446533
    8. 'C' → logprob: -5.719574451446533
    9. 'a' → logprob: -5.969574451446533
    10. 's' → logprob: -6.094574451446533

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31599366664886475
    2. ' =' → logprob: -1.3159936666488647
    3. 'o' → logprob: -6.815993785858154
    4. '_' → logprob: -6.940993785858154
    5. 'ount' → logprob: -8.065993309020996
    6. '=o' → logprob: -8.940993309020996
    7. ' ' → logprob: -9.315993309020996
    8. 's' → logprob: -10.565993309020996
    9. '_o' → logprob: -11.315993309020996
    10. '  ' → logprob: -11.315993309020996

Token 18: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01702139712870121
    2. ' S' → logprob: -4.142021179199219
    3. 'N' → logprob: -7.892021179199219
    4. 'W' → logprob: -8.017021179199219
    5. '0' → logprob: -9.392021179199219
    6. ' ' → logprob: -10.017021179199219
    7. 'ec' → logprob: -10.642021179199219
    8. 'len' → logprob: -10.767021179199219
    9. 'w' → logprob: -10.892021179199219
    10. ''S' → logprob: -10.892021179199219

Token 19: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0011339050251990557
    2. ' S' → logprob: -7.001133918762207
    3. 'N' → logprob: -8.876133918762207
    4. 'W' → logprob: -10.501133918762207
    5. '0' → logprob: -10.626133918762207
    6. 'len' → logprob: -11.876133918762207
    7. ' ' → logprob: -12.376133918762207
    8. ''S' → logprob: -12.376133918762207
    9. 'ec' → logprob: -12.501133918762207
    10. '1' → logprob: -13.813633918762207

Token 20: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4067037105560303
    2. ' ' → logprob: -1.9067037105560303
    3. 'f' → logprob: -2.5317037105560303
    4. 'w' → logprob: -2.6567037105560303
    5. 'for' → logprob: -2.6567037105560303
    6. '\n' → logprob: -2.7817037105560303
    7. '\' → logprob: -3.1567037105560303
    8. 'd' → logprob: -3.2817037105560303
    9. 'i' → logprob: -3.5317037105560303
    10. ' 
' → logprob: -4.031703948974609

Token 21: 'min' (ID: 1493)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6604583263397217
    2. 'w' → logprob: -1.7854583263397217
    3. 'W' → logprob: -2.7854583263397217
    4. ' for' → logprob: -2.9104583263397217
    5. 'r' → logprob: -3.5354583263397217
    6. ' 
' → logprob: -3.6604583263397217
    7. 'for' → logprob: -4.410458564758301
    8. 'f' → logprob: -4.660458564758301
    9. '0' → logprob: -4.660458564758301
    10. ')' → logprob: -4.910458564758301

Token 22: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002163825323805213
    2. '_val' → logprob: -7.627163887023926
    3. '_=' → logprob: -7.627163887023926
    4. '_diff' → logprob: -8.377163887023926
    5. '_space' → logprob: -8.877163887023926
    6. '_count' → logprob: -9.252163887023926
    7. '_r' → logprob: -9.252163887023926
    8. '_balance' → logprob: -9.377163887023926
    9. '_c' → logprob: -9.752163887023926
    10. '_left' → logprob: -10.252163887023926

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5792533159255981
    2. '=' → logprob: -0.8292533159255981
    3. '_' → logprob: -5.954253196716309
    4. ' ' → logprob: -8.204253196716309
    5. ',' → logprob: -8.579253196716309
    6. '_=' → logprob: -9.704253196716309
    7. ')' → logprob: -10.329253196716309
    8. 'u' → logprob: -10.329253196716309
    9. '[' → logprob: -11.454253196716309
    10. 's' → logprob: -11.454253196716309

Token 24: ' ec' (ID: 16746)
  Prédit: 'ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.2256569266319275
    2. 'N' → logprob: -2.2256569862365723
    3. ' ec' → logprob: -2.7256569862365723
    4. ' N' → logprob: -4.100656986236572
    5. '0' → logprob: -5.100656986236572
    6. '100' → logprob: -6.725656986236572
    7. ' ' → logprob: -6.975656986236572
    8. 'min' → logprob: -7.100656986236572
    9. 'len' → logprob: -7.475656986236572
    10. 'float' → logprob: -7.600656986236572

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28931400179862976
    2. ' c' → logprob: -1.9143140316009521
    3. ' ' → logprob: -2.664314031600952
    4. ' _' → logprob: -3.539314031600952
    5. 'c' → logprob: -6.164313793182373
    6. '_' → logprob: -6.539313793182373
    7. '  ' → logprob: -7.789313793182373
    8. 'i' → logprob: -7.914313793182373
    9. ' char' → logprob: -7.914313793182373
    10. ' ch' → logprob: -8.914314270019531

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010028519667685032
    2. 'in' → logprob: -4.63502836227417
    3. ' ' → logprob: -8.260028839111328
    4. ' k' → logprob: -12.510028839111328
    5. 'range' → logprob: -12.760028839111328
    6. '  ' → logprob: -13.510028839111328
    7. 'n' → logprob: -14.010028839111328
    8. 'k' → logprob: -14.010028839111328
    9. '	in' → logprob: -14.135028839111328
    10. ' i' → logprob: -14.260028839111328

Token 29: ' S' (ID: 336)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16025246679782867
    2. 'range' → logprob: -1.9102524518966675
    3. ' S' → logprob: -11.410252571105957
    4. ' ' → logprob: -11.785252571105957
    5. '	range' → logprob: -12.785252571105957
    6. ' xrange' → logprob: -13.035252571105957
    7. ' in' → logprob: -13.910252571105957
    8. '(range' → logprob: -14.035252571105957
    9. ')' → logprob: -14.160252571105957
    10. 'S' → logprob: -14.910252571105957

Token 30: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7975828647613525
    2. ':' → logprob: -1.0475828647613525
    3. '[' → logprob: -2.7975828647613525
    4. '[:' → logprob: -2.7975828647613525
    5. 'in' → logprob: -2.9225828647613525
    6. '[k' → logprob: -4.797582626342773
    7. ' :' → logprob: -5.672582626342773
    8. '<|end|>' → logprob: -5.797582626342773
    9. '[:]' → logprob: -6.672582626342773
    10. ' ' → logprob: -6.922582626342773

Token 31: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.055635005235672
    2. ' ' → logprob: -3.1806349754333496
    3. '    ' → logprob: -5.18063497543335
    4. 'if' → logprob: -5.55563497543335
    5. '   ' → logprob: -6.43063497543335
    6. ' i' → logprob: -7.80563497543335
    7. ' w' → logprob: -8.305635452270508
    8. '  ' → logprob: -9.180635452270508
    9. ' wc' → logprob: -9.430635452270508
    10. '```' → logprob: -9.430635452270508

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03787092864513397
    2. 'if' (adapté à ' if') → logprob: -3.4128708839416504
    3. ' ' → logprob: -6.53787088394165
    4. '   ' → logprob: -6.66287088394165
    5. ' i' → logprob: -7.53787088394165
    6. '    ' → logprob: -8.037871360778809
    7. 'i' → logprob: -8.287871360778809
    8. '```' → logprob: -9.037871360778809
    9. 's' → logprob: -9.662871360778809
    10. 'I' → logprob: -9.787871360778809

Token 33: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1427219659090042
    2. 'k' → logprob: -2.0177218914031982
    3. ' ' → logprob: -10.017722129821777
    4. '   ' → logprob: -14.392722129821777
    5. '	k' → logprob: -14.517722129821777
    6. '  ' → logprob: -14.642722129821777
    7. ' к' → logprob: -15.642722129821777
    8. '    ' → logprob: -15.892722129821777
    9. ' ' → logprob: -16.14272117614746
    10. '{k' → logprob: -16.95522117614746

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3291364908218384
    2. '==' → logprob: -1.3291364908218384
    3. '=='' → logprob: -5.204136371612549
    4. ''' → logprob: -5.329136371612549
    5. '=' → logprob: -5.704136371612549
    6. ' '' → logprob: -6.954136371612549
    7. ' =='' → logprob: -7.954136371612549
    8. ' ' → logprob: -8.204136848449707
    9. ' =' → logprob: -8.329136848449707
    10. '  ' → logprob: -10.329136848449707

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029157621785998344
    2. ''E' → logprob: -4.029157638549805
    3. ' '' → logprob: -4.779157638549805
    4. '"W' → logprob: -7.654157638549805
    5. ''w' → logprob: -7.654157638549805
    6. 'W' → logprob: -7.904157638549805
    7. ' W' → logprob: -8.904157638549805
    8. ' ' → logprob: -8.904157638549805
    9. ''O' → logprob: -8.966657638549805
    10. ''S' → logprob: -9.029157638549805

Token 36: 'E' (ID: 36)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0026056256610900164
    2. ''' → logprob: -6.752605438232422
    3. 'E' → logprob: -7.127605438232422
    4. '"W' → logprob: -8.627605438232422
    5. ' W' → logprob: -9.252605438232422
    6. '<W' → logprob: -9.377605438232422
    7. ''E' → logprob: -9.752605438232422
    8. ''w' → logprob: -10.002605438232422
    9. '	W' → logprob: -11.002605438232422
    10. '_W' → logprob: -11.127605438232422

Token 37: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.38763806223869324
    2. ''' → logprob: -1.2626380920410156
    3. ' ':' → logprob: -3.6376380920410156
    4. ':' → logprob: -4.887638092041016
    5. ' '' → logprob: -5.887638092041016
    6. ''s' → logprob: -7.762638092041016
    7. ''E' → logprob: -8.137638092041016
    8. 'E' → logprob: -8.637638092041016
    9. '':'' → logprob: -8.637638092041016
    10. '':
' → logprob: -8.887638092041016

Token 38: '       ' (ID: 309)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.11214318871498108
    2. ' wc' → logprob: -2.3621432781219482
    3. '   ' → logprob: -5.112143039703369
    4. '       ' → logprob: -5.362143039703369
    5. '_wc' → logprob: -6.987143039703369
    6. '```' → logprob: -8.987143516540527
    7. 'ec' → logprob: -11.362143516540527
    8. '    ' → logprob: -11.487143516540527
    9. '<|end|>' → logprob: -11.487143516540527
    10. ' ' → logprob: -11.737143516540527

Token 39: ' ec' (ID: 16746)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.020553454756736755
    2. ' wc' → logprob: -4.0205535888671875
    3. 'ec' (adapté à ' ec') → logprob: -6.3955535888671875
    4. '   ' → logprob: -8.145553588867188
    5. 'w' → logprob: -8.520553588867188
    6. ' ec' → logprob: -9.020553588867188
    7. '_wc' → logprob: -10.020553588867188
    8. '```' → logprob: -10.520553588867188
    9. ' ' → logprob: -11.270553588867188
    10. ' w' → logprob: -12.145553588867188

Token 40: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.06340855360031128
    2. '-' → logprob: -3.188408613204956
    3. ' -=' → logprob: -4.063408374786377
    4. '=' → logprob: -5.813408374786377
    5. ' =' → logprob: -11.563408851623535
    6. '+=' → logprob: -12.063408851623535
    7. '```' → logprob: -12.563408851623535
    8. ')' → logprob: -13.188408851623535
    9. ' -' → logprob: -13.938408851623535
    10. '   ' → logprob: -14.063408851623535

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.7500057220459
    4. '<|end|>' → logprob: -19.8750057220459
    5. '```' → logprob: -21.1250057220459
    6. '  ' → logprob: -21.3750057220459
    7. '１' → logprob: -22.0000057220459
    8. '۱' → logprob: -22.1250057220459
    9. '0' → logprob: -22.2500057220459
    10. '१' → logprob: -22.3750057220459

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '```' → logprob: -19.125003814697266
    6. '0' → logprob: -20.000003814697266
    7. '۱' → logprob: -20.750003814697266
    8. '  ' → logprob: -20.937503814697266
    9. '१' → logprob: -21.062503814697266
    10. '-' → logprob: -21.187503814697266

Token 43: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.077241063117981
    2. ' elif' → logprob: -1.202241063117981
    3. ' else' → logprob: -2.2022409439086914
    4. 'else' → logprob: -2.3272409439086914
    5. '```' → logprob: -2.4522409439086914
    6. '<|end|>' → logprob: -2.9522409439086914
    7. '   ' → logprob: -5.452240943908691
    8. '
' → logprob: -5.952240943908691
    9. ' 
' → logprob: -6.452240943908691
    10. ')' → logprob: -6.952240943908691

Token 44: '   ' (ID: 271)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -1.00278902053833
    2. 'elif' → logprob: -1.00278902053833
    3. '```' → logprob: -1.50278902053833
    4. 'else' → logprob: -3.87778902053833
    5. ' else' → logprob: -4.00278902053833
    6. '<|end|>' → logprob: -6.00278902053833
    7. ' ' → logprob: -7.75278902053833
    8. '
' → logprob: -7.75278902053833
    9. ' 
' → logprob: -7.87778902053833
    10. '   ' → logprob: -8.002788543701172

Token 45: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.14817453920841217
    2. 'elif' → logprob: -2.523174524307251
    3. ' else' → logprob: -3.023174524307251
    4. 'else' (adapté à ' else') → logprob: -4.89817476272583
    5. ' ' → logprob: -7.14817476272583
    6. '```' → logprob: -8.023174285888672
    7. '   ' → logprob: -8.773174285888672
    8. '    ' → logprob: -10.023174285888672
    9. '	elif' → logprob: -10.648174285888672
    10. '<|end|>' → logprob: -10.773174285888672

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45404550433158875
    2. '       ' → logprob: -1.3290455341339111
    3. '        ' → logprob: -3.954045534133911
    4. ' wc' → logprob: -4.079045295715332
    5. 'wc' → logprob: -4.079045295715332
    6. ':
' → logprob: -4.329045295715332
    7. '   ' → logprob: -4.579045295715332
    8. '    ' → logprob: -4.704045295715332
    9. ' ' → logprob: -5.454045295715332
    10. ' if' → logprob: -6.329045295715332

Token 47: '       ' (ID: 309)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.5891772508621216
    2. ' wc' → logprob: -1.5891772508621216
    3. '   ' → logprob: -1.9641772508621216
    4. '       ' → logprob: -2.714177131652832
    5. '    ' → logprob: -4.214177131652832
    6. '```' → logprob: -4.589177131652832
    7. ' w' → logprob: -5.464177131652832
    8. 'w' → logprob: -6.964177131652832
    9. ' ' → logprob: -7.089177131652832
    10. '        ' → logprob: -7.214177131652832

Token 48: ' wc' (ID: 44867)
  Prédit: ' wc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wc' → logprob: -0.03490728139877319
    2. 'wc' (adapté à ' wc') → logprob: -3.409907341003418
    3. '   ' → logprob: -7.659907341003418
    4. '    ' → logprob: -7.909907341003418
    5. ' ' → logprob: -8.409907341003418
    6. '_wc' → logprob: -9.034907341003418
    7. ' w' → logprob: -10.284907341003418
    8. '       ' → logprob: -11.659907341003418
    9. ' ' → logprob: -11.909907341003418
    10. '```' → logprob: -11.909907341003418

Token 49: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11324711889028549
    2. ' +=' → logprob: -2.2382471561431885
    3. '=' → logprob: -7.863246917724609
    4. '+' → logprob: -10.61324691772461
    5. ']+=' → logprob: -11.73824691772461
    6. '+='' → logprob: -12.98824691772461
    7. '<|end|>' → logprob: -13.98824691772461
    8. ' =' → logprob: -14.11324691772461
    9. ' ' → logprob: -14.23824691772461
    10. '++' → logprob: -14.36324691772461

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023245826363563538
    2. ' ' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.273245811462402
    4. '0' → logprob: -17.14824676513672
    5. '  ' → logprob: -17.52324676513672
    6. '```' → logprob: -18.14824676513672
    7. '    ' → logprob: -18.33574676513672
    8. '2' → logprob: -18.46074676513672
    9. '<|end|>' → logprob: -18.77324676513672
    10. ' ' → logprob: -18.83574676513672

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.3750057220459
    4. '```' → logprob: -18.7500057220459
    5. '0' → logprob: -19.2500057220459
    6. '<|end|>' → logprob: -20.8750057220459
    7. '  ' → logprob: -20.9375057220459
    8. '2' → logprob: -21.3125057220459
    9. '۱' → logprob: -21.3750057220459
    10. '`' → logprob: -21.5000057220459

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12291263788938522
    2. '   ' → logprob: -2.872912645339966
    3. '    
' → logprob: -3.747912645339966
    4. '<|end|>' → logprob: -4.497912406921387
    5. '```' → logprob: -4.997912406921387
    6. '   
' → logprob: -5.497912406921387
    7. ' 
' → logprob: -5.622912406921387
    8. '  
' → logprob: -5.747912406921387
    9. 'min' → logprob: -5.872912406921387
    10. ' min' → logprob: -6.372912406921387

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8075045347213745
    2. 'min' → logprob: -1.5575045347213745
    3. ' 
' → logprob: -1.8075045347213745
    4. ' min' → logprob: -2.307504653930664
    5. '    
' → logprob: -3.932504653930664
    6. '  
' → logprob: -4.182504653930664
    7. '```' → logprob: -4.557504653930664
    8. '<|end|>' → logprob: -5.057504653930664
    9. '\n' → logprob: -5.307504653930664
    10. '   ' → logprob: -5.307504653930664

Token 54: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28633204102516174
    2. '
' → logprob: -2.036332130432129
    3. ' min' → logprob: -2.411332130432129
    4. ' 
' → logprob: -4.036332130432129
    5. '\n' → logprob: -5.411332130432129
    6. '    
' → logprob: -5.911332130432129
    7. '   ' → logprob: -7.036332130432129
    8. '[min' → logprob: -7.286332130432129
    9. '  
' → logprob: -7.411332130432129
    10. '   
' → logprob: -7.911332130432129

Token 55: ' min' (ID: 1349)
  Prédit: ' wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wc' → logprob: -0.00892559252679348
    2. ' min' → logprob: -5.258925437927246
    3. 'wc' → logprob: -5.633925437927246
    4. 'min' → logprob: -9.508925437927246
    5. ' ' → logprob: -10.758925437927246
    6. ' w' → logprob: -12.758925437927246
    7. ' (' → logprob: -12.758925437927246
    8. ' ' → logprob: -12.883925437927246
    9. ' max' → logprob: -14.008925437927246
    10. '   ' → logprob: -14.008925437927246

Token 56: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.005277753341943026
    2. '_' → logprob: -5.255277633666992
    3. 'Val' → logprob: -11.130277633666992
    4. '_VAL' → logprob: -11.630277633666992
    5. ' _' → logprob: -11.755277633666992
    6. ''_' → logprob: -12.880277633666992
    7. 'val' → logprob: -13.630277633666992
    8. '<_' → logprob: -13.755277633666992
    9. '(_' → logprob: -14.005277633666992
    10. '_va' → logprob: -14.005277633666992

Token 57: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0892219990491867
    2. '>' → logprob: -2.464221954345703
    3. ' =' → logprob: -8.589221954345703
    4. '=' → logprob: -9.464221954345703
    5. ' ' → logprob: -11.339221954345703
    6. '   ' → logprob: -13.089221954345703
    7. ')' → logprob: -13.339221954345703
    8. '  ' → logprob: -14.464221954345703
    9. '```' → logprob: -14.464221954345703
    10. '">' → logprob: -14.589221954345703

Token 58: ' ec' (ID: 16746)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.6330860257148743
    2. ' wc' → logprob: -0.7580860257148743
    3. 'ec' → logprob: -8.133086204528809
    4. ' ec' → logprob: -8.758086204528809
    5. '_wc' → logprob: -11.633086204528809
    6. ' ' → logprob: -11.758086204528809
    7. ' w' → logprob: -12.383086204528809
    8. ' ws' → logprob: -12.508086204528809
    9. 'w' → logprob: -12.633086204528809
    10. '   ' → logprob: -12.883086204528809

Token 59: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12704108655452728
    2. '+' → logprob: -2.1270411014556885
    3. '+w' → logprob: -9.50204086303711
    4. ' -' → logprob: -10.50204086303711
    5. '-' → logprob: -12.12704086303711
    6. ' ' → logprob: -12.75204086303711
    7. '   ' → logprob: -14.00204086303711
    8. ' plus' → logprob: -14.62704086303711
    9. 'wc' → logprob: -14.62704086303711
    10. '<w' → logprob: -15.75204086303711

Token 60: ' wc' (ID: 44867)
  Prédit: ' wc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wc' → logprob: -0.03806604817509651
    2. 'wc' → logprob: -3.2880661487579346
    3. '_wc' → logprob: -10.663065910339355
    4. ' ' → logprob: -13.913065910339355
    5. ' WC' → logprob: -16.163066864013672
    6. ' ws' → logprob: -16.288066864013672
    7. 'w' → logprob: -16.788066864013672
    8. '    ' → logprob: -18.038066864013672
    9. 'WC' → logprob: -18.413066864013672
    10. ' ' → logprob: -18.413066864013672

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020731771364808083
    2. ':
' → logprob: -3.8957316875457764
    3. ' :' → logprob: -9.520731925964355
    4. ' :
' → logprob: -9.645731925964355
    5. 'min' → logprob: -11.145731925964355
    6. '   ' → logprob: -11.520731925964355
    7. ':min' → logprob: -11.520731925964355
    8. ':
' → logprob: -11.895731925964355
    9. '):
' → logprob: -12.645731925964355
    10. '_min' → logprob: -12.895731925964355

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02467636950314045
    2. '   ' → logprob: -4.524676322937012
    3. '    ' → logprob: -5.774676322937012
    4. '\n' → logprob: -5.774676322937012
    5. ':' → logprob: -6.024676322937012
    6. ' min' → logprob: -6.524676322937012
    7. 'min' → logprob: -6.774676322937012
    8. '```' → logprob: -7.024676322937012
    9. '        
' → logprob: -8.774676322937012
    10. '
' → logprob: -9.274676322937012

Token 63: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2950373589992523
    2. 'min' (adapté à ' min') → logprob: -1.5450373888015747
    3. '   ' → logprob: -3.545037269592285
    4. '       ' → logprob: -4.670037269592285
    5. '    ' → logprob: -5.670037269592285
    6. '	min' → logprob: -8.670037269592285
    7. '```' → logprob: -9.170037269592285
    8. '           ' → logprob: -9.295037269592285
    9. '_min' → logprob: -10.545037269592285
    10. '        ' → logprob: -10.670037269592285

Token 64: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -5.512236498361744e-07
    2. 'Val' → logprob: -14.875000953674316
    3. '_' → logprob: -16.625
    4. 'val' → logprob: -17.125
    5. '_VAL' → logprob: -17.125
    6. '_va' → logprob: -17.875
    7. '```' → logprob: -18.5
    8. ' _' → logprob: -18.625
    9. '_var' → logprob: -19.625
    10. '_vals' → logprob: -19.875

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003811025235336274
    2. '=' → logprob: -7.875380992889404
    3. ' ' → logprob: -14.000381469726562
    4. ' =)' → logprob: -16.750381469726562
    5. ' =
' → logprob: -16.875381469726562
    6. ' -=' → logprob: -16.875381469726562
    7. ' +=' → logprob: -17.375381469726562
    8. ' ="' → logprob: -17.875381469726562
    9. ' ='' → logprob: -17.875381469726562
    10. '<|end|>' → logprob: -18.625381469726562

Token 66: ' ec' (ID: 16746)
  Prédit: ' ec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ec' → logprob: -0.006729576736688614
    2. 'ec' → logprob: -5.006729602813721
    3. '(ec' → logprob: -11.506729125976562
    4. '_ec' → logprob: -13.506729125976562
    5. '    ' → logprob: -14.256729125976562
    6. '/ec' → logprob: -14.881729125976562
    7. ' éc' → logprob: -14.881729125976562
    8. ' ' → logprob: -15.381729125976562
    9. ' k' → logprob: -15.756729125976562
    10. '.ec' → logprob: -15.881729125976562

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026858193799853325
    2. ' +' → logprob: -3.65185809135437
    3. '+w' → logprob: -8.15185832977295
    4. 'wc' → logprob: -8.27685832977295
    5. '+k' → logprob: -12.15185832977295
    6. '＋' → logprob: -12.40185832977295
    7. ' wc' → logprob: -14.27685832977295
    8. '_wc' → logprob: -14.40185832977295
    9. 'w' → logprob: -14.52685832977295
    10. 'plus' → logprob: -14.77685832977295

Token 68: ' wc' (ID: 44867)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.2523670792579651
    2. ' wc' → logprob: -1.5023670196533203
    3. '1' → logprob: -7.87736701965332
    4. '_wc' → logprob: -10.12736701965332
    5. ' ' → logprob: -11.25236701965332
    6. '0' → logprob: -13.50236701965332
    7. '   ' → logprob: -13.50236701965332
    8. 'w' → logprob: -13.50236701965332
    9. 'ws' → logprob: -14.87736701965332
    10. ' ws' → logprob: -16.12736701965332

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8939017653465271
    2. '<|end|>' → logprob: -0.8939017653465271
    3. '\n' → logprob: -2.393901824951172
    4. ')' → logprob: -2.643901824951172
    5. '```' → logprob: -5.268901824951172
    6. '0' → logprob: -6.143901824951172
    7. '' → logprob: -6.268901824951172
    8. ' 
' → logprob: -6.393901824951172
    9. ' ' → logprob: -6.768901824951172
    10. '#' → logprob: -6.893901824951172

Token 70: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3149802088737488
    2. '(min' → logprob: -1.3149802684783936
    3. '('' → logprob: -6.4399800300598145
    4. '()' → logprob: -9.689980506896973
    5. '("("' → logprob: -11.064980506896973
    6. 'min' → logprob: -11.189980506896973
    7. '(max' → logprob: -11.564980506896973
    8. '(`' → logprob: -11.939980506896973
    9. ' (' → logprob: -12.939980506896973
    10. '("' → logprob: -13.314980506896973

Token 72: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.000001907348633
    3. '_va' → logprob: -15.375001907348633
    4. 'val' → logprob: -15.500001907348633
    5. ')_' → logprob: -15.875001907348633
    6. '_VAL' → logprob: -16.125001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '_v' → logprob: -16.500001907348633
    9. '_var' → logprob: -17.125001907348633
    10. 'Val' → logprob: -17.875001907348633

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -16.75
    4. ')
' → logprob: -17.25
    5. ')`' → logprob: -17.5
    6. '`)' → logprob: -18.625
    7. '）' → logprob: -19.25
    8. '')' → logprob: -19.25
    9. '()' → logprob: -20.0
    10. '),' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 30.99%
Précision adaptée (1ère position): 30.99%
Précision (top 10): 80.28%
================================================================================
