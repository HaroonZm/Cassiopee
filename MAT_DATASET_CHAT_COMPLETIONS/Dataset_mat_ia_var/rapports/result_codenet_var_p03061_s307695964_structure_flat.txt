================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

n = int(input())
a = [int(t) for t in input().split()]

a_gcd = a[0]
for x in a[1:]:
    a_gcd = math.gcd(a_gcd, x)

for i in range(len(a)):
    a[i] //= a_gcd

a_rev = a[::-1]

lgcd = [0]
rgcd = [0]
for i in range(n):
    l = math.gcd(a[i], lgcd[i])
    r = math.gcd(a_rev[i], rgcd[i])
    lgcd.append(l)
    rgcd.append(r)

rgcd = rgcd[::-1]
g = []
for i in range(n):
    g.append(math.gcd(lgcd[i], rgcd[i+1]))

print(max(g) * a_gcd)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006408308399841189
    2. '\' → logprob: -8.875640869140625
    3. 'import' → logprob: -9.000640869140625
    4. '\n' → logprob: -9.000640869140625
    5. '```' → logprob: -9.250640869140625
    6. '<|end|>' → logprob: -10.750640869140625
    7. 'def' → logprob: -11.250640869140625
    8. '#' → logprob: -11.375640869140625
    9. '*' → logprob: -11.500640869140625
    10. 'a' → logprob: -11.625640869140625

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7463604807853699
    2. '_' → logprob: -1.3713605403900146
    3. ' ' → logprob: -2.1213605403900146
    4. ')' → logprob: -2.9963605403900146
    5. '=' → logprob: -3.3713605403900146
    6. 'u' → logprob: -3.9963605403900146
    7. ',' → logprob: -4.4963603019714355
    8. 'a' → logprob: -4.7463603019714355
    9. 'e' → logprob: -5.1213603019714355
    10. ' =' → logprob: -5.2463603019714355

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00977096613496542
    2. '10' → logprob: -5.38477087020874
    3. ' int' → logprob: -6.25977087020874
    4. '1' → logprob: -6.38477087020874
    5. '5' → logprob: -7.25977087020874
    6. '0' → logprob: -7.50977087020874
    7. 'int' → logprob: -8.884771347045898
    8. ' math' → logprob: -9.509771347045898
    9. '20' → logprob: -11.009771347045898
    10. 'math' → logprob: -11.134771347045898

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010115911572938785
    2. '('' → logprob: -10.625101089477539
    3. '()' → logprob: -10.750101089477539
    4. ' (' → logprob: -11.125101089477539
    5. '(
' → logprob: -11.750101089477539
    6. '```' → logprob: -11.875101089477539
    7. '(input' → logprob: -12.000101089477539
    8. '("("' → logprob: -12.500101089477539
    9. '(n' → logprob: -12.875101089477539
    10. ')' → logprob: -13.125101089477539

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26583433151245117
    2. '()' → logprob: -1.7658343315124512
    3. ')' → logprob: -2.890834331512451
    4. '())' → logprob: -5.265834331512451
    5. '(
' → logprob: -7.265834331512451
    6. '('' → logprob: -7.640834331512451
    7. '))' → logprob: -9.39083480834961
    8. '```' → logprob: -9.51583480834961
    9. '(

' → logprob: -9.89083480834961
    10. '(()' → logprob: -10.14083480834961

Token 8: 'a' (ID: 64)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9495314359664917
    2. 'factor' → logprob: -1.5745314359664917
    3. 'if' → logprob: -1.9495314359664917
    4. 'for' → logprob: -2.1995315551757812
    5. 's' → logprob: -2.8245315551757812
    6. 'fact' → logprob: -3.3245315551757812
    7. ')' → logprob: -3.9495315551757812
    8. 'f' → logprob: -4.199531555175781
    9. 'x' → logprob: -4.449531555175781
    10. '_' → logprob: -6.949531555175781

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001435589394532144
    2. 'a' → logprob: -8.001435279846191
    3. '[a' → logprob: -8.001435279846191
    4. '[n' → logprob: -8.126435279846191
    5. '[]' → logprob: -8.876435279846191
    6. '\[' → logprob: -9.501435279846191
    7. '[i' → logprob: -9.751435279846191
    8. '.' → logprob: -10.251435279846191
    9. '[...]' → logprob: -10.501435279846191
    10. '+' → logprob: -10.876435279846191

Token 10: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6407840251922607
    2. '[' → logprob: -1.2657840251922607
    3. ' []' → logprob: -2.0157840251922607
    4. '[]' → logprob: -3.2657840251922607
    5. '[int' → logprob: -4.89078426361084
    6. ' list' → logprob: -5.51578426361084
    7. 'list' → logprob: -6.01578426361084
    8. '[input' → logprob: -6.39078426361084
    9. '[list' → logprob: -6.64078426361084
    10. '[n' → logprob: -6.64078426361084

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02715419791638851
    2. '0' → logprob: -3.6521542072296143
    3. 'float' → logprob: -7.777153968811035
    4. ')' → logprob: -9.027153968811035
    5. 'i' → logprob: -9.652153968811035
    6. 'n' → logprob: -9.652153968811035
    7. ']int' → logprob: -10.027153968811035
    8. '(int' → logprob: -10.152153968811035
    9. 'math' → logprob: -10.652153968811035
    10. ']' → logprob: -10.902153968811035

Token 12: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20683550834655762
    2. '(input' → logprob: -1.8318355083465576
    3. '(x' → logprob: -3.8318355083465576
    4. '()]' → logprob: -5.706835746765137
    5. '()' → logprob: -6.581835746765137
    6. '(i' → logprob: -8.831835746765137
    7. ']' → logprob: -10.081835746765137
    8. '(token' → logprob: -10.831835746765137
    9. '(a' → logprob: -10.956835746765137
    10. '(user' → logprob: -11.206835746765137

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45486560463905334
    2. '())' → logprob: -1.454865574836731
    3. 'oken' → logprob: -2.2048656940460205
    4. 'em' → logprob: -4.704865455627441
    5. '()' → logprob: -5.954865455627441
    6. '(x' → logprob: -6.079865455627441
    7. '(input' → logprob: -6.079865455627441
    8. '(i' → logprob: -6.204865455627441
    9. '(' → logprob: -6.954865455627441
    10. 'ok' → logprob: -7.579865455627441

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053949419409036636
    2. 'for' → logprob: -3.0539493560791016
    3. ' for' → logprob: -5.928949356079102
    4. '(' → logprob: -6.803949356079102
    5. '(x' → logprob: -7.428949356079102
    6. '(input' → logprob: -8.428949356079102
    7. ')]' → logprob: -8.428949356079102
    8. ' ' → logprob: -8.928949356079102
    9. 'input' → logprob: -9.303949356079102
    10. '()' → logprob: -9.428949356079102

Token 15: ' t' (ID: 260)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02421383187174797
    2. ' range' → logprob: -4.649213790893555
    3. ' ' → logprob: -4.899213790893555
    4. ' t' → logprob: -5.274213790893555
    5. 'input' → logprob: -6.399213790893555
    6. 'range' → logprob: -10.024213790893555
    7. '(input' → logprob: -10.774213790893555
    8. ' in' → logprob: -11.649213790893555
    9. '	input' → logprob: -12.149213790893555
    10. ' the' → logprob: -12.274213790893555

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01828010566532612
    2. 'in' → logprob: -4.018280029296875
    3. 'n' → logprob: -9.518280029296875
    4. ' ' → logprob: -10.518280029296875
    5. '	in' → logprob: -11.768280029296875
    6. 'i' → logprob: -12.643280029296875
    7. '_' → logprob: -13.018280029296875
    8. ')' → logprob: -13.018280029296875
    9. '  ' → logprob: -13.393280029296875
    10. 'o' → logprob: -13.643280029296875

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18567925691604614
    2. ' input' → logprob: -1.9356791973114014
    3. 'range' → logprob: -3.9356791973114014
    4. ' range' → logprob: -5.1856794357299805
    5. '(input' → logprob: -12.68567943572998
    6. ' ' → logprob: -14.06067943572998
    7. '(range' → logprob: -15.31067943572998
    8. '=input' → logprob: -15.56067943572998
    9. '<input' → logprob: -15.81067943572998
    10. '[input' → logprob: -15.81067943572998

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0422049760818481
    2. '())' → logprob: -1.2922049760818481
    3. '()' → logprob: -1.4172049760818481
    4. '()]' → logprob: -2.0422048568725586
    5. '(' → logprob: -8.167204856872559
    6. '()].' → logprob: -9.167204856872559
    7. '()))' → logprob: -10.917204856872559
    8. ')' → logprob: -10.917204856872559
    9. '()][' → logprob: -11.167204856872559
    10. ')]' → logprob: -11.167204856872559

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016361083544325083
    2. 'strip' → logprob: -8.750164031982422
    3. 'rstrip' → logprob: -12.250164031982422
    4. ' split' → logprob: -14.750164031982422
    5. 'spl' → logprob: -17.750164031982422
    6. '(split' → logprob: -18.250164031982422
    7. 's' → logprob: -19.125164031982422
    8. 'sp' → logprob: -20.625164031982422
    9. 'plit' → logprob: -20.625164031982422
    10. ')' → logprob: -20.875164031982422

Token 20: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5023759603500366
    2. '()]' → logprob: -1.0023759603500366
    3. '()' → logprob: -3.877376079559326
    4. '(' → logprob: -5.252376079559326
    5. ')]' → logprob: -6.502376079559326
    6. '('' → logprob: -8.252375602722168
    7. ']' → logprob: -9.502375602722168
    8. ')' → logprob: -9.627375602722168
    9. '')]' → logprob: -10.752375602722168
    10. '()))' → logprob: -11.877375602722168

Token 21: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20584075152873993
    2. ')]' → logprob: -1.7058407068252563
    3. '])' → logprob: -5.705840587615967
    4. ')' → logprob: -7.080840587615967
    5. '])]' → logprob: -8.830841064453125
    6. '`]' → logprob: -10.455841064453125
    7. ')])' → logprob: -10.580841064453125
    8. ' ]' → logprob: -10.830841064453125
    9. '()]' → logprob: -11.580841064453125
    10. ']
' → logprob: -12.455841064453125

Token 22: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33933719992637634
    2. 'result' → logprob: -2.214337110519409
    3. 'total' → logprob: -2.839337110519409
    4. 'count' → logprob: -3.964337110519409
    5. 'sum' → logprob: -3.964337110519409
    6. 'm' → logprob: -4.214337348937988
    7. 'mean' → logprob: -4.214337348937988
    8. 'max' → logprob: -4.464337348937988
    9. 'dp' → logprob: -5.089337348937988
    10. 'c' → logprob: -5.214337348937988

Token 23: '_g' (ID: 5439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14831741154193878
    2. '.' → logprob: -2.523317337036133
    3. '<|end|>' → logprob: -3.148317337036133
    4. '[a' → logprob: -5.398317337036133
    5. '\[' → logprob: -5.398317337036133
    6. '```' → logprob: -6.523317337036133
    7. '<|end|>' → logprob: -6.773317337036133
    8. '\' → logprob: -7.773317337036133
    9. '[n' → logprob: -7.773317337036133
    10. '[:]' → logprob: -7.898317337036133

Token 24: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.012303019873797894
    2. '.c' → logprob: -5.512302875518799
    3. 'roup' → logprob: -5.637302875518799
    4. 'reater' → logprob: -7.262302875518799
    5. '.sort' → logprob: -7.512302875518799
    6. '.cd' → logprob: -7.762302875518799
    7. '.count' → logprob: -7.762302875518799
    8. '[' → logprob: -7.762302875518799
    9. 'r' → logprob: -7.887302875518799
    10. 'et' → logprob: -7.887302875518799

Token 25: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03170647472143173
    2. '(a' → logprob: -4.2817063331604
    3. '_' → logprob: -4.4067063331604
    4. ' =' → logprob: -5.7817063331604
    5. '=' → logprob: -6.9067063331604
    6. 's' → logprob: -8.281706809997559
    7. '()' → logprob: -8.531706809997559
    8. 'a' → logprob: -8.656706809997559
    9. '_a' → logprob: -9.156706809997559
    10. '[' → logprob: -9.281706809997559

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.137516736984253
    2. ' math' → logprob: -1.137516736984253
    3. 'math' → logprob: -1.387516736984253
    4. ' a' → logprob: -2.262516736984253
    5. '0' → logprob: -6.012516975402832
    6. ' ' → logprob: -6.387516975402832
    7. '1' → logprob: -7.137516975402832
    8. 'import' → logprob: -11.512516975402832
    9. ' n' → logprob: -12.137516975402832
    10. 'n' → logprob: -12.137516975402832

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00667961360886693
    2. '[:]' → logprob: -5.256679534912109
    3. '.' → logprob: -7.006679534912109
    4. '.copy' → logprob: -7.881679534912109
    5. '[:' → logprob: -9.38167953491211
    6. '```' → logprob: -11.13167953491211
    7. '[::-' → logprob: -11.88167953491211
    8. '[a' → logprob: -12.13167953491211
    9. 'import' → logprob: -12.13167953491211
    10. '.[' → logprob: -12.25667953491211

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -13.250004768371582
    3. '1' → logprob: -13.500004768371582
    4. '])' → logprob: -13.875004768371582
    5. '-' → logprob: -14.875004768371582
    6. ']' → logprob: -15.125004768371582
    7. ')' → logprob: -17.0000057220459
    8. ':' → logprob: -18.6250057220459
    9. '۰' → logprob: -18.8125057220459
    10. 'i' → logprob: -18.8125057220459

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0698399469256401
    2. ')]' → logprob: -3.5698399543762207
    3. ' ]' → logprob: -3.8198399543762207
    4. ')' → logprob: -4.194839954376221
    5. '])' → logprob: -6.444839954376221
    6. ' )' → logprob: -8.569839477539062
    7. ' ])' → logprob: -8.694839477539062
    8. ',' → logprob: -9.819839477539062
    9. ' ' → logprob: -9.819839477539062
    10. ')])' → logprob: -9.944839477539062

Token 30: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3257966637611389
    2. ' i' → logprob: -1.3257966041564941
    3. ' _' → logprob: -4.950796604156494
    4. '_' → logprob: -5.575796604156494
    5. ' x' → logprob: -6.950796604156494
    6. 'i' → logprob: -7.825796604156494
    7. ' num' → logprob: -8.825797080993652
    8. ' v' → logprob: -10.700797080993652
    9. ' a' → logprob: -11.200797080993652
    10. '  ' → logprob: -11.575797080993652

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004684899467974901
    2. 'in' → logprob: -5.379684925079346
    3. ' ' → logprob: -9.754684448242188
    4. '	in' → logprob: -12.504684448242188
    5. 'import' → logprob: -14.129684448242188
    6. ' i' → logprob: -14.129684448242188
    7. ' ' → logprob: -15.629684448242188
    8. '  ' → logprob: -15.629684448242188
    9. 's' → logprob: -15.754684448242188
    10. ',' → logprob: -15.754684448242188

Token 33: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04859747737646103
    2. 'a' → logprob: -3.048597574234009
    3. ' ' → logprob: -12.17359733581543
    4. ' range' → logprob: -12.67359733581543
    5. '	a' → logprob: -14.17359733581543
    6. 'range' → logprob: -14.42359733581543
    7. '  ' → logprob: -15.42359733581543
    8. ' ' → logprob: -16.54859733581543
    9. '_a' → logprob: -16.79859733581543
    10. '   ' → logprob: -16.92359733581543

Token 34: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6327493786811829
    2. '[' → logprob: -0.7577493786811829
    3. ':
' → logprob: -10.007749557495117
    4. ' :' → logprob: -10.132749557495117
    5. 'a' → logprob: -10.382749557495117
    6. '1' → logprob: -11.257749557495117
    7. '```' → logprob: -12.007749557495117
    8. 's' → logprob: -13.507749557495117
    9. '>' → logprob: -13.632749557495117
    10. '[a' → logprob: -13.882749557495117

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006215543020516634
    2. ':' → logprob: -5.756215572357178
    3. '):' → logprob: -6.006215572357178
    4. ']):' → logprob: -8.25621509552002
    5. ']:' → logprob: -8.88121509552002
    6. ' ' → logprob: -9.00621509552002
    7. ')' → logprob: -11.00621509552002
    8. ':]' → logprob: -11.50621509552002
    9. ']' → logprob: -12.50621509552002
    10. ' ):' → logprob: -12.75621509552002

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.134780153632164
    2. ']:' → logprob: -2.509780168533325
    3. ':]' → logprob: -3.384780168533325
    4. '):' → logprob: -5.009779930114746
    5. ' :' → logprob: -6.759779930114746
    6. ' ):' → logprob: -6.884779930114746
    7. ':],' → logprob: -6.884779930114746
    8. ' :]' → logprob: -7.634779930114746
    9. ']' → logprob: -8.634779930114746
    10. ' ]' → logprob: -8.634779930114746

Token 37: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0020782900974154472
    2. ']:
' → logprob: -6.502078056335449
    3. ']' → logprob: -7.627078056335449
    4. ' ]' → logprob: -10.12707805633545
    5. ']:
' → logprob: -11.12707805633545
    6. ']):' → logprob: -11.25207805633545
    7. ':' → logprob: -11.75207805633545
    8. '):' → logprob: -12.25207805633545
    9. ']:

' → logprob: -12.50207805633545
    10. '],' → logprob: -13.87707805633545

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07812273502349854
    2. 'a' → logprob: -2.828122615814209
    3. ' a' → logprob: -4.703122615814209
    4. '    
' → logprob: -6.453122615814209
    5. ' gcd' → logprob: -6.953122615814209
    6. '    ' → logprob: -7.078122615814209
    7. '```' → logprob: -7.078122615814209
    8. ' ' → logprob: -7.203122615814209
    9. ' 
' → logprob: -7.453122615814209
    10. 'g' → logprob: -7.703122615814209

Token 39: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3890201151371002
    2. 'a' (adapté à ' a') → logprob: -1.2640200853347778
    3. '   ' → logprob: -3.3890202045440674
    4. '    ' → logprob: -6.264019966125488
    5. 'import' → logprob: -6.389019966125488
    6. '    
' → logprob: -7.139019966125488
    7. ' 
' → logprob: -7.639019966125488
    8. ' ' → logprob: -7.889019966125488
    9. ' import' → logprob: -8.389019966125488
    10. '```' → logprob: -9.389019966125488

Token 40: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0013357169227674603
    2. '_' → logprob: -6.626335620880127
    3. '_a' → logprob: -12.751336097717285
    4. '._' → logprob: -13.251336097717285
    5. ' _' → logprob: -13.251336097717285
    6. '_s' → logprob: -14.751336097717285
    7. '_gr' → logprob: -15.001336097717285
    8. 'g' → logprob: -15.001336097717285
    9. '_math' → logprob: -15.376336097717285
    10. '_
' → logprob: -15.501336097717285

Token 41: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.596781946020201e-05
    2. '_cd' → logprob: -10.125045776367188
    3. 'c' → logprob: -12.250045776367188
    4. 'd' → logprob: -14.500045776367188
    5. '_c' → logprob: -15.125045776367188
    6. 'CD' → logprob: -15.500045776367188
    7. 'cdf' → logprob: -16.250045776367188
    8. 'cdn' → logprob: -17.000045776367188
    9. 'cf' → logprob: -18.500045776367188
    10. 'dc' → logprob: -18.625045776367188

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889155298471451
    2. '=' → logprob: -2.5788915157318115
    3. ' ' → logprob: -13.57889175415039
    4. ' *=' → logprob: -15.45389175415039
    5. '   ' → logprob: -16.20389175415039
    6. ' ^=' → logprob: -17.57889175415039
    7. ' |=' → logprob: -17.57889175415039
    8. '=int' → logprob: -18.07889175415039
    9. ' ' → logprob: -18.20389175415039
    10. ' &=' → logprob: -18.20389175415039

Token 43: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20141451060771942
    2. 'math' → logprob: -1.7014144659042358
    3. '(math' → logprob: -14.451414108276367
    4. 'Math' → logprob: -15.201414108276367
    5. ' ' → logprob: -15.576414108276367
    6. ' Math' → logprob: -16.076414108276367
    7. '.math' → logprob: -16.826414108276367
    8. ' ' → logprob: -17.076414108276367
    9. 'm' → logprob: -17.701414108276367
    10. '_math' → logprob: -17.701414108276367

Token 44: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.01768754981458187
    2. '.' → logprob: -4.1426873207092285
    3. '.sqrt' → logprob: -6.5176873207092285
    4. ' .' → logprob: -9.392687797546387
    5. '.f' → logprob: -10.767687797546387
    6. '.s' → logprob: -11.017687797546387
    7. '.ceil' → logprob: -11.017687797546387
    8. '.floor' → logprob: -12.142687797546387
    9. '.abs' → logprob: -12.642687797546387
    10. '.atan' → logprob: -12.642687797546387

Token 45: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00028731857310049236
    2. 'cdn' → logprob: -8.875287055969238
    3. 'd' → logprob: -9.750287055969238
    4. 'cdf' → logprob: -10.625287055969238
    5. 'CD' → logprob: -11.000287055969238
    6. 'dc' → logprob: -11.500287055969238
    7. 'dist' → logprob: -11.625287055969238
    8. 'c' → logprob: -13.250287055969238
    9. 'def' → logprob: -13.375287055969238
    10. 'cdr' → logprob: -13.375287055969238

Token 46: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008615399710834026
    2. '(' → logprob: -4.758615493774414
    3. '(x' → logprob: -15.133615493774414
    4. 'a' → logprob: -15.383615493774414
    5. '(
' → logprob: -15.383615493774414
    6. ' (' → logprob: -17.008615493774414
    7. '(n' → logprob: -17.633615493774414
    8. '(

' → logprob: -17.883615493774414
    9. '(ai' → logprob: -18.133615493774414
    10. '((' → logprob: -19.008615493774414

Token 47: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0295806135982275
    2. ',' → logprob: -4.029580593109131
    3. '_,' → logprob: -5.779580593109131
    4. '[' → logprob: -6.029580593109131
    5. '[x' → logprob: -6.029580593109131
    6. '_' → logprob: -6.529580593109131
    7. 'g' → logprob: -7.529580593109131
    8. 'x' → logprob: -7.904580593109131
    9. ' ,' → logprob: -8.529581069946289
    10. ')' → logprob: -8.529581069946289

Token 48: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.005054790992289782
    2. 'CD' → logprob: -6.005054950714111
    3. '_cd' → logprob: -6.255054950714111
    4. 'c' → logprob: -7.630054950714111
    5. 'Cd' → logprob: -10.130054473876953
    6. 'd' → logprob: -10.255054473876953
    7. '_c' → logprob: -10.255054473876953
    8. 'a' → logprob: -11.005054473876953
    9. 'cdf' → logprob: -11.755054473876953
    10. 'cdn' → logprob: -12.255054473876953

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00862887967377901
    2. ',x' → logprob: -4.758628845214844
    3. 'x' → logprob: -11.758628845214844
    4. ' ,' → logprob: -12.383628845214844
    5. '(x' → logprob: -14.133628845214844
    6. '`,' → logprob: -14.508628845214844
    7. ',
' → logprob: -15.008628845214844
    8. ')' → logprob: -15.883628845214844
    9. '   ' → logprob: -15.883628845214844
    10. ' x' → logprob: -15.883628845214844

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326204538345337
    2. ' x' → logprob: -1.3132619857788086
    3. ')' → logprob: -15.938261985778809
    4. ')x' → logprob: -15.938261985778809
    5. '	x' → logprob: -17.688262939453125
    6. '(x' → logprob: -17.938262939453125
    7. ' ' → logprob: -18.188262939453125
    8. ' )' → logprob: -18.438262939453125
    9. ',x' → logprob: -20.188262939453125
    10. ' ' → logprob: -20.188262939453125

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.375005722045898
    4. '))' → logprob: -17.7500057220459
    5. ')`' → logprob: -18.2500057220459
    6. '   ' → logprob: -18.7500057220459
    7. ')

' → logprob: -18.7500057220459
    8. '),' → logprob: -19.0000057220459
    9. '`)' → logprob: -19.0000057220459
    10. ')#' → logprob: -19.5000057220459

Token 52: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027644600719213486
    2. 'if' → logprob: -3.777644634246826
    3. 'for' → logprob: -6.152644634246826
    4. 'n' → logprob: -7.527644634246826
    5. 'result' → logprob: -7.652644634246826
    6. 'g' → logprob: -8.777644157409668
    7. '\n' → logprob: -8.777644157409668
    8. '
' → logprob: -9.027644157409668
    9. 'max' → logprob: -9.277644157409668
    10. 'div' → logprob: -9.402644157409668

Token 53: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0299703199416399
    2. 'x' → logprob: -4.154970169067383
    3. ' i' → logprob: -4.654970169067383
    4. ' num' → logprob: -6.154970169067383
    5. '_' → logprob: -7.154970169067383
    6. ' ' → logprob: -8.154970169067383
    7. ' val' → logprob: -8.279970169067383
    8. ' _' → logprob: -8.279970169067383
    9. 'i' → logprob: -8.779970169067383
    10. ' v' → logprob: -9.279970169067383

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04572388529777527
    2. 'in' → logprob: -3.1707239151000977
    3. ' ' → logprob: -6.170723915100098
    4. 'n' → logprob: -7.920723915100098
    5. '  ' → logprob: -9.045723915100098
    6. '_' → logprob: -9.545723915100098
    7. '	in' → logprob: -11.045723915100098
    8. ' n' → logprob: -11.295723915100098
    9. ',' → logprob: -11.295723915100098
    10. '_in' → logprob: -11.795723915100098

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5281684994697571
    2. 'range' → logprob: -0.9031684994697571
    3. 'a' → logprob: -5.778168678283691
    4. ' a' → logprob: -6.278168678283691
    5. ' ' → logprob: -10.278168678283691
    6. '   ' → logprob: -12.153168678283691
    7. '  ' → logprob: -12.153168678283691
    8. 'r' → logprob: -12.528168678283691
    9. '	range' → logprob: -12.528168678283691
    10. '(range' → logprob: -12.903168678283691

Token 56: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011277939192950726
    2. '(a' → logprob: -4.51127815246582
    3. '(n' → logprob: -8.51127815246582
    4. '(len' → logprob: -11.01127815246582
    5. ' (' → logprob: -12.13627815246582
    6. '((' → logprob: -12.63627815246582
    7. ' ' → logprob: -13.26127815246582
    8. '1' → logprob: -15.01127815246582
    9. '(
' → logprob: -15.13627815246582
    10. '(max' → logprob: -15.38627815246582

Token 57: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.000008583068848
    3. 'a' → logprob: -13.250008583068848
    4. '(s' → logprob: -15.875008583068848
    5. '(n' → logprob: -17.12500762939453
    6. ' (' → logprob: -17.75000762939453
    7. '(A' → logprob: -18.12500762939453
    8. '(x' → logprob: -18.37500762939453
    9. ')' → logprob: -18.87500762939453
    10. '```' → logprob: -19.12500762939453

Token 58: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.01571875996887684
    2. '))' → logprob: -4.890718936920166
    3. ')):
' → logprob: -5.640718936920166
    4. ')' → logprob: -6.015718936920166
    5. '):' → logprob: -6.390718936920166
    6. ' ' → logprob: -9.015718460083008
    7. ')):
' → logprob: -9.390718460083008
    8. ' ))' → logprob: -9.640718460083008
    9. 'a' → logprob: -10.140718460083008
    10. '   ' → logprob: -11.015718460083008

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08405932039022446
    2. ' ' → logprob: -2.959059238433838
    3. '    ' → logprob: -4.459059238433838
    4. ' a' → logprob: -4.959059238433838
    5. ':' → logprob: -5.834059238433838
    6. '       ' → logprob: -6.334059238433838
    7. ' if' → logprob: -6.459059238433838
    8. 'a' → logprob: -6.959059238433838
    9. ' :' → logprob: -7.084059238433838
    10. ' =' → logprob: -8.334059715270996

Token 60: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4289591610431671
    2. ' a' → logprob: -1.8039591312408447
    3. 'print' → logprob: -2.0539591312408447
    4. '   ' → logprob: -3.1789591312408447
    5. ' print' → logprob: -4.428959369659424
    6. 'if' → logprob: -6.678959369659424
    7. ' if' → logprob: -7.053959369659424
    8. ' ' → logprob: -8.553958892822266
    9. '    ' → logprob: -10.428958892822266
    10. 'printf' → logprob: -12.053958892822266

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009920800803229213
    2. '[' → logprob: -7.000992298126221
    3. '[a' → logprob: -9.750991821289062
    4. 'a' → logprob: -12.000991821289062
    5. '\[' → logprob: -12.125991821289062
    6. ' [' → logprob: -13.250991821289062
    7. '[:]' → logprob: -14.000991821289062
    8. '[x' → logprob: -14.625991821289062
    9. ')' → logprob: -14.625991821289062
    10. '[index' → logprob: -14.625991821289062

Token 62: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007190096657723188
    2. ' )' → logprob: -6.007190227508545
    3. '//' → logprob: -6.382190227508545
    4. ' //' → logprob: -6.507190227508545
    5. ')//' → logprob: -6.882190227508545
    6. '%' → logprob: -8.257189750671387
    7. ']' → logprob: -9.507189750671387
    8. '//=' → logprob: -9.882189750671387
    9. ' ' → logprob: -10.632189750671387
    10. '```' → logprob: -11.132189750671387

Token 63: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.5770258903503418
    2. ' //' → logprob: -1.0770258903503418
    3. '//' → logprob: -2.952025890350342
    4. '=' → logprob: -3.577025890350342
    5. ' =' → logprob: -4.952025890350342
    6. ' /=' → logprob: -5.077025890350342
    7. ' ' → logprob: -6.327025890350342
    8. 'div' → logprob: -6.952025890350342
    9. '```' → logprob: -8.3270263671875
    10. ' ' → logprob: -8.5770263671875

Token 64: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015097891446202993
    2. '=a' → logprob: -8.875150680541992
    3. 'a' → logprob: -11.625150680541992
    4. '_=' → logprob: -13.875150680541992
    5. ' a' → logprob: -15.000150680541992
    6. '=_' → logprob: -15.375150680541992
    7. '=}' → logprob: -15.750150680541992
    8. ' =' → logprob: -16.000150680541992
    9. '=

' → logprob: -16.625150680541992
    10. '=
' → logprob: -16.750150680541992

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.615255839889869e-05
    2. ' a' → logprob: -9.250096321105957
    3. ' ' → logprob: -21.75009536743164
    4. '	a' → logprob: -21.87509536743164
    5. '_a' → logprob: -22.50009536743164
    6. '   ' → logprob: -23.75009536743164
    7. '(a' → logprob: -23.87509536743164
    8. '```' → logprob: -24.37509536743164
    9. 'а' → logprob: -24.50009536743164
    10. ''a' → logprob: -24.87509536743164

Token 66: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -12.625015258789062
    3. '[_' → logprob: -13.625015258789062
    4. '_i' → logprob: -13.750015258789062
    5. '_tokens' → logprob: -14.125015258789062
    6. '_token' → logprob: -14.250015258789062
    7. '[i' → logprob: -14.250015258789062
    8. '_s' → logprob: -14.250015258789062
    9. '_ga' → logprob: -14.375015258789062
    10. '_gt' → logprob: -14.500015258789062

Token 67: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002627662615850568
    2. 'c' → logprob: -8.375263214111328
    3. 'cdf' → logprob: -11.250263214111328
    4. 'cdn' → logprob: -11.750263214111328
    5. '_cd' → logprob: -12.000263214111328
    6. 'CD' → logprob: -12.625263214111328
    7. 'cdr' → logprob: -14.750263214111328
    8. 'Cd' → logprob: -15.375263214111328
    9. ' cd' → logprob: -15.500263214111328
    10. 'd' → logprob: -15.625263214111328

Token 68: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23881590366363525
    2. '
' → logprob: -2.3638157844543457
    3. '<|end|>' → logprob: -2.8638157844543457
    4. 'for' → logprob: -3.3638157844543457
    5. '\n' → logprob: -4.863815784454346
    6. ' 
' → logprob: -5.238815784454346
    7. ' for' → logprob: -5.988815784454346
    8. 'n' → logprob: -5.988815784454346
    9. ' ' → logprob: -6.363815784454346
    10. '```' → logprob: -6.738815784454346

Token 69: 'a' (ID: 64)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0716598704457283
    2. 'max' → logprob: -3.821659803390503
    3. 'l' → logprob: -4.571660041809082
    4. 'count' → logprob: -4.696660041809082
    5. 'for' → logprob: -5.446660041809082
    6. 'k' → logprob: -5.696660041809082
    7. 'result' → logprob: -5.821660041809082
    8. 'cnt' → logprob: -5.946660041809082
    9. 'g' → logprob: -6.571660041809082
    10. 'div' → logprob: -6.571660041809082

Token 70: '_rev' (ID: 99394)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12593600153923035
    2. '=' → logprob: -2.5009360313415527
    3. '_sorted' → logprob: -4.500936031341553
    4. '[:]' → logprob: -4.750936031341553
    5. 's' → logprob: -4.875936031341553
    6. '[' → logprob: -5.625936031341553
    7. '[::-' → logprob: -6.125936031341553
    8. '.sort' → logprob: -7.375936031341553
    9. 'sorted' → logprob: -7.500936031341553
    10. '_' → logprob: -7.750936031341553

Token 72: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009916044771671295
    2. ' a' → logprob: -4.634915828704834
    3. 'list' → logprob: -8.884916305541992
    4. ' list' → logprob: -10.884916305541992
    5. '[a' → logprob: -13.509916305541992
    6. '	a' → logprob: -14.384916305541992
    7. '   ' → logprob: -15.384916305541992
    8. '[::-' → logprob: -15.384916305541992
    9. '[' → logprob: -15.884916305541992
    10. ' ' → logprob: -16.009916305541992

Token 73: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4803057610988617
    2. '[:]' → logprob: -0.9803057909011841
    3. '.copy' → logprob: -5.3553056716918945
    4. '.' → logprob: -6.9803056716918945
    5. '[:' → logprob: -8.230305671691895
    6. '[' → logprob: -8.355305671691895
    7. '.reverse' → logprob: -9.980305671691895
    8. '.[' → logprob: -12.980305671691895
    9. '[:-' → logprob: -13.855305671691895
    10. '[a' → logprob: -14.355305671691895

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00353627884760499
    2. ')' → logprob: -6.253536224365234
    3. '])' → logprob: -7.253536224365234
    4. ']' → logprob: -7.878536224365234
    5. '-' → logprob: -9.503536224365234
    6. ')]' → logprob: -9.753536224365234
    7. '()' → logprob: -10.003536224365234
    8. '```' → logprob: -10.253536224365234
    9. 'index' → logprob: -10.628536224365234
    10. ' ' → logprob: -10.753536224365234

Token 75: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004598631348926574
    2. ']' → logprob: -7.750459671020508
    3. ' )' → logprob: -11.000459671020508
    4. ')
' → logprob: -12.500459671020508
    5. ')]' → logprob: -13.000459671020508
    6. '）' → logprob: -13.250459671020508
    7. '<|end|>' → logprob: -13.500459671020508
    8. '])' → logprob: -13.625459671020508
    9. '[' → logprob: -14.250459671020508
    10. '')' → logprob: -15.375459671020508

Token 76: 'lg' (ID: 15632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46805399656295776
    2. 'count' → logprob: -2.4680540561676025
    3. 'print' → logprob: -2.5930540561676025
    4. 'result' → logprob: -2.9680540561676025
    5. 'ans' → logprob: -3.5930540561676025
    6. 'cnt' → logprob: -3.9680540561676025
    7. 'if' → logprob: -4.093053817749023
    8. 'valid' → logprob: -4.218053817749023
    9. 'is' → logprob: -4.593053817749023
    10. 'g' → logprob: -4.968053817749023

Token 77: 'cd' (ID: 8301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5466896891593933
    2. '=' → logprob: -2.046689748764038
    3. 'a' → logprob: -2.171689748764038
    4. ' =' → logprob: -2.546689748764038
    5. '=len' → logprob: -2.796689748764038
    6. 'n' → logprob: -4.046689510345459
    7. 'len' → logprob: -5.046689510345459
    8. '_len' → logprob: -5.796689510345459
    9. '[len' → logprob: -5.796689510345459
    10. 'en' → logprob: -6.796689510345459

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21822793781757355
    2. '=' → logprob: -1.7182279825210571
    3. '_' → logprob: -4.343227863311768
    4. 't' → logprob: -6.093227863311768
    5. '_a' → logprob: -7.593227863311768
    6. 'a' → logprob: -8.093228340148926
    7. ' ' → logprob: -9.468228340148926
    8. '_val' → logprob: -9.968228340148926
    9. '   ' → logprob: -9.968228340148926
    10. '[]' → logprob: -10.093228340148926

Token 79: ' [' (ID: 723)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4877070188522339
    2. 'a' → logprob: -1.7377070188522339
    3. ' math' → logprob: -2.2377071380615234
    4. '1' → logprob: -2.8627071380615234
    5. '0' → logprob: -3.2377071380615234
    6. ' a' → logprob: -5.112707138061523
    7. ' ' → logprob: -7.237707138061523
    8. 'len' → logprob: -9.737707138061523
    9. '[a' → logprob: -10.112707138061523
    10. '(math' → logprob: -10.487707138061523

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010242942720651627
    2. 'a' → logprob: -4.635242938995361
    3. '1' → logprob: -8.88524341583252
    4. '[' → logprob: -9.13524341583252
    5. 'math' → logprob: -9.63524341583252
    6. ']' → logprob: -10.01024341583252
    7. 'None' → logprob: -10.38524341583252
    8. '[a' → logprob: -10.63524341583252
    9. ' ' → logprob: -11.01024341583252
    10. '-' → logprob: -11.63524341583252

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01196619588881731
    2. ']*' → logprob: -5.136966228485107
    3. ']*(' → logprob: -5.886966228485107
    4. ',' → logprob: -6.136966228485107
    5. ' ]' → logprob: -7.136966228485107
    6. ' for' → logprob: -8.63696575164795
    7. 'for' → logprob: -10.26196575164795
    8. ')' → logprob: -10.63696575164795
    9. ']+' → logprob: -10.76196575164795
    10. '0' → logprob: -11.76196575164795

Token 82: 'rg' (ID: 15172)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1352064609527588
    2. '0' → logprob: -2.510206460952759
    3. ' for' → logprob: -3.260206460952759
    4. 'current' → logprob: -6.13520622253418
    5. '[' → logprob: -6.76020622253418
    6. 'a' → logprob: -7.76020622253418
    7. 'prev' → logprob: -7.76020622253418
    8. 'count' → logprob: -7.88520622253418
    9. 'lg' → logprob: -8.01020622253418
    10. ',' → logprob: -8.26020622253418

Token 83: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.007908139377832413
    2. '_cd' → logprob: -5.507908344268799
    3. '_c' → logprob: -6.382908344268799
    4. '_g' → logprob: -6.757908344268799
    5. 'c' → logprob: -7.257908344268799
    6. 'g' → logprob: -9.13290786743164
    7. ' =' → logprob: -9.38290786743164
    8. 'cdf' → logprob: -11.00790786743164
    9. '=' → logprob: -11.38290786743164
    10. 'CD' → logprob: -12.00790786743164

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22544725239276886
    2. '=' → logprob: -1.6004472970962524
    3. '[' → logprob: -11.225447654724121
    4. ' =[' → logprob: -11.475447654724121
    5. '=[' → logprob: -12.850447654724121
    6. ']' → logprob: -13.225447654724121
    7. ' ' → logprob: -13.225447654724121
    8. '=[]' → logprob: -13.600447654724121
    9. ',' → logprob: -13.975447654724121
    10. 's' → logprob: -14.600447654724121

Token 85: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026412339881062508
    2. ' [' → logprob: -3.65141224861145
    3. '[a' → logprob: -9.776412010192871
    4. '0' → logprob: -10.651412010192871
    5. '[len' → logprob: -11.526412010192871
    6. 'a' → logprob: -11.776412010192871
    7. '[]' → logprob: -12.651412010192871
    8. ' ' → logprob: -12.901412010192871
    9. '[n' → logprob: -13.026412010192871
    10. '[l' → logprob: -13.776412010192871

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034750174381770194
    2. ' ' → logprob: -8.125347137451172
    3. 'a' → logprob: -10.625347137451172
    4. ']' → logprob: -11.250347137451172
    5. '[' → logprob: -13.125347137451172
    6. '   ' → logprob: -13.187847137451172
    7. '1' → logprob: -13.500347137451172
    8. ')' → logprob: -14.000347137451172
    9. '...' → logprob: -14.250347137451172
    10. ',' → logprob: -14.312847137451172

Token 87: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013405199570115656
    2. '0' → logprob: -9.875134468078613
    3. ' ]' → logprob: -10.250134468078613
    4. ']*(' → logprob: -11.125134468078613
    5. ' for' → logprob: -12.000134468078613
    6. ')' → logprob: -12.125134468078613
    7. '1' → logprob: -12.375134468078613
    8. ']*' → logprob: -12.500134468078613
    9. 'for' → logprob: -12.625134468078613
    10. ',' → logprob: -13.000134468078613

Token 88: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2029152810573578
    2. ' for' → logprob: -1.7029153108596802
    3. '+' → logprob: -7.327915191650391
    4. '[' → logprob: -8.07791519165039
    5. 'n' → logprob: -8.57791519165039
    6. ' 
' → logprob: -9.82791519165039
    7. '0' → logprob: -10.20291519165039
    8. '
' → logprob: -10.32791519165039
    9. '```' → logprob: -10.45291519165039
    10. '<|end|>' → logprob: -10.45291519165039

Token 89: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7424933314323425
    2. ' i' → logprob: -0.8674933314323425
    3. 'x' → logprob: -2.7424933910369873
    4. ' x' → logprob: -3.2424933910369873
    5. ' ' → logprob: -8.367493629455566
    6. ' v' → logprob: -9.742493629455566
    7. 'v' → logprob: -9.742493629455566
    8. 'a' → logprob: -10.367493629455566
    9. '   ' → logprob: -10.742493629455566
    10. 'num' → logprob: -10.867493629455566

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1440005749464035
    2. 'in' → logprob: -2.01900053024292
    3. ' ' → logprob: -7.14400053024292
    4. ',' → logprob: -8.144001007080078
    5. '  ' → logprob: -9.644001007080078
    6. '	in' → logprob: -10.394001007080078
    7. '_' → logprob: -10.519001007080078
    8. 'range' → logprob: -10.769001007080078
    9. 'n' → logprob: -11.019001007080078
    10. '+' → logprob: -11.269001007080078

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5232674479484558
    2. ' range' → logprob: -0.8982674479484558
    3. 'a' → logprob: -9.39826774597168
    4. ' a' → logprob: -10.77326774597168
    5. '(range' → logprob: -11.27326774597168
    6. ' ' → logprob: -11.52326774597168
    7. '	range' → logprob: -11.89826774597168
    8. '   ' → logprob: -12.27326774597168
    9. '  ' → logprob: -12.39826774597168
    10. ' xrange' → logprob: -14.89826774597168

Token 92: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3134755492210388
    2. '(' → logprob: -1.3134756088256836
    3. '(n' → logprob: -8.563475608825684
    4. 'len' → logprob: -11.313475608825684
    5. '1' → logprob: -12.188475608825684
    6. '(l' → logprob: -12.813475608825684
    7. ' (' → logprob: -13.563475608825684
    8. ' len' → logprob: -14.688475608825684
    9. '(a' → logprob: -15.813475608825684
    10. '<len' → logprob: -15.813475608825684

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10625065118074417
    2. '):
' → logprob: -2.356250762939453
    3. '+' → logprob: -5.356250762939453
    4. '-' → logprob: -7.106250762939453
    5. ' ):' → logprob: -8.981250762939453
    6. '1' → logprob: -9.481250762939453
    7. ')' → logprob: -9.731250762939453
    8. '   ' → logprob: -9.731250762939453
    9. '):
' → logprob: -9.856250762939453
    10. ' +' → logprob: -10.231250762939453

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12325172126293182
    2. 'lg' → logprob: -2.4982516765594482
    3. ' lg' → logprob: -3.4982516765594482
    4. '```' → logprob: -7.248251914978027
    5. '	l' → logprob: -7.373251914978027
    6. 'rg' → logprob: -8.123251914978027
    7. '0' → logprob: -8.498251914978027
    8. '1' → logprob: -8.748251914978027
    9. '    
' → logprob: -8.748251914978027
    10. '/lg' → logprob: -8.748251914978027

Token 95: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11147608608007431
    2. 'lg' → logprob: -2.361476182937622
    3. ' lg' → logprob: -4.736475944519043
    4. 'rg' → logprob: -6.486475944519043
    5. ' rg' → logprob: -8.361475944519043
    6. 'import' → logprob: -8.486475944519043
    7. '    ' → logprob: -9.111475944519043
    8. '       ' → logprob: -9.548975944519043
    9. '```' → logprob: -10.048975944519043
    10. '    
' → logprob: -10.298975944519043

Token 96: ' =' (ID: 314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003542813006788492
    2. '   ' → logprob: -5.878542900085449
    3. 'lg' → logprob: -8.37854290008545
    4. 'a' → logprob: -8.75354290008545
    5. '_g' → logprob: -9.00354290008545
    6. 'import' → logprob: -9.75354290008545
    7. 'og' → logprob: -10.25354290008545
    8. ' =' → logprob: -10.37854290008545
    9. 'i' → logprob: -10.75354290008545
    10. '=' → logprob: -11.25354290008545

Token 97: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.15220880508422852
    2. ' math' → logprob: -2.5272088050842285
    3. 'lg' → logprob: -3.4022088050842285
    4. '   ' → logprob: -4.1522088050842285
    5. 'a' → logprob: -5.1522088050842285
    6. 'rg' → logprob: -5.6522088050842285
    7. 'max' → logprob: -7.0272088050842285
    8. ' a' → logprob: -7.1522088050842285
    9. ' lg' → logprob: -7.1522088050842285
    10. ' rg' → logprob: -9.40220832824707

Token 98: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -8.828512363834307e-05
    2. '.' → logprob: -9.875088691711426
    3. 'g' → logprob: -10.250088691711426
    4. '.ceil' → logprob: -14.875088691711426
    5. '.sqrt' → logprob: -15.375088691711426
    6. '.floor' → logprob: -15.500088691711426
    7. '.r' → logprob: -16.12508773803711
    8. ' .' → logprob: -16.25008773803711
    9. ' gcd' → logprob: -16.25008773803711
    10. '#g' → logprob: -16.62508773803711

Token 99: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.001827384578064084
    2. 'g' → logprob: -7.001827239990234
    3. 'c' → logprob: -7.251827239990234
    4. ' gcd' → logprob: -9.751827239990234
    5. 'a' → logprob: -10.251827239990234
    6. 'cdf' → logprob: -10.751827239990234
    7. 'CD' → logprob: -11.376827239990234
    8. '```' → logprob: -11.751827239990234
    9. 'cmath' → logprob: -11.876827239990234
    10. 'cc' → logprob: -12.376827239990234

Token 100: '(a' (ID: 6271)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00011796683247666806
    2. '(' → logprob: -9.125118255615234
    3. '(a' → logprob: -12.625118255615234
    4. 'lg' → logprob: -13.000118255615234
    5. 'a' → logprob: -13.875118255615234
    6. '(r' → logprob: -14.125118255615234
    7. ' (' → logprob: -14.250118255615234
    8. '(
' → logprob: -15.000118255615234
    9. '   ' → logprob: -15.875118255615234
    10. ')(' → logprob: -16.375118255615234

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15952332317829132
    2. '_rev' → logprob: -2.5345232486724854
    3. 'g' → logprob: -3.4095232486724854
    4. '_g' → logprob: -3.7845232486724854
    5. 'lg' → logprob: -4.9095234870910645
    6. '_l' → logprob: -5.9095234870910645
    7. 'rev' → logprob: -6.9095234870910645
    8. '[' → logprob: -8.159523010253906
    9. 'l' → logprob: -8.659523010253906
    10. '_rg' → logprob: -9.034523010253906

Token 102: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00458202650770545
    2. '],' → logprob: -6.379581928253174
    3. ' ,' → logprob: -6.504581928253174
    4. 'lg' → logprob: -7.004581928253174
    5. '   ' → logprob: -8.254582405090332
    6. '),' → logprob: -9.379582405090332
    7. ',l' → logprob: -10.629582405090332
    8. 'g' → logprob: -10.879582405090332
    9. 'a' → logprob: -11.004582405090332
    10. '    ' → logprob: -11.629582405090332

Token 103: ' lg' (ID: 37176)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.004690710920840502
    2. ' lg' → logprob: -5.379690647125244
    3. 'rg' → logprob: -10.504691123962402
    4. '   ' → logprob: -10.879691123962402
    5. 'l' → logprob: -11.879691123962402
    6. 'a' → logprob: -12.504691123962402
    7. ' ' → logprob: -12.879691123962402
    8. '    ' → logprob: -13.004691123962402
    9. '  ' → logprob: -13.254691123962402
    10. ' rg' → logprob: -13.754691123962402

Token 104: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.6335724592208862
    2. 'g' → logprob: -0.7585724592208862
    3. '[g' → logprob: -8.258572578430176
    4. 'lg' → logprob: -8.633572578430176
    5. '[' → logprob: -8.633572578430176
    6. 'c' → logprob: -9.258572578430176
    7. 'gd' → logprob: -9.508572578430176
    8. ' gcd' → logprob: -9.758572578430176
    9. '   ' → logprob: -10.633572578430176
    10. 'cg' → logprob: -11.008572578430176

Token 105: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.662937372922897e-05
    2. '[i' → logprob: -9.250096321105957
    3. '[' → logprob: -15.625096321105957
    4. '   ' → logprob: -16.500097274780273
    5. '-' → logprob: -17.500097274780273
    6. ' [-' → logprob: -17.875097274780273
    7. '
' → logprob: -18.000097274780273
    8. '[
' → logprob: -18.250097274780273
    9. '```' → logprob: -18.250097274780273
    10. ' ' → logprob: -19.250097274780273

Token 106: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02372627705335617
    2. '])
' → logprob: -3.773726224899292
    3. ' ])' → logprob: -8.148726463317871
    4. ' ' → logprob: -10.023726463317871
    5. '   ' → logprob: -10.023726463317871
    6. ')' → logprob: -10.398726463317871
    7. '])
' → logprob: -10.523726463317871
    8. ' ])
' → logprob: -11.023726463317871
    9. ']' → logprob: -11.523726463317871
    10. ')
' → logprob: -11.898726463317871

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002262186724692583
    2. 'lg' → logprob: -6.127262115478516
    3. ' lg' → logprob: -10.127262115478516
    4. '    
' → logprob: -11.252262115478516
    5. '       ' → logprob: -11.752262115478516
    6. '  ' → logprob: -11.752262115478516
    7. '/lg' → logprob: -13.252262115478516
    8. ' ' → logprob: -13.502262115478516
    9. ',' → logprob: -13.752262115478516
    10. ')' → logprob: -14.252262115478516

Token 108: ' r' (ID: 428)
  Prédit: 'lg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lg' → logprob: -0.06286017596721649
    2. '   ' → logprob: -2.8128602504730225
    3. ' lg' → logprob: -7.187860012054443
    4. '  ' → logprob: -9.562860488891602
    5. 'l' → logprob: -10.687860488891602
    6. ' ' → logprob: -11.437860488891602
    7. '/lg' → logprob: -11.687860488891602
    8. '    
' → logprob: -12.562860488891602
    9. 'rg' → logprob: -12.812860488891602
    10. '	l' → logprob: -12.937860488891602

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043006736785173416
    2. '=' → logprob: -3.168006658554077
    3. ' ' → logprob: -12.543006896972656
    4. 'g' → logprob: -12.793006896972656
    5. '   ' → logprob: -14.668006896972656
    6. ' ' → logprob: -15.793006896972656
    7. '  ' → logprob: -16.168006896972656
    8. 's' → logprob: -16.293006896972656
    9. '＝' → logprob: -16.293006896972656
    10. 'ight' → logprob: -16.543006896972656

Token 110: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.10021442919969559
    2. ' math' → logprob: -2.3502144813537598
    3. '(math' → logprob: -12.225214004516602
    4. ' ' → logprob: -14.225214004516602
    5. '   ' → logprob: -14.350214004516602
    6. '.math' → logprob: -15.100214004516602
    7. 'a' → logprob: -15.350214004516602
    8. 'm' → logprob: -15.475214004516602
    9. '/math' → logprob: -15.600214004516602
    10. '0' → logprob: -15.975214004516602

Token 111: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -6.704273118884885e-07
    2. 'g' → logprob: -15.375000953674316
    3. '`.' → logprob: -16.375
    4. ').' → logprob: -16.5
    5. '```' → logprob: -16.75
    6. ' .' → logprob: -17.25
    7. '.' → logprob: -17.25
    8. '].' → logprob: -17.625
    9. '.sqrt' → logprob: -17.75
    10. '_g' → logprob: -17.875

Token 112: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002266622323077172
    2. 'c' → logprob: -8.750226974487305
    3. 'cdf' → logprob: -10.750226974487305
    4. 'd' → logprob: -11.125226974487305
    5. 'cg' → logprob: -12.375226974487305
    6. 'cmath' → logprob: -12.375226974487305
    7. 'CD' → logprob: -12.625226974487305
    8. '.c' → logprob: -13.125226974487305
    9. '.cd' → logprob: -13.500226974487305
    10. 'ed' → logprob: -13.625226974487305

Token 113: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00016086915275081992
    2. '(r' → logprob: -9.375161170959473
    3. 'a' → logprob: -10.000161170959473
    4. '(' → logprob: -10.625161170959473
    5. '(math' → logprob: -12.875161170959473
    6. ' (' → logprob: -14.500161170959473
    7. 'r' → logprob: -14.625161170959473
    8. '(ai' → logprob: -14.625161170959473
    9. 'rg' → logprob: -14.750161170959473
    10. '(reverse' → logprob: -15.625161170959473

Token 114: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.0031551423016935587
    2. '[i' → logprob: -6.00315523147583
    3. '[n' → logprob: -7.75315523147583
    4. 'rev' → logprob: -8.628154754638672
    5. '[a' → logprob: -10.503154754638672
    6. '[-' → logprob: -11.628154754638672
    7. '[' → logprob: -11.878154754638672
    8. '[::-' → logprob: -12.003154754638672
    9. 'Rev' → logprob: -12.253154754638672
    10. '_[' → logprob: -12.878154754638672

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.85366350505501e-05
    2. '[' → logprob: -9.50009822845459
    3. 'i' → logprob: -11.25009822845459
    4. '[r' → logprob: -12.75009822845459
    5. '   ' → logprob: -12.87509822845459
    6. '[j' → logprob: -13.37509822845459
    7. '[n' → logprob: -13.87509822845459
    8. ' [' → logprob: -14.37509822845459
    9. ' ' → logprob: -15.00009822845459
    10. '(i' → logprob: -15.00009822845459

Token 116: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -8.7689099018462e-05
    2. ']' → logprob: -9.87508773803711
    3. ' ],' → logprob: -10.50008773803711
    4. ',' → logprob: -12.62508773803711
    5. ' ' → logprob: -13.37508773803711
    6. '],
' → logprob: -14.00008773803711
    7. '),' → logprob: -14.25008773803711
    8. '   ' → logprob: -14.25008773803711
    9. '0' → logprob: -15.12508773803711
    10. '1' → logprob: -15.37508773803711

Token 117: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.002223529852926731
    2. ' rg' → logprob: -6.127223491668701
    3. '   ' → logprob: -10.25222396850586
    4. ' ' → logprob: -13.87722396850586
    5. '  ' → logprob: -14.00222396850586
    6. '
' → logprob: -14.87722396850586
    7. '    ' → logprob: -15.00222396850586
    8. '0' → logprob: -15.37722396850586
    9. ')' → logprob: -16.00222396850586
    10. 'r' → logprob: -16.25222396850586

Token 118: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.0325924449716695e-05
    2. 'cdf' → logprob: -12.87501049041748
    3. '[i' → logprob: -13.25001049041748
    4. '[' → logprob: -13.37501049041748
    5. 'c' → logprob: -13.50001049041748
    6. 'CD' → logprob: -13.87501049041748
    7. 'cdn' → logprob: -14.75001049041748
    8. '_cd' → logprob: -14.75001049041748
    9. '   ' → logprob: -15.12501049041748
    10. ' gcd' → logprob: -15.37501049041748

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00033760786755010486
    2. '[-' → logprob: -8.000337600708008
    3. '[' → logprob: -13.375337600708008
    4. 'i' → logprob: -15.250337600708008
    5. '   ' → logprob: -16.500337600708008
    6. '[j' → logprob: -16.625337600708008
    7. ' ' → logprob: -16.875337600708008
    8. '[len' → logprob: -17.375337600708008
    9. '[I' → logprob: -17.625337600708008
    10. '[r' → logprob: -17.625337600708008

Token 120: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020623989403247833
    2. ')' → logprob: -4.020624160766602
    3. '])
' → logprob: -6.270624160766602
    4. ')
' → logprob: -8.645624160766602
    5. ')]' → logprob: -9.270624160766602
    6. ')])' → logprob: -9.270624160766602
    7. '))' → logprob: -9.520624160766602
    8. '])

' → logprob: -10.020624160766602
    9. '   ' → logprob: -10.520624160766602
    10. ' ])' → logprob: -11.270624160766602

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007755214814096689
    2. 'lg' → logprob: -4.882755279541016
    3. ' lg' → logprob: -9.507755279541016
    4. '    
' → logprob: -10.132755279541016
    5. '/lg' → logprob: -11.257755279541016
    6. '
' → logprob: -11.632755279541016
    7. '  ' → logprob: -12.882755279541016
    8. ' ' → logprob: -13.132755279541016
    9. '```' → logprob: -13.382755279541016
    10. '	l' → logprob: -13.382755279541016

Token 122: ' lg' (ID: 37176)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08953943848609924
    2. 'lg' (adapté à ' lg') → logprob: -2.4645395278930664
    3. ' lg' → logprob: -7.964539527893066
    4. '    
' → logprob: -9.089539527893066
    5. '
' → logprob: -9.839539527893066
    6. 'l' → logprob: -10.339539527893066
    7. '/lg' → logprob: -10.714539527893066
    8. '	l' → logprob: -11.464539527893066
    9. '```' → logprob: -11.964539527893066
    10. '   ' → logprob: -12.589539527893066

Token 123: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0016319748247042298
    2. '.append' → logprob: -6.626631736755371
    3. 'g' → logprob: -8.876631736755371
    4. '   ' → logprob: -9.876631736755371
    5. 'c' → logprob: -10.376631736755371
    6. '_cd' → logprob: -10.751631736755371
    7. ' gcd' → logprob: -11.501631736755371
    8. 'cdf' → logprob: -11.501631736755371
    9. 'append' → logprob: -11.751631736755371
    10. '[' → logprob: -11.876631736755371

Token 124: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015153385465964675
    2. '.' → logprob: -6.5015153884887695
    3. ' .' → logprob: -11.62651538848877
    4. '.app' → logprob: -13.12651538848877
    5. '.extend' → logprob: -13.62651538848877
    6. '.ap' → logprob: -14.75151538848877
    7. '.push' → logprob: -16.126514434814453
    8. '.Append' → logprob: -16.751514434814453
    9. 'append' → logprob: -16.876514434814453
    10. ' append' → logprob: -16.876514434814453

Token 125: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00010115911572938785
    2. '(' → logprob: -9.250101089477539
    3. 'l' → logprob: -12.250101089477539
    4. ' l' → logprob: -17.00010108947754
    5. '(
' → logprob: -17.62510108947754
    6. '	l' → logprob: -17.75010108947754
    7. ' (' → logprob: -18.00010108947754
    8. '(r' → logprob: -18.25010108947754
    9. '(i' → logprob: -18.75010108947754
    10. '(math' → logprob: -19.50010108947754

Token 126: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008644474670290947
    2. ')' → logprob: -4.7586445808410645
    3. ')
' → logprob: -10.758644104003906
    4. '   ' → logprob: -12.258644104003906
    5. ' )
' → logprob: -13.258644104003906
    6. 'r' → logprob: -13.258644104003906
    7. ')

' → logprob: -14.758644104003906
    8. ',r' → logprob: -17.258644104003906
    9. ',' → logprob: -18.133644104003906
    10. ')`
' → logprob: -18.258644104003906

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16049626469612122
    2. 'rg' → logprob: -1.9104962348937988
    3. ' rg' → logprob: -9.410496711730957
    4. 'r' → logprob: -9.535496711730957
    5. '    
' → logprob: -10.035496711730957
    6. ' ' → logprob: -10.160496711730957
    7. '	r' → logprob: -11.660496711730957
    8. '  ' → logprob: -11.910496711730957
    9. '       ' → logprob: -12.660496711730957
    10. '    ' → logprob: -12.660496711730957

Token 128: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' (adapté à ' rg') → logprob: -0.0011889220913872123
    2. 'r' → logprob: -6.7511887550354
    3. '   ' → logprob: -11.126189231872559
    4. ' rg' → logprob: -12.501189231872559
    5. '  ' → logprob: -16.126188278198242
    6. '	r' → logprob: -16.251188278198242
    7. ' ' → logprob: -16.376188278198242
    8. ' r' → logprob: -18.251188278198242
    9. 'rgb' → logprob: -18.376188278198242
    10. '       ' → logprob: -18.751188278198242

Token 129: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.5928495486150496e-05
    2. 'cdf' → logprob: -11.875016212463379
    3. '.append' → logprob: -12.875016212463379
    4. 'c' → logprob: -13.125016212463379
    5. 'g' → logprob: -13.250016212463379
    6. 'cdn' → logprob: -14.375016212463379
    7. 'append' → logprob: -14.500016212463379
    8. '[' → logprob: -14.625016212463379
    9. '_cd' → logprob: -15.875016212463379
    10. 'cg' → logprob: -16.125015258789062

Token 130: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011060554534196854
    2. '.' → logprob: -4.51106071472168
    3. '.extend' → logprob: -12.26106071472168
    4. ' .' → logprob: -12.63606071472168
    5. 'append' → logprob: -13.01106071472168
    6. '.Append' → logprob: -14.13606071472168
    7. '.app' → logprob: -14.88606071472168
    8. ').' → logprob: -15.13606071472168
    9. '.setdefault' → logprob: -15.51106071472168
    10. ' ' → logprob: -15.76106071472168

Token 131: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.000116655595775228
    2. '(math' → logprob: -9.500116348266602
    3. '(' → logprob: -10.750116348266602
    4. 'r' → logprob: -10.875116348266602
    5. 'math' → logprob: -14.750116348266602
    6. ' (' → logprob: -15.875116348266602
    7. 'rg' → logprob: -16.1251163482666
    8. '((' → logprob: -16.1251163482666
    9. ')' → logprob: -16.3751163482666
    10. '(max' → logprob: -16.3751163482666

Token 132: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.125006675720215
    3. ')

' → logprob: -14.000006675720215
    4. ']' → logprob: -17.1250057220459
    5. '))' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.3750057220459
    7. ' )' → logprob: -17.3750057220459
    8. ')`' → logprob: -17.3750057220459
    9. '[' → logprob: -18.7500057220459
    10. '#' → logprob: -18.8750057220459

Token 133: 'rg' (ID: 15172)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8909470438957214
    2. 'for' → logprob: -1.0159471035003662
    3. 'best' → logprob: -2.390947103500366
    4. 'ans' → logprob: -3.015947103500366
    5. 'res' → logprob: -3.515947103500366
    6. 'result' → logprob: -3.890947103500366
    7. 'answer' → logprob: -4.265946865081787
    8. 'mx' → logprob: -4.515946865081787
    9. 'm' → logprob: -5.640946865081787
    10. 'possible' → logprob: -6.265946865081787

Token 134: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.06914100795984268
    2. '[::-' → logprob: -3.819140911102295
    3. '[' → logprob: -4.569140911102295
    4. '.append' → logprob: -5.069140911102295
    5. 'c' → logprob: -5.194140911102295
    6. '_' → logprob: -5.319140911102295
    7. '_c' → logprob: -5.444140911102295
    8. '.reverse' → logprob: -5.819140911102295
    9. 'd' → logprob: -6.194140911102295
    10. '_cd' → logprob: -6.569140911102295

Token 135: ' =' (ID: 314)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.9276003837585449
    2. '[::-' → logprob: -0.9276003837585449
    3. '[' → logprob: -1.802600383758545
    4. '.append' → logprob: -4.427600383758545
    5. '.' → logprob: -4.552600383758545
    6. '.reverse' → logprob: -5.052600383758545
    7. '.pop' → logprob: -5.302600383758545
    8. '[len' → logprob: -6.052600383758545
    9. ')' → logprob: -6.302600383758545
    10. '[:-' → logprob: -6.427600383758545

Token 136: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -5.264322317088954e-05
    2. ' rg' → logprob: -9.875052452087402
    3. 'list' → logprob: -13.875052452087402
    4. '[' → logprob: -16.87505340576172
    5. 'rig' → logprob: -17.50005340576172
    6. 'r' → logprob: -17.62505340576172
    7. ' list' → logprob: -17.87505340576172
    8. 'rag' → logprob: -18.12505340576172
    9. 'lg' → logprob: -18.25005340576172
    10. 'rp' → logprob: -18.62505340576172

Token 137: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.01216005440801382
    2. 'c' → logprob: -4.637159824371338
    3. '[::-' → logprob: -7.262159824371338
    4. 'rc' → logprob: -7.637159824371338
    5. 'cg' → logprob: -7.762159824371338
    6. '[' → logprob: -7.762159824371338
    7. 'rg' → logprob: -9.137160301208496
    8. 'g' → logprob: -9.887160301208496
    9. 'd' → logprob: -10.012160301208496
    10. 'cs' → logprob: -10.637160301208496

Token 138: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.006808568723499775
    2. '[' → logprob: -5.006808757781982
    3. '[:-' → logprob: -10.131808280944824
    4. '[:' → logprob: -10.381808280944824
    5. '[-' → logprob: -11.506808280944824
    6. '[len' → logprob: -11.881808280944824
    7. '[n' → logprob: -12.256808280944824
    8. '[:]' → logprob: -14.756808280944824
    9. ' [' → logprob: -16.75680923461914
    10. '[i' → logprob: -17.50680923461914

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009561245678924024
    2. '-' → logprob: -7.000956058502197
    3. '```' → logprob: -11.750956535339355
    4. ']' → logprob: -11.875956535339355
    5. ')' → logprob: -11.875956535339355
    6. ' ' → logprob: -12.500956535339355
    7. '])' → logprob: -12.750956535339355
    8. '(' → logprob: -12.875956535339355
    9. '`' → logprob: -13.125956535339355
    10. '+' → logprob: -13.500956535339355

Token 140: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015284325927495956
    2. ']' → logprob: -6.501528263092041
    3. '[' → logprob: -11.2515287399292
    4. '])' → logprob: -12.1265287399292
    5. ')
' → logprob: -13.3765287399292
    6. '#' → logprob: -13.6265287399292
    7. ' )' → logprob: -13.8765287399292
    8. '）' → logprob: -14.3765287399292
    9. ')]' → logprob: -14.3765287399292
    10. ')

' → logprob: -14.5015287399292

Token 141: 'g' (ID: 70)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9795622229576111
    2. 'max' → logprob: -1.2295622825622559
    3. 'for' → logprob: -1.6045622825622559
    4. 'res' → logprob: -2.854562282562256
    5. 'best' → logprob: -3.229562282562256
    6. 'mx' → logprob: -4.354562282562256
    7. 'answer' → logprob: -4.479562282562256
    8. 'result' → logprob: -5.104562282562256
    9. 'possible' → logprob: -7.354562282562256
    10. 'count' → logprob: -7.854562282562256

Token 142: ' =' (ID: 314)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0553169772028923
    2. '=' → logprob: -4.555316925048828
    3. '[i' → logprob: -4.555316925048828
    4. ' =' → logprob: -4.555316925048828
    5. '[' → logprob: -4.805316925048828
    6. 'for' → logprob: -5.305316925048828
    7. '[]' → logprob: -5.930316925048828
    8. '_' → logprob: -6.180316925048828
    9. '.' → logprob: -6.680316925048828
    10. '=[]' → logprob: -7.055316925048828

Token 143: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10992653667926788
    2. '1' → logprob: -2.484926462173462
    3. 'max' → logprob: -4.734926700592041
    4. 'math' → logprob: -5.484926700592041
    5. 'lg' → logprob: -5.859926700592041
    6. ' ' → logprob: -5.984926700592041
    7. '[' → logprob: -6.984926700592041
    8. ' max' → logprob: -7.609926700592041
    9. 'a' → logprob: -7.984926700592041
    10. ' math' → logprob: -8.859926223754883

Token 144: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1756367712223437e-05
    2. ' for' → logprob: -11.625011444091797
    3. 'n' → logprob: -12.875011444091797
    4. '[' → logprob: -16.500011444091797
    5. '0' → logprob: -17.500011444091797
    6. 'max' → logprob: -18.250011444091797
    7. '<|end|>' → logprob: -18.375011444091797
    8. 'i' → logprob: -18.625011444091797
    9. '```' → logprob: -18.875011444091797
    10. '	for' → logprob: -19.125011444091797

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003178544342517853
    2. ' i' → logprob: -5.753178596496582
    3. '_i' → logprob: -14.628178596496582
    4. 'range' → logprob: -15.503178596496582
    5. ' range' → logprob: -16.503177642822266
    6. '	i' → logprob: -16.753177642822266
    7. '_' → logprob: -17.378177642822266
    8. 'x' → logprob: -17.628177642822266
    9. ' in' → logprob: -18.253177642822266
    10. ' ' → logprob: -18.753177642822266

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038394082337617874
    2. 'in' → logprob: -3.288393974304199
    3. ' ' → logprob: -8.0383939743042
    4. 'range' → logprob: -11.0383939743042
    5. '(range' → logprob: -12.4133939743042
    6. '(' → logprob: -12.5383939743042
    7. ' range' → logprob: -13.1633939743042
    8. '  ' → logprob: -13.6633939743042
    9. ',' → logprob: -14.1633939743042
    10. '	in' → logprob: -14.6633939743042

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.501502990722656
    4. '(range' → logprob: -18.501502990722656
    5. '   ' → logprob: -19.501502990722656
    6. '  ' → logprob: -19.501502990722656
    7. '	range' → logprob: -20.251502990722656
    8. 'r' → logprob: -20.376502990722656
    9. ' ' → logprob: -22.126502990722656
    10. 'ran' → logprob: -22.126502990722656

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029928438365459442
    2. '(' → logprob: -3.52992844581604
    3. '(len' → logprob: -8.654928207397461
    4. 'n' → logprob: -12.779928207397461
    5. '1' → logprob: -15.404928207397461
    6. '(range' → logprob: -15.779928207397461
    7. '(l' → logprob: -15.904928207397461
    8. '((' → logprob: -17.02992820739746
    9. ' (' → logprob: -17.02992820739746
    10. '(length' → logprob: -17.15492820739746

Token 149: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033659763634204865
    2. '):' → logprob: -3.5336596965789795
    3. ' +' → logprob: -6.283659934997559
    4. '):
' → logprob: -6.533659934997559
    5. '-' → logprob: -7.533659934997559
    6. '1' → logprob: -11.033659934997559
    7. ')' → logprob: -11.658659934997559
    8. ' -' → logprob: -12.033659934997559
    9. '+n' → logprob: -12.408659934997559
    10. '   ' → logprob: -12.658659934997559

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009870808571577072
    2. 'g' → logprob: -7.5009870529174805
    3. ' g' → logprob: -7.7509870529174805
    4. '```' → logprob: -13.50098705291748
    5. '	g' → logprob: -14.12598705291748
    6. '       ' → logprob: -15.25098705291748
    7. '    
' → logprob: -15.50098705291748
    8. ' s' → logprob: -15.50098705291748
    9. '   ' → logprob: -15.75098705291748
    10. ' ' → logprob: -15.87598705291748

Token 151: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.05586230382323265
    2. '   ' → logprob: -3.0558621883392334
    3. ' g' → logprob: -4.9308624267578125
    4. '	g' → logprob: -11.305862426757812
    5. ' ' → logprob: -11.930862426757812
    6. '
' → logprob: -12.805862426757812
    7. '  ' → logprob: -12.805862426757812
    8. '       ' → logprob: -13.930862426757812
    9. '_g' → logprob: -13.930862426757812
    10. '    
' → logprob: -14.305862426757812

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008607364259660244
    2. '.' → logprob: -4.883607387542725
    3. ' =' → logprob: -7.633607387542725
    4. '=' → logprob: -8.383606910705566
    5. '_' → logprob: -8.883606910705566
    6. ' .' → logprob: -9.133606910705566
    7. 'append' → logprob: -10.883606910705566
    8. ' ' → logprob: -12.383606910705566
    9. ' append' → logprob: -12.758606910705566
    10. '_append' → logprob: -12.883606910705566

Token 153: '(math' (ID: 86464)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5972683429718018
    2. '(math' → logprob: -0.8472683429718018
    3. '(max' → logprob: -4.097268104553223
    4. '(' → logprob: -5.472268104553223
    5. '((' → logprob: -8.847268104553223
    6. '(m' → logprob: -10.347268104553223
    7. 'lg' → logprob: -11.222268104553223
    8. '(int' → logprob: -11.472268104553223
    9. '(str' → logprob: -11.472268104553223
    10. '(r' → logprob: -11.597268104553223

Token 154: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.250001907348633
    3. ').' → logprob: -16.500001907348633
    4. 'g' → logprob: -16.750001907348633
    5. '.sqrt' → logprob: -17.625001907348633
    6. ' gcd' → logprob: -17.750001907348633
    7. '.f' → logprob: -18.375001907348633
    8. '#g' → logprob: -18.750001907348633
    9. ')' → logprob: -18.875001907348633
    10. ' .' → logprob: -18.875001907348633

Token 155: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0004898841143585742
    2. 'g' → logprob: -8.375490188598633
    3. 'c' → logprob: -8.500490188598633
    4. 'd' → logprob: -10.500490188598633
    5. 'dc' → logprob: -11.875490188598633
    6. 'CD' → logprob: -12.625490188598633
    7. '```' → logprob: -12.625490188598633
    8. 'cf' → logprob: -12.750490188598633
    9. 'cdf' → logprob: -12.875490188598633
    10. ' gcd' → logprob: -13.750490188598633

Token 156: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.6895233531831764e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.62502670288086
    4. ')' → logprob: -14.50002670288086
    5. '(g' → logprob: -14.75002670288086
    6. '((' → logprob: -15.37502670288086
    7. '(r' → logprob: -16.50002670288086
    8. '(s' → logprob: -17.00002670288086
    9. 'lg' → logprob: -17.00002670288086
    10. '(i' → logprob: -17.62502670288086

Token 157: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.0339031834737398e-05
    2. '[g' → logprob: -12.125020027160645
    3. '(g' → logprob: -12.875020027160645
    4. 'gc' → logprob: -13.125020027160645
    5. 'gd' → logprob: -13.125020027160645
    6. 'lg' → logprob: -13.375020027160645
    7. '[i' → logprob: -13.875020027160645
    8. 'gg' → logprob: -14.125020027160645
    9. '   ' → logprob: -14.375020027160645
    10. '[' → logprob: -14.500020027160645

Token 158: 'cd' (ID: 8301)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.031996533274650574
    2. 'cd' → logprob: -3.531996488571167
    3. '[i' → logprob: -6.531996726989746
    4. ' gcd' → logprob: -7.906996726989746
    5. 'c' → logprob: -9.031996726989746
    6. '[g' → logprob: -9.531996726989746
    7. '[' → logprob: -9.906996726989746
    8. 'gd' → logprob: -10.406996726989746
    9. '```' → logprob: -10.656996726989746
    10. '[-' → logprob: -10.906996726989746

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.875004768371582
    3. 'i' → logprob: -13.250004768371582
    4. ' [' → logprob: -16.0000057220459
    5. ' ' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.1250057220459
    7. '[
' → logprob: -16.3750057220459
    8. '[n' → logprob: -16.6250057220459
    9. '(i' → logprob: -16.6250057220459
    10. ')[' → logprob: -16.6250057220459

Token 160: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006743674166500568
    2. '+' → logprob: -5.756743907928467
    3. '],' → logprob: -6.256743907928467
    4. ' ,' → logprob: -6.881743907928467
    5. '[i' → logprob: -8.006743431091309
    6. ',i' → logprob: -8.881743431091309
    7. '   ' → logprob: -10.006743431091309
    8. ' +' → logprob: -11.006743431091309
    9. ',g' → logprob: -11.506743431091309
    10. ',

' → logprob: -11.506743431091309

Token 161: ' rg' (ID: 34570)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.008627460338175297
    2. ' rg' → logprob: -4.758627414703369
    3. '   ' → logprob: -11.883627891540527
    4. 'rig' → logprob: -13.133627891540527
    5. ' ' → logprob: -13.758627891540527
    6. '_rg' → logprob: -14.508627891540527
    7. 'lg' → logprob: -14.633627891540527
    8. 'r' → logprob: -15.008627891540527
    9. '  ' → logprob: -15.633627891540527
    10. 'rag' → logprob: -15.633627891540527

Token 162: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0007378002628684044
    2. '[i' → logprob: -7.25073766708374
    3. 'g' → logprob: -11.000738143920898
    4. 'i' → logprob: -13.250738143920898
    5. '[n' → logprob: -13.250738143920898
    6. ']' → logprob: -13.375738143920898
    7. '][' → logprob: -14.125738143920898
    8. '+' → logprob: -14.250738143920898
    9. '(i' → logprob: -14.250738143920898
    10. '[' → logprob: -14.375738143920898

Token 163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06203131750226021
    2. 'i' → logprob: -2.8120312690734863
    3. '[' → logprob: -9.937031745910645
    4. '{i' → logprob: -11.937031745910645
    5. ' i' → logprob: -13.062031745910645
    6. '[n' → logprob: -13.187031745910645
    7. '`' → logprob: -13.937031745910645
    8. '```' → logprob: -14.312031745910645
    9. '(i' → logprob: -14.437031745910645
    10. 'n' → logprob: -14.562031745910645

Token 164: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004374638374429196
    2. ' +' → logprob: -7.750437259674072
    3. '])' → logprob: -12.50043773651123
    4. '1' → logprob: -13.50043773651123
    5. '+i' → logprob: -14.50043773651123
    6. ' ' → logprob: -14.87543773651123
    7. '   ' → logprob: -15.37543773651123
    8. ']))' → logprob: -15.62543773651123
    9. '+
' → logprob: -16.000436782836914
    10. 'i' → logprob: -16.125436782836914

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -15.125000953674316
    4. '])' → logprob: -15.250000953674316
    5. '0' → logprob: -15.875000953674316
    6. '+' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. 'i' → logprob: -17.375001907348633
    9. '2' → logprob: -18.375001907348633
    10. '``' → logprob: -18.500001907348633

Token 166: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009906954132020473
    2. ')' → logprob: -4.634906768798828
    3. '))
' → logprob: -8.884906768798828
    4. ')))' → logprob: -12.009906768798828
    5. ')
' → logprob: -12.509906768798828
    6. '])' → logprob: -13.634906768798828
    7. ' ))' → logprob: -14.509906768798828
    8. '),' → logprob: -15.384906768798828
    9. ' ' → logprob: -15.884906768798828
    10. ']))' → logprob: -16.259906768798828

Token 167: 'print' (ID: 1598)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20503921806812286
    2. 'print' → logprob: -1.9550392627716064
    3. 'mx' → logprob: -4.330039024353027
    4. 'ans' → logprob: -4.455039024353027
    5. 'best' → logprob: -4.830039024353027
    6. 'for' → logprob: -5.455039024353027
    7. 'answer' → logprob: -6.455039024353027
    8. 'm' → logprob: -6.830039024353027
    9. 'res' → logprob: -6.955039024353027
    10. 'idx' → logprob: -7.705039024353027

Token 168: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.757036566734314
    2. '(max' → logprob: -0.757036566734314
    3. '(g' → logprob: -2.8820366859436035
    4. '(min' → logprob: -6.3820366859436035
    5. '(*' → logprob: -6.5070366859436035
    6. '(len' → logprob: -6.7570366859436035
    7. '(sum' → logprob: -7.1320366859436035
    8. '('' → logprob: -7.5070366859436035
    9. '()' → logprob: -9.507036209106445
    10. '(
' → logprob: -10.632036209106445

Token 169: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 'g' → logprob: -18.0
    4. ')' → logprob: -18.125
    5. ')(' → logprob: -20.0
    6. ' (' → logprob: -20.625
    7. '[g' → logprob: -21.25
    8. ',g' → logprob: -21.625
    9. '(s' → logprob: -21.75
    10. '/g' → logprob: -22.375

Token 170: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0031905474606901407
    2. ')' → logprob: -5.753190517425537
    3. '))
' → logprob: -12.128190994262695
    4. ')))' → logprob: -12.128190994262695
    5. ' ))' → logprob: -13.753190994262695
    6. ')
' → logprob: -14.878190994262695
    7. '()))' → logprob: -15.253190994262695
    8. '),' → logprob: -16.253190994262695
    9. ' )' → logprob: -16.503190994262695
    10. '])' → logprob: -16.628190994262695

Token 171: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010950337309623137
    2. '))' → logprob: -9.250109672546387
    3. ' )' → logprob: -11.500109672546387
    4. ')
' → logprob: -13.625109672546387
    5. ')`' → logprob: -14.375109672546387
    6. '`)' → logprob: -14.500109672546387
    7. ')))' → logprob: -15.000109672546387
    8. '+' → logprob: -16.12510871887207
    9. ')}' → logprob: -16.25010871887207
    10. ')#' → logprob: -16.50010871887207

Token 172: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022534668445587
    2. ' a' → logprob: -1.9102253913879395
    3. ' ' → logprob: -13.910224914550781
    4. '(a' → logprob: -15.410224914550781
    5. '	a' → logprob: -17.78522491455078
    6. ' 
' → logprob: -17.91022491455078
    7. '*a' → logprob: -18.03522491455078
    8. ')' → logprob: -18.16022491455078
    9. ' (' → logprob: -18.41022491455078
    10. '_a' → logprob: -18.41022491455078

Token 173: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.6240566083070007e-06
    2. 'g' → logprob: -13.375001907348633
    3. '[' → logprob: -17.625001907348633
    4. '_a' → logprob: -19.375001907348633
    5. '_' → logprob: -19.500001907348633
    6. 'a' → logprob: -20.375001907348633
    7. '[g' → logprob: -20.375001907348633
    8. '_gc' → logprob: -20.625001907348633
    9. '_n' → logprob: -21.375001907348633
    10. '_c' → logprob: -21.500001907348633

Token 174: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00019698418327607214
    2. '_cd' → logprob: -8.875197410583496
    3. 'CD' → logprob: -10.250197410583496
    4. 'c' → logprob: -11.875197410583496
    5. '_c' → logprob: -12.250197410583496
    6. 'd' → logprob: -13.000197410583496
    7. 'cdf' → logprob: -13.500197410583496
    8. 'cdn' → logprob: -13.750197410583496
    9. 'Cd' → logprob: -13.750197410583496
    10. '_' → logprob: -14.125197410583496

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.125006675720215
    3. '))' → logprob: -14.875006675720215
    4. ')
' → logprob: -15.000006675720215
    5. ')`' → logprob: -16.0000057220459
    6. '`)' → logprob: -16.8750057220459
    7. '```' → logprob: -17.7500057220459
    8. '')' → logprob: -18.6250057220459
    9. '）' → logprob: -18.8750057220459
    10. ')#' → logprob: -19.0000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 173
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 51.45%
Précision adaptée (1ère position): 53.18%
Précision (top 10): 83.24%
================================================================================
