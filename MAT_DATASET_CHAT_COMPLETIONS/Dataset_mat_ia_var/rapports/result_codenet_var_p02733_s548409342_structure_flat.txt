================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np
sys.setrecursionlimit(10 ** 7)
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

h, w, k = map(int, readline().split())
lines = []
for _ in range(h):
    line = readline().rstrip().decode()
    x = list(map(int, line))
    lines.append(x)
s = np.array(lines, np.int64)
ans = h + w
i = 0
while i < (1 << (h - 1)):
    wp = np.zeros((h, w), np.int64)
    wq = np.zeros((h,), np.int64)
    for idx in range(w):
        wp[0][idx] = s[0][idx]
    cnt = 0
    j = 0
    while j < h - 1:
        if ((i >> j) & 1) == 1:
            cnt += 1
        for idx in range(w):
            wp[cnt][idx] += s[j + 1][idx]
        j += 1
    flag = 0
    idx2 = 0
    while idx2 < h and flag == 0:
        idx3 = 0
        while idx3 < w:
            if wp[idx2][idx3] > k:
                flag = 1
                break
            idx3 += 1
        idx2 += 1
    if cnt >= ans or flag:
        i += 1
        continue
    j = 0
    while j < w:
        q = 0
        while q < h:
            wq[q] += wp[q][j]
            q += 1
        bad = 0
        q = 0
        while q < h:
            if wq[q] > k:
                bad = 1
                break
            q += 1
        if bad:
            cnt += 1
            for ix in range(h):
                wq[ix] = wp[ix][j]
        j += 1
    if ans > cnt:
        ans = cnt
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6429765224456787
    2. '.' → logprob: -0.8929765224456787
    3. 'import' → logprob: -3.8929765224456787
    4. 'newline' → logprob: -4.267976760864258
    5. '\' → logprob: -4.767976760864258
    6. '<|end|>' → logprob: -5.017976760864258
    7. '```' → logprob: -5.392976760864258
    8. '
' → logprob: -5.767976760864258
    9. '<|end|>' → logprob: -6.517976760864258
    10. '' → logprob: -6.517976760864258

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.625627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.125627517700195
    9. ' ' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.125627517700195

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.010319286957383156
    2. '<|end|>' → logprob: -5.010319232940674
    3. 'as' → logprob: -5.885319232940674
    4. '.' → logprob: -7.385319232940674
    5. '<|end|>' → logprob: -9.635319709777832
    6. ' ' → logprob: -10.260319709777832
    7. '.as' → logprob: -10.510319709777832
    8. ' .' → logprob: -10.635319709777832
    9. '.ndarray' → logprob: -11.010319709777832
    10. '.pyplot' → logprob: -11.760319709777832

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0017933472990989685
    2. ' ' → logprob: -6.626793384552002
    3. 'np' → logprob: -7.751793384552002
    4. ' ' → logprob: -10.251792907714844
    5. ' numpy' → logprob: -14.376792907714844
    6. ' as' → logprob: -15.126792907714844
    7. ' n' → logprob: -16.001792907714844
    8. ' ndarray' → logprob: -16.126792907714844
    9. '_np' → logprob: -16.251792907714844
    10. ' npe' → logprob: -16.376792907714844

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5226370692253113
    2. '\n' → logprob: -1.647637128829956
    3. '<|end|>' → logprob: -2.147637128829956
    4. '
' → logprob: -3.522637128829956
    5. '```' → logprob: -3.647637128829956
    6. '\' → logprob: -3.647637128829956
    7. '<|end|>' → logprob: -5.772636890411377
    8. '[' → logprob: -5.897636890411377
    9. '#' → logprob: -6.022636890411377
    10. 'newline' → logprob: -6.272636890411377

Token 8: 'sys' (ID: 17324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8225038647651672
    2. '```' → logprob: -1.1975038051605225
    3. '
' → logprob: -2.5725038051605225
    4. '<|end|>' → logprob: -2.5725038051605225
    5. '\' → logprob: -3.3225038051605225
    6. '\n' → logprob: -3.4475038051605225
    7. '.' → logprob: -4.197504043579102
    8. '#' → logprob: -4.197504043579102
    9. ',' → logprob: -6.322504043579102
    10. '<|end|>' → logprob: -6.447504043579102

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4498052223643754e-05
    2. ' .' → logprob: -12.125014305114746
    3. '.​' → logprob: -13.250014305114746
    4. '."""' → logprob: -13.500014305114746
    5. '[' → logprob: -13.625014305114746
    6. '.]' → logprob: -14.250014305114746
    7. '.`' → logprob: -14.500014305114746
    8. '.[' → logprob: -14.875014305114746
    9. '.)' → logprob: -15.125014305114746
    10. '.
' → logprob: -15.375014305114746

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8775793313980103
    2. '_version' → logprob: -1.7525793313980103
    3. '_trace' → logprob: -2.2525792121887207
    4. ' _' → logprob: -3.6275792121887207
    5. '_set' → logprob: -3.6275792121887207
    6. '_limit' → logprob: -3.8775792121887207
    7. 'attr' → logprob: -4.002579212188721
    8. '_int' → logprob: -4.127579212188721
    9. 'trace' → logprob: -4.377579212188721
    10. '_sys' → logprob: -4.377579212188721

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0013373857364058495
    2. '_limit' → logprob: -7.37633752822876
    3. 'limit' → logprob: -7.75133752822876
    4. 'ursive' → logprob: -10.126337051391602
    5. 'ision' → logprob: -11.001337051391602
    6. '_' → logprob: -11.001337051391602
    7. 'urs' → logprob: -11.251337051391602
    8. 'alc' → logprob: -11.251337051391602
    9. '_val' → logprob: -11.376337051391602
    10. 'ursor' → logprob: -11.376337051391602

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07895555347204208
    2. '_limit' → logprob: -2.57895565032959
    3. 'lim' → logprob: -10.07895565032959
    4. ' limit' → logprob: -11.20395565032959
    5. '_depth' → logprob: -12.70395565032959
    6. '_lim' → logprob: -13.07895565032959
    7. '_LIMIT' → logprob: -13.70395565032959
    8. 'depth' → logprob: -13.82895565032959
    9. '-limit' → logprob: -13.82895565032959
    10. '(limit' → logprob: -14.57895565032959

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.054500666621607e-06
    2. '(
' → logprob: -13.75000286102295
    3. '(

' → logprob: -14.12500286102295
    4. ' (' → logprob: -14.25000286102295
    5. '((' → logprob: -15.37500286102295
    6. '("("' → logprob: -15.75000286102295
    7. '()' → logprob: -17.125003814697266
    8. '('' → logprob: -17.625003814697266
    9. '(.' → logprob: -18.250003814697266
    10. '(**' → logprob: -18.250003814697266

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.048598840832710266
    2. '100' → logprob: -3.0485987663269043
    3. ' ' → logprob: -12.298599243164062
    4. '500' → logprob: -12.798599243164062
    5. '300' → logprob: -13.048599243164062
    6. '200' → logprob: -14.548599243164062
    7. '150' → logprob: -14.673599243164062
    8. '1' → logprob: -15.173599243164062
    9. '250' → logprob: -15.173599243164062
    10. '999' → logprob: -15.423599243164062

Token 15: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36754468083381653
    2. '000' → logprob: -1.6175446510314941
    3. '00' → logprob: -2.492544651031494
    4. '6' → logprob: -3.867544651031494
    5. '5' → logprob: -6.117544651031494
    6. '4' → logprob: -6.367544651031494
    7. '**' → logprob: -6.867544651031494
    8. '7' → logprob: -7.617544651031494
    9. '```' → logprob: -10.117545127868652
    10. ')' → logprob: -10.242545127868652

Token 16: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00958277378231287
    2. '9' → logprob: -5.384582996368408
    3. '6' → logprob: -5.884582996368408
    4. '8' → logprob: -6.134582996368408
    5. ' ' → logprob: -13.50958251953125
    6. '```' → logprob: -16.00958251953125
    7. ')' → logprob: -17.75958251953125
    8. '10' → logprob: -18.00958251953125
    9. '**' → logprob: -19.38458251953125
    10. '+' → logprob: -19.50958251953125

Token 17: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014599917456507683
    2. '9' → logprob: -4.764599800109863
    3. '6' → logprob: -5.139599800109863
    4. '8' → logprob: -9.139599800109863
    5. '**' → logprob: -16.51460075378418
    6. '```' → logprob: -17.51460075378418
    7. ' ' → logprob: -18.01460075378418
    8. '

' → logprob: -19.01460075378418
    9. '5' → logprob: -19.26460075378418
    10. '  ' → logprob: -19.26460075378418

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ')
' → logprob: -11.750011444091797
    3. ' )' → logprob: -12.875011444091797
    4. '))' → logprob: -14.375011444091797
    5. ')
' → logprob: -15.250011444091797
    6. ')

' → logprob: -16.000011444091797
    7. ')`' → logprob: -16.000011444091797
    8. '```' → logprob: -16.500011444091797
    9. '*' → logprob: -17.250011444091797
    10. '）' → logprob: -17.750011444091797

Token 19: 'read' (ID: 1293)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2843064069747925
    2. '
' → logprob: -1.5343064069747925
    3. '\n' → logprob: -4.034306526184082
    4. '
' → logprob: -5.534306526184082
    5. '```' → logprob: -5.534306526184082
    6. 'def' → logprob: -6.159306526184082
    7. '\' → logprob: -6.284306526184082
    8. '


' → logprob: -6.784306526184082
    9. '

' → logprob: -7.659306526184082
    10. '' → logprob: -9.159306526184082

Token 20: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10608943551778793
    2. '_line' → logprob: -2.4810893535614014
    3. '()' → logprob: -4.6060895919799805
    4. 'ln' → logprob: -5.9810895919799805
    5. 'lines' → logprob: -6.4810895919799805
    6. 'l' → logprob: -7.1060895919799805
    7. '(' → logprob: -7.4810895919799805
    8. '_' → logprob: -7.8560895919799805
    9. ' =' → logprob: -8.73108959197998
    10. '_data' → logprob: -8.85608959197998

Token 21: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1525871306657791
    2. 'sys' → logprob: -2.5275871753692627
    3. ' input' → logprob: -3.4025871753692627
    4. ' sys' → logprob: -4.027586936950684
    5. 'lambda' → logprob: -4.652586936950684
    6. ' lambda' → logprob: -7.277586936950684
    7. 'int' → logprob: -9.277586936950684
    8. ' ' → logprob: -9.777586936950684
    9. '=sys' → logprob: -10.402586936950684
    10. 'inp' → logprob: -10.777586936950684

Token 22: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16526879370212555
    2. '.stdin' → logprob: -1.9152687788009644
    3. '.readline' → logprob: -5.790268898010254
    4. '.stdout' → logprob: -6.665268898010254
    5. ' .' → logprob: -7.915268898010254
    6. '.argv' → logprob: -9.290268898010254
    7. '.read' → logprob: -9.415268898010254
    8. '.std' → logprob: -10.290268898010254
    9. '.import' → logprob: -10.665268898010254
    10. '.exit' → logprob: -10.915268898010254

Token 23: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02442651055753231
    2. '.read' → logprob: -3.7744264602661133
    3. 'buffer' → logprob: -7.899426460266113
    4. 'read' → logprob: -7.899426460266113
    5. '.buffer' → logprob: -8.024426460266113
    6. '.' → logprob: -9.274426460266113
    7. '.readlines' → logprob: -11.524426460266113
    8. '.Read' → logprob: -13.524426460266113
    9. '_read' → logprob: -13.649426460266113
    10. '=' → logprob: -14.149426460266113

Token 24: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.023529862985014915
    2. '.read' → logprob: -3.7735297679901123
    3. 'read' → logprob: -9.023530006408691
    4. '.' → logprob: -9.398530006408691
    5. '_read' → logprob: -9.898530006408691
    6. ' readline' → logprob: -11.023530006408691
    7. '.readlines' → logprob: -12.023530006408691
    8. '```' → logprob: -12.648530006408691
    9. '.raw' → logprob: -13.523530006408691
    10. '_raw' → logprob: -14.148530006408691

Token 25: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7159088850021362
    2. 'line' → logprob: -1.3409088850021362
    3. '().' → logprob: -1.4659088850021362
    4. '()
' → logprob: -4.965909004211426
    5. '_line' → logprob: -5.215909004211426
    6. '(' → logprob: -6.090909004211426
    7. '()\' → logprob: -6.215909004211426
    8. '
' → logprob: -6.840909004211426
    9. 'ln' → logprob: -8.340909004211426
    10. '```' → logprob: -8.590909004211426

Token 26: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04348357394337654
    2. '()\' → logprob: -4.043483734130859
    3. '().' → logprob: -4.918483734130859
    4. '(' → logprob: -5.293483734130859
    5. '()
' → logprob: -5.418483734130859
    6. 'def' → logprob: -5.668483734130859
    7. '()

' → logprob: -6.168483734130859
    8. 'data' → logprob: -7.418483734130859
    9. '_' → logprob: -8.04348373413086
    10. '=' → logprob: -8.41848373413086

Token 27: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001009707571938634
    2. '().' → logprob: -7.376009941101074
    3. '(' → logprob: -8.001009941101074
    4. '()
' → logprob: -11.126009941101074
    5. '()

' → logprob: -11.626009941101074
    6. ' ()' → logprob: -11.876009941101074
    7. '()\' → logprob: -12.001009941101074
    8. '()`' → logprob: -13.001009941101074
    9. '()]' → logprob: -13.126009941101074
    10. '```' → logprob: -13.876009941101074

Token 28: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030687542632222176
    2. '(' → logprob: -3.5306875705718994
    3. '=' → logprob: -7.28068733215332
    4. ' =' → logprob: -9.28068733215332
    5. ')' → logprob: -9.78068733215332
    6. ' ()' → logprob: -10.28068733215332
    7. '(
' → logprob: -11.65568733215332
    8. '```' → logprob: -12.15568733215332
    9. '())' → logprob: -12.28068733215332
    10. '()

' → logprob: -12.40568733215332

Token 29: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01815626211464405
    2. ' sys' → logprob: -4.018156051635742
    3. '	sys' → logprob: -12.518156051635742
    4. '=sys' → logprob: -13.268156051635742
    5. '(sys' → logprob: -14.143156051635742
    6. 'lambda' → logprob: -16.018156051635742
    7. '/sys' → logprob: -17.268156051635742
    8. '0' → logprob: -17.768156051635742
    9. ' ' → logprob: -17.768156051635742
    10. 'read' → logprob: -17.893156051635742

Token 30: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1679789423942566
    2. '.stdin' → logprob: -1.9179790019989014
    3. '.' → logprob: -4.917978763580322
    4. '.stdout' → logprob: -8.04297924041748
    5. '.buffer' → logprob: -10.04297924041748
    6. ' .' → logprob: -11.29297924041748
    7. 'stdin' → logprob: -12.29297924041748
    8. '.​' → logprob: -12.41797924041748
    9. '.write' → logprob: -12.54297924041748
    10. '.readlines' → logprob: -12.79297924041748

Token 31: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.6933097243309021
    2. '.readline' → logprob: -0.6933097243309021
    3. '.' → logprob: -9.318309783935547
    4. 'buffer' → logprob: -9.943309783935547
    5. '.read' → logprob: -11.693309783935547
    6. '.stdin' → logprob: -11.943309783935547
    7. ' .' → logprob: -13.568309783935547
    8. '.Buffer' → logprob: -13.568309783935547
    9. '	buffer' → logprob: -13.693309783935547
    10. '.line' → logprob: -13.693309783935547

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.056976258754730225
    2. 'read' → logprob: -3.056976318359375
    3. ' readline' → logprob: -4.806976318359375
    4. 'line' → logprob: -9.056976318359375
    5. 'getline' → logprob: -9.931976318359375
    6. '1' → logprob: -11.681976318359375
    7. '_read' → logprob: -12.806976318359375
    8. '.read' → logprob: -13.181976318359375
    9. '```' → logprob: -14.306976318359375
    10. 'newline' → logprob: -14.931976318359375

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2791728079319
    2. '

' → logprob: -1.9041727781295776
    3. 'def' → logprob: -2.904172897338867
    4. '\n' → logprob: -4.529172897338867
    5. 'n' → logprob: -4.904172897338867
    6. '
' → logprob: -5.029172897338867
    7. 'data' → logprob: -5.279172897338867
    8. '


' → logprob: -5.654172897338867
    9. '```' → logprob: -6.279172897338867
    10. '\' → logprob: -7.279172897338867

Token 34: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03187887743115425
    2. 'n' → logprob: -3.90687894821167
    3. 'a' → logprob: -5.65687894821167
    4. 'N' → logprob: -6.15687894821167
    5. 'data' → logprob: -7.15687894821167
    6. 'd' → logprob: -7.28187894821167
    7. 's' → logprob: -7.28187894821167
    8. 'A' → logprob: -7.28187894821167
    9. '\' → logprob: -7.28187894821167
    10. '\n' → logprob: -7.53187894821167

Token 35: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02201150916516781
    2. '(' → logprob: -3.8970115184783936
    3. '().' → logprob: -6.6470112800598145
    4. '.' → logprob: -9.522011756896973
    5. ' ()' → logprob: -10.022011756896973
    6. 'split' → logprob: -11.522011756896973
    7. '()
' → logprob: -12.397011756896973
    8. ')' → logprob: -12.522011756896973
    9. '.split' → logprob: -12.522011756896973
    10. '()

' → logprob: -12.772011756896973

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4091072082519531
    2. ' =' → logprob: -1.5341072082519531
    3. '()' → logprob: -2.409107208251953
    4. ')' → logprob: -4.409107208251953
    5. '(' → logprob: -4.784107208251953
    6. '<|end|>' → logprob: -5.909107208251953
    7. ' ' → logprob: -6.284107208251953
    8. '```' → logprob: -6.909107208251953
    9. '.' → logprob: -7.159107208251953
    10. 'newline' → logprob: -7.409107208251953

Token 37: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3132827877998352
    2. 'sys' → logprob: -1.3132827281951904
    3. '(sys' → logprob: -11.43828296661377
    4. '=sys' → logprob: -12.18828296661377
    5. '	sys' → logprob: -12.93828296661377
    6. 's' → logprob: -13.81328296661377
    7. '.sys' → logprob: -14.68828296661377
    8. '/sys' → logprob: -14.68828296661377
    9. 'read' → logprob: -14.93828296661377
    10. '_sys' → logprob: -16.438282012939453

Token 38: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02327890694141388
    2. '.' → logprob: -4.023278713226318
    3. '.stdout' → logprob: -5.398278713226318
    4. 'stdin' → logprob: -8.773279190063477
    5. '.std' → logprob: -8.898279190063477
    6. '.stderr' → logprob: -9.273279190063477
    7. '.readline' → logprob: -9.523279190063477
    8. '.buffer' → logprob: -10.273279190063477
    9. ' .' → logprob: -10.523279190063477
    10. '.argv' → logprob: -11.648279190063477

Token 39: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.05434759333729744
    2. '.readline' → logprob: -3.304347515106201
    3. '.' → logprob: -4.304347515106201
    4. '.readlines' → logprob: -6.304347515106201
    5. '.stdin' → logprob: -7.679347515106201
    6. 'buffer' → logprob: -8.67934799194336
    7. ' .' → logprob: -10.55434799194336
    8. '.b' → logprob: -10.80434799194336
    9. '.buff' → logprob: -10.80434799194336
    10. '.buf' → logprob: -11.05434799194336

Token 40: '.readlines' (ID: 92237)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0006095095886848867
    2. '.readline' → logprob: -8.250609397888184
    3. '.read' → logprob: -8.500609397888184
    4. '.readlines' → logprob: -8.875609397888184
    5. '_read' → logprob: -13.000609397888184
    6. ' readline' → logprob: -14.125609397888184
    7. 're' → logprob: -14.625609397888184
    8. 'rea' → logprob: -14.750609397888184
    9. '```' → logprob: -14.875609397888184
    10. 'raw' → logprob: -15.375609397888184

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5192415118217468
    2. 'def' → logprob: -1.2692415714263916
    3. '\n' → logprob: -3.0192415714263916
    4. '

' → logprob: -3.6442415714263916
    5. '\' → logprob: -3.8942415714263916
    6. '' → logprob: -4.3942413330078125
    7. '
' → logprob: -5.8942413330078125
    8. '#' → logprob: -6.0192413330078125
    9. '```' → logprob: -6.0192413330078125
    10. '(' → logprob: -6.3942413330078125

Token 42: 'h' (ID: 71)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1482824683189392
    2. 'n' → logprob: -3.273282527923584
    3. 'class' → logprob: -3.398282527923584
    4. 'd' → logprob: -3.398282527923584
    5. '\' → logprob: -4.773282527923584
    6. 'N' → logprob: -4.898282527923584
    7. '
' → logprob: -5.148282527923584
    8. '\n' → logprob: -5.523282527923584
    9. 'a' → logprob: -6.523282527923584
    10. '' → logprob: -6.648282527923584

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12094806879758835
    2. ' =' → logprob: -2.745948076248169
    3. '=' → logprob: -3.370948076248169
    4. ' ' → logprob: -4.24594783782959
    5. ' ,' → logprob: -7.12094783782959
    6. ')' → logprob: -9.87094783782959
    7. 'i' → logprob: -10.12094783782959
    8. '  ' → logprob: -10.37094783782959
    9. '.' → logprob: -10.99594783782959
    10. '=int' → logprob: -11.12094783782959

Token 44: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10020969063043594
    2. ' w' → logprob: -2.3502097129821777
    3. 't' → logprob: -14.22520923614502
    4. 'a' → logprob: -14.72520923614502
    5. 's' → logprob: -14.72520923614502
    6. ',w' → logprob: -14.85020923614502
    7. 'W' → logprob: -15.47520923614502
    8. ' ' → logprob: -15.72520923614502
    9. ' t' → logprob: -15.97520923614502
    10. 'm' → logprob: -16.225210189819336

Token 45: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49522826075553894
    2. ' =' → logprob: -0.9952282905578613
    3. ',' → logprob: -3.8702282905578613
    4. ' ,' → logprob: -9.745227813720703
    5. ')' → logprob: -13.120227813720703
    6. '=input' → logprob: -13.245227813720703
    7. '=

' → logprob: -13.370227813720703
    8. ')=' → logprob: -13.620227813720703
    9. ' ' → logprob: -13.745227813720703
    10. '=int' → logprob: -13.870227813720703

Token 46: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4235168993473053
    2. 'd' → logprob: -1.798516869544983
    3. 'n' → logprob: -2.4235169887542725
    4. 'c' → logprob: -3.5485169887542725
    5. 'q' → logprob: -4.173516750335693
    6. 'm' → logprob: -4.298516750335693
    7. 'a' → logprob: -4.423516750335693
    8. ' k' → logprob: -4.673516750335693
    9. 't' → logprob: -5.798516750335693
    10. 'x' → logprob: -6.173516750335693

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520606517791748
    2. '=' → logprob: -1.5020606517791748
    3. ',' → logprob: -9.002060890197754
    4. ' ' → logprob: -12.377060890197754
    5. ' ,' → logprob: -12.877060890197754
    6. '=input' → logprob: -14.377060890197754
    7. '=int' → logprob: -15.502060890197754
    8. ' =
' → logprob: -15.627060890197754
    9. '=sys' → logprob: -16.627059936523438
    10. ' =",' → logprob: -16.627059936523438

Token 48: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.57660311460495
    2. ' map' → logprob: -0.82660311460495
    3. ' read' → logprob: -8.951602935791016
    4. ' ' → logprob: -9.076602935791016
    5. 'list' → logprob: -9.201602935791016
    6. '[' → logprob: -9.201602935791016
    7. 'read' → logprob: -9.326602935791016
    8. ' [' → logprob: -9.951602935791016
    9. ' list' → logprob: -9.951602935791016
    10. '	map' → logprob: -11.701602935791016

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22525979578495026
    2. '(' → logprob: -1.725259780883789
    3. '(read' → logprob: -4.100259780883789
    4. '(lambda' → logprob: -5.350259780883789
    5. '(str' → logprob: -6.225259780883789
    6. 'read' → logprob: -9.475259780883789
    7. '()' → logprob: -9.850259780883789
    8. '(input' → logprob: -10.350259780883789
    9. '(sys' → logprob: -10.600259780883789
    10. ' (' → logprob: -11.475259780883789

Token 50: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.050332002341747284
    2. 'read' → logprob: -3.6753320693969727
    3. '(' → logprob: -4.175332069396973
    4. ')' → logprob: -5.050332069396973
    5. ' readline' → logprob: -6.925332069396973
    6. ',' → logprob: -7.550332069396973
    7. ' read' → logprob: -8.175332069396973
    8. '.readline' → logprob: -9.925332069396973
    9. '	read' → logprob: -10.050332069396973
    10. ' (' → logprob: -10.550332069396973

Token 51: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.05432219058275223
    2. ' read' → logprob: -3.1793222427368164
    3. ' readline' → logprob: -5.179322242736816
    4. ')' → logprob: -5.554322242736816
    5. 'input' → logprob: -6.929322242736816
    6. ' input' → logprob: -7.429322242736816
    7. '(read' → logprob: -9.179322242736816
    8. ' )' → logprob: -10.679322242736816
    9. '	read' → logprob: -11.179322242736816
    10. ' ' → logprob: -11.304322242736816

Token 52: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.939210057258606
    2. '().' → logprob: -1.189210057258606
    3. '())' → logprob: -1.189210057258606
    4. '()[' → logprob: -10.314209938049316
    5. '(' → logprob: -11.064209938049316
    6. '()]' → logprob: -11.189209938049316
    7. '()
' → logprob: -11.564209938049316
    8. ' ()' → logprob: -12.064209938049316
    9. '()<' → logprob: -12.064209938049316
    10. '())
' → logprob: -12.189209938049316

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.28989601135253906
    2. 'strip' → logprob: -1.789896011352539
    3. 'rstrip' → logprob: -2.539896011352539
    4. 'decode' → logprob: -5.164896011352539
    5. ')' → logprob: -9.789896011352539
    6. '().' → logprob: -11.789896011352539
    7. ' split' → logprob: -11.789896011352539
    8. '(split' → logprob: -12.539896011352539
    9. '())' → logprob: -12.664896011352539
    10. 's' → logprob: -12.664896011352539

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05182596668601036
    2. '())' → logprob: -3.051826000213623
    3. '()' → logprob: -5.801826000213623
    4. '(' → logprob: -8.801825523376465
    5. '))' → logprob: -10.926825523376465
    6. ')
' → logprob: -11.551825523376465
    7. '())
' → logprob: -11.926825523376465
    8. '),' → logprob: -12.676825523376465
    9. '`)' → logprob: -12.676825523376465
    10. ')`' → logprob: -12.676825523376465

Token 55: 'lines' (ID: 10105)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.25954967737197876
    2. 'a' → logprob: -2.009549617767334
    3. 'data' → logprob: -3.884549617767334
    4. 'field' → logprob: -4.009549617767334
    5. 'matrix' → logprob: -4.259549617767334
    6. 'graph' → logprob: -4.509549617767334
    7. ' grid' → logprob: -5.384549617767334
    8. 'board' → logprob: -5.509549617767334
    9. 'colors' → logprob: -5.884549617767334
    10. 'A' → logprob: -6.009549617767334

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31354445219039917
    2. '=' → logprob: -1.313544511795044
    3. '=[]' → logprob: -8.938544273376465
    4. '[]' → logprob: -9.313544273376465
    5. ' =
' → logprob: -11.313544273376465
    6. '[' → logprob: -11.313544273376465
    7. '(' → logprob: -11.688544273376465
    8. '=[]
' → logprob: -12.063544273376465
    9. '[:]' → logprob: -12.063544273376465
    10. ')' → logprob: -12.438544273376465

Token 57: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18505273759365082
    2. 'read' → logprob: -2.1850526332855225
    3. '[list' → logprob: -3.8100526332855225
    4. ' [' → logprob: -4.310052871704102
    5. '[]' → logprob: -4.935052871704102
    6. '[line' → logprob: -5.810052871704102
    7. '[np' → logprob: -6.060052871704102
    8. ' read' → logprob: -6.310052871704102
    9. '[str' → logprob: -6.810052871704102
    10. 'lines' → logprob: -6.935052871704102

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004436587623786181
    2. ' for' → logprob: -7.875443458557129
    3. '[' → logprob: -9.875443458557129
    4. '\n' → logprob: -12.875443458557129
    5. '```' → logprob: -12.875443458557129
    6. '_' → logprob: -13.500443458557129
    7. '	for' → logprob: -13.625443458557129
    8. 'while' → logprob: -13.750443458557129
    9. '\' → logprob: -13.750443458557129
    10. '[]' → logprob: -14.250443458557129

Token 59: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.013671874068677425
    2. '_' → logprob: -4.513671875
    3. ' i' → logprob: -6.263671875
    4. ' ' → logprob: -7.263671875
    5. ' ' → logprob: -12.013671875
    6. ' ‌' → logprob: -12.388671875
    7. '_i' → logprob: -13.013671875
    8. ' ​' → logprob: -13.638671875
    9. ' ▁' → logprob: -13.763671875
    10. 'i' → logprob: -14.513671875

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05643334984779358
    2. 'in' → logprob: -2.9314334392547607
    3. ' ' → logprob: -6.556433200836182
    4. 'range' → logprob: -9.93143367767334
    5. 'i' → logprob: -11.30643367767334
    6. 'n' → logprob: -11.43143367767334
    7. ' _' → logprob: -11.55643367767334
    8. '_' → logprob: -11.68143367767334
    9. '<|end|>' → logprob: -11.68143367767334
    10. 'line' → logprob: -12.68143367767334

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005436192732304335
    2. ' range' → logprob: -8.250543594360352
    3. 'lines' → logprob: -8.750543594360352
    4. '(range' → logprob: -9.875543594360352
    5. 'read' → logprob: -10.750543594360352
    6. 'r' → logprob: -12.000543594360352
    7. 'in' → logprob: -12.500543594360352
    8. 'h' → logprob: -12.500543594360352
    9. 'ranges' → logprob: -12.500543594360352
    10. 'ange' → logprob: -12.625543594360352

Token 62: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0011930868495255709
    2. '(' → logprob: -6.751193046569824
    3. '(k' → logprob: -10.876193046569824
    4. '(w' → logprob: -12.751193046569824
    5. '(n' → logprob: -15.251193046569824
    6. '(int' → logprob: -15.251193046569824
    7. ' (' → logprob: -16.12619400024414
    8. 'h' → logprob: -16.12619400024414
    9. '(
' → logprob: -16.25119400024414
    10. '(H' → logprob: -16.62619400024414

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.130170539021492
    2. '):
' → logprob: -2.1301705837249756
    3. ')' → logprob: -5.7551703453063965
    4. ' ):' → logprob: -10.630170822143555
    5. '):
' → logprob: -10.630170822143555
    6. ':' → logprob: -11.255170822143555
    7. ' ):
' → logprob: -12.505170822143555
    8. ' ' → logprob: -13.505170822143555
    9. '):

' → logprob: -13.755170822143555
    10. ')：' → logprob: -14.755170822143555

Token 64: '   ' (ID: 271)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4351699948310852
    2. '   ' → logprob: -1.0601699352264404
    3. '	lines' → logprob: -5.9351701736450195
    4. 'lines' → logprob: -6.0601701736450195
    5. '(lines' → logprob: -7.3101701736450195
    6. ' readline' → logprob: -8.68517017364502
    7. '    
' → logprob: -8.93517017364502
    8. '    ' → logprob: -8.93517017364502
    9. ' ' → logprob: -9.81017017364502
    10. '   ' → logprob: -9.93517017364502

Token 65: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.10582350939512253
    2. ' lines' → logprob: -2.605823516845703
    3. 'line' (adapté à ' line') → logprob: -4.105823516845703
    4. '   ' → logprob: -5.605823516845703
    5. 's' → logprob: -5.730823516845703
    6. 'l' → logprob: -6.355823516845703
    7. ' line' → logprob: -7.355823516845703
    8. ' s' → logprob: -8.730823516845703
    9. 'a' → logprob: -8.730823516845703
    10. '	lines' → logprob: -9.230823516845703

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043032534420490265
    2. '=' → logprob: -3.168032646179199
    3. 's' → logprob: -11.0430326461792
    4. ' ' → logprob: -12.1680326461792
    5. '.append' → logprob: -12.9180326461792
    6. ')' → logprob: -13.1680326461792
    7. '_' → logprob: -13.4180326461792
    8. ' +=' → logprob: -13.7930326461792
    9. '.' → logprob: -13.9180326461792
    10. '=line' → logprob: -13.9180326461792

Token 67: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.24428677558898926
    2. 'read' → logprob: -1.6192867755889893
    3. 'list' → logprob: -4.11928653717041
    4. ' list' → logprob: -7.24428653717041
    5. ' read' → logprob: -7.24428653717041
    6. '.readline' → logprob: -7.74428653717041
    7. 'input' → logprob: -8.11928653717041
    8. ' input' → logprob: -8.86928653717041
    9. ' bytes' → logprob: -10.49428653717041
    10. 'bytes' → logprob: -10.74428653717041

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008638797327876091
    2. '()' → logprob: -4.758638858795166
    3. '.rstrip' → logprob: -10.883638381958008
    4. 'rstrip' → logprob: -12.758638381958008
    5. '.strip' → logprob: -13.633638381958008
    6. ' ().' → logprob: -14.758638381958008
    7. '(' → logprob: -15.258638381958008
    8. '.decode' → logprob: -15.508638381958008
    9. '[:-' → logprob: -15.758638381958008
    10. '()
' → logprob: -16.258638381958008

Token 69: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.564674973487854
    2. 'decode' → logprob: -1.314674973487854
    3. 'strip' → logprob: -1.814674973487854
    4. 'split' → logprob: -13.689675331115723
    5. ' decode' → logprob: -14.189675331115723
    6. '.rstrip' → logprob: -14.689675331115723
    7. '```' → logprob: -15.939675331115723
    8. ' strip' → logprob: -16.189674377441406
    9. 'replace' → logprob: -16.814674377441406
    10. '.decode' → logprob: -17.564674377441406

Token 70: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12620797753334045
    2. '(b' → logprob: -2.7512080669403076
    3. 'b' → logprob: -3.6262080669403076
    4. '(' → logprob: -3.6262080669403076
    5. '().' → logprob: -6.7512078285217285
    6. ' b' → logprob: -9.376208305358887
    7. '()\' → logprob: -9.876208305358887
    8. '();' → logprob: -10.376208305358887
    9. '(),' → logprob: -10.376208305358887
    10. '()
' → logprob: -10.626208305358887

Token 71: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.06204924359917641
    2. 'split' → logprob: -2.812049150466919
    3. 'rstrip' → logprob: -9.56204891204834
    4. 'tolist' → logprob: -12.68704891204834
    5. 'to' → logprob: -12.68704891204834
    6. 'replace' → logprob: -13.18704891204834
    7. 'dec' → logprob: -14.56204891204834
    8. 'strip' → logprob: -14.56204891204834
    9. 'isdigit' → logprob: -14.56204891204834
    10. 'b' → logprob: -14.93704891204834

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1398853063583374
    2. '(' → logprob: -2.264885425567627
    3. '('' → logprob: -3.639885425567627
    4. '("' → logprob: -8.139884948730469
    5. ''' → logprob: -10.639884948730469
    6. '()='' → logprob: -10.889884948730469
    7. ' ()' → logprob: -11.264884948730469
    8. '().' → logprob: -11.389884948730469
    9. '()(' → logprob: -11.639884948730469
    10. ''s' → logprob: -11.889884948730469

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4988965094089508
    2. ' lines' → logprob: -1.2488964796066284
    3. 'lines' → logprob: -2.873896598815918
    4. '(lines' → logprob: -3.498896598815918
    5. '	lines' → logprob: -4.123896598815918
    6. ')' → logprob: -6.498896598815918
    7. '_lines' → logprob: -7.623896598815918
    8. '<|end|>' → logprob: -7.748896598815918
    9. '.lines' → logprob: -8.498896598815918
    10. '[' → logprob: -9.373896598815918

Token 74: ' x' (ID: 1215)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.31939560174942017
    2. 'lines' → logprob: -1.3193955421447754
    3. '   ' → logprob: -5.194395542144775
    4. '	lines' → logprob: -8.319396018981934
    5. '(lines' → logprob: -8.444396018981934
    6. '_lines' → logprob: -10.069396018981934
    7. ')' → logprob: -11.069396018981934
    8. '.lines' → logprob: -11.319396018981934
    9. ' ' → logprob: -11.694396018981934
    10. '[' → logprob: -12.444396018981934

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18122224509716034
    2. '=' → logprob: -2.5562222003936768
    3. 's' → logprob: -2.6812222003936768
    4. '.append' → logprob: -4.931222438812256
    5. '_lines' → logprob: -5.056222438812256
    6. '_' → logprob: -6.681222438812256
    7. ',' → logprob: -6.931222438812256
    8. 'lines' → logprob: -7.306222438812256
    9. '=[]' → logprob: -7.556222438812256
    10. 'or' → logprob: -7.681222438812256

Token 76: ' list' (ID: 1562)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.752486526966095
    2. ' [' → logprob: -1.6274864673614502
    3. '[' → logprob: -1.7524864673614502
    4. '[len' → logprob: -3.50248646736145
    5. '[int' → logprob: -3.87748646736145
    6. 'list' → logprob: -4.002486705780029
    7. 'line' → logprob: -4.127486705780029
    8. ' line' → logprob: -4.127486705780029
    9. '[]' → logprob: -4.627486705780029
    10. '[list' → logprob: -4.877486705780029

Token 77: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6004318594932556
    2. '(line' → logprob: -0.8504318594932556
    3. '(' → logprob: -3.7254319190979004
    4. '(int' → logprob: -9.850431442260742
    5. '(x' → logprob: -11.475431442260742
    6. '(range' → logprob: -11.475431442260742
    7. '()' → logprob: -13.225431442260742
    8. '(
' → logprob: -13.600431442260742
    9. '(eval' → logprob: -13.600431442260742
    10. '(filter' → logprob: -13.725431442260742

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008384577231481671
    2. '(' → logprob: -8.000838279724121
    3. '(lambda' → logprob: -8.250838279724121
    4. '(str' → logprob: -8.375838279724121
    5. ')' → logprob: -12.750838279724121
    6. 'int' → logprob: -13.000838279724121
    7. '(bool' → logprob: -13.500838279724121
    8. ')(' → logprob: -13.625838279724121
    9. ',int' → logprob: -14.000838279724121
    10. '[int' → logprob: -14.500838279724121

Token 79: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.020389007404446602
    2. '(' → logprob: -4.020389080047607
    3. '(x' → logprob: -6.895389080047607
    4. ',' → logprob: -7.645389080047607
    5. ',line' → logprob: -7.645389080047607
    6. ')' → logprob: -9.64538860321045
    7. '(lines' → logprob: -9.89538860321045
    8. ',(' → logprob: -10.39538860321045
    9. '))' → logprob: -11.14538860321045
    10. ' (' → logprob: -11.27038860321045

Token 80: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4527241289615631
    2. ' line' → logprob: -1.2027240991592407
    3. 'list' → logprob: -2.9527242183685303
    4. ' list' → logprob: -4.577723979949951
    5. '(line' → logprob: -7.202723979949951
    6. ' ' → logprob: -9.20272445678711
    7. ')' → logprob: -9.32772445678711
    8. '#line' → logprob: -9.70272445678711
    9. '[line' → logprob: -9.82772445678711
    10. '	line' → logprob: -9.95272445678711

Token 81: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7554939389228821
    2. '))' → logprob: -1.2554938793182373
    3. '().' → logprob: -1.6304938793182373
    4. '.split' → logprob: -3.1304938793182373
    5. '.strip' → logprob: -5.880494117736816
    6. 'split' → logprob: -6.630494117736816
    7. ' ))' → logprob: -7.130494117736816
    8. '()' → logprob: -7.505494117736816
    9. '()));' → logprob: -10.130494117736816
    10. '.rstrip' → logprob: -10.505494117736816

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012116369791328907
    2. ')' → logprob: -5.012116432189941
    3. ' lines' → logprob: -5.512116432189941
    4. 'lines' → logprob: -7.512116432189941
    5. ',' → logprob: -8.637116432189941
    6. '	lines' → logprob: -8.887116432189941
    7. '<|end|>' → logprob: -9.137116432189941
    8. ' ' → logprob: -9.637116432189941
    9. '(lines' → logprob: -9.762116432189941
    10. '
' → logprob: -9.762116432189941

Token 83: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.08339843899011612
    2. 'lines' (adapté à ' lines') → logprob: -2.9583983421325684
    3. '   ' → logprob: -3.5833983421325684
    4. '	lines' → logprob: -8.458398818969727
    5. '(lines' → logprob: -9.458398818969727
    6. '
' → logprob: -10.833398818969727
    7. ' ' → logprob: -11.958398818969727
    8. '_lines' → logprob: -12.583398818969727
    9. '```' → logprob: -12.958398818969727
    10. '.lines' → logprob: -13.208398818969727

Token 84: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013754721730947495
    2. '.' → logprob: -6.626375675201416
    3. '.extend' → logprob: -10.876375198364258
    4. ' .' → logprob: -11.251375198364258
    5. '.app' → logprob: -11.626375198364258
    6. '.ap' → logprob: -12.501375198364258
    7. 'append' → logprob: -13.251375198364258
    8. '.push' → logprob: -14.001375198364258
    9. ').' → logprob: -14.126375198364258
    10. '.py' → logprob: -14.751375198364258

Token 85: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006726737599819899
    2. '(' → logprob: -5.0067267417907715
    3. '(
' → logprob: -11.881726264953613
    4. ' (' → logprob: -12.631726264953613
    5. '((' → logprob: -14.256726264953613
    6. '(np' → logprob: -15.256726264953613
    7. '(xs' → logprob: -15.881726264953613
    8. ' ' → logprob: -16.25672721862793
    9. '(n' → logprob: -17.88172721862793
    10. ')' → logprob: -17.88172721862793

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -11.500011444091797
    3. '))' → logprob: -14.750011444091797
    4. ' )' → logprob: -14.750011444091797
    5. '`)' → logprob: -16.250011444091797
    6. ')`' → logprob: -16.750011444091797
    7. ')return' → logprob: -17.750011444091797
    8. '),' → logprob: -18.875011444091797
    9. ')
' → logprob: -18.875011444091797
    10. ')

' → logprob: -18.875011444091797

Token 87: 's' (ID: 82)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17004422843456268
    2. 'ans' → logprob: -3.045044183731079
    3. 'answer' → logprob: -3.545044183731079
    4. 'result' → logprob: -3.795044183731079
    5. 'visited' → logprob: -4.170044422149658
    6. 'res' → logprob: -5.045044422149658
    7. 'colors' → logprob: -5.045044422149658
    8. 'dist' → logprob: -5.295044422149658
    9. 'used' → logprob: -5.670044422149658
    10. 'counts' → logprob: -5.920044422149658

Token 88: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0904664620757103
    2. ' =' → logprob: -3.2154664993286133
    3. 'u' → logprob: -3.8404664993286133
    4. 'ums' → logprob: -4.340466499328613
    5. '=' → logprob: -4.965466499328613
    6. 'quares' → logprob: -7.090466499328613
    7. 'eg' → logprob: -7.465466499328613
    8. 'g' → logprob: -7.590466499328613
    9. 'core' → logprob: -8.090466499328613
    10. '_' → logprob: -8.215466499328613

Token 89: ' np' (ID: 5374)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2756472826004028
    2. 'np' → logprob: -1.4006472826004028
    3. '0' → logprob: -2.5256471633911133
    4. '[]' → logprob: -2.5256471633911133
    5. ' sum' → logprob: -2.5256471633911133
    6. ' [' → logprob: -2.6506471633911133
    7. ' np' → logprob: -3.0256471633911133
    8. '[' → logprob: -3.0256471633911133
    9. '[[' → logprob: -3.9006471633911133
    10. ' [[' → logprob: -4.400647163391113

Token 90: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.18140959739685059
    2. 'array' → logprob: -1.9314095973968506
    3. ' array' → logprob: -4.55640983581543
    4. '.asarray' → logprob: -5.55640983581543
    5. '.zeros' → logprob: -5.93140983581543
    6. '.sum' → logprob: -6.30640983581543
    7. 'sum' → logprob: -7.55640983581543
    8. ' sum' → logprob: -7.80640983581543
    9. ' .' → logprob: -8.80640983581543
    10. '.' → logprob: -8.80640983581543

Token 91: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -6.754368223482743e-05
    2. '(' → logprob: -9.625067710876465
    3. '(s' → logprob: -14.375067710876465
    4. ' (' → logprob: -15.250067710876465
    5. '(rows' → logprob: -15.625067710876465
    6. '(strings' → logprob: -16.62506675720215
    7. '(samples' → logprob: -16.62506675720215
    8. '(ls' → logprob: -17.00006675720215
    9. '(points' → logprob: -17.25006675720215
    10. '(
' → logprob: -17.50006675720215

Token 92: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014132341311778873
    2. ' )' → logprob: -9.750141143798828
    3. ',' → logprob: -10.000141143798828
    4. ')
' → logprob: -10.625141143798828
    5. ').' → logprob: -12.250141143798828
    6. ')s' → logprob: -12.875141143798828
    7. ',)' → logprob: -13.625141143798828
    8. ',s' → logprob: -14.000141143798828
    9. ')#' → logprob: -14.000141143798828
    10. '))' → logprob: -14.375141143798828

Token 93: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.06407405436038971
    2. ' dtype' → logprob: -2.8140740394592285
    3. ')' → logprob: -6.9390740394592285
    4. 'int' → logprob: -7.5640740394592285
    5. 'np' → logprob: -8.064074516296387
    6. ' np' → logprob: -8.689074516296387
    7. ' int' → logprob: -9.814074516296387
    8. 'd' → logprob: -10.439074516296387
    9. ' ' → logprob: -10.689074516296387
    10. 'nd' → logprob: -12.564074516296387

Token 94: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.5644928812980652
    2. 'int' → logprob: -1.06449294090271
    3. '.uint' → logprob: -2.56449294090271
    4. 'uint' → logprob: -4.689492702484131
    5. ' int' → logprob: -9.189493179321289
    6. '.' → logprob: -9.564493179321289
    7. ']int' → logprob: -9.939493179321289
    8. '.bool' → logprob: -10.814493179321289
    9. '=int' → logprob: -11.064493179321289
    10. ',int' → logprob: -11.564493179321289

Token 95: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.3787340521812439
    2. '8' → logprob: -1.6287341117858887
    3. '64' → logprob: -2.1287341117858887
    4. 'c' → logprob: -9.37873363494873
    5. ')' → logprob: -11.62873363494873
    6. '16' → logprob: -12.25373363494873
    7. '_' → logprob: -12.50373363494873
    8. 'p' → logprob: -13.00373363494873
    9. '_)' → logprob: -13.00373363494873
    10. '```' → logprob: -16.753734588623047

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.931863051955588e-05
    2. ')
' → logprob: -9.875059127807617
    3. ' )' → logprob: -12.250059127807617
    4. '))' → logprob: -14.125059127807617
    5. ').' → logprob: -14.375059127807617
    6. ')`' → logprob: -14.750059127807617
    7. ')

' → logprob: -15.375059127807617
    8. '),' → logprob: -15.500059127807617
    9. ')#' → logprob: -15.750059127807617
    10. '[' → logprob: -16.125059127807617

Token 97: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36409613490104675
    2. '#' → logprob: -2.739096164703369
    3. '
' → logprob: -3.489096164703369
    4. '\n' → logprob: -3.489096164703369
    5. 'prefix' → logprob: -3.614096164703369
    6. 'd' → logprob: -3.739096164703369
    7. ')' → logprob: -4.114096164703369
    8. 'sum' → logprob: -4.239096164703369
    9. 's' → logprob: -4.489096164703369
    10. 'c' → logprob: -4.614096164703369

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287227392196655
    2. '=' → logprob: -1.0537227392196655
    3. ' ' → logprob: -11.678722381591797
    4. 's' → logprob: -12.178722381591797
    5. '=int' → logprob: -13.678722381591797
    6. ',' → logprob: -13.678722381591797
    7. ' =
' → logprob: -13.803722381591797
    8. '0' → logprob: -14.303722381591797
    9. ' ' → logprob: -14.303722381591797
    10. '_' → logprob: -14.553722381591797

Token 99: ' h' (ID: 312)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09477637708187103
    2. ' ' → logprob: -2.9697763919830322
    3. '10' → logprob: -4.219776153564453
    4. 'np' → logprob: -4.594776153564453
    5. ' np' → logprob: -5.219776153564453
    6. 'h' → logprob: -6.219776153564453
    7. '1' → logprob: -6.469776153564453
    8. 'float' → logprob: -7.094776153564453
    9. '-' → logprob: -7.219776153564453
    10. ' h' → logprob: -7.594776153564453

Token 100: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17009642720222473
    2. 'for' → logprob: -2.0450963973999023
    3. '*' → logprob: -4.420096397399902
    4. ' +' → logprob: -5.045096397399902
    5. ' for' → logprob: -6.170096397399902
    6. ' *' → logprob: -6.545096397399902
    7. '
' → logprob: -6.920096397399902
    8. '+
' → logprob: -7.045096397399902
    9. 'import' → logprob: -7.170096397399902
    10. '-' → logprob: -7.420096397399902

Token 101: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1294430047273636
    2. ' w' → logprob: -2.1294429302215576
    3. '1' → logprob: -6.254443168640137
    4. 'k' → logprob: -8.129443168640137
    5. ' ' → logprob: -9.129443168640137
    6. ' k' → logprob: -9.504443168640137
    7. ' (' → logprob: -10.754443168640137
    8. '(' → logprob: -10.879443168640137
    9. '(w' → logprob: -11.129443168640137
    10. '+w' → logprob: -11.629443168640137

Token 102: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9073305130004883
    2. '+' → logprob: -1.6573305130004883
    3. ' ' → logprob: -1.6573305130004883
    4. 'for' → logprob: -2.2823305130004883
    5. '
' → logprob: -3.4073305130004883
    6. ' 
' → logprob: -3.5323305130004883
    7. ' -' → logprob: -3.5323305130004883
    8. 's' → logprob: -5.157330513000488
    9. ' +' → logprob: -5.657330513000488
    10. ' for' → logprob: -5.782330513000488

Token 103: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05162130296230316
    2. '
' → logprob: -3.551621198654175
    3. ' for' → logprob: -4.301621437072754
    4. '#' → logprob: -5.676621437072754
    5. ' 
' → logprob: -7.051621437072754
    6. ' ' → logprob: -7.301621437072754
    7. ')' → logprob: -7.551621437072754
    8. '+' → logprob: -7.676621437072754
    9. 'def' → logprob: -7.801621437072754
    10. '<|end|>' → logprob: -8.051621437072754

Token 104: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23187005519866943
    2. 'n' → logprob: -1.7318700551986694
    3. '=' → logprob: -4.106870174407959
    4. 'nt' → logprob: -5.356870174407959
    5. ' =' → logprob: -5.481870174407959
    6. 's' → logprob: -6.231870174407959
    7. ',' → logprob: -7.106870174407959
    8. 'nd' → logprob: -7.856870174407959
    9. ' ' → logprob: -7.981870174407959
    10. 't' → logprob: -8.1068696975708

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10353778302669525
    2. ' ' → logprob: -2.3535377979278564
    3. '1' → logprob: -5.728537559509277
    4. '2' → logprob: -10.603537559509277
    5. ' h' → logprob: -11.603537559509277
    6. 'h' → logprob: -11.603537559509277
    7. 's' → logprob: -12.228537559509277
    8. '(' → logprob: -12.478537559509277
    9. ' -' → logprob: -12.603537559509277
    10. '10' → logprob: -12.853537559509277

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020310156047344208
    2. '1' → logprob: -4.145309925079346
    3. ' ' → logprob: -5.520309925079346
    4. '-' → logprob: -9.520310401916504
    5. '2' → logprob: -9.645310401916504
    6. '(' → logprob: -9.895310401916504
    7. 'h' → logprob: -10.270310401916504
    8. ' -' → logprob: -11.770310401916504
    9. '10' → logprob: -12.645310401916504
    10. 'k' → logprob: -13.145310401916504

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5356830358505249
    2. ' ' → logprob: -1.660683035850525
    3. '+' → logprob: -2.6606831550598145
    4. ',' → logprob: -2.9106831550598145
    5. 'while' → logprob: -3.1606831550598145
    6. ' while' → logprob: -4.0356831550598145
    7. ' 
' → logprob: -4.7856831550598145
    8. 'for' → logprob: -5.0356831550598145
    9. '<|end|>' → logprob: -5.7856831550598145
    10. ',
' → logprob: -5.7856831550598145

Token 108: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40071728825569153
    2. 'while' → logprob: -1.5257172584533691
    3. ' while' → logprob: -3.025717258453369
    4. ' ' → logprob: -3.275717258453369
    5. '+' → logprob: -4.900717258453369
    6. ',' → logprob: -5.025717258453369
    7. ' 
' → logprob: -5.525717258453369
    8. 'for' → logprob: -6.025717258453369
    9. '<|end|>' → logprob: -7.150717258453369
    10. '1' → logprob: -7.150717258453369

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00300777330994606
    2. 'i' → logprob: -5.878007888793945
    3. ' h' → logprob: -9.253007888793945
    4. ' ' → logprob: -9.503007888793945
    5. ' s' → logprob: -11.878007888793945
    6. ' True' → logprob: -11.878007888793945
    7. ' ans' → logprob: -12.503007888793945
    8. 'h' → logprob: -12.753007888793945
    9. ' (' → logprob: -12.753007888793945
    10. '(i' → logprob: -12.878007888793945

Token 110: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02479081228375435
    2. '<' → logprob: -3.7747907638549805
    3. ' <=' → logprob: -6.5247907638549805
    4. '<=' → logprob: -10.14979076385498
    5. '<h' → logprob: -11.27479076385498
    6. ' ' → logprob: -11.39979076385498
    7. '<s' → logprob: -12.02479076385498
    8. 'h' → logprob: -13.02479076385498
    9. '<w' → logprob: -13.39979076385498
    10. '<len' → logprob: -13.52479076385498

Token 111: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3199625015258789
    2. '1' → logprob: -1.694962501525879
    3. 'h' → logprob: -2.569962501525879
    4. '(h' → logprob: -5.069962501525879
    5. ' (' → logprob: -5.319962501525879
    6. '2' → logprob: -6.694962501525879
    7. ' ' → logprob: -7.694962501525879
    8. 'k' → logprob: -7.694962501525879
    9. '(k' → logprob: -9.069962501525879
    10. ' h' → logprob: -9.069962501525879

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07198827713727951
    2. '(' → logprob: -2.696988344192505
    3. '2' → logprob: -6.321988105773926
    4. ' ' → logprob: -9.071988105773926
    5. ' (' → logprob: -9.446988105773926
    6. 'h' → logprob: -10.571988105773926
    7. '   ' → logprob: -11.446988105773926
    8. 'k' → logprob: -11.696988105773926
    9. '(h' → logprob: -12.321988105773926
    10. ')' → logprob: -12.571988105773926

Token 113: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5298044681549072
    2. ' <<' → logprob: -0.9048044681549072
    3. '1' → logprob: -5.404804229736328
    4. '<' → logprob: -7.029804229736328
    5. ' ' → logprob: -7.654804229736328
    6. ' <' → logprob: -8.529804229736328
    7. '2' → logprob: -8.654804229736328
    8. '3' → logprob: -9.029804229736328
    9. ')' → logprob: -9.404804229736328
    10. '<<(' → logprob: -9.529804229736328

Token 114: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0012601142516359687
    2. ' h' → logprob: -6.751260280609131
    3. '(h' → logprob: -10.251259803771973
    4. 'i' → logprob: -10.501259803771973
    5. 'w' → logprob: -11.251259803771973
    6. 'k' → logprob: -11.876259803771973
    7. '	h' → logprob: -13.501259803771973
    8. ' ' → logprob: -13.626259803771973
    9. ' (' → logprob: -13.876259803771973
    10. '(' → logprob: -14.251259803771973

Token 115: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00048381939996033907
    2. '(h' → logprob: -7.750483989715576
    3. ' h' → logprob: -10.125483512878418
    4. 'i' → logprob: -12.375483512878418
    5. '   ' → logprob: -12.750483512878418
    6. ' (' → logprob: -13.500483512878418
    7. ')' → logprob: -13.500483512878418
    8. '(' → logprob: -14.125483512878418
    9. '	h' → logprob: -14.500483512878418
    10. ' ' → logprob: -15.000483512878418

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6086475849151611
    2. ' -' → logprob: -1.4836475849151611
    3. '))' → logprob: -1.9836475849151611
    4. ')' → logprob: -2.733647584915161
    5. ')):' → logprob: -4.233647346496582
    6. ' ))' → logprob: -4.983647346496582
    7. ' ' → logprob: -6.358647346496582
    8. ' )' → logprob: -6.858647346496582
    9. '))-' → logprob: -7.108647346496582
    10. ')):
' → logprob: -7.733647346496582

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000556843588128686
    2. ' ' → logprob: -7.500556945800781
    3. '2' → logprob: -13.375556945800781
    4. '-' → logprob: -14.250556945800781
    5. ')' → logprob: -15.188056945800781
    6. 'i' → logprob: -15.313056945800781
    7. '１' → logprob: -15.438056945800781
    8. '```' → logprob: -15.438056945800781
    9. '   ' → logprob: -15.750556945800781
    10. '  ' → logprob: -16.06305694580078

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.751746746478602e-05
    2. ' ' → logprob: -10.00004768371582
    3. '2' → logprob: -14.62504768371582
    4. ')' → logprob: -15.25004768371582
    5. '１' → logprob: -15.37504768371582
    6. 'i' → logprob: -15.56254768371582
    7. '-' → logprob: -15.62504768371582
    8. '```' → logprob: -15.68754768371582
    9. '   ' → logprob: -15.75004768371582
    10. '۱' → logprob: -17.18754768371582

Token 119: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.038775574415922165
    2. '))' → logprob: -3.413775682449341
    3. ')' → logprob: -6.538775444030762
    4. ')):
' → logprob: -6.663775444030762
    5. ' ))' → logprob: -6.663775444030762
    6. '):' → logprob: -6.913775444030762
    7. ')):
' → logprob: -10.038775444030762
    8. ':' → logprob: -10.163775444030762
    9. ' ' → logprob: -10.913775444030762
    10. ' ):' → logprob: -11.788775444030762

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03403176739811897
    2. ':' → logprob: -3.659031867980957
    3. ' j' → logprob: -5.784031867980957
    4. 'j' → logprob: -6.534031867980957
    5. ' ' → logprob: -7.409031867980957
    6. ':
' → logprob: -7.909031867980957
    7. ',' → logprob: -8.034031867980957
    8. ' :' → logprob: -8.159031867980957
    9. '    ' → logprob: -8.409031867980957
    10. ' s' → logprob: -8.534031867980957

Token 121: ' wp' (ID: 27047)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.7185229063034058
    2. 'groups' → logprob: -2.0935230255126953
    3. 'j' → logprob: -2.3435230255126953
    4. 'g' → logprob: -2.3435230255126953
    5. 'div' → logprob: -2.7185230255126953
    6. '   ' → logprob: -2.9685230255126953
    7. 'c' → logprob: -3.3435230255126953
    8. 'b' → logprob: -3.4685230255126953
    9. 'cuts' → logprob: -3.4685230255126953
    10. 'bit' → logprob: -3.5935230255126953

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12509144842624664
    2. '=' → logprob: -2.375091552734375
    3. 'os' → logprob: -4.125091552734375
    4. 'art' → logprob: -6.125091552734375
    5. 't' → logprob: -6.500091552734375
    6. 'arts' → logprob: -7.875091552734375
    7. '   ' → logprob: -8.125091552734375
    8. 's' → logprob: -8.125091552734375
    9. 'ointer' → logprob: -8.125091552734375
    10. 'j' → logprob: -8.250091552734375

Token 123: ' np' (ID: 5374)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19102811813354492
    2. ' ' → logprob: -2.066028118133545
    3. '-' → logprob: -4.066028118133545
    4. '[]' → logprob: -4.566028118133545
    5. '[' → logprob: -5.066028118133545
    6. ' -' → logprob: -5.566028118133545
    7. 'w' → logprob: -5.941028118133545
    8. '[-' → logprob: -5.941028118133545
    9. ' [' → logprob: -6.691028118133545
    10. '1' → logprob: -6.691028118133545

Token 124: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.02198503538966179
    2. '.array' → logprob: -4.146985054016113
    3. '.ones' → logprob: -5.646985054016113
    4. '.full' → logprob: -6.271985054016113
    5. 'array' → logprob: -8.646985054016113
    6. '.arange' → logprob: -9.021985054016113
    7. '.empty' → logprob: -10.021985054016113
    8. 'zeros' → logprob: -10.396985054016113
    9. '0' → logprob: -10.396985054016113
    10. ' zeros' → logprob: -10.771985054016113

Token 125: '((' (ID: 2054)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.014202998019754887
    2. '((' → logprob: -4.264203071594238
    3. '(' → logprob: -10.639203071594238
    4. 'w' → logprob: -12.264203071594238
    5. '(h' → logprob: -12.389203071594238
    6. '(shape' → logprob: -12.389203071594238
    7. '(k' → logprob: -13.639203071594238
    8. '(i' → logprob: -15.014203071594238
    9. '<w' → logprob: -15.389203071594238
    10. '(n' → logprob: -16.389202117919922

Token 126: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09938566386699677
    2. '(h' → logprob: -3.2243857383728027
    3. 'k' → logprob: -4.474385738372803
    4. '1' → logprob: -4.599385738372803
    5. 'w' → logprob: -4.724385738372803
    6. ')' → logprob: -4.974385738372803
    7. 'i' → logprob: -5.349385738372803
    8. '(' → logprob: -5.474385738372803
    9. '(k' → logprob: -5.599385738372803
    10. '(w' → logprob: -6.724385738372803

Token 127: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6170333027839661
    2. '-' → logprob: -1.1170332431793213
    3. ' +' → logprob: -2.8670332431793213
    4. ',' → logprob: -2.9920332431793213
    5. ' -' → logprob: -3.7420332431793213
    6. ',w' → logprob: -7.3670334815979
    7. ' ' → logprob: -7.6170334815979
    8. 'w' → logprob: -7.7420334815979
    9. '+w' → logprob: -8.242033004760742
    10. ' ,' → logprob: -8.367033004760742

Token 128: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005333751323632896
    2. ' w' → logprob: -8.250533103942871
    3. '1' → logprob: -8.875533103942871
    4. '(w' → logprob: -9.750533103942871
    5. '2' → logprob: -11.000533103942871
    6. '   ' → logprob: -11.375533103942871
    7. ' ' → logprob: -11.875533103942871
    8. ')' → logprob: -12.375533103942871
    9. '10' → logprob: -12.375533103942871
    10. 'k' → logprob: -12.375533103942871

Token 129: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0024131115060299635
    2. '+' → logprob: -6.627413272857666
    3. ' ),' → logprob: -7.502413272857666
    4. '))' → logprob: -8.002412796020508
    5. ' +' → logprob: -9.127412796020508
    6. ',),' → logprob: -10.127412796020508
    7. '))
' → logprob: -10.752412796020508
    8. ',' → logprob: -11.252412796020508
    9. '   ' → logprob: -12.752412796020508
    10. ')' → logprob: -12.877412796020508

Token 130: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.1336328238248825
    2. 'dtype' → logprob: -2.1336328983306885
    3. ' np' → logprob: -5.633632659912109
    4. 'int' → logprob: -6.133632659912109
    5. ' dtype' → logprob: -7.133632659912109
    6. 'bool' → logprob: -10.00863265991211
    7. '1' → logprob: -10.00863265991211
    8. '[np' → logprob: -10.88363265991211
    9. '(np' → logprob: -11.88363265991211
    10. '   ' → logprob: -12.25863265991211

Token 131: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03414202108979225
    2. 'uint' → logprob: -3.784142017364502
    3. '64' → logprob: -4.909142017364502
    4. '8' → logprob: -5.784142017364502
    5. 'bool' → logprob: -8.65914249420166
    6. '.int' → logprob: -9.40914249420166
    7. '1' → logprob: -9.65914249420166
    8. '.uint' → logprob: -10.90914249420166
    9. ' int' → logprob: -11.15914249420166
    10. 'dtype' → logprob: -11.65914249420166

Token 132: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.0002354832977289334
    2. '32' → logprob: -8.500235557556152
    3. '8' → logprob: -10.500235557556152
    4. '16' → logprob: -13.125235557556152
    5. 'p' → logprob: -13.500235557556152
    6. 'c' → logprob: -13.875235557556152
    7. '_' → logprob: -16.875234603881836
    8. '6' → logprob: -19.375234603881836
    9. 'l' → logprob: -19.750234603881836
    10. '66' → logprob: -20.000234603881836

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048697397112846375
    2. ')
' → logprob: -3.0486974716186523
    3. ' )' → logprob: -9.673697471618652
    4. ')
' → logprob: -10.548697471618652
    5. ' )
' → logprob: -11.423697471618652
    6. ')

' → logprob: -12.923697471618652
    7. ',' → logprob: -12.923697471618652
    8. ',)' → logprob: -14.173697471618652
    9. '),' → logprob: -14.173697471618652
    10. ')s' → logprob: -14.173697471618652

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40313345193862915
    2. 'j' → logprob: -1.6531333923339844
    3. 'for' → logprob: -2.5281333923339844
    4. 'count' → logprob: -4.403133392333984
    5. 'cnt' → logprob: -4.403133392333984
    6. 'c' → logprob: -4.653133392333984
    7. ' for' → logprob: -5.528133392333984
    8. 'row' → logprob: -5.653133392333984
    9. 'cw' → logprob: -6.403133392333984
    10. 'col' → logprob: -6.528133392333984

Token 135: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.641047477722168
    2. 'j' → logprob: -1.766047477722168
    3. '   ' → logprob: -2.391047477722168
    4. 'cnt' → logprob: -3.266047477722168
    5. 'wp' → logprob: -3.391047477722168
    6. 'row' → logprob: -4.266047477722168
    7. ' for' → logprob: -4.266047477722168
    8. 'c' → logprob: -4.516047477722168
    9. 'idx' → logprob: -4.891047477722168
    10. 'count' → logprob: -5.266047477722168

Token 136: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.031169552356004715
    2. 'i' → logprob: -5.031169414520264
    3. 'j' → logprob: -5.156169414520264
    4. 'sum' → logprob: -5.281169414520264
    5. 'hile' → logprob: -6.031169414520264
    6. 'cnt' → logprob: -6.531169414520264
    7. 'h' → logprob: -6.656169414520264
    8. 'x' → logprob: -6.906169414520264
    9. '_sum' → logprob: -7.156169414520264
    10. 'count' → logprob: -7.406169414520264

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14577367901802063
    2. ' =' → logprob: -2.0207736492156982
    3. 'p' → logprob: -5.895773887634277
    4. ' ' → logprob: -9.020773887634277
    5. 'i' → logprob: -10.520773887634277
    6. ',' → logprob: -10.520773887634277
    7. '   ' → logprob: -10.520773887634277
    8. '=np' → logprob: -10.520773887634277
    9. '[' → logprob: -10.645773887634277
    10. '+=' → logprob: -11.395773887634277

Token 138: ' np' (ID: 5374)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17077277600765228
    2. 'np' → logprob: -1.9207727909088135
    3. '[' → logprob: -5.545772552490234
    4. ' ' → logprob: -6.170772552490234
    5. ' np' → logprob: -6.420772552490234
    6. '1' → logprob: -6.920772552490234
    7. '[]' → logprob: -7.920772552490234
    8. 'w' → logprob: -7.920772552490234
    9. 'wp' → logprob: -8.045772552490234
    10. '[]
' → logprob: -8.545772552490234

Token 139: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.0003577495808713138
    2. '.ones' → logprob: -8.625357627868652
    3. 'zeros' → logprob: -10.000357627868652
    4. '0' → logprob: -10.125357627868652
    5. '.' → logprob: -10.250357627868652
    6. 'np' → logprob: -10.625357627868652
    7. '(' → logprob: -12.000357627868652
    8. 'array' → logprob: -12.000357627868652
    9. '.array' → logprob: -12.250357627868652
    10. '(np' → logprob: -12.500357627868652

Token 140: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000561969296541065
    2. '(w' → logprob: -8.375561714172363
    3. ' ((' → logprob: -8.625561714172363
    4. '(' → logprob: -9.375561714172363
    5. ' ' → logprob: -11.375561714172363
    6. ')((' → logprob: -11.500561714172363
    7. '_like' → logprob: -11.625561714172363
    8. ' (' → logprob: -12.000561714172363
    9. '(h' → logprob: -12.000561714172363
    10. '>((' → logprob: -12.250561714172363

Token 141: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020047295838594437
    2. '(h' → logprob: -4.520047187805176
    3. 'w' → logprob: -5.520047187805176
    4. 'k' → logprob: -6.770047187805176
    5. '(' → logprob: -7.270047187805176
    6. '1' → logprob: -7.645047187805176
    7. '(w' → logprob: -7.645047187805176
    8. 'i' → logprob: -7.645047187805176
    9. ')' → logprob: -7.645047187805176
    10. ' h' → logprob: -8.270047187805176

Token 142: ',),' (ID: 143622)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001254634466022253
    2. '-' → logprob: -7.376254558563232
    3. ' ,' → logprob: -8.12625503540039
    4. 'w' → logprob: -9.00125503540039
    5. ',w' → logprob: -9.50125503540039
    6. ' -' → logprob: -9.75125503540039
    7. ',
' → logprob: -10.12625503540039
    8. ' w' → logprob: -12.00125503540039
    9. '),' → logprob: -12.12625503540039
    10. ' ' → logprob: -12.68875503540039

Token 143: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0025296485982835293
    2. 'int' → logprob: -6.627529621124268
    3. 'dtype' → logprob: -7.377529621124268
    4. ' np' → logprob: -7.502529621124268
    5. 'w' → logprob: -11.627530097961426
    6. '(np' → logprob: -12.752530097961426
    7. '1' → logprob: -13.002530097961426
    8. '[np' → logprob: -13.127530097961426
    9. ')' → logprob: -13.377530097961426
    10. ',np' → logprob: -13.377530097961426

Token 144: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.013157754205167294
    2. 'int' → logprob: -4.513157844543457
    3. '64' → logprob: -6.263157844543457
    4. '.bool' → logprob: -9.263157844543457
    5. '.uint' → logprob: -9.638157844543457
    6. 'bool' → logprob: -12.013157844543457
    7. ',int' → logprob: -12.138157844543457
    8. '0' → logprob: -12.513157844543457
    9. ' int' → logprob: -12.513157844543457
    10. '=int' → logprob: -12.513157844543457

Token 145: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -2.093505099765025e-05
    2. '8' → logprob: -10.875020980834961
    3. '32' → logprob: -13.375020980834961
    4. '16' → logprob: -16.12502098083496
    5. ')' → logprob: -16.25002098083496
    6. 'int' → logprob: -16.75002098083496
    7. '6' → logprob: -17.50002098083496
    8. 'c' → logprob: -17.62502098083496
    9. 'p' → logprob: -19.00002098083496
    10. ' ' → logprob: -19.87502098083496

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3486936092376709
    2. ')
' → logprob: -1.223693609237671
    3. ' )
' → logprob: -9.22369384765625
    4. ' )' → logprob: -9.72369384765625
    5. '   ' → logprob: -9.97369384765625
    6. ')

' → logprob: -10.84869384765625
    7. ')
' → logprob: -11.09869384765625
    8. '
' → logprob: -12.97369384765625
    9. ')i' → logprob: -13.59869384765625
    10. ' ' → logprob: -13.84869384765625

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.315053790807724
    2. 'j' → logprob: -1.5650538206100464
    3. ' for' → logprob: -4.190053939819336
    4. 'for' → logprob: -4.690053939819336
    5. ' j' → logprob: -4.815053939819336
    6. 'cnt' → logprob: -5.190053939819336
    7. ' cut' → logprob: -5.440053939819336
    8. 'c' → logprob: -5.815053939819336
    9. 'cut' → logprob: -6.440053939819336
    10. 'count' → logprob: -6.440053939819336

Token 148: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2714068293571472
    2. 'for' (adapté à ' for') → logprob: -2.021406888961792
    3. 'cut' → logprob: -3.396406888961792
    4. 'cnt' → logprob: -4.521406650543213
    5. 'bit' → logprob: -4.771406650543213
    6. 'flag' → logprob: -4.896406650543213
    7. '   ' → logprob: -5.271406650543213
    8. 'row' → logprob: -5.896406650543213
    9. 'b' → logprob: -6.021406650543213
    10. 'count' → logprob: -6.146406650543213

Token 149: ' idx' (ID: 14016)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13203981518745422
    2. 'r' → logprob: -3.257039785385132
    3. 'x' → logprob: -3.757039785385132
    4. 'y' → logprob: -3.757039785385132
    5. 'row' → logprob: -3.882039785385132
    6. ' j' → logprob: -5.007040023803711
    7. 'ii' → logprob: -6.632040023803711
    8. 'l' → logprob: -6.757040023803711
    9. ' row' → logprob: -6.757040023803711
    10. 'jj' → logprob: -6.757040023803711

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07832205295562744
    2. 'in' → logprob: -2.703321933746338
    3. ',' → logprob: -4.828321933746338
    4. ' ' → logprob: -8.328322410583496
    5. ' ,' → logprob: -9.703322410583496
    6. ' i' → logprob: -11.828322410583496
    7. 'i' → logprob: -12.078322410583496
    8. '0' → logprob: -12.078322410583496
    9. '	in' → logprob: -12.203322410583496
    10. '_in' → logprob: -12.328322410583496

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692904472351074
    2. ' range' → logprob: -2.1269290447235107
    3. '(range' → logprob: -14.62692928314209
    4. '	range' → logprob: -15.00192928314209
    5. ' ' → logprob: -16.501928329467773
    6. 'r' → logprob: -17.001928329467773
    7. 'ran' → logprob: -17.501928329467773
    8. 'ra' → logprob: -17.626928329467773
    9. '
' → logprob: -17.876928329467773
    10. 'rang' → logprob: -17.876928329467773

Token 152: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.004142030607908964
    2. '(' → logprob: -6.129141807556152
    3. 'h' → logprob: -6.254141807556152
    4. '(w' → logprob: -10.879141807556152
    5. '1' → logprob: -11.879141807556152
    6. '(i' → logprob: -13.254141807556152
    7. 'w' → logprob: -13.379141807556152
    8. '   ' → logprob: -14.254141807556152
    9. ' h' → logprob: -14.379141807556152
    10. ' (' → logprob: -14.629141807556152

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06207804009318352
    2. '):
' → logprob: -2.8120779991149902
    3. ' ):' → logprob: -9.687078475952148
    4. '   ' → logprob: -10.937078475952148
    5. ':' → logprob: -11.187078475952148
    6. ')' → logprob: -12.062078475952148
    7. '):
' → logprob: -12.562078475952148
    8. ' ):
' → logprob: -12.812078475952148
    9. '):

' → logprob: -13.937078475952148
    10. ' ' → logprob: -14.187078475952148

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026626765727996826
    2. ' if' → logprob: -4.2766265869140625
    3. ' for' → logprob: -5.9016265869140625
    4. ' j' → logprob: -6.0266265869140625
    5. 'j' → logprob: -6.1516265869140625
    6. '   ' → logprob: -7.0266265869140625
    7. 'if' → logprob: -7.0266265869140625
    8. ',' → logprob: -7.1516265869140625
    9. '        
' → logprob: -7.2766265869140625
    10. '    ' → logprob: -8.401626586914062

Token 155: ' wp' (ID: 27047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0703060626983643
    2. 'col' → logprob: -1.4453060626983643
    3. '       ' → logprob: -2.5703060626983643
    4. 'for' → logprob: -2.9453060626983643
    5. 'wp' (adapté à ' wp') → logprob: -2.9453060626983643
    6. ' col' → logprob: -3.4453060626983643
    7. 'cur' → logprob: -3.6953060626983643
    8. 'j' → logprob: -3.8203060626983643
    9. 'sum' → logprob: -4.195305824279785
    10. 'c' → logprob: -4.195305824279785

Token 156: '[' (ID: 58)
  Prédit: '[:,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.006492377258837223
    2. '[:' → logprob: -5.631492614746094
    3. '[:]' → logprob: -6.631492614746094
    4. '[' → logprob: -7.131492614746094
    5. ' [:' → logprob: -7.756492614746094
    6. '=' → logprob: -8.756492614746094
    7. '[...,' → logprob: -9.881492614746094
    8. '[i' → logprob: -10.631492614746094
    9. ' =' → logprob: -11.006492614746094
    10. '[:,:,' → logprob: -11.131492614746094

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3475719690322876
    2. 'i' → logprob: -1.3475719690322876
    3. ':,' → logprob: -4.972571849822998
    4. ' :,' → logprob: -5.097571849822998
    5. ':' → logprob: -5.347571849822998
    6. '(' → logprob: -6.097571849822998
    7. ' i' → logprob: -6.097571849822998
    8. 'np' → logprob: -6.472571849822998
    9. 's' → logprob: -6.722571849822998
    10. ',' → logprob: -6.847571849822998

Token 158: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4810076355934143
    2. '][' → logprob: -0.9810076355934143
    3. ' ,' → logprob: -5.9810075759887695
    4. ' ][' → logprob: -6.2310075759887695
    5. ']' → logprob: -6.4810075759887695
    6. ',i' → logprob: -8.60600757598877
    7. ')][' → logprob: -8.98100757598877
    8. '][:' → logprob: -9.60600757598877
    9. '[' → logprob: -9.60600757598877
    10. ' ' → logprob: -10.10600757598877

Token 159: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1994775377388578e-05
    2. ' idx' → logprob: -12.250012397766113
    3. 'i' → logprob: -12.500012397766113
    4. '0' → logprob: -13.125012397766113
    5. '(idx' → logprob: -14.750012397766113
    6. '	idx' → logprob: -14.750012397766113
    7. '[idx' → logprob: -15.000012397766113
    8. 'index' → logprob: -16.750011444091797
    9. '_idx' → logprob: -17.000011444091797
    10. '
' → logprob: -17.375011444091797

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03691607713699341
    2. ']+=' → logprob: -3.4119160175323486
    3. ' ]' → logprob: -6.161916255950928
    4. ']+' → logprob: -7.786916255950928
    5. ']=' → logprob: -7.786916255950928
    6. ')' → logprob: -8.53691577911377
    7. ')]' → logprob: -10.16191577911377
    8. '+=' → logprob: -10.41191577911377
    9. ' +=' → logprob: -10.66191577911377
    10. '])' → logprob: -11.53691577911377

Token 161: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4869435727596283
    2. '=' → logprob: -1.1119436025619507
    3. ' +=' → logprob: -2.986943483352661
    4. ' =' → logprob: -5.11194372177124
    5. ']+=' → logprob: -9.361943244934082
    6. ',' → logprob: -11.486943244934082
    7. '+' → logprob: -12.361943244934082
    8. '+=(' → logprob: -12.611943244934082
    9. '=int' → logprob: -12.861943244934082
    10. '=sum' → logprob: -13.611943244934082

Token 162: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021602455526590347
    2. 'lines' → logprob: -4.146602630615234
    3. 'np' → logprob: -5.896602630615234
    4. '0' → logprob: -6.146602630615234
    5. 'sum' → logprob: -8.771602630615234
    6. 'int' → logprob: -8.896602630615234
    7. '1' → logprob: -9.396602630615234
    8. ' lines' → logprob: -9.396602630615234
    9. ' s' → logprob: -9.521602630615234
    10. 'wp' → logprob: -9.896602630615234

Token 163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5249512195587158
    2. '[i' → logprob: -0.8999512195587158
    3. '[np' → logprob: -7.024950981140137
    4. '[w' → logprob: -8.399950981140137
    5. '[(' → logprob: -8.899950981140137
    6. '[:,' → logprob: -9.149950981140137
    7. 'i' → logprob: -9.274950981140137
    8. '[int' → logprob: -9.899950981140137
    9. '[
' → logprob: -10.399950981140137
    10. '[q' → logprob: -10.399950981140137

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026686780154705048
    2. 'i' → logprob: -3.651686668395996
    3. '(' → logprob: -8.526686668395996
    4. '(i' → logprob: -9.651686668395996
    5. 'np' → logprob: -10.776686668395996
    6. '
' → logprob: -10.901686668395996
    7. ':' → logprob: -11.401686668395996
    8. ' ' → logprob: -11.589186668395996
    9. 'idx' → logprob: -11.714186668395996
    10. ' i' → logprob: -12.089186668395996

Token 165: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011188744247192517
    2. ',' → logprob: -10.00011157989502
    3. ' ][' → logprob: -10.75011157989502
    4. ']' → logprob: -11.00011157989502
    5. ')][' → logprob: -11.25011157989502
    6. '[' → logprob: -11.75011157989502
    7. '[idx' → logprob: -12.62511157989502
    8. ']][' → logprob: -14.12511157989502
    9. '"][' → logprob: -14.50011157989502
    10. ')[' → logprob: -14.62511157989502

Token 166: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.7372048862162046e-05
    2. ' idx' → logprob: -10.625027656555176
    3. '[idx' → logprob: -13.500027656555176
    4. '
' → logprob: -13.625027656555176
    5. '	idx' → logprob: -15.625027656555176
    6. '][' → logprob: -15.875027656555176
    7. '(idx' → logprob: -16.75002670288086
    8. 'i' → logprob: -17.37502670288086
    9. ']' → logprob: -18.25002670288086
    10. 'ix' → logprob: -18.25002670288086

Token 167: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015305591747164726
    2. ']+' → logprob: -4.390305519104004
    3. '])' → logprob: -6.515305519104004
    4. ' ]' → logprob: -6.890305519104004
    5. ']
' → logprob: -8.890305519104004
    6. ')' → logprob: -9.515305519104004
    7. ']+=' → logprob: -10.265305519104004
    8. ')]' → logprob: -11.765305519104004
    9. '
' → logprob: -12.140305519104004
    10. ']>' → logprob: -12.515305519104004

Token 168: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5612003207206726
    2. '   ' → logprob: -1.0612003803253174
    3. '<|end|>' → logprob: -3.5612003803253174
    4. '       ' → logprob: -3.8112003803253174
    5. '  
' → logprob: -4.186200141906738
    6. ' ' → logprob: -5.186200141906738
    7. '    
' → logprob: -5.811200141906738
    8. ' 
' → logprob: -5.811200141906738
    9. ',' → logprob: -6.561200141906738
    10. '        
' → logprob: -6.936200141906738

Token 169: ' cnt' (ID: 27340)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19737224280834198
    2. '   ' → logprob: -2.6973721981048584
    3. ' i' → logprob: -3.3223721981048584
    4. ' 
' → logprob: -3.8223721981048584
    5. '<|end|>' → logprob: -3.8223721981048584
    6. ' ' → logprob: -4.6973724365234375
    7. '  
' → logprob: -4.9473724365234375
    8. 'i' → logprob: -5.3223724365234375
    9. '    
' → logprob: -5.4473724365234375
    10. '\n' → logprob: -6.0723724365234375

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09056642651557922
    2. '=' → logprob: -2.465566396713257
    3. '_' → logprob: -7.090566635131836
    4. ' ' → logprob: -7.840566635131836
    5. '[' → logprob: -8.965566635131836
    6. 's' → logprob: -9.340566635131836
    7. '0' → logprob: -9.715566635131836
    8. ',' → logprob: -10.090566635131836
    9. 'w' → logprob: -11.590566635131836
    10. '_idx' → logprob: -12.215566635131836

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1614944338798523
    2. '1' → logprob: -1.911494493484497
    3. 'h' → logprob: -7.911494255065918
    4. ' ' → logprob: -8.036494255065918
    5. 'w' → logprob: -8.036494255065918
    6. 'np' → logprob: -9.036494255065918
    7. '[' → logprob: -9.661494255065918
    8. '-' → logprob: -9.911494255065918
    9. '(' → logprob: -12.286494255065918
    10. '[h' → logprob: -13.161494255065918

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11705981940031052
    2. '1' → logprob: -2.2420597076416016
    3. 'np' → logprob: -6.242059707641602
    4. 'w' → logprob: -6.992059707641602
    5. ' ' → logprob: -7.367059707641602
    6. '[' → logprob: -7.992059707641602
    7. 'h' → logprob: -8.367059707641602
    8. 'len' → logprob: -10.242059707641602
    9. '-' → logprob: -10.742059707641602
    10. ' np' → logprob: -11.242059707641602

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48105987906455994
    2. '<|end|>' → logprob: -1.6060599088668823
    3. ' ' → logprob: -2.9810597896575928
    4. ' 
' → logprob: -3.1060597896575928
    5. '  
' → logprob: -3.8560597896575928
    6. '   ' → logprob: -4.106060028076172
    7. ',' → logprob: -4.356060028076172
    8. ' i' → logprob: -4.606060028076172
    9. ' while' → logprob: -5.106060028076172
    10. '    
' → logprob: -5.606060028076172

Token 174: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6553590893745422
    2. '
' → logprob: -1.9053590297698975
    3. '   ' → logprob: -2.0303590297698975
    4. ' 
' → logprob: -3.0303590297698975
    5. ' ' → logprob: -3.1553590297698975
    6. ' while' → logprob: -3.1553590297698975
    7. 'i' → logprob: -4.030359268188477
    8. ' for' → logprob: -4.405359268188477
    9. '  
' → logprob: -4.905359268188477
    10. '    
' → logprob: -5.030359268188477

Token 175: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.8860321640968323
    2. 'for' → logprob: -1.6360321044921875
    3. ' for' → logprob: -1.8860321044921875
    4. '   ' → logprob: -2.6360321044921875
    5. ' j' → logprob: -2.7610321044921875
    6. 'i' → logprob: -3.0110321044921875
    7. ' i' → logprob: -4.5110321044921875
    8. 'while' → logprob: -4.6360321044921875
    9. 'col' → logprob: -4.7610321044921875
    10. ' col' → logprob: -4.8860321044921875

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286415159702301
    2. '=' → logprob: -2.2378642559051514
    3. ' ' → logprob: -10.61286449432373
    4. ' +=' → logprob: -11.73786449432373
    5. ',' → logprob: -12.48786449432373
    6. '+=' → logprob: -12.86286449432373
    7. ')' → logprob: -13.73786449432373
    8. '  ' → logprob: -14.73786449432373
    9. ' ,' → logprob: -14.98786449432373
    10. '0' → logprob: -15.48786449432373

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08945159614086151
    2. ' ' → logprob: -2.464451551437378
    3. '1' → logprob: -7.589451789855957
    4. ' w' → logprob: -12.464451789855957
    5. 'w' → logprob: -13.589451789855957
    6. '10' → logprob: -16.15195083618164
    7. '2' → logprob: -16.40195083618164
    8. '7' → logprob: -16.52695083618164
    9. ' j' → logprob: -16.58945083618164
    10. ' -' → logprob: -16.58945083618164

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011846343986690044
    2. '1' → logprob: -7.376184463500977
    3. ' ' → logprob: -7.501184463500977
    4. 'w' → logprob: -12.501184463500977
    5. 'i' → logprob: -14.626184463500977
    6. 'idx' → logprob: -15.501184463500977
    7. '   ' → logprob: -15.813684463500977
    8. ' w' → logprob: -15.938684463500977
    9. '-' → logprob: -16.001184463500977
    10. 'j' → logprob: -16.063684463500977

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7631247043609619
    2. '<|end|>' → logprob: -1.138124704360962
    3. '   ' → logprob: -1.763124704360962
    4. ' ' → logprob: -5.013124465942383
    5. ',' → logprob: -5.138124465942383
    6. '    
' → logprob: -5.263124465942383
    7. ' while' → logprob: -5.388124465942383
    8. ' 
' → logprob: -5.388124465942383
    9. '  
' → logprob: -5.513124465942383
    10. '<|end|>' → logprob: -5.888124465942383

Token 180: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5122430920600891
    2. ' while' → logprob: -1.0122430324554443
    3. '
' → logprob: -4.262243270874023
    4. 'j' → logprob: -4.512243270874023
    5. '   ' → logprob: -5.637243270874023
    6. 'w' → logprob: -6.387243270874023
    7. ' j' → logprob: -6.387243270874023
    8. 'for' → logprob: -7.012243270874023
    9. '    ' → logprob: -7.262243270874023
    10. ' ' → logprob: -7.262243270874023

Token 182: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.225467711687088
    2. 'j' → logprob: -1.6004676818847656
    3. '    ' → logprob: -11.600467681884766
    4. ' w' → logprob: -11.600467681884766
    5. ' True' → logprob: -11.975467681884766
    6. 'w' → logprob: -11.975467681884766
    7. 'True' → logprob: -12.475467681884766
    8. ' ' → logprob: -12.600467681884766
    9. '	j' → logprob: -12.850467681884766
    10. '(j' → logprob: -12.850467681884766

Token 183: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04674075171351433
    2. '<' → logprob: -3.671740770339966
    3. '<w' → logprob: -3.921740770339966
    4. ' ' → logprob: -8.171740531921387
    5. '<len' → logprob: -10.046740531921387
    6. 'w' → logprob: -10.421740531921387
    7. '<|end|>' → logprob: -10.671740531921387
    8. ' w' → logprob: -11.921740531921387
    9. '<n' → logprob: -11.921740531921387
    10. '<size' → logprob: -12.046740531921387

Token 184: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.007609824184328318
    2. ' w' → logprob: -4.882609844207764
    3. ' ' → logprob: -13.382609367370605
    4. '   ' → logprob: -13.757609367370605
    5. '<w' → logprob: -15.007609367370605
    6. '
' → logprob: -15.757609367370605
    7. '	w' → logprob: -16.257610321044922
    8. '```' → logprob: -16.632610321044922
    9. 'j' → logprob: -16.757610321044922
    10. '(w' → logprob: -16.882610321044922

Token 185: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6784321069717407
    2. ':' → logprob: -1.1784321069717407
    3. ' and' → logprob: -1.8034321069717407
    4. '   ' → logprob: -5.178431987762451
    5. 'and' → logprob: -5.178431987762451
    6. '-' → logprob: -5.303431987762451
    7. '):
' → logprob: -6.303431987762451
    8. ' -' → logprob: -7.553431987762451
    9. ')' → logprob: -7.803431987762451
    10. '       ' → logprob: -7.928431987762451

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -14.87508487701416
    4. '2' → logprob: -16.875085830688477
    5. '
' → logprob: -17.500085830688477
    6. '<|end|>' → logprob: -17.625085830688477
    7. '```' → logprob: -17.875085830688477
    8. '  ' → logprob: -18.250085830688477
    9. '0' → logprob: -18.625085830688477
    10. '<|end|>' → logprob: -19.062585830688477

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. '
' → logprob: -17.7500057220459
    5. '```' → logprob: -18.2500057220459
    6. '2' → logprob: -18.3750057220459
    7. '  ' → logprob: -19.7500057220459
    8. '۱' → logprob: -20.9375057220459
    9. 'i' → logprob: -20.9375057220459
    10. '１' → logprob: -21.0000057220459

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7354824542999268
    2. ':' → logprob: -0.8604824542999268
    3. ' and' → logprob: -2.3604824542999268
    4. '   ' → logprob: -6.235482215881348
    5. 'and' → logprob: -7.360482215881348
    6. '       ' → logprob: -8.235482215881348
    7. '):
' → logprob: -8.360482215881348
    8. ',' → logprob: -9.235482215881348
    9. ':

' → logprob: -10.235482215881348
    10. ' :
' → logprob: -10.360482215881348

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13040535151958466
    2. '   ' → logprob: -2.6304054260253906
    3. ':' → logprob: -3.8804054260253906
    4. '<|end|>' → logprob: -5.005405426025391
    5. '
' → logprob: -5.255405426025391
    6. '    ' → logprob: -5.505405426025391
    7. ' and' → logprob: -5.755405426025391
    8. ',' → logprob: -5.880405426025391
    9. ':
' → logprob: -6.005405426025391
    10. ' if' → logprob: -7.005405426025391

Token 190: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49655047059059143
    2. 'if' (adapté à ' if') → logprob: -1.246550440788269
    3. '       ' → logprob: -2.7465505599975586
    4. '   ' → logprob: -3.3715505599975586
    5. 'wp' → logprob: -6.746550559997559
    6. 'j' → logprob: -6.871550559997559
    7. '           ' → logprob: -7.121550559997559
    8. '
' → logprob: -7.371550559997559
    9. ' j' → logprob: -7.621550559997559
    10. ' wp' → logprob: -7.871550559997559

Token 191: ' ((' (ID: 3536)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7664011716842651
    2. '(i' → logprob: -0.8914011716842651
    3. ' i' → logprob: -2.3914012908935547
    4. 'i' → logprob: -4.016401290893555
    5. '((' → logprob: -5.016401290893555
    6. ' not' → logprob: -5.391401290893555
    7. '(' → logprob: -6.141401290893555
    8. ' ((' → logprob: -6.641401290893555
    9. '(s' → logprob: -7.641401290893555
    10. '   ' → logprob: -8.516401290893555

Token 192: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005599428550340235
    2. '(i' → logprob: -8.25055980682373
    3. ' i' → logprob: -8.37555980682373
    4. '1' → logprob: -10.25055980682373
    5. '(' → logprob: -10.62555980682373
    6. ' (' → logprob: -11.75055980682373
    7. '   ' → logprob: -15.87555980682373
    8. '((' → logprob: -16.250560760498047
    9. ' ' → logprob: -16.750560760498047
    10. '	i' → logprob: -16.750560760498047

Token 193: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.00633719889447093
    2. ' >>' → logprob: -5.5063371658325195
    3. '&gt' → logprob: -7.1313371658325195
    4. ')' → logprob: -7.5063371658325195
    5. '>' → logprob: -8.00633716583252
    6. ' &' → logprob: -8.13133716583252
    7. '&' → logprob: -8.50633716583252
    8. '>>(' → logprob: -10.50633716583252
    9. '>>&' → logprob: -10.88133716583252
    10. ' ' → logprob: -11.75633716583252

Token 194: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.130576806142926e-05
    2. ' j' → logprob: -10.375031471252441
    3. '```' → logprob: -18.625030517578125
    4. '(j' → logprob: -18.750030517578125
    5. '
' → logprob: -19.000030517578125
    6. '(' → logprob: -19.500030517578125
    7. '	j' → logprob: -19.500030517578125
    8. ')' → logprob: -20.250030517578125
    9. ' ' → logprob: -20.500030517578125
    10. '   ' → logprob: -20.875030517578125

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. ')&' → logprob: -10.37503433227539
    3. ' )' → logprob: -12.62503433227539
    4. '&' → logprob: -16.00003433227539
    5. ']' → logprob: -18.25003433227539
    6. '）' → logprob: -18.37503433227539
    7. '))' → logprob: -18.75003433227539
    8. '&)' → logprob: -18.87503433227539
    9. ')
' → logprob: -19.37503433227539
    10. '1' → logprob: -19.62503433227539

Token 196: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003664404503069818
    2. ')&' → logprob: -8.5003662109375
    3. ' )' → logprob: -9.0003662109375
    4. '&' → logprob: -10.2503662109375
    5. ' &' → logprob: -12.5003662109375
    6. '&)' → logprob: -15.7503662109375
    7. '&amp' → logprob: -15.8753662109375
    8. '）' → logprob: -16.1253662109375
    9. '1' → logprob: -17.7503662109375
    10. ']' → logprob: -18.2503662109375

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '
' → logprob: -17.12537956237793
    4. '   ' → logprob: -17.12537956237793
    5. '１' → logprob: -17.75037956237793
    6. '(' → logprob: -18.00037956237793
    7. ')' → logprob: -18.25037956237793
    8. '

' → logprob: -19.06287956237793
    9. '' → logprob: -19.31287956237793
    10. '۱' → logprob: -19.62537956237793

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '
' → logprob: -16.500158309936523
    4. '

' → logprob: -16.875158309936523
    5. '   ' → logprob: -17.000158309936523
    6. ')' → logprob: -17.750158309936523
    7. '(' → logprob: -18.000158309936523
    8. '１' → logprob: -18.937658309936523
    9. '' → logprob: -19.000158309936523
    10. '0' → logprob: -19.000158309936523

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014301169430837035
    2. '):' → logprob: -7.126430034637451
    3. ')==' → logprob: -8.12643051147461
    4. '):
' → logprob: -8.50143051147461
    5. ' )' → logprob: -9.00143051147461
    6. ' ):' → logprob: -13.87643051147461
    7. ')>' → logprob: -14.12643051147461
    8. '())' → logprob: -15.25143051147461
    9. '):
' → logprob: -15.50143051147461
    10. '）' → logprob: -15.50143051147461

Token 200: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7372849583625793
    2. '==' → logprob: -1.8622848987579346
    3. ':
' → logprob: -1.9872848987579346
    4. ')==' → logprob: -2.3622848987579346
    5. ':' → logprob: -2.4872848987579346
    6. ' ==' → logprob: -3.2372848987579346
    7. '):
' → logprob: -4.737285137176514
    8. '):' → logprob: -6.112285137176514
    9. ' )' → logprob: -8.112284660339355
    10. ' ' → logprob: -8.362284660339355

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003433296224102378
    2. '0' → logprob: -8.500343322753906
    3. ' ' → logprob: -8.875343322753906
    4. '   ' → logprob: -18.875343322753906
    5. '
' → logprob: -20.000343322753906
    6. ' ' → logprob: -20.250343322753906
    7. '>' → logprob: -20.375343322753906
    8. '１' → logprob: -20.500343322753906
    9. '۱' → logprob: -20.500343322753906
    10. '=' → logprob: -20.937843322753906

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024904031306505203
    2. '0' → logprob: -6.002490520477295
    3. ' ' → logprob: -11.127490043640137
    4. '   ' → logprob: -18.377490997314453
    5. '=' → logprob: -19.627490997314453
    6. ')' → logprob: -19.752490997314453
    7. '
' → logprob: -19.877490997314453
    8. '>' → logprob: -20.439990997314453
    9. '<|end|>' → logprob: -20.939990997314453
    10. '

' → logprob: -21.189990997314453

Token 203: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06395217031240463
    2. ':' → logprob: -2.8139522075653076
    3. '):
' → logprob: -6.9389519691467285
    4. ' and' → logprob: -7.3139519691467285
    5. ' :
' → logprob: -8.563952445983887
    6. '       ' → logprob: -10.063952445983887
    7. '   ' → logprob: -10.688952445983887
    8. ')' → logprob: -10.813952445983887
    9. ':
' → logprob: -10.938952445983887
    10. '):' → logprob: -10.938952445983887

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17239587008953094
    2. ':
' → logprob: -2.922395944595337
    3. '       ' → logprob: -3.047395944595337
    4. '
' → logprob: -4.172395706176758
    5. '   ' → logprob: -4.672395706176758
    6. 'cnt' → logprob: -4.797395706176758
    7. ' and' → logprob: -5.297395706176758
    8. ':' → logprob: -5.297395706176758
    9. '):
' → logprob: -5.297395706176758
    10. 'w' → logprob: -6.672395706176758

Token 205: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3604583740234375
    2. 'for' → logprob: -1.3604583740234375
    3. 'cnt' (adapté à ' cnt') → logprob: -1.6104583740234375
    4. '           ' → logprob: -1.8604583740234375
    5. 'w' → logprob: -3.3604583740234375
    6. '       ' → logprob: -3.6104583740234375
    7. ' for' → logprob: -3.7354583740234375
    8. 'wp' → logprob: -4.1104583740234375
    9. '
' → logprob: -4.6104583740234375
    10. 'j' → logprob: -5.2354583740234375

Token 206: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31328505277633667
    2. ' +=' → logprob: -1.3132851123809814
    3. '+' → logprob: -10.938284873962402
    4. '=' → logprob: -12.813284873962402
    5. ' ' → logprob: -14.188284873962402
    6. ']+=' → logprob: -14.313284873962402
    7. '   ' → logprob: -14.938284873962402
    8. ',' → logprob: -15.063284873962402
    9. '+=(' → logprob: -15.063284873962402
    10. ' =' → logprob: -15.938284873962402

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9650025428272784e-05
    2. ' ' → logprob: -10.750040054321289
    3. 'w' → logprob: -11.000040054321289
    4. 'np' → logprob: -14.250040054321289
    5. 's' → logprob: -15.375040054321289
    6. '
' → logprob: -15.625040054321289
    7. 'wp' → logprob: -16.12504005432129
    8. ' w' → logprob: -16.62504005432129
    9. '0' → logprob: -17.00004005432129
    10. '   ' → logprob: -17.50004005432129

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. 'w' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.125016212463379
    4. 'np' → logprob: -15.375016212463379
    5. 's' → logprob: -15.750016212463379
    6. '
' → logprob: -15.875016212463379
    7. '0' → logprob: -16.375017166137695
    8. '   ' → logprob: -16.500017166137695
    9. 'wp' → logprob: -17.000017166137695
    10. '2' → logprob: -17.500017166137695

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07557472586631775
    2. '           ' → logprob: -2.8255746364593506
    3. '       ' → logprob: -4.82557487487793
    4. ' 
' → logprob: -6.70057487487793
    5. '  
' → logprob: -6.95057487487793
    6. '
' → logprob: -6.95057487487793
    7. '   ' → logprob: -7.32557487487793
    8. ',' → logprob: -8.20057487487793
    9. '    
' → logprob: -8.32557487487793
    10. '   
' → logprob: -8.45057487487793

Token 210: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1899120956659317
    2. '           ' → logprob: -1.9399120807647705
    3. '       ' → logprob: -4.31491231918335
    4. '    
' → logprob: -5.68991231918335
    5. ' 
' → logprob: -5.68991231918335
    6. '   ' → logprob: -6.43991231918335
    7. '        
' → logprob: -6.68991231918335
    8. '  
' → logprob: -6.81491231918335
    9. '            
' → logprob: -7.06491231918335
    10. '
' → logprob: -7.43991231918335

Token 211: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16829532384872437
    2. '   ' → logprob: -2.918295383453369
    3. 'j' → logprob: -3.043295383453369
    4. '           ' → logprob: -3.793295383453369
    5. ' for' → logprob: -4.793295383453369
    6. '
' → logprob: -4.793295383453369
    7. 'for' (adapté à ' for') → logprob: -5.293295383453369
    8. ' j' → logprob: -5.418295383453369
    9. ' else' → logprob: -7.043295383453369
    10. 'else' → logprob: -7.293295383453369

Token 212: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5809541940689087
    2. 'idx' → logprob: -0.8309541940689087
    3. 'k' → logprob: -5.705954074859619
    4. ' k' → logprob: -7.830954074859619
    5. ' col' → logprob: -7.955954074859619
    6. 'x' → logprob: -7.955954074859619
    7. 'col' → logprob: -8.080954551696777
    8. 'l' → logprob: -9.830954551696777
    9. ' x' → logprob: -10.205954551696777
    10. 'p' → logprob: -11.080954551696777

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020690077915787697
    2. 'in' → logprob: -3.8956899642944336
    3. ' ' → logprob: -9.645689964294434
    4. '   ' → logprob: -10.270689964294434
    5. '    ' → logprob: -11.395689964294434
    6. '	in' → logprob: -11.520689964294434
    7. 'range' → logprob: -12.520689964294434
    8. '       ' → logprob: -12.645689964294434
    9. '        ' → logprob: -13.083189964294434
    10. ' range' → logprob: -13.145689964294434

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750952497124672
    2. ' range' → logprob: -3.5297510623931885
    3. '(range' → logprob: -15.65475082397461
    4. ' ' → logprob: -16.15475082397461
    5. '   ' → logprob: -16.65475082397461
    6. '	range' → logprob: -17.15475082397461
    7. '[' → logprob: -17.27975082397461
    8. '    ' → logprob: -17.65475082397461
    9. '0' → logprob: -18.02975082397461
    10. '  ' → logprob: -18.40475082397461

Token 215: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02366236038506031
    2. '(w' → logprob: -3.7736623287200928
    3. ' w' → logprob: -8.023662567138672
    4. 'j' → logprob: -10.023662567138672
    5. 'h' → logprob: -10.773662567138672
    6. '(' → logprob: -11.773662567138672
    7. '(j' → logprob: -12.648662567138672
    8. '(h' → logprob: -12.898662567138672
    9. 'wp' → logprob: -13.148662567138672
    10. 'i' → logprob: -13.148662567138672

Token 216: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1617364138364792
    2. '):' → logprob: -1.9117363691329956
    3. '       ' → logprob: -7.161736488342285
    4. '   ' → logprob: -8.161736488342285
    5. '           ' → logprob: -8.786736488342285
    6. '):
' → logprob: -8.911736488342285
    7. ' ):
' → logprob: -10.286736488342285
    8. ')' → logprob: -10.786736488342285
    9. '+' → logprob: -10.911736488342285
    10. '):

' → logprob: -11.036736488342285

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004990389570593834
    2. '       ' → logprob: -5.504990577697754
    3. '   ' → logprob: -8.254990577697754
    4. '               ' → logprob: -8.379990577697754
    5. 'wp' → logprob: -8.879990577697754
    6. '```' → logprob: -9.004990577697754
    7. ' wp' → logprob: -9.629990577697754
    8. ',' → logprob: -10.754990577697754
    9. '	       ' → logprob: -10.754990577697754
    10. ' w' → logprob: -12.004990577697754

Token 218: ' wp' (ID: 27047)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' (adapté à ' wp') → logprob: -0.017499791458249092
    2. '           ' → logprob: -4.392499923706055
    3. '               ' → logprob: -5.892499923706055
    4. ' wp' → logprob: -6.767499923706055
    5. 'if' → logprob: -8.017499923706055
    6. '   ' → logprob: -8.142499923706055
    7. '       ' → logprob: -9.142499923706055
    8. ' ' → logprob: -9.142499923706055
    9. '	wp' → logprob: -9.392499923706055
    10. 'w' → logprob: -9.517499923706055

Token 219: '[cnt' (ID: 157792)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007981925155036151
    2. '[cnt' → logprob: -8.000798225402832
    3. '[' → logprob: -8.375798225402832
    4. '[i' → logprob: -9.375798225402832
    5. '[c' → logprob: -10.250798225402832
    6. '][' → logprob: -10.875798225402832
    7. '[w' → logprob: -11.000798225402832
    8. 'j' → logprob: -11.125798225402832
    9. '[np' → logprob: -11.625798225402832
    10. ' [' → logprob: -11.750798225402832

Token 220: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.913265239447355e-05
    2. ' ][' → logprob: -9.875099182128906
    3. '[idx' → logprob: -10.625099182128906
    4. ']' → logprob: -11.500099182128906
    5. ')][' → logprob: -12.500099182128906
    6. '   ' → logprob: -13.125099182128906
    7. '
' → logprob: -13.500099182128906
    8. ')[' → logprob: -13.750099182128906
    9. '"][' → logprob: -14.375099182128906
    10. ',' → logprob: -14.500099182128906

Token 221: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -9.372294698550832e-06
    2. ' idx' → logprob: -11.625009536743164
    3. '	idx' → logprob: -15.625009536743164
    4. 'j' → logprob: -17.000009536743164
    5. '[idx' → logprob: -17.250009536743164
    6. ']' → logprob: -17.375009536743164
    7. 'index' → logprob: -17.375009536743164
    8. 'i' → logprob: -18.000009536743164
    9. '(idx' → logprob: -18.000009536743164
    10. '_idx' → logprob: -18.125009536743164

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05738111212849617
    2. ']+=' → logprob: -2.9323811531066895
    3. '+=' → logprob: -6.1823811531066895
    4. ')' → logprob: -7.9323811531066895
    5. ' +=' → logprob: -10.557380676269531
    6. ']+' → logprob: -10.807380676269531
    7. '+' → logprob: -11.307380676269531
    8. ' ]' → logprob: -11.932380676269531
    9. '+]' → logprob: -13.057380676269531
    10. ']=' → logprob: -13.557380676269531

Token 223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0068289171904325485
    2. ' +=' → logprob: -5.006828784942627
    3. ']+=' → logprob: -9.506829261779785
    4. '=' → logprob: -10.256829261779785
    5. '+' → logprob: -13.006829261779785
    6. '   ' → logprob: -13.881829261779785
    7. '+=(' → logprob: -14.506829261779785
    8. '
' → logprob: -15.756829261779785
    9. ')' → logprob: -15.881829261779785
    10. '    ' → logprob: -16.63182830810547

Token 224: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048605985939502716
    2. ' s' → logprob: -3.0486059188842773
    3. '   ' → logprob: -11.923605918884277
    4. 'np' → logprob: -12.673605918884277
    5. ' ' → logprob: -12.798605918884277
    6. 'wp' → logprob: -13.048605918884277
    7. '	s' → logprob: -13.673605918884277
    8. ' lines' → logprob: -14.673605918884277
    9. 'lines' → logprob: -15.048605918884277
    10. ' wp' → logprob: -15.173605918884277

Token 225: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.016046568751335144
    2. 'j' → logprob: -4.141046524047852
    3. '[' → logprob: -11.766046524047852
    4. '[
' → logprob: -13.891046524047852
    5. ' j' → logprob: -14.016046524047852
    6. '	j' → logprob: -14.391046524047852
    7. '(j' → logprob: -14.516046524047852
    8. '   ' → logprob: -14.766046524047852
    9. '[i' → logprob: -14.891046524047852
    10. '```' → logprob: -14.891046524047852

Token 226: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016991863027215004
    2. ' +' → logprob: -4.141992092132568
    3. '][' → logprob: -7.016992092132568
    4. '   ' → logprob: -10.51699161529541
    5. '1' → logprob: -11.26699161529541
    6. ' ' → logprob: -12.64199161529541
    7. '+
' → logprob: -12.76699161529541
    8. '```' → logprob: -13.01699161529541
    9. '＋' → logprob: -13.26699161529541
    10. '[' → logprob: -13.39199161529541

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013011827832087874
    2. ' ' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.250129699707031
    4. '+' → logprob: -14.250129699707031
    5. '```' → logprob: -14.625129699707031
    6. '
' → logprob: -15.000129699707031
    7. '  ' → logprob: -15.812629699707031
    8. '[' → logprob: -16.56262969970703
    9. '`' → logprob: -17.06262969970703
    10. '１' → logprob: -17.37512969970703

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.750003814697266
    4. '```' → logprob: -15.375003814697266
    5. '+' → logprob: -16.500003814697266
    6. '
' → logprob: -16.687503814697266
    7. '[' → logprob: -18.062503814697266
    8. '

' → logprob: -18.312503814697266
    9. '  ' → logprob: -18.312503814697266
    10. '<|end|>' → logprob: -18.562503814697266

Token 229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.481510692741722e-05
    2. ']' → logprob: -10.00007438659668
    3. ' ][' → logprob: -11.25007438659668
    4. '[idx' → logprob: -11.87507438659668
    5. '   ' → logprob: -12.50007438659668
    6. ',' → logprob: -14.12507438659668
    7. '       ' → logprob: -14.12507438659668
    8. ')][' → logprob: -14.37507438659668
    9. ''][' → logprob: -14.50007438659668
    10. '           ' → logprob: -14.50007438659668

Token 230: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00033832306507974863
    2. ' idx' → logprob: -8.000338554382324
    3. '	idx' → logprob: -13.875338554382324
    4. '
' → logprob: -14.125338554382324
    5. '[idx' → logprob: -14.750338554382324
    6. '(idx' → logprob: -15.250338554382324
    7. '   ' → logprob: -15.750338554382324
    8. '][' → logprob: -16.375337600708008
    9. 'id' → logprob: -16.375337600708008
    10. '_idx' → logprob: -16.875337600708008

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005402369424700737
    2. ']
' → logprob: -5.880402565002441
    3. ')' → logprob: -6.255402565002441
    4. '       ' → logprob: -8.255402565002441
    5. ' ]' → logprob: -8.505402565002441
    6. '   ' → logprob: -8.755402565002441
    7. ')
' → logprob: -11.005402565002441
    8. '])' → logprob: -11.755402565002441
    9. '
' → logprob: -12.005402565002441
    10. '           ' → logprob: -12.255402565002441

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015296435914933681
    2. 'j' → logprob: -4.765296459197998
    3. '   ' → logprob: -5.390296459197998
    4. '
' → logprob: -6.515296459197998
    5. '	' → logprob: -8.51529598236084
    6. ' j' → logprob: -9.01529598236084
    7. '	j' → logprob: -9.26529598236084
    8. '           ' → logprob: -10.14029598236084
    9. '\
' → logprob: -10.76529598236084
    10. 'n' → logprob: -10.89029598236084

Token 233: ' j' (ID: 441)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05988207086920738
    2. 'j' (adapté à ' j') → logprob: -3.184882164001465
    3. '       ' → logprob: -5.434882164001465
    4. ' j' → logprob: -5.434882164001465
    5. ' 
' → logprob: -5.934882164001465
    6. '\n' → logprob: -6.559882164001465
    7. '   ' → logprob: -6.934882164001465
    8. '
' → logprob: -7.184882164001465
    9. '	j' → logprob: -7.434882164001465
    10. '\
' → logprob: -7.559882164001465

Token 234: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009806028567254543
    2. ' +=' → logprob: -4.759806156158447
    3. '=' → logprob: -6.759806156158447
    4. '+' → logprob: -10.384805679321289
    5. ' =' → logprob: -15.259805679321289
    6. '++' → logprob: -16.50980567932129
    7. ']+=' → logprob: -17.13480567932129
    8. '1' → logprob: -17.25980567932129
    9. '+="' → logprob: -17.75980567932129
    10. ')' → logprob: -17.88480567932129

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '１' → logprob: -20.500024795532227
    4. '   ' → logprob: -20.625024795532227
    5. '```' → logprob: -20.750024795532227
    6. '۱' → logprob: -21.750024795532227
    7. '
' → logprob: -22.562524795532227
    8. '  ' → logprob: -22.625024795532227
    9. '0' → logprob: -22.750024795532227
    10. ' ' → logprob: -22.937524795532227

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '１' → logprob: -18.875003814697266
    4. '
' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '```' → logprob: -20.375003814697266
    7. '۱' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.562503814697266
    9. '0' → logprob: -22.250003814697266
    10. '১' → logprob: -22.750003814697266

Token 237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010085639543831348
    2. '
' → logprob: -4.635085582733154
    3. '    
' → logprob: -8.385086059570312
    4. '  
' → logprob: -11.260086059570312
    5. '
' → logprob: -11.260086059570312
    6. ' j' → logprob: -11.385086059570312
    7. ' i' → logprob: -11.885086059570312
    8. ' 
' → logprob: -11.885086059570312
    9. 'j' → logprob: -12.010086059570312
    10. '#' → logprob: -12.260086059570312

Token 238: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08313114196062088
    2. '   ' → logprob: -2.5831310749053955
    3. '
' → logprob: -6.333131313323975
    4. '    
' → logprob: -6.833131313323975
    5. ' i' → logprob: -8.583130836486816
    6. ' 
' → logprob: -8.583130836486816
    7. 'cnt' → logprob: -8.708130836486816
    8. '  
' → logprob: -8.833130836486816
    9. 'k' → logprob: -9.208130836486816
    10. 'j' → logprob: -9.333130836486816

Token 239: ' flag' (ID: 9641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.803538978099823
    2. 'k' → logprob: -1.4285390377044678
    3. 'j' → logprob: -2.0535390377044678
    4. ' k' → logprob: -2.6785390377044678
    5. ' j' → logprob: -3.0535390377044678
    6. '
' → logprob: -4.678538799285889
    7. 'w' → logprob: -4.803538799285889
    8. ' for' → logprob: -4.928538799285889
    9. 'cnt' → logprob: -4.928538799285889
    10. 'i' → logprob: -5.178538799285889

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815848983824253
    2. '=' → logprob: -4.018158435821533
    3. ' ' → logprob: -11.768158912658691
    4. '_' → logprob: -15.143158912658691
    5. '=False' → logprob: -15.518158912658691
    6. ',' → logprob: -15.768158912658691
    7. 's' → logprob: -16.143157958984375
    8. ')' → logprob: -17.518157958984375
    9. ' =
' → logprob: -17.768157958984375
    10. '0' → logprob: -17.768157958984375

Token 241: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3722616732120514
    2. 'True' → logprob: -1.497261643409729
    3. ' False' → logprob: -2.8722617626190186
    4. ' True' → logprob: -3.4972617626190186
    5. '0' → logprob: -8.622262001037598
    6. ' ' → logprob: -10.247262001037598
    7. '(False' → logprob: -12.247262001037598
    8. '1' → logprob: -12.372262001037598
    9. '(True' → logprob: -12.747262001037598
    10. '   ' → logprob: -13.122262001037598

Token 242: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10026652365922928
    2. 'True' → logprob: -2.350266456604004
    3. '0' → logprob: -9.850266456604004
    4. ' False' → logprob: -12.100266456604004
    5. ' True' → logprob: -14.225266456604004
    6. '(False' → logprob: -14.725266456604004
    7. '1' → logprob: -15.475266456604004
    8. '(True' → logprob: -15.975266456604004
    9. '   ' → logprob: -16.85026741027832
    10. 'F' → logprob: -17.22526741027832

Token 243: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07276667654514313
    2. '   ' → logprob: -2.8227667808532715
    3. '    
' → logprob: -4.8227667808532715
    4. 'j' → logprob: -7.5727667808532715
    5. ' 
' → logprob: -7.5727667808532715
    6. ',' → logprob: -7.8227667808532715
    7. '  
' → logprob: -7.8227667808532715
    8. '   
' → logprob: -7.9477667808532715
    9. ' for' → logprob: -9.572766304016113
    10. '     
' → logprob: -9.822766304016113

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39923763275146484
    2. '
' → logprob: -1.3992376327514648
    3. ' for' → logprob: -3.274237632751465
    4. 'j' → logprob: -4.149237632751465
    5. 'for' → logprob: -4.524237632751465
    6. ' j' → logprob: -4.774237632751465
    7. '    
' → logprob: -6.149237632751465
    8. ' col' → logprob: -6.524237632751465
    9. ',' → logprob: -7.274237632751465
    10. ' while' → logprob: -7.524237632751465

Token 245: ' idx' (ID: 14016)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.612396478652954
    2. 'cnt' → logprob: -1.737396478652954
    3. 'cur' → logprob: -2.487396478652954
    4. 'for' → logprob: -2.612396478652954
    5. 'j' → logprob: -2.987396478652954
    6. 'current' → logprob: -3.487396478652954
    7. 'col' → logprob: -3.487396478652954
    8. 'tmp' → logprob: -3.487396478652954
    9. 'cut' → logprob: -3.862396478652954
    10. 'pos' → logprob: -3.862396478652954

Token 246: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009969505481421947
    2. '=' → logprob: -4.634969711303711
    3. ' ' → logprob: -8.759969711303711
    4. 'w' → logprob: -10.259969711303711
    5. ',' → logprob: -12.134969711303711
    6. 's' → logprob: -12.509969711303711
    7. 'x' → logprob: -13.259969711303711
    8. '_' → logprob: -13.259969711303711
    9. '2' → logprob: -13.759969711303711
    10. ')' → logprob: -14.134969711303711

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023252932354807854
    2. '=' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.523252487182617
    4. ',' → logprob: -12.648252487182617
    5. ' ,' → logprob: -15.898252487182617
    6. '  ' → logprob: -16.273252487182617
    7. 'x' → logprob: -16.648252487182617
    8. 'w' → logprob: -16.773252487182617
    9. '   ' → logprob: -16.898252487182617
    10. '0' → logprob: -17.273252487182617

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03493606299161911
    2. ' ' → logprob: -3.40993595123291
    3. 'cnt' → logprob: -7.53493595123291
    4. '1' → logprob: -8.28493595123291
    5. '-' → logprob: -8.40993595123291
    6. ' -' → logprob: -9.40993595123291
    7. 'w' → logprob: -9.40993595123291
    8. ' cnt' → logprob: -9.65993595123291
    9. ' w' → logprob: -11.53493595123291
    10. '[' → logprob: -12.03493595123291

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002388852648437023
    2. '-' → logprob: -6.502388954162598
    3. 'cnt' → logprob: -7.627388954162598
    4. '1' → logprob: -8.502388954162598
    5. 'w' → logprob: -9.752388954162598
    6. ' ' → logprob: -10.252388954162598
    7. 'h' → logprob: -11.002388954162598
    8. '[' → logprob: -11.127388954162598
    9. 'i' → logprob: -11.377388954162598
    10. 'len' → logprob: -11.627388954162598

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5949549078941345
    2. ' while' → logprob: -1.4699549674987793
    3. 'while' → logprob: -1.7199549674987793
    4. '   ' → logprob: -3.5949549674987793
    5. ' 
' → logprob: -4.719954967498779
    6. '  
' → logprob: -7.094954967498779
    7. ',' → logprob: -7.719954967498779
    8. '    
' → logprob: -7.844954967498779
    9. ' for' → logprob: -8.219954490661621
    10. '<|end|>' → logprob: -8.344954490661621

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10841629654169083
    2. ' while' → logprob: -3.2334163188934326
    3. '
' → logprob: -3.3584163188934326
    4. 'while' → logprob: -3.7334163188934326
    5. '    
' → logprob: -5.8584160804748535
    6. ',' → logprob: -7.8584160804748535
    7. '  
' → logprob: -8.608416557312012
    8. ' 
' → logprob: -8.983416557312012
    9. 'for' → logprob: -9.108416557312012
    10. ' for' → logprob: -9.108416557312012

Token 252: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11482786387205124
    2. ' while' → logprob: -2.739827871322632
    3. 'cnt' → logprob: -4.114827632904053
    4. 'for' → logprob: -4.614827632904053
    5. 'current' → logprob: -5.864827632904053
    6. 'tmp' → logprob: -6.239827632904053
    7. 'ans' → logprob: -6.364827632904053
    8. 'curr' → logprob: -6.739827632904053
    9. 'cur' → logprob: -6.864827632904053
    10. 'j' → logprob: -6.864827632904053

Token 253: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06198718398809433
    2. ' idx' → logprob: -2.8119871616363525
    3. 'w' → logprob: -11.311986923217773
    4. '(idx' → logprob: -12.561986923217773
    5. ' w' → logprob: -13.811986923217773
    6. '	idx' → logprob: -13.936986923217773
    7. ' True' → logprob: -14.061986923217773
    8. 'True' → logprob: -14.811986923217773
    9. 'index' → logprob: -15.311986923217773
    10. 'flag' → logprob: -15.936986923217773

Token 254: '2' (ID: 17)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6474730372428894
    2. '2' → logprob: -0.8974730372428894
    3. '<w' → logprob: -2.897473096847534
    4. '<' → logprob: -4.397472858428955
    5. 'w' → logprob: -7.272472858428955
    6. ' w' → logprob: -7.897472858428955
    7. ' ' → logprob: -8.397473335266113
    8. '(w' → logprob: -10.397473335266113
    9. '   ' → logprob: -10.397473335266113
    10. ' idx' → logprob: -10.522473335266113

Token 255: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014295956119894981
    2. '<' → logprob: -4.889296054840088
    3. '<w' → logprob: -5.014296054840088
    4. 'w' → logprob: -11.01429557800293
    5. ' w' → logprob: -12.38929557800293
    6. ' ' → logprob: -12.88929557800293
    7. '<len' → logprob: -14.13929557800293
    8. '<n' → logprob: -15.38929557800293
    9. ' <
' → logprob: -16.13929557800293
    10. '<t' → logprob: -16.26429557800293

Token 256: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024764856789261103
    2. ' w' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.252476692199707
    4. ' ' → logprob: -15.627476692199707
    5. '
' → logprob: -17.75247573852539
    6. '  ' → logprob: -18.12747573852539
    7. '<w' → logprob: -18.87747573852539
    8. '	w' → logprob: -19.00247573852539
    9. '(w' → logprob: -19.37747573852539
    10. '    ' → logprob: -19.62747573852539

Token 257: ' and' (ID: 326)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3861042559146881
    2. '   ' → logprob: -1.8861042261123657
    3. ' -' → logprob: -2.5111043453216553
    4. 'w' → logprob: -3.0111043453216553
    5. '
' → logprob: -4.636104106903076
    6. '       ' → logprob: -4.761104106903076
    7. ' and' → logprob: -5.761104106903076
    8. '1' → logprob: -5.761104106903076
    9. ' ' → logprob: -5.886104106903076
    10. ' w' → logprob: -6.261104106903076

Token 258: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.08182253688573837
    2. 'idx' → logprob: -2.706822633743286
    3. 'wp' → logprob: -5.581822395324707
    4. 'w' → logprob: -6.331822395324707
    5. 'True' → logprob: -6.331822395324707
    6. 'not' → logprob: -6.706822395324707
    7. 'cnt' → logprob: -6.706822395324707
    8. ' flag' → logprob: -7.081822395324707
    9. '(flag' → logprob: -8.456822395324707
    10. 'j' → logprob: -8.581822395324707

Token 259: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869155943393707
    2. ' ==' → logprob: -1.1369155645370483
    3. '==
' → logprob: -11.26191520690918
    4. ' ' → logprob: -11.38691520690918
    5. '=' → logprob: -11.76191520690918
    6. '!=' → logprob: -12.51191520690918
    7. ' !=' → logprob: -13.01191520690918
    8. '<=' → logprob: -14.01191520690918
    9. '[' → logprob: -14.13691520690918
    10. '<' → logprob: -14.38691520690918

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012511652894318104
    2. ' ' → logprob: -4.387511730194092
    3. 'False' → logprob: -13.887511253356934
    4. ' False' → logprob: -15.262511253356934
    5. '   ' → logprob: -15.512511253356934
    6. '1' → logprob: -15.637511253356934
    7. '=' → logprob: -15.762511253356934
    8. ' ' → logprob: -15.825011253356934
    9. '	' → logprob: -16.26251220703125
    10. '
' → logprob: -17.20001220703125

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'False' → logprob: -16.25002098083496
    4. '1' → logprob: -16.75002098083496
    5. '   ' → logprob: -18.12502098083496
    6. '=' → logprob: -18.62502098083496
    7. '
' → logprob: -19.31252098083496
    8. '	' → logprob: -19.37502098083496
    9. '۰' → logprob: -19.37502098083496
    10. ' ' → logprob: -19.75002098083496

Token 262: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20374418795108795
    2. ':' → logprob: -1.7037441730499268
    3. ' and' → logprob: -6.453744411468506
    4. ' :
' → logprob: -7.703744411468506
    5. '   ' → logprob: -8.453743934631348
    6. '):
' → logprob: -10.453743934631348
    7. ' :' → logprob: -10.828743934631348
    8. ':

' → logprob: -10.953743934631348
    9. 'and' → logprob: -11.328743934631348
    10. ':
' → logprob: -12.328743934631348

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20504029095172882
    2. '   ' → logprob: -2.080040216445923
    3. 'idx' → logprob: -3.330040216445923
    4. ' idx' → logprob: -5.080040454864502
    5. 'w' → logprob: -5.455040454864502
    6. ' w' → logprob: -5.455040454864502
    7. ' for' → logprob: -6.205040454864502
    8. 'j' → logprob: -6.455040454864502
    9. '
' → logprob: -7.205040454864502
    10. 'for' → logprob: -7.205040454864502

Token 264: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.19739602506160736
    2. '   ' → logprob: -2.9473960399627686
    3. '       ' → logprob: -3.6973960399627686
    4. 'l' → logprob: -4.1973958015441895
    5. 'j' → logprob: -4.4473958015441895
    6. 'for' → logprob: -4.6973958015441895
    7. 'sum' → logprob: -4.8223958015441895
    8. '           ' → logprob: -4.9473958015441895
    9. ' idx' → logprob: -5.0723958015441895
    10. 'col' → logprob: -5.0723958015441895

Token 265: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031890018726699054
    2. '=' → logprob: -9.00031852722168
    3. ' =' → logprob: -9.00031852722168
    4. ' ' → logprob: -11.12531852722168
    5. 'idx' → logprob: -11.50031852722168
    6. '3' → logprob: -11.87531852722168
    7. '1' → logprob: -12.00031852722168
    8. ' +=' → logprob: -12.25031852722168
    9. '+=' → logprob: -12.37531852722168
    10. '   ' → logprob: -12.37531852722168

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20156224071979523
    2. '=' → logprob: -1.7015622854232788
    3. ' ' → logprob: -9.32656192779541
    4. '   ' → logprob: -10.70156192779541
    5. '    ' → logprob: -11.07656192779541
    6. ',' → logprob: -12.20156192779541
    7. '  ' → logprob: -12.70156192779541
    8. 'w' → logprob: -12.95156192779541
    9. '0' → logprob: -13.20156192779541
    10. ')' → logprob: -13.32656192779541

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007295898394659162
    2. ' ' → logprob: -7.250729560852051
    3. 'idx' → logprob: -11.37572956085205
    4. '1' → logprob: -11.87572956085205
    5. ' idx' → logprob: -14.25072956085205
    6. '   ' → logprob: -15.37572956085205
    7. 'w' → logprob: -15.62572956085205
    8. '       ' → logprob: -17.063230514526367
    9. '  ' → logprob: -17.188230514526367
    10. '-' → logprob: -17.500730514526367

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00103042705450207
    2. 'idx' → logprob: -7.001030445098877
    3. ' ' → logprob: -9.376029968261719
    4. '1' → logprob: -10.876029968261719
    5. 'w' → logprob: -11.626029968261719
    6. ' idx' → logprob: -12.376029968261719
    7. 'wp' → logprob: -14.501029968261719
    8. '   ' → logprob: -15.376029968261719
    9. '(idx' → logprob: -15.938529968261719
    10. '-' → logprob: -16.06352996826172

Token 269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9847173094749451
    2. '   ' → logprob: -1.2347173690795898
    3. '<|end|>' → logprob: -1.7347173690795898
    4. '
' → logprob: -2.35971736907959
    5. ' while' → logprob: -3.35971736907959
    6. 'while' → logprob: -4.98471736907959
    7. ',' → logprob: -5.10971736907959
    8. '	while' → logprob: -5.48471736907959
    9. '<|end|>' → logprob: -5.60971736907959
    10. ' ' → logprob: -6.48471736907959

Token 270: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8197306394577026
    2. 'while' → logprob: -0.9447306394577026
    3. '       ' → logprob: -1.9447306394577026
    4. ' and' → logprob: -4.194730758666992
    5. '<|end|>' → logprob: -5.819730758666992
    6. '	while' → logprob: -6.069730758666992
    7. '   ' → logprob: -6.194730758666992
    8. '
' → logprob: -6.569730758666992
    9. 'idx' → logprob: -7.194730758666992
    10. ' idx' → logprob: -7.319730758666992

Token 271: ' while' (ID: 2049)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.29776209592819214
    2. 'while' (adapté à ' while') → logprob: -1.672762155532837
    3. ' idx' → logprob: -3.422762155532837
    4. ' while' → logprob: -3.547762155532837
    5. 'w' → logprob: -5.672761917114258
    6. '       ' → logprob: -6.047761917114258
    7. '           ' → logprob: -6.172761917114258
    8. ' w' → logprob: -8.172761917114258
    9. 'flag' → logprob: -10.172761917114258
    10. '   ' → logprob: -10.172761917114258

Token 272: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.038089569658041
    2. ' idx' → logprob: -3.2880895137786865
    3. 'w' → logprob: -10.288089752197266
    4. '(idx' → logprob: -11.413089752197266
    5. ' w' → logprob: -13.538089752197266
    6. '	idx' → logprob: -13.663089752197266
    7. 'True' → logprob: -16.163089752197266
    8. 'wp' → logprob: -16.663089752197266
    9. ' True' → logprob: -16.663089752197266
    10. '_idx' → logprob: -16.663089752197266

Token 273: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12700875103473663
    2. '3' → logprob: -2.1270086765289307
    3. '<' → logprob: -9.752008438110352
    4. '```' → logprob: -11.627008438110352
    5. '[' → logprob: -12.502008438110352
    6. ' <' → logprob: -12.877008438110352
    7. '+' → logprob: -13.127008438110352
    8. ' ' → logprob: -13.502008438110352
    9. '   ' → logprob: -15.252008438110352
    10. '[idx' → logprob: -15.252008438110352

Token 274: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04580690711736679
    2. '<' → logprob: -3.170806884765625
    3. '<w' → logprob: -5.920806884765625
    4. 'w' → logprob: -9.545806884765625
    5. '<n' → logprob: -11.670806884765625
    6. '<|end|>' → logprob: -11.670806884765625
    7. '<h' → logprob: -11.920806884765625
    8. '<len' → logprob: -12.170806884765625
    9. ' ' → logprob: -12.920806884765625
    10. '<W' → logprob: -13.295806884765625

Token 275: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00026777281891554594
    2. ' w' → logprob: -8.25026798248291
    3. 'len' → logprob: -12.87526798248291
    4. '   ' → logprob: -13.62526798248291
    5. ' ' → logprob: -14.37526798248291
    6. 'h' → logprob: -14.37526798248291
    7. '(w' → logprob: -14.37526798248291
    8. 'k' → logprob: -15.12526798248291
    9. '
' → logprob: -15.37526798248291
    10. 'j' → logprob: -16.625267028808594

Token 276: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6436898708343506
    2. ' and' → logprob: -0.8936898708343506
    3. ':' → logprob: -3.0186898708343506
    4. 'and' → logprob: -4.14369010925293
    5. '       ' → logprob: -7.89369010925293
    6. '   ' → logprob: -8.76869010925293
    7. '           ' → logprob: -9.01869010925293
    8. ':

' → logprob: -10.51869010925293
    9. ' :
' → logprob: -10.64369010925293
    10. '):
' → logprob: -10.89369010925293

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018627453595399857
    2. ' if' → logprob: -4.143627643585205
    3. 'if' → logprob: -6.393627643585205
    4. ',' → logprob: -8.393627166748047
    5. '       ' → logprob: -8.643627166748047
    6. ':
' → logprob: -8.768627166748047
    7. '          ' → logprob: -10.268627166748047
    8. '<|end|>' → logprob: -10.268627166748047
    9. '	       ' → logprob: -10.393627166748047
    10. '```' → logprob: -10.393627166748047

Token 278: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10638003051280975
    2. 'if' (adapté à ' if') → logprob: -2.606379985809326
    3. '           ' → logprob: -3.731379985809326
    4. '               ' → logprob: -5.981379985809326
    5. ' ' → logprob: -8.731380462646484
    6. 'wp' → logprob: -9.356380462646484
    7. ' wp' → logprob: -9.606380462646484
    8. ' ' → logprob: -10.106380462646484
    9. '            ' → logprob: -10.231380462646484
    10. ',' → logprob: -10.231380462646484

Token 279: ' wp' (ID: 27047)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' → logprob: -0.01821116730570793
    2. ' wp' → logprob: -4.018211364746094
    3. '(w' → logprob: -10.643211364746094
    4. '	wp' → logprob: -11.268211364746094
    5. 'w' → logprob: -11.393211364746094
    6. '   ' → logprob: -12.893211364746094
    7. 'idx' → logprob: -13.393211364746094
    8. 'np' → logprob: -13.518211364746094
    9. '/wp' → logprob: -13.643211364746094
    10. '$wp' → logprob: -13.768211364746094

Token 280: '[idx' (ID: 25582)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.016116715967655182
    2. '[idx' → logprob: -4.141116619110107
    3. '[' → logprob: -10.141117095947266
    4. '[counter' → logprob: -10.891117095947266
    5. '[curr' → logprob: -11.766117095947266
    6. '[count' → logprob: -11.766117095947266
    7. '[c' → logprob: -13.516117095947266
    8. '[][' → logprob: -13.516117095947266
    9. 'cnt' → logprob: -13.891117095947266
    10. '[:,' → logprob: -14.141117095947266

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. '][' → logprob: -12.000008583068848
    3. '[' → logprob: -13.625008583068848
    4. '3' → logprob: -14.875008583068848
    5. ' ' → logprob: -15.875008583068848
    6. '２' → logprob: -16.62500762939453
    7. '[idx' → logprob: -16.75000762939453
    8. ']' → logprob: -16.75000762939453
    9. '[cnt' → logprob: -16.75000762939453
    10. '```' → logprob: -17.18750762939453

Token 282: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012599836103618145
    2. '[idx' → logprob: -4.387599945068359
    3. '[' → logprob: -10.13759994506836
    4. ' ][' → logprob: -10.76259994506836
    5. ']' → logprob: -11.51259994506836
    6. ')[' → logprob: -12.13759994506836
    7. 'idx' → logprob: -13.26259994506836
    8. '>[' → logprob: -13.38759994506836
    9. '"][' → logprob: -13.63759994506836
    10. '   ' → logprob: -13.88759994506836

Token 283: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.6166903151315637e-05
    2. ' idx' → logprob: -11.125016212463379
    3. '[idx' → logprob: -13.625016212463379
    4. '	idx' → logprob: -16.125015258789062
    5. '(idx' → logprob: -18.250015258789062
    6. '   ' → logprob: -18.750015258789062
    7. ']' → logprob: -19.625015258789062
    8. '_idx' → logprob: -19.875015258789062
    9. '           ' → logprob: -20.500015258789062
    10. ' ' → logprob: -20.750015258789062

Token 284: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.625
    3. '][' → logprob: -17.875
    4. 'idx' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. ' ' → logprob: -18.75
    8. '_' → logprob: -18.75
    9. '_idx' → logprob: -20.1875
    10. '
' → logprob: -20.4375

Token 285: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3144330084323883
    2. ' >' → logprob: -1.314432978630066
    3. ']' → logprob: -6.8144330978393555
    4. ']>' → logprob: -9.814433097839355
    5. '>=' → logprob: -12.564433097839355
    6. ' ' → logprob: -12.939433097839355
    7. ' >=' → logprob: -12.939433097839355
    8. ')' → logprob: -13.189433097839355
    9. '>K' → logprob: -13.564433097839355
    10. '">' → logprob: -14.189433097839355

Token 286: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16024626791477203
    2. ' >' → logprob: -1.9102462530136108
    3. '>=' → logprob: -12.035245895385742
    4. '<=' → logprob: -12.285245895385742
    5. ' <=' → logprob: -12.785245895385742
    6. ' >=' → logprob: -13.535245895385742
    7. ' ' → logprob: -13.535245895385742
    8. '>K' → logprob: -14.035245895385742
    9. ' ' → logprob: -14.285245895385742
    10. '>
' → logprob: -14.285245895385742

Token 287: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011048642918467522
    2. ' k' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.011048316955566
    4. '	k' → logprob: -15.761048316955566
    5. '
' → logprob: -16.636049270629883
    6. '0' → logprob: -16.886049270629883
    7. '=k' → logprob: -17.011049270629883
    8. '   ' → logprob: -17.511049270629883
    9. ' ' → logprob: -18.636049270629883
    10. '(k' → logprob: -18.636049270629883

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012841238640248775
    2. ':
' → logprob: -4.38784122467041
    3. ' :' → logprob: -8.38784122467041
    4. ' and' → logprob: -10.38784122467041
    5. ' or' → logprob: -10.63784122467041
    6. ':return' → logprob: -10.88784122467041
    7. ' :
' → logprob: -11.38784122467041
    8. '):' → logprob: -11.38784122467041
    9. ':

' → logprob: -13.26284122467041
    10. '):
' → logprob: -13.38784122467041

Token 289: '               ' (ID: 506)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0491333045065403
    2. ' flag' → logprob: -3.79913330078125
    3. '               ' → logprob: -4.04913330078125
    4. '           ' → logprob: -5.54913330078125
    5. 'break' → logprob: -6.42413330078125
    6. ':
' → logprob: -6.54913330078125
    7. ':' → logprob: -7.17413330078125
    8. 'if' → logprob: -9.04913330078125
    9. '(flag' → logprob: -9.54913330078125
    10. '	flag' → logprob: -9.92413330078125

Token 290: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.005320920143276453
    2. 'break' → logprob: -5.880321025848389
    3. 'if' → logprob: -6.880321025848389
    4. '           ' → logprob: -7.005321025848389
    5. '               ' → logprob: -8.50532054901123
    6. 'ans' → logprob: -8.50532054901123
    7. ' flag' → logprob: -9.25532054901123
    8. '                   ' → logprob: -11.00532054901123
    9. '   ' → logprob: -11.38032054901123
    10. '       ' → logprob: -11.38032054901123

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687583804130554
    2. ' =' → logprob: -1.136875867843628
    3. ' =
' → logprob: -13.511876106262207
    4. '=
' → logprob: -14.011876106262207
    5. ' +=' → logprob: -14.636876106262207
    6. '==' → logprob: -14.636876106262207
    7. '   ' → logprob: -14.636876106262207
    8. ' ==' → logprob: -14.886876106262207
    9. '+=' → logprob: -15.386876106262207
    10. '           ' → logprob: -15.386876106262207

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011879685334861279
    2. ' ' → logprob: -6.751187801361084
    3. '   ' → logprob: -11.001188278198242
    4. '  ' → logprob: -14.876188278198242
    5. '2' → logprob: -15.688688278198242
    6. '
' → logprob: -15.938688278198242
    7. 'True' → logprob: -16.188688278198242
    8. '           ' → logprob: -16.313688278198242
    9. ' True' → logprob: -16.751188278198242
    10. '       ' → logprob: -16.938688278198242

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. 'True' → logprob: -11.875020980834961
    3. ' ' → logprob: -12.000020980834961
    4. '10' → logprob: -12.750020980834961
    5. '2' → logprob: -13.000020980834961
    6. '100' → logprob: -14.625020980834961
    7. '
' → logprob: -14.625020980834961
    8. '999' → logprob: -14.750020980834961
    9. '-' → logprob: -15.250020980834961
    10. 'float' → logprob: -15.375020980834961

Token 294: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04823858290910721
    2. '<|end|>' → logprob: -3.673238515853882
    3. '
' → logprob: -4.923238754272461
    4. '                   ' → logprob: -5.048238754272461
    5. '           ' → logprob: -5.673238754272461
    6. '                               ' → logprob: -6.923238754272461
    7. '                           ' → logprob: -7.423238754272461
    8. '              ' → logprob: -7.548238754272461
    9. '                       ' → logprob: -7.673238754272461
    10. '                
' → logprob: -7.798238754272461

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06253323704004288
    2. '
' → logprob: -3.687533140182495
    3. '                   ' → logprob: -4.437533378601074
    4. '<|end|>' → logprob: -4.562533378601074
    5. '                               ' → logprob: -5.187533378601074
    6. '                                       ' → logprob: -6.562533378601074
    7. 'break' → logprob: -6.812533378601074
    8. '                           ' → logprob: -7.187533378601074
    9. '                       ' → logprob: -7.312533378601074
    10. '           ' → logprob: -7.312533378601074

Token 296: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01033474039286375
    2. ' break' → logprob: -4.6353349685668945
    3. 'idx' → logprob: -8.010334968566895
    4. '
' → logprob: -9.260334968566895
    5. '               ' → logprob: -9.510334968566895
    6. '                   ' → logprob: -10.135334968566895
    7. '           ' → logprob: -11.260334968566895
    8. 'b' → logprob: -11.885334968566895
    9. '	break' → logprob: -12.135334968566895
    10. ' idx' → logprob: -12.385334968566895

Token 297: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18417200446128845
    2. '
' → logprob: -2.5591719150543213
    3. 'idx' → logprob: -3.3091719150543213
    4. '            
' → logprob: -3.6841719150543213
    5. ' 
' → logprob: -4.6841721534729
    6. ' idx' → logprob: -5.1841721534729
    7. '\n' → logprob: -5.8091721534729
    8. '    
' → logprob: -5.9341721534729
    9. '  
' → logprob: -5.9341721534729
    10. '                
' → logprob: -6.4341721534729

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005570728797465563
    2. 'idx' → logprob: -6.130570888519287
    3. '
' → logprob: -6.630570888519287
    4. '            
' → logprob: -6.880570888519287
    5. '               ' → logprob: -8.380570411682129
    6. '<|end|>' → logprob: -8.505570411682129
    7. ' idx' → logprob: -8.630570411682129
    8. ' 
' → logprob: -9.380570411682129
    9. '    
' → logprob: -9.630570411682129
    10. '\n' → logprob: -10.005570411682129

Token 299: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.18976221978664398
    2. '           ' → logprob: -1.9397622346878052
    3. ' idx' → logprob: -3.8147621154785156
    4. '
' → logprob: -5.314762115478516
    5. '	idx' → logprob: -7.939762115478516
    6. '            
' → logprob: -8.064762115478516
    7. '\n' → logprob: -8.189762115478516
    8. ' 
' → logprob: -8.439762115478516
    9. '[idx' → logprob: -8.564762115478516
    10. '		' → logprob: -8.939762115478516

Token 300: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. '2' → logprob: -12.375004768371582
    3. '+=' → logprob: -15.875004768371582
    4. ' ' → logprob: -16.1875057220459
    5. ' +=' → logprob: -16.9375057220459
    6. '=' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.1250057220459
    8. '+' → logprob: -17.5000057220459
    9. '```' → logprob: -17.9375057220459
    10. 'increment' → logprob: -18.2500057220459

Token 301: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2520153522491455
    2. ' +=' → logprob: -1.5020153522491455
    3. '=' → logprob: -9.502015113830566
    4. '+' → logprob: -11.627015113830566
    5. ']+=' → logprob: -13.502015113830566
    6. '   ' → logprob: -14.752015113830566
    7. ')' → logprob: -15.002015113830566
    8. ' ' → logprob: -15.877015113830566
    9. ' =' → logprob: -16.002016067504883
    10. ' +' → logprob: -16.127016067504883

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.50002098083496
    4. '```' → logprob: -18.93752098083496
    5. '１' → logprob: -19.56252098083496
    6. '  ' → logprob: -20.12502098083496
    7. ' ' → logprob: -20.75002098083496
    8. '۱' → logprob: -20.87502098083496
    9. '
' → logprob: -21.25002098083496
    10. '           ' → logprob: -21.56252098083496

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '
' → logprob: -20.812501907348633
    6. '１' → logprob: -21.000001907348633
    7. '  ' → logprob: -22.000001907348633
    8. '۱' → logprob: -22.312501907348633
    9. '3' → logprob: -23.250001907348633
    10. '0' → logprob: -23.250001907348633

Token 304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16211256384849548
    2. '
' → logprob: -1.9121125936508179
    3. '<|end|>' → logprob: -7.287112712860107
    4. 'idx' → logprob: -8.28711223602295
    5. '```' → logprob: -8.66211223602295
    6. '   ' → logprob: -9.28711223602295
    7. ' if' → logprob: -9.78711223602295
    8. 'if' → logprob: -9.78711223602295
    9. '\
' → logprob: -9.91211223602295
    10. ',' → logprob: -9.91211223602295

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022456541191786528
    2. '   ' → logprob: -6.6272454261779785
    3. '
' → logprob: -8.252245903015137
    4. '           ' → logprob: -9.252245903015137
    5. '<|end|>' → logprob: -9.377245903015137
    6. ' if' → logprob: -9.877245903015137
    7. '    ' → logprob: -10.002245903015137
    8. ' ' → logprob: -10.002245903015137
    9. ' 
' → logprob: -10.252245903015137
    10. '        
' → logprob: -10.252245903015137

Token 306: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15907219052314758
    2. ' if' → logprob: -2.534072160720825
    3. 'idx' (adapté à ' idx') → logprob: -2.909072160720825
    4. '   ' → logprob: -4.659072399139404
    5. ' idx' → logprob: -6.034072399139404
    6. '
' → logprob: -7.284072399139404
    7. '       ' → logprob: -7.659072399139404
    8. 'else' → logprob: -10.159071922302246
    9. ' ' → logprob: -10.409071922302246
    10. '  ' → logprob: -10.909071922302246

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15936264395713806
    2. '4' → logprob: -2.409362554550171
    3. '3' → logprob: -2.909362554550171
    4. '+=' → logprob: -6.15936279296875
    5. ' +=' → logprob: -7.53436279296875
    6. '=' → logprob: -8.53436279296875
    7. ' ' → logprob: -10.65936279296875
    8. '```' → logprob: -10.65936279296875
    9. '+' → logprob: -11.65936279296875
    10. '   ' → logprob: -11.78436279296875

Token 308: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741181433200836
    2. '+=' → logprob: -0.9741181135177612
    3. '+' → logprob: -10.72411823272705
    4. '=' → logprob: -11.34911823272705
    5. ' +' → logprob: -13.09911823272705
    6. ']+=' → logprob: -13.22411823272705
    7. ' ' → logprob: -13.47411823272705
    8. '   ' → logprob: -14.22411823272705
    9. ')' → logprob: -15.09911823272705
    10. '++' → logprob: -15.47411823272705

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.375085830688477
    4. '```' → logprob: -18.250085830688477
    5. '１' → logprob: -18.375085830688477
    6. '  ' → logprob: -18.562585830688477
    7. '
' → logprob: -18.687585830688477
    8. ' ' → logprob: -18.875085830688477
    9. '       ' → logprob: -19.750085830688477
    10. '    ' → logprob: -19.750085830688477

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -19.125001907348633
    4. '```' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '１' → logprob: -20.062501907348633
    7. '  ' → logprob: -20.875001907348633
    8. '۱' → logprob: -21.062501907348633
    9. '0' → logprob: -21.625001907348633
    10. '﻿' → logprob: -22.062501907348633

Token 311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4230801463127136
    2. '
' → logprob: -1.1730802059173584
    3. ' if' → logprob: -3.7980802059173584
    4. 'if' → logprob: -5.048079967498779
    5. '    
' → logprob: -5.548079967498779
    6. '  
' → logprob: -6.548079967498779
    7. ' 
' → logprob: -8.298080444335938
    8. '   
' → logprob: -8.298080444335938
    9. '       ' → logprob: -8.923080444335938
    10. '  ' → logprob: -9.048080444335938

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6351403594017029
    2. ' if' → logprob: -1.1351404190063477
    3. 'if' → logprob: -2.2601404190063477
    4. '
' → logprob: -4.385140419006348
    5. '```' → logprob: -4.760140419006348
    6. 'while' → logprob: -4.885140419006348
    7. 'idx' → logprob: -5.510140419006348
    8. ' while' → logprob: -5.510140419006348
    9. 'w' → logprob: -6.010140419006348
    10. '    
' → logprob: -6.635140419006348

Token 313: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10940445959568024
    2. ' if' → logprob: -2.3594045639038086
    3. 'idx' → logprob: -4.859404563903809
    4. '   ' → logprob: -7.234404563903809
    5. ' idx' → logprob: -8.859404563903809
    6. 'col' → logprob: -9.234404563903809
    7. '
' → logprob: -9.609404563903809
    8. 'w' → logprob: -9.984404563903809
    9. 'j' → logprob: -10.109404563903809
    10. 'else' → logprob: -10.109404563903809

Token 314: ' cnt' (ID: 27340)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.026586372405290604
    2. 'flag' → logprob: -3.6515862941741943
    3. ' not' → logprob: -8.526586532592773
    4. '(flag' → logprob: -10.026586532592773
    5. '	flag' → logprob: -10.901586532592773
    6. ' ' → logprob: -11.026586532592773
    7. 'not' → logprob: -12.276586532592773
    8. '   ' → logprob: -13.151586532592773
    9. '  ' → logprob: -14.651586532592773
    10. 'Flag' → logprob: -15.026586532592773

Token 315: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04768100753426552
    2. '==' → logprob: -3.5476810932159424
    3. ' >=' → logprob: -5.172680854797363
    4. ' >' → logprob: -5.297680854797363
    5. ' +' → logprob: -6.047680854797363
    6. '+' → logprob: -6.547680854797363
    7. ' <=' → logprob: -6.797680854797363
    8. ' <' → logprob: -7.422680854797363
    9. ' !=' → logprob: -7.672680854797363
    10. '>' → logprob: -7.922680854797363

Token 316: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007133854669518769
    2. ' ans' → logprob: -7.250713348388672
    3. '1' → logprob: -14.000713348388672
    4. '	ans' → logprob: -14.000713348388672
    5. '(ans' → logprob: -14.625713348388672
    6. 'answer' → logprob: -14.875713348388672
    7. '
' → logprob: -15.375713348388672
    8. '   ' → logprob: -15.625713348388672
    9. '0' → logprob: -15.875713348388672
    10. '  ' → logprob: -16.250713348388672

Token 317: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02998998388648033
    2. ':
' → logprob: -3.5299899578094482
    3. '   ' → logprob: -8.529990196228027
    4. ' :' → logprob: -10.404990196228027
    5. ' :
' → logprob: -12.779990196228027
    6. '       ' → logprob: -13.029990196228027
    7. 'continue' → logprob: -13.279990196228027
    8. '+' → logprob: -13.529990196228027
    9. '+:' → logprob: -14.404990196228027
    10. ':return' → logprob: -14.404990196228027

Token 318: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.07896888256072998
    2. ' flag' → logprob: -2.5789690017700195
    3. 'ans' → logprob: -10.45396900177002
    4. 'idx' → logprob: -11.20396900177002
    5. '(flag' → logprob: -11.70396900177002
    6. ' i' → logprob: -11.95396900177002
    7. ' ans' → logprob: -12.32896900177002
    8. '   ' → logprob: -12.45396900177002
    9. 'i' → logprob: -12.70396900177002
    10. 'cnt' → logprob: -13.07896900177002

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009536955505609512
    2. '==' → logprob: -5.2595367431640625
    3. ' ==' → logprob: -6.1345367431640625
    4. ':
' → logprob: -6.2595367431640625
    5. ' :' → logprob: -8.634536743164062
    6. '):' → logprob: -11.634536743164062
    7. ':return' → logprob: -11.884536743164062
    8. ' or' → logprob: -12.384536743164062
    9. ' continue' → logprob: -12.759536743164062
    10. '=' → logprob: -13.009536743164062

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35405638813972473
    2. '   ' → logprob: -1.2290563583374023
    3. ':
' → logprob: -5.729056358337402
    4. ':' → logprob: -6.854056358337402
    5. ' i' → logprob: -7.104056358337402
    6. '```' → logprob: -8.604056358337402
    7. 'i' → logprob: -8.854056358337402
    8. '    ' → logprob: -10.104056358337402
    9. '
' → logprob: -11.229056358337402
    10. ',' → logprob: -11.229056358337402

Token 321: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004213620908558369
    2. 'i' (adapté à ' i') → logprob: -5.754213809967041
    3. ' i' → logprob: -6.879213809967041
    4. '       ' → logprob: -12.754213333129883
    5. '```' → logprob: -12.879213333129883
    6. '
' → logprob: -14.754213333129883
    7. '	i' → logprob: -15.379213333129883
    8. ' ' → logprob: -15.754213333129883
    9. '   ' → logprob: -16.129213333129883
    10. '``' → logprob: -17.629213333129883

Token 322: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005235190503299236
    2. ' +=' → logprob: -5.255235195159912
    3. '=' → logprob: -13.755234718322754
    4. ']+=' → logprob: -15.755234718322754
    5. '```' → logprob: -16.38023567199707
    6. '   ' → logprob: -16.38023567199707
    7. '+' → logprob: -18.00523567199707
    8. '1' → logprob: -18.25523567199707
    9. ' ' → logprob: -18.75523567199707
    10. '+=(' → logprob: -19.00523567199707

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. '```' → logprob: -17.25004005432129
    5. '  ' → logprob: -19.50004005432129
    6. '
' → logprob: -19.75004005432129
    7. '１' → logprob: -21.37504005432129
    8. '    ' → logprob: -21.81254005432129
    9. ' ' → logprob: -21.87504005432129
    10. '۱' → logprob: -22.18754005432129

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.375009536743164
    4. '```' → logprob: -19.875009536743164
    5. '  ' → logprob: -20.187509536743164
    6. '１' → logprob: -20.687509536743164
    7. '
' → logprob: -20.812509536743164
    8. '<|end|>' → logprob: -21.250009536743164
    9. '۱' → logprob: -21.687509536743164
    10. '१' → logprob: -22.000009536743164

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030240526422858238
    2. '   ' → logprob: -3.530240535736084
    3. 'continue' → logprob: -7.905240535736084
    4. 'else' → logprob: -10.030240058898926
    5. ' continue' → logprob: -10.405240058898926
    6. ' ' → logprob: -11.280240058898926
    7. '	continue' → logprob: -11.530240058898926
    8. '           ' → logprob: -11.905240058898926
    9. '```' → logprob: -12.530240058898926
    10. '	' → logprob: -12.655240058898926

Token 326: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08297952264547348
    2. '       ' → logprob: -2.582979440689087
    3. 'else' → logprob: -5.582979679107666
    4. 'continue' → logprob: -8.832979202270508
    5. ' else' → logprob: -9.082979202270508
    6. ' continue' → logprob: -10.957979202270508
    7. ' ' → logprob: -11.207979202270508
    8. '           ' → logprob: -11.832979202270508
    9. '```' → logprob: -11.832979202270508
    10. '  ' → logprob: -12.582979202270508

Token 327: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5088760852813721
    2. '   ' → logprob: -1.008876085281372
    3. '       ' → logprob: -3.508876085281372
    4. ' continue' → logprob: -5.508875846862793
    5. '	continue' → logprob: -8.758875846862793
    6. '
' → logprob: -10.008875846862793
    7. '           ' → logprob: -11.883875846862793
    8. 'contin' → logprob: -12.633875846862793
    9. '_continue' → logprob: -13.008875846862793
    10. '    ' → logprob: -13.633875846862793

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019255243241786957
    2. ' cut' → logprob: -5.2692551612854
    3. 'j' → logprob: -5.8942551612854
    4. 'idx' → logprob: -6.1442551612854
    5. ' col' → logprob: -6.3942551612854
    6. 'cut' → logprob: -6.8942551612854
    7. ' idx' → logprob: -7.1442551612854
    8. 'col' → logprob: -7.1442551612854
    9. ' j' → logprob: -7.2692551612854
    10. '    
' → logprob: -7.7692551612854

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0264853797852993
    2. 'idx' → logprob: -4.401485443115234
    3. 'j' → logprob: -4.776485443115234
    4. 'col' → logprob: -6.901485443115234
    5. 'cut' → logprob: -7.151485443115234
    6. 'split' → logprob: -7.776485443115234
    7. 'right' → logprob: -7.901485443115234
    8. 'l' → logprob: -8.026485443115234
    9. ' cut' → logprob: -8.026485443115234
    10. ' idx' → logprob: -8.026485443115234

Token 330: ' j' (ID: 441)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5329514741897583
    2. 'cut' → logprob: -2.0329513549804688
    3. 'cuts' → logprob: -2.7829513549804688
    4. 'tmp' → logprob: -3.0329513549804688
    5. 'idx' → logprob: -3.6579513549804688
    6. 'now' → logprob: -3.9079513549804688
    7. 'split' → logprob: -4.032951354980469
    8. 'j' (adapté à ' j') → logprob: -4.282951354980469
    9. 'cur' → logprob: -5.032951354980469
    10. 'prev' → logprob: -5.157951354980469

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01425893884152174
    2. '=' → logprob: -4.264258861541748
    3. '2' → logprob: -9.389259338378906
    4. 'w' → logprob: -12.014259338378906
    5. ' +=' → logprob: -13.264259338378906
    6. ',' → logprob: -14.014259338378906
    7. ' ' → logprob: -14.139259338378906
    8. '+=' → logprob: -14.514259338378906
    9. 'idx' → logprob: -15.264259338378906
    10. 'p' → logprob: -15.389259338378906

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034442150499671698
    2. ' ' → logprob: -6.253444194793701
    3. '1' → logprob: -6.503444194793701
    4. 'w' → logprob: -11.37844467163086
    5. ' w' → logprob: -13.25344467163086
    6. '   ' → logprob: -14.19094467163086
    7. 'k' → logprob: -14.37844467163086
    8. ' -' → logprob: -14.69094467163086
    9. 'wp' → logprob: -15.44094467163086
    10. 'h' → logprob: -15.62844467163086

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002481842413544655
    2. '1' → logprob: -6.002481937408447
    3. ' ' → logprob: -12.627481460571289
    4. 'w' → logprob: -13.002481460571289
    5. 'k' → logprob: -15.502481460571289
    6. 'i' → logprob: -16.37748146057129
    7. '-' → logprob: -16.56498146057129
    8. '2' → logprob: -17.12748146057129
    9. '   ' → logprob: -17.18998146057129
    10. '(' → logprob: -17.37748146057129

Token 334: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.15244905650615692
    2. ' w' → logprob: -2.902449131011963
    3. '   ' → logprob: -3.027449131011963
    4. 'while' → logprob: -3.527449131011963
    5. 'w' → logprob: -5.152449131011963
    6. ' j' → logprob: -6.277449131011963
    7. '
' → logprob: -7.902449131011963
    8. 'j' → logprob: -8.152448654174805
    9. ' ' → logprob: -9.152448654174805
    10. '    ' → logprob: -9.902448654174805

Token 335: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6205110549926758
    2. ' while' → logprob: -1.1205110549926758
    3. '   ' → logprob: -1.9955110549926758
    4. 'j' → logprob: -9.495511054992676
    5. 'w' → logprob: -9.745511054992676
    6. ' w' → logprob: -10.620511054992676
    7. 'for' → logprob: -10.870511054992676
    8. ' j' → logprob: -10.870511054992676
    9. ' for' → logprob: -11.245511054992676
    10. 'idx' → logprob: -11.495511054992676

Token 336: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2758822739124298
    2. 'cnt' → logprob: -2.7758822441101074
    3. ' while' → logprob: -2.9008822441101074
    4. 'cut' → logprob: -3.2758822441101074
    5. 'cuts' → logprob: -4.275882244110107
    6. 'cur' → logprob: -4.275882244110107
    7. 'tmp' → logprob: -4.650882244110107
    8. 'last' → logprob: -4.900882244110107
    9. 'col' → logprob: -5.400882244110107
    10. ' cuts' → logprob: -5.650882244110107

Token 337: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024587979540228844
    2. ' j' → logprob: -3.774587869644165
    3. 'w' → logprob: -6.649588108062744
    4. ' w' → logprob: -10.024587631225586
    5. '   ' → logprob: -13.274587631225586
    6. '	j' → logprob: -14.024587631225586
    7. '    ' → logprob: -16.399587631225586
    8. 'jw' → logprob: -16.899587631225586
    9. '(j' → logprob: -17.399587631225586
    10. ' ' → logprob: -17.399587631225586

Token 338: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.049122635275125504
    2. '<' → logprob: -3.0491225719451904
    3. '<w' → logprob: -7.5491228103637695
    4. 'w' → logprob: -11.92412281036377
    5. ' w' → logprob: -13.79912281036377
    6. '<n' → logprob: -14.42412281036377
    7. ' ' → logprob: -16.049121856689453
    8. ' <
' → logprob: -16.174121856689453
    9. '<len' → logprob: -17.799121856689453
    10. ')' → logprob: -18.174121856689453

Token 339: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00023095356300473213
    2. ' w' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.00023078918457
    4. ' ' → logprob: -17.50023078918457
    5. '(w' → logprob: -18.00023078918457
    6. '	w' → logprob: -18.12523078918457
    7. '  ' → logprob: -18.75023078918457
    8. '    ' → logprob: -18.87523078918457
    9. 'len' → logprob: -19.12523078918457
    10. '<w' → logprob: -19.12523078918457

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2866346836090088
    2. ':
' → logprob: -1.4116346836090088
    3. ' and' → logprob: -5.78663444519043
    4. '-' → logprob: -6.41163444519043
    5. 'and' → logprob: -7.66163444519043
    6. ' -' → logprob: -8.78663444519043
    7. '   ' → logprob: -10.28663444519043
    8. ' :
' → logprob: -10.41163444519043
    9. ' :' → logprob: -10.78663444519043
    10. ':

' → logprob: -11.28663444519043

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000680861237924546
    2. '   ' → logprob: -8.250680923461914
    3. 'idx' → logprob: -8.625680923461914
    4. 'if' → logprob: -9.875680923461914
    5. ':' → logprob: -10.750680923461914
    6. ' if' → logprob: -10.875680923461914
    7. ' idx' → logprob: -10.875680923461914
    8. 'flag' → logprob: -11.375680923461914
    9. 'j' → logprob: -11.500680923461914
    10. 'q' → logprob: -11.500680923461914

Token 342: ' q' (ID: 2335)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3386930227279663
    2. 'idx' → logprob: -1.8386930227279663
    3. 'col' → logprob: -2.088693141937256
    4. 'cut' → logprob: -2.213693141937256
    5. 'flag' → logprob: -2.463693141937256
    6. 'ok' → logprob: -3.213693141937256
    7. '   ' → logprob: -3.463693141937256
    8. 'max' → logprob: -3.463693141937256
    9. 'sum' → logprob: -3.588693141937256
    10. 'l' → logprob: -4.088693141937256

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.591006875038147
    2. ' =' → logprob: -0.841006875038147
    3. 'flag' → logprob: -5.466006755828857
    4. 'u' → logprob: -6.466006755828857
    5. '_flag' → logprob: -6.466006755828857
    6. 'w' → logprob: -6.716006755828857
    7. '0' → logprob: -6.841006755828857
    8. 'j' → logprob: -7.091006755828857
    9. 'sum' → logprob: -7.216006755828857
    10. 'q' → logprob: -7.466006755828857

Token 344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01755753718316555
    2. 'np' → logprob: -4.517557621002197
    3. 'False' → logprob: -5.142557621002197
    4. 'wp' → logprob: -7.642557621002197
    5. '[' → logprob: -9.142557144165039
    6. '1' → logprob: -10.392557144165039
    7. 'max' → logprob: -12.642557144165039
    8. '[]' → logprob: -12.767557144165039
    9. '[np' → logprob: -12.892557144165039
    10. 'sum' → logprob: -13.017557144165039

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00957581028342247
    2. 'np' → logprob: -4.884575843811035
    3. 'False' → logprob: -6.384575843811035
    4. 'wp' → logprob: -9.134575843811035
    5. '[' → logprob: -9.384575843811035
    6. '1' → logprob: -10.134575843811035
    7. 'max' → logprob: -11.134575843811035
    8. '[np' → logprob: -12.134575843811035
    9. 'j' → logprob: -12.259575843811035
    10. 'sum' → logprob: -12.634575843811035

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02304712124168873
    2. '<|end|>' → logprob: -4.398046970367432
    3. '
' → logprob: -5.898046970367432
    4. ' ' → logprob: -6.523046970367432
    5. ' if' → logprob: -6.773046970367432
    6. ' 
' → logprob: -7.023046970367432
    7. ' while' → logprob: -7.148046970367432
    8. ',' → logprob: -7.398046970367432
    9. 'while' → logprob: -8.02304744720459
    10. '        ' → logprob: -8.14804744720459

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5500701069831848
    2. ' while' → logprob: -2.30007004737854
    3. ' ' → logprob: -2.55007004737854
    4. 'while' → logprob: -2.55007004737854
    5. '<|end|>' → logprob: -2.92507004737854
    6. ' 
' → logprob: -3.05007004737854
    7. '        ' → logprob: -3.30007004737854
    8. '
' → logprob: -4.925070285797119
    9. ' if' → logprob: -5.675070285797119
    10. '        
' → logprob: -6.050070285797119

Token 348: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.020309919491410255
    2. 'idx' → logprob: -4.395309925079346
    3. 'l' → logprob: -5.645309925079346
    4. 'for' → logprob: -7.145309925079346
    5. ' while' → logprob: -7.145309925079346
    6. 'q' → logprob: -7.270309925079346
    7. 'wp' → logprob: -8.020309448242188
    8. 'k' → logprob: -8.020309448242188
    9. 'col' → logprob: -8.270309448242188
    10. 'flag' → logprob: -8.520309448242188

Token 349: ' q' (ID: 2335)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.019048599526286125
    2. ' j' → logprob: -4.519048690795898
    3. 'q' → logprob: -5.769048690795898
    4. 'idx' → logprob: -5.894048690795898
    5. 'True' → logprob: -6.644048690795898
    6. ' idx' → logprob: -8.019048690795898
    7. '(j' → logprob: -8.519048690795898
    8. ' True' → logprob: -9.394048690795898
    9. ' q' → logprob: -10.019048690795898
    10. '(True' → logprob: -10.269048690795898

Token 350: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1474902331829071
    2. ' <=' → logprob: -2.5224902629852295
    3. '<' → logprob: -3.6474902629852295
    4. '<w' → logprob: -4.14749002456665
    5. '<=' → logprob: -4.64749002456665
    6. 'j' → logprob: -6.14749002456665
    7. ' ' → logprob: -6.39749002456665
    8. ' j' → logprob: -7.64749002456665
    9. ' +' → logprob: -7.89749002456665
    10. 'w' → logprob: -8.147490501403809

Token 351: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03758072853088379
    2. 'w' → logprob: -3.662580728530884
    3. 'cnt' → logprob: -5.787580490112305
    4. '(h' → logprob: -6.162580490112305
    5. '(' → logprob: -6.537580490112305
    6. 'len' → logprob: -6.787580490112305
    7. 'wp' → logprob: -6.787580490112305
    8. '(w' → logprob: -6.912580490112305
    9. 'j' → logprob: -7.912580490112305
    10. 'idx' → logprob: -7.912580490112305

Token 352: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25196346640586853
    2. ' and' → logprob: -1.501963496208191
    3. ':
' → logprob: -10.37696361541748
    4. ' ' → logprob: -13.62696361541748
    5. ':' → logprob: -14.25196361541748
    6. '   ' → logprob: -14.50196361541748
    7. '       ' → logprob: -15.12696361541748
    8. '	and' → logprob: -15.25196361541748
    9. '           ' → logprob: -16.251962661743164
    10. '0' → logprob: -17.376962661743164

Token 353: '           ' (ID: 352)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' → logprob: -0.3611017167568207
    2. '+' → logprob: -1.861101746559143
    3. '           ' → logprob: -2.9861016273498535
    4. ' wp' → logprob: -3.7361016273498535
    5. 'j' → logprob: -3.9861016273498535
    6. '       ' → logprob: -4.2361016273498535
    7. ' and' → logprob: -4.2361016273498535
    8. '        ' → logprob: -5.6111016273498535
    9. ' +' → logprob: -5.7361016273498535
    10. '0' → logprob: -5.9861016273498535

Token 354: ' w' (ID: 286)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' → logprob: -0.023272618651390076
    2. 'if' → logprob: -4.273272514343262
    3. 'q' → logprob: -4.898272514343262
    4. '           ' → logprob: -7.398272514343262
    5. ' wp' → logprob: -8.023272514343262
    6. 'w' (adapté à ' w') → logprob: -8.398272514343262
    7. 'j' → logprob: -8.773272514343262
    8. '               ' → logprob: -9.148272514343262
    9. '
' → logprob: -9.898272514343262
    10. 'jp' → logprob: -10.523272514343262

Token 355: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029794003814458847
    2. 'q' → logprob: -3.5297939777374268
    3. 'j' → logprob: -10.654793739318848
    4. '[' → logprob: -11.904793739318848
    5. 'pq' → logprob: -12.779793739318848
    6. '[q' → logprob: -13.029793739318848
    7. 'a' → logprob: -13.529793739318848
    8. '[p' → logprob: -13.779793739318848
    9. 'qp' → logprob: -14.404793739318848
    10. 'wp' → logprob: -14.404793739318848

Token 356: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.04462757706642151
    2. '[idx' → logprob: -3.1696276664733887
    3. '[w' → logprob: -7.169627666473389
    4. '[j' → logprob: -7.419627666473389
    5. '[cnt' → logprob: -8.91962718963623
    6. '[' → logprob: -10.16962718963623
    7. 'q' → logprob: -10.29462718963623
    8. 'w' → logprob: -11.04462718963623
    9. 'idx' → logprob: -11.16962718963623
    10. '[i' → logprob: -12.29462718963623

Token 357: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04887416586279869
    2. ']+=' → logprob: -3.0488741397857666
    3. ']+' → logprob: -8.298873901367188
    4. ']=' → logprob: -11.298873901367188
    5. '[j' → logprob: -11.923873901367188
    6. '[q' → logprob: -12.673873901367188
    7. '[' → logprob: -12.923873901367188
    8. '][' → logprob: -13.048873901367188
    9. 'j' → logprob: -13.048873901367188
    10. ' ]' → logprob: -13.048873901367188

Token 358: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5698878765106201
    2. ']+=' → logprob: -1.5698878765106201
    3. ']' → logprob: -2.19488787651062
    4. ' +=' → logprob: -2.19488787651062
    5. '[' → logprob: -6.319888114929199
    6. '[j' → logprob: -7.819888114929199
    7. '+' → logprob: -8.0698881149292
    8. '=' → logprob: -8.0698881149292
    9. ']+' → logprob: -8.0698881149292
    10. '
' → logprob: -9.0698881149292

Token 359: ' wp' (ID: 27047)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' → logprob: -0.014186308719217777
    2. ' wp' → logprob: -4.264186382293701
    3. '	wp' → logprob: -10.764185905456543
    4. '$wp' → logprob: -14.139185905456543
    5. '_wp' → logprob: -15.014185905456543
    6. '.wp' → logprob: -15.514185905456543
    7. 'np' → logprob: -16.01418685913086
    8. 'vp' → logprob: -16.01418685913086
    9. '/wp' → logprob: -17.51418685913086
    10. '   ' → logprob: -17.76418685913086

Token 360: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.00012761499965563416
    2. '[idx' → logprob: -9.250127792358398
    3. '[j' → logprob: -11.000127792358398
    4. '[' → logprob: -11.250127792358398
    5. '[cnt' → logprob: -14.125127792358398
    6. '[][' → logprob: -14.625127792358398
    7. '[i' → logprob: -15.625127792358398
    8. '[int' → logprob: -16.3751277923584
    9. '[:,' → logprob: -16.6251277923584
    10. '[
' → logprob: -16.7501277923584

Token 361: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07004480063915253
    2. '[j' → logprob: -2.695044755935669
    3. ' ][' → logprob: -9.94504451751709
    4. 'j' → logprob: -10.07004451751709
    5. ',j' → logprob: -12.44504451751709
    6. '}[' → logprob: -12.94504451751709
    7. '[' → logprob: -13.19504451751709
    8. ']' → logprob: -13.19504451751709
    9. ')[' → logprob: -13.44504451751709
    10. ''][' → logprob: -13.44504451751709

Token 362: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014036978245712817
    2. ' j' → logprob: -8.875140190124512
    3. '[j' → logprob: -15.125140190124512
    4. '	j' → logprob: -16.500141143798828
    5. '   ' → logprob: -16.625141143798828
    6. ']' → logprob: -16.875141143798828
    7. '```' → logprob: -18.500141143798828
    8. '
' → logprob: -18.750141143798828
    9. '][' → logprob: -19.750141143798828
    10. ' ' → logprob: -19.750141143798828

Token 363: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12878505885601044
    2. ']' → logprob: -2.1287851333618164
    3. '       ' → logprob: -6.378785133361816
    4. ']
' → logprob: -9.378785133361816
    5. ' ]
' → logprob: -10.378785133361816
    6. ']

' → logprob: -10.878785133361816
    7. ' ]' → logprob: -12.128785133361816
    8. '   ' → logprob: -12.503785133361816
    9. '           ' → logprob: -12.628785133361816
    10. '<|end|>' → logprob: -12.628785133361816

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09182664006948471
    2. '       ' → logprob: -2.5918266773223877
    3. '
' → logprob: -4.966826438903809
    4. ' if' → logprob: -5.466826438903809
    5. ' q' → logprob: -7.466826438903809
    6. 'if' → logprob: -8.466826438903809
    7. 'q' → logprob: -8.716826438903809
    8. ' ' → logprob: -8.841826438903809
    9. '   ' → logprob: -8.966826438903809
    10. '<|end|>' → logprob: -9.341826438903809

Token 365: ' q' (ID: 2335)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06410636752843857
    2. 'if' → logprob: -2.8141064643859863
    3. ' q' → logprob: -6.689106464385986
    4. '       ' → logprob: -7.689106464385986
    5. '           ' → logprob: -8.439105987548828
    6. 'q' (adapté à ' q') → logprob: -9.314105987548828
    7. ' 
' → logprob: -10.189105987548828
    8. '	if' → logprob: -10.564105987548828
    9. '
' → logprob: -10.814105987548828
    10. ' ' → logprob: -11.189105987548828

Token 366: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6664620041847229
    2. '+=' → logprob: -0.7914620041847229
    3. '=' → logprob: -4.041461944580078
    4. '<=' → logprob: -4.666461944580078
    5. ' <=' → logprob: -5.416461944580078
    6. ' =' → logprob: -7.166461944580078
    7. '<|end|>' → logprob: -8.541461944580078
    8. ' <' → logprob: -8.541461944580078
    9. ' ' → logprob: -8.666461944580078
    10. ']+=' → logprob: -9.291461944580078

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.50037956237793
    4. '```' → logprob: -19.00037956237793
    5. '0' → logprob: -19.37537956237793
    6. '１' → logprob: -20.06287956237793
    7. ' ' → logprob: -20.25037956237793
    8. '<|end|>' → logprob: -20.25037956237793
    9. '	' → logprob: -20.31287956237793
    10. '  ' → logprob: -20.43787956237793

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.375003814697266
    4. '0' → logprob: -19.500003814697266
    5. '<|end|>' → logprob: -20.000003814697266
    6. '   ' → logprob: -20.500003814697266
    7. '１' → logprob: -22.062503814697266
    8. '
' → logprob: -22.187503814697266
    9. '۱' → logprob: -22.625003814697266
    10. '  ' → logprob: -22.937503814697266

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017582252621650696
    2. '       ' → logprob: -4.142582416534424
    3. '
' → logprob: -6.517582416534424
    4. '           ' → logprob: -10.267581939697266
    5. '<|end|>' → logprob: -11.017581939697266
    6. ' if' → logprob: -13.142581939697266
    7. '' → logprob: -13.267581939697266
    8. '```' → logprob: -13.267581939697266
    9. '        
' → logprob: -13.517581939697266
    10. '	' → logprob: -13.642581939697266

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016882737400010228
    2. '
' → logprob: -6.626688480377197
    3. '           ' → logprob: -8.626688003540039
    4. '   ' → logprob: -9.501688003540039
    5. 'j' → logprob: -10.501688003540039
    6. '```' → logprob: -10.501688003540039
    7. 'if' → logprob: -10.626688003540039
    8. 'q' → logprob: -12.001688003540039
    9. '	' → logprob: -12.001688003540039
    10. '
' → logprob: -12.876688003540039

Token 371: ' bad' (ID: 4790)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5739225149154663
    2. 'if' → logprob: -1.1989225149154663
    3. 'j' → logprob: -2.073922634124756
    4. '   ' → logprob: -4.823922634124756
    5. ' if' → logprob: -7.073922634124756
    6. 'flag' → logprob: -7.948922634124756
    7. ' j' → logprob: -9.323922157287598
    8. 'q' → logprob: -10.323922157287598
    9. '
' → logprob: -10.573922157287598
    10. '           ' → logprob: -10.823922157287598

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485799729824066
    2. '=' → logprob: -1.223580002784729
    3. ' ' → logprob: -9.598580360412598
    4. 'if' → logprob: -10.598580360412598
    5. '=False' → logprob: -11.598580360412598
    6. '_idx' → logprob: -11.723580360412598
    7. '_flag' → logprob: -11.723580360412598
    8. '_' → logprob: -12.348580360412598
    9. '  ' → logprob: -12.973580360412598
    10. ' if' → logprob: -13.348580360412598

Token 373: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.577233076095581
    2. '0' → logprob: -1.077233076095581
    3. ' False' → logprob: -2.577233076095581
    4. ' ' → logprob: -3.827233076095581
    5. '(False' → logprob: -9.45223331451416
    6. ' any' → logprob: -9.70223331451416
    7. 'any' → logprob: -9.95223331451416
    8. 'flag' → logprob: -10.95223331451416
    9. ' (' → logprob: -11.95223331451416
    10. ' flag' → logprob: -12.20223331451416

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.475511759519577
    2. 'False' → logprob: -0.9755117893218994
    3. 'any' → logprob: -6.60051155090332
    4. ' False' → logprob: -10.22551155090332
    5. 'max' → logprob: -10.85051155090332
    6. 'sum' → logprob: -11.97551155090332
    7. '(False' → logprob: -12.22551155090332
    8. 'false' → logprob: -12.97551155090332
    9. 'flag' → logprob: -13.60051155090332
    10. ' ' → logprob: -14.35051155090332

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030493667349219322
    2. '
' → logprob: -3.53049373626709
    3. '	' → logprob: -8.40549373626709
    4. '        
' → logprob: -8.90549373626709
    5. ' if' → logprob: -9.28049373626709
    6. '
' → logprob: -9.90549373626709
    7. '<|end|>' → logprob: -10.28049373626709
    8. ',' → logprob: -10.53049373626709
    9. '  
' → logprob: -10.53049373626709
    10. '   ' → logprob: -10.78049373626709

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021612064447253942
    2. '
' → logprob: -6.252161026000977
    3. '	' → logprob: -9.002161026000977
    4. ' for' → logprob: -9.877161026000977
    5. '   ' → logprob: -11.252161026000977
    6. '<|end|>' → logprob: -11.877161026000977
    7. 'for' → logprob: -12.002161026000977
    8. ',' → logprob: -12.002161026000977
    9. ' ' → logprob: -12.252161026000977
    10. '        
' → logprob: -12.752161026000977

Token 377: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08452446013689041
    2. 'r' → logprob: -3.209524393081665
    3. '       ' → logprob: -3.834524393081665
    4. 'q' (adapté à ' q') → logprob: -5.209524631500244
    5. 'l' → logprob: -5.459524631500244
    6. ' for' → logprob: -5.834524631500244
    7. 'idx' → logprob: -6.459524631500244
    8. 'm' → logprob: -6.459524631500244
    9. '   ' → logprob: -6.584524631500244
    10. 'p' → logprob: -6.959524631500244

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39616894721984863
    2. ' =' → logprob: -1.1461689472198486
    3. ' +=' → logprob: -4.8961687088012695
    4. '+=' → logprob: -6.3961687088012695
    5. ' ' → logprob: -9.77116870880127
    6. '	' → logprob: -11.14616870880127
    7. '    ' → logprob: -12.02116870880127
    8. '0' → logprob: -12.14616870880127
    9. '        ' → logprob: -12.39616870880127
    10. ',' → logprob: -12.64616870880127

Token 379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '       ' → logprob: -15.625380516052246
    4. '   ' → logprob: -17.37537956237793
    5. '1' → logprob: -17.75037956237793
    6. '        ' → logprob: -18.12537956237793
    7. '    ' → logprob: -18.56287956237793
    8. '     ' → logprob: -18.75037956237793
    9. '           ' → logprob: -19.06287956237793
    10. '=' → logprob: -19.62537956237793

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -17.7500057220459
    4. '۰' → logprob: -19.5000057220459
    5. '```' → logprob: -20.0000057220459
    6. 'h' → logprob: -20.1875057220459
    7. '０' → logprob: -20.3750057220459
    8. '
' → logprob: -20.5625057220459
    9. '   ' → logprob: -20.7500057220459
    10. '-' → logprob: -20.8125057220459

Token 381: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15094085037708282
    2. '
' → logprob: -2.0259408950805664
    3. ' 
' → logprob: -6.150940895080566
    4. '<|end|>' → logprob: -6.150940895080566
    5. '```' → logprob: -6.900940895080566
    6. ' while' → logprob: -7.400940895080566
    7. '  
' → logprob: -7.775940895080566
    8. '        
' → logprob: -7.775940895080566
    9. '	while' → logprob: -7.900940895080566
    10. '	' → logprob: -8.275940895080566

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1670781821012497
    2. '
' → logprob: -2.0420782566070557
    3. 'while' → logprob: -4.042078018188477
    4. ' while' → logprob: -5.292078018188477
    5. '```' → logprob: -7.917078018188477
    6. '<|end|>' → logprob: -7.917078018188477
    7. ' 
' → logprob: -8.417078018188477
    8. '        
' → logprob: -8.542078018188477
    9. '	while' → logprob: -9.167078018188477
    10. 'While' → logprob: -9.167078018188477

Token 383: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -8.232493564719334e-05
    2. ' while' → logprob: -9.500082015991211
    3. '       ' → logprob: -12.125082015991211
    4. 'q' → logprob: -13.500082015991211
    5. '
' → logprob: -15.000082015991211
    6. 'While' → logprob: -16.37508201599121
    7. '	while' → logprob: -16.37508201599121
    8. '```' → logprob: -17.62508201599121
    9. 'for' → logprob: -17.75008201599121
    10. '        
' → logprob: -18.12508201599121

Token 384: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02408280223608017
    2. ' q' → logprob: -3.774082899093628
    3. 'h' → logprob: -7.149082660675049
    4. ' h' → logprob: -10.274083137512207
    5. 'w' → logprob: -11.649083137512207
    6. '(q' → logprob: -13.399083137512207
    7. '   ' → logprob: -13.524083137512207
    8. ' ' → logprob: -13.774083137512207
    9. '	q' → logprob: -14.149083137512207
    10. ' w' → logprob: -14.524083137512207

Token 385: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12804120779037476
    2. '<' → logprob: -2.8780412673950195
    3. ' <=' → logprob: -2.8780412673950195
    4. '<=' → logprob: -4.8780412673950195
    5. '<n' → logprob: -11.12804126739502
    6. '<w' → logprob: -11.37804126739502
    7. ' <
' → logprob: -11.37804126739502
    8. ' ' → logprob: -11.62804126739502
    9. '<len' → logprob: -11.87804126739502
    10. ' ≤' → logprob: -12.00304126739502

Token 386: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02288062497973442
    2. 'cnt' → logprob: -4.897880554199219
    3. '(h' → logprob: -4.897880554199219
    4. 'len' → logprob: -5.522880554199219
    5. 'idx' → logprob: -6.522880554199219
    6. 'i' → logprob: -6.897880554199219
    7. ' h' → logprob: -7.897880554199219
    8. '(cnt' → logprob: -8.272880554199219
    9. '(len' → logprob: -8.897880554199219
    10. '(' → logprob: -9.022880554199219

Token 387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.289376825094223
    2. ' and' → logprob: -1.9143768548965454
    3. 'and' → logprob: -2.289376735687256
    4. ':' → logprob: -6.164376735687256
    5. '           ' → logprob: -8.539377212524414
    6. '       ' → logprob: -9.539377212524414
    7. '):
' → logprob: -10.414377212524414
    8. ' :
' → logprob: -10.539377212524414
    9. '   ' → logprob: -10.789377212524414
    10. '
' → logprob: -11.289377212524414

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023144153878092766
    2. 'if' → logprob: -4.273144245147705
    3. ' if' → logprob: -4.898144245147705
    4. '       ' → logprob: -6.773144245147705
    5. '```' → logprob: -8.773143768310547
    6. '   ' → logprob: -9.648143768310547
    7. ' and' → logprob: -10.023143768310547
    8. '
' → logprob: -10.898143768310547
    9. 'and' → logprob: -11.898143768310547
    10. '	if' → logprob: -12.148143768310547

Token 389: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6099749803543091
    2. '           ' → logprob: -1.359974980354309
    3. 'if' (adapté à ' if') → logprob: -1.609974980354309
    4. '       ' → logprob: -9.73497486114502
    5. '   ' → logprob: -11.98497486114502
    6. '               ' → logprob: -12.85997486114502
    7. ' ' → logprob: -12.98497486114502
    8. '          ' → logprob: -13.48497486114502
    9. '```' → logprob: -13.85997486114502
    10. '
' → logprob: -13.98497486114502

Token 390: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023245826363563538
    2. ' w' → logprob: -3.7732458114624023
    3. '	w' → logprob: -15.273245811462402
    4. '   ' → logprob: -16.39824676513672
    5. ' ' → logprob: -16.89824676513672
    6. '(w' → logprob: -17.52324676513672
    7. 'wp' → logprob: -18.52324676513672
    8. '    ' → logprob: -18.89824676513672
    9. ' ' → logprob: -19.14824676513672
    10. '
' → logprob: -19.39824676513672

Token 391: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.246537173457909e-06
    2. '[q' → logprob: -12.375003814697266
    3. ' q' → logprob: -19.625003814697266
    4. '_q' → logprob: -20.250003814697266
    5. '	q' → logprob: -20.375003814697266
    6. '
' → logprob: -20.750003814697266
    7. '[' → logprob: -20.750003814697266
    8. '```' → logprob: -22.250003814697266
    9. '[
' → logprob: -22.375003814697266
    10. '   ' → logprob: -23.250003814697266

Token 392: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. 'q' → logprob: -17.625
    4. ' [' → logprob: -17.875
    5. '
' → logprob: -18.625
    6. '[
' → logprob: -20.375
    7. '	q' → logprob: -21.125
    8. '(q' → logprob: -21.5
    9. '[j' → logprob: -21.875
    10. '>' → logprob: -22.125

Token 393: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.39017635583877563
    2. ' >' → logprob: -1.1401762962341309
    3. ']' → logprob: -5.765176296234131
    4. ']>' → logprob: -8.890176773071289
    5. ')' → logprob: -11.140176773071289
    6. '">' → logprob: -12.890176773071289
    7. ')>' → logprob: -13.015176773071289
    8. ' ' → logprob: -13.015176773071289
    9. ' ]' → logprob: -13.140176773071289
    10. '           ' → logprob: -14.265176773071289

Token 394: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38687393069267273
    2. ' >' → logprob: -1.1368739604949951
    3. ' ' → logprob: -14.261874198913574
    4. '>K' → logprob: -14.761874198913574
    5. '()>' → logprob: -14.886874198913574
    6. '>
' → logprob: -15.386874198913574
    7. '">' → logprob: -15.511874198913574
    8. '   ' → logprob: -15.636874198913574
    9. ')>' → logprob: -16.011873245239258
    10. '           ' → logprob: -16.261873245239258

Token 395: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.47407740354537964
    2. ' k' → logprob: -0.9740774035453796
    3. '	k' → logprob: -15.099077224731445
    4. ' ' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.974077224731445
    6. '=k' → logprob: -18.099077224731445
    7. '
' → logprob: -18.224077224731445
    8. '```' → logprob: -18.474077224731445
    9. ' к' → logprob: -19.224077224731445
    10. '{k' → logprob: -19.224077224731445

Token 396: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5728829503059387
    2. ':' → logprob: -0.9478829503059387
    3. '               ' → logprob: -3.197882890701294
    4. '           ' → logprob: -5.197883129119873
    5. ' or' → logprob: -7.322883129119873
    6. ' :
' → logprob: -7.822883129119873
    7. ' and' → logprob: -8.072882652282715
    8. ')' → logprob: -8.572882652282715
    9. '):
' → logprob: -8.697882652282715
    10. ' :' → logprob: -8.822882652282715

Token 397: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.501578688621521
    2. '1' → logprob: -1.001578688621521
    3. '           ' → logprob: -3.8765788078308105
    4. ' ' → logprob: -5.8765788078308105
    5. '0' → logprob: -6.0015788078308105
    6. '
' → logprob: -7.3765788078308105
    7. '             ' → logprob: -8.876578330993652
    8. ':
' → logprob: -9.126578330993652
    9. '              ' → logprob: -9.501578330993652
    10. 'bad' → logprob: -10.251578330993652

Token 398: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' (adapté à ' bad') → logprob: -0.12961800396442413
    2. 'break' → logprob: -2.504617929458618
    3. '               ' → logprob: -4.004618167877197
    4. '           ' → logprob: -4.379618167877197
    5. ' bad' → logprob: -5.379618167877197
    6. 'flag' → logprob: -6.629618167877197
    7. 'b' → logprob: -7.004618167877197
    8. ' break' → logprob: -7.129618167877197
    9. 'q' → logprob: -7.629618167877197
    10. 'cnt' → logprob: -8.754617691040039

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602482944726944
    2. '=' → logprob: -1.9102482795715332
    3. ' ' → logprob: -11.160248756408691
    4. ' +=' → logprob: -12.785248756408691
    5. '           ' → logprob: -12.785248756408691
    6. ' ==' → logprob: -13.410248756408691
    7. '               ' → logprob: -14.785248756408691
    8. '=True' → logprob: -14.785248756408691
    9. '   ' → logprob: -15.035248756408691
    10. '==' → logprob: -15.410248756408691

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.87507438659668
    4. '１' → logprob: -18.50007438659668
    5. '           ' → logprob: -19.00007438659668
    6. '  ' → logprob: -19.06257438659668
    7. ' ' → logprob: -19.37507438659668
    8. 'True' → logprob: -19.50007438659668
    9. '       ' → logprob: -19.62507438659668
    10. '
' → logprob: -19.81257438659668

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.375
    4. '１' → logprob: -21.25
    5. '2' → logprob: -21.875
    6. 'True' → logprob: -22.25
    7. '
' → logprob: -22.25
    8. '0' → logprob: -22.8125
    9. '  ' → logprob: -23.0
    10. '	' → logprob: -23.0

Token 402: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12750406563282013
    2. '
' → logprob: -2.1275041103363037
    3. '  
' → logprob: -9.127504348754883
    4. ' 
' → logprob: -9.252504348754883
    5. '<|end|>' → logprob: -9.627504348754883
    6. '                
' → logprob: -9.752504348754883
    7. '                   ' → logprob: -10.127504348754883
    8. '			' → logprob: -10.502504348754883
    9. ' break' → logprob: -10.627504348754883
    10. '           ' → logprob: -10.752504348754883

Token 403: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005239616730250418
    2. '
' → logprob: -8.375523567199707
    3. '                
' → logprob: -9.250523567199707
    4. '       ' → logprob: -10.125523567199707
    5. '<|end|>' → logprob: -10.500523567199707
    6. '                ' → logprob: -11.000523567199707
    7. ' break' → logprob: -11.125523567199707
    8. 'break' → logprob: -11.375523567199707
    9. '           ' → logprob: -11.500523567199707
    10. '  
' → logprob: -11.500523567199707

Token 404: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38789495825767517
    2. ' break' → logprob: -1.1378949880599976
    3. '           ' → logprob: -7.387895107269287
    4. '               ' → logprob: -8.012894630432129
    5. 'q' → logprob: -10.637894630432129
    6. '       ' → logprob: -11.137894630432129
    7. ' q' → logprob: -11.262894630432129
    8. ' ' → logprob: -12.387894630432129
    9. 'b' → logprob: -12.387894630432129
    10. 'j' → logprob: -12.762894630432129

Token 405: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3176705539226532
    2. ' 
' → logprob: -2.1926705837249756
    3. '       ' → logprob: -2.5676705837249756
    4. '<|end|>' → logprob: -2.9426705837249756
    5. '  
' → logprob: -3.9426705837249756
    6. '        
' → logprob: -5.6926703453063965
    7. '\n' → logprob: -5.9426703453063965
    8. '               ' → logprob: -6.8176703453063965
    9. '```' → logprob: -6.9426703453063965
    10. '    
' → logprob: -7.4426703453063965

Token 406: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0468725860118866
    2. '
' → logprob: -3.796872615814209
    3. '<|end|>' → logprob: -4.546872615814209
    4. ' 
' → logprob: -5.546872615814209
    5. '  
' → logprob: -5.546872615814209
    6. '\n' → logprob: -6.921872615814209
    7. '        
' → logprob: -7.421872615814209
    8. ' q' → logprob: -7.671872615814209
    9. '               ' → logprob: -7.671872615814209
    10. '	' → logprob: -8.17187213897705

Token 407: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.009349199943244457
    2. ' q' → logprob: -4.759349346160889
    3. '       ' → logprob: -7.384349346160889
    4. '           ' → logprob: -9.50934886932373
    5. '               ' → logprob: -11.75934886932373
    6. '
' → logprob: -11.75934886932373
    7. 'if' → logprob: -11.88434886932373
    8. '   ' → logprob: -12.25934886932373
    9. ' if' → logprob: -12.25934886932373
    10. ' ' → logprob: -13.13434886932373

Token 408: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47552287578582764
    2. '+=' → logprob: -0.9755228757858276
    3. '=' → logprob: -7.225522994995117
    4. '+' → logprob: -7.475522994995117
    5. ' =' → logprob: -9.725522994995117
    6. '           ' → logprob: -10.225522994995117
    7. ' +' → logprob: -11.100522994995117
    8. '       ' → logprob: -11.225522994995117
    9. '        ' → logprob: -11.350522994995117
    10. '            ' → logprob: -11.725522994995117

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.625625610351562
    4. '           ' → logprob: -18.875625610351562
    5. '0' → logprob: -19.000625610351562
    6. '```' → logprob: -19.313125610351562
    7. '       ' → logprob: -19.625625610351562
    8. '
' → logprob: -20.438125610351562
    9. '１' → logprob: -20.438125610351562
    10. '  ' → logprob: -20.438125610351562

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.1250057220459
    4. '
' → logprob: -18.9375057220459
    5. '```' → logprob: -18.9375057220459
    6. '１' → logprob: -19.6875057220459
    7. '  ' → logprob: -20.0625057220459
    8. '0' → logprob: -20.2500057220459
    9. '           ' → logprob: -20.5000057220459
    10. '       ' → logprob: -20.9375057220459

Token 411: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0075242891907691956
    2. '
' → logprob: -5.007524490356445
    3. '<|end|>' → logprob: -7.632524490356445
    4. ' if' → logprob: -8.632524490356445
    5. 'if' → logprob: -10.632524490356445
    6. ',' → logprob: -10.882524490356445
    7. '        
' → logprob: -11.007524490356445
    8. ' 
' → logprob: -11.007524490356445
    9. ' ' → logprob: -11.257524490356445
    10. '  
' → logprob: -11.257524490356445

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006099431309849024
    2. ' if' → logprob: -5.756099224090576
    3. '<|end|>' → logprob: -6.631099224090576
    4. '
' → logprob: -6.756099224090576
    5. 'if' → logprob: -8.506099700927734
    6. ',' → logprob: -10.131099700927734
    7. '        ' → logprob: -10.131099700927734
    8. ' 
' → logprob: -10.756099700927734
    9. ')' → logprob: -10.881099700927734
    10. ' ' → logprob: -10.881099700927734

Token 413: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3970350921154022
    2. '       ' → logprob: -1.3970351219177246
    3. 'if' (adapté à ' if') → logprob: -2.5220351219177246
    4. '        ' → logprob: -11.272034645080566
    5. '   ' → logprob: -11.272034645080566
    6. '
' → logprob: -11.647034645080566
    7. '	if' → logprob: -12.022034645080566
    8. 'If' → logprob: -12.397034645080566
    9. ' ' → logprob: -12.647034645080566
    10. '           ' → logprob: -12.772034645080566

Token 414: ' bad' (ID: 4790)
  Prédit: ' bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bad' → logprob: -0.018158724531531334
    2. 'bad' → logprob: -4.018158912658691
    3. ' ' → logprob: -13.018158912658691
    4. '_bad' → logprob: -13.268158912658691
    5. 'b' → logprob: -13.518158912658691
    6. '
' → logprob: -13.768158912658691
    7. '   ' → logprob: -14.518158912658691
    8. ' good' → logprob: -14.643158912658691
    9. 'j' → logprob: -15.268158912658691
    10. '.bad' → logprob: -15.518158912658691

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06860477477312088
    2. ' ==' → logprob: -3.4436047077178955
    3. '==' → logprob: -3.8186047077178955
    4. ':
' → logprob: -4.443604946136475
    5. '=' → logprob: -8.193604469299316
    6. ' :' → logprob: -8.318604469299316
    7. ' =' → logprob: -10.318604469299316
    8. ' :
' → logprob: -10.693604469299316
    9. ' and' → logprob: -11.193604469299316
    10. ' ' → logprob: -11.693604469299316

Token 416: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5481100082397461
    2. '           ' → logprob: -0.9231100082397461
    3. ' ans' → logprob: -4.423110008239746
    4. ':
' → logprob: -5.298110008239746
    5. 'ans' → logprob: -5.673110008239746
    6. '   ' → logprob: -5.923110008239746
    7. ' and' → logprob: -7.673110008239746
    8. ':' → logprob: -7.798110008239746
    9. ' cnt' → logprob: -8.673110008239746
    10. '
' → logprob: -9.048110008239746

Token 417: ' cnt' (ID: 27340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5569523572921753
    2. 'cnt' (adapté à ' cnt') → logprob: -1.4319523572921753
    3. '           ' → logprob: -1.6819523572921753
    4. '   ' → logprob: -7.181952476501465
    5. 'j' → logprob: -7.181952476501465
    6. '       ' → logprob: -8.431952476501465
    7. '
' → logprob: -8.556952476501465
    8. ' ans' → logprob: -9.681952476501465
    9. 'count' → logprob: -10.056952476501465
    10. 'answer' → logprob: -10.556952476501465

Token 418: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0001037815964082256
    2. '+=' → logprob: -9.250103950500488
    3. ' =' → logprob: -12.375103950500488
    4. ' +' → logprob: -13.250103950500488
    5. ' ' → logprob: -14.000103950500488
    6. '+' → logprob: -14.875103950500488
    7. ' -=' → logprob: -16.250102996826172
    8. '  ' → logprob: -16.875102996826172
    9. ' ,' → logprob: -17.625102996826172
    10. ' ' → logprob: -17.875102996826172

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -20.750024795532227
    4. '+' → logprob: -21.000024795532227
    5. '2' → logprob: -21.875024795532227
    6. '１' → logprob: -21.875024795532227
    7. '```' → logprob: -22.250024795532227
    8. '
' → logprob: -22.250024795532227
    9. '10' → logprob: -22.875024795532227
    10. ' ' → logprob: -23.000024795532227

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -21.0
    4. 'w' → logprob: -21.125
    5. '
' → logprob: -21.25
    6. '+' → logprob: -22.0
    7. '۱' → logprob: -22.0
    8. '   ' → logprob: -22.0625
    9. '<|end|>' → logprob: -22.1875
    10. '１' → logprob: -22.3125

Token 421: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.512138843536377
    2. '           ' → logprob: -1.387138843536377
    3. ' 
' → logprob: -2.262138843536377
    4. '            
' → logprob: -3.887138843536377
    5. ' i' → logprob: -5.012138843536377
    6. 'i' → logprob: -5.262138843536377
    7. '  
' → logprob: -5.637138843536377
    8. '    
' → logprob: -5.637138843536377
    9. '        
' → logprob: -6.762138843536377
    10. '   
' → logprob: -7.262138843536377

Token 422: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5143928527832031
    2. ' 
' → logprob: -1.2643928527832031
    3. 'i' → logprob: -3.139392852783203
    4. ' i' → logprob: -3.764392852783203
    5. '            
' → logprob: -4.639392852783203
    6. '           ' → logprob: -4.889392852783203
    7. '    
' → logprob: -4.889392852783203
    8. '  
' → logprob: -5.139392852783203
    9. '\n' → logprob: -5.639392852783203
    10. ' j' → logprob: -6.014392852783203

Token 423: ' for' (ID: 395)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0428878590464592
    2. '           ' → logprob: -3.5428879261016846
    3. 'j' → logprob: -4.4178876876831055
    4. '       ' → logprob: -7.7928876876831055
    5. 'ans' → logprob: -8.042887687683105
    6. 'i' → logprob: -9.292887687683105
    7. 'wj' → logprob: -9.917887687683105
    8. '   ' → logprob: -10.292887687683105
    9. 'wp' → logprob: -10.792887687683105
    10. '
' → logprob: -11.167887687683105

Token 424: ' ix' (ID: 44402)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03760461509227753
    2. 'r' → logprob: -4.412604808807373
    3. 'x' → logprob: -4.412604808807373
    4. 'p' → logprob: -4.537604808807373
    5. ' q' → logprob: -7.412604808807373
    6. 'qq' → logprob: -7.912604808807373
    7. 'idx' → logprob: -8.037604331970215
    8. '_q' → logprob: -8.162604331970215
    9. 'm' → logprob: -9.037604331970215
    10. '_' → logprob: -9.537604331970215

Token 425: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.388450562953949
    2. 'in' → logprob: -1.1384506225585938
    3. ' ' → logprob: -6.513450622558594
    4. 'q' → logprob: -9.638450622558594
    5. '0' → logprob: -11.138450622558594
    6. 'x' → logprob: -12.263450622558594
    7. 'i' → logprob: -13.388450622558594
    8. ' q' → logprob: -13.388450622558594
    9. 'n' → logprob: -13.638450622558594
    10. '	in' → logprob: -14.013450622558594

Token 426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858771339058876
    2. ' range' → logprob: -3.0485877990722656
    3. '(range' → logprob: -15.923587799072266
    4. ' ' → logprob: -16.048587799072266
    5. '	range' → logprob: -17.173587799072266
    6. '  ' → logprob: -17.798587799072266
    7. 'in' → logprob: -17.798587799072266
    8. ' in' → logprob: -18.173587799072266
    9. '   ' → logprob: -18.298587799072266
    10. 'rang' → logprob: -19.798587799072266

Token 427: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00798490084707737
    2. '(h' → logprob: -4.8829851150512695
    3. 'q' → logprob: -8.13298511505127
    4. '0' → logprob: -9.63298511505127
    5. ' h' → logprob: -12.00798511505127
    6. '(' → logprob: -12.50798511505127
    7. 'len' → logprob: -12.88298511505127
    8. '(q' → logprob: -13.25798511505127
    9. '   ' → logprob: -13.75798511505127
    10. 'w' → logprob: -14.00798511505127

Token 428: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023696010932326317
    2. '):' → logprob: -3.773695945739746
    3. '           ' → logprob: -8.523695945739746
    4. 'q' → logprob: -9.273695945739746
    5. '):
' → logprob: -9.773695945739746
    6. '       ' → logprob: -10.773695945739746
    7. ')' → logprob: -11.273695945739746
    8. ' ):
' → logprob: -11.523695945739746
    9. 'w' → logprob: -11.773695945739746
    10. '               ' → logprob: -11.898695945739746

Token 429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6570276618003845
    2. 'w' → logprob: -1.1570277214050293
    3. ' w' → logprob: -2.0320277214050293
    4. '           ' → logprob: -3.4070277214050293
    5. '   ' → logprob: -6.282027721405029
    6. '       ' → logprob: -7.532027721405029
    7. ' ' → logprob: -7.782027721405029
    8. '	w' → logprob: -10.532027244567871
    9. ',w' → logprob: -11.032027244567871
    10. '              ' → logprob: -11.157027244567871

Token 430: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.011766990646719933
    2. ' w' → logprob: -5.1367669105529785
    3. '               ' → logprob: -5.2617669105529785
    4. '           ' → logprob: -7.5117669105529785
    5. '                   ' → logprob: -11.136767387390137
    6. '              ' → logprob: -11.386767387390137
    7. '0' → logprob: -11.511767387390137
    8. ')' → logprob: -11.636767387390137
    9. '                
' → logprob: -12.136767387390137
    10. '   ' → logprob: -12.136767387390137

Token 431: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4021237802808173e-05
    2. '[q' → logprob: -11.500014305114746
    3. 'qx' → logprob: -12.500014305114746
    4. ' q' → logprob: -16.37501335144043
    5. '_q' → logprob: -17.00001335144043
    6. '	q' → logprob: -17.00001335144043
    7. '[ix' → logprob: -17.50001335144043
    8. '[' → logprob: -17.62501335144043
    9. 'ix' → logprob: -19.12501335144043
    10. 'qid' → logprob: -19.50001335144043

Token 432: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.125003814697266
    3. ' [' → logprob: -14.375003814697266
    4. '[:]' → logprob: -15.000003814697266
    5. '[i' → logprob: -15.500003814697266
    6. ' =' → logprob: -15.875003814697266
    7. '[ip' → logprob: -16.000003814697266
    8. 'ix' → logprob: -16.500003814697266
    9. '[idx' → logprob: -16.750003814697266
    10. '```' → logprob: -16.875003814697266

Token 433: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3516048789024353
    2. ' =' → logprob: -1.22660493850708
    3. ')' → logprob: -6.10160493850708
    4. ']' → logprob: -7.97660493850708
    5. ')=' → logprob: -8.101604461669922
    6. ']=' → logprob: -8.351604461669922
    7. ' -=' → logprob: -11.726604461669922
    8. ' )' → logprob: -11.976604461669922
    9. '<|end|>' → logprob: -12.101604461669922
    10. '-=' → logprob: -12.601604461669922

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815052703022957
    2. ' =' → logprob: -4.018150329589844
    3. '-=' → logprob: -15.143150329589844
    4. ' -=' → logprob: -16.143150329589844
    5. '=w' → logprob: -17.143150329589844
    6. '=False' → logprob: -17.518150329589844
    7. '=cut' → logprob: -17.518150329589844
    8. '＝' → logprob: -17.643150329589844
    9. ' ' → logprob: -17.768150329589844
    10. '<|end|>' → logprob: -17.893150329589844

Token 435: ' wp' (ID: 27047)
  Prédit: 'wp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wp' → logprob: -0.0008142740116454661
    2. '0' → logprob: -7.125814437866211
    3. ' wp' → logprob: -11.625814437866211
    4. '	wp' → logprob: -14.750814437866211
    5. 'wps' → logprob: -16.25081443786621
    6. '$wp' → logprob: -16.37581443786621
    7. 'w' → logprob: -16.50081443786621
    8. 'vp' → logprob: -17.00081443786621
    9. ' ' → logprob: -17.12581443786621
    10. '_wp' → logprob: -17.25081443786621

Token 436: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.012985151261091232
    2. '[cnt' → logprob: -4.3879852294921875
    3. '[i' → logprob: -8.512985229492188
    4. '[idx' → logprob: -8.637985229492188
    5. '[' → logprob: -10.137985229492188
    6. '[][' → logprob: -11.012985229492188
    7. 'cnt' → logprob: -11.762985229492188
    8. '[count' → logprob: -12.012985229492188
    9. '[c' → logprob: -12.137985229492188
    10. '[counter' → logprob: -12.387985229492188

Token 437: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1541488617658615
    2. '][' → logprob: -2.029148817062378
    3. '[ix' → logprob: -4.904149055480957
    4. '[q' → logprob: -6.404149055480957
    5. '[idx' → logprob: -6.904149055480957
    6. '[' → logprob: -7.154149055480957
    7. ')[' → logprob: -8.654149055480957
    8. '[][' → logprob: -9.654149055480957
    9. ' ][' → logprob: -10.029149055480957
    10. '[js' → logprob: -10.154149055480957

Token 438: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0802738870552275e-05
    2. ' j' → logprob: -11.87501049041748
    3. '[j' → logprob: -12.75001049041748
    4. ']' → logprob: -15.37501049041748
    5. '[' → logprob: -16.250011444091797
    6. '0' → logprob: -16.375011444091797
    7. '	j' → logprob: -16.375011444091797
    8. '][' → logprob: -16.375011444091797
    9. '<|end|>' → logprob: -16.625011444091797
    10. 'idx' → logprob: -17.125011444091797

Token 439: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06260814517736435
    2. '<|end|>' → logprob: -2.812608242034912
    3. '<|end|>' → logprob: -8.687607765197754
    4. ']
' → logprob: -8.687607765197754
    5. ')' → logprob: -9.062607765197754
    6. ' ]' → logprob: -9.812607765197754
    7. '])' → logprob: -10.062607765197754
    8. '0' → logprob: -10.937607765197754
    9. '],' → logprob: -11.437607765197754
    10. '](' → logprob: -11.562607765197754

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31048858165740967
    2. '
' → logprob: -2.560488700866699
    3. ' 
' → logprob: -2.810488700866699
    4. '  
' → logprob: -3.310488700866699
    5. ' j' → logprob: -3.810488700866699
    6. '           ' → logprob: -4.060488700866699
    7. '   ' → logprob: -4.310488700866699
    8. 'j' → logprob: -4.685488700866699
    9. '    
' → logprob: -4.810488700866699
    10. ' ' → logprob: -5.060488700866699

Token 441: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.14929577708244324
    2. ' j' → logprob: -2.0242958068847656
    3. '	j' → logprob: -5.899295806884766
    4. '       ' → logprob: -6.774295806884766
    5. '   ' → logprob: -6.899295806884766
    6. ' 
' → logprob: -7.399295806884766
    7. ' ' → logprob: -7.774295806884766
    8. '  
' → logprob: -8.899295806884766
    9. ' ' → logprob: -9.274295806884766
    10. '    
' → logprob: -9.274295806884766

Token 442: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13168375194072723
    2. ' +=' → logprob: -2.131683826446533
    3. '+' → logprob: -5.381683826446533
    4. '=' → logprob: -8.881683349609375
    5. '++' → logprob: -12.631683349609375
    6. ' ' → logprob: -14.631683349609375
    7. ' +' → logprob: -14.631683349609375
    8. '+="' → logprob: -15.256683349609375
    9. ']+=' → logprob: -15.381683349609375
    10. '+='' → logprob: -15.381683349609375

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -21.12523078918457
    4. '１' → logprob: -21.87523078918457
    5. '   ' → logprob: -22.25023078918457
    6. '+' → logprob: -22.25023078918457
    7. ' ' → logprob: -22.50023078918457
    8. '2' → logprob: -22.87523078918457
    9. '0' → logprob: -23.25023078918457
    10. '۱' → logprob: -24.06273078918457

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.500001907348633
    4. '１' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.937501907348633
    6. '0' → logprob: -20.125001907348633
    7. '+' → logprob: -20.562501907348633
    8. '2' → logprob: -20.562501907348633
    9. '`' → logprob: -21.375001907348633
    10. '3' → logprob: -21.500001907348633

Token 445: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7960435748100281
    2. ' ans' → logprob: -0.7960435748100281
    3. '
' → logprob: -2.671043634414673
    4. '   ' → logprob: -3.796043634414673
    5. ' if' → logprob: -5.796043395996094
    6. 'if' → logprob: -6.046043395996094
    7. '(ans' → logprob: -8.171043395996094
    8. '	ans' → logprob: -8.921043395996094
    9. '_ans' → logprob: -9.296043395996094
    10. '
' → logprob: -9.296043395996094

Token 446: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001974311424419284
    2. 'if' → logprob: -6.251974105834961
    3. ' ans' → logprob: -10.626974105834961
    4. 'else' → logprob: -11.751974105834961
    5. '
' → logprob: -12.376974105834961
    6. 'print' → logprob: -12.501974105834961
    7. '```' → logprob: -12.626974105834961
    8. 'answer' → logprob: -13.876974105834961
    9. ' if' → logprob: -14.501974105834961
    10. '(ans' → logprob: -14.626974105834961

Token 447: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011647765524685383
    2. ' ans' → logprob: -5.136647701263428
    3. 'if' (adapté à ' if') → logprob: -5.261647701263428
    4. '
' → logprob: -8.261648178100586
    5. ' if' → logprob: -8.386648178100586
    6. '   ' → logprob: -11.011648178100586
    7. '(ans' → logprob: -12.386648178100586
    8. 'answer' → logprob: -13.011648178100586
    9. '	ans' → logprob: -13.261648178100586
    10. '    
' → logprob: -13.636648178100586

Token 448: ' ans' (ID: 3345)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5356192588806152
    2. 'cnt' → logprob: -0.9106192588806152
    3. ' ans' → logprob: -4.535619258880615
    4. 'ans' → logprob: -6.410619258880615
    5. '(cnt' → logprob: -10.660619735717773
    6. '	cnt' → logprob: -11.035619735717773
    7. '[cnt' → logprob: -12.535619735717773
    8. ' ' → logprob: -12.785619735717773
    9. '   ' → logprob: -13.410619735717773
    10. '(ans' → logprob: -13.660619735717773

Token 449: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011312354356050491
    2. ' >' → logprob: -4.511312484741211
    3. '=' → logprob: -8.261312484741211
    4. ' =' → logprob: -12.136312484741211
    5. '">' → logprob: -15.261312484741211
    6. '   ' → logprob: -15.636312484741211
    7. ')' → logprob: -16.26131248474121
    8. '＞' → logprob: -16.76131248474121
    9. '>b' → logprob: -17.13631248474121
    10. ' ' → logprob: -17.26131248474121

Token 450: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0009117019944824278
    2. ' cnt' → logprob: -7.000911712646484
    3. '	cnt' → logprob: -16.375911712646484
    4. '(cnt' → logprob: -18.250911712646484
    5. 'count' → logprob: -18.500911712646484
    6. '   ' → logprob: -19.000911712646484
    7. '[cnt' → logprob: -19.125911712646484
    8. ' ' → logprob: -20.250911712646484
    9. 'cn' → logprob: -20.625911712646484
    10. '_cnt' → logprob: -21.250911712646484

Token 451: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759488344192505
    2. ':' → logprob: -0.8259488344192505
    3. ' :
' → logprob: -12.575948715209961
    4. '   ' → logprob: -13.075948715209961
    5. ':
' → logprob: -13.200948715209961
    6. '=' → logprob: -14.575948715209961
    7. '):
' → logprob: -14.700948715209961
    8. ':

' → logprob: -14.825948715209961
    9. ' :' → logprob: -15.075948715209961
    10. ' ans' → logprob: -15.950948715209961

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016820825403556228
    2. '   ' → logprob: -6.876682281494141
    3. ' ans' → logprob: -7.501682281494141
    4. '	ans' → logprob: -10.00168228149414
    5. 'ans' → logprob: -10.25168228149414
    6. '(ans' → logprob: -12.00168228149414
    7. '```' → logprob: -12.12668228149414
    8. '           ' → logprob: -13.75168228149414
    9. ',' → logprob: -14.37668228149414
    10. ':
' → logprob: -14.50168228149414

Token 453: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.011132592335343361
    2. 'ans' (adapté à ' ans') → logprob: -4.511132717132568
    3. '	ans' → logprob: -9.76113224029541
    4. '   ' → logprob: -11.26113224029541
    5. '       ' → logprob: -11.51113224029541
    6. '(ans' → logprob: -12.76113224029541
    7. '_ans' → logprob: -13.88613224029541
    8. '           ' → logprob: -15.26113224029541
    9. 'Ans' → logprob: -17.011133193969727
    10. '```' → logprob: -17.386133193969727

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. '＝' → logprob: -15.938261985778809
    4. ' ' → logprob: -16.688261032104492
    5. ' =
' → logprob: -17.188261032104492
    6. '.=' → logprob: -18.563261032104492
    7. '=

' → logprob: -19.063261032104492
    8. ' =
' → logprob: -19.438261032104492
    9. ' =)' → logprob: -19.563261032104492
    10. ',' → logprob: -19.688261032104492

Token 455: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.01815052703022957
    2. ' cnt' → logprob: -4.018150329589844
    3. '	cnt' → logprob: -15.268150329589844
    4. '(cnt' → logprob: -15.518150329589844
    5. 'count' → logprob: -16.143150329589844
    6. '[cnt' → logprob: -16.768150329589844
    7. 'ans' → logprob: -18.893150329589844
    8. '_cnt' → logprob: -19.518150329589844
    9. ' ans' → logprob: -20.393150329589844
    10. 'c' → logprob: -21.268150329589844

Token 456: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014899324625730515
    2. '
' → logprob: -4.264899253845215
    3. ' print' → logprob: -7.264899253845215
    4. ' 
' → logprob: -11.514899253845215
    5. '\n' → logprob: -12.139899253845215
    6. '(print' → logprob: -12.389899253845215
    7. 'i' → logprob: -12.514899253845215
    8. '```' → logprob: -12.514899253845215
    9. '<|end|>' → logprob: -12.639899253845215
    10. ')' → logprob: -13.514899253845215

Token 457: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07975553721189499
    2. '
' → logprob: -2.5797555446624756
    3. ' print' → logprob: -7.7047553062438965
    4. '\n' → logprob: -8.079755783081055
    5. ' 
' → logprob: -9.954755783081055
    6. '```' → logprob: -10.829755783081055
    7. '(print' → logprob: -11.579755783081055
    8. '
' → logprob: -11.829755783081055
    9. 'i' → logprob: -12.704755783081055
    10. '+
' → logprob: -12.704755783081055

Token 458: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004176817834377289
    2. 'print' → logprob: -5.504176616668701
    3. ' i' → logprob: -9.25417709350586
    4. '\' → logprob: -14.37917709350586
    5. '   ' → logprob: -14.62917709350586
    6. '_i' → logprob: -14.75417709350586
    7. ' print' → logprob: -15.12917709350586
    8. '\n' → logprob: -15.37917709350586
    9. '
' → logprob: -15.37917709350586
    10. '```' → logprob: -15.75417709350586

Token 459: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16061006486415863
    2. ' +=' → logprob: -1.9106100797653198
    3. '+' → logprob: -7.910610198974609
    4. '=' → logprob: -11.91061019897461
    5. ' ' → logprob: -12.16061019897461
    6. ']+=' → logprob: -13.03561019897461
    7. '+='' → logprob: -13.53561019897461
    8. '+="' → logprob: -13.78561019897461
    9. '<|end|>' → logprob: -14.78561019897461
    10. ' <<=' → logprob: -14.78561019897461

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.000295639038086
    4. '```' → logprob: -19.125295639038086
    5. '  ' → logprob: -19.750295639038086
    6. '    ' → logprob: -20.125295639038086
    7. '100' → logprob: -20.750295639038086
    8. 'i' → logprob: -20.812795639038086
    9. '１' → logprob: -20.812795639038086
    10. '2' → logprob: -21.000295639038086

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '```' → logprob: -18.875001907348633
    5. '１' → logprob: -20.250001907348633
    6. '  ' → logprob: -20.312501907348633
    7. '+' → logprob: -20.875001907348633
    8. '
' → logprob: -21.375001907348633
    9. '0' → logprob: -21.750001907348633
    10. '       ' → logprob: -21.812501907348633

Token 462: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018204381689429283
    2. '
' → logprob: -4.018204212188721
    3. ' print' → logprob: -10.018204689025879
    4. '```' → logprob: -12.143204689025879
    5. ' 
' → logprob: -13.393204689025879
    6. 'p' → logprob: -14.393204689025879
    7. '
' → logprob: -14.893204689025879
    8. '

' → logprob: -14.893204689025879
    9. '<|end|>' → logprob: -14.893204689025879
    10. ')' → logprob: -15.143204689025879

Token 463: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003210422000847757
    2. '
' → logprob: -8.125321388244629
    3. ' print' → logprob: -11.125321388244629
    4. '```' → logprob: -12.250321388244629
    5. 'p' → logprob: -12.625321388244629
    6. 'pr' → logprob: -13.875321388244629
    7. ')' → logprob: -15.500321388244629
    8. '#print' → logprob: -15.625321388244629
    9. '.print' → logprob: -15.750321388244629
    10. '\n' → logprob: -15.875321388244629

Token 464: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023253632709383965
    2. '(' → logprob: -3.7732536792755127
    3. ' (' → logprob: -12.773253440856934
    4. 'ans' → logprob: -12.773253440856934
    5. '('' → logprob: -13.648253440856934
    6. '(
' → logprob: -14.523253440856934
    7. '()' → logprob: -15.148253440856934
    8. ' ans' → logprob: -15.648253440856934
    9. '(answer' → logprob: -16.14825439453125
    10. '(abs' → logprob: -17.02325439453125

Token 465: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. '+' → logprob: -11.500019073486328
    3. ' )' → logprob: -11.875019073486328
    4. ')
' → logprob: -13.875019073486328
    5. ')`' → logprob: -15.000019073486328
    6. '))' → logprob: -15.875019073486328
    7. '```' → logprob: -16.875019073486328
    8. '`)' → logprob: -17.000019073486328
    9. '()' → logprob: -17.125019073486328
    10. ' +' → logprob: -17.250019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 463
Tokens correctement prédits (1ère position, stricte): 196
Tokens correctement prédits (1ère position, avec adaptation): 215
Tokens correctement prédits (top 10): 418
Précision stricte (1ère position): 42.33%
Précision adaptée (1ère position): 46.44%
Précision (top 10): 90.28%
================================================================================
