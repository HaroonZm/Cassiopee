================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import collections
import copy
import heapq
import itertools
import math
import string
import sys

def S():
    """
    Lit une ligne depuis l'entrée standard, enlève les espaces de fin et retourne la chaîne de caractères obtenue.

    Returns:
        str: Ligne d'entrée sans saut de ligne ni espaces de fin.
    """
    return sys.stdin.readline().rstrip()

def M():
    """
    Lit une ligne depuis l'entrée standard, enlève les espaces de fin, divise la ligne en éléments séparés par des espaces,
    convertit chacun de ces éléments en entier et retourne un itérable map des entiers.

    Returns:
        map: Un itérable contenant les entiers extraits depuis la ligne.
    """
    return map(int, sys.stdin.readline().rstrip().split())

def I():
    """
    Lit une ligne depuis l'entrée standard, enlève les espaces de fin et convertit la chaîne résultante en entier.

    Returns:
        int: Entier extrait depuis la ligne d'entrée.
    """
    return int(sys.stdin.readline().rstrip())

def LI():
    """
    Lit une ligne depuis l'entrée standard, enlève les espaces de fin, divise la ligne en éléments séparés par des espaces,
    convertit chacun de ces éléments en entier et retourne une liste d'entiers.

    Returns:
        list: Liste de tous les entiers lus sur la ligne.
    """
    return list(map(int, sys.stdin.readline().rstrip().split()))

def LS():
    """
    Lit une ligne depuis l'entrée standard, enlève les espaces de fin, puis divise la chaîne en une liste de sous-chaînes
    séparées par des espaces.

    Returns:
        list: Liste de chaînes représentant les éléments de la ligne séparés par espaces.
    """
    return list(sys.stdin.readline().rstrip().split())

# Lit une chaîne de caractères depuis l'entrée standard.
N = S()

# Initialise la liste 'ans' qui contiendra le résultat transformé.
ans = []

# Parcourt chaque caractère de la chaîne N.
for c in N:
    # Si le caractère est '1', remplace par '9' dans la liste de sortie.
    if c == '1':
        ans.append('9')
    # Sinon, remplace n'importe quel autre caractère par '1'.
    else:
        ans.append('1')

# Concatène la liste des caractères en une chaîne et affiche le résultat final.
print(''.join(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000293751887511462
    2. '(' → logprob: -8.625293731689453
    3. '.b' → logprob: -10.500293731689453
    4. '\n' → logprob: -11.250293731689453
    5. '\' → logprob: -11.500293731689453
    6. '.
' → logprob: -12.125293731689453
    7. '
' → logprob: -12.125293731689453
    8. '.\' → logprob: -12.250293731689453
    9. '' → logprob: -12.500293731689453
    10. '.e' → logprob: -12.500293731689453

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00028302724240347743
    2. '(' → logprob: -8.750283241271973
    3. '.
' → logprob: -10.750283241271973
    4. '.

' → logprob: -10.875283241271973
    5. '

' → logprob: -11.375283241271973
    6. '.b' → logprob: -11.625283241271973
    7. '\' → logprob: -11.625283241271973
    8. ',' → logprob: -11.750283241271973
    9. '' → logprob: -11.875283241271973
    10. '\n' → logprob: -12.000283241271973

Token 5: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18434125185012817
    2. ' math' → logprob: -1.9343411922454834
    3. 'sys' → logprob: -4.9343414306640625
    4. ' heap' → logprob: -5.0593414306640625
    5. ' collections' → logprob: -5.0593414306640625
    6. 'math' → logprob: -6.9343414306640625
    7. 'collections' → logprob: -7.0593414306640625
    8. ' itertools' → logprob: -7.0593414306640625
    9. ' os' → logprob: -7.4343414306640625
    10. 'heap' → logprob: -7.6843414306640625

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2351910024881363
    2. '
' → logprob: -1.985190987586975
    3. '\n' → logprob: -3.8601911067962646
    4. '

' → logprob: -4.2351908683776855
    5. 'import' → logprob: -4.6101908683776855
    6. '\' → logprob: -5.1101908683776855
    7. '.
' → logprob: -5.2351908683776855
    8. ',' → logprob: -5.2351908683776855
    9. '.

' → logprob: -6.7351908683776855
    10. '```' → logprob: -6.7351908683776855

Token 7: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2550610303878784
    2. '\n' → logprob: -1.6300610303878784
    3. '
' → logprob: -1.8800610303878784
    4. '\' → logprob: -2.380061149597168
    5. '```' → logprob: -2.880061149597168
    6. '

' → logprob: -3.130061149597168
    7. 'import' → logprob: -3.380061149597168
    8. 'class' → logprob: -3.755061149597168
    9. ',' → logprob: -3.880061149597168
    10. 'def' → logprob: -4.005061149597168

Token 8: ' copy' (ID: 5150)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.1997419148683548
    2. 'heap' → logprob: -2.574741840362549
    3. ' itertools' → logprob: -2.699741840362549
    4. ' math' → logprob: -3.699741840362549
    5. ' sys' → logprob: -5.449741840362549
    6. ' functools' → logprob: -5.699741840362549
    7. 'math' → logprob: -6.074741840362549
    8. ' threading' → logprob: -6.574741840362549
    9. 'it' → logprob: -8.199742317199707
    10. ' os' → logprob: -8.199742317199707

Token 9: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2551063299179077
    2. 'import' → logprob: -2.1301064491271973
    3. '
' → logprob: -2.7551064491271973
    4. '.
' → logprob: -4.880106449127197
    5. '

' → logprob: -5.005106449127197
    6. ',' → logprob: -5.380106449127197
    7. '_' → logprob: -5.505106449127197
    8. '\' → logprob: -5.880106449127197
    9. '.deepcopy' → logprob: -6.255106449127197
    10. '<|end|>' → logprob: -6.255106449127197

Token 10: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2325153350830078
    2. '.' → logprob: -1.3575153350830078
    3. '_' → logprob: -2.107515335083008
    4. '
' → logprob: -2.857515335083008
    5. '\' → logprob: -2.857515335083008
    6. '```' → logprob: -3.482515335083008
    7. '#' → logprob: -3.732515335083008
    8. '

' → logprob: -3.982515335083008
    9. '_
' → logprob: -3.982515335083008
    10. ',' → logprob: -3.982515335083008

Token 11: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6980901956558228
    2. ' datetime' → logprob: -1.6980901956558228
    3. ' itertools' → logprob: -2.073090076446533
    4. ' math' → logprob: -2.698090076446533
    5. ' functools' → logprob: -3.073090076446533
    6. ' dat' → logprob: -4.073090076446533
    7. ' csv' → logprob: -4.198090076446533
    8. 'heap' → logprob: -4.323090076446533
    9. ' threading' → logprob: -4.698090076446533
    10. ' enum' → logprob: -5.323090076446533

Token 12: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8789383830153383e-05
    2. 't' → logprob: -11.625019073486328
    3. 'queue' → logprob: -12.750019073486328
    4. 's' → logprob: -13.250019073486328
    5. 'u' → logprob: -13.875019073486328
    6. 'p' → logprob: -14.000019073486328
    7. '_' → logprob: -14.125019073486328
    8. '.' → logprob: -14.250019073486328
    9. 'e' → logprob: -14.375019073486328
    10. 'space' → logprob: -15.125019073486328

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08480760455131531
    2. '
' → logprob: -3.2098076343536377
    3. '\n' → logprob: -4.459807395935059
    4. '.' → logprob: -4.709807395935059
    5. '

' → logprob: -5.209807395935059
    6. '\' → logprob: -5.959807395935059
    7. '```' → logprob: -5.959807395935059
    8. ',' → logprob: -5.959807395935059
    9. '' → logprob: -6.209807395935059
    10. 'from' → logprob: -6.459807395935059

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.034880004823207855
    2. '
' → logprob: -4.5348801612854
    3. 'from' → logprob: -5.1598801612854
    4. '.' → logprob: -5.9098801612854
    5. ',' → logprob: -6.0348801612854
    6. '

' → logprob: -6.1598801612854
    7. '```' → logprob: -6.2848801612854
    8. '#' → logprob: -6.2848801612854
    9. 'def' → logprob: -6.4098801612854
    10. '\n' → logprob: -7.0348801612854

Token 15: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.003035470610484481
    2. ' math' → logprob: -6.503035545349121
    3. ' io' → logprob: -7.253035545349121
    4. 'it' → logprob: -7.503035545349121
    5. 'math' → logprob: -8.878035545349121
    6. 'io' → logprob: -9.753035545349121
    7. ' threading' → logprob: -10.753035545349121
    8. ' json' → logprob: -11.253035545349121
    9. ' functools' → logprob: -11.253035545349121
    10. ' random' → logprob: -12.128035545349121

Token 16: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024451876059174538
    2. '<|end|>' → logprob: -4.399451732635498
    3. '
' → logprob: -5.649451732635498
    4. 'from' → logprob: -6.399451732635498
    5. 'def' → logprob: -6.649451732635498
    6. ',' → logprob: -6.774451732635498
    7. '.' → logprob: -7.024451732635498
    8. '```' → logprob: -7.399451732635498
    9. '\n' → logprob: -7.524451732635498
    10. '<|end|>' → logprob: -7.774451732635498

Token 17: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01659213751554489
    2. '
' → logprob: -5.266592025756836
    3. '```' → logprob: -5.266592025756836
    4. 'from' → logprob: -6.641592025756836
    5. 'def' → logprob: -6.641592025756836
    6. '\n' → logprob: -7.016592025756836
    7. ',' → logprob: -7.391592025756836
    8. ',
' → logprob: -7.516592025756836
    9. '``' → logprob: -8.391592025756836
    10. '.' → logprob: -8.766592025756836

Token 18: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6625857353210449
    2. 'math' → logprob: -0.9125857353210449
    3. ' json' → logprob: -3.162585735321045
    4. 'json' → logprob: -3.287585735321045
    5. ' operator' → logprob: -6.412585735321045
    6. 'operator' → logprob: -6.537585735321045
    7. ' threading' → logprob: -10.162586212158203
    8. ' keyword' → logprob: -10.412586212158203
    9. 'keyword' → logprob: -10.662586212158203
    10. 'os' → logprob: -10.662586212158203

Token 19: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03043203055858612
    2. '
' → logprob: -4.280432224273682
    3. '.' → logprob: -4.655432224273682
    4. '```' → logprob: -6.155432224273682
    5. '\n' → logprob: -7.280432224273682
    6. '<|end|>' → logprob: -7.530432224273682
    7. 'from' → logprob: -7.655432224273682
    8. 'def' → logprob: -7.655432224273682
    9. ',' → logprob: -7.655432224273682
    10. '\' → logprob: -7.780432224273682

Token 20: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4720765948295593
    2. '.' → logprob: -1.222076654434204
    3. ',' → logprob: -3.472076654434204
    4. '
' → logprob: -4.722076416015625
    5. ',
' → logprob: -4.972076416015625
    6. '#' → logprob: -5.097076416015625
    7. '```' → logprob: -5.097076416015625
    8. '.
' → logprob: -5.472076416015625
    9. 'from' → logprob: -5.597076416015625
    10. '_' → logprob: -5.847076416015625

Token 21: ' string' (ID: 1621)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4307734966278076
    2. 'random' → logprob: -1.9307734966278076
    3. 'operator' → logprob: -2.1807734966278076
    4. ' random' → logprob: -2.4307734966278076
    5. ' os' → logprob: -7.180773735046387
    6. ' re' → logprob: -7.305773735046387
    7. 'os' → logprob: -7.680773735046387
    8. ' numbers' → logprob: -8.055773735046387
    9. ' sys' → logprob: -8.180773735046387
    10. ' functools' → logprob: -8.430773735046387

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45652976632118225
    2. 'import' → logprob: -1.4565297365188599
    3. '

' → logprob: -2.9565298557281494
    4. '\n' → logprob: -3.2065298557281494
    5. '#' → logprob: -4.33152961730957
    6. '```' → logprob: -5.08152961730957
    7. '' → logprob: -5.45652961730957
    8. ',' → logprob: -5.58152961730957
    9. '<|end|>' → logprob: -5.83152961730957
    10. '.' → logprob: -5.95652961730957

Token 23: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.741780698299408
    2. 'import' → logprob: -1.4917807579040527
    3. '\n' → logprob: -1.8667807579040527
    4. '

' → logprob: -2.9917807579040527
    5. '#' → logprob: -3.3667807579040527
    6. ',' → logprob: -4.491780757904053
    7. '```' → logprob: -4.616780757904053
    8. '_' → logprob: -4.866780757904053
    9. '\' → logprob: -4.866780757904053
    10. '' → logprob: -5.116780757904053

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2492654174566269
    2. ' random' → logprob: -2.374265432357788
    3. 'sys' → logprob: -2.499265432357788
    4. 'random' → logprob: -3.624265432357788
    5. ' re' → logprob: -4.749265193939209
    6. ' time' → logprob: -5.624265193939209
    7. 're' → logprob: -6.124265193939209
    8. 'time' → logprob: -6.249265193939209
    9. ' threading' → logprob: -7.499265193939209
    10. 'token' → logprob: -7.999265193939209

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31109368801116943
    2. '

' → logprob: -1.5610936880111694
    3. '\n' → logprob: -3.186093807220459
    4. 'import' → logprob: -4.686093807220459
    5. '<|end|>' → logprob: -5.561093807220459
    6. '```' → logprob: -7.061093807220459
    7. '' → logprob: -7.561093807220459
    8. '.' → logprob: -8.1860933303833
    9. '<|end|>' → logprob: -8.1860933303833
    10. 'newline' → logprob: -8.9360933303833

Token 26: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2254335582256317
    2. 'def' → logprob: -3.100433588027954
    3. 'class' → logprob: -3.225433588027954
    4. '#' → logprob: -3.350433588027954
    5. '
' → logprob: -3.350433588027954
    6. '\' → logprob: -4.475433349609375
    7. '```' → logprob: -4.600433349609375
    8. '_' → logprob: -4.850433349609375
    9. '\n' → logprob: -5.600433349609375
    10. '

' → logprob: -5.850433349609375

Token 27: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09327294677495956
    2. '_' → logprob: -2.4682729244232178
    3. ' _' → logprob: -5.968273162841797
    4. ' find' → logprob: -8.218273162841797
    5. ' main' → logprob: -8.343273162841797
    6. ' binary' → logprob: -8.593273162841797
    7. ' max' → logprob: -8.843273162841797
    8. ' solve' → logprob: -9.718273162841797
    9. ' space' → logprob: -9.843273162841797
    10. ' add' → logprob: -9.843273162841797

Token 28: '():
' (ID: 8595)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.4311680793762207
    2. 'qrt' → logprob: -2.9311680793762207
    3. 'um' → logprob: -3.3061680793762207
    4. 'earch' → logprob: -3.3061680793762207
    5. 'e' → logprob: -3.5561680793762207
    6. 'olution' → logprob: -3.8061680793762207
    7. 'ort' → logprob: -3.9311680793762207
    8. 't' → logprob: -4.056168079376221
    9. '():' → logprob: -4.181168079376221
    10. 'et' → logprob: -4.181168079376221

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.273467093706131
    2. ' ' → logprob: -2.6484670639038086
    3. '    ' → logprob: -2.7734670639038086
    4. ' pass' → logprob: -3.7734670639038086
    5. 'pass' → logprob: -3.8984670639038086
    6. ')' → logprob: -4.523467063903809
    7. 'yield' → logprob: -4.773467063903809
    8. '  ' → logprob: -4.898467063903809
    9. ':' → logprob: -5.023467063903809
    10. 'return' → logprob: -5.398467063903809

Token 30: ' """
' (ID: 7037)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.31051281094551086
    2. 'return' → logprob: -2.4355127811431885
    3. 'r' → logprob: -2.5605127811431885
    4. '   ' → logprob: -3.4355127811431885
    5. ' pass' → logprob: -3.5605127811431885
    6. 'n' → logprob: -4.560513019561768
    7. 'p' → logprob: -4.935513019561768
    8. 'a' → logprob: -5.185513019561768
    9. 'yield' → logprob: -5.435513019561768
    10. ' return' → logprob: -5.560513019561768

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1013139486312866
    2. 'return' → logprob: -1.8513139486312866
    3. '"""' → logprob: -2.101314067840576
    4. ' return' → logprob: -2.351314067840576
    5. 'r' → logprob: -3.476314067840576
    6. ' pass' → logprob: -3.601314067840576
    7. 'pass' → logprob: -3.726314067840576
    8. 'a' → logprob: -3.976314067840576
    9. 'Return' → logprob: -4.226314067840576
    10. 'def' → logprob: -4.226314067840576

Token 32: ' Lit' (ID: 45595)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.012506127357483
    2. '   ' → logprob: -2.2625060081481934
    3. 'return' → logprob: -2.2625060081481934
    4. 'Return' → logprob: -2.3875060081481934
    5. ' """' → logprob: -3.1375060081481934
    6. 'Generate' → logprob: -3.5125060081481934
    7. 'Returns' → logprob: -3.7625060081481934
    8. ' return' → logprob: -3.8875060081481934
    9. 'A' → logprob: -3.8875060081481934
    10. ' pass' → logprob: -4.012506008148193

Token 33: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23391833901405334
    2. 't' → logprob: -2.6089184284210205
    3. 'e' → logprob: -2.7339184284210205
    4. 'tle' → logprob: -2.9839184284210205
    5. 'eral' → logprob: -4.608918190002441
    6. 'ral' → logprob: -5.733918190002441
    7. 'era' → logprob: -5.858918190002441
    8. 'r' → logprob: -7.108918190002441
    9. '   ' → logprob: -7.983918190002441
    10. 'ernal' → logprob: -8.608918190002441

Token 34: ' ligne' (ID: 19583)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9320554733276367
    2. 'une' → logprob: -1.5570554733276367
    3. ' l' → logprob: -2.1820554733276367
    4. ' la' → logprob: -2.5570554733276367
    5. ' une' → logprob: -2.6820554733276367
    6. ' ' → logprob: -3.9320554733276367
    7. ' input' → logprob: -4.057055473327637
    8. 'la' → logprob: -4.307055473327637
    9. '   ' → logprob: -4.432055473327637
    10. 'un' → logprob: -4.932055473327637

Token 35: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11743925511837006
    2. ' ' → logprob: -2.7424392700195312
    3. '\n' → logprob: -3.7424392700195312
    4. '    ' → logprob: -4.742439270019531
    5. '  ' → logprob: -5.242439270019531
    6. '.' → logprob: -5.992439270019531
    7. '    
' → logprob: -6.492439270019531
    8. '\' → logprob: -6.992439270019531
    9. '  
' → logprob: -7.492439270019531
    10. '()' → logprob: -7.492439270019531

Token 36: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1050916910171509
    2. ' stdin' → logprob: -1.4800916910171509
    3. 'stdin' → logprob: -1.6050916910171509
    4. ' l' → logprob: -2.3550915718078613
    5. 'sys' → logprob: -2.8550915718078613
    6. '   ' → logprob: -3.3550915718078613
    7. ' sys' → logprob: -3.7300915718078613
    8. 'input' → logprob: -4.480091571807861
    9. ' input' → logprob: -4.605091571807861
    10. ' standard' → logprob: -5.855091571807861

Token 37: ''entrée' (ID: 115820)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.6890251636505127
    2. ' input' → logprob: -1.9390251636505127
    3. 'stdin' → logprob: -2.1890251636505127
    4. ' l' → logprob: -2.4390251636505127
    5. 'input' → logprob: -2.8140251636505127
    6. ' sys' → logprob: -3.8140251636505127
    7. 'l' → logprob: -4.189024925231934
    8. 'a' → logprob: -4.189024925231934
    9. '(stdin' → logprob: -4.814024925231934
    10. 'sys' → logprob: -5.189024925231934

Token 38: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20613984763622284
    2. '\n' → logprob: -2.5811398029327393
    3. '.' → logprob: -3.4561398029327393
    4. ')' → logprob: -3.5811398029327393
    5. '()' → logprob: -4.081140041351318
    6. '"""' → logprob: -5.081140041351318
    7. ',' → logprob: -5.331140041351318
    8. '    ' → logprob: -5.581140041351318
    9. ' ' → logprob: -5.706140041351318
    10. 'input' → logprob: -6.206140041351318

Token 39: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014087459072470665
    2. '.' → logprob: -5.639087677001953
    3. ')' → logprob: -5.889087677001953
    4. '\n' → logprob: -6.389087677001953
    5. '()' → logprob: -6.514087677001953
    6. '    ' → logprob: -6.639087677001953
    7. '"""' → logprob: -7.014087677001953
    8. ',' → logprob: -7.764087677001953
    9. ' ' → logprob: -7.764087677001953
    10. '    
' → logprob: -8.264087677001953

Token 40: ' enl' (ID: 116494)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08394335955381393
    2. ' return' → logprob: -2.8339433670043945
    3. 'return' → logprob: -4.2089433670043945
    4. '    ' → logprob: -5.2089433670043945
    5. '"""' → logprob: -7.8339433670043945
    6. '    
' → logprob: -8.958943367004395
    7. 'n' → logprob: -9.083943367004395
    8. ')' → logprob: -9.208943367004395
    9. ' ' → logprob: -9.708943367004395
    10. '  ' → logprob: -9.958943367004395

Token 41: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.04915215075016022
    2. 'eve' → logprob: -3.049152135848999
    3. 'e' → logprob: -7.799152374267578
    4. 'ev' → logprob: -9.424152374267578
    5. 'èv' → logprob: -10.924152374267578
    6. 'è' → logprob: -11.174152374267578
    7. 'èves' → logprob: -11.174152374267578
    8. ' eve' → logprob: -11.299152374267578
    9. 'ever' → logprob: -12.299152374267578
    10. 'èce' → logprob: -12.799152374267578

Token 42: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0637052059173584
    2. ' l' → logprob: -1.3137052059173584
    3. ' les' → logprob: -1.6887052059173584
    4. ' ' → logprob: -3.1887052059173584
    5. ' la' → logprob: -3.8137052059173584
    6. '   ' → logprob: -3.8137052059173584
    7. 'l' → logprob: -4.0637054443359375
    8. ' le' → logprob: -4.1887054443359375
    9. 'le' → logprob: -4.3137054443359375
    10. '\' → logprob: -4.3137054443359375

Token 43: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.037156179547309875
    2. '\' → logprob: -4.412156105041504
    3. '\n' → logprob: -4.662156105041504
    4. ' \' → logprob: -4.787156105041504
    5. ' '\' → logprob: -6.037156105041504
    6. ' ' → logprob: -7.037156105041504
    7. 's' → logprob: -7.287156105041504
    8. 'esp' → logprob: -7.412156105041504
    9. ' trailing' → logprob: -7.412156105041504
    10. ' blancs' → logprob: -8.912156105041504

Token 44: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4524190425872803
    2. '   ' → logprob: -1.5774190425872803
    3. '  ' → logprob: -3.8274190425872803
    4. '()' → logprob: -3.9524190425872803
    5. 'b' → logprob: -4.077419281005859
    6. ' et' → logprob: -4.202419281005859
    7. ',' → logprob: -4.202419281005859
    8. 'bl' → logprob: -4.702419281005859
    9. 'u' → logprob: -4.827419281005859
    10. ' ,' → logprob: -5.202419281005859

Token 45: ' fin' (ID: 2131)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3319841623306274
    2. 'la' → logprob: -1.8319841623306274
    3. 'fin' → logprob: -2.206984043121338
    4. 'l' → logprob: -2.456984043121338
    5. ' fin' → logprob: -2.581984043121338
    6. 's' → logprob: -3.206984043121338
    7. ' la' → logprob: -3.206984043121338
    8. 'dé' → logprob: -3.456984043121338
    9. ' ' → logprob: -3.831984043121338
    10. 'dro' → logprob: -3.956984043121338

Token 46: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1932516098022461
    2. ' et' → logprob: -3.068251609802246
    3. '\n' → logprob: -3.568251609802246
    4. ',' → logprob: -3.818251609802246
    5. ' \' → logprob: -3.818251609802246
    6. ' ' → logprob: -3.943251609802246
    7. '    
' → logprob: -4.943251609802246
    8. '\' → logprob: -5.193251609802246
    9. ' ,' → logprob: -5.443251609802246
    10. '```' → logprob: -5.568251609802246

Token 47: ' retourne' (ID: 178818)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.306928277015686
    2. '\n' → logprob: -1.306928277015686
    3. ' les' → logprob: -2.0569281578063965
    4. ' retourne' → logprob: -2.5569281578063965
    5. 'le' → logprob: -2.6819281578063965
    6. ' la' → logprob: -3.5569281578063965
    7. '\' → logprob: -3.6819281578063965
    8. ' ren' → logprob: -3.9319281578063965
    9. 'return' → logprob: -4.0569281578063965
    10. ' return' → logprob: -4.0569281578063965

Token 48: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.12296366691589355
    2. 'la' → logprob: -2.2479636669158936
    3. ' ' → logprob: -5.872963905334473
    4. ' une' → logprob: -6.122963905334473
    5. ' l' → logprob: -6.747963905334473
    6. 'l' → logprob: -7.247963905334473
    7. ' le' → logprob: -7.747963905334473
    8. ''' → logprob: -7.872963905334473
    9. '   ' → logprob: -7.997963905334473
    10. '`' → logprob: -7.997963905334473

Token 49: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7365226745605469
    2. ' chaîne' → logprob: -0.8615226745605469
    3. ' ligne' → logprob: -2.986522674560547
    4. 'ligne' → logprob: -3.736522674560547
    5. ' chaine' → logprob: -4.486522674560547
    6. 'cha' → logprob: -5.111522674560547
    7. 'str' → logprob: -6.236522674560547
    8. 's' → logprob: -6.361522674560547
    9. 'string' → logprob: -6.486522674560547
    10. ' string' → logprob: -7.611522674560547

Token 50: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6487231850624084
    2. '   ' → logprob: -1.2737231254577637
    3. '"' → logprob: -3.3987231254577637
    4. '"\' → logprob: -3.6487231254577637
    5. '    
' → logprob: -3.7737231254577637
    6. ' ' → logprob: -3.8987231254577637
    7. '"""
' → logprob: -4.023723125457764
    8. '\' → logprob: -4.273723125457764
    9. ' de' → logprob: -4.398723125457764
    10. ''\' → logprob: -4.773723125457764

Token 51: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0019474374130368233
    2. ' caractères' → logprob: -6.251947402954102
    3. ' caractère' → logprob: -12.376947402954102
    4. ' caract' → logprob: -12.501947402954102
    5. ' caracteres' → logprob: -12.751947402954102
    6. '\n' → logprob: -13.626947402954102
    7. '```' → logprob: -13.751947402954102
    8. ' ' → logprob: -13.876947402954102
    9. 's' → logprob: -14.126947402954102
    10. 'char' → logprob: -14.251947402954102

Token 52: ' obten' (ID: 28150)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0549093633890152
    2. '   ' → logprob: -3.1799094676971436
    3. '.' → logprob: -6.0549092292785645
    4. ''\' → logprob: -6.3049092292785645
    5. '\' → logprob: -6.5549092292785645
    6. '    
' → logprob: -7.0549092292785645
    7. '"\' → logprob: -7.0549092292785645
    8. ' \' → logprob: -7.1799092292785645
    9. ' ' → logprob: -7.9299092292785645
    10. ',' → logprob: -8.054909706115723

Token 53: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.05646096542477608
    2. 'u' → logprob: -3.4314608573913574
    3. 'e' → logprob: -3.9314608573913574
    4. '"""
' → logprob: -6.681460857391357
    5. 'ie' → logprob: -7.306460857391357
    6. '"' → logprob: -7.806460857391357
    7. '   ' → logprob: -9.181461334228516
    8. 'r' → logprob: -9.181461334228516
    9. 'rie' → logprob: -9.931461334228516
    10. ''' → logprob: -10.056461334228516

Token 54: '.

' (ID: 364)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47160428762435913
    2. '   ' → logprob: -1.096604347229004
    3. '    
' → logprob: -4.346604347229004
    4. '"""' → logprob: -4.846604347229004
    5. '\' → logprob: -5.221604347229004
    6. '"\' → logprob: -5.846604347229004
    7. '.' → logprob: -6.096604347229004
    8. '"' → logprob: -6.471604347229004
    9. '  
' → logprob: -6.721604347229004
    10. ')' → logprob: -6.721604347229004

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012272165156900883
    2. '"""' → logprob: -4.762272357940674
    3. 'return' → logprob: -6.512272357940674
    4. '\n' → logprob: -6.762272357940674
    5. ' return' → logprob: -8.012271881103516
    6. ' ' → logprob: -8.262271881103516
    7. ')' → logprob: -9.137271881103516
    8. ' """' → logprob: -9.762271881103516
    9. '""' → logprob: -10.012271881103516
    10. '"""
' → logprob: -10.262271881103516

Token 56: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5844969153404236
    2. '   ' → logprob: -0.8344969153404236
    3. ' return' → logprob: -4.959496974945068
    4. '"""' → logprob: -6.959496974945068
    5. ' ' → logprob: -8.08449649810791
    6. '```' → logprob: -9.58449649810791
    7. ')' → logprob: -9.95949649810791
    8. '\n' → logprob: -9.95949649810791
    9. '  ' → logprob: -11.45949649810791
    10. '""' → logprob: -11.70949649810791

Token 57: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7282182574272156
    2. ''' → logprob: -1.8532183170318604
    3. '"' → logprob: -2.7282183170318604
    4. '   ' → logprob: -2.7282183170318604
    5. ' a' → logprob: -2.7282183170318604
    6. '  ' → logprob: -2.8532183170318604
    7. 's' → logprob: -3.8532183170318604
    8. '    ' → logprob: -3.9782183170318604
    9. '<|end|>' → logprob: -4.103218078613281
    10. ' "' → logprob: -4.478218078613281

Token 58: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.34423595666885376
    2. '   ' → logprob: -1.469235897064209
    3. ' sys' → logprob: -3.594235897064209
    4. 'str' → logprob: -3.719235897064209
    5. ' input' → logprob: -5.844235897064209
    6. ' s' → logprob: -6.844235897064209
    7. ' string' → logprob: -7.094235897064209
    8. ' line' → logprob: -7.469235897064209
    9. '    ' → logprob: -7.594235897064209
    10. 's' → logprob: -7.594235897064209

Token 59: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.012825112789869308
    2. ' str' → logprob: -4.387825012207031
    3. '   ' → logprob: -8.512825012207031
    4. 's' → logprob: -9.512825012207031
    5. 'string' → logprob: -10.762825012207031
    6. 'input' → logprob: -12.262825012207031
    7. '```' → logprob: -13.387825012207031
    8. '`' → logprob: -13.512825012207031
    9. 'return' → logprob: -13.637825012207031
    10. 'sys' → logprob: -13.762825012207031

Token 60: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1209807395935059
    2. '
' → logprob: -1.4959807395935059
    3. ' 
' → logprob: -1.8709807395935059
    4. '"""
' → logprob: -2.620980739593506
    5. '\n' → logprob: -2.745980739593506
    6. '"""' → logprob: -3.245980739593506
    7. ')' → logprob: -3.745980739593506
    8. '"' → logprob: -4.120980739593506
    9. ' """
' → logprob: -4.245980739593506
    10. '  
' → logprob: -4.245980739593506

Token 61: ' Ligne' (ID: 127787)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8853883743286133
    2. '   ' → logprob: -1.6353883743286133
    3. ' return' → logprob: -1.6353883743286133
    4. 'input' → logprob: -2.5103883743286133
    5. ' sys' → logprob: -3.8853883743286133
    6. ' readline' → logprob: -4.010388374328613
    7. '    ' → logprob: -4.510388374328613
    8. ' ' → logprob: -4.510388374328613
    9. 'return' → logprob: -4.635388374328613
    10. ' s' → logprob: -4.760388374328613

Token 62: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0879181623458862
    2. '<|end|>' → logprob: -1.2129181623458862
    3. ' ' → logprob: -1.9629181623458862
    4. '  ' → logprob: -2.962918281555176
    5. '.rstrip' → logprob: -4.337918281555176
    6. '"""' → logprob: -4.462918281555176
    7. '    ' → logprob: -4.462918281555176
    8. 'rstrip' → logprob: -4.587918281555176
    9. ')' → logprob: -4.712918281555176
    10. '```' → logprob: -4.712918281555176

Token 63: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.615315318107605
    2. 'e' → logprob: -0.865315318107605
    3. 'entrée' → logprob: -3.3653154373168945
    4. 'es' → logprob: -6.8653154373168945
    5. 'u' → logprob: -7.3653154373168945
    6. ''utilisateur' → logprob: -7.3653154373168945
    7. '’entrée' → logprob: -7.9903154373168945
    8. ' entrée' → logprob: -8.115315437316895
    9. ''' → logprob: -8.615315437316895
    10. 'a' → logprob: -8.740315437316895

Token 64: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6921203136444092
    2. '\n' → logprob: -1.1921203136444092
    3. '    
' → logprob: -3.442120313644409
    4. ' ' → logprob: -3.567120313644409
    5. ' 
' → logprob: -3.567120313644409
    6. '"""' → logprob: -3.567120313644409
    7. '  
' → logprob: -4.317120552062988
    8. '
' → logprob: -4.567120552062988
    9. '"""
' → logprob: -4.817120552062988
    10. '    ' → logprob: -4.817120552062988

Token 65: ' saut' (ID: 111480)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.148494690656662
    2. 'les' → logprob: -2.6484947204589844
    3. ' trailing' → logprob: -2.8984947204589844
    4. ' espaces' → logprob: -5.398494720458984
    5. ' ' → logprob: -5.898494720458984
    6. 'es' → logprob: -6.648494720458984
    7. ' l' → logprob: -6.773494720458984
    8. 's' → logprob: -7.273494720458984
    9. 'esp' → logprob: -8.648494720458984
    10. 'l' → logprob: -8.648494720458984

Token 66: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2813000977039337
    2. 'de' → logprob: -1.4063000679016113
    3. '_de' → logprob: -9.15630054473877
    4. '\n' → logprob: -11.03130054473877
    5. '\' → logprob: -11.28130054473877
    6. ' ' → logprob: -12.78130054473877
    7. 'd' → logprob: -12.90630054473877
    8. 'es' → logprob: -13.03130054473877
    9. '```' → logprob: -13.90630054473877
    10. 's' → logprob: -14.03130054473877

Token 67: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4084610939025879
    2. ' ' → logprob: -1.533461093902588
    3. 'l' → logprob: -2.658461093902588
    4. ' ligne' → logprob: -3.158461093902588
    5. '\n' → logprob: -6.033461093902588
    6. 'lig' → logprob: -6.908461093902588
    7. 'line' → logprob: -7.033461093902588
    8. '\' → logprob: -7.533461093902588
    9. '  
' → logprob: -7.533461093902588
    10. 'li' → logprob: -7.908461093902588

Token 68: ' ni' (ID: 2565)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.07338487356901169
    2. '   ' → logprob: -3.6983847618103027
    3. '"\' → logprob: -3.8233847618103027
    4. '"""
' → logprob: -4.698384761810303
    5. '    
' → logprob: -5.198384761810303
    6. '.' → logprob: -6.448384761810303
    7. '\' → logprob: -6.573384761810303
    8. ''\' → logprob: -6.698384761810303
    9. '  
' → logprob: -6.823384761810303
    10. '"' → logprob: -6.823384761810303

Token 69: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.20723161101341248
    2. ' trailing' → logprob: -1.8322316408157349
    3. 'es' → logprob: -4.582231521606445
    4. ' espace' → logprob: -4.582231521606445
    5. 'esp' → logprob: -6.332231521606445
    6. ' spaces' → logprob: -6.457231521606445
    7. ' ' → logprob: -7.082231521606445
    8. ' espacios' → logprob: -7.207231521606445
    9. 'spaces' → logprob: -7.707231521606445
    10. ' esp' → logprob: -8.082231521606445

Token 70: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7346152067184448
    2. ' trailing' → logprob: -2.1096153259277344
    3. '  ' → logprob: -2.3596153259277344
    4. 's' → logprob: -2.4846153259277344
    5. ' en' → logprob: -2.4846153259277344
    6. ' ' → logprob: -2.4846153259277344
    7. ' de' → logprob: -2.6096153259277344
    8. 'final' → logprob: -2.8596153259277344
    9. '<|end|>' → logprob: -3.4846153259277344
    10. ' final' → logprob: -3.4846153259277344

Token 71: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.3873843848705292
    2. ' fin' → logprob: -1.1373844146728516
    3. ' ' → logprob: -7.887384414672852
    4. 'f' → logprob: -10.262384414672852
    5. 's' → logprob: -11.012384414672852
    6. 'c' → logprob: -11.012384414672852
    7. ' trailing' → logprob: -11.387384414672852
    8. '  ' → logprob: -11.887384414672852
    9. '   ' → logprob: -11.887384414672852
    10. 'tr' → logprob: -12.012384414672852

Token 72: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8528512716293335
    2. '
' → logprob: -1.3528512716293335
    3. '\n' → logprob: -1.6028512716293335
    4. '    
' → logprob: -2.852851390838623
    5. '  
' → logprob: -3.852851390838623
    6. ' 
' → logprob: -4.227851390838623
    7. '"""
' → logprob: -5.102851390838623
    8. '"""' → logprob: -5.227851390838623
    9. '   
' → logprob: -5.477851390838623
    10. '"\' → logprob: -6.602851390838623

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2066505402326584
    2. '"""' → logprob: -1.7066504955291748
    3. '"""
' → logprob: -5.456650733947754
    4. ' """' → logprob: -8.081650733947754
    5. '\n' → logprob: -8.456650733947754
    6. '""' → logprob: -8.581650733947754
    7. '"' → logprob: -9.206650733947754
    8. ' """
' → logprob: -9.706650733947754
    9. '"\' → logprob: -10.081650733947754
    10. ')' → logprob: -10.831650733947754

Token 74: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40134575963020325
    2. '"""' → logprob: -1.1513457298278809
    3. '"""
' (adapté à ' """
') → logprob: -4.276345729827881
    4. ' """' → logprob: -8.901346206665039
    5. '""' → logprob: -9.151346206665039
    6. ' """
' → logprob: -9.651346206665039
    7. '\n' → logprob: -9.776346206665039
    8. ')' → logprob: -10.276346206665039
    9. '"' → logprob: -10.401346206665039
    10. '    ' → logprob: -11.151346206665039

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08952679485082626
    2. 'return' → logprob: -2.464526891708374
    3. ' return' → logprob: -7.464526653289795
    4. 'line' → logprob: -12.589527130126953
    5. ' ' → logprob: -13.339527130126953
    6. '    ' → logprob: -13.589527130126953
    7. '  ' → logprob: -13.964527130126953
    8. '   ' → logprob: -14.089527130126953
    9. 'input' → logprob: -14.089527130126953
    10. 'ret' → logprob: -14.214527130126953

Token 76: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000573167169932276
    2. '   ' → logprob: -7.87557315826416
    3. ' return' → logprob: -8.87557315826416
    4. 'line' → logprob: -10.12557315826416
    5. 's' → logprob: -11.75057315826416
    6. 'l' → logprob: -13.25057315826416
    7. 'ret' → logprob: -14.00057315826416
    8. 'r' → logprob: -14.12557315826416
    9. 'ligne' → logprob: -14.25057315826416
    10. 'raw' → logprob: -14.87557315826416

Token 77: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05351446196436882
    2. ' input' → logprob: -3.3035144805908203
    3. 'sys' → logprob: -4.30351448059082
    4. 'input' → logprob: -6.30351448059082
    5. '(sys' → logprob: -13.55351448059082
    6. ' ' → logprob: -13.92851448059082
    7. '=sys' → logprob: -14.55351448059082
    8. '	sys' → logprob: -15.42851448059082
    9. ' ' → logprob: -15.67851448059082
    10. '   ' → logprob: -17.42851448059082

Token 78: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010664248111424968
    2. '.stdout' → logprob: -9.750106811523438
    3. '.' → logprob: -10.000106811523438
    4. '.readline' → logprob: -13.625106811523438
    5. '.std' → logprob: -13.750106811523438
    6. '.argv' → logprob: -14.750106811523438
    7. 'stdin' → logprob: -15.750106811523438
    8. '.st' → logprob: -17.125106811523438
    9. '(stdin' → logprob: -17.500106811523438
    10. '.stderr' → logprob: -17.750106811523438

Token 79: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.096126576769166e-05
    2. '.' → logprob: -10.250041007995605
    3. '().' → logprob: -12.750041007995605
    4. '.read' → logprob: -13.125041007995605
    5. 'read' → logprob: -14.625041007995605
    6. ' readline' → logprob: -16.62504005432129
    7. '.readlines' → logprob: -17.50004005432129
    8. ' .' → logprob: -18.62504005432129
    9. '.rstrip' → logprob: -18.87504005432129
    10. '```' → logprob: -19.50004005432129

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018154622986912727
    2. '()' → logprob: -4.018154621124268
    3. '(' → logprob: -12.393155097961426
    4. ' ().' → logprob: -14.893155097961426
    5. '.rstrip' → logprob: -16.51815414428711
    6. ' ()' → logprob: -16.76815414428711
    7. 'rstrip' → logprob: -17.14315414428711
    8. '(),' → logprob: -17.89315414428711
    9. '()).' → logprob: -17.89315414428711
    10. '()?.' → logprob: -18.01815414428711

Token 81: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.014163863845169544
    2. 'strip' → logprob: -4.264163970947266
    3. '.rstrip' → logprob: -15.389163970947266
    4. 'rst' → logprob: -16.264163970947266
    5. 'r' → logprob: -17.639163970947266
    6. 'rs' → logprob: -18.389163970947266
    7. 'decode' → logprob: -18.514163970947266
    8. '_strip' → logprob: -19.389163970947266
    9. 'rt' → logprob: -20.264163970947266
    10. 'rip' → logprob: -20.514163970947266

Token 82: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008083170279860497
    2. '(' → logprob: -5.133083343505859
    3. '()\' → logprob: -6.383083343505859
    4. '()
' → logprob: -8.63308334350586
    5. '\n' → logprob: -8.63308334350586
    6. '('\' → logprob: -10.38308334350586
    7. '()

' → logprob: -10.63308334350586
    8. '(\' → logprob: -10.88308334350586
    9. '\' → logprob: -11.25808334350586
    10. ' ()' → logprob: -12.13308334350586

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008041306398808956
    2. 'd' → logprob: -5.2580413818359375
    3. '
' → logprob: -6.2580413818359375
    4. '#' → logprob: -7.8830413818359375
    5. '\' → logprob: -8.633041381835938
    6. 'de' → logprob: -9.133041381835938
    7. '

' → logprob: -9.508041381835938
    8. 'n' → logprob: -11.008041381835938
    9. 'e' → logprob: -11.383041381835938
    10. '```' → logprob: -11.383041381835938

Token 84: ' M' (ID: 391)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5115865468978882
    2. '_s' → logprob: -2.8865866661071777
    3. 'T' → logprob: -3.1365866661071777
    4. ' T' → logprob: -3.3865866661071777
    5. 's' → logprob: -3.5115866661071777
    6. 'I' → logprob: -3.7615866661071777
    7. '_input' → logprob: -3.8865866661071777
    8. 'S' → logprob: -4.011586666107178
    9. '_main' → logprob: -4.011586666107178
    10. 'A' → logprob: -4.011586666107178

Token 85: '():
' (ID: 8595)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.09593267738819122
    2. '()' → logprob: -2.970932722091675
    3. 'AP' → logprob: -3.470932722091675
    4. 'A' → logprob: -5.470932483673096
    5. '():' → logprob: -6.095932483673096
    6. 'a' → logprob: -6.970932483673096
    7. 'aps' → logprob: -7.720932483673096
    8. 'ax' → logprob: -8.470932960510254
    9. '():
' → logprob: -8.470932960510254
    10. 'Ap' → logprob: -8.720932960510254

Token 86: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01446516066789627
    2. '():
' → logprob: -4.88946533203125
    3. '()' → logprob: -5.01446533203125
    4. ':' → logprob: -9.63946533203125
    5. ' ():' → logprob: -10.26446533203125
    6. 'def' → logprob: -11.01446533203125
    7. '   ' → logprob: -11.01446533203125
    8. '):' → logprob: -11.01446533203125
    9. 'int' → logprob: -11.38946533203125
    10. ' ()' → logprob: -11.63946533203125

Token 87: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18075352907180786
    2. ' return' → logprob: -1.930753469467163
    3. '   ' → logprob: -4.555753707885742
    4. 'int' → logprob: -5.430753707885742
    5. 'map' → logprob: -6.430753707885742
    6. ' map' → logprob: -6.430753707885742
    7. '()' → logprob: -7.805753707885742
    8. ' int' → logprob: -8.555753707885742
    9. 'def' → logprob: -8.555753707885742
    10. '    ' → logprob: -8.680753707885742

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.310652494430542
    2. '()' → logprob: -1.310652494430542
    3. '[]' → logprob: -1.935652494430542
    4. ')' → logprob: -2.060652494430542
    5. 'return' → logprob: -3.685652494430542
    6. '[]
' → logprob: -3.685652494430542
    7. '()
' → logprob: -3.935652494430542
    8. 'ultip' → logprob: -4.060652732849121
    9. 'def' → logprob: -4.185652732849121
    10. 'int' → logprob: -4.810652732849121

Token 89: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10168784856796265
    2. 'return' → logprob: -3.4766879081726074
    3. 'L' → logprob: -4.476687908172607
    4. 'ultip' → logprob: -5.101687908172607
    5. 'map' → logprob: -5.351687908172607
    6. 'La' → logprob: -5.601687908172607
    7. 'Map' → logprob: -5.601687908172607
    8. 'int' → logprob: -5.601687908172607
    9. '"""' → logprob: -5.601687908172607
    10. 'Lit' (adapté à ' Lit') → logprob: -5.726687908172607

Token 90: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.658308744430542
    2. ' une' → logprob: -0.908308744430542
    3. 'une' → logprob: -3.158308744430542
    4. ' un' → logprob: -3.908308744430542
    5. 'un' → logprob: -5.408308982849121
    6. 'int' → logprob: -5.908308982849121
    7. 'a' → logprob: -6.408308982849121
    8. 'des' → logprob: -6.783308982849121
    9. ' ' → logprob: -6.908308982849121
    10. ' ()' → logprob: -7.033308982849121

Token 91: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2860693335533142
    2. 'ligne' → logprob: -1.536069393157959
    3. 'int' → logprob: -4.786069393157959
    4. 'l' → logprob: -5.036069393157959
    5. 'ent' → logprob: -5.036069393157959
    6. 'ultip' → logprob: -6.786069393157959
    7. 'a' → logprob: -6.786069393157959
    8. 'e' → logprob: -7.036069393157959
    9. ' ' → logprob: -7.036069393157959
    10. 'in' → logprob: -7.286069393157959

Token 92: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.069021075963974
    2. 'dep' → logprob: -3.819020986557007
    3. ' depuis' → logprob: -4.194021224975586
    4. ' =' → logprob: -5.069021224975586
    5. ' ()' → logprob: -5.194021224975586
    6. '[]' → logprob: -5.444021224975586
    7. '().' → logprob: -6.319021224975586
    8. 'de' → logprob: -6.569021224975586
    9. '()[' → logprob: -6.694021224975586
    10. 'from' → logprob: -6.694021224975586

Token 93: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20218418538570404
    2. ' l' → logprob: -1.7021842002868652
    3. '()' → logprob: -7.577184200286865
    4. ' ' → logprob: -9.577183723449707
    5. '   ' → logprob: -10.452183723449707
    6. '(l' → logprob: -10.827183723449707
    7. 's' → logprob: -10.827183723449707
    8. '```' → logprob: -10.952183723449707
    9. 'L' → logprob: -11.202183723449707
    10. 'la' → logprob: -11.327183723449707

Token 94: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0049794744700193405
    2. ''' → logprob: -5.754979610443115
    3. 'entrée' → logprob: -6.754979610443115
    4. '’entrée' → logprob: -9.504979133605957
    5. 'a' → logprob: -9.629979133605957
    6. ''import' → logprob: -9.629979133605957
    7. 'e' → logprob: -9.879979133605957
    8. ''é' → logprob: -10.004979133605957
    9. 'l' → logprob: -10.004979133605957
    10. ''ent' → logprob: -10.254979133605957

Token 95: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0153582096099854
    2. '().' → logprob: -1.0153582096099854
    3. '()' → logprob: -2.1403582096099854
    4. ',' → logprob: -2.2653582096099854
    5. ' standard' → logprob: -3.8903582096099854
    6. 'standard' → logprob: -4.390357971191406
    7. '.' → logprob: -5.265357971191406
    8. '(),' → logprob: -5.515357971191406
    9. ')' → logprob: -6.265357971191406
    10. 'def' → logprob: -6.640357971191406

Token 96: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20673847198486328
    2. '().' → logprob: -1.7067384719848633
    3. '   ' → logprob: -5.581738471984863
    4. ')' → logprob: -7.706738471984863
    5. ',' → logprob: -7.956738471984863
    6. '.rstrip' → logprob: -9.081738471984863
    7. '(),' → logprob: -9.331738471984863
    8. ' ()' → logprob: -9.456738471984863
    9. '.' → logprob: -9.831738471984863
    10. '()
' → logprob: -9.831738471984863

Token 97: ' enl' (ID: 116494)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.9148693084716797
    2. 'spl' → logprob: -0.9148693084716797
    3. ' split' → logprob: -1.6648693084716797
    4. ' splits' → logprob: -5.41486930847168
    5. ' spl' → logprob: -6.03986930847168
    6. ' retourne' → logprob: -7.41486930847168
    7. 'strip' → logprob: -7.53986930847168
    8. '.split' → logprob: -7.78986930847168
    9. ' splitting' → logprob: -8.53986930847168
    10. 'return' → logprob: -8.78986930847168

Token 98: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0003374886582605541
    2. 'è' → logprob: -9.875337600708008
    3. ' è' → logprob: -9.875337600708008
    4. 'èvre' → logprob: -9.875337600708008
    5. 'eve' → logprob: -10.375337600708008
    6. 'èves' → logprob: -10.875337600708008
    7. 'ère' → logprob: -11.000337600708008
    8. 'ède' → logprob: -11.375337600708008
    9. 'l' → logprob: -11.375337600708008
    10. 'èv' → logprob: -11.500337600708008

Token 99: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06241363659501076
    2. '()' → logprob: -3.0624136924743652
    3. 'les' → logprob: -4.437413692474365
    4. 'l' → logprob: -6.812413692474365
    5. 's' → logprob: -8.312413215637207
    6. ' l' → logprob: -8.562413215637207
    7. 'Les' → logprob: -9.687413215637207
    8. ' ' → logprob: -9.812413215637207
    9. ' ()' → logprob: -10.812413215637207
    10. '(' → logprob: -10.812413215637207

Token 100: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.09789616614580154
    2. 'esp' → logprob: -2.597896099090576
    3. 'es' → logprob: -4.597896099090576
    4. 's' → logprob: -4.972896099090576
    5. 'spaces' → logprob: -6.472896099090576
    6. ' spaces' → logprob: -9.972896575927734
    7. ' espace' → logprob: -10.472896575927734
    8. ' espacios' → logprob: -10.847896575927734
    9. ' espaços' → logprob: -10.847896575927734
    10. '()' → logprob: -11.222896575927734

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21876275539398193
    2. 'de' → logprob: -1.968762755393982
    3. '<|end|>' → logprob: -3.5937628746032715
    4. '_de' → logprob: -4.8437628746032715
    5. 'def' → logprob: -4.9687628746032715
    6. '_' → logprob: -5.2187628746032715
    7. 's' → logprob: -5.8437628746032715
    8. '()' → logprob: -7.3437628746032715
    9. ' ' → logprob: -7.4687628746032715
    10. '  ' → logprob: -7.5937628746032715

Token 102: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.042904410511255264
    2. ' fin' → logprob: -3.2929043769836426
    3. 'f' → logprob: -5.417904376983643
    4. ' f' → logprob: -8.6679048538208
    5. 'd' → logprob: -9.1679048538208
    6. 'fi' → logprob: -9.9179048538208
    7. 'de' → logprob: -10.7929048538208
    8. 'dé' → logprob: -11.1679048538208
    9. 'final' → logprob: -11.5429048538208
    10. 'end' → logprob: -11.6679048538208

Token 103: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1836574673652649
    2. ' et' → logprob: -2.18365740776062
    3. '   ' → logprob: -3.43365740776062
    4. '()
' → logprob: -4.558657646179199
    5. '().' → logprob: -5.808657646179199
    6. ',' → logprob: -6.058657646179199
    7. 'def' → logprob: -6.433657646179199
    8. ')' → logprob: -7.058657646179199
    9. ' ()' → logprob: -7.058657646179199
    10. 'et' → logprob: -7.433657646179199

Token 104: ' div' (ID: 4223)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.696395993232727
    2. 'split' → logprob: -0.821395993232727
    3. 'et' → logprob: -3.5713958740234375
    4. 'convert' → logprob: -4.5713958740234375
    5. 'p' → logprob: -4.9463958740234375
    6. 'div' → logprob: -5.5713958740234375
    7. 'sé' → logprob: -5.6963958740234375
    8. ' split' → logprob: -5.8213958740234375
    9. ' et' → logprob: -6.4463958740234375
    10. 'parse' → logprob: -7.4463958740234375

Token 105: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0002800471556838602
    2. 'isé' → logprob: -9.000280380249023
    3. 'ize' → logprob: -10.000280380249023
    4. 'e' → logprob: -10.750280380249023
    5. 'i' → logprob: -11.000280380249023
    6. 'isez' → logprob: -11.125280380249023
    7. 'iser' → logprob: -11.250280380249023
    8. '   ' → logprob: -11.375280380249023
    9. 'ide' → logprob: -12.125280380249023
    10. ' ise' → logprob: -12.125280380249023

Token 106: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017663195729255676
    2. '('' → logprob: -4.14266300201416
    3. '(' → logprob: -7.39266300201416
    4. ' la' → logprob: -8.39266300201416
    5. '()[' → logprob: -8.64266300201416
    6. '("' → logprob: -8.76766300201416
    7. ' ()' → logprob: -9.26766300201416
    8. 'la' → logprob: -9.76766300201416
    9. '()
' → logprob: -9.76766300201416
    10. 'l' → logprob: -10.14266300201416

Token 107: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.14325173199176788
    2. 'ligne' → logprob: -2.393251657485962
    3. ' chaîne' → logprob: -3.893251657485962
    4. ' line' → logprob: -4.643251895904541
    5. 'chaine' → logprob: -5.268251895904541
    6. ' string' → logprob: -6.518251895904541
    7. ' chaine' → logprob: -6.768251895904541
    8. ' lignes' → logprob: -6.893251895904541
    9. '()' → logprob: -7.143251895904541
    10. 'line' → logprob: -7.393251895904541

Token 108: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5233657956123352
    2. '()' → logprob: -1.6483657360076904
    3. ' par' → logprob: -2.1483657360076904
    4. ' ' → logprob: -3.0233657360076904
    5. '('' → logprob: -5.0233659744262695
    6. 'en' → logprob: -5.3983659744262695
    7. ' (' → logprob: -5.5233659744262695
    8. '(' → logprob: -5.6483659744262695
    9. ' into' → logprob: -6.0233659744262695
    10. '   ' → logprob: -6.0233659744262695

Token 109: ' éléments' (ID: 57375)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.6030035018920898
    2. 'tokens' → logprob: -1.4780035018920898
    3. ' liste' → logprob: -2.85300350189209
    4. ' des' → logprob: -3.22800350189209
    5. ' espaces' → logprob: -3.60300350189209
    6. ' une' → logprob: -3.72800350189209
    7. 'liste' → logprob: -4.22800350189209
    8. ' mots' → logprob: -4.97800350189209
    9. ' parts' → logprob: -4.97800350189209
    10. ' morceaux' → logprob: -5.10300350189209

Token 110: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06001400202512741
    2. '   ' → logprob: -3.685014009475708
    3. ' par' → logprob: -4.560013771057129
    4. '('' → logprob: -5.185013771057129
    5. ''' → logprob: -5.935013771057129
    6. ')' → logprob: -6.435013771057129
    7. '_' → logprob: -6.435013771057129
    8. ' ()' → logprob: -6.435013771057129
    9. 'par' → logprob: -6.685013771057129
    10. ' ' → logprob: -7.310013771057129

Token 111: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.003283232916146517
    2. 'é' → logprob: -5.8782830238342285
    3. '```' → logprob: -8.628283500671387
    4. 'es' → logprob: -8.878283500671387
    5. 'ées' → logprob: -9.628283500671387
    6. ' par' → logprob: -10.378283500671387
    7. 'par' → logprob: -10.503283500671387
    8. 'ée' → logprob: -11.253283500671387
    9. 'e' → logprob: -12.128283500671387
    10. 'ant' → logprob: -13.253283500671387

Token 112: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.09536326676607132
    2. 'par' → logprob: -2.4703633785247803
    3. '()' → logprob: -5.345363140106201
    4. ')' → logprob: -7.345363140106201
    5. '('' → logprob: -8.09536361694336
    6. '(par' → logprob: -8.59536361694336
    7. '(' → logprob: -9.47036361694336
    8. 's' → logprob: -9.59536361694336
    9. '```' → logprob: -9.84536361694336
    10. ',' → logprob: -10.22036361694336

Token 113: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.631482720375061
    2. ' espaces' → logprob: -1.756482720375061
    3. ''espace' → logprob: -2.1314826011657715
    4. ''esp' → logprob: -2.6314826011657715
    5. 'des' → logprob: -2.6314826011657715
    6. 'un' → logprob: -2.7564826011657715
    7. ''' → logprob: -3.0064826011657715
    8. ' l' → logprob: -3.1314826011657715
    9. ' ' → logprob: -3.1314826011657715
    10. ''un' → logprob: -3.3814826011657715

Token 114: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.38280078768730164
    2. ''espace' → logprob: -2.007800817489624
    3. ''esp' → logprob: -2.632800817489624
    4. ' ' → logprob: -3.382800817489624
    5. 'esp' → logprob: -3.382800817489624
    6. ' espace' → logprob: -4.507800579071045
    7. 'spaces' → logprob: -4.507800579071045
    8. ''' → logprob: -5.007800579071045
    9. 'es' → logprob: -5.882800579071045
    10. '’espace' → logprob: -5.882800579071045

Token 115: ',
' (ID: 412)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5157590508460999
    2. ')' → logprob: -1.265758991241455
    3. '   ' → logprob: -3.140758991241455
    4. ',' → logprob: -3.140758991241455
    5. '().' → logprob: -4.640758991241455
    6. ' )' → logprob: -5.015758991241455
    7. '(' → logprob: -5.640758991241455
    8. '.split' → logprob: -6.265758991241455
    9. '.' → logprob: -6.515758991241455
    10. '(),' → logprob: -6.765758991241455

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2669204771518707
    2. 'et' → logprob: -2.016920566558838
    3. ' et' → logprob: -2.891920566558838
    4. 'return' → logprob: -4.141920566558838
    5. ' return' → logprob: -4.766920566558838
    6. ' and' → logprob: -4.766920566558838
    7. 'split' → logprob: -5.641920566558838
    8. ' retourne' → logprob: -5.641920566558838
    9. ',' → logprob: -6.766920566558838
    10. ' puis' → logprob: -7.141920566558838

Token 117: ' convert' (ID: 8452)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.062541127204895
    2. 'convert' (adapté à ' convert') → logprob: -1.687541127204895
    3. '   ' → logprob: -1.812541127204895
    4. ' convert' → logprob: -2.3125410079956055
    5. 'map' → logprob: -2.4375410079956055
    6. ' et' → logprob: -3.0625410079956055
    7. ' map' → logprob: -3.3125410079956055
    8. ' puis' → logprob: -3.9375410079956055
    9. 'p' → logprob: -5.4375410079956055
    10. ' les' → logprob: -6.3125410079956055

Token 118: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4673088490962982
    2. 'it' → logprob: -2.092308759689331
    3. 'e' → logprob: -2.342308759689331
    4. 'is' → logprob: -2.842308759689331
    5. 'ie' → logprob: -3.092308759689331
    6. '()' → logprob: -4.59230899810791
    7. '=' → logprob: -4.96730899810791
    8. '(' → logprob: -5.09230899810791
    9. 'issant' → logprob: -5.34230899810791
    10. 'ir' → logprob: -5.59230899810791

Token 119: ' chacun' (ID: 52136)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09158888459205627
    2. ' chacun' → logprob: -2.8415889739990234
    3. ' les' → logprob: -4.716588973999023
    4. ' each' → logprob: -4.841588973999023
    5. ' ces' → logprob: -5.091588973999023
    6. ' ' → logprob: -5.716588973999023
    7. ' la' → logprob: -7.591588973999023
    8. 'cha' → logprob: -7.591588973999023
    9. ' tous' → logprob: -7.841588973999023
    10. 'les' → logprob: -7.841588973999023

Token 120: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.013177054934203625
    2. 'en' → logprob: -5.013176918029785
    3. ' ' → logprob: -5.888176918029785
    4. ' ces' → logprob: -7.013176918029785
    5. '   ' → logprob: -7.388176918029785
    6. ' les' → logprob: -7.388176918029785
    7. ' chaque' → logprob: -7.638176918029785
    8. '()' → logprob: -8.388176918029785
    9. 's' → logprob: -8.763176918029785
    10. '(' → logprob: -9.388176918029785

Token 121: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -1.0026775598526
    2. 'la' → logprob: -1.6276775598526
    3. ' la' → logprob: -2.6276774406433105
    4. 'chaine' → logprob: -2.6276774406433105
    5. ' chaîne' → logprob: -2.8776774406433105
    6. ' ces' → logprob: -2.8776774406433105
    7. 'str' → logprob: -3.3776774406433105
    8. ' ceux' → logprob: -3.7526774406433105
    9. ' chaine' → logprob: -3.7526774406433105
    10. ' str' → logprob: -4.5026774406433105

Token 122: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0770663172006607
    2. ' éléments' → logprob: -2.702066421508789
    3. ' tokens' → logprob: -5.577066421508789
    4. 'tokens' → logprob: -6.452066421508789
    5. ' elements' → logprob: -7.952066421508789
    6. ' ' → logprob: -8.077066421508789
    7. ' morceaux' → logprob: -8.077066421508789
    8. ' chaînes' → logprob: -8.952066421508789
    9. 'ces' → logprob: -9.327066421508789
    10. ' mots' → logprob: -9.452066421508789

Token 123: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0010610329918563366
    2. 'en' → logprob: -6.876060962677002
    3. ' in' → logprob: -11.50106143951416
    4. ' ' → logprob: -12.25106143951416
    5. '_en' → logprob: -12.75106143951416
    6. ' into' → logprob: -12.87606143951416
    7. '   ' → logprob: -13.37606143951416
    8. ' à' → logprob: -13.87606143951416
    9. ' to' → logprob: -14.25106143951416
    10. 's' → logprob: -14.37606143951416

Token 124: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1823008954524994
    2. 'ent' → logprob: -2.3073008060455322
    3. ' int' → logprob: -2.8073008060455322
    4. ' ent' → logprob: -5.807301044464111
    5. ' des' → logprob: -6.307301044464111
    6. ' entier' → logprob: -6.432301044464111
    7. ' integers' → logprob: -9.682300567626953
    8. 'ints' → logprob: -9.682300567626953
    9. ' ' → logprob: -10.682300567626953
    10. ' integer' → logprob: -10.807300567626953

Token 125: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05179687216877937
    2. ' et' → logprob: -3.5517969131469727
    3. '()' → logprob: -4.676796913146973
    4. ')' → logprob: -5.051796913146973
    5. 's' → logprob: -5.801796913146973
    6. 'et' → logprob: -7.051796913146973
    7. ' ,' → logprob: -7.551796913146973
    8. '(' → logprob: -7.676796913146973
    9. '(),' → logprob: -7.801796913146973
    10. '.' → logprob: -8.051796913146973

Token 126: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.32675737142562866
    2. ' les' → logprob: -1.9517574310302734
    3. ' return' → logprob: -2.8267574310302734
    4. ' returns' → logprob: -2.9517574310302734
    5. ' ren' → logprob: -4.076757431030273
    6. 'return' → logprob: -5.076757431030273
    7. 'ren' → logprob: -7.701757431030273
    8. ' ret' → logprob: -8.076757431030273
    9. ' retour' → logprob: -8.201757431030273
    10. 'returns' → logprob: -8.701757431030273

Token 127: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6133973002433777
    2. ' une' → logprob: -0.9883973002433777
    3. ' a' → logprob: -2.9883973598480225
    4. ' un' → logprob: -4.238397121429443
    5. ' l' → logprob: -5.488397121429443
    6. ' ' → logprob: -5.488397121429443
    7. ' leur' → logprob: -5.613397121429443
    8. ' les' → logprob: -6.113397121429443
    9. 's' → logprob: -6.238397121429443
    10. ' le' → logprob: -6.613397121429443

Token 128: ' it' (ID: 480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7596810460090637
    2. ' list' → logprob: -1.009680986404419
    3. 'a' → logprob: -2.259680986404419
    4. ' liste' → logprob: -4.009681224822998
    5. ' tuple' → logprob: -4.259681224822998
    6. ' a' → logprob: -4.634681224822998
    7. 'es' → logprob: -5.009681224822998
    8. ' map' → logprob: -6.009681224822998
    9. ' e' → logprob: -6.134681224822998
    10. ' la' → logprob: -6.259681224822998

Token 129: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0014167845947667956
    2. 'érateur' → logprob: -6.6264166831970215
    3. 'ertools' → logprob: -10.12641716003418
    4. 'ér' → logprob: -11.00141716003418
    5. '   ' → logprob: -12.00141716003418
    6. 'erar' → logprob: -12.25141716003418
    7. '```' → logprob: -12.50141716003418
    8. '    ' → logprob: -13.25141716003418
    9. '  ' → logprob: -13.25141716003418
    10. 'erat' → logprob: -13.62641716003418

Token 130: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.153367280960083
    2. 'ator' → logprob: -2.153367280960083
    3. 'er' → logprob: -4.153367042541504
    4. 'r' → logprob: -4.653367042541504
    5. 'ateur' → logprob: -8.528367042541504
    6. '   ' → logprob: -8.653367042541504
    7. 'érateur' → logprob: -9.778367042541504
    8. '```' → logprob: -9.903367042541504
    9. '(r' → logprob: -10.153367042541504
    10. 'tor' → logprob: -10.403367042541504

Token 131: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08553715795278549
    2. 'map' → logprob: -3.0855371952056885
    3. ' de' → logprob: -3.9605371952056885
    4. '(map' → logprob: -4.210536956787109
    5. ' of' → logprob: -7.210536956787109
    6. '[int' → logprob: -7.335536956787109
    7. '_map' → logprob: -8.33553695678711
    8. ',' → logprob: -8.96053695678711
    9. '[' → logprob: -9.46053695678711
    10. '(int' → logprob: -9.46053695678711

Token 132: ' des' (ID: 731)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3412652909755707
    2. '(' → logprob: -1.466265320777893
    3. '(lambda' → logprob: -2.9662652015686035
    4. '(
' → logprob: -5.8412652015686035
    5. '(str' → logprob: -6.2162652015686035
    6. '<int' → logprob: -7.7162652015686035
    7. '(object' → logprob: -7.9662652015686035
    8. '   ' → logprob: -8.716265678405762
    9. 'object' → logprob: -8.716265678405762
    10. '.' → logprob: -9.091265678405762

Token 133: ' ent' (ID: 1121)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07465912401676178
    2. 'int' → logprob: -3.3246591091156006
    3. ' ent' → logprob: -4.44965934753418
    4. ' integers' → logprob: -4.44965934753418
    5. ' éléments' → logprob: -5.44965934753418
    6. 'ent' → logprob: -5.57465934753418
    7. '(int' → logprob: -6.57465934753418
    8. ' ints' → logprob: -6.82465934753418
    9. 'inte' → logprob: -7.94965934753418
    10. 'ints' → logprob: -8.44965934753418

Token 134: 'iers' (ID: 11012)
  Prédit: 'eger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eger' → logprob: -0.3188932240009308
    2. 'gers' → logprob: -2.1938931941986084
    3. '[int' → logprob: -3.1938931941986084
    4. 'agers' → logprob: -3.1938931941986084
    5. '   ' → logprob: -4.0688934326171875
    6. '(int' → logprob: -4.6938934326171875
    7. ' integers' → logprob: -4.8188934326171875
    8. 'eg' → logprob: -4.9438934326171875
    9. 'er' → logprob: -5.3188934326171875
    10. ']' → logprob: -5.3188934326171875

Token 135: '.

' (ID: 364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00486975722014904
    2. '(
' → logprob: -5.6298699378967285
    3. '.' → logprob: -7.6298699378967285
    4. ')' → logprob: -8.00486946105957
    5. '   ' → logprob: -8.87986946105957
    6. ',' → logprob: -9.87986946105957
    7. '(`' → logprob: -10.50486946105957
    8. ' (' → logprob: -10.75486946105957
    9. '('' → logprob: -11.00486946105957
    10. '(lambda' → logprob: -11.12986946105957

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7574753165245056
    2. ')' → logprob: -1.3824753761291504
    3. ' return' → logprob: -1.6324753761291504
    4. 'return' → logprob: -3.1324753761291504
    5. ' 
' → logprob: -4.75747537612915
    6. ' ' → logprob: -4.88247537612915
    7. ' )' → logprob: -4.88247537612915
    8. 'r' → logprob: -5.13247537612915
    9. '    
' → logprob: -5.25747537612915
    10. '  ' → logprob: -7.38247537612915

Token 137: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.988176167011261
    2. '   ' → logprob: -1.1131761074066162
    3. ' return' → logprob: -1.3631761074066162
    4. 'r' → logprob: -3.863176107406616
    5. ' 
' → logprob: -4.863176345825195
    6. ' ' → logprob: -5.238176345825195
    7. ')' → logprob: -5.738176345825195
    8. '    
' → logprob: -5.988176345825195
    9. '  
' → logprob: -7.988176345825195
    10. '  ' → logprob: -8.113176345825195

Token 138: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008572661899961531
    2. ' (' → logprob: -7.875857353210449
    3. '(
' → logprob: -8.00085735321045
    4. '(lambda' → logprob: -9.87585735321045
    5. ':' → logprob: -10.37585735321045
    6. '(int' → logprob: -10.75085735321045
    7. '(map' → logprob: -11.87585735321045
    8. '[' → logprob: -12.50085735321045
    9. '(S' → logprob: -12.62585735321045
    10. '(iter' → logprob: -12.87585735321045

Token 139: '       ' (ID: 309)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009199320338666439
    2. 'map' → logprob: -4.759199142456055
    3. '   ' → logprob: -7.509199142456055
    4. 'm' → logprob: -11.509199142456055
    5. ' iter' → logprob: -12.259199142456055
    6. ' int' → logprob: -12.384199142456055
    7. '    ' → logprob: -12.634199142456055
    8. ' m' → logprob: -12.884199142456055
    9. ' ' → logprob: -12.884199142456055
    10. 'int' → logprob: -13.009199142456055

Token 140: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' (adapté à ' map') → logprob: -0.08903206139802933
    2. ' map' → logprob: -2.4640321731567383
    3. '   ' → logprob: -10.464032173156738
    4. 'iter' → logprob: -10.589032173156738
    5. 'm' → logprob: -11.089032173156738
    6. ' ' → logprob: -12.214032173156738
    7. ' iter' → logprob: -12.839032173156738
    8. '_map' → logprob: -12.839032173156738
    9. '```' → logprob: -12.839032173156738
    10. ' iterable' → logprob: -12.964032173156738

Token 141: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5196119546890259
    2. '(int' → logprob: -1.3946119546890259
    3. '(lambda' → logprob: -2.0196118354797363
    4. '[int' → logprob: -3.8946118354797363
    5. '<int' → logprob: -5.894611835479736
    6. '(
' → logprob: -8.144612312316895
    7. '(str' → logprob: -8.394612312316895
    8. '(iter' → logprob: -9.269612312316895
    9. ' (' → logprob: -9.394612312316895
    10. '(func' → logprob: -9.519612312316895

Token 142: ' Un' (ID: 1367)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20423375070095062
    2. ' int' → logprob: -1.7042337656021118
    3. ' map' → logprob: -6.204233646392822
    4. '(int' → logprob: -7.704233646392822
    5. 'map' → logprob: -8.20423412322998
    6. '[int' → logprob: -9.95423412322998
    7. ' ' → logprob: -11.45423412322998
    8. '<int' → logprob: -11.70423412322998
    9. 'lambda' → logprob: -13.45423412322998
    10. ' lambda' → logprob: -13.70423412322998

Token 143: ' it' (ID: 480)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05760148912668228
    2. ' int' → logprob: -3.0576014518737793
    3. '[int' → logprob: -6.057601451873779
    4. ' ' → logprob: -6.182601451873779
    5. '(int' → logprob: -6.307601451873779
    6. ' object' → logprob: -7.307601451873779
    7. '<int' → logprob: -7.557601451873779
    8. '(map' → logprob: -8.057601928710938
    9. ' iter' → logprob: -8.182601928710938
    10. ' iterable' → logprob: -8.557601928710938

Token 144: 'ér' (ID: 2156)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.0584579706192017
    2. '[' → logprob: -1.5584579706192017
    3. '[int' → logprob: -1.5584579706192017
    4. '<int' → logprob: -2.933457851409912
    5. '_map' → logprob: -3.308457851409912
    6. '(map' → logprob: -3.433457851409912
    7. ' of' → logprob: -3.933457851409912
    8. '<' → logprob: -4.058457851409912
    9. 'map' → logprob: -5.183457851409912
    10. 'ermap' → logprob: -5.183457851409912

Token 145: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.008693988434970379
    2. 'map' → logprob: -5.008694171905518
    3. '   ' → logprob: -7.258694171905518
    4. 'table' → logprob: -7.758694171905518
    5. ' map' → logprob: -7.758694171905518
    6. 'ble' → logprob: -8.88369369506836
    7. '(map' → logprob: -9.88369369506836
    8. 'ter' → logprob: -10.50869369506836
    9. 'tor' → logprob: -10.63369369506836
    10. 't' → logprob: -10.88369369506836

Token 146: ' contenant' (ID: 131049)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9118072986602783
    2. '<int' → logprob: -1.2868072986602783
    3. '(int' → logprob: -1.5368072986602783
    4. '(' → logprob: -2.5368072986602783
    5. ' of' → logprob: -5.036807060241699
    6. ' map' → logprob: -5.286807060241699
    7. '(lambda' → logprob: -5.536807060241699
    8. ' object' → logprob: -5.536807060241699
    9. ' int' → logprob: -6.036807060241699
    10. '(
' → logprob: -6.911807060241699

Token 147: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4803425073623657
    2. ' les' → logprob: -0.9803425073623657
    3. '[int' → logprob: -6.480342388153076
    4. ' integers' → logprob: -6.605342388153076
    5. ' int' → logprob: -6.855342388153076
    6. 'des' → logprob: -7.355342388153076
    7. '(int' → logprob: -7.730342388153076
    8. 'int' → logprob: -8.355342864990234
    9. ' la' → logprob: -8.480342864990234
    10. 'les' → logprob: -8.605342864990234

Token 148: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.1306404322385788
    2. ' int' → logprob: -2.3806405067443848
    3. 'ent' → logprob: -4.380640506744385
    4. ' integers' → logprob: -4.630640506744385
    5. ' éléments' → logprob: -5.755640506744385
    6. 'int' → logprob: -6.380640506744385
    7. ' ints' → logprob: -7.255640506744385
    8. ' entier' → logprob: -7.630640506744385
    9. ' next' → logprob: -7.880640506744385
    10. 'inte' → logprob: -8.255640029907227

Token 149: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0024062159936875105
    2. 'ier' → logprob: -7.377406120300293
    3. 'er' → logprob: -7.502406120300293
    4. '   ' → logprob: -8.002406120300293
    5. 'ieurs' → logprob: -8.752406120300293
    6. 'e' → logprob: -9.127406120300293
    7. '       ' → logprob: -9.252406120300293
    8. 'ières' → logprob: -9.252406120300293
    9. 'ieres' → logprob: -9.502406120300293
    10. ' integers' → logprob: -9.627406120300293

Token 150: ' extr' (ID: 15674)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4585626721382141
    2. '(' → logprob: -1.7085626125335693
    3. '(int' → logprob: -2.2085626125335693
    4. '()' → logprob: -3.8335626125335693
    5. '(
' → logprob: -4.208562850952148
    6. '[int' → logprob: -5.083562850952148
    7. '<int' → logprob: -5.083562850952148
    8. ')' → logprob: -5.208562850952148
    9. 's' → logprob: -5.208562850952148
    10. '<|end|>' → logprob: -5.833562850952148

Token 151: 'aits' (ID: 46641)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.738828718662262
    2. '   ' → logprob: -1.7388286590576172
    3. ' map' → logprob: -2.488828659057617
    4. '(map' → logprob: -3.363828659057617
    5. ')' → logprob: -3.488828659057617
    6. '```' → logprob: -3.613828659057617
    7. 'a' → logprob: -3.738828659057617
    8. 'aites' → logprob: -3.738828659057617
    9. 'êmes' → logprob: -4.363828659057617
    10. '))' → logprob: -4.363828659057617

Token 152: ' depuis' (ID: 16277)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06313720345497131
    2. '(' → logprob: -3.6881372928619385
    3. '(int' → logprob: -3.6881372928619385
    4. '(
' → logprob: -5.563137054443359
    5. ' de' → logprob: -5.938137054443359
    6. 'des' → logprob: -6.313137054443359
    7. 'from' → logprob: -6.938137054443359
    8. '   ' → logprob: -7.813137054443359
    9. '[int' → logprob: -8.06313705444336
    10. ' from' → logprob: -8.31313705444336

Token 153: ' la' (ID: 557)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.030868850648403168
    2. 'sys' → logprob: -3.9058687686920166
    3. ' S' → logprob: -5.530869007110596
    4. ' lambda' → logprob: -6.405869007110596
    5. ' map' → logprob: -6.530869007110596
    6. 'S' → logprob: -6.905869007110596
    7. ' int' → logprob: -7.280869007110596
    8. ' ' → logprob: -7.530869007110596
    9. 'int' → logprob: -7.655869007110596
    10. 'lambda' → logprob: -8.655868530273438

Token 154: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5126568078994751
    2. 'entrée' → logprob: -2.1376566886901855
    3. 'ligne' → logprob: -2.2626566886901855
    4. ' input' → logprob: -2.5126566886901855
    5. ' ' → logprob: -3.1376566886901855
    6. 'input' → logprob: -3.8876566886901855
    7. 'l' → logprob: -4.3876566886901855
    8. ' entrée' → logprob: -5.0126566886901855
    9. ' stdin' → logprob: -5.8876566886901855
    10. ' chaîne' → logprob: -6.5126566886901855

Token 155: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11073917895555496
    2. ' de' → logprob: -3.360739231109619
    3. '   ' → logprob: -4.235739231109619
    4. '(' → logprob: -4.610739231109619
    5. ')' → logprob: -4.860739231109619
    6. '().' → logprob: -5.235739231109619
    7. 'de' → logprob: -5.235739231109619
    8. ' d' → logprob: -5.735739231109619
    9. ' ()' → logprob: -5.735739231109619
    10. ' des' → logprob: -5.860739231109619

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.284026563167572
    2. '(' → logprob: -1.9090266227722168
    3. '(int' → logprob: -2.534026622772217
    4. '    ' → logprob: -5.409026622772217
    5. '('' → logprob: -5.659026622772217
    6. '(
' → logprob: -6.659026622772217
    7. '  ' → logprob: -6.784026622772217
    8. '       ' → logprob: -6.909026622772217
    9. '[int' → logprob: -6.909026622772217
    10. ' return' → logprob: -7.159026622772217

Token 157: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6794056296348572
    2. '   ' → logprob: -0.9294056296348572
    3. '()' → logprob: -3.304405689239502
    4. '()
' → logprob: -4.554405689239502
    5. '"""
' (adapté à ' """
') → logprob: -4.929405689239502
    6. '    ' → logprob: -5.554405689239502
    7. 'def' → logprob: -5.554405689239502
    8. '")' → logprob: -5.679405689239502
    9. '    
' → logprob: -5.679405689239502
    10. ']' → logprob: -5.679405689239502

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009781945496797562
    2. 'return' → logprob: -4.759781837463379
    3. ' return' → logprob: -6.759781837463379
    4. '    
' → logprob: -12.884781837463379
    5. '	return' → logprob: -13.509781837463379
    6. ' ' → logprob: -13.884781837463379
    7. '  ' → logprob: -13.884781837463379
    8. '   ' → logprob: -14.509781837463379
    9. '       ' → logprob: -15.259781837463379
    10. '    ' → logprob: -15.509781837463379

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006928971270099282
    2. ' return' → logprob: -7.625692844390869
    3. '   ' → logprob: -8.500693321228027
    4. 'ret' → logprob: -14.250693321228027
    5. 'map' → logprob: -15.625693321228027
    6. ' ' → logprob: -15.625693321228027
    7. '    
' → logprob: -15.750693321228027
    8. '  ' → logprob: -16.12569236755371
    9. 'line' → logprob: -16.12569236755371
    10. 'r' → logprob: -17.00069236755371

Token 160: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06198595091700554
    2. ' map' → logprob: -2.811985969543457
    3. ' ' → logprob: -12.061985969543457
    4. '   ' → logprob: -12.061985969543457
    5. 'm' → logprob: -12.186985969543457
    6. '  ' → logprob: -13.686985969543457
    7. '	map' → logprob: -14.686985969543457
    8. '    ' → logprob: -16.31198501586914
    9. ' ' → logprob: -16.81198501586914
    10. '(map' → logprob: -17.68698501586914

Token 161: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01816035620868206
    2. '(' → logprob: -4.018160343170166
    3. '(
' → logprob: -12.393160820007324
    4. 'int' → logprob: -13.018160820007324
    5. ' (' → logprob: -13.393160820007324
    6. '(in' → logprob: -13.768160820007324
    7. '[int' → logprob: -14.518160820007324
    8. '(

' → logprob: -15.643160820007324
    9. '<int' → logprob: -15.768160820007324
    10. '(str' → logprob: -15.768160820007324

Token 162: ',' (ID: 11)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.25760263204574585
    2. ',' → logprob: -1.8826026916503906
    3. ',S' → logprob: -3.0076026916503906
    4. '(' → logprob: -4.132602691650391
    5. '(sys' → logprob: -5.257602691650391
    6. ')' → logprob: -5.757602691650391
    7. ' (' → logprob: -7.882602691650391
    8. 'S' → logprob: -8.88260269165039
    9. ' ,' → logprob: -8.88260269165039
    10. '(Sys' → logprob: -8.88260269165039

Token 163: ' sys' (ID: 12228)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2551945149898529
    2. ' S' → logprob: -1.5051945447921753
    3. 'sys' → logprob: -6.130194664001465
    4. ' sys' → logprob: -6.880194664001465
    5. '   ' → logprob: -10.505194664001465
    6. ' ' → logprob: -11.755194664001465
    7. 'Sys' → logprob: -11.880194664001465
    8. '	S' → logprob: -12.380194664001465
    9. 'SYS' → logprob: -12.755194664001465
    10. '  ' → logprob: -13.255194664001465

Token 164: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010759611177491024
    2. '.' → logprob: -9.625107765197754
    3. '.stdout' → logprob: -10.375107765197754
    4. '.std' → logprob: -12.250107765197754
    5. 'stdin' → logprob: -12.875107765197754
    6. '.argv' → logprob: -12.875107765197754
    7. '.st' → logprob: -16.125106811523438
    8. ' stdin' → logprob: -16.250106811523438
    9. ' .' → logprob: -16.625106811523438
    10. '.stderr' → logprob: -16.625106811523438

Token 165: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.015052694827318192
    2. '.stdin' → logprob: -4.265052795410156
    3. '.' → logprob: -7.515052795410156
    4. '().' → logprob: -8.015052795410156
    5. '.stdout' → logprob: -12.390052795410156
    6. ' .' → logprob: -12.515052795410156
    7. '.readlines' → logprob: -13.140052795410156
    8. '.read' → logprob: -13.265052795410156
    9. ').' → logprob: -14.015052795410156
    10. ')' → logprob: -15.765052795410156

Token 166: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.7159857786027715e-05
    2. '()' → logprob: -10.000046730041504
    3. ' ().' → logprob: -13.375046730041504
    4. '(' → logprob: -17.12504768371582
    5. '.readline' → logprob: -17.25004768371582
    6. ' ' → logprob: -17.25004768371582
    7. '()).' → logprob: -17.37504768371582
    8. '())' → logprob: -18.00004768371582
    9. ' ()' → logprob: -18.12504768371582
    10. '()
' → logprob: -18.37504768371582

Token 167: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -4.334533878136426e-05
    2. 'strip' → logprob: -10.625042915344238
    3. 'split' → logprob: -11.125042915344238
    4. 'read' → logprob: -12.500042915344238
    5. 'rs' → logprob: -15.375042915344238
    6. 'rst' → logprob: -15.500042915344238
    7. '.rstrip' → logprob: -16.875043869018555
    8. 'rt' → logprob: -16.875043869018555
    9. 'rl' → logprob: -17.875043869018555
    10. 'rcode' → logprob: -18.000043869018555

Token 168: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002370329457335174
    2. '()' → logprob: -8.375237464904785
    3. ' ().' → logprob: -12.125237464904785
    4. '(' → logprob: -15.250237464904785
    5. '()
' → logprob: -15.375237464904785
    6. ')' → logprob: -16.12523651123047
    7. ' ()' → logprob: -16.50023651123047
    8. '())' → logprob: -16.62523651123047
    9. ' ' → logprob: -16.62523651123047
    10. '   ' → logprob: -17.25023651123047

Token 169: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.875000953674316
    3. 'spl' → logprob: -16.0
    4. 'strip' → logprob: -18.25
    5. 'rstrip' → logprob: -19.0
    6. '.split' → logprob: -19.125
    7. '(split' → logprob: -19.75
    8. 's' → logprob: -22.625
    9. 'sp' → logprob: -22.75
    10. '_split' → logprob: -23.0

Token 170: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018875879468396306
    2. '()' → logprob: -6.376887798309326
    3. ')' → logprob: -9.001887321472168
    4. '()))' → logprob: -10.001887321472168
    5. '(' → logprob: -11.501887321472168
    6. ' ())' → logprob: -12.626887321472168
    7. '())
' → logprob: -12.876887321472168
    8. '());' → logprob: -15.251887321472168
    9. '))' → logprob: -15.751887321472168
    10. '(),' → logprob: -16.251888275146484

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0058155064471066
    2. 'd' → logprob: -5.380815505981445
    3. '
' → logprob: -7.130815505981445
    4. '#' → logprob: -8.505815505981445
    5. '\' → logprob: -9.630815505981445
    6. '\n' → logprob: -10.255815505981445
    7. '

' → logprob: -10.505815505981445
    8. 'D' → logprob: -11.755815505981445
    9. 'de' → logprob: -11.755815505981445
    10. ' def' → logprob: -12.380815505981445

Token 172: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7437739372253418
    2. ' I' → logprob: -2.618773937225342
    3. ' L' → logprob: -2.743773937225342
    4. 'A' → logprob: -2.868773937225342
    5. 'N' → logprob: -2.993773937225342
    6. ' N' → logprob: -2.993773937225342
    7. 'L' → logprob: -3.118773937225342
    8. ' A' → logprob: -3.743773937225342
    9. 'V' → logprob: -4.118773937225342
    10. 'MI' → logprob: -4.118773937225342

Token 173: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7265509963035583
    2. '()' → logprob: -1.3515510559082031
    3. 'nt' → logprob: -1.4765510559082031
    4. 'N' → logprob: -3.601551055908203
    5. '():' → logprob: -7.601551055908203
    6. 'NT' → logprob: -8.601551055908203
    7. 'np' → logprob: -8.976551055908203
    8. '_n' → logprob: -9.351551055908203
    9. ' n' → logprob: -9.851551055908203
    10. 'nit' → logprob: -9.851551055908203

Token 174: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.298299640417099
    2. '()' → logprob: -1.7982996702194214
    3. '():
' → logprob: -3.173299551010132
    4. ':' → logprob: -4.298299789428711
    5. '   ' → logprob: -4.298299789428711
    6. 'int' → logprob: -4.423299789428711
    7. 'return' → logprob: -6.048299789428711
    8. '):' → logprob: -6.048299789428711
    9. ')' → logprob: -6.548299789428711
    10. 'n' → logprob: -7.298299789428711

Token 175: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6004130840301514
    2. ' return' → logprob: -0.8504130840301514
    3. 'int' → logprob: -4.3504133224487305
    4. '   ' → logprob: -4.6004133224487305
    5. ' int' → logprob: -7.3504133224487305
    6. '    
' → logprob: -8.97541332244873
    7. ' ' → logprob: -9.10041332244873
    8. '    ' → logprob: -9.22541332244873
    9. '  ' → logprob: -9.85041332244873
    10. '
' → logprob: -9.85041332244873

Token 176: '   ' (ID: 271)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.018244881182909012
    2. 'n' → logprob: -4.143244743347168
    3. 'int' → logprob: -6.643244743347168
    4. 'return' → logprob: -7.768244743347168
    5. '   ' → logprob: -8.768244743347168
    6. 't' → logprob: -8.893244743347168
    7. 'nit' → logprob: -10.018244743347168
    8. ' nt' → logprob: -10.143244743347168
    9. ' return' → logprob: -10.768244743347168
    10. 'np' → logprob: -10.768244743347168

Token 177: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006349761504679918
    2. '"""
' → logprob: -6.131349563598633
    3. '"""' → logprob: -6.256349563598633
    4. '   ' → logprob: -7.381349563598633
    5. 'def' → logprob: -7.506349563598633
    6. ' return' → logprob: -8.131349563598633
    7. 'int' → logprob: -9.256349563598633
    8. 'r' → logprob: -9.631349563598633
    9. 'ret' → logprob: -9.631349563598633
    10. 'n' → logprob: -9.881349563598633

Token 178: ' une' (ID: 2463)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7976035475730896
    2. 'nt' → logprob: -0.9226035475730896
    3. '()' → logprob: -2.7976036071777344
    4. 'int' → logprob: -3.2976036071777344
    5. ' une' → logprob: -3.5476036071777344
    6. 'une' → logprob: -4.422603607177734
    7. ')' → logprob: -5.672603607177734
    8. ' n' → logprob: -6.547603607177734
    9. ' un' → logprob: -6.547603607177734
    10. 'ent' → logprob: -6.922603607177734

Token 179: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.05451604351401329
    2. 'int' → logprob: -3.929516077041626
    3. ' ligne' → logprob: -4.304515838623047
    4. 'nt' → logprob: -5.304515838623047
    5. 'l' → logprob: -5.429515838623047
    6. 'n' → logprob: -5.679515838623047
    7. 'ent' → logprob: -5.804515838623047
    8. '()' → logprob: -5.929515838623047
    9. 'line' → logprob: -8.429515838623047
    10. 'entrée' → logprob: -8.679515838623047

Token 180: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0064586130902171135
    2. '().' → logprob: -6.256458759307861
    3. 'from' → logprob: -6.756458759307861
    4. '()
' → logprob: -7.381458759307861
    5. ' depuis' → logprob: -7.756458759307861
    6. 'dep' → logprob: -7.756458759307861
    7. '   ' → logprob: -7.881458759307861
    8. ',' → logprob: -7.881458759307861
    9. ' ()' → logprob: -8.006458282470703
    10. 'def' → logprob: -8.881458282470703

Token 181: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1726127564907074
    2. 'sys' → logprob: -2.2976126670837402
    3. ' l' → logprob: -3.7976126670837402
    4. '()' → logprob: -3.9226126670837402
    5. 's' → logprob: -5.29761266708374
    6. ' sys' → logprob: -5.42261266708374
    7. '(sys' → logprob: -6.29761266708374
    8. '=sys' → logprob: -7.42261266708374
    9. '```' → logprob: -7.67261266708374
    10. '   ' → logprob: -7.79761266708374

Token 182: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04490159824490547
    2. 'l' → logprob: -3.6699016094207764
    3. ''import' → logprob: -5.044901371002197
    4. ''' → logprob: -5.419901371002197
    5. ''l' → logprob: -5.794901371002197
    6. 'entrée' → logprob: -6.794901371002197
    7. '_l' → logprob: -7.294901371002197
    8. ''s' → logprob: -7.669901371002197
    9. '_' → logprob: -7.794901371002197
    10. '_input' → logprob: -7.919901371002197

Token 183: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.42946386337280273
    2. ' standard' → logprob: -1.0544638633728027
    3. '   ' → logprob: -7.679463863372803
    4. '()' → logprob: -9.679464340209961
    5. ' standart' → logprob: -10.179464340209961
    6. ',' → logprob: -10.679464340209961
    7. 'stand' → logprob: -10.679464340209961
    8. 'std' → logprob: -10.804464340209961
    9. '标准' → logprob: -10.804464340209961
    10. ' стандарт' → logprob: -10.929464340209961

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7582464218139648
    2. '().' → logprob: -1.3832464218139648
    3. '(),' → logprob: -1.7582464218139648
    4. '()' → logprob: -2.508246421813965
    5. '   ' → logprob: -3.758246421813965
    6. '():' → logprob: -6.758246421813965
    7. 'def' → logprob: -7.008246421813965
    8. '()
' → logprob: -7.758246421813965
    9. 'return' → logprob: -8.633246421813965
    10. '.' → logprob: -8.758246421813965

Token 185: ' enl' (ID: 116494)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ren' → logprob: -1.3087961673736572
    2. 'en' → logprob: -1.5587961673736572
    3. 'rstrip' → logprob: -1.9337961673736572
    4. '   ' → logprob: -2.0587961673736572
    5. 'ret' → logprob: -2.8087961673736572
    6. 'int' → logprob: -2.9337961673736572
    7. 'convert' → logprob: -3.1837961673736572
    8. 'return' → logprob: -3.3087961673736572
    9. 'def' → logprob: -4.433795928955078
    10. 'split' → logprob: -4.933795928955078

Token 186: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0001261845463886857
    2. 'eve' → logprob: -9.250125885009766
    3. 'èves' → logprob: -11.125125885009766
    4. 'è' → logprob: -12.125125885009766
    5. 'èvre' → logprob: -12.500125885009766
    6. 'e' → logprob: -13.125125885009766
    7. 'èv' → logprob: -13.375125885009766
    8. 'é' → logprob: -13.625125885009766
    9. 'èche' → logprob: -14.625125885009766
    10. 'ède' → logprob: -15.250125885009766

Token 187: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14959463477134705
    2. '()' → logprob: -2.27459454536438
    3. 'les' → logprob: -3.39959454536438
    4. '   ' → logprob: -7.399594783782959
    5. '(' → logprob: -8.1495943069458
    6. '('' → logprob: -8.3995943069458
    7. 'l' → logprob: -8.5245943069458
    8. '```' → logprob: -8.5245943069458
    9. 'def' → logprob: -8.7745943069458
    10. 's' → logprob: -9.0245943069458

Token 188: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.030990207567811012
    2. 'es' → logprob: -3.7809901237487793
    3. ' espaces' → logprob: -5.155990123748779
    4. 'spaces' → logprob: -6.530990123748779
    5. '()' → logprob: -7.905990123748779
    6. ''esp' → logprob: -9.655990600585938
    7. 's' → logprob: -10.405990600585938
    8. ''espace' → logprob: -12.655990600585938
    9. '’esp' → logprob: -13.030990600585938
    10. 'import' → logprob: -13.155990600585938

Token 189: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03412347286939621
    2. 'de' → logprob: -3.534123420715332
    3. 'def' → logprob: -5.659123420715332
    4. '   ' → logprob: -7.284123420715332
    5. '_de' → logprob: -9.034123420715332
    6. ' def' → logprob: -10.659123420715332
    7. '    ' → logprob: -11.159123420715332
    8. '()' → logprob: -12.159123420715332
    9. '  ' → logprob: -12.159123420715332
    10. '_' → logprob: -12.534123420715332

Token 190: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.07044295966625214
    2. ' fin' → logprob: -2.6954429149627686
    3. 'f' → logprob: -7.695443153381348
    4. 'fi' → logprob: -10.320443153381348
    5. ' f' → logprob: -11.445443153381348
    6. 'fim' → logprob: -12.820443153381348
    7. 's' → logprob: -14.445443153381348
    8. 'd' → logprob: -14.570443153381348
    9. 'fn' → logprob: -14.945443153381348
    10. 'n' → logprob: -15.070443153381348

Token 191: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039642032235860825
    2. ' et' → logprob: -3.789642095565796
    3. '   ' → logprob: -4.664641857147217
    4. '()' → logprob: -5.414641857147217
    5. '(),' → logprob: -6.414641857147217
    6. ' ,' → logprob: -7.914641857147217
    7. 'et' → logprob: -9.164642333984375
    8. 'def' → logprob: -9.664642333984375
    9. '().' → logprob: -10.039642333984375
    10. ',
' → logprob: -11.164642333984375

Token 192: ' convert' (ID: 8452)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.954617977142334
    2. 'return' → logprob: -1.329617977142334
    3. 'convert' → logprob: -2.079617977142334
    4. ' retourne' → logprob: -2.204617977142334
    5. 'ren' → logprob: -2.579617977142334
    6. ' ren' → logprob: -4.204617977142334
    7. ' convert' → logprob: -4.454617977142334
    8. ' return' → logprob: -4.954617977142334
    9. ' ret' → logprob: -6.579617977142334
    10. 'int' → logprob: -7.079617977142334

Token 193: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.1756367712223437e-05
    2. ' it' → logprob: -11.375011444091797
    3. 'i' → logprob: -16.750011444091797
    4. 't' → logprob: -17.125011444091797
    5. 'ît' → logprob: -17.250011444091797
    6. 'iert' → logprob: -17.625011444091797
    7. 'ит' → logprob: -17.750011444091797
    8. '_it' → logprob: -17.875011444091797
    9. '	it' → logprob: -17.875011444091797
    10. 'et' → logprob: -18.000011444091797

Token 194: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7024226188659668
    2. '()' → logprob: -1.4524226188659668
    3. ' la' → logprob: -1.9524226188659668
    4. ' en' → logprob: -2.577422618865967
    5. ' cette' → logprob: -3.952422618865967
    6. 'l' → logprob: -4.827422618865967
    7. 'en' → logprob: -5.077422618865967
    8. '-la' → logprob: -5.452422618865967
    9. ' celle' → logprob: -5.577422618865967
    10. ' ' → logprob: -5.702422618865967

Token 195: ' chaîne' (ID: 89288)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.727088212966919
    2. 'sys' → logprob: -0.977088212966919
    3. 'input' → logprob: -2.727088212966919
    4. ' sys' → logprob: -3.727088212966919
    5. 'ent' → logprob: -4.10208797454834
    6. 'ligne' → logprob: -4.60208797454834
    7. 'entrée' → logprob: -5.22708797454834
    8. ' input' → logprob: -5.47708797454834
    9. '=sys' → logprob: -5.72708797454834
    10. '(sys' → logprob: -6.10208797454834

Token 196: ' résult' (ID: 31657)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4704778790473938
    2. ' en' → logprob: -1.345477819442749
    3. 'en' → logprob: -2.470477819442749
    4. '   ' → logprob: -3.970477819442749
    5. '[]' → logprob: -5.595478057861328
    6. 'de' → logprob: -6.220478057861328
    7. ')' → logprob: -7.095478057861328
    8. 'def' → logprob: -7.095478057861328
    9. ' ' → logprob: -7.345478057861328
    10. '_en' → logprob: -7.470478057861328

Token 197: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.059301212430000305
    2. 'ue' → logprob: -3.0593011379241943
    3. ' en' → logprob: -5.184301376342773
    4. 'ant' → logprob: -5.809301376342773
    5. 'e' → logprob: -7.059301376342773
    6. 'ente' → logprob: -7.559301376342773
    7. 'u' → logprob: -8.434301376342773
    8. '   ' → logprob: -9.809301376342773
    9. 'ure' → logprob: -9.809301376342773
    10. 'ée' → logprob: -9.934301376342773

Token 198: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08931772410869598
    2. 'en' → logprob: -2.464317798614502
    3. '_en' → logprob: -8.339317321777344
    4. '()' → logprob: -9.339317321777344
    5. '   ' → logprob: -11.089317321777344
    6. 'def' → logprob: -11.339317321777344
    7. '(en' → logprob: -11.464317321777344
    8. ' ' → logprob: -12.714317321777344
    9. 'En' → logprob: -12.714317321777344
    10. ''en' → logprob: -13.214317321777344

Token 199: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017751421546563506
    2. ' int' → logprob: -6.37677526473999
    3. 'ent' → logprob: -9.626774787902832
    4. '[int' → logprob: -12.876774787902832
    5. '=int' → logprob: -14.001774787902832
    6. ' entier' → logprob: -14.001774787902832
    7. '(int' → logprob: -14.376774787902832
    8. '<int' → logprob: -14.376774787902832
    9. ':int' → logprob: -14.626774787902832
    10. 'n' → logprob: -15.001774787902832

Token 200: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018245273968204856
    2. '.' → logprob: -7.376824378967285
    3. '().' → logprob: -7.376824378967285
    4. ')' → logprob: -8.376824378967285
    5. '   ' → logprob: -8.626824378967285
    6. '()
' → logprob: -9.751824378967285
    7. '():' → logprob: -10.501824378967285
    8. 'def' → logprob: -10.751824378967285
    9. ',' → logprob: -11.126824378967285
    10. '(),' → logprob: -11.251824378967285

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001916200271807611
    2. ' return' → logprob: -9.875191688537598
    3. 'return' → logprob: -9.875191688537598
    4. ')' → logprob: -10.125191688537598
    5. '    
' → logprob: -10.875191688537598
    6. ' 
' → logprob: -12.000191688537598
    7. '
' → logprob: -12.375191688537598
    8. ')
' → logprob: -12.500191688537598
    9. ' ' → logprob: -12.875191688537598
    10. '  
' → logprob: -13.000191688537598

Token 202: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014401155058294535
    2. ' return' → logprob: -7.126440048217773
    3. 'return' → logprob: -7.376440048217773
    4. 'def' → logprob: -12.251440048217773
    5. '
' → logprob: -13.876440048217773
    6. ' ' → logprob: -13.876440048217773
    7. '  ' → logprob: -14.001440048217773
    8. '    
' → logprob: -14.376440048217773
    9. '    ' → logprob: -14.626440048217773
    10. '```' → logprob: -14.751440048217773

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7341986298561096
    2. '   ' → logprob: -1.4841985702514648
    3. '<|end|>' → logprob: -2.609198570251465
    4. ':int' → logprob: -2.859198570251465
    5. '(int' → logprob: -2.984198570251465
    6. ' :' → logprob: -3.109198570251465
    7. '[int' → logprob: -3.609198570251465
    8. 'int' → logprob: -4.484198570251465
    9. '<int' → logprob: -4.609198570251465
    10. ' int' → logprob: -5.234198570251465

Token 204: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.768059253692627
    2. 'int' → logprob: -1.018059253692627
    3. ' int' → logprob: -1.768059253692627
    4. '    ' → logprob: -6.893059253692627
    5. '(int' → logprob: -7.143059253692627
    6. '       ' → logprob: -7.268059253692627
    7. '  ' → logprob: -8.018058776855469
    8. '<int' → logprob: -8.518058776855469
    9. '=int' → logprob: -8.643058776855469
    10. '[int' → logprob: -8.643058776855469

Token 205: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.625261306762695
    4. '[int' → logprob: -23.250261306762695
    5. '(int' → logprob: -23.625261306762695
    6. '
' → logprob: -23.750261306762695
    7. '  ' → logprob: -23.875261306762695
    8. ':int' → logprob: -23.875261306762695
    9. '=int' → logprob: -24.375261306762695
    10. ' ' → logprob: -24.625261306762695

Token 206: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7832930684089661
    2. '):' → logprob: -1.1582930088043213
    3. ':' → logprob: -1.7832930088043213
    4. '):
' → logprob: -3.9082930088043213
    5. '():' → logprob: -4.1582932472229
    6. '()' → logprob: -4.7832932472229
    7. '   ' → logprob: -4.9082932472229
    8. ':
' → logprob: -5.2832932472229
    9. '():
' → logprob: -6.4082932472229
    10. '(S' → logprob: -7.9082932472229

Token 207: ' Ent' (ID: 6815)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06197015196084976
    2. 'int' → logprob: -2.8119702339172363
    3. '=int' → logprob: -13.811969757080078
    4. '(int' → logprob: -14.436969757080078
    5. '   ' → logprob: -14.561969757080078
    6. '[int' → logprob: -16.186969757080078
    7. '<int' → logprob: -16.436969757080078
    8. ' 
' → logprob: -16.561969757080078
    9. ' ' → logprob: -16.811969757080078
    10. ':int' → logprob: -17.186969757080078

Token 208: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.001150102005340159
    2. 'ière' → logprob: -7.001150131225586
    3. 'iere' → logprob: -8.751150131225586
    4. '   ' → logprob: -11.126150131225586
    5. 'iert' → logprob: -11.501150131225586
    6. 'ié' → logprob: -11.876150131225586
    7. 'eger' → logprob: -12.001150131225586
    8. 'égr' → logprob: -12.126150131225586
    9. 'iero' → logprob: -12.251150131225586
    10. 'i' → logprob: -12.501150131225586

Token 209: ' extrait' (ID: 194006)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' depuis' (ID: 16277)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6182635426521301
    2. 'de' → logprob: -1.7432634830474854
    3. 'dep' → logprob: -1.8682634830474854
    4. '()' → logprob: -2.3682634830474854
    5. 'from' → logprob: -4.1182637214660645
    6. ' depuis' → logprob: -4.2432637214660645
    7. '   ' → logprob: -5.1182637214660645
    8. ' from' → logprob: -7.4932637214660645
    9. '(' → logprob: -8.868263244628906
    10. ' ' → logprob: -8.993263244628906

Token 211: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.19637781381607056
    2. ' la' → logprob: -1.9463777542114258
    3. 'l' → logprob: -4.071377754211426
    4. 'sys' → logprob: -4.071377754211426
    5. ' sys' → logprob: -7.196377754211426
    6. 'S' → logprob: -8.071377754211426
    7. '(sys' → logprob: -8.946377754211426
    8. '   ' → logprob: -9.946377754211426
    9. ' l' → logprob: -9.946377754211426
    10. 'le' → logprob: -10.196377754211426

Token 212: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5136679410934448
    2. ' ligne' → logprob: -1.6386679410934448
    3. 'entrée' → logprob: -1.6386679410934448
    4. 'l' → logprob: -5.013668060302734
    5. ' entrée' → logprob: -6.013668060302734
    6. 'chaine' → logprob: -6.388668060302734
    7. ' chaîne' → logprob: -6.888668060302734
    8. 'input' → logprob: -7.638668060302734
    9. ' input' → logprob: -8.263668060302734
    10. 's' → logprob: -9.138668060302734

Token 213: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15036427974700928
    2. '   ' → logprob: -2.150364398956299
    3. ')' → logprob: -4.275364398956299
    4. '()' → logprob: -6.025364398956299
    5. ',' → logprob: -6.150364398956299
    6. '"""' → logprob: -7.025364398956299
    7. ').' → logprob: -7.400364398956299
    8. '().' → logprob: -7.525364398956299
    9. '<|end|>' → logprob: -7.525364398956299
    10. '."""' → logprob: -7.900364398956299

Token 214: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.010373324155807495
    2. 'entrée' → logprob: -4.635373115539551
    3. 'l' → logprob: -8.13537311553955
    4. 'e' → logprob: -9.01037311553955
    5. '’entrée' → logprob: -9.76037311553955
    6. ''' → logprob: -10.38537311553955
    7. ' entrée' → logprob: -10.76037311553955
    8. 'a' → logprob: -10.76037311553955
    9. ''ent' → logprob: -11.38537311553955
    10. 'entrada' → logprob: -11.63537311553955

Token 215: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11615617573261261
    2. '.' → logprob: -2.4911561012268066
    3. '   ' → logprob: -4.491156101226807
    4. '().' → logprob: -4.491156101226807
    5. '()
' → logprob: -6.116156101226807
    6. ')' → logprob: -6.491156101226807
    7. '.
' → logprob: -7.866156101226807
    8. '().
' → logprob: -9.616156578063965
    9. '```' → logprob: -9.616156578063965
    10. 'def' → logprob: -10.366156578063965

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011013990733772516
    2. '"""
' → logprob: -7.751101493835449
    3. '    
' → logprob: -8.50110149383545
    4. '"""' → logprob: -8.75110149383545
    5. ')' → logprob: -9.12610149383545
    6. '
' → logprob: -9.37610149383545
    7. '  
' → logprob: -11.12610149383545
    8. '\n' → logprob: -11.12610149383545
    9. 'return' → logprob: -11.50110149383545
    10. ')
' → logprob: -11.50110149383545

Token 217: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001963881659321487
    2. '"""' → logprob: -9.25019645690918
    3. '"""
' (adapté à ' """
') → logprob: -10.12519645690918
    4. ')' → logprob: -10.62519645690918
    5. '```' → logprob: -10.75019645690918
    6. 'return' → logprob: -12.25019645690918
    7. ' return' → logprob: -12.75019645690918
    8. '
' → logprob: -13.25019645690918
    9. ')
' → logprob: -13.62519645690918
    10. '  ' → logprob: -13.75019645690918

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004898841143585742
    2. 'return' → logprob: -7.750489711761475
    3. ' return' → logprob: -9.750490188598633
    4. '	return' → logprob: -14.125490188598633
    5. ' ' → logprob: -16.500490188598633
    6. '  ' → logprob: -16.625490188598633
    7. '   ' → logprob: -17.250490188598633
    8. '    ' → logprob: -17.625490188598633
    9. '```' → logprob: -17.875490188598633
    10. '
' → logprob: -19.000490188598633

Token 219: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.392202976712724e-06
    2. ' return' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.750006675720215
    4. 'int' → logprob: -20.2500057220459
    5. '
' → logprob: -21.3750057220459
    6. '	return' → logprob: -22.6250057220459
    7. '```' → logprob: -22.7500057220459
    8. 'ret' → logprob: -23.0000057220459
    9. 'eturn' → logprob: -23.2500057220459
    10. 'try' → logprob: -23.6250057220459

Token 220: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38687121868133545
    2. 'int' → logprob: -1.1368712186813354
    3. '	int' → logprob: -15.886871337890625
    4. ' ' → logprob: -16.011871337890625
    5. '(int' → logprob: -17.386871337890625
    6. '=int' → logprob: -18.261871337890625
    7. '   ' → logprob: -18.636871337890625
    8. '  ' → logprob: -19.136871337890625
    9. '<int' → logprob: -19.136871337890625
    10. '[int' → logprob: -19.261871337890625

Token 221: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.09783034026622772
    2. '(' → logprob: -2.847830295562744
    3. '(S' → logprob: -3.347830295562744
    4. '(Sys' → logprob: -10.222830772399902
    5. '(s' → logprob: -10.847830772399902
    6. 'sys' → logprob: -12.347830772399902
    7. '(
' → logprob: -12.597830772399902
    8. '(System' → logprob: -13.222830772399902
    9. '(

' → logprob: -14.722830772399902
    10. '(system' → logprob: -14.972830772399902

Token 222: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -12.375009536743164
    3. 'stdin' → logprob: -13.000009536743164
    4. '.stdout' → logprob: -13.750009536743164
    5. '.readline' → logprob: -14.250009536743164
    6. '.argv' → logprob: -14.875009536743164
    7. '.std' → logprob: -15.625009536743164
    8. ' .' → logprob: -16.250009536743164
    9. '(stdin' → logprob: -16.625009536743164
    10. ').' → logprob: -16.875009536743164

Token 223: '.readline' (ID: 74673)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5780088901519775
    2. '.readline' → logprob: -0.8280088901519775
    3. '.' → logprob: -6.203008651733398
    4. 'stdin' → logprob: -10.953008651733398
    5. ' .' → logprob: -11.703008651733398
    6. '().' → logprob: -11.828008651733398
    7. '(stdin' → logprob: -12.453008651733398
    8. '.stdout' → logprob: -12.703008651733398
    9. ').' → logprob: -13.828008651733398
    10. '.argv' → logprob: -14.078008651733398

Token 224: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011992781655862927
    2. '())' → logprob: -7.251199245452881
    3. '()' → logprob: -7.626199245452881
    4. '.readline' → logprob: -13.751199722290039
    5. ')' → logprob: -15.376199722290039
    6. ' ().' → logprob: -16.50119972229004
    7. '()).' → logprob: -16.62619972229004
    8. 'line' → logprob: -17.00119972229004
    9. '()[' → logprob: -17.12619972229004
    10. '()
' → logprob: -17.50119972229004

Token 225: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -5.080963092041202e-06
    2. 'read' → logprob: -12.375004768371582
    3. 'strip' → logprob: -15.625004768371582
    4. ')' → logprob: -15.625004768371582
    5. 'rst' → logprob: -15.750004768371582
    6. '.rstrip' → logprob: -15.875004768371582
    7. 'rcode' → logprob: -16.2500057220459
    8. 'r' → logprob: -17.6250057220459
    9. 'rd' → logprob: -18.0000057220459
    10. '0' → logprob: -18.2500057220459

Token 226: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00022070204431656748
    2. ')' → logprob: -9.00022029876709
    3. '()' → logprob: -9.25022029876709
    4. '())
' → logprob: -14.25022029876709
    5. ' ())' → logprob: -15.25022029876709
    6. '()))' → logprob: -15.75022029876709
    7. '(' → logprob: -18.375221252441406
    8. '()]' → logprob: -18.875221252441406
    9. ' )' → logprob: -19.000221252441406
    10. '();)' → logprob: -19.000221252441406

Token 227: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017503881826996803
    2. 'class' → logprob: -7.251750469207764
    3. 'd' → logprob: -7.751750469207764
    4. 'n' → logprob: -8.251749992370605
    5. '#' → logprob: -9.001749992370605
    6. '\' → logprob: -9.126749992370605
    7. 'N' → logprob: -10.376749992370605
    8. '\n' → logprob: -10.626749992370605
    9. 'D' → logprob: -11.001749992370605
    10. '
' → logprob: -11.751749992370605

Token 228: ' LI' (ID: 14875)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6714261770248413
    2. ' main' → logprob: -0.9214261770248413
    3. 'P' → logprob: -3.421426296234131
    4. 'O' → logprob: -4.546426296234131
    5. 'L' → logprob: -4.671426296234131
    6. 'D' → logprob: -4.796426296234131
    7. 'T' → logprob: -5.421426296234131
    8. 'V' → logprob: -5.796426296234131
    9. 'A' → logprob: -5.796426296234131
    10. 'E' → logprob: -6.046426296234131

Token 229: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8411889672279358
    2. '()' → logprob: -1.466188907623291
    3. 'ne' → logprob: -1.841188907623291
    4. '():
' → logprob: -2.091188907623291
    5. 'st' → logprob: -2.966188907623291
    6. 'n' → logprob: -5.966188907623291
    7. 'ST' → logprob: -7.091188907623291
    8. 'N' → logprob: -8.59118938446045
    9. 'nt' → logprob: -8.84118938446045
    10. '():
' → logprob: -8.96618938446045

Token 230: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06212934851646423
    2. '():
' → logprob: -2.812129259109497
    3. '()' → logprob: -8.812129020690918
    4. '():
' → logprob: -11.562129020690918
    5. ' ():' → logprob: -14.062129020690918
    6. '():

' → logprob: -14.437129020690918
    7. '   ' → logprob: -14.437129020690918
    8. ':' → logprob: -14.937129020690918
    9. '(' → logprob: -15.312129020690918
    10. 'def' → logprob: -15.437129020690918

Token 231: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0558931902050972
    2. 'list' → logprob: -4.180893421173096
    3. 'def' → logprob: -4.305893421173096
    4. '():
' → logprob: -4.555893421173096
    5. ':
' → logprob: -5.305893421173096
    6. '   ' → logprob: -5.555893421173096
    7. ' return' → logprob: -5.555893421173096
    8. '[]' → logprob: -7.305893421173096
    9. '()' → logprob: -7.930893421173096
    10. '():' → logprob: -7.930893421173096

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2321111112833023
    2. 'return' → logprob: -2.1071112155914307
    3. 'def' → logprob: -3.2321112155914307
    4. ' return' → logprob: -4.607110977172852
    5. '):
' → logprob: -4.732110977172852
    6. 'eturn' → logprob: -4.732110977172852
    7. '():
' → logprob: -5.607110977172852
    8. '()' → logprob: -6.107110977172852
    9. 'map' → logprob: -6.107110977172852
    10. ')' → logprob: -6.232110977172852

Token 233: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05278141796588898
    2. 'def' → logprob: -3.177781343460083
    3. '   ' → logprob: -4.802781581878662
    4. ' return' → logprob: -6.802781581878662
    5. '"""
' → logprob: -9.177781105041504
    6. 'S' → logprob: -9.177781105041504
    7. '[]
' → logprob: -9.552781105041504
    8. '
' → logprob: -10.427781105041504
    9. '"""' → logprob: -10.677781105041504
    10. '    
' → logprob: -11.427781105041504

Token 234: ' une' (ID: 2463)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8687240481376648
    2. 'ne' → logprob: -1.7437241077423096
    3. 't' → logprob: -2.3687241077423096
    4. '()' → logprob: -2.4937241077423096
    5. 'n' → logprob: -2.6187241077423096
    6. 's' → logprob: -3.4937241077423096
    7. 'nt' → logprob: -3.7437241077423096
    8. 'm' → logprob: -3.9937241077423096
    9. 'M' → logprob: -4.6187238693237305
    10. ' a' → logprob: -4.8687238693237305

Token 235: ' ligne' (ID: 19583)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.22925108671188354
    2. 'ligne' → logprob: -2.4792511463165283
    3. 'igne' → logprob: -2.8542511463165283
    4. 'n' → logprob: -4.104250907897949
    5. 'ist' → logprob: -4.229250907897949
    6. 'iste' → logprob: -4.354250907897949
    7. 'line' → logprob: -4.854250907897949
    8. ' ligne' → logprob: -5.479250907897949
    9. '()' → logprob: -6.354250907897949
    10. 'liste' → logprob: -6.979250907897949

Token 236: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12107798457145691
    2. '():' → logprob: -2.7460780143737793
    3. '().' → logprob: -3.3710780143737793
    4. '():
' → logprob: -4.996078014373779
    5. 'def' → logprob: -5.746078014373779
    6. '()
' → logprob: -6.621078014373779
    7. ' =' → logprob: -6.996078014373779
    8. '   ' → logprob: -7.121078014373779
    9. '=' → logprob: -7.121078014373779
    10. '()[' → logprob: -7.621078014373779

Token 237: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023687858134508133
    2. ' sys' → logprob: -3.7736878395080566
    3. 's' → logprob: -8.023688316345215
    4. 'l' → logprob: -10.148688316345215
    5. 'la' → logprob: -11.023688316345215
    6. 'list' → logprob: -11.648688316345215
    7. ' la' → logprob: -11.648688316345215
    8. 'S' → logprob: -11.648688316345215
    9. '(sys' → logprob: -11.648688316345215
    10. 'the' → logprob: -11.898688316345215

Token 238: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.18586911261081696
    2. ''import' → logprob: -2.6858692169189453
    3. 'n' → logprob: -3.4358692169189453
    4. 'entrée' → logprob: -4.060869216918945
    5. 'import' → logprob: -4.560869216918945
    6. 'sys' → logprob: -4.935869216918945
    7. ''s' → logprob: -5.185869216918945
    8. ''ent' → logprob: -5.435869216918945
    9. 'input' → logprob: -5.435869216918945
    10. '=sys' → logprob: -5.560869216918945

Token 239: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0221994798630476
    2. '()
' → logprob: -4.147199630737305
    3. '().' → logprob: -5.397199630737305
    4. 'def' → logprob: -7.022199630737305
    5. '():' → logprob: -9.272199630737305
    6. ' ()' → logprob: -9.397199630737305
    7. '[]' → logprob: -9.647199630737305
    8. '()`' → logprob: -9.897199630737305
    9. '()[' → logprob: -10.147199630737305
    10. '=' → logprob: -10.272199630737305

Token 240: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06920252740383148
    2. '()' → logprob: -2.944202423095703
    3. '   ' → logprob: -5.319202423095703
    4. '():' → logprob: -5.444202423095703
    5. 'def' → logprob: -6.569202423095703
    6. ',' → logprob: -6.694202423095703
    7. '():
' → logprob: -7.319202423095703
    8. '()
' → logprob: -7.944202423095703
    9. 'return' → logprob: -8.194202423095703
    10. ')' → logprob: -8.319202423095703

Token 241: ' enl' (ID: 116494)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16356393694877625
    2. 'def' → logprob: -2.2885639667510986
    3. ' retourne' → logprob: -4.0385637283325195
    4. 'split' → logprob: -4.9135637283325195
    5. 'return' → logprob: -4.9135637283325195
    6. 'en' → logprob: -5.6635637283325195
    7. ' return' → logprob: -5.9135637283325195
    8. 'rstrip' → logprob: -6.0385637283325195
    9. ' en' → logprob: -6.9135637283325195
    10. ' def' → logprob: -6.9135637283325195

Token 242: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0036620718892663717
    2. 'eve' → logprob: -6.003662109375
    3. 'e' → logprob: -7.128662109375
    4. 'èce' → logprob: -9.628662109375
    5. 'év' → logprob: -9.878662109375
    6. 'èvre' → logprob: -10.003662109375
    7. 'é' → logprob: -10.128662109375
    8. 'split' → logprob: -10.378662109375
    9. 'ev' → logprob: -10.753662109375
    10. 'èche' → logprob: -11.003662109375

Token 243: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5072739124298096
    2. ' les' → logprob: -1.6322739124298096
    3. 'les' → logprob: -1.7572739124298096
    4. '()
' → logprob: -4.3822736740112305
    5. '```' → logprob: -4.7572736740112305
    6. '().' → logprob: -5.8822736740112305
    7. 'Les' → logprob: -6.6322736740112305
    8. '(' → logprob: -7.1322736740112305
    9. '('' → logprob: -7.3822736740112305
    10. 's' → logprob: -7.3822736740112305

Token 244: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.0011059214593842626
    2. 'es' → logprob: -7.251105785369873
    3. ' espaces' → logprob: -8.126106262207031
    4. 'spaces' → logprob: -9.376106262207031
    5. 's' → logprob: -11.251106262207031
    6. ''esp' → logprob: -13.751106262207031
    7. 'sp' → logprob: -15.626106262207031
    8. ' esp' → logprob: -16.25110626220703
    9. '```' → logprob: -16.25110626220703
    10. 'Esp' → logprob: -16.50110626220703

Token 245: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.32221633195877075
    2. ' de' → logprob: -1.322216272354126
    3. '_de' → logprob: -5.197216510772705
    4. 'def' → logprob: -5.822216510772705
    5. '   ' → logprob: -8.197216033935547
    6. '=' → logprob: -9.697216033935547
    7. '()' → logprob: -11.322216033935547
    8. 's' → logprob: -11.447216033935547
    9. '    ' → logprob: -12.197216033935547
    10. '  ' → logprob: -12.322216033935547

Token 246: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0003202114312443882
    2. 'fi' → logprob: -8.750320434570312
    3. ' fin' → logprob: -9.375320434570312
    4. 'f' → logprob: -9.625320434570312
    5. 's' → logprob: -12.375320434570312
    6. 'final' → logprob: -13.500320434570312
    7. 'fim' → logprob: -14.000320434570312
    8. '```' → logprob: -14.125320434570312
    9. 'def' → logprob: -14.500320434570312
    10. '1' → logprob: -14.875320434570312

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2909910976886749
    2. ' et' → logprob: -1.6659910678863525
    3. 'et' → logprob: -3.4159910678863525
    4. '()' → logprob: -3.5409910678863525
    5. '   ' → logprob: -7.040991306304932
    6. '(),' → logprob: -7.415991306304932
    7. '```' → logprob: -9.915990829467773
    8. '().' → logprob: -10.665990829467773
    9. ' ,' → logprob: -10.790990829467773
    10. ')' → logprob: -11.040990829467773

Token 248: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.23673762381076813
    2. ' div' → logprob: -1.736737608909607
    3. 'et' → logprob: -4.3617377281188965
    4. '   ' → logprob: -4.6117377281188965
    5. ' et' → logprob: -5.6117377281188965
    6. 'split' → logprob: -5.8617377281188965
    7. ' retourne' → logprob: -6.4867377281188965
    8. 'return' → logprob: -6.9867377281188965
    9. 'la' → logprob: -7.3617377281188965
    10. 'ret' → logprob: -7.8617377281188965

Token 249: 'ise' (ID: 1096)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.634111225605011
    2. 'ise' → logprob: -0.759111225605011
    3. 'ize' → logprob: -7.384111404418945
    4. 'ides' → logprob: -7.884111404418945
    5. 'e' → logprob: -8.384111404418945
    6. 'id' → logprob: -9.384111404418945
    7. 'erse' → logprob: -10.259111404418945
    8. 'i' → logprob: -10.759111404418945
    9. '   ' → logprob: -10.884111404418945
    10. 'isez' → logprob: -11.259111404418945

Token 250: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.035133589059114456
    2. 'la' → logprob: -4.035133361816406
    3. '()' → logprob: -4.160133361816406
    4. '   ' → logprob: -7.785133361816406
    5. '<|end|>' → logprob: -8.785133361816406
    6. ' ' → logprob: -8.910133361816406
    7. 'l' → logprob: -9.160133361816406
    8. 'the' → logprob: -9.410133361816406
    9. '_la' → logprob: -9.535133361816406
    10. '()
' → logprob: -9.910133361816406

Token 251: ' ligne' (ID: 19583)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8232147693634033
    2. 'ligne' → logprob: -1.5732147693634033
    3. '()' → logprob: -2.3232147693634033
    4. ' ligne' → logprob: -2.4482147693634033
    5. 'sys' → logprob: -3.0732147693634033
    6. 'l' → logprob: -3.3232147693634033
    7. ' la' → logprob: -3.6982147693634033
    8. ' sys' → logprob: -3.6982147693634033
    9. 'line' → logprob: -3.8232147693634033
    10. '(sys' → logprob: -5.448214530944824

Token 252: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18660779297351837
    2. ' en' → logprob: -1.811607837677002
    3. 'en' → logprob: -6.811607837677002
    4. '().' → logprob: -6.811607837677002
    5. '   ' → logprob: -6.936607837677002
    6. '=' → logprob: -7.061607837677002
    7. '[]' → logprob: -7.311607837677002
    8. '```' → logprob: -7.811607837677002
    9. ' =' → logprob: -7.936607837677002
    10. '_en' → logprob: -8.311607360839844

Token 253: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.002695151139050722
    2. ' éléments' → logprob: -6.127695083618164
    3. 'list' → logprob: -8.002695083618164
    4. 'liste' → logprob: -9.627695083618164
    5. 'elements' → logprob: -9.752695083618164
    6. 'str' → logprob: -11.377695083618164
    7. '[]' → logprob: -11.627695083618164
    8. 'la' → logprob: -12.752695083618164
    9. '```' → logprob: -12.877695083618164
    10. 'ele' → logprob: -12.877695083618164

Token 254: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4662458002567291
    2. '   ' → logprob: -1.4662457704544067
    3. '=' → logprob: -3.3412458896636963
    4. '```' → logprob: -3.4662458896636963
    5. '[]' → logprob: -4.091245651245117
    6. '('' → logprob: -4.716245651245117
    7. 'def' → logprob: -5.216245651245117
    8. 'par' → logprob: -5.341245651245117
    9. '(' → logprob: -5.341245651245117
    10. ')' → logprob: -5.716245651245117

Token 255: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005402965471148491
    2. 'es' → logprob: -5.2554030418396
    3. 'ées' → logprob: -8.880402565002441
    4. 'é' → logprob: -11.630402565002441
    5. 'ements' → logprob: -12.505402565002441
    6. 'isés' → logprob: -12.880402565002441
    7. '   ' → logprob: -13.005402565002441
    8. '```' → logprob: -13.130402565002441
    9. 'ages' → logprob: -13.630402565002441
    10. 'par' → logprob: -13.880402565002441

Token 256: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.43985140323638916
    2. ' par' → logprob: -1.0648514032363892
    3. '()' → logprob: -5.6898512840271
    4. '=' → logprob: -6.3148512840271
    5. '```' → logprob: -6.3148512840271
    6. '   ' → logprob: -7.0648512840271
    7. '<|end|>' → logprob: -7.0648512840271
    8. '('' → logprob: -7.5648512840271
    9. '(par' → logprob: -7.5648512840271
    10. '    
' → logprob: -8.439851760864258

Token 257: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.04000631719827652
    2. ' des' → logprob: -3.540006399154663
    3. 'esp' → logprob: -4.790006160736084
    4. '   ' → logprob: -7.915006160736084
    5. '```' → logprob: -8.165006637573242
    6. '[]' → logprob: -8.290006637573242
    7. ''esp' → logprob: -8.540006637573242
    8. ''' → logprob: -8.665006637573242
    9. 'es' → logprob: -8.915006637573242
    10. ' espaces' → logprob: -9.415006637573242

Token 258: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.1595056056976318
    2. ' espaces' → logprob: -1.2845056056976318
    3. 'des' → logprob: -1.5345056056976318
    4. ' des' → logprob: -2.409505605697632
    5. 'spaces' → logprob: -2.534505605697632
    6. 'es' → logprob: -4.659505844116211
    7. ''esp' → logprob: -5.409505844116211
    8. ''' → logprob: -5.534505844116211
    9. 's' → logprob: -6.534505844116211
    10. 'un' → logprob: -7.284505844116211

Token 259: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011734941974282265
    2. '   ' → logprob: -4.511734962463379
    3. ')' → logprob: -7.761734962463379
    4. ',
' → logprob: -9.136734962463379
    5. ' ,' → logprob: -10.136734962463379
    6. ' et' → logprob: -10.636734962463379
    7. '    
' → logprob: -11.011734962463379
    8. 'et' → logprob: -11.136734962463379
    9. '),' → logprob: -11.636734962463379
    10. '=' → logprob: -11.761734962463379

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4552295506000519
    2. 'def' → logprob: -1.3302295207977295
    3. ' and' → logprob: -2.9552295207977295
    4. 'and' → logprob: -3.0802295207977295
    5. 'return' → logprob: -6.205229759216309
    6. ' def' → logprob: -7.455229759216309
    7. ' return' → logprob: -8.080229759216309
    8. ' ' → logprob: -9.580229759216309
    9. '    
' → logprob: -9.705229759216309
    10. '
' → logprob: -10.205229759216309

Token 261: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08215059340000153
    2. 'def' → logprob: -2.70715069770813
    3. '   ' → logprob: -4.832150459289551
    4. ' return' → logprob: -5.582150459289551
    5. 'returns' → logprob: -8.58215045928955
    6. '@return' → logprob: -9.83215045928955
    7. ' retourne' → logprob: -10.08215045928955
    8. ':return' → logprob: -10.45715045928955
    9. '
' → logprob: -10.95715045928955
    10. 'eturn' → logprob: -11.08215045928955

Token 262: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0009249189170077443
    2. ' it' → logprob: -7.125925064086914
    3. '_it' → logprob: -9.875925064086914
    4. 't' → logprob: -11.250925064086914
    5. '[it' → logprob: -11.250925064086914
    6. '(it' → logprob: -11.500925064086914
    7. '	it' → logprob: -11.500925064086914
    8. '   ' → logprob: -11.875925064086914
    9. '```' → logprob: -12.500925064086914
    10. 'It' → logprob: -13.375925064086914

Token 263: ' chacun' (ID: 52136)
  Prédit: ' chacun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chacun' → logprob: -0.5922428369522095
    2. 'ch' → logprob: -1.2172428369522095
    3. 'la' → logprob: -2.59224271774292
    4. 'cha' → logprob: -3.34224271774292
    5. ' la' → logprob: -3.96724271774292
    6. 'ces' → logprob: -4.84224271774292
    7. ' chac' → logprob: -4.96724271774292
    8. ' chaque' → logprob: -6.09224271774292
    9. 't' → logprob: -7.09224271774292
    10. '(ch' → logprob: -7.59224271774292

Token 264: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0824272632598877
    2. ' en' → logprob: -1.9574272632598877
    3. '(' → logprob: -2.0824272632598877
    4. '   ' → logprob: -2.3324272632598877
    5. 'de' → logprob: -3.2074272632598877
    6. ')' → logprob: -3.3324272632598877
    7. '=' → logprob: -3.4574272632598877
    8. ' =' → logprob: -3.4574272632598877
    9. '(int' → logprob: -3.5824272632598877
    10. '    ' → logprob: -3.7074272632598877

Token 265: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.0020391526632010937
    2. ' ces' → logprob: -6.377038955688477
    3. 'int' → logprob: -8.502038955688477
    4. 'str' → logprob: -9.877038955688477
    5. 'la' → logprob: -10.752038955688477
    6. 's' → logprob: -10.877038955688477
    7. 'ce' → logprob: -11.627038955688477
    8. 'c' → logprob: -11.752038955688477
    9. 'cel' → logprob: -11.752038955688477
    10. 'sys' → logprob: -12.002038955688477

Token 266: ' éléments' (ID: 57375)
  Prédit: ' ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.475001722574234
    2. 'ces' → logprob: -0.9750016927719116
    3. 'en' → logprob: -7.850001811981201
    4. 'élé' → logprob: -8.100001335144043
    5. ' en' → logprob: -8.850001335144043
    6. ' éléments' → logprob: -9.850001335144043
    7. ' ' → logprob: -12.100001335144043
    8. ' tokens' → logprob: -12.225001335144043
    9. ' elements' → logprob: -12.225001335144043
    10. '```' → logprob: -12.725001335144043

Token 267: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.05495619773864746
    2. 'en' → logprob: -2.9299561977386475
    3. '_en' → logprob: -9.804956436157227
    4. '=en' → logprob: -11.929956436157227
    5. '	en' → logprob: -12.554956436157227
    6. ''en' → logprob: -12.804956436157227
    7. 'in' → logprob: -12.929956436157227
    8. '(en' → logprob: -14.179956436157227
    9. ' in' → logprob: -14.179956436157227
    10. '=' → logprob: -14.554956436157227

Token 268: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024347983300685883
    2. 'str' → logprob: -3.774348020553589
    3. 'ent' → logprob: -7.14934778213501
    4. 'list' → logprob: -8.524348258972168
    5. ' int' → logprob: -9.524348258972168
    6. 'ints' → logprob: -11.274348258972168
    7. ' str' → logprob: -11.899348258972168
    8. 'string' → logprob: -12.274348258972168
    9. 'liste' → logprob: -12.399348258972168
    10. '[int' → logprob: -12.649348258972168

Token 269: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08975042402744293
    2. ')' → logprob: -3.0897505283355713
    3. 'et' → logprob: -3.5897505283355713
    4. ' et' → logprob: -5.214750289916992
    5. ']' → logprob: -5.714750289916992
    6. '()' → logprob: -5.839750289916992
    7. '),' → logprob: -8.464750289916992
    8. '(),' → logprob: -8.964750289916992
    9. 'and' → logprob: -9.339750289916992
    10. '   ' → logprob: -9.339750289916992

Token 270: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40859705209732056
    2. ' return' → logprob: -1.6585969924926758
    3. ' retourne' → logprob: -2.033596992492676
    4. 'ret' → logprob: -4.908596992492676
    5. ' returns' → logprob: -6.158596992492676
    6. ' les' → logprob: -6.783596992492676
    7. ':return' → logprob: -6.908596992492676
    8. ' retour' → logprob: -7.533596992492676
    9. 'returns' → logprob: -7.783596992492676
    10. '@return' → logprob: -8.033596992492676

Token 271: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6767137050628662
    2. ' list' → logprob: -0.9267137050628662
    3. '[]' → logprob: -2.426713705062866
    4. ' la' → logprob: -5.926713943481445
    5. '[' → logprob: -6.551713943481445
    6. '_list' → logprob: -6.926713943481445
    7. 'List' → logprob: -7.426713943481445
    8. 's' → logprob: -7.801713943481445
    9. '[list' → logprob: -7.801713943481445
    10. ' [' → logprob: -8.301713943481445

Token 272: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7286698818206787
    2. 'list' → logprob: -0.7286698818206787
    3. ' liste' → logprob: -3.8536698818206787
    4. 'liste' → logprob: -4.853670120239258
    5. '_list' → logprob: -5.478670120239258
    6. '[]' → logprob: -6.728670120239258
    7. 'List' → logprob: -8.728670120239258
    8. '[' → logprob: -9.228670120239258
    9. 's' → logprob: -10.228670120239258
    10. ' lista' → logprob: -10.353670120239258

Token 273: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5411059856414795
    2. '<|end|>' → logprob: -1.7911059856414795
    3. '[' → logprob: -2.1661059856414795
    4. '()' → logprob: -2.2911059856414795
    5. '(' → logprob: -2.2911059856414795
    6. '```' → logprob: -2.9161059856414795
    7. '[]' → logprob: -3.0411059856414795
    8. ' of' → logprob: -3.2911059856414795
    9. ',' → logprob: -3.5411059856414795
    10. ' des' → logprob: -3.6661059856414795

Token 274: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.9330976009368896
    2. '[int' → logprob: -1.1830976009368896
    3. '(int' → logprob: -2.3080976009368896
    4. 'int' → logprob: -2.9330976009368896
    5. '<int' → logprob: -2.9330976009368896
    6. 'ent' → logprob: -3.0580976009368896
    7. ''int' → logprob: -4.683097839355469
    8. ' ent' → logprob: -5.058097839355469
    9. 'inte' → logprob: -5.183097839355469
    10. '```' → logprob: -5.183097839355469

Token 275: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03145710751414299
    2. 'ents' → logprob: -4.65645694732666
    3. 'ières' → logprob: -5.15645694732666
    4. 'érieurs' → logprob: -5.53145694732666
    5. 'ier' → logprob: -6.53145694732666
    6. 't' → logprob: -7.15645694732666
    7. 'êtres' → logprob: -7.15645694732666
    8. '```' → logprob: -7.28145694732666
    9. 'I' → logprob: -7.40645694732666
    10. 'er' → logprob: -7.53145694732666

Token 276: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42244163155555725
    2. '.' → logprob: -1.1724416017532349
    3. '().' → logprob: -4.047441482543945
    4. '   ' → logprob: -4.297441482543945
    5. ')' → logprob: -7.047441482543945
    6. ':' → logprob: -7.297441482543945
    7. '[]' → logprob: -7.922441482543945
    8. ',' → logprob: -8.172441482543945
    9. ']' → logprob: -8.422441482543945
    10. '[' → logprob: -8.422441482543945

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001737431448418647
    2. '    
' → logprob: -9.375173568725586
    3. '
' → logprob: -10.500173568725586
    4. ' return' → logprob: -10.875173568725586
    5. '```' → logprob: -11.500173568725586
    6. 'return' → logprob: -11.750173568725586
    7. ' 
' → logprob: -12.375173568725586
    8. ')' → logprob: -12.500173568725586
    9. '  
' → logprob: -12.500173568725586
    10. 'def' → logprob: -12.875173568725586

Token 278: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007919613271951675
    2. ' return' → logprob: -5.507919788360596
    3. 'return' → logprob: -5.632919788360596
    4. 'def' → logprob: -8.382919311523438
    5. '    
' → logprob: -12.132919311523438
    6. '```' → logprob: -12.132919311523438
    7. '
' → logprob: -12.757919311523438
    8. '[]' → logprob: -12.757919311523438
    9. '  ' → logprob: -12.882919311523438
    10. ' ' → logprob: -13.007919311523438

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1866491287946701
    2. '[int' → logprob: -2.1866490840911865
    3. '():' → logprob: -3.4366490840911865
    4. '[]' → logprob: -4.186649322509766
    5. '[' → logprob: -5.811649322509766
    6. '[:]' → logprob: -6.561649322509766
    7. '[List' → logprob: -7.186649322509766
    8. '):' → logprob: -7.311649322509766
    9. '=[]' → logprob: -7.311649322509766
    10. ':list' → logprob: -7.686649322509766

Token 280: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09322353452444077
    2. ' list' → logprob: -2.9682235717773438
    3. 'List' → logprob: -4.343223571777344
    4. '[int' → logprob: -4.593223571777344
    5. 'list' → logprob: -5.093223571777344
    6. 'int' → logprob: -5.843223571777344
    7. ' List' → logprob: -6.343223571777344
    8. '[List' → logprob: -6.968223571777344
    9. '[]' → logprob: -7.343223571777344
    10. '       ' → logprob: -7.843223571777344

Token 281: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.007697006221860647
    2. 'List' → logprob: -5.257697105407715
    3. ' list' → logprob: -6.007697105407715
    4. ' List' → logprob: -15.382697105407715
    5. '   ' → logprob: -16.0076961517334
    6. 'int' → logprob: -16.8826961517334
    7. '_list' → logprob: -17.5076961517334
    8. '[list' → logprob: -18.2576961517334
    9. 'lst' → logprob: -19.3826961517334
    10. '[List' → logprob: -19.7576961517334

Token 282: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.003145873546600342
    2. '(int' → logprob: -6.753145694732666
    3. '<int' → logprob: -6.753145694732666
    4. '[' → logprob: -7.753145694732666
    5. '<|end|>' → logprob: -8.503146171569824
    6. ':' → logprob: -9.878146171569824
    7. ']int' → logprob: -10.628146171569824
    8. 'int' → logprob: -10.753146171569824
    9. '=int' → logprob: -11.253146171569824
    10. '[Int' → logprob: -11.378146171569824

Token 283: ' Liste' (ID: 61030)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09409433603286743
    2. ' list' → logprob: -2.4690942764282227
    3. 'list' → logprob: -6.219094276428223
    4. ' [' → logprob: -6.969094276428223
    5. '[' → logprob: -7.594094276428223
    6. '[List' → logprob: -7.844094276428223
    7. 'int' → logprob: -8.219094276428223
    8. '[Int' → logprob: -8.469094276428223
    9. 'List' → logprob: -8.719094276428223
    10. '[list' → logprob: -8.844094276428223

Token 284: ' de' (ID: 334)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.013343513011932373
    2. '[' → logprob: -4.763343334197998
    3. '<int' → logprob: -6.138343334197998
    4. ' of' → logprob: -6.763343334197998
    5. '(int' → logprob: -8.013343811035156
    6. ' des' → logprob: -8.263343811035156
    7. '<|end|>' → logprob: -8.263343811035156
    8. '(' → logprob: -9.013343811035156
    9. ' de' → logprob: -9.638343811035156
    10. '[
' → logprob: -10.013343811035156

Token 285: ' tous' (ID: 10688)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.22490666806697845
    2. 'int' → logprob: -1.7249066829681396
    3. ' int' → logprob: -3.9749066829681396
    4. '<int' → logprob: -6.0999064445495605
    5. 'ints' → logprob: -6.8499064445495605
    6. '(int' → logprob: -7.5999064445495605
    7. 'inte' → logprob: -8.599906921386719
    8. 'ent' → logprob: -8.724906921386719
    9. ' integers' → logprob: -9.099906921386719
    10. ' ints' → logprob: -9.474906921386719

Token 286: ' les' (ID: 1341)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3153245747089386
    2. '(int' → logprob: -1.6903245449066162
    3. '<int' → logprob: -2.940324544906616
    4. ' des' → logprob: -4.065324783325195
    5. 'int' → logprob: -4.815324783325195
    6. ' integers' → logprob: -6.440324783325195
    7. 'ent' → logprob: -6.815324783325195
    8. '[' → logprob: -7.065324783325195
    9. ' int' → logprob: -7.190324783325195
    10. 'des' → logprob: -7.565324783325195

Token 287: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.42278143763542175
    2. ' ent' → logprob: -1.2977814674377441
    3. 'int' → logprob: -2.797781467437744
    4. ' int' → logprob: -5.422781467437744
    5. ' integers' → logprob: -6.172781467437744
    6. 'ints' → logprob: -6.422781467437744
    7. 'inte' → logprob: -6.547781467437744
    8. 'élé' → logprob: -7.297781467437744
    9. ' éléments' → logprob: -8.922780990600586
    10. ' entier' → logprob: -9.547780990600586

Token 288: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3411932587623596
    2. 't' → logprob: -1.3411931991577148
    3. '_t' → logprob: -4.216193199157715
    4. 'ti' → logprob: -5.841193199157715
    5. 'ieurs' → logprob: -6.591193199157715
    6. 'ents' → logprob: -6.716193199157715
    7. '   ' → logprob: -7.091193199157715
    8. 'te' → logprob: -7.591193199157715
    9. 'ts' → logprob: -7.716193199157715
    10. 'teurs' → logprob: -7.841193199157715

Token 289: ' lus' (ID: 54762)
  Prédit: ' extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extr' → logprob: -0.14808757603168488
    2. ' présents' → logprob: -2.148087501525879
    3. 'extr' → logprob: -5.398087501525879
    4. ' de' → logprob: -6.023087501525879
    5. ' extrait' → logprob: -6.023087501525879
    6. ' obten' → logprob: -6.148087501525879
    7. '```' → logprob: -6.523087501525879
    8. ' extra' → logprob: -6.898087501525879
    9. ' contenus' → logprob: -7.023087501525879
    10. 's' → logprob: -7.148087501525879

Token 290: ' sur' (ID: 1512)
  Prédit: ' depuis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depuis' → logprob: -1.0210515260696411
    2. ' de' → logprob: -1.6460515260696411
    3. 'dep' → logprob: -1.8960515260696411
    4. ' sur' → logprob: -2.5210514068603516
    5. 'from' → logprob: -3.2710514068603516
    6. 'sur' → logprob: -3.2710514068603516
    7. 'de' → logprob: -3.5210514068603516
    8. ',' → logprob: -3.6460514068603516
    9. '()' → logprob: -3.7710514068603516
    10. '.' → logprob: -4.021051406860352

Token 291: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5180903077125549
    2. 'la' → logprob: -1.1430902481079102
    3. 'l' → logprob: -2.64309024810791
    4. '()' → logprob: -4.51809024810791
    5. '   ' → logprob: -6.76809024810791
    6. ' ' → logprob: -6.89309024810791
    7. 'une' → logprob: -8.14309024810791
    8. '[]' → logprob: -9.01809024810791
    9. 'sys' → logprob: -9.14309024810791
    10. '```' → logprob: -9.26809024810791

Token 292: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.09917710721492767
    2. 'l' → logprob: -2.974177122116089
    3. ' ligne' → logprob: -3.599177122116089
    4. 'e' → logprob: -5.97417688369751
    5. '```' → logprob: -6.34917688369751
    6. '_l' → logprob: -6.47417688369751
    7. ' line' → logprob: -7.09917688369751
    8. '_' → logprob: -7.09917688369751
    9. ' même' → logprob: -7.22417688369751
    10. 'import' → logprob: -7.34917688369751

Token 293: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08764374256134033
    2. '()' → logprob: -2.962643623352051
    3. ']' → logprob: -4.337643623352051
    4. '   ' → logprob: -4.837643623352051
    5. '().' → logprob: -5.712643623352051
    6. ',' → logprob: -5.962643623352051
    7. ')' → logprob: -6.587643623352051
    8. '[]' → logprob: -6.587643623352051
    9. 's' → logprob: -7.712643623352051
    10. '```' → logprob: -7.837643623352051

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015923460014164448
    2. '[]' → logprob: -7.87659215927124
    3. '    
' → logprob: -8.501592636108398
    4. '()' → logprob: -8.876592636108398
    5. '
' → logprob: -9.001592636108398
    6. 'return' → logprob: -9.001592636108398
    7. ' return' → logprob: -9.001592636108398
    8. ')' → logprob: -9.501592636108398
    9. '```' → logprob: -9.501592636108398
    10. ' 
' → logprob: -10.001592636108398

Token 295: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.541112427134067e-05
    2. ' return' → logprob: -10.375075340270996
    3. 'return' → logprob: -10.875075340270996
    4. '```' → logprob: -11.500075340270996
    5. 'def' → logprob: -12.625075340270996
    6. ')' → logprob: -13.000075340270996
    7. '
' → logprob: -13.125075340270996
    8. '    
' → logprob: -13.250075340270996
    9. '  ' → logprob: -13.250075340270996
    10. '    ' → logprob: -14.000075340270996

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003229528898373246
    2. 'return' → logprob: -5.75322961807251
    3. ' return' → logprob: -9.878229141235352
    4. 'def' → logprob: -15.253229141235352
    5. '	return' → logprob: -15.628229141235352
    6. '```' → logprob: -16.12822914123535
    7. '   ' → logprob: -17.87822914123535
    8. '       ' → logprob: -18.75322914123535
    9. '  ' → logprob: -19.50322914123535
    10. '    
' → logprob: -20.00322914123535

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.639096970204264e-05
    2. '   ' → logprob: -9.500096321105957
    3. ' return' → logprob: -10.750096321105957
    4. '	return' → logprob: -19.875097274780273
    5. 'def' → logprob: -20.125097274780273
    6. '```' → logprob: -20.625097274780273
    7. 'list' → logprob: -20.875097274780273
    8. '
' → logprob: -20.875097274780273
    9. ' ' → logprob: -21.625097274780273
    10. '  ' → logprob: -21.875097274780273

Token 298: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005577972042374313
    2. ' list' → logprob: -7.500557899475098
    3. '[list' → logprob: -12.250557899475098
    4. '[' → logprob: -18.87555694580078
    5. '(list' → logprob: -20.00055694580078
    6. '	list' → logprob: -20.00055694580078
    7. '=list' → logprob: -20.62555694580078
    8. 'List' → logprob: -20.62555694580078
    9. '.list' → logprob: -21.12555694580078
    10. '[List' → logprob: -22.00055694580078

Token 299: '(map' (ID: 16946)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.3868783116340637
    2. '(map' → logprob: -1.136878252029419
    3. '(' → logprob: -12.51187801361084
    4. '(m' → logprob: -13.13687801361084
    5. '(I' → logprob: -14.63687801361084
    6. 'M' → logprob: -14.63687801361084
    7. '(int' → logprob: -15.26187801361084
    8. 'map' → logprob: -15.26187801361084
    9. '(Map' → logprob: -16.261878967285156
    10. '(L' → logprob: -17.011878967285156

Token 300: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018422940047457814
    2. '(' → logprob: -8.750184059143066
    3. 'int' → logprob: -11.000184059143066
    4. '<int' → logprob: -12.625184059143066
    5. '=int' → logprob: -13.500184059143066
    6. '(
' → logprob: -13.750184059143066
    7. '[int' → logprob: -13.875184059143066
    8. ',int' → logprob: -14.000184059143066
    9. ']int' → logprob: -14.125184059143066
    10. ' int' → logprob: -14.375184059143066

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007547161658294499
    2. '(sys' → logprob: -7.2507548332214355
    3. ' ,' → logprob: -10.625754356384277
    4. 'sys' → logprob: -11.375754356384277
    5. ' sys' → logprob: -12.375754356384277
    6. '(' → logprob: -12.875754356384277
    7. '=sys' → logprob: -13.625754356384277
    8. ',S' → logprob: -14.750754356384277
    9. '(),' → logprob: -15.625754356384277
    10. ',s' → logprob: -16.000755310058594

Token 302: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31329745054244995
    2. ' sys' → logprob: -1.3132975101470947
    3. '(sys' → logprob: -10.688297271728516
    4. '=sys' → logprob: -12.313297271728516
    5. '   ' → logprob: -12.688297271728516
    6. '	sys' → logprob: -12.813297271728516
    7. 'S' → logprob: -14.188297271728516
    8. '.sys' → logprob: -14.813297271728516
    9. 'Sys' → logprob: -14.938297271728516
    10. 's' → logprob: -15.313297271728516

Token 303: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.696077227592468e-05
    2. '=sys' → logprob: -10.125077247619629
    3. '(stdin' → logprob: -10.875077247619629
    4. '(sys' → logprob: -12.625077247619629
    5. '.stdout' → logprob: -12.625077247619629
    6. 'stdin' → logprob: -12.625077247619629
    7. '.sys' → logprob: -12.625077247619629
    8. '.argv' → logprob: -13.250077247619629
    9. '.readline' → logprob: -13.500077247619629
    10. '.' → logprob: -13.875077247619629

Token 304: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04868149757385254
    2. '().' → logprob: -3.0486814975738525
    3. '.stdin' → logprob: -9.548681259155273
    4. '()' → logprob: -11.548681259155273
    5. '.' → logprob: -11.673681259155273
    6. '.readlines' → logprob: -13.423681259155273
    7. '.stdout' → logprob: -14.048681259155273
    8. ').' → logprob: -14.798681259155273
    9. '.rstrip' → logprob: -15.048681259155273
    10. '(stdin' → logprob: -15.048681259155273

Token 305: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.319370302458992e-06
    2. '()' → logprob: -12.250005722045898
    3. ' ().' → logprob: -15.000005722045898
    4. '.rstrip' → logprob: -16.6250057220459
    5. '.' → logprob: -17.8750057220459
    6. '.readline' → logprob: -18.5000057220459
    7. '()
' → logprob: -19.0000057220459
    8. 'rstrip' → logprob: -19.1250057220459
    9. '().'' → logprob: -19.2500057220459
    10. ' .' → logprob: -19.8750057220459

Token 306: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -5.080963092041202e-06
    2. '.rstrip' → logprob: -12.375004768371582
    3. 'strip' → logprob: -14.375004768371582
    4. 'split' → logprob: -15.625004768371582
    5. 'rst' → logprob: -18.2500057220459
    6. ')' → logprob: -19.3750057220459
    7. 'rcode' → logprob: -19.6250057220459
    8. 'rs' → logprob: -19.6250057220459
    9. ' ' → logprob: -20.2500057220459
    10. '```' → logprob: -20.5000057220459

Token 307: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -14.875003814697266
    4. '.' → logprob: -17.750003814697266
    5. '.split' → logprob: -18.125003814697266
    6. '(' → logprob: -19.000003814697266
    7. ').' → logprob: -19.375003814697266
    8. '()
' → logprob: -19.750003814697266
    9. ' .' → logprob: -19.875003814697266
    10. '()).' → logprob: -20.875003814697266

Token 308: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3306015716807451e-05
    2. ' split' → logprob: -11.25001335144043
    3. 'strip' → logprob: -15.87501335144043
    4. 'spl' → logprob: -16.25001335144043
    5. '.split' → logprob: -17.50001335144043
    6. '(split' → logprob: -18.37501335144043
    7. 'rstrip' → logprob: -18.62501335144043
    8. ')' → logprob: -19.75001335144043
    9. ' ' → logprob: -22.00001335144043
    10. 's' → logprob: -23.12501335144043

Token 309: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005434623919427395
    2. '()' → logprob: -5.755434513092041
    3. '))' → logprob: -6.130434513092041
    4. '())' → logprob: -9.6304349899292
    5. '()))
' → logprob: -11.6304349899292
    6. '(' → logprob: -13.2554349899292
    7. '()));' → logprob: -13.6304349899292
    8. '())))' → logprob: -15.2554349899292
    9. '())).' → logprob: -15.3804349899292
    10. '()))

' → logprob: -15.3804349899292

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004239500965923071
    2. 'd' → logprob: -5.629239559173584
    3. 'n' → logprob: -8.004239082336426
    4. 'class' → logprob: -8.879239082336426
    5. '\' → logprob: -9.629239082336426
    6. '#' → logprob: -10.379239082336426
    7. 'D' → logprob: -10.629239082336426
    8. '
' → logprob: -11.504239082336426
    9. 'N' → logprob: -12.004239082336426
    10. 'A' → logprob: -12.004239082336426

Token 311: ' LS' (ID: 60790)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.4813231825828552
    2. 'LO' → logprob: -1.8563232421875
    3. 'L' → logprob: -1.9813232421875
    4. 'S' → logprob: -3.9813232421875
    5. 'main' → logprob: -4.2313232421875
    6. ' L' → logprob: -4.9813232421875
    7. 'LI' → logprob: -4.9813232421875
    8. 'LD' → logprob: -5.3563232421875
    9. ' LS' → logprob: -5.3563232421875
    10. 'I' → logprob: -5.4813232421875

Token 312: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007144886534661055
    2. '():
' → logprob: -5.007144927978516
    3. '()' → logprob: -7.757144927978516
    4. ' ():' → logprob: -14.382144927978516
    5. '():

' → logprob: -14.757144927978516
    6. '():
' → logprob: -14.882144927978516
    7. 'def' → logprob: -15.132144927978516
    8. '()):
' → logprob: -16.132144927978516
    9. '()>' → logprob: -16.632144927978516
    10. '):' → logprob: -16.757144927978516

Token 313: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003217574267182499
    2. '():
' → logprob: -8.250321388244629
    3. '()' → logprob: -9.750321388244629
    4. ' ():' → logprob: -13.125321388244629
    5. '():
' → logprob: -16.000322341918945
    6. 'def' → logprob: -16.375322341918945
    7. '):' → logprob: -17.625322341918945
    8. '   ' → logprob: -17.875322341918945
    9. '(' → logprob: -18.125322341918945
    10. ':' → logprob: -18.375322341918945

Token 314: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025039594620466232
    2. '()' → logprob: -6.752503871917725
    3. 'return' → logprob: -7.252503871917725
    4. '():
' → logprob: -7.502503871917725
    5. '):' → logprob: -10.627504348754883
    6. 'def' → logprob: -10.627504348754883
    7. ':' → logprob: -11.502504348754883
    8. '[]' → logprob: -12.502504348754883
    9. ' return' → logprob: -13.002504348754883
    10. '():
' → logprob: -13.377504348754883

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005233644507825375
    2. 'return' → logprob: -5.7552337646484375
    3. '"""
' → logprob: -7.2552337646484375
    4. ' return' → logprob: -7.8802337646484375
    5. ')' → logprob: -8.130233764648438
    6. '"""' → logprob: -8.505233764648438
    7. 'def' → logprob: -8.880233764648438
    8. '"' → logprob: -9.505233764648438
    9. '```' → logprob: -10.130233764648438
    10. ')
' → logprob: -10.380233764648438

Token 316: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10143768042325974
    2. '   ' → logprob: -2.351437568664551
    3. ' return' → logprob: -7.476437568664551
    4. '"""
' → logprob: -7.601437568664551
    5. '"""' → logprob: -9.22643756866455
    6. 'def' → logprob: -9.97643756866455
    7. ' ' → logprob: -11.97643756866455
    8. '	return' → logprob: -12.47643756866455
    9. '""' → logprob: -12.72643756866455
    10. '  ' → logprob: -13.85143756866455

Token 317: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12339778244495392
    2. ' une' → logprob: -2.7483978271484375
    3. 'une' → logprob: -3.2483978271484375
    4. '[]' → logprob: -5.4983978271484375
    5. ' sys' → logprob: -6.2483978271484375
    6. 'sys' → logprob: -6.2483978271484375
    7. '(sys' → logprob: -6.4983978271484375
    8. 'a' → logprob: -7.2483978271484375
    9. ' ()' → logprob: -7.4983978271484375
    10. ' un' → logprob: -7.8733978271484375

Token 318: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.32234060764312744
    2. 'igne' → logprob: -2.572340488433838
    3. ' ligne' → logprob: -2.697340488433838
    4. 'ine' → logprob: -2.697340488433838
    5. 'sys' → logprob: -3.072340488433838
    6. 'line' → logprob: -4.697340488433838
    7. 'a' → logprob: -6.572340488433838
    8. 'n' → logprob: -6.697340488433838
    9. 'e' → logprob: -6.697340488433838
    10. ' sys' → logprob: -6.822340488433838

Token 319: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014041983522474766
    2. ' depuis' → logprob: -5.014041900634766
    3. 'from' → logprob: -6.139041900634766
    4. '()
' → logprob: -6.514041900634766
    5. '   ' → logprob: -6.764041900634766
    6. ' ()' → logprob: -6.764041900634766
    7. '().' → logprob: -8.139041900634766
    8. 'dep' → logprob: -8.389041900634766
    9. '()[' → logprob: -8.514041900634766
    10. 'def' → logprob: -8.639041900634766

Token 320: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0023430653382092714
    2. ' sys' → logprob: -6.12734317779541
    3. 'l' → logprob: -9.37734317779541
    4. '(sys' → logprob: -9.75234317779541
    5. 's' → logprob: -12.12734317779541
    6. 'la' → logprob: -12.37734317779541
    7. '=sys' → logprob: -12.87734317779541
    8. '	sys' → logprob: -13.87734317779541
    9. ' ' → logprob: -15.00234317779541
    10. ' l' → logprob: -15.25234317779541

Token 321: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.019345276057720184
    2. 'sys' → logprob: -5.019345283508301
    3. '=sys' → logprob: -5.394345283508301
    4. 'entrée' → logprob: -5.644345283508301
    5. ''import' → logprob: -6.144345283508301
    6. 'a' → logprob: -7.519345283508301
    7. '_sys' → logprob: -7.519345283508301
    8. 'import' → logprob: -7.894345283508301
    9. '(sys' → logprob: -9.1443452835083
    10. ' sys' → logprob: -9.1443452835083

Token 322: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.12526795268058777
    2. ' standard' → logprob: -2.25026798248291
    3. '()' → logprob: -5.12526798248291
    4. 'def' → logprob: -6.62526798248291
    5. '   ' → logprob: -6.75026798248291
    6. '_standard' → logprob: -6.75026798248291
    7. '().' → logprob: -7.00026798248291
    8. '()
' → logprob: -8.00026798248291
    9. 'dep' → logprob: -8.12526798248291
    10. '.standard' → logprob: -8.50026798248291

Token 323: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2584873139858246
    2. '(),' → logprob: -2.6334872245788574
    3. ',' → logprob: -2.7584872245788574
    4. '():' → logprob: -3.2584872245788574
    5. '().' → logprob: -3.5084872245788574
    6. '   ' → logprob: -3.8834872245788574
    7. 'def' → logprob: -6.258487224578857
    8. '():
' → logprob: -7.133487224578857
    9. '()
' → logprob: -8.258487701416016
    10. ')' → logprob: -9.133487701416016

Token 324: ' enl' (ID: 116494)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8865083456039429
    2. 'def' → logprob: -1.0115083456039429
    3. 'return' → logprob: -1.5115083456039429
    4. 'en' → logprob: -7.136508464813232
    5. 'rstrip' → logprob: -7.261508464813232
    6. '"""' → logprob: -7.886508464813232
    7. '
' → logprob: -7.886508464813232
    8. 'ren' → logprob: -8.011507987976074
    9. 'returns' → logprob: -8.386507987976074
    10. '"""
' → logprob: -8.636507987976074

Token 325: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0023104806896299124
    2. 'eve' → logprob: -6.127310276031494
    3. 'e' → logprob: -9.502310752868652
    4. 'èves' → logprob: -10.377310752868652
    5. 'è' → logprob: -12.377310752868652
    6. 'é' → logprob: -12.502310752868652
    7. 'èvre' → logprob: -12.502310752868652
    8. ' eve' → logprob: -13.127310752868652
    9. 'èv' → logprob: -14.252310752868652
    10. '`' → logprob: -14.377310752868652

Token 326: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12088586390018463
    2. '()' → logprob: -2.4958858489990234
    3. 'les' → logprob: -3.8708858489990234
    4. '()
' → logprob: -5.245885848999023
    5. '```' → logprob: -6.120885848999023
    6. '   ' → logprob: -6.995885848999023
    7. '('' → logprob: -7.745885848999023
    8. 's' → logprob: -7.995885848999023
    9. '[]' → logprob: -8.120885848999023
    10. '    ' → logprob: -8.245885848999023

Token 327: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.010939698666334152
    2. ' espaces' → logprob: -4.635939598083496
    3. 'es' → logprob: -7.135939598083496
    4. 'spaces' → logprob: -8.010939598083496
    5. 's' → logprob: -10.135939598083496
    6. '\n' → logprob: -12.260939598083496
    7. ''esp' → logprob: -12.385939598083496
    8. ''\' → logprob: -13.260939598083496
    9. '\' → logprob: -13.635939598083496
    10. '\s' → logprob: -14.635939598083496

Token 328: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5762282013893127
    2. 'de' → logprob: -0.8262282013893127
    3. 'def' → logprob: -8.701228141784668
    4. '_de' → logprob: -9.576228141784668
    5. 'final' → logprob: -10.701228141784668
    6. 'fin' → logprob: -11.326228141784668
    7. 'f' → logprob: -12.076228141784668
    8. '   ' → logprob: -13.076228141784668
    9. '_' → logprob: -13.326228141784668
    10. 'd' → logprob: -13.951228141784668

Token 329: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0006121210753917694
    2. ' fin' → logprob: -7.500612258911133
    3. 'f' → logprob: -10.625612258911133
    4. 'fi' → logprob: -11.125612258911133
    5. 'final' → logprob: -12.125612258911133
    6. 'sys' → logprob: -12.625612258911133
    7. ''\' → logprob: -12.625612258911133
    8. 'fim' → logprob: -12.875612258911133
    9. 'fn' → logprob: -13.750612258911133
    10. 'end' → logprob: -14.125612258911133

Token 330: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03446478024125099
    2. '().' → logprob: -3.7844648361206055
    3. '   ' → logprob: -5.5344648361206055
    4. ',' → logprob: -5.6594648361206055
    5. '()
' → logprob: -6.5344648361206055
    6. '(),' → logprob: -7.1594648361206055
    7. ')' → logprob: -7.6594648361206055
    8. 'def' → logprob: -8.409464836120605
    9. ' et' → logprob: -8.784464836120605
    10. '.' → logprob: -9.034464836120605

Token 331: ' puis' (ID: 18766)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.041936200112104416
    2. 'def' → logprob: -3.541936159133911
    3. ' return' → logprob: -5.16693639755249
    4. ' retourne' → logprob: -6.04193639755249
    5. 'split' → logprob: -6.66693639755249
    6. 'div' → logprob: -6.66693639755249
    7. 'et' → logprob: -7.29193639755249
    8. '   ' → logprob: -8.166935920715332
    9. 'ret' → logprob: -8.291935920715332
    10. 'p' → logprob: -9.541935920715332

Token 332: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.818273663520813
    2. 'ret' → logprob: -0.943273663520813
    3. 'ren' → logprob: -2.6932735443115234
    4. ' retourne' → logprob: -3.0682735443115234
    5. 'return' → logprob: -3.4432735443115234
    6. ' div' → logprob: -4.568273544311523
    7. ' ren' → logprob: -5.443273544311523
    8. 'la' → logprob: -5.693273544311523
    9. 'split' → logprob: -5.943273544311523
    10. ' return' → logprob: -7.193273544311523

Token 333: 'ise' (ID: 1096)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.251956969499588
    2. 'ise' → logprob: -1.5019569396972656
    3. 'ides' → logprob: -10.626956939697266
    4. 'ize' → logprob: -13.501956939697266
    5. 'id' → logprob: -14.126956939697266
    6. '   ' → logprob: -14.626956939697266
    7. 'isez' → logprob: -16.001956939697266
    8. 'иде' → logprob: -16.001956939697266
    9. 'isse' → logprob: -16.126956939697266
    10. 'yse' → logprob: -16.126956939697266

Token 334: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4944036602973938
    2. 'la' → logprob: -1.119403600692749
    3. '()' → logprob: -3.369403600692749
    4. '   ' → logprob: -3.869403600692749
    5. '(sys' → logprob: -5.494403839111328
    6. 'sys' → logprob: -7.244403839111328
    7. '```' → logprob: -7.244403839111328
    8. ' ' → logprob: -7.494403839111328
    9. '(' → logprob: -7.619403839111328
    10. 'le' → logprob: -8.119403839111328

Token 335: ' chaîne' (ID: 89288)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5934440493583679
    2. ' ligne' → logprob: -1.2184441089630127
    3. 'sys' → logprob: -2.3434441089630127
    4. ' sys' → logprob: -2.9684441089630127
    5. 'line' → logprob: -6.093443870544434
    6. 'chaine' → logprob: -6.593443870544434
    7. ' line' → logprob: -7.968443870544434
    8. 'l' → logprob: -8.468443870544434
    9. '(sys' → logprob: -8.468443870544434
    10. '=sys' → logprob: -10.343443870544434

Token 336: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08870703727006912
    2. 'en' → logprob: -3.2137069702148438
    3. '   ' → logprob: -3.8387069702148438
    4. '()' → logprob: -4.838706970214844
    5. 'de' → logprob: -5.213706970214844
    6. '[]' → logprob: -5.838706970214844
    7. ' de' → logprob: -5.963706970214844
    8. '```' → logprob: -6.838706970214844
    9. '('' → logprob: -7.338706970214844
    10. ' par' → logprob: -8.213706970214844

Token 337: ' une' (ID: 2463)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.8648585081100464
    2. ' liste' → logprob: -2.114858627319336
    3. 'liste' → logprob: -2.364858627319336
    4. 'list' → logprob: -2.364858627319336
    5. 'tokens' → logprob: -2.739858627319336
    6. ' list' → logprob: -2.864858627319336
    7. ' tokens' → logprob: -3.489858627319336
    8. ' listes' → logprob: -3.864858627319336
    9. 'esp' → logprob: -3.989858627319336
    10. ' mots' → logprob: -4.489858627319336

Token 338: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9381144642829895
    2. ' list' → logprob: -1.3131144046783447
    3. ' liste' → logprob: -1.5631144046783447
    4. 'list' → logprob: -2.0631144046783447
    5. '[]' → logprob: -6.563114643096924
    6. 's' → logprob: -7.688114643096924
    7. 'es' → logprob: -8.438114166259766
    8. 'Liste' → logprob: -8.438114166259766
    9. 'str' → logprob: -8.938114166259766
    10. ' listes' → logprob: -9.063114166259766

Token 339: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012845826335251331
    2. '(' → logprob: -5.262845993041992
    3. '[' → logprob: -6.137845993041992
    4. 'de' → logprob: -6.887845993041992
    5. ' des' → logprob: -7.137845993041992
    6. '[str' → logprob: -7.637845993041992
    7. '   ' → logprob: -7.887845993041992
    8. '('' → logprob: -8.137845993041992
    9. 'des' → logprob: -8.137845993041992
    10. 'def' → logprob: -8.262845993041992

Token 340: ' sous' (ID: 14487)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1319187432527542
    2. 'strings' → logprob: -2.6319186687469482
    3. 'string' → logprob: -3.8819186687469482
    4. 's' → logprob: -3.8819186687469482
    5. ' chaînes' → logprob: -5.256918907165527
    6. 'chaine' → logprob: -6.131918907165527
    7. ' strings' → logprob: -6.506918907165527
    8. 'm' → logprob: -8.256918907165527
    9. 'chain' → logprob: -8.381918907165527
    10. ' str' → logprob: -8.381918907165527

Token 341: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.40960443019866943
    2. 'cha' → logprob: -1.9096044301986694
    3. 'chain' → logprob: -2.284604549407959
    4. 'strings' → logprob: -3.534604549407959
    5. '-cha' → logprob: -3.909604549407959
    6. 'str' → logprob: -5.034604549407959
    7. 'chaine' → logprob: -5.034604549407959
    8. '_chain' → logprob: -5.409604549407959
    9. '_str' → logprob: -5.534604549407959
    10. 'string' → logprob: -5.534604549407959

Token 342: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.018146194517612457
    2. 'r' → logprob: -5.01814603805542
    3. 'nes' → logprob: -5.01814603805542
    4. 'î' → logprob: -6.01814603805542
    5. 'ines' → logprob: -6.14314603805542
    6. 'ï' → logprob: -10.268146514892578
    7. 'îne' → logprob: -10.893146514892578
    8. 'mes' → logprob: -11.393146514892578
    9. 'nés' → logprob: -11.518146514892578
    10. 'í' → logprob: -11.518146514892578

Token 343: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018925895914435387
    2. '()
' → logprob: -5.018925666809082
    3. '().' → logprob: -5.393925666809082
    4. '('' → logprob: -6.393925666809082
    5. 'par' → logprob: -6.768925666809082
    6. '(' → logprob: -6.768925666809082
    7. '.' → logprob: -6.768925666809082
    8. '(par' → logprob: -6.893925666809082
    9. '```' → logprob: -8.143925666809082
    10. ' par' → logprob: -8.393925666809082

Token 344: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12584885954856873
    2. '   ' → logprob: -3.1258487701416016
    3. '.' → logprob: -3.3758487701416016
    4. '().' → logprob: -3.3758487701416016
    5. '()
' → logprob: -5.875848770141602
    6. '(par' → logprob: -7.250848770141602
    7. ',' → logprob: -7.500848770141602
    8. ')' → logprob: -8.750848770141602
    9. '(),' → logprob: -8.750848770141602
    10. '('' → logprob: -8.750848770141602

Token 345: ' sépar' (ID: 97160)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0922610759735107
    2. '   ' → logprob: -1.3422610759735107
    3. ' par' → logprob: -1.8422610759735107
    4. '()' → logprob: -2.8422610759735107
    5. '().' → logprob: -2.8422610759735107
    6. 'par' → logprob: -3.5922610759735107
    7. '(par' → logprob: -3.5922610759735107
    8. '()
' → logprob: -4.09226131439209
    9. ',' → logprob: -5.09226131439209
    10. '.
' → logprob: -5.21726131439209

Token 346: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.010235740803182125
    2. 'par' → logprob: -4.885235786437988
    3. 'ée' → logprob: -6.760235786437988
    4. 'és' → logprob: -7.385235786437988
    5. ' par' → logprob: -8.010235786437988
    6. 'es' → logprob: -8.135235786437988
    7. 'é' → logprob: -8.510235786437988
    8. '```' → logprob: -11.760235786437988
    9. 'Par' → logprob: -12.385235786437988
    10. 'e' → logprob: -13.510235786437988

Token 347: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.16033653914928436
    2. ' par' → logprob: -1.9103364944458008
    3. '(par' → logprob: -9.5353364944458
    4. '```' → logprob: -11.5353364944458
    5. '_par' → logprob: -12.0353364944458
    6. ' ' → logprob: -12.2853364944458
    7. 'es' → logprob: -12.5353364944458
    8. '	par' → logprob: -12.6603364944458
    9. '('' → logprob: -13.1603364944458
    10. '[' → logprob: -13.1603364944458

Token 348: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7568696141242981
    2. 'des' → logprob: -1.1318695545196533
    3. ' espaces' → logprob: -2.0068695545196533
    4. 'esp' → logprob: -3.0068695545196533
    5. ''esp' → logprob: -4.256869792938232
    6. ''' → logprob: -5.881869792938232
    7. 'spaces' → logprob: -6.256869792938232
    8. 'un' → logprob: -6.756869792938232
    9. ''espace' → logprob: -7.006869792938232
    10. 'es' → logprob: -7.006869792938232

Token 349: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.20856082439422607
    2. ' espaces' → logprob: -1.708560824394226
    3. ''esp' → logprob: -5.083560943603516
    4. 'spaces' → logprob: -7.208560943603516
    5. 'es' → logprob: -9.333560943603516
    6. '’esp' → logprob: -10.333560943603516
    7. ''espace' → logprob: -10.833560943603516
    8. ' spaces' → logprob: -11.583560943603516
    9. ' esp' → logprob: -11.583560943603516
    10. ''' → logprob: -12.083560943603516

Token 350: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6144970655441284
    2. '.' → logprob: -0.8644970655441284
    3. '().' → logprob: -3.364497184753418
    4. ')' → logprob: -6.864497184753418
    5. '(' → logprob: -6.989497184753418
    6. '   ' → logprob: -8.489497184753418
    7. '()
' → logprob: -8.614497184753418
    8. '[' → logprob: -8.614497184753418
    9. '('.')' → logprob: -8.614497184753418
    10. ',' → logprob: -8.864497184753418

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.849109119386412e-06
    2. 'return' → logprob: -11.750009536743164
    3. ' return' → logprob: -14.375009536743164
    4. '
' → logprob: -14.750009536743164
    5. '```' → logprob: -14.750009536743164
    6. '    
' → logprob: -15.000009536743164
    7. '  ' → logprob: -17.000009536743164
    8. '       ' → logprob: -17.375009536743164
    9. ' ' → logprob: -17.500009536743164
    10. '    ' → logprob: -17.500009536743164

Token 352: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003234394360333681
    2. 'return' → logprob: -5.753234386444092
    3. ' return' → logprob: -9.87823486328125
    4. '```' → logprob: -12.75323486328125
    5. 'def' → logprob: -13.37823486328125
    6. '	return' → logprob: -15.50323486328125
    7. '
' → logprob: -15.62823486328125
    8. '       ' → logprob: -15.87823486328125
    9. ' ' → logprob: -16.12823486328125
    10. '  ' → logprob: -16.50323486328125

Token 353: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4171190857887268
    2. ':' → logprob: -1.167119026184082
    3. '[' → logprob: -4.542119026184082
    4. ':list' → logprob: -5.917119026184082
    5. '[]' → logprob: -6.042119026184082
    6. '[List' → logprob: -6.042119026184082
    7. '[:]' → logprob: -6.417119026184082
    8. '=' → logprob: -6.417119026184082
    9. ' :' → logprob: -6.917119026184082
    10. '<|end|>' → logprob: -6.917119026184082

Token 354: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20525895059108734
    2. ' list' → logprob: -1.7052589654922485
    3. 'list' → logprob: -5.580258846282959
    4. 'List' → logprob: -10.455259323120117
    5. ' List' → logprob: -11.455259323120117
    6. '    ' → logprob: -11.705259323120117
    7. '       ' → logprob: -12.455259323120117
    8. '  ' → logprob: -13.205259323120117
    9. ' return' → logprob: -13.205259323120117
    10. '[list' → logprob: -13.455259323120117

Token 355: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -1.3663626305060461e-05
    2. ' list' → logprob: -11.25001335144043
    3. '[list' → logprob: -14.50001335144043
    4. 'List' → logprob: -15.87501335144043
    5. 'str' → logprob: -19.87501335144043
    6. '   ' → logprob: -19.87501335144043
    7. '```' → logprob: -21.75001335144043
    8. '	list' → logprob: -21.87501335144043
    9. 'lst' → logprob: -21.87501335144043
    10. '_list' → logprob: -22.12501335144043

Token 356: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015918932855129242
    2. '[str' → logprob: -4.390918731689453
    3. '<|end|>' → logprob: -6.015918731689453
    4. ' :' → logprob: -8.015918731689453
    5. '[' → logprob: -8.890918731689453
    6. '):' → logprob: -9.140918731689453
    7. ':str' → logprob: -9.765918731689453
    8. '(str' → logprob: -9.765918731689453
    9. '[int' → logprob: -10.140918731689453
    10. '   ' → logprob: -10.140918731689453

Token 357: ' Liste' (ID: 61030)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.453850656747818
    2. ' sys' → logprob: -1.0788506269454956
    3. 'S' → logprob: -4.328850746154785
    4. 'list' → logprob: -5.703850746154785
    5. 'str' → logprob: -5.828850746154785
    6. ' list' → logprob: -5.953850746154785
    7. ' S' → logprob: -6.953850746154785
    8. ' str' → logprob: -7.203850746154785
    9. '[str' → logprob: -7.703850746154785
    10. 'string' → logprob: -8.328850746154785

Token 358: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.062151193618774414
    2. '<|end|>' → logprob: -3.1871511936187744
    3. ' des' → logprob: -4.687150955200195
    4. 'des' → logprob: -5.812150955200195
    5. ' de' → logprob: -5.812150955200195
    6. ' of' → logprob: -6.687150955200195
    7. '(str' → logprob: -6.812150955200195
    8. 'de' → logprob: -7.812150955200195
    9. '[' → logprob: -7.937150955200195
    10. '<string' → logprob: -8.562150955200195

Token 359: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.021285776048898697
    2. ' str' → logprob: -3.8962857723236084
    3. 'strings' → logprob: -7.7712860107421875
    4. '[str' → logprob: -8.396286010742188
    5. ' strings' → logprob: -9.646286010742188
    6. ' chaînes' → logprob: -10.771286010742188
    7. 's' → logprob: -13.021286010742188
    8. ' la' → logprob: -13.021286010742188
    9. '(str' → logprob: -13.146286010742188
    10. 'chaine' → logprob: -13.896286010742188

Token 360: ' représentant' (ID: 136122)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' les' (ID: 1341)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7157071828842163
    2. 'S' → logprob: -1.0907071828842163
    3. ' sys' → logprob: -1.9657071828842163
    4. ' S' → logprob: -3.965707302093506
    5. ' la' → logprob: -4.965707302093506
    6. ' les' → logprob: -5.590707302093506
    7. 'les' → logprob: -6.715707302093506
    8. 'la' → logprob: -6.715707302093506
    9. 's' → logprob: -6.965707302093506
    10. '(sys' → logprob: -7.465707302093506

Token 362: ' éléments' (ID: 57375)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.7377288937568665
    2. ' tokens' → logprob: -1.3627288341522217
    3. ' sys' → logprob: -2.2377288341522217
    4. 'sys' → logprob: -2.7377288341522217
    5. 'tokens' → logprob: -3.2377288341522217
    6. ' segments' → logprob: -4.362729072570801
    7. ' words' → logprob: -4.612729072570801
    8. 'm' → logprob: -5.237729072570801
    9. 's' → logprob: -5.487729072570801
    10. 'S' → logprob: -5.612729072570801

Token 363: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08550804108381271
    2. 'de' → logprob: -2.835508108139038
    3. ' sépar' → logprob: -4.460507869720459
    4. '```' → logprob: -5.835507869720459
    5. ' d' → logprob: -6.460507869720459
    6. ' présents' → logprob: -6.710507869720459
    7. 'd' → logprob: -6.835507869720459
    8. 'conten' → logprob: -7.210507869720459
    9. 's' → logprob: -7.460507869720459
    10. 'sé' → logprob: -7.585507869720459

Token 364: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8054628372192383
    2. ' la' → logprob: -0.9304628372192383
    3. 'l' → logprob: -1.9304628372192383
    4. ' l' → logprob: -4.930462837219238
    5. 'S' → logprob: -5.555462837219238
    6. 's' → logprob: -6.680462837219238
    7. 'sys' → logprob: -7.805462837219238
    8. 'input' → logprob: -8.555462837219238
    9. 'chaine' → logprob: -8.680462837219238
    10. ' input' → logprob: -8.930462837219238

Token 365: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.39910823106765747
    2. 'ligne' → logprob: -1.1491081714630127
    3. ' chaîne' → logprob: -5.524108409881592
    4. 'entrée' → logprob: -5.524108409881592
    5. 'chaine' → logprob: -5.649108409881592
    6. ' entrée' → logprob: -9.024107933044434
    7. 's' → logprob: -9.149107933044434
    8. ' chaine' → logprob: -9.524107933044434
    9. 'l' → logprob: -9.774107933044434
    10. 'input' → logprob: -10.024107933044434

Token 366: ' sépar' (ID: 97160)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7337415218353271
    2. '   ' → logprob: -1.3587415218353271
    3. '.split' → logprob: -2.858741521835327
    4. 's' → logprob: -3.233741521835327
    5. ' de' → logprob: -3.358741521835327
    6. '```' → logprob: -3.858741521835327
    7. 'spl' → logprob: -4.233741760253906
    8. ' l' → logprob: -4.858741760253906
    9. 'de' → logprob: -4.983741760253906
    10. 'd' → logprob: -4.983741760253906

Token 367: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.16143448650836945
    2. 'és' → logprob: -1.911434531211853
    3. 'ée' → logprob: -6.786434650421143
    4. 'es' → logprob: -10.036434173583984
    5. 'é' → logprob: -10.661434173583984
    6. 'par' → logprob: -11.661434173583984
    7. '```' → logprob: -13.411434173583984
    8. ' par' → logprob: -14.536434173583984
    9. 'É' → logprob: -14.661434173583984
    10. 'e' → logprob: -14.786434173583984

Token 368: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.225853830575943
    2. 'par' → logprob: -1.6008538007736206
    3. '   ' → logprob: -9.60085391998291
    4. '```' → logprob: -9.60085391998291
    5. '(par' → logprob: -9.72585391998291
    6. 'es' → logprob: -10.10085391998291
    7. ' ' → logprob: -10.60085391998291
    8. '_par' → logprob: -10.72585391998291
    9. '()' → logprob: -10.97585391998291
    10. ' by' → logprob: -11.10085391998291

Token 369: ' espaces' (ID: 98361)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.06403481215238571
    2. ' des' → logprob: -2.9390347003936768
    3. 'esp' → logprob: -5.439034938812256
    4. 'un' → logprob: -5.814034938812256
    5. ' espaces' → logprob: -7.939034938812256
    6. ''esp' → logprob: -8.064034461975098
    7. ''' → logprob: -8.064034461975098
    8. 'es' → logprob: -8.564034461975098
    9. ' un' → logprob: -8.564034461975098
    10. ''un' → logprob: -8.689034461975098

Token 370: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16000086069107056
    2. '()' → logprob: -2.285000801086426
    3. '   ' → logprob: -4.035000801086426
    4. '().' → logprob: -4.035000801086426
    5. '()
' → logprob: -5.535000801086426
    6. '.
' → logprob: -5.785000801086426
    7. ']' → logprob: -7.285000801086426
    8. ')' → logprob: -7.285000801086426
    9. 'def' → logprob: -7.660000801086426
    10. 's' → logprob: -8.160000801086426

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002198676229454577
    2. '```' → logprob: -8.87522029876709
    3. '"""
' → logprob: -10.37522029876709
    4. '
' → logprob: -10.50022029876709
    5. '    
' → logprob: -11.87522029876709
    6. '"""' → logprob: -11.87522029876709
    7. 'return' → logprob: -13.00022029876709
    8. ')' → logprob: -13.50022029876709
    9. '``' → logprob: -13.62522029876709
    10. ')
' → logprob: -14.25022029876709

Token 372: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002813432365655899
    2. '"""
' (adapté à ' """
') → logprob: -6.377813339233398
    3. '```' → logprob: -7.377813339233398
    4. '"""' → logprob: -7.877813339233398
    5. ')' → logprob: -9.877813339233398
    6. 'return' → logprob: -11.127813339233398
    7. ')
' → logprob: -11.502813339233398
    8. '()' → logprob: -11.752813339233398
    9. '()
' → logprob: -12.252813339233398
    10. '``' → logprob: -12.502813339233398

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009168167016468942
    2. 'return' → logprob: -7.000916957855225
    3. ' return' → logprob: -12.375916481018066
    4. '```' → logprob: -14.500916481018066
    5. 'def' → logprob: -15.000916481018066
    6. '   ' → logprob: -15.500916481018066
    7. '	return' → logprob: -16.125917434692383
    8. '       ' → logprob: -18.000917434692383
    9. '
' → logprob: -18.500917434692383
    10. '  ' → logprob: -19.000917434692383

Token 374: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.465036105713807e-06
    2. ' return' → logprob: -12.500007629394531
    3. '   ' → logprob: -12.500007629394531
    4. '
' → logprob: -18.75000762939453
    5. 'def' → logprob: -18.75000762939453
    6. '	return' → logprob: -19.37500762939453
    7. '```' → logprob: -20.37500762939453
    8. 'ret' → logprob: -21.87500762939453
    9. 'eturn' → logprob: -21.87500762939453
    10. 'Return' → logprob: -22.00000762939453

Token 375: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031825865153223276
    2. ' sys' → logprob: -5.753182411193848
    3. 'S' → logprob: -12.253182411193848
    4. 'list' → logprob: -16.878183364868164
    5. '(sys' → logprob: -17.128183364868164
    6. ' S' → logprob: -17.628183364868164
    7. 'input' → logprob: -18.128183364868164
    8. 's' → logprob: -18.628183364868164
    9. '	sys' → logprob: -19.878183364868164
    10. 'Sys' → logprob: -20.128183364868164

Token 376: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003156817110721022
    2. '(' → logprob: -8.75031566619873
    3. '(S' → logprob: -9.12531566619873
    4. '(map' → logprob: -10.25031566619873
    5. 'sys' → logprob: -12.62531566619873
    6. '=sys' → logprob: -12.87531566619873
    7. '(s' → logprob: -13.25031566619873
    8. '(str' → logprob: -13.37531566619873
    9. '(system' → logprob: -13.75031566619873
    10. '(Sys' → logprob: -14.00031566619873

Token 377: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.4617256056226324e-05
    2. '.stdout' → logprob: -11.250014305114746
    3. '.' → logprob: -14.125014305114746
    4. 'stdin' → logprob: -14.750014305114746
    5. '.argv' → logprob: -15.125014305114746
    6. '.std' → logprob: -16.500015258789062
    7. '(stdin' → logprob: -17.875015258789062
    8. ' stdin' → logprob: -19.250015258789062
    9. '.readline' → logprob: -19.500015258789062
    10. '.stderr' → logprob: -20.000015258789062

Token 378: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004700683988630772
    2. '.stdin' → logprob: -5.379700660705566
    3. '.' → logprob: -9.629700660705566
    4. '.stdout' → logprob: -11.754700660705566
    5. 'stdin' → logprob: -13.004700660705566
    6. ').' → logprob: -13.504700660705566
    7. '.readlines' → logprob: -13.629700660705566
    8. '.read' → logprob: -14.254700660705566
    9. ' .' → logprob: -15.379700660705566
    10. '.std' → logprob: -15.504700660705566

Token 379: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015908108616713434
    2. '()' → logprob: -8.75015926361084
    3. ' ().' → logprob: -14.62515926361084
    4. '().'' → logprob: -17.625158309936523
    5. '()
' → logprob: -18.000158309936523
    6. '()).' → logprob: -18.250158309936523
    7. '.' → logprob: -18.250158309936523
    8. '(' → logprob: -18.875158309936523
    9. '()[' → logprob: -19.250158309936523
    10. ' ()' → logprob: -19.250158309936523

Token 380: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -5.4192871175473556e-05
    2. 'split' → logprob: -10.000054359436035
    3. 'strip' → logprob: -11.750054359436035
    4. 'read' → logprob: -15.000054359436035
    5. '.rstrip' → logprob: -15.125054359436035
    6. 'decode' → logprob: -15.375054359436035
    7. 'rst' → logprob: -16.75005340576172
    8. 'replace' → logprob: -18.37505340576172
    9. 'rs' → logprob: -18.50005340576172
    10. 'rl' → logprob: -19.75005340576172

Token 381: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.50000286102295
    3. ' ().' → logprob: -13.75000286102295
    4. '.' → logprob: -17.625001907348633
    5. '(' → logprob: -19.875001907348633
    6. ' .' → logprob: -20.750001907348633
    7. '()
' → logprob: -20.875001907348633
    8. ' ()' → logprob: -21.625001907348633
    9. '()).' → logprob: -21.625001907348633
    10. ').' → logprob: -21.875001907348633

Token 382: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.000000953674316
    3. '.split' → logprob: -18.5
    4. '(split' → logprob: -19.625
    5. 'spl' → logprob: -19.75
    6. 'rstrip' → logprob: -20.0
    7. 'decode' → logprob: -20.375
    8. 'strip' → logprob: -20.375
    9. '```' → logprob: -22.875
    10. ')' → logprob: -24.0

Token 383: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012973772827535868
    2. '()' → logprob: -6.751297473907471
    3. ')' → logprob: -9.001296997070312
    4. ' ())' → logprob: -12.751296997070312
    5. '())
' → logprob: -14.626296997070312
    6. '(' → logprob: -15.376296997070312
    7. '();)' → logprob: -16.126296997070312
    8. '()))' → logprob: -16.126296997070312
    9. '()]' → logprob: -16.876296997070312
    10. '()
' → logprob: -17.126296997070312

Token 384: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019640590995550156
    2. '<|end|>' → logprob: -4.1446404457092285
    3. '
' → logprob: -6.0196404457092285
    4. '#' → logprob: -7.8946404457092285
    5. '\' → logprob: -8.144640922546387
    6. '\n' → logprob: -8.644640922546387
    7. '<|end|>' → logprob: -9.144640922546387
    8. 'class' → logprob: -10.144640922546387
    9. ')' → logprob: -10.269640922546387
    10. '[' → logprob: -11.144640922546387

Token 385: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013738776557147503
    2. '
' → logprob: -5.388738632202148
    3. '#' → logprob: -5.513738632202148
    4. '<|end|>' → logprob: -5.888738632202148
    5. 'd' → logprob: -7.138738632202148
    6. '\' → logprob: -7.763738632202148
    7. '\n' → logprob: -8.263738632202148
    8. '(' → logprob: -8.263738632202148
    9. 'de' → logprob: -9.513738632202148
    10. 'n' → logprob: -9.763738632202148

Token 386: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7968773245811462
    2. 'def' → logprob: -1.546877384185791
    3. 'int' → logprob: -2.296877384185791
    4. 'n' → logprob: -2.921877384185791
    5. 't' → logprob: -2.921877384185791
    6. '_' → logprob: -3.671877384185791
    7. ' =' → logprob: -3.796877384185791
    8. '(int' → logprob: -4.921877384185791
    9. 'line' → logprob: -5.046877384185791
    10. 'un' → logprob: -5.046877384185791

Token 387: ' chaîne' (ID: 89288)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2086741328239441
    2. 'liste' → logprob: -2.208674192428589
    3. 'def' → logprob: -3.333674192428589
    4. '#' → logprob: -4.83367395401001
    5. 'l' → logprob: -5.20867395401001
    6. 'fonction' → logprob: -5.83367395401001
    7. ' ligne' → logprob: -6.08367395401001
    8. 'chaine' → logprob: -6.20867395401001
    9. 'list' → logprob: -6.33367395401001
    10. 'gr' → logprob: -6.45867395401001

Token 388: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021224284544587135
    2. '#' → logprob: -4.771224498748779
    3. 'de' → logprob: -6.021224498748779
    4. 's' → logprob: -6.146224498748779
    5. '()
' → logprob: -6.521224498748779
    6. '_' → logprob: -6.896224498748779
    7. ' =' → logprob: -7.021224498748779
    8. '(' → logprob: -7.021224498748779
    9. 'S' → logprob: -7.896224498748779
    10. '(
' → logprob: -8.021224021911621

Token 389: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0018255965551361442
    2. ' caractères' → logprob: -6.37682580947876
    3. '#' → logprob: -10.126825332641602
    4. 'char' → logprob: -10.751825332641602
    5. 'chars' → logprob: -11.251825332641602
    6. 'code' → logprob: -11.376825332641602
    7. 'c' → logprob: -11.751825332641602
    8. '
' → logprob: -11.751825332641602
    9. 'format' → logprob: -12.876825332641602
    10. 's' → logprob: -12.876825332641602

Token 390: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05628540366888046
    2. 's' → logprob: -3.8062853813171387
    3. 'def' → logprob: -4.181285381317139
    4. '(' → logprob: -5.181285381317139
    5. '#' → logprob: -5.431285381317139
    6. 'S' → logprob: -6.431285381317139
    7. ' =' → logprob: -6.556285381317139
    8. 'print' → logprob: -7.556285381317139
    9. 'n' → logprob: -7.806285381317139
    10. '=' → logprob: -7.931285381317139

Token 391: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6746477484703064
    2. 'l' → logprob: -0.7996477484703064
    3. '()' → logprob: -4.174647808074951
    4. 'input' → logprob: -4.299647808074951
    5. '(sys' → logprob: -5.549647808074951
    6. 'la' → logprob: -6.174647808074951
    7. 's' → logprob: -6.924647808074951
    8. 'S' → logprob: -7.174647808074951
    9. ' sys' → logprob: -7.299647808074951
    10. '=sys' → logprob: -7.299647808074951

Token 392: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.055572759360075
    2. 'entrée' → logprob: -3.430572748184204
    3. 'sys' → logprob: -5.055572986602783
    4. 'a' → logprob: -5.805572986602783
    5. 'input' → logprob: -5.930572986602783
    6. 'stdin' → logprob: -5.930572986602783
    7. 'import' → logprob: -6.555572986602783
    8. 'es' → logprob: -6.805572986602783
    9. 'e' → logprob: -6.805572986602783
    10. '=sys' → logprob: -7.180572986602783

Token 393: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.8727568984031677
    2. '()' → logprob: -1.2477569580078125
    3. ' standard' → logprob: -1.8727569580078125
    4. ',' → logprob: -3.6227569580078125
    5. 's' → logprob: -3.6227569580078125
    6. '<|end|>' → logprob: -4.6227569580078125
    7. '.' → logprob: -4.7477569580078125
    8. 'import' → logprob: -5.2477569580078125
    9. '#' → logprob: -5.3727569580078125
    10. ')' → logprob: -5.4977569580078125

Token 394: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8325077295303345
    2. 'def' → logprob: -0.8325077295303345
    3. 'S' → logprob: -2.957507610321045
    4. 's' → logprob: -3.832507610321045
    5. ' =' → logprob: -4.457507610321045
    6. '#' → logprob: -4.707507610321045
    7. 'input' → logprob: -4.707507610321045
    8. '(' → logprob: -4.832507610321045
    9. '=' → logprob: -5.207507610321045
    10. 'print' → logprob: -5.457507610321045

Token 395: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28965598344802856
    2. 'S' → logprob: -2.039655923843384
    3. 's' → logprob: -2.789655923843384
    4. 'input' → logprob: -3.164655923843384
    5. 'data' → logprob: -5.539656162261963
    6. 'line' → logprob: -5.914656162261963
    7. 'chaine' → logprob: -6.289656162261963
    8. 'string' → logprob: -6.539656162261963
    9. 'c' → logprob: -6.664656162261963
    10. 'text' → logprob: -6.789656162261963

Token 396: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009543933905661106
    2. ' =' → logprob: -5.6345438957214355
    3. 'S' → logprob: -6.1345438957214355
    4. '=' → logprob: -6.5095438957214355
    5. 'ame' → logprob: -6.5095438957214355
    6. 'ext' → logprob: -8.384544372558594
    7. '(' → logprob: -8.509544372558594
    8. '_' → logprob: -9.759544372558594
    9. '()
' → logprob: -10.259544372558594
    10. 'AME' → logprob: -10.509544372558594

Token 397: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001000059419311583
    2. 'sys' → logprob: -7.500999927520752
    3. ' S' → logprob: -7.875999927520752
    4. 'int' → logprob: -9.87600040435791
    5. 'input' → logprob: -11.37600040435791
    6. ' sys' → logprob: -13.25100040435791
    7. ' ' → logprob: -13.87600040435791
    8. 'str' → logprob: -14.37600040435791
    9. 's' → logprob: -15.12600040435791
    10. ' input' → logprob: -16.000999450683594

Token 398: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.2994620242971e-06
    2. '()
' → logprob: -11.875008583068848
    3. '().' → logprob: -14.625008583068848
    4. '(' → logprob: -15.000008583068848
    5. '())' → logprob: -15.750008583068848
    6. ' ()' → logprob: -15.875008583068848
    7. '()

' → logprob: -16.00000762939453
    8. '();' → logprob: -16.75000762939453
    9. '()`' → logprob: -17.50000762939453
    10. '()]' → logprob: -17.87500762939453

Token 399: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3277851343154907
    2. '.' → logprob: -2.452785015106201
    3. ' =' → logprob: -2.577785015106201
    4. 'for' → logprob: -2.577785015106201
    5. '[::-' → logprob: -2.577785015106201
    6. '[' → logprob: -2.702785015106201
    7. 'if' → logprob: -2.702785015106201
    8. '#' → logprob: -2.952785015106201
    9. '=' → logprob: -3.202785015106201
    10. ' ' → logprob: -3.827785015106201

Token 400: ' Initialise' (ID: 179601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10303260385990143
    2. 'ans' → logprob: -4.22803258895874
    3. 'length' → logprob: -4.22803258895874
    4. 'L' → logprob: -4.85303258895874
    5. 'def' → logprob: -4.97803258895874
    6. 'a' → logprob: -4.97803258895874
    7. 'count' → logprob: -5.35303258895874
    8. 'for' → logprob: -5.35303258895874
    9. 'A' → logprob: -5.47803258895874
    10. 'data' → logprob: -5.60303258895874

Token 401: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0720810890197754
    2. 'a' → logprob: -1.6970810890197754
    3. 'ans' → logprob: -2.1970810890197754
    4. ' ans' → logprob: -2.6970810890197754
    5. 'n' → logprob: -3.0720810890197754
    6. ' a' → logprob: -3.5720810890197754
    7. 'd' → logprob: -3.6970810890197754
    8. ' dp' → logprob: -3.8220810890197754
    9. 'A' → logprob: -4.072081089019775
    10. 'count' → logprob: -4.197081089019775

Token 402: ' liste' (ID: 31719)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2995619773864746
    2. 'counter' → logprob: -1.2995619773864746
    3. 'liste' → logprob: -2.1745619773864746
    4. 'dp' → logprob: -2.6745619773864746
    5. 'deque' → logprob: -2.7995619773864746
    6. 'count' → logprob: -3.2995619773864746
    7. 'd' → logprob: -3.5495619773864746
    8. 'res' → logprob: -4.049561977386475
    9. 'collections' → logprob: -4.174561977386475
    10. 'lst' → logprob: -4.299561977386475

Token 403: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2601377069950104
    2. '_' → logprob: -2.5101377964019775
    3. 'des' → logprob: -3.3851377964019775
    4. '[]' → logprob: -3.8851377964019775
    5. 'de' → logprob: -4.010137557983398
    6. 's' → logprob: -4.260137557983398
    7. '=[]' → logprob: -4.635137557983398
    8. '=' → logprob: -5.010137557983398
    9. '()' → logprob: -5.510137557983398
    10. 'result' → logprob: -5.760137557983398

Token 404: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6132482886314392
    2. 'chars' → logprob: -2.363248348236084
    3. 'result' → logprob: -2.863248348236084
    4. 'L' → logprob: -2.863248348236084
    5. 'ans' → logprob: -2.988248348236084
    6. 'lst' → logprob: -3.238248348236084
    7. 'T' → logprob: -3.988248348236084
    8. 'arr' → logprob: -4.238248348236084
    9. 'dp' → logprob: -4.363248348236084
    10. 'counts' → logprob: -4.363248348236084

Token 405: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32963788509368896
    2. ' =' → logprob: -1.329637885093689
    3. '=' → logprob: -4.4546380043029785
    4. '=[]' → logprob: -6.3296380043029785
    5. 's' → logprob: -7.0796380043029785
    6. 'es' → logprob: -7.8296380043029785
    7. '=[]
' → logprob: -7.8296380043029785
    8. ' ='' → logprob: -8.20463752746582
    9. '='' → logprob: -8.20463752746582
    10. '_' → logprob: -9.32963752746582

Token 406: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06557465344667435
    2. ' =' → logprob: -2.8155746459960938
    3. '=[]' → logprob: -5.690574645996094
    4. '[]' → logprob: -8.940574645996094
    5. '=[]
' → logprob: -10.315574645996094
    6. ',' → logprob: -11.065574645996094
    7. 'ans' → logprob: -11.440574645996094
    8. 's' → logprob: -11.440574645996094
    9. '[:]' → logprob: -11.690574645996094
    10. '=[' → logprob: -12.190574645996094

Token 407: ' cont' (ID: 836)
  Prédit: ' cont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.5016162991523743
    2. 'cont' → logprob: -1.8766162395477295
    3. ' =' → logprob: -2.0016162395477295
    4. '=' → logprob: -2.8766162395477295
    5. '=[]' → logprob: -4.751616477966309
    6. '_' → logprob: -5.001616477966309
    7. ' sera' → logprob: -5.001616477966309
    8. 's' → logprob: -5.376616477966309
    9. ' va' → logprob: -5.751616477966309
    10. ' contient' → logprob: -5.876616477966309

Token 408: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.02253253385424614
    2. 'i' → logprob: -4.2725324630737305
    3. 'inue' → logprob: -5.2725324630737305
    4. 'e' → logprob: -7.1475324630737305
    5. 'iend' → logprob: -7.1475324630737305
    6. 'iennent' → logprob: -7.7725324630737305
    7. 'ients' → logprob: -8.27253246307373
    8. 'iens' → logprob: -8.52253246307373
    9. 'ent' → logprob: -8.77253246307373
    10. 'in' → logprob: -8.89753246307373

Token 409: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.1307378113269806
    2. 'ent' → logprob: -2.630737781524658
    3. 'nera' → logprob: -3.755737781524658
    4. 't' → logprob: -4.255737781524658
    5. 'end' → logprob: -5.255737781524658
    6. 'nt' → logprob: -5.755737781524658
    7. 'era' → logprob: -6.755737781524658
    8. 'nd' → logprob: -6.755737781524658
    9. 'n' → logprob: -7.255737781524658
    10. 'nent' → logprob: -7.880737781524658

Token 410: ' le' (ID: 505)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.020955700427293777
    2. '[' → logprob: -5.145955562591553
    3. '[:]' → logprob: -5.395955562591553
    4. '['' → logprob: -5.895955562591553
    5. '[N' → logprob: -5.895955562591553
    6. '["' → logprob: -6.020955562591553
    7. 'ans' → logprob: -6.895955562591553
    8. '[len' → logprob: -8.145956039428711
    9. '=[]' → logprob: -8.520956039428711
    10. 'len' → logprob: -8.520956039428711

Token 411: ' résultat' (ID: 62556)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0021019638516008854
    2. '["' → logprob: -7.127101898193359
    3. '['' → logprob: -7.502101898193359
    4. '[' → logprob: -7.752101898193359
    5. '[]
' → logprob: -8.37710189819336
    6. '[:]' → logprob: -10.50210189819336
    7. 'list' → logprob: -11.00210189819336
    8. 'result' → logprob: -12.00210189819336
    9. '[str' → logprob: -12.37710189819336
    10. 'answers' → logprob: -12.62710189819336

Token 412: ' transform' (ID: 7118)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5224106907844543
    2. ' =' → logprob: -1.3974106311798096
    3. '=[]' → logprob: -2.0224106311798096
    4. '[]' → logprob: -4.147410869598389
    5. '=[]
' → logprob: -5.522410869598389
    6. '[:]' → logprob: -6.272410869598389
    7. 'ans' → logprob: -6.397410869598389
    8. ',' → logprob: -6.772410869598389
    9. 's' → logprob: -6.897410869598389
    10. '_' → logprob: -7.147410869598389

Token 413: 'é' (ID: 377)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4309234023094177
    2. 'é' → logprob: -1.0559234619140625
    3. 'ées' → logprob: -7.4309234619140625
    4. 'ation' → logprob: -7.6809234619140625
    5. 'és' → logprob: -8.055923461914062
    6. 'ed' → logprob: -8.305923461914062
    7. '[]' → logprob: -8.430923461914062
    8. '=[]' → logprob: -9.055923461914062
    9. 'e' → logprob: -9.555923461914062
    10. '_' → logprob: -10.055923461914062

Token 414: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3771681487560272
    2. ' =' → logprob: -1.3771681785583496
    3. '[]' → logprob: -3.5021681785583496
    4. '=[]' → logprob: -4.25216817855835
    5. 's' → logprob: -5.25216817855835
    6. '=[]
' → logprob: -5.25216817855835
    7. 'ans' → logprob: -5.75216817855835
    8. ',' → logprob: -6.75216817855835
    9. '[:]' → logprob: -7.00216817855835
    10. '.' → logprob: -7.37716817855835

Token 415: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.833878508885391e-05
    2. '[]' → logprob: -10.250038146972656
    3. '[]
' → logprob: -13.000038146972656
    4. ' ans' → logprob: -15.375038146972656
    5. '(ans' → logprob: -16.000038146972656
    6. '[' → logprob: -16.250038146972656
    7. '['' → logprob: -16.500038146972656
    8. '	ans' → logprob: -16.750038146972656
    9. 'a' → logprob: -17.750038146972656
    10. '["' → logprob: -17.875038146972656

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474132239818573
    2. '=' → logprob: -0.974132239818573
    3. '=[]' → logprob: -9.974132537841797
    4. '[' → logprob: -13.599132537841797
    5. ' =[' → logprob: -13.849132537841797
    6. '=[' → logprob: -13.849132537841797
    7. '[]' → logprob: -13.974132537841797
    8. ',' → logprob: -14.099132537841797
    9. '=[]
' → logprob: -14.224132537841797
    10. ' ' → logprob: -14.349132537841797

Token 417: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004401274956762791
    2. 'list' → logprob: -5.504401206970215
    3. '["' → logprob: -8.879401206970215
    4. '['' → logprob: -9.504401206970215
    5. '[' → logprob: -9.754401206970215
    6. '[list' → logprob: -10.254401206970215
    7. '[]
' → logprob: -12.129401206970215
    8. ' []' → logprob: -12.879401206970215
    9. '[]}' → logprob: -12.879401206970215
    10. '[]"' → logprob: -13.379401206970215

Token 418: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.62500286102295
    3. ' for' → logprob: -13.62500286102295
    4. 'f' → logprob: -15.75000286102295
    5. 'fo' → logprob: -17.125001907348633
    6. 'n' → logprob: -17.500001907348633
    7. '
' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '	for' → logprob: -19.125001907348633
    10. '_' → logprob: -19.625001907348633

Token 419: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.453737710718997e-05
    2. 'i' → logprob: -10.375044822692871
    3. 'prev' → logprob: -12.500044822692871
    4. 'n' → logprob: -13.500044822692871
    5. 'stack' → logprob: -14.125044822692871
    6. '
' → logprob: -14.125044822692871
    7. ' for' → logprob: -14.250044822692871
    8. 'fo' → logprob: -14.625044822692871
    9. 'count' → logprob: -14.625044822692871
    10. 'idx' → logprob: -14.750044822692871

Token 420: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.03513992577791214
    2. 'ours' → logprob: -4.035140037536621
    3. 'ourt' → logprob: -4.410140037536621
    4. 'for' → logprob: -5.660140037536621
    5. 'or' → logprob: -7.285140037536621
    6. 'er' → logprob: -9.035140037536621
    7. 'e' → logprob: -9.035140037536621
    8. 'o' → logprob: -9.785140037536621
    9. ' for' → logprob: -10.035140037536621
    10. 'hor' → logprob: -11.035140037536621

Token 421: ' chaque' (ID: 21194)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005575117189437151
    2. 'range' → logprob: -5.755575180053711
    3. 'for' → logprob: -6.380575180053711
    4. ' N' → logprob: -7.380575180053711
    5. ' range' → logprob: -10.380575180053711
    6. 'enumer' → logprob: -10.630575180053711
    7. ' for' → logprob: -11.255575180053711
    8. 'len' → logprob: -12.755575180053711
    9. '(N' → logprob: -12.880575180053711
    10. 'c' → logprob: -14.130575180053711

Token 422: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24038338661193848
    2. ' c' → logprob: -1.6153833866119385
    3. ' ' → logprob: -5.490383148193359
    4. 'char' → logprob: -5.865383148193359
    5. 'car' → logprob: -5.990383148193359
    6. '_' → logprob: -6.115383148193359
    7. ' caract' → logprob: -6.365383148193359
    8. ' caractère' → logprob: -7.615383148193359
    9. ' char' → logprob: -7.990383148193359
    10. ' _' → logprob: -8.49038314819336

Token 423: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6452308893203735
    2. ' ' → logprob: -1.6452308893203735
    3. ' de' → logprob: -1.8952308893203735
    4. ' c' → logprob: -3.145230770111084
    5. 'in' → logprob: -3.145230770111084
    6. ' i' → logprob: -4.770230770111084
    7. 'c' → logprob: -4.770230770111084
    8. '_' → logprob: -5.145230770111084
    9. ' of' → logprob: -5.145230770111084
    10. ' du' → logprob: -5.645230770111084

Token 424: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1517960956552997e-05
    2. ' N' → logprob: -11.375011444091797
    3. 'the' → logprob: -20.000011444091797
    4. ' ' → logprob: -20.375011444091797
    5. '```' → logprob: -20.750011444091797
    6. 's' → logprob: -21.125011444091797
    7. '(N' → logprob: -21.250011444091797
    8. 'string' → logprob: -21.500011444091797
    9. ' the' → logprob: -21.750011444091797
    10. '#' → logprob: -21.750011444091797

Token 425: ' chaîne' (ID: 89288)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000116655595775228
    2. 'chaine' → logprob: -9.250116348266602
    3. 'string' → logprob: -11.125116348266602
    4. ' N' → logprob: -12.375116348266602
    5. 's' → logprob: -15.000116348266602
    6. 'input' → logprob: -15.250116348266602
    7. '```' → logprob: -15.500116348266602
    8. 'str' → logprob: -15.625116348266602
    9. ' chaîne' → logprob: -15.875116348266602
    10. '_N' → logprob: -16.5001163482666

Token 426: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.43548840284347534
    2. ' N' → logprob: -1.0604884624481201
    3. ' for' → logprob: -5.435488224029541
    4. 'for' → logprob: -6.685488224029541
    5. '_' → logprob: -8.0604887008667
    6. 's' → logprob: -8.0604887008667
    7. ' in' → logprob: -8.8104887008667
    8. ' ' → logprob: -9.4354887008667
    9. '(N' → logprob: -9.4354887008667
    10. ' s' → logprob: -10.1854887008667

Token 427: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12719856202602386
    2. ':' → logprob: -2.2521984577178955
    3. ' for' → logprob: -4.377198696136475
    4. 'in' → logprob: -7.252198696136475
    5. ':
' → logprob: -8.127198219299316
    6. ' :' → logprob: -8.752198219299316
    7. 'N' → logprob: -8.752198219299316
    8. ',' → logprob: -8.752198219299316
    9. ' N' → logprob: -10.127198219299316
    10. 's' → logprob: -10.127198219299316

Token 428: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.8961017202818766e-05
    2. ' for' → logprob: -9.750059127807617
    3. 'f' → logprob: -14.375059127807617
    4. 'fo' → logprob: -18.625059127807617
    5. '
' → logprob: -18.750059127807617
    6. '   ' → logprob: -19.375059127807617
    7. ' 
' → logprob: -19.625059127807617
    8. 'i' → logprob: -19.875059127807617
    9. '	for' → logprob: -20.375059127807617
    10. '```' → logprob: -20.500059127807617

Token 429: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4741254150867462
    2. ' c' → logprob: -0.9741253852844238
    3. 'ch' → logprob: -10.099125862121582
    4. ' ch' → logprob: -12.599125862121582
    5. 'char' → logprob: -13.724125862121582
    6. ' ' → logprob: -13.849125862121582
    7. 'i' → logprob: -14.474125862121582
    8. 'x' → logprob: -14.974125862121582
    9. ' char' → logprob: -14.974125862121582
    10. '	c' → logprob: -15.349125862121582

Token 430: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03814396262168884
    2. 'in' → logprob: -3.2881438732147217
    3. ' ' → logprob: -9.5381441116333
    4. 'n' → logprob: -11.5381441116333
    5. ' i' → logprob: -11.9131441116333
    6. '  ' → logprob: -12.1631441116333
    7. 'i' → logprob: -13.2881441116333
    8. 's' → logprob: -13.2881441116333
    9. '   ' → logprob: -13.4131441116333
    10. ' ' → logprob: -14.1631441116333

Token 431: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001584850688232109
    2. ' N' → logprob: -8.750158309936523
    3. ' ' → logprob: -18.375158309936523
    4. '_N' → logprob: -21.000158309936523
    5. '[N' → logprob: -21.250158309936523
    6. '	N' → logprob: -21.375158309936523
    7. '   ' → logprob: -21.375158309936523
    8. 'string' → logprob: -21.875158309936523
    9. 'S' → logprob: -22.000158309936523
    10. 'range' → logprob: -22.250158309936523

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004654168616980314
    2. ':
' → logprob: -5.3796539306640625
    3. ' :' → logprob: -10.504653930664062
    4. '   ' → logprob: -12.504653930664062
    5. '):' → logprob: -14.129653930664062
    6. ':
' → logprob: -15.004653930664062
    7. '):
' → logprob: -15.004653930664062
    8. '=' → logprob: -15.254653930664062
    9. 'if' → logprob: -15.254653930664062
    10. ' :
' → logprob: -15.504653930664062

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010032468708232045
    2. ' if' → logprob: -9.375100135803223
    3. '   ' → logprob: -12.125100135803223
    4. 'if' → logprob: -12.625100135803223
    5. '    
' → logprob: -12.625100135803223
    6. ' ans' → logprob: -14.000100135803223
    7. 'ans' → logprob: -14.500100135803223
    8. 'a' → logprob: -15.000100135803223
    9. ' ' → logprob: -15.375100135803223
    10. '       ' → logprob: -15.500100135803223

Token 434: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006441680248826742
    2. '   ' → logprob: -5.131441593170166
    3. 'ans' → logprob: -7.631441593170166
    4. ' if' → logprob: -11.006442070007324
    5. '#' (adapté à ' #') → logprob: -12.756442070007324
    6. 'ascii' → logprob: -12.881442070007324
    7. 'v' → logprob: -13.506442070007324
    8. 'val' → logprob: -13.881442070007324
    9. 'x' → logprob: -14.131442070007324
    10. 'ch' → logprob: -14.506442070007324

Token 435: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005008471780456603
    2. 'ans' → logprob: -8.000500679016113
    3. '#' → logprob: -9.875500679016113
    4. '   ' → logprob: -9.875500679016113
    5. 'ascii' → logprob: -10.125500679016113
    6. 'ord' → logprob: -12.625500679016113
    7. ' if' → logprob: -12.750500679016113
    8. 'val' → logprob: -12.875500679016113
    9. 'asc' → logprob: -12.875500679016113
    10. 'v' → logprob: -13.375500679016113

Token 436: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22608055174350739
    2. ' c' → logprob: -1.6010805368423462
    3. ''' → logprob: -7.726080417633057
    4. ' ' → logprob: -9.601080894470215
    5. ' '' → logprob: -9.601080894470215
    6. 'ord' → logprob: -11.226080894470215
    7. '65' → logprob: -11.351080894470215
    8. ' ord' → logprob: -11.351080894470215
    9. 'not' → logprob: -11.851080894470215
    10. '   ' → logprob: -12.226080894470215

Token 437: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006581080378964543
    2. ' c' → logprob: -7.50065803527832
    3. ''' → logprob: -9.37565803527832
    4. 'ord' → logprob: -12.50065803527832
    5. ' ' → logprob: -12.62565803527832
    6. 'len' → logprob: -12.87565803527832
    7. 'ans' → logprob: -13.12565803527832
    8. '65' → logprob: -13.25065803527832
    9. 'not' → logprob: -13.75065803527832
    10. '"' → logprob: -14.12565803527832

Token 438: ' est' (ID: 893)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6265300512313843
    2. ' ==' → logprob: -1.2515300512313843
    3. ' c' → logprob: -2.501530170440674
    4. '==' → logprob: -2.751530170440674
    5. 'is' → logprob: -4.126530170440674
    6. '.is' → logprob: -5.751530170440674
    7. '>=' → logprob: -5.876530170440674
    8. '=='' → logprob: -6.001530170440674
    9. ' in' → logprob: -6.126530170440674
    10. ' >=' → logprob: -6.376530170440674

Token 439: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.49935829639434814
    2. 'c' → logprob: -1.3743582963943481
    3. '"' → logprob: -3.1243581771850586
    4. ''a' → logprob: -3.3743581771850586
    5. ' c' → logprob: -3.4993581771850586
    6. ''un' → logprob: -4.374358177185059
    7. ' '' → logprob: -5.749358177185059
    8. 'a' → logprob: -5.999358177185059
    9. ''e' → logprob: -5.999358177185059
    10. ''une' → logprob: -6.124358177185059

Token 440: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8110555410385132
    2. 'a' → logprob: -0.8110555410385132
    3. 'A' → logprob: -2.8110556602478027
    4. '"' → logprob: -4.686055660247803
    5. ''a' → logprob: -5.311055660247803
    6. ''A' → logprob: -5.561055660247803
    7. 'c' → logprob: -5.811055660247803
    8. 'B' → logprob: -6.061055660247803
    9. '_' → logprob: -6.311055660247803
    10. '('' → logprob: -6.436055660247803

Token 441: '',' (ID: 787)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.13429811596870422
    2. '':
' → logprob: -2.634298086166382
    3. ''' → logprob: -3.009298086166382
    4. '',' → logprob: -5.634298324584961
    5. '   ' → logprob: -8.634298324584961
    6. '):' → logprob: -9.134298324584961
    7. ',' → logprob: -9.134298324584961
    8. ' '' → logprob: -9.384298324584961
    9. ''):
' → logprob: -9.384298324584961
    10. ':' → logprob: -9.509298324584961

Token 442: ' rem' (ID: 1662)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46513164043426514
    2. ' ans' → logprob: -1.4651316404342651
    3. 'ans' → logprob: -1.9651316404342651
    4. '	ans' → logprob: -8.215131759643555
    5. '       ' → logprob: -8.590131759643555
    6. '(ans' → logprob: -9.715131759643555
    7. '   ' → logprob: -9.715131759643555
    8. '    ' → logprob: -10.090131759643555
    9. '    
' → logprob: -10.465131759643555
    10. ' ' → logprob: -10.590131759643555

Token 443: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.5151623487472534
    2. 'p' → logprob: -1.7651623487472534
    3. 'pl' → logprob: -1.7651623487472534
    4. 'placer' → logprob: -3.390162467956543
    5. 'ans' → logprob: -4.265162467956543
    6. 'pla' → logprob: -5.015162467956543
    7. '   ' → logprob: -6.140162467956543
    8. 'a' → logprob: -7.640162467956543
    9. 'an' → logprob: -7.765162467956543
    10. 'ap' → logprob: -8.015162467956543

Token 444: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5370545387268066
    2. ''' → logprob: -1.1620545387268066
    3. ' '' → logprob: -2.5370545387268066
    4. '    ' → logprob: -5.537054538726807
    5. ' ' → logprob: -5.662054538726807
    6. '    
' → logprob: -5.787054538726807
    7. 'ans' → logprob: -5.787054538726807
    8. 'c' → logprob: -6.037054538726807
    9. ' c' → logprob: -6.287054538726807
    10. ''a' → logprob: -7.287054538726807

Token 445: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11704381555318832
    2. '"' → logprob: -3.1170437335968018
    3. ''O' → logprob: -4.117043972015381
    4. ''o' → logprob: -4.617043972015381
    5. ''a' → logprob: -4.617043972015381
    6. ''i' → logprob: -4.867043972015381
    7. '0' → logprob: -5.117043972015381
    8. ''A' → logprob: -5.367043972015381
    9. ' ' → logprob: -5.992043972015381
    10. ' '' → logprob: -5.992043972015381

Token 446: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.29703259468078613
    2. '0' → logprob: -1.7970325946807861
    3. '@' → logprob: -3.047032594680786
    4. '1' → logprob: -4.672032356262207
    5. '#' → logprob: -5.047032356262207
    6. 'one' → logprob: -5.047032356262207
    7. 'l' → logprob: -6.047032356262207
    8. '+' → logprob: -6.047032356262207
    9. 'a' → logprob: -6.172032356262207
    10. 'I' → logprob: -6.297032356262207

Token 447: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.031111661344766617
    2. '')' → logprob: -3.906111717224121
    3. ''
' → logprob: -4.781111717224121
    4. '')
' → logprob: -7.406111717224121
    5. '   ' → logprob: -8.031111717224121
    6. '':' → logprob: -8.156111717224121
    7. '',' → logprob: -8.781111717224121
    8. '9' → logprob: -9.031111717224121
    9. '');' → logprob: -9.031111717224121
    10. ''.' → logprob: -9.031111717224121

Token 448: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020246391650289297
    2. ':' → logprob: -6.6270246505737305
    3. ',' → logprob: -8.12702465057373
    4. 'ans' → logprob: -8.75202465057373
    5. '9' → logprob: -9.25202465057373
    6. ' ans' → logprob: -9.87702465057373
    7. ' ' → logprob: -10.37702465057373
    8. '  ' → logprob: -10.87702465057373
    9. ')' → logprob: -11.62702465057373
    10. '.' → logprob: -11.62702465057373

Token 449: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029800711199641228
    2. ' ans' → logprob: -3.5298006534576416
    3. '	ans' → logprob: -10.279800415039062
    4. '   ' → logprob: -11.654800415039062
    5. '(ans' → logprob: -12.029800415039062
    6. '_ans' → logprob: -15.279800415039062
    7. ''' → logprob: -15.279800415039062
    8. '
' → logprob: -15.779800415039062
    9. '```' → logprob: -16.154800415039062
    10. 'answer' → logprob: -16.154800415039062

Token 450: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00016146517009474337
    2. ' ans' → logprob: -9.000161170959473
    3. '   ' → logprob: -11.125161170959473
    4. 'answer' → logprob: -12.000161170959473
    5. 'code' → logprob: -12.750161170959473
    6. '	ans' → logprob: -12.875161170959473
    7. 'anst' → logprob: -13.500161170959473
    8. 'a' → logprob: -14.000161170959473
    9. '```' → logprob: -14.000161170959473
    10. 'chaine' → logprob: -14.125161170959473

Token 451: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.351573646068573
    2. '   ' → logprob: -1.2265737056732178
    3. ' ans' → logprob: -6.351573467254639
    4. '	ans' → logprob: -7.726573467254639
    5. ',' → logprob: -8.351573944091797
    6. '(ans' → logprob: -8.476573944091797
    7. '
' → logprob: -9.101573944091797
    8. ' ' → logprob: -9.601573944091797
    9. 'a' → logprob: -9.851573944091797
    10. '9' → logprob: -9.851573944091797

Token 452: ' sortie' (ID: 52761)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007457832107320428
    2. ' ans' → logprob: -7.25074577331543
    3. 'la' → logprob: -11.25074577331543
    4. '`' → logprob: -11.87574577331543
    5. '#' → logprob: -12.50074577331543
    6. 'l' → logprob: -13.00074577331543
    7. '	ans' → logprob: -13.12574577331543
    8. '(ans' → logprob: -13.37574577331543
    9. '```' → logprob: -13.62574577331543
    10. ' la' → logprob: -14.12574577331543

Token 453: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009255182929337025
    2. 'ans' → logprob: -5.634255409240723
    3. ',' → logprob: -6.259255409240723
    4. ' ans' → logprob: -7.134255409240723
    5. '(ans' → logprob: -7.509255409240723
    6. '    
' → logprob: -7.884255409240723
    7. ' if' → logprob: -8.134255409240723
    8. '
' → logprob: -8.259255409240723
    9. '.' → logprob: -8.384255409240723
    10. '  ' → logprob: -8.509255409240723

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13939689099788666
    2. 'ans' → logprob: -3.139396905899048
    3. ' ans' → logprob: -3.264396905899048
    4. ' if' → logprob: -3.389396905899048
    5. ' 
' → logprob: -5.014396667480469
    6. '    
' → logprob: -5.514396667480469
    7. 'if' → logprob: -6.639396667480469
    8. '(ans' → logprob: -6.889396667480469
    9. ' ' → logprob: -7.264396667480469
    10. '	ans' → logprob: -8.264396667480469

Token 455: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6573882102966309
    2. 'ans' → logprob: -1.7823882102966309
    3. ' if' → logprob: -1.7823882102966309
    4. 'if' (adapté à ' if') → logprob: -2.157388210296631
    5. ' ans' → logprob: -3.532388210296631
    6. ' ' → logprob: -8.657388687133789
    7. '	ans' → logprob: -9.157388687133789
    8. '(ans' → logprob: -9.657388687133789
    9. '    
' → logprob: -10.532388687133789
    10. '```' → logprob: -10.657388687133789

Token 456: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141461491584778
    2. ' c' → logprob: -1.7014145851135254
    3. '	c' → logprob: -13.826415061950684
    4. ' ' → logprob: -16.451414108276367
    5. '   ' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.576414108276367
    7. ')c' → logprob: -16.826414108276367
    8. '(c' → logprob: -17.951414108276367
    9. '_c' → logprob: -19.326414108276367
    10. 'cation' → logprob: -19.576414108276367

Token 457: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08912768959999084
    2. '==' → logprob: -2.464127779006958
    3. '=='' → logprob: -9.464127540588379
    4. ' =='' → logprob: -9.839127540588379
    5. '[' → logprob: -10.714127540588379
    6. '=' → logprob: -10.964127540588379
    7. ' ' → logprob: -12.714127540588379
    8. '=="' → logprob: -12.714127540588379
    9. '==
' → logprob: -13.339127540588379
    10. ' !=' → logprob: -13.339127540588379

Token 458: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002314645564183593
    2. ' '' → logprob: -6.127314567565918
    3. '"' → logprob: -9.002314567565918
    4. '1' → logprob: -12.627314567565918
    5. ' ' → logprob: -12.877314567565918
    6. ' "' → logprob: -14.627314567565918
    7. '`' → logprob: -16.502315521240234
    8. '9' → logprob: -18.002315521240234
    9. '’' → logprob: -18.502315521240234
    10. '   ' → logprob: -18.877315521240234

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. ''' → logprob: -11.125016212463379
    3. '"' → logprob: -13.625016212463379
    4. ' ' → logprob: -15.250016212463379
    5. '9' → logprob: -15.750016212463379
    6. '\'' → logprob: -17.000017166137695
    7. '```' → logprob: -18.250017166137695
    8. '')' → logprob: -18.500017166137695
    9. '１' → logprob: -18.750017166137695
    10. '0' → logprob: -18.750017166137695

Token 460: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4824031591415405
    2. '':
' → logprob: -0.9824031591415405
    3. ''' → logprob: -5.23240327835083
    4. ':' → logprob: -6.35740327835083
    5. '):
' → logprob: -8.232402801513672
    6. '':
' → logprob: -8.232402801513672
    7. ':
' → logprob: -8.357402801513672
    8. '9' → logprob: -8.732402801513672
    9. ''):
' → logprob: -8.857402801513672
    10. ')' → logprob: -9.732402801513672

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010286426404491067
    2. '   ' → logprob: -7.251028537750244
    3. '9' → logprob: -8.751029014587402
    4. ' ans' → logprob: -9.751029014587402
    5. '        
' → logprob: -10.501029014587402
    6. 'ans' → logprob: -10.751029014587402
    7. '
' → logprob: -11.376029014587402
    8. ':' → logprob: -11.501029014587402
    9. '      ' → logprob: -11.751029014587402
    10. '    
' → logprob: -12.251029014587402

Token 462: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.022899964824318886
    2. ' ans' → logprob: -4.022900104522705
    3. '   ' → logprob: -5.397900104522705
    4. '	ans' → logprob: -8.897899627685547
    5. '       ' → logprob: -9.897899627685547
    6. '9' → logprob: -10.897899627685547
    7. '(ans' → logprob: -12.397899627685547
    8. ''' → logprob: -13.772899627685547
    9. '_ans' → logprob: -14.272899627685547
    10. ' ' → logprob: -15.147899627685547

Token 463: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009119403548538685
    2. '.' → logprob: -7.000911712646484
    3. 'append' → logprob: -14.875911712646484
    4. '.extend' → logprob: -16.750911712646484
    5. '.ap' → logprob: -17.125911712646484
    6. '.app' → logprob: -17.125911712646484
    7. ' .' → logprob: -18.250911712646484
    8. '.Append' → logprob: -19.000911712646484
    9. '.push' → logprob: -20.625911712646484
    10. ' append' → logprob: -20.625911712646484

Token 464: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20147474110126495
    2. ''' → logprob: -1.7014747858047485
    3. '(' → logprob: -10.451475143432617
    4. ' '' → logprob: -11.201475143432617
    5. '"' → logprob: -11.576475143432617
    6. '9' → logprob: -11.951475143432617
    7. '("' → logprob: -13.451475143432617
    8. ''s' → logprob: -14.701475143432617
    9. '   ' → logprob: -14.826475143432617
    10. ''n' → logprob: -15.076475143432617

Token 465: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '99' → logprob: -19.0
    4. '999' → logprob: -19.5
    5. ''' → logprob: -19.75
    6. '0' → logprob: -19.875
    7. '９' → logprob: -20.0
    8. ' ')' → logprob: -20.25
    9. '')' → logprob: -20.875
    10. ' '' → logprob: -21.125

Token 466: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12695667147636414
    2. '')
' → logprob: -2.1269567012786865
    3. '')
' → logprob: -11.501956939697266
    4. ')' → logprob: -11.751956939697266
    5. ''' → logprob: -11.876956939697266
    6. '")' → logprob: -13.626956939697266
    7. '')

' → logprob: -14.126956939697266
    8. '   ' → logprob: -14.501956939697266
    9. ')
' → logprob: -14.876956939697266
    10. '")
' → logprob: -15.376956939697266

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03655342385172844
    2. 'else' → logprob: -3.536553382873535
    3. ' else' → logprob: -5.161553382873535
    4. 'elif' → logprob: -6.911553382873535
    5. ' elif' → logprob: -11.036553382873535
    6. '	else' → logprob: -11.536553382873535
    7. '    
' → logprob: -11.911553382873535
    8. '<|end|>' → logprob: -12.036553382873535
    9. '.' → logprob: -12.661553382873535
    10. '	elif' → logprob: -13.036553382873535

Token 468: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8168125152587891
    2. '   ' → logprob: -1.066812515258789
    3. 'elif' → logprob: -1.691812515258789
    4. ' else' → logprob: -3.566812515258789
    5. ' elif' → logprob: -6.441812515258789
    6. '    
' → logprob: -11.566812515258789
    7. '	elif' → logprob: -11.691812515258789
    8. '	else' → logprob: -12.441812515258789
    9. 'el' → logprob: -12.816812515258789
    10. 'els' → logprob: -13.566812515258789

Token 469: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6942278146743774
    2. 'elif' → logprob: -0.6942278146743774
    3. ' else' → logprob: -7.194227695465088
    4. ' elif' → logprob: -8.069228172302246
    5. '   ' → logprob: -11.944228172302246
    6. 'el' → logprob: -11.944228172302246
    7. 'els' → logprob: -13.819228172302246
    8. 'elseif' → logprob: -14.569228172302246
    9. ' ' → logprob: -15.069228172302246
    10. '#elif' → logprob: -15.444228172302246

Token 470: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02837163396179676
    2. '   ' → logprob: -4.278371810913086
    3. ':
' → logprob: -4.278371810913086
    4. 'else' → logprob: -9.028371810913086
    5. ' :' → logprob: -9.778371810913086
    6. 'elif' → logprob: -10.528371810913086
    7. '       ' → logprob: -11.528371810913086
    8. 'if' → logprob: -11.653371810913086
    9. ' else' → logprob: -12.403371810913086
    10. ' if' → logprob: -12.778371810913086

Token 471: ' rem' (ID: 1662)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4139877259731293
    2. ' ans' → logprob: -1.2889877557754517
    3. '   ' → logprob: -2.788987636566162
    4. '	ans' → logprob: -7.038987636566162
    5. 'if' → logprob: -7.538987636566162
    6. ' if' → logprob: -8.03898811340332
    7. '    ' → logprob: -9.91398811340332
    8. '(ans' → logprob: -10.03898811340332
    9. '  ' → logprob: -10.91398811340332
    10. '    
' → logprob: -10.91398811340332

Token 472: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.2429034411907196
    2. 'else' → logprob: -1.992903470993042
    3. 'ain' → logprob: -3.867903470993042
    4. 'placer' → logprob: -4.117903232574463
    5. 'ains' → logprob: -4.742903232574463
    6. 'append' → logprob: -4.742903232574463
    7. 'et' → logprob: -5.242903232574463
    8. 'ove' → logprob: -5.617903232574463
    9. 'plit' → logprob: -5.992903232574463
    10. 'ans' → logprob: -5.992903232574463

Token 473: ' n' (ID: 297)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.34562844038009644
    2. 'ans' → logprob: -1.9706284999847412
    3. '   ' → logprob: -2.345628499984741
    4. '(ans' → logprob: -3.845628499984741
    5. ' if' → logprob: -3.970628499984741
    6. 'if' → logprob: -4.595628261566162
    7. '    ' → logprob: -6.095628261566162
    8. '('' → logprob: -6.470628261566162
    9. ' ' → logprob: -7.345628261566162
    10. '	ans' → logprob: -7.845628261566162

Token 474: ''importe' (ID: 103032)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.5524609088897705
    2. 'o' → logprob: -1.4274609088897705
    3. ''' → logprob: -2.6774609088897705
    4. 'on' → logprob: -3.6774609088897705
    5. '   ' → logprob: -4.052460670471191
    6. 'ans' → logprob: -4.427460670471191
    7. 'else' → logprob: -4.677460670471191
    8. ''a' → logprob: -4.802460670471191
    9. ''o' → logprob: -4.802460670471191
    10. 'a' → logprob: -5.427460670471191

Token 475: ' quel' (ID: 10613)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.4272505044937134
    2. ''importe' → logprob: -1.5522505044937134
    3. 'o' → logprob: -2.552250385284424
    4. 'pas' → logprob: -2.552250385284424
    5. 'u' → logprob: -2.802250385284424
    6. 'importe' → logprob: -2.927250385284424
    7. 'else' → logprob: -2.927250385284424
    8. 'e' → logprob: -3.177250385284424
    9. 'if' → logprob: -3.427250385284424
    10. '   ' → logprob: -3.552250385284424

Token 476: ' autre' (ID: 20278)
  Prédit: ''autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''autre' → logprob: -0.17973823845386505
    2. 'c' → logprob: -3.0547382831573486
    3. ' autre' → logprob: -3.0547382831573486
    4. 'car' → logprob: -3.1797382831573486
    5. 'aut' → logprob: -3.9297382831573486
    6. ' c' → logprob: -5.8047380447387695
    7. ''aut' → logprob: -6.6797380447387695
    8. ' caractère' → logprob: -7.0547380447387695
    9. 'e' → logprob: -7.1797380447387695
    10. ' car' → logprob: -7.3047380447387695

Token 477: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4481624364852905
    2. 'c' → logprob: -1.1981624364852905
    3. 'ch' → logprob: -3.82316255569458
    4. '9' → logprob: -4.69816255569458
    5. ' c' → logprob: -4.94816255569458
    6. ''' → logprob: -5.19816255569458
    7. ' caractère' → logprob: -5.69816255569458
    8. ' caract' → logprob: -5.82316255569458
    9. 'char' → logprob: -6.07316255569458
    10. 'character' → logprob: -6.19816255569458

Token 478: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2416093796491623
    2. ' by' → logprob: -2.7416093349456787
    3. 'else' → logprob: -2.9916093349456787
    4. 'with' → logprob: -4.241609573364258
    5. 'by' → logprob: -4.366609573364258
    6. 'ans' → logprob: -4.491609573364258
    7. '('' → logprob: -4.491609573364258
    8. '.append' → logprob: -4.616609573364258
    9. '(ans' → logprob: -4.741609573364258
    10. '=' → logprob: -4.991609573364258

Token 479: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005059060174971819
    2. ' '' → logprob: -5.380059242248535
    3. '   ' → logprob: -8.505059242248535
    4. 'c' → logprob: -8.880059242248535
    5. ' ' → logprob: -11.005059242248535
    6. ' c' → logprob: -11.255059242248535
    7. 'str' → logprob: -11.380059242248535
    8. 'ans' → logprob: -11.505059242248535
    9. '"' → logprob: -11.630059242248535
    10. '0' → logprob: -12.130059242248535

Token 480: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0174357108771801
    2. '0' → logprob: -4.892435550689697
    3. '1' → logprob: -5.142435550689697
    4. '8' → logprob: -6.017435550689697
    5. 'c' → logprob: -6.767435550689697
    6. '9' → logprob: -8.642436027526855
    7. ' '' → logprob: -10.142436027526855
    8. 'str' → logprob: -10.392436027526855
    9. '6' → logprob: -11.017436027526855
    10. '7' → logprob: -11.267436027526855

Token 481: ''.
' (ID: 49980)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002911265939474106
    2. '')
' → logprob: -6.12791109085083
    3. '9' → logprob: -7.75291109085083
    4. ''' → logprob: -8.377911567687988
    5. '1' → logprob: -10.002911567687988
    6. '')

' → logprob: -12.127911567687988
    7. '")' → logprob: -12.252911567687988
    8. ')' → logprob: -13.127911567687988
    9. ' ')' → logprob: -13.252911567687988
    10. ''):
' → logprob: -13.502911567687988

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5182017087936401
    2. 'else' → logprob: -1.0182017087936401
    3. ' else' → logprob: -3.1432018280029297
    4. '	else' → logprob: -11.51820182800293
    5. 'elif' → logprob: -12.64320182800293
    6. '  ' → logprob: -13.76820182800293
    7. '<|end|>' → logprob: -13.89320182800293
    8. '       ' → logprob: -14.01820182800293
    9. 'e' → logprob: -14.26820182800293
    10. ':' → logprob: -14.39320182800293

Token 483: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.042495712637901306
    2. ' else' → logprob: -3.2924957275390625
    3. '   ' → logprob: -5.4174957275390625
    4. 'elif' → logprob: -12.917495727539062
    5. '	else' → logprob: -13.167495727539062
    6. 'e' → logprob: -14.542495727539062
    7. 'els' → logprob: -14.792495727539062
    8. ' ' → logprob: -15.667495727539062
    9. '  ' → logprob: -15.667495727539062
    10. 'elser' → logprob: -16.542495727539062

Token 484: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5133085250854492
    2. '       ' → logprob: -1.2633085250854492
    3. ':' → logprob: -2.138308525085449
    4. '   ' → logprob: -7.013308525085449
    5. '):
' → logprob: -12.38830852508545
    6. '      ' → logprob: -12.76330852508545
    7. ':
' → logprob: -13.13830852508545
    8. ' :
' → logprob: -13.13830852508545
    9. '     ' → logprob: -13.38830852508545
    10. ':

' → logprob: -14.63830852508545

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18368692696094513
    2. '   ' → logprob: -1.9336869716644287
    3. 'ans' → logprob: -3.8086869716644287
    4. ' ans' → logprob: -6.93368673324585
    5. '	ans' → logprob: -10.308687210083008
    6. '(ans' → logprob: -13.808687210083008
    7. '           ' → logprob: -14.058687210083008
    8. '   ' → logprob: -14.683687210083008
    9. '      ' → logprob: -15.058687210083008
    10. '     ' → logprob: -15.183687210083008

Token 486: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.25
    3. '   ' → logprob: -18.875
    4. '	ans' → logprob: -19.375
    5. '       ' → logprob: -21.625
    6. '(ans' → logprob: -22.5
    7. '_ans' → logprob: -22.75
    8. '           ' → logprob: -23.25
    9. 'answer' → logprob: -23.5
    10. ' ' → logprob: -23.75

Token 487: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005535095697268844
    2. '.' → logprob: -7.500553607940674
    3. '.app' → logprob: -14.875553131103516
    4. ' .' → logprob: -16.875553131103516
    5. 'append' → logprob: -17.375553131103516
    6. '.ap' → logprob: -17.500553131103516
    7. '.extend' → logprob: -18.000553131103516
    8. '.Append' → logprob: -18.250553131103516
    9. 'app' → logprob: -20.500553131103516
    10. '.push' → logprob: -20.750553131103516

Token 488: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5332478142227046e-05
    2. ''' → logprob: -11.250015258789062
    3. '(' → logprob: -13.000015258789062
    4. '("' → logprob: -17.750015258789062
    5. '(
' → logprob: -18.375015258789062
    6. ' ('' → logprob: -19.375015258789062
    7. ''s' → logprob: -20.125015258789062
    8. ' '' → logprob: -20.875015258789062
    9. '
' → logprob: -21.375015258789062
    10. '()' → logprob: -21.375015258789062

Token 489: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16031521558761597
    2. '1' → logprob: -1.9103152751922607
    3. '9' → logprob: -9.53531551361084
    4. '"' → logprob: -11.53531551361084
    5. ' '' → logprob: -12.16031551361084
    6. '('' → logprob: -13.91031551361084
    7. '`' → logprob: -14.03531551361084
    8. '')' → logprob: -14.41031551361084
    9. ' ' → logprob: -15.28531551361084
    10. '''' → logprob: -15.91031551361084

Token 490: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1270325779914856
    2. ')' → logprob: -2.127032518386841
    3. '")' → logprob: -9.502032279968262
    4. '<|end|>' → logprob: -11.127032279968262
    5. ''' → logprob: -11.877032279968262
    6. '')
' → logprob: -12.377032279968262
    7. '```' → logprob: -14.127032279968262
    8. '   ' → logprob: -14.252032279968262
    9. '`)' → logprob: -14.502032279968262
    10. ')
' → logprob: -14.752032279968262

Token 491: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009765983559191227
    2. 'result' → logprob: -7.1259765625
    3. '#' → logprob: -9.1259765625
    4. '<|end|>' → logprob: -10.6259765625
    5. ' print' → logprob: -11.6259765625
    6. 'output' → logprob: -11.6259765625
    7. '```' → logprob: -12.1259765625
    8. ')' → logprob: -12.2509765625
    9. 'answer' → logprob: -12.3759765625
    10. '#print' → logprob: -12.5009765625

Token 492: ' Con' (ID: 1532)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '#' → logprob: -15.0
    3. ' print' → logprob: -16.5
    4. 'result' → logprob: -17.625
    5. 'prin' → logprob: -18.375
    6. 'pr' → logprob: -18.5
    7. '#print' → logprob: -18.875
    8. '```' → logprob: -19.5
    9. 'for' → logprob: -20.5
    10. 'answer' → logprob: -20.5

Token 493: 'cat' (ID: 8837)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15447905659675598
    2. 'vert' → logprob: -2.1544790267944336
    3. 'cat' → logprob: -4.029479026794434
    4. 'struct' → logprob: -5.904479026794434
    5. 'print' → logprob: -6.404479026794434
    6. '```' → logprob: -6.529479026794434
    7. 's' → logprob: -6.779479026794434
    8. 'st' → logprob: -7.154479026794434
    9. 'nect' → logprob: -7.154479026794434
    10. 'n' → logprob: -8.654479026794434

Token 494: 'ène' (ID: 22902)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.925196647644043
    2. 'e' → logprob: -1.300196647644043
    3. 'ene' → logprob: -1.300196647644043
    4. 'ate' → logprob: -3.425196647644043
    5. 'ène' → logprob: -4.675196647644043
    6. '```' → logprob: -5.550196647644043
    7. 'en' → logprob: -5.800196647644043
    8. '='' → logprob: -6.175196647644043
    9. ''' → logprob: -6.675196647644043
    10. '=' → logprob: -6.800196647644043

Token 495: ' la' (ID: 557)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.0465264320373535
    2. '''' → logprob: -1.2965264320373535
    3. '''.' → logprob: -1.5465264320373535
    4. '('' → logprob: -2.2965264320373535
    5. '"' → logprob: -3.2965264320373535
    6. '("")' → logprob: -4.7965264320373535
    7. '('').' → logprob: -5.1715264320373535
    8. 'ans' → logprob: -5.4215264320373535
    9. '''
' → logprob: -6.6715264320373535
    10. '("").' → logprob: -6.9215264320373535

Token 496: ' liste' (ID: 31719)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0869334489107132
    2. '''.' → logprob: -2.5869333744049072
    3. '""' → logprob: -4.961933612823486
    4. '''' → logprob: -7.086933612823486
    5. ''' → logprob: -9.961933135986328
    6. '''
' → logprob: -10.086933135986328
    7. 'print' → logprob: -10.461933135986328
    8. ' ''.' → logprob: -10.711933135986328
    9. ' "".' → logprob: -10.711933135986328
    10. 'str' → logprob: -12.336933135986328

Token 497: ' des' (ID: 731)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10660925507545471
    2. '(ans' → logprob: -3.106609344482422
    3. '('' → logprob: -3.606609344482422
    4. '("")' → logprob: -4.231609344482422
    5. '('').' → logprob: -5.731609344482422
    6. '""' → logprob: -6.106609344482422
    7. 'join' → logprob: -6.231609344482422
    8. ' ans' → logprob: -6.606609344482422
    9. '('',' → logprob: -6.606609344482422
    10. '("").' → logprob: -7.231609344482422

Token 498: ' caractères' (ID: 183106)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000462366413557902
    2. ' ans' → logprob: -7.750462532043457
    3. 'strings' → logprob: -11.125462532043457
    4. 'chaine' → logprob: -11.750462532043457
    5. 'chars' → logprob: -12.625462532043457
    6. '(ans' → logprob: -13.125462532043457
    7. 'chain' → logprob: -14.125462532043457
    8. ' chaînes' → logprob: -14.500462532043457
    9. 'cha' → logprob: -14.625462532043457
    10. 'str' → logprob: -14.625462532043457

Token 499: ' en' (ID: 469)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.8290174007415771
    2. 'join' → logprob: -2.079017400741577
    3. '("")' → logprob: -2.204017400741577
    4. 'ans' → logprob: -2.329017400741577
    5. '('' → logprob: -2.329017400741577
    6. '.join' → logprob: -2.454017400741577
    7. '('').' → logprob: -2.454017400741577
    8. '''.' → logprob: -2.954017400741577
    9. '''' → logprob: -3.329017400741577
    10. 'return' → logprob: -3.579017400741577

Token 500: ' une' (ID: 2463)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6391122341156006
    2. '''.' → logprob: -1.3891122341156006
    3. '""' → logprob: -2.3891122341156006
    4. 'une' → logprob: -3.0141122341156006
    5. '"' → logprob: -3.2641122341156006
    6. ' une' → logprob: -4.01411247253418
    7. ''une' → logprob: -4.76411247253418
    8. ' ''.' → logprob: -4.88911247253418
    9. ''' → logprob: -5.76411247253418
    10. 'chaine' → logprob: -6.38911247253418

Token 501: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.11181864142417908
    2. 'string' → logprob: -2.611818552017212
    3. ' chaîne' → logprob: -3.736818552017212
    4. 'chain' → logprob: -5.611818790435791
    5. 'str' → logprob: -6.111818790435791
    6. 'cha' → logprob: -6.736818790435791
    7. '''' → logprob: -7.611818790435791
    8. '''.' → logprob: -8.111818313598633
    9. ' chaine' → logprob: -8.111818313598633
    10. '""' → logprob: -8.611818313598633

Token 502: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9283255934715271
    2. '''.' → logprob: -1.6783256530761719
    3. 'print' → logprob: -2.303325653076172
    4. '""' → logprob: -2.428325653076172
    5. 'join' → logprob: -2.428325653076172
    6. '''' → logprob: -2.553325653076172
    7. '"' → logprob: -4.053325653076172
    8. '.join' → logprob: -4.678325653076172
    9. 'ans' → logprob: -4.803325653076172
    10. 'return' → logprob: -5.053325653076172

Token 503: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.941850526549388e-06
    2. ' print' → logprob: -11.750007629394531
    3. 'prin' → logprob: -18.37500762939453
    4. 'pr' → logprob: -18.62500762939453
    5. '```' → logprob: -21.87500762939453
    6. '_print' → logprob: -21.87500762939453
    7. '
' → logprob: -22.25000762939453
    8. 'prit' → logprob: -22.37500762939453
    9. '.print' → logprob: -22.75000762939453
    10. '#print' → logprob: -22.87500762939453

Token 504: ' le' (ID: 505)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.15938206017017365
    2. '("' → logprob: -2.4093821048736572
    3. '(' → logprob: -2.9093821048736572
    4. '(ans' → logprob: -6.034381866455078
    5. '(
' → logprob: -7.909381866455078
    6. '()' → logprob: -9.409381866455078
    7. '(""' → logprob: -10.534381866455078
    8. '"' → logprob: -10.784381866455078
    9. '("")' → logprob: -11.159381866455078
    10. 'ans' → logprob: -11.409381866455078

Token 505: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.022806990891695023
    2. 'rés' → logprob: -4.7728071212768555
    3. '('' → logprob: -5.2728071212768555
    4. '()' → logprob: -6.0228071212768555
    5. 'final' → logprob: -6.1478071212768555
    6. 'ans' → logprob: -6.3978071212768555
    7. ' result' → logprob: -6.8978071212768555
    8. ' résultat' → logprob: -7.5228071212768555
    9. 'print' → logprob: -8.272807121276855
    10. '.' → logprob: -9.147807121276855

Token 506: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3902033970225602e-05
    2. '
' → logprob: -11.250014305114746
    3. ' print' → logprob: -14.250014305114746
    4. '```' → logprob: -16.50001335144043
    5. 'prin' → logprob: -18.50001335144043
    6. 'pr' → logprob: -19.00001335144043
    7. '.print' → logprob: -19.00001335144043
    8. ',' → logprob: -19.37501335144043
    9. '
' → logprob: -19.50001335144043
    10. '(print' → logprob: -19.75001335144043

Token 507: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. '
' → logprob: -11.375012397766113
    3. ' print' → logprob: -13.750012397766113
    4. '```' → logprob: -15.500012397766113
    5. '.print' → logprob: -18.50001335144043
    6. 'pr' → logprob: -18.87501335144043
    7. '(print' → logprob: -19.00001335144043
    8. ',' → logprob: -19.00001335144043
    9. '
' → logprob: -19.25001335144043
    10. '``' → logprob: -19.62501335144043

Token 508: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.625
    3. '```' → logprob: -21.875
    4. 'pr' → logprob: -22.625
    5. 'prin' → logprob: -23.5
    6. '
' → logprob: -24.625
    7. 'pri' → logprob: -26.875
    8. '	print' → logprob: -27.0
    9. '`' → logprob: -27.5
    10. 'prit' → logprob: -27.5

Token 509: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3873227834701538
    2. '("' → logprob: -1.1373227834701538
    3. '(' → logprob: -7.762322902679443
    4. '(""' → logprob: -11.012322425842285
    5. '("")' → logprob: -12.012322425842285
    6. '"' → logprob: -13.262322425842285
    7. '('').' → logprob: -14.762322425842285
    8. '''.' → logprob: -14.887322425842285
    9. '("").' → logprob: -15.012322425842285
    10. '()' → logprob: -15.262322425842285

Token 510: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.2830483317375183
    2. '''.' → logprob: -1.533048391342163
    3. ''' → logprob: -3.533048391342163
    4. '''' → logprob: -7.533048152923584
    5. '')' → logprob: -7.658048152923584
    6. '9' → logprob: -8.658048629760742
    7. ' ''.' → logprob: -8.783048629760742
    8. '').' → logprob: -10.283048629760742
    9. '".' → logprob: -10.783048629760742
    10. '"' → logprob: -11.283048629760742

Token 511: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.5
    3. 'print' → logprob: -17.5
    4. '''.' → logprob: -18.0
    5. 'jo' → logprob: -18.125
    6. 'j' → logprob: -18.25
    7. '```' → logprob: -19.625
    8. '.join' → logprob: -19.875
    9. '(join' → logprob: -20.375
    10. ')' → logprob: -21.625

Token 512: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007099286303855479
    2. 'ans' → logprob: -7.2507100105285645
    3. '	ans' → logprob: -17.500709533691406
    4. ')' → logprob: -18.375709533691406
    5. ' ans' → logprob: -20.000709533691406
    6. '_ans' → logprob: -20.125709533691406
    7. '(' → logprob: -20.625709533691406
    8. '(answer' → logprob: -21.250709533691406
    9. 'Ans' → logprob: -21.500709533691406
    10. 'ANS' → logprob: -21.625709533691406

Token 513: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03804194927215576
    2. ')' → logprob: -3.2880420684814453
    3. ')))' → logprob: -15.788042068481445
    4. ''))' → logprob: -16.413042068481445
    5. '))
' → logprob: -16.663042068481445
    6. '()))' → logprob: -17.038042068481445
    7. '())' → logprob: -17.538042068481445
    8. ')
' → logprob: -18.038042068481445
    9. '])' → logprob: -18.038042068481445
    10. '()' → logprob: -18.538042068481445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 511
Tokens correctement prédits (1ère position, stricte): 164
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 348
Précision stricte (1ère position): 32.09%
Précision adaptée (1ère position): 34.64%
Précision (top 10): 68.10%
================================================================================
