================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
first_input_number, second_input_number = map(int, input().split())

maximum_input_number = max(first_input_number, second_input_number)

threshold_value = 8

if maximum_input_number > threshold_value:
    print(':(')
else:
    print('Yay!')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'first' (ID: 7743)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31811878085136414
    2. '+' → logprob: -2.3181188106536865
    3. '[' → logprob: -2.5681188106536865
    4. '=' → logprob: -3.4431188106536865
    5. ')' → logprob: -4.068118572235107
    6. ' +' → logprob: -4.318118572235107
    7. ' =' → logprob: -4.318118572235107
    8. '.' → logprob: -5.068118572235107
    9. '```' → logprob: -5.193118572235107
    10. ' ' → logprob: -5.443118572235107

Token 4: ' second' (ID: 3099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09978513419628143
    2. '_' → logprob: -3.099785089492798
    3. '=' → logprob: -3.599785089492798
    4. ' =' → logprob: -4.974785327911377
    5. 'second' → logprob: -5.599785327911377
    6. ' ,' → logprob: -6.224785327911377
    7. 'first' → logprob: -6.224785327911377
    8. 'space' → logprob: -6.974785327911377
    9. ')' → logprob: -7.224785327911377
    10. ',' → logprob: -7.349785327911377

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006200145464390516
    2. '_number' → logprob: -6.006200313568115
    3. '```' → logprob: -7.131200313568115
    4. ')_' → logprob: -7.256200313568115
    5. ')' → logprob: -7.381200313568115
    6. ' _' → logprob: -8.131199836730957
    7. '_input' → logprob: -8.131199836730957
    8. '_token' → logprob: -8.631199836730957
    9. '._' → logprob: -9.131199836730957
    10. '.' → logprob: -9.506199836730957

Token 6: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3088895380496979
    2. '=' → logprob: -1.6838895082473755
    3. ')' → logprob: -3.558889627456665
    4. '+' → logprob: -3.683889627456665
    5. ' =' → logprob: -4.808889389038086
    6. ',' → logprob: -5.058889389038086
    7. '.' → logprob: -5.433889389038086
    8. '```' → logprob: -5.683889389038086
    9. '*' → logprob: -6.683889389038086
    10. ':' → logprob: -7.433889389038086

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5487768054008484
    2. '+' → logprob: -1.4237768650054932
    3. '=' → logprob: -1.7987768650054932
    4. ' =' → logprob: -5.173776626586914
    5. '```' → logprob: -5.798776626586914
    6. '*' → logprob: -6.423776626586914
    7. ')' → logprob: -6.423776626586914
    8. ',' → logprob: -6.673776626586914
    9. ' ' → logprob: -7.298776626586914
    10. ' +' → logprob: -7.298776626586914

Token 8: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7719160914421082
    2. ' input' → logprob: -1.146916151046753
    3. ' ' → logprob: -1.896916151046753
    4. '0' → logprob: -2.896916151046753
    5. ' int' → logprob: -4.521915912628174
    6. 'int' → logprob: -5.896915912628174
    7. ' map' → logprob: -7.521915912628174
    8. 'map' → logprob: -8.646916389465332
    9. ' [' → logprob: -9.021916389465332
    10. ' []' → logprob: -9.521916389465332

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3965665400028229
    2. '<|end|>' → logprob: -1.7715665102005005
    3. '(lambda' → logprob: -2.14656662940979
    4. '```' → logprob: -4.021566390991211
    5. '(int' → logprob: -4.521566390991211
    6. '<|end|>' → logprob: -5.771566390991211
    7. ')' → logprob: -7.021566390991211
    8. '(str' → logprob: -7.146566390991211
    9. '[int' → logprob: -7.521566390991211
    10. '(user' → logprob: -7.709066390991211

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04161149263381958
    2. ')' → logprob: -3.791611433029175
    3. 'input' → logprob: -5.166611671447754
    4. '(' → logprob: -5.291611671447754
    5. '(user' → logprob: -5.416611671447754
    6. '('' → logprob: -7.291611671447754
    7. '(first' → logprob: -7.416611671447754
    8. ' input' → logprob: -7.791611671447754
    9. '```' → logprob: -8.416611671447754
    10. '(raw' → logprob: -9.041611671447754

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009787139482796192
    2. ' input' → logprob: -4.634787082672119
    3. ')' → logprob: -10.884787559509277
    4. '(input' → logprob: -11.634787559509277
    5. 'user' → logprob: -13.259787559509277
    6. 'first' → logprob: -14.384787559509277
    7. ',input' → logprob: -15.259787559509277
    8. '```' → logprob: -15.884787559509277
    9. '[input' → logprob: -15.884787559509277
    10. '<input' → logprob: -16.13478660583496

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5415112972259521
    2. '())' → logprob: -1.2915112972259521
    3. '(' → logprob: -2.416511297225952
    4. ')' → logprob: -3.291511297225952
    5. '(()' → logprob: -5.541511535644531
    6. '().' → logprob: -5.666511535644531
    7. '();)' → logprob: -6.416511535644531
    8. '('' → logprob: -6.791511535644531
    9. '());' → logprob: -6.916511535644531
    10. '()))' → logprob: -7.666511535644531

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.301394023466855e-05
    2. 'strip' → logprob: -9.750062942504883
    3. ' split' → logprob: -13.625062942504883
    4. ')' → logprob: -13.750062942504883
    5. 'rstrip' → logprob: -13.875062942504883
    6. 'spl' → logprob: -14.000062942504883
    7. 'startswith' → logprob: -15.000062942504883
    8. '(split' → logprob: -15.625062942504883
    9. 'replace' → logprob: -16.625062942504883
    10. 'plit' → logprob: -17.250062942504883

Token 14: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.132624089717865
    2. ')' → logprob: -2.1326241493225098
    3. '()' → logprob: -5.63262414932251
    4. '))' → logprob: -6.75762414932251
    5. '()))' → logprob: -7.38262414932251
    6. '`)' → logprob: -9.382623672485352
    7. '(' → logprob: -9.382623672485352
    8. ' ())' → logprob: -10.007623672485352
    9. '`()' → logprob: -11.382623672485352
    10. '```' → logprob: -11.632623672485352

Token 15: 'maximum' (ID: 78601)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1339128315448761
    2. '#' → logprob: -2.5089128017425537
    3. '*' → logprob: -4.633913040161133
    4. '+
' → logprob: -4.633913040161133
    5. '\n' → logprob: -5.383913040161133
    6. '.' → logprob: -5.633913040161133
    7. '<|end|>' → logprob: -6.008913040161133
    8. ',' → logprob: -6.133913040161133
    9. '
' → logprob: -6.258913040161133
    10. '\' → logprob: -6.383913040161133

Token 16: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3200232684612274
    2. '_' → logprob: -1.3200232982635498
    3. '()' → logprob: -6.570023059844971
    4. '(_)' → logprob: -6.695023059844971
    5. '_max' → logprob: -6.945023059844971
    6. ')' → logprob: -7.070023059844971
    7. '(max' → logprob: -7.445023059844971
    8. '```' → logprob: -7.820023059844971
    9. '_parent' → logprob: -7.945023059844971
    10. '_space' → logprob: -8.820023536682129

Token 17: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0017107593594118953
    2. '_space' → logprob: -7.626710891723633
    3. '_value' → logprob: -8.376710891723633
    4. '(' → logprob: -8.751710891723633
    5. '_max' → logprob: -8.876710891723633
    6. '()' → logprob: -9.001710891723633
    7. ')' → logprob: -9.126710891723633
    8. '_number' → logprob: -9.251710891723633
    9. '_)' → logprob: -10.001710891723633
    10. '_length' → logprob: -10.376710891723633

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42520633339881897
    2. ')' → logprob: -1.6752063035964966
    3. '<|end|>' → logprob: -2.550206422805786
    4. '_max' → logprob: -2.925206422805786
    5. 'max' → logprob: -5.300206184387207
    6. '=' → logprob: -5.300206184387207
    7. '>' → logprob: -5.300206184387207
    8. '```' → logprob: -5.550206184387207
    9. ' =' → logprob: -6.050206184387207
    10. '.' → logprob: -7.300206184387207

Token 19: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.014168208464980125
    2. 'max' → logprob: -4.2641682624816895
    3. ' ' → logprob: -12.889167785644531
    4. ' first' → logprob: -14.014167785644531
    5. '(max' → logprob: -14.139167785644531
    6. ' maximum' → logprob: -14.889167785644531
    7. '	max' → logprob: -16.13916778564453
    8. ' ' → logprob: -17.38916778564453
    9. ',max' → logprob: -17.51416778564453
    10. ' int' → logprob: -17.51416778564453

Token 20: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.5769537687301636
    2. '(' → logprob: -0.8269537687301636
    3. '(max' → logprob: -7.201953887939453
    4. '(second' → logprob: -8.451953887939453
    5. '((' → logprob: -11.326953887939453
    6. '(f' → logprob: -11.451953887939453
    7. '(
' → logprob: -11.951953887939453
    8. ' (' → logprob: -12.201953887939453
    9. '()' → logprob: -13.076953887939453
    10. '(_' → logprob: -13.326953887939453

Token 21: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00865404587239027
    2. '_' → logprob: -4.7586541175842285
    3. ')_' → logprob: -11.63365364074707
    4. '_in' → logprob: -12.00865364074707
    5. ' _' → logprob: -12.13365364074707
    6. '_output' → logprob: -12.25865364074707
    7. ')' → logprob: -12.38365364074707
    8. '_inputs' → logprob: -13.00865364074707
    9. '_)' → logprob: -13.38365364074707
    10. '_number' → logprob: -13.63365364074707

Token 22: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0013160702073946595
    2. '_' → logprob: -6.876316070556641
    3. '_n' → logprob: -9.50131607055664
    4. '_)' → logprob: -9.75131607055664
    5. ')_' → logprob: -10.00131607055664
    6. '_input' → logprob: -10.25131607055664
    7. ')' → logprob: -10.37631607055664
    8. '_num' → logprob: -11.37631607055664
    9. '_numbers' → logprob: -11.75131607055664
    10. '_second' → logprob: -12.12631607055664

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.992775888647884e-05
    2. ')' → logprob: -10.000069618225098
    3. ' ,' → logprob: -10.875069618225098
    4. 'second' → logprob: -13.250069618225098
    5. ',)' → logprob: -13.500069618225098
    6. ',
' → logprob: -13.750069618225098
    7. ',

' → logprob: -14.500069618225098
    8. '),' → logprob: -15.750069618225098
    9. '_second' → logprob: -16.375070571899414
    10. ' second' → logprob: -16.375070571899414

Token 24: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.003185436362400651
    2. 'second' → logprob: -5.753185272216797
    3. ' ' → logprob: -12.003185272216797
    4. ' ' → logprob: -14.003185272216797
    5. '	second' → logprob: -14.753185272216797
    6. '(second' → logprob: -15.628185272216797
    7. '_second' → logprob: -16.128185272216797
    8. '.second' → logprob: -17.003185272216797
    9. ' s' → logprob: -17.378185272216797
    10. ' secon' → logprob: -18.003185272216797

Token 25: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00011439072113716975
    2. '_' → logprob: -9.500114440917969
    3. ')_' → logprob: -10.500114440917969
    4. '_output' → logprob: -12.625114440917969
    5. ')' → logprob: -12.750114440917969
    6. '_in' → logprob: -12.875114440917969
    7. ' _' → logprob: -14.125114440917969
    8. '_i' → logprob: -15.125114440917969
    9. '_number' → logprob: -15.125114440917969
    10. '_user' → logprob: -15.375114440917969

Token 26: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.306760805164231e-05
    2. 'number' → logprob: -11.37501335144043
    3. '_' → logprob: -14.37501335144043
    4. '_input' → logprob: -14.75001335144043
    5. '_n' → logprob: -15.12501335144043
    6. '_numbers' → logprob: -16.00001335144043
    7. ')_' → logprob: -16.12501335144043
    8. 'Number' → logprob: -17.12501335144043
    9. 'umber' → logprob: -17.12501335144043
    10. '_NUMBER' → logprob: -17.50001335144043

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -15.625000953674316
    4. '')' → logprob: -15.750000953674316
    5. '`)' → logprob: -16.125001907348633
    6. ')
' → logprob: -16.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. '),' → logprob: -17.625001907348633
    9. '()' → logprob: -18.125001907348633
    10. '")' → logprob: -18.625001907348633

Token 28: 'threshold' (ID: 67677)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.301820158958435
    2. 'print' → logprob: -1.301820158958435
    3. ')' → logprob: -1.551820158958435
    4. '
' → logprob: -3.1768202781677246
    5. '*' → logprob: -3.3018202781677246
    6. '<|end|>' → logprob: -3.4268202781677246
    7. '.' → logprob: -3.6768202781677246
    8. ',' → logprob: -4.176820278167725
    9. '```' → logprob: -4.551820278167725
    10. '#' → logprob: -4.551820278167725

Token 29: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011258839629590511
    2. ' =' → logprob: -4.886258602142334
    3. '=' → logprob: -6.386258602142334
    4. ' _' → logprob: -6.761258602142334
    5. '_space' → logprob: -8.011259078979492
    6. ')' → logprob: -8.511259078979492
    7. '>' → logprob: -9.136259078979492
    8. '_=' → logprob: -10.011259078979492
    9. ' ' → logprob: -11.011259078979492
    10. '_threshold' → logprob: -11.636259078979492

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2295697033405304
    2. '=' → logprob: -1.729569673538208
    3. '_' → logprob: -3.604569673538208
    4. ' _' → logprob: -8.729569435119629
    5. '>' → logprob: -8.854569435119629
    6. ' ' → logprob: -9.104569435119629
    7. ')' → logprob: -10.354569435119629
    8. ' >' → logprob: -10.729569435119629
    9. '_space' → logprob: -10.854569435119629
    10. '_=' → logprob: -10.979569435119629

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4958330988883972
    2. ' maximum' → logprob: -1.370833158493042
    3. ' max' → logprob: -2.870833158493042
    4. '10' → logprob: -3.245833158493042
    5. 'maximum' → logprob: -3.745833158493042
    6. '100' → logprob: -4.370832920074463
    7. 'max' → logprob: -5.745832920074463
    8. ' int' → logprob: -7.495832920074463
    9. '50' → logprob: -7.995832920074463
    10. '5' → logprob: -7.995832920074463

Token 32: '8' (ID: 23)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.6937977075576782
    2. '100' → logprob: -1.4437977075576782
    3. '10' → logprob: -1.9437977075576782
    4. 'max' → logprob: -2.9437975883483887
    5. ' ' → logprob: -3.6937975883483887
    6. ' maximum' → logprob: -3.8187975883483887
    7. '50' → logprob: -4.693797588348389
    8. 'minimum' → logprob: -5.318797588348389
    9. ' max' → logprob: -5.568797588348389
    10. '0' → logprob: -6.943797588348389

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9567904472351074
    2. 'if' → logprob: -0.9567904472351074
    3. ' if' → logprob: -2.3317904472351074
    4. '<|end|>' → logprob: -2.9567904472351074
    5. ' ' → logprob: -4.081790447235107
    6. '.' → logprob: -4.331790447235107
    7. ':' → logprob: -4.831790447235107
    8. '```' → logprob: -4.956790447235107
    9. ')' → logprob: -5.206790447235107
    10. '

' → logprob: -5.206790447235107

Token 34: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18542198836803436
    2. '
' → logprob: -2.435421943664551
    3. ' if' → logprob: -3.060421943664551
    4. ':' → logprob: -3.935421943664551
    5. 'i' → logprob: -4.935421943664551
    6. ')' → logprob: -6.560421943664551
    7. 'print' → logprob: -7.310421943664551
    8. '-' → logprob: -7.435421943664551
    9. '<|end|>' → logprob: -7.435421943664551
    10. ' ' → logprob: -7.560421943664551

Token 35: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.001297258073464036
    2. ' ' → logprob: -7.126297473907471
    3. 'maximum' → logprob: -7.626297473907471
    4. ' max' → logprob: -13.001296997070312
    5. ' ' → logprob: -13.751296997070312
    6. '  ' → logprob: -13.876296997070312
    7. ' first' → logprob: -14.251296997070312
    8. 'Maximum' → logprob: -16.251296997070312
    9. '.maximum' → logprob: -17.001296997070312
    10. ' maksimum' → logprob: -17.126296997070312

Token 36: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0010395983699709177
    2. '_' → logprob: -7.001039505004883
    3. '_output' → logprob: -9.626039505004883
    4. '_value' → logprob: -10.751039505004883
    5. ' _' → logprob: -11.001039505004883
    6. '_number' → logprob: -12.501039505004883
    7. '_in' → logprob: -12.501039505004883
    8. '_max' → logprob: -12.626039505004883
    9. '_inputs' → logprob: -13.001039505004883
    10. '>' → logprob: -13.126039505004883

Token 37: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00043567578541114926
    2. '_value' → logprob: -8.375435829162598
    3. '_' → logprob: -8.625435829162598
    4. '_n' → logprob: -11.750435829162598
    5. '_numbers' → logprob: -12.500435829162598
    6. '_num' → logprob: -12.625435829162598
    7. ' _' → logprob: -13.250435829162598
    8. ')_' → logprob: -13.250435829162598
    9. '```' → logprob: -13.750435829162598
    10. '_max' → logprob: -14.250435829162598

Token 38: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3686440885066986
    2. ' >=' → logprob: -1.243644118309021
    3. '>' → logprob: -4.1186442375183105
    4. '>=' → logprob: -6.1186442375183105
    5. ' <' → logprob: -7.1186442375183105
    6. ' <=' → logprob: -7.4936442375183105
    7. ' ' → logprob: -8.868643760681152
    8. '<' → logprob: -11.493643760681152
    9. '<=' → logprob: -12.743643760681152
    10. ' ' → logprob: -12.868643760681152

Token 39: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.00597785459831357
    2. 'threshold' → logprob: -5.380977630615234
    3. ' ' → logprob: -6.630977630615234
    4. ' thresh' → logprob: -10.630977630615234
    5. ' ' → logprob: -11.880977630615234
    6. '8' → logprob: -13.505977630615234
    7. '0' → logprob: -13.880977630615234
    8. '.threshold' → logprob: -14.130977630615234
    9. ' thresholds' → logprob: -14.380977630615234
    10. '_threshold' → logprob: -14.505977630615234

Token 40: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00035810720873996615
    2. '_' → logprob: -8.000358581542969
    3. '_val' → logprob: -10.875358581542969
    4. '_threshold' → logprob: -13.875358581542969
    5. ' _' → logprob: -14.250358581542969
    6. '_Value' → logprob: -14.750358581542969
    7. ':' → logprob: -15.125358581542969
    8. '```' → logprob: -15.500358581542969
    9. '_number' → logprob: -15.625358581542969
    10. '_variable' → logprob: -15.875358581542969

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.7053759519476444e-05
    2. ' :' → logprob: -9.875057220458984
    3. ':**' → logprob: -12.250057220458984
    4. ':
' → logprob: -15.375057220458984
    5. '):' → logprob: -15.625057220458984
    6. '>:' → logprob: -16.125057220458984
    7. '':' → logprob: -16.750057220458984
    8. '':'' → logprob: -17.125057220458984
    9. '：' → logprob: -17.250057220458984
    10. ':return' → logprob: -17.625057220458984

Token 42: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06910095363855362
    2. '   ' → logprob: -3.194100856781006
    3. ' 
' → logprob: -5.194100856781006
    4. '    
' → logprob: -5.319100856781006
    5. ' print' → logprob: -5.444100856781006
    6. 'print' → logprob: -5.569100856781006
    7. '    ' → logprob: -6.069100856781006
    8. '\' → logprob: -6.069100856781006
    9. '  
' → logprob: -7.819100856781006
    10. ' ' → logprob: -8.069101333618164

Token 43: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.022180013358592987
    2. 'print' (adapté à ' print') → logprob: -4.397180080413818
    3. '   ' → logprob: -4.897180080413818
    4. '    ' → logprob: -6.772180080413818
    5. ' pass' → logprob: -8.14717960357666
    6. '\n' → logprob: -8.64717960357666
    7. ' 
' → logprob: -8.64717960357666
    8. ' ' → logprob: -9.02217960357666
    9. '    
' → logprob: -9.77217960357666
    10. ' \' → logprob: -9.89717960357666

Token 44: '(':' (ID: 36524)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01314575970172882
    2. '('' → logprob: -5.388145923614502
    3. '(max' → logprob: -5.763145923614502
    4. '("("' → logprob: -5.888145923614502
    5. '("' → logprob: -6.013145923614502
    6. '(True' → logprob: -10.138145446777344
    7. '("")' → logprob: -10.263145446777344
    8. '()' → logprob: -10.763145446777344
    9. '(first' → logprob: -11.763145446777344
    10. ' (' → logprob: -12.263145446777344

Token 45: '('' (ID: 706)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35754427313804626
    2. '"' → logprob: -1.9825443029403687
    3. ''' → logprob: -2.732544183731079
    4. '')' → logprob: -4.107544422149658
    5. ' '' → logprob: -4.482544422149658
    6. '")' → logprob: -4.607544422149658
    7. ' "' → logprob: -4.732544422149658
    8. 'Maximum' → logprob: -4.857544422149658
    9. ' ' → logprob: -4.982544422149658
    10. ' ')' → logprob: -5.357544422149658

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034600140061229467
    2. '<|end|>' → logprob: -5.878459930419922
    3. ')
' → logprob: -8.003459930419922
    4. 'else' → logprob: -9.003459930419922
    5. '
' → logprob: -9.253459930419922
    6. '')' → logprob: -9.878459930419922
    7. ' else' → logprob: -11.628459930419922
    8. 'elif' → logprob: -11.878459930419922
    9. '```' → logprob: -11.878459930419922
    10. '<|end|>' → logprob: -11.878459930419922

Token 47: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04798886552453041
    2. '<|end|>' → logprob: -3.7979888916015625
    3. '
' → logprob: -4.7979888916015625
    4. ' else' → logprob: -5.2979888916015625
    5. 'elif' → logprob: -5.4229888916015625
    6. ')' → logprob: -5.6729888916015625
    7. '\n' → logprob: -6.2979888916015625
    8. '```' → logprob: -7.4229888916015625
    9. 'e' → logprob: -8.797988891601562
    10. '    
' → logprob: -9.047988891601562

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002371521550230682
    2. ':
' → logprob: -9.000237464904785
    3. '   ' → logprob: -9.125237464904785
    4. ' :' → logprob: -12.500237464904785
    5. '    ' → logprob: -15.250237464904785
    6. '):' → logprob: -16.00023651123047
    7. ':
' → logprob: -16.25023651123047
    8. ',' → logprob: -16.37523651123047
    9. '.' → logprob: -16.75023651123047
    10. '       ' → logprob: -16.75023651123047

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013409622013568878
    2. 'print' → logprob: -4.513409614562988
    3. ' print' → logprob: -6.513409614562988
    4. ' :)' → logprob: -7.763409614562988
    5. '😊' → logprob: -9.138409614562988
    6. ':)' → logprob: -9.263409614562988
    7. ' 😊' → logprob: -9.638409614562988
    8. '    ' → logprob: -10.138409614562988
    9. ' ' → logprob: -10.513409614562988
    10. '       ' → logprob: -11.138409614562988

Token 50: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.022844508290290833
    2. ' print' → logprob: -4.272844314575195
    3. '   ' → logprob: -5.022844314575195
    4. ':)' → logprob: -6.772844314575195
    5. ' :)' → logprob: -7.397844314575195
    6. '😊' → logprob: -9.272844314575195
    7. ' ' → logprob: -10.147844314575195
    8. ' 😊' → logprob: -10.897844314575195
    9. ':' → logprob: -11.022844314575195
    10. '(print' → logprob: -11.397844314575195

Token 51: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2342788577079773
    2. '(':' → logprob: -1.609278917312622
    3. '(' → logprob: -5.609278678894043
    4. '(":' → logprob: -5.734278678894043
    5. '('(' → logprob: -6.859278678894043
    6. '("' → logprob: -7.109278678894043
    7. '(';' → logprob: -11.484278678894043
    8. '(:' → logprob: -11.734278678894043
    9. '('?' → logprob: -11.984278678894043
    10. '('\' → logprob: -12.484278678894043

Token 52: 'Y' (ID: 56)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10209780186414719
    2. '')' → logprob: -2.727097749710083
    3. ':)' → logprob: -3.477097749710083
    4. ''):' → logprob: -8.727097511291504
    5. ''' → logprob: -8.852097511291504
    6. ')' → logprob: -9.602097511291504
    7. ''^' → logprob: -9.852097511291504
    8. '":' → logprob: -10.227097511291504
    9. '^)' → logprob: -10.227097511291504
    10. '):' → logprob: -10.227097511291504

Token 53: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.5478073954582214
    2. ')' → logprob: -2.547807455062866
    3. 'AY' → logprob: -2.672807455062866
    4. ':)' → logprob: -2.672807455062866
    5. '')' → logprob: -2.797807455062866
    6. '^' → logprob: -3.547807455062866
    7. '(^^' → logprob: -3.547807455062866
    8. '^)' → logprob: -4.047807216644287
    9. '(' → logprob: -4.297807216644287
    10. '(^' → logprob: -4.422807216644287

Token 54: '!' (ID: 0)
  Prédit: '!'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.00419652508571744
    2. '')' → logprob: -5.629196643829346
    3. ')' → logprob: -8.379196166992188
    4. '!)' → logprob: -8.504196166992188
    5. ':)' → logprob: -8.879196166992188
    6. '!")' → logprob: -10.879196166992188
    7. '!!!' → logprob: -13.629196166992188
    8. '!'' → logprob: -13.754196166992188
    9. '😊' → logprob: -14.004196166992188
    10. '!')
' → logprob: -14.254196166992188

Token 55: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002337708603590727
    2. ')' → logprob: -6.25233793258667
    3. '!' → logprob: -7.87733793258667
    4. ':)' → logprob: -10.752337455749512
    5. '")' → logprob: -12.502337455749512
    6. '!)' → logprob: -13.502337455749512
    7. '')
' → logprob: -13.752337455749512
    8. ''' → logprob: -14.127337455749512
    9. '('' → logprob: -14.752337455749512
    10. ' :)' → logprob: -14.752337455749512


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 47.17%
Précision adaptée (1ère position): 49.06%
Précision (top 10): 73.58%
================================================================================
