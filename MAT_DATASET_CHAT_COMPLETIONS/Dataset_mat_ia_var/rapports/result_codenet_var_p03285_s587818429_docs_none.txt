================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
cnt = 0
for i in range(25):
    for j in range(14):
        if 4 * i + 7 * j == n:
            cnt += 1
if cnt == 0:
    print('No')
else:
    print('Yes')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03585807606577873
    2. ')' → logprob: -3.660858154296875
    3. '()' → logprob: -4.785858154296875
    4. '(
' → logprob: -7.910858154296875
    5. '())' → logprob: -8.035858154296875
    6. ''' → logprob: -9.660858154296875
    7. '('' → logprob: -9.785858154296875
    8. '```' → logprob: -9.785858154296875
    9. '(

' → logprob: -10.035858154296875
    10. '(()' → logprob: -10.285858154296875

Token 5: 'cnt' (ID: 33160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11138404905796051
    2. '_' → logprob: -2.861384153366089
    3. '+' → logprob: -3.486384153366089
    4. '=' → logprob: -4.86138391494751
    5. ' ' → logprob: -5.61138391494751
    6. ' +=' → logprob: -6.11138391494751
    7. ')' → logprob: -7.11138391494751
    8. '+=' → logprob: -7.11138391494751
    9. '(' → logprob: -7.48638391494751
    10. 's' → logprob: -7.73638391494751

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.523203432559967
    2. ' ' → logprob: -0.898203432559967
    3. ' n' → logprob: -9.89820384979248
    4. 'n' → logprob: -11.27320384979248
    5. '1' → logprob: -11.77320384979248
    6. '"' → logprob: -13.14820384979248
    7. ''' → logprob: -13.39820384979248
    8. ' ' → logprob: -13.64820384979248
    9. ' `' → logprob: -13.64820384979248
    10. '`' → logprob: -13.77320384979248

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.429896944202483e-05
    2. '1' → logprob: -10.750043869018555
    3. 'n' → logprob: -11.500043869018555
    4. ' ' → logprob: -11.625043869018555
    5. '{}' → logprob: -12.750043869018555
    6. '{' → logprob: -14.875043869018555
    7. ''' → logprob: -15.750043869018555
    8. '[' → logprob: -15.875043869018555
    9. '"' → logprob: -16.000043869018555
    10. '`' → logprob: -16.875043869018555

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5204261541366577
    2. '
' → logprob: -1.2704261541366577
    3. '\n' → logprob: -2.5204262733459473
    4. '```' → logprob: -4.145426273345947
    5. ' for' → logprob: -4.395426273345947
    6. '\' → logprob: -5.270426273345947
    7. '' → logprob: -5.645426273345947
    8. ' 
' → logprob: -6.395426273345947
    9. '<|end|>' → logprob: -6.645426273345947
    10. '  
' → logprob: -7.145426273345947

Token 10: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9019637703895569
    2. 'for' → logprob: -1.276963710784912
    3. ' for' → logprob: -2.151963710784912
    4. '
' → logprob: -2.276963710784912
    5. '\' → logprob: -3.401963710784912
    6. '```' → logprob: -3.776963710784912
    7. '' → logprob: -3.901963710784912
    8. ' 
' → logprob: -4.901963710784912
    9. 'n' → logprob: -5.651963710784912
    10. 'i' → logprob: -6.151963710784912

Token 11: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010813174769282341
    2. '  ' → logprob: -4.885813236236572
    3. ' i' → logprob: -5.885813236236572
    4. ' n' → logprob: -7.885813236236572
    5. 'i' → logprob: -10.635812759399414
    6. ' )' → logprob: -12.635812759399414
    7. ' ‌' → logprob: -12.635812759399414
    8. ' ' → logprob: -12.760812759399414
    9. 'n' → logprob: -13.010812759399414
    10. ')' → logprob: -13.385812759399414

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0524224191904068
    2. 'in' → logprob: -3.427422523498535
    3. ' ' → logprob: -4.052422523498535
    4. 'n' → logprob: -8.302422523498535
    5. '  ' → logprob: -8.677422523498535
    6. ' n' → logprob: -8.802422523498535
    7. '<|end|>' → logprob: -8.927422523498535
    8. ')' → logprob: -9.177422523498535
    9. 'range' → logprob: -9.302422523498535
    10. '```' → logprob: -9.802422523498535

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009773085825145245
    2. 'range' → logprob: -4.634773254394531
    3. ' ' → logprob: -11.134773254394531
    4. '	range' → logprob: -14.009773254394531
    5. ')' → logprob: -14.634773254394531
    6. '(range' → logprob: -14.759773254394531
    7. ' n' → logprob: -14.884773254394531
    8. ' in' → logprob: -16.00977325439453
    9. 'n' → logprob: -16.50977325439453
    10. '_range' → logprob: -16.75977325439453

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2018072009086609
    2. '(n' → logprob: -1.7018072605133057
    3. ' (' → logprob: -8.201807022094727
    4. '(range' → logprob: -10.076807022094727
    5. '(len' → logprob: -10.201807022094727
    6. '(i' → logprob: -10.451807022094727
    7. '(
' → logprob: -12.201807022094727
    8. '((' → logprob: -13.951807022094727
    9. '(

' → logprob: -14.576807022094727
    10. ' ' → logprob: -14.576807022094727

Token 15: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3885546624660492
    2. 'n' → logprob: -1.1385546922683716
    3. ' n' → logprob: -7.138554573059082
    4. '2' → logprob: -7.888554573059082
    5. ' ' → logprob: -8.138554573059082
    6. '0' → logprob: -8.638554573059082
    7. ')' → logprob: -11.638554573059082
    8. '10' → logprob: -11.763554573059082
    9. ')n' → logprob: -11.888554573059082
    10. '100' → logprob: -12.638554573059082

Token 16: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11109190434217453
    2. '):' → logprob: -2.6110918521881104
    3. '+' → logprob: -4.1110920906066895
    4. ' )' → logprob: -4.8610920906066895
    5. '+)' → logprob: -6.2360920906066895
    6. ' +' → logprob: -6.3610920906066895
    7. ':' → logprob: -6.4860920906066895
    8. '0' → logprob: -7.7360920906066895
    9. ' ):' → logprob: -7.7360920906066895
    10. '*' → logprob: -8.361091613769531

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4020037353038788
    2. ' ' → logprob: -1.6520037651062012
    3. '   ' → logprob: -2.777003765106201
    4. '    ' → logprob: -3.277003765106201
    5. ' :' → logprob: -3.402003765106201
    6. '  ' → logprob: -6.777003765106201
    7. ')' → logprob: -7.277003765106201
    8. '```' → logprob: -7.402003765106201
    9. '\' → logprob: -7.902003765106201
    10. ' ,' → logprob: -8.152003288269043

Token 18: ' for' (ID: 395)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.072731614112854
    2. ' ' → logprob: -1.197731614112854
    3. '   ' → logprob: -1.322731614112854
    4. ' if' → logprob: -2.6977314949035645
    5. 'if' → logprob: -4.6977314949035645
    6. '  ' → logprob: -6.3227314949035645
    7. '     
' → logprob: -6.6977314949035645
    8. ' for' → logprob: -6.8227314949035645
    9. '```' → logprob: -6.8227314949035645
    10. '       ' → logprob: -6.8227314949035645

Token 19: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28667622804641724
    2. ' range' → logprob: -1.6616761684417725
    3. ' j' → logprob: -3.5366761684417725
    4. ' n' → logprob: -4.161676406860352
    5. ' i' → logprob: -4.536676406860352
    6. '  ' → logprob: -7.411676406860352
    7. ' ```' → logprob: -7.786676406860352
    8. 'range' → logprob: -7.786676406860352
    9. ' in' → logprob: -8.036676406860352
    10. '```' → logprob: -8.286676406860352

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02983229048550129
    2. 'in' → logprob: -3.529832363128662
    3. ' ' → logprob: -9.779831886291504
    4. '  ' → logprob: -10.904831886291504
    5. ')' → logprob: -13.904831886291504
    6. '```' → logprob: -13.904831886291504
    7. '    ' → logprob: -14.154831886291504
    8. '   ' → logprob: -14.154831886291504
    9. 'range' → logprob: -14.404831886291504
    10. 'n' → logprob: -14.404831886291504

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.049095168709754944
    2. 'range' → logprob: -3.0490951538085938
    3. '(range' → logprob: -7.674095153808594
    4. ' ' → logprob: -10.799095153808594
    5. '(' → logprob: -11.299095153808594
    6. '	range' → logprob: -12.549095153808594
    7. ' (' → logprob: -12.924095153808594
    8. ')' → logprob: -13.049095153808594
    9. '_range' → logprob: -14.174095153808594
    10. ' )' → logprob: -15.049095153808594

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0893988385796547
    2. '(n' → logprob: -2.5893988609313965
    3. '(i' → logprob: -4.5893988609313965
    4. ' (' → logprob: -8.464398384094238
    5. ' ' → logprob: -10.839398384094238
    6. '25' → logprob: -11.339398384094238
    7. '(s' → logprob: -11.589398384094238
    8. '(cnt' → logprob: -11.839398384094238
    9. '(j' → logprob: -12.089398384094238
    10. ')' → logprob: -12.089398384094238

Token 23: '14' (ID: 1265)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '25' → logprob: -0.2804591655731201
    2. '100' → logprob: -2.78045916557312
    3. '26' → logprob: -2.90545916557312
    4. 'n' → logprob: -3.40545916557312
    5. '5' → logprob: -3.53045916557312
    6. 'i' → logprob: -3.65545916557312
    7. '10' → logprob: -3.65545916557312
    8. '50' → logprob: -5.530459403991699
    9. '1' → logprob: -6.155459403991699
    10. '20' → logprob: -6.780459403991699

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018474860116839409
    2. ')' → logprob: -7.251847267150879
    3. ' ):' → logprob: -8.126847267150879
    4. '0' → logprob: -8.251847267150879
    5. ':' → logprob: -8.626847267150879
    6. '+' → logprob: -8.751847267150879
    7. '):
' → logprob: -9.501847267150879
    8. '7' → logprob: -10.376847267150879
    9. '3' → logprob: -10.626847267150879
    10. '4' → logprob: -11.001847267150879

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055613696575164795
    2. '    ' → logprob: -3.4306137561798096
    3. ' ' → logprob: -4.5556135177612305
    4. '        ' → logprob: -5.1806135177612305
    5. '   ' → logprob: -6.5556135177612305
    6. '     
' → logprob: -7.1806135177612305
    7. '<|end|>' → logprob: -7.6806135177612305
    8. '     ' → logprob: -7.8056135177612305
    9. ':' → logprob: -7.8056135177612305
    10. '      ' → logprob: -8.05561351776123

Token 26: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6273395419120789
    2. '           ' → logprob: -1.7523396015167236
    3. 'if' (adapté à ' if') → logprob: -2.5023396015167236
    4. ' if' → logprob: -2.6273396015167236
    5. '        ' → logprob: -3.5023396015167236
    6. '            ' → logprob: -3.7523396015167236
    7. ' 
' → logprob: -3.7523396015167236
    8. '    ' → logprob: -4.1273393630981445
    9. '       ' → logprob: -4.1273393630981445
    10. '<|end|>' → logprob: -5.0023393630981445

Token 27: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17997756600379944
    2. ' (' → logprob: -2.3049776554107666
    3. ' i' → logprob: -3.0549776554107666
    4. 'n' → logprob: -4.6799774169921875
    5. ' ' → logprob: -5.3049774169921875
    6. '(' → logprob: -6.6799774169921875
    7. '(n' → logprob: -6.9299774169921875
    8. '(i' → logprob: -7.6799774169921875
    9. 'i' → logprob: -8.429977416992188
    10. ' j' → logprob: -9.054977416992188

Token 28: '4' (ID: 19)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1120210587978363
    2. ' i' → logprob: -2.737020969390869
    3. '(i' → logprob: -3.737020969390869
    4. ' (' → logprob: -4.737020969390869
    5. 'n' → logprob: -5.237020969390869
    6. '(' → logprob: -6.487020969390869
    7. '(n' → logprob: -7.362020969390869
    8. ' n' → logprob: -7.612020969390869
    9. ' ' → logprob: -8.487021446228027
    10. 'j' → logprob: -9.237021446228027

Token 29: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3119829297065735
    2. ' *' → logprob: -1.8119828701019287
    3. '*' → logprob: -2.3119828701019287
    4. '*j' → logprob: -5.436983108520508
    5. '*n' → logprob: -7.311983108520508
    6. ' <=' → logprob: -9.061983108520508
    7. '**' → logprob: -9.186983108520508
    8. ' ' → logprob: -9.436983108520508
    9. '*(' → logprob: -9.936983108520508
    10. 'i' → logprob: -10.061983108520508

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005454786121845245
    2. ' i' → logprob: -5.255455017089844
    3. 'j' → logprob: -9.130455017089844
    4. ' ' → logprob: -10.755455017089844
    5. '3' → logprob: -11.255455017089844
    6. '25' → logprob: -11.630455017089844
    7. '(' → logprob: -11.755455017089844
    8. '5' → logprob: -11.880455017089844
    9. '4' → logprob: -12.130455017089844
    10. '(i' → logprob: -12.130455017089844

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931769847869873
    2. ' +' → logprob: -0.6931769847869873
    3. ' ' → logprob: -11.068177223205566
    4. '+j' → logprob: -12.068177223205566
    5. ' plus' → logprob: -13.443177223205566
    6. '*' → logprob: -13.818177223205566
    7. '<|end|>' → logprob: -13.943177223205566
    8. '-' → logprob: -13.943177223205566
    9. ' <=' → logprob: -14.318177223205566
    10. '>' → logprob: -14.818177223205566

Token 32: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.21710005402565002
    2. '3' → logprob: -1.7171000242233276
    3. ' ' → logprob: -4.217100143432617
    4. 'j' → logprob: -7.592100143432617
    5. '   ' → logprob: -8.967100143432617
    6. '    ' → logprob: -9.967100143432617
    7. '  ' → logprob: -10.217100143432617
    8. '2' → logprob: -10.217100143432617
    9. '5' → logprob: -11.217100143432617
    10. ' j' → logprob: -11.217100143432617

Token 33: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.007829011417925358
    2. '3' → logprob: -5.007829189300537
    3. 'j' → logprob: -7.507829189300537
    4. '2' → logprob: -8.632828712463379
    5. '6' → logprob: -9.007828712463379
    6. ' ' → logprob: -9.257828712463379
    7. '5' → logprob: -9.632828712463379
    8. '   ' → logprob: -10.882828712463379
    9. '

' → logprob: -11.007828712463379
    10. '  ' → logprob: -11.445328712463379

Token 34: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.44820624589920044
    2. '*' → logprob: -1.1982061862945557
    3. '*j' → logprob: -2.8232061862945557
    4. 'j' → logprob: -9.823205947875977
    5. ' ' → logprob: -11.198205947875977
    6. '<|end|>' → logprob: -13.073205947875977
    7. ' <=' → logprob: -13.573205947875977
    8. '*i' → logprob: -14.073205947875977
    9. '<=' → logprob: -14.323205947875977
    10. ' j' → logprob: -14.573205947875977

Token 35: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006717147771269083
    2. ' j' → logprob: -5.006717205047607
    3. '<|end|>' → logprob: -13.75671672821045
    4. '	j' → logprob: -14.63171672821045
    5. '*j' → logprob: -16.131717681884766
    6. ' ' → logprob: -16.256717681884766
    7. '$j' → logprob: -17.131717681884766
    8. '_j' → logprob: -17.881717681884766
    9. '<|end|>' → logprob: -18.131717681884766
    10. '   ' → logprob: -18.756717681884766

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23671682178974152
    2. '==' → logprob: -1.986716866493225
    3. ' <=' → logprob: -2.7367167472839355
    4. '<=' → logprob: -4.7367167472839355
    5. '=' → logprob: -9.986717224121094
    6. ' ' → logprob: -10.986717224121094
    7. ' >=' → logprob: -11.361717224121094
    8. '>=' → logprob: -12.361717224121094
    9. ' >' → logprob: -12.611717224121094
    10. '>' → logprob: -12.736717224121094

Token 37: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.693158745765686
    2. ' n' → logprob: -0.693158745765686
    3. ' ' → logprob: -11.443159103393555
    4. '	n' → logprob: -15.193159103393555
    5. ' ' → logprob: -15.693159103393555
    6. '   ' → logprob: -15.818159103393555
    7. '    ' → logprob: -17.193159103393555
    8. '  ' → logprob: -17.193159103393555
    9. '_n' → logprob: -17.443159103393555
    10. '4' → logprob: -17.443159103393555

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012880703434348106
    2. ' :' → logprob: -9.125128746032715
    3. ':
' → logprob: -11.500128746032715
    4. ' and' → logprob: -12.500128746032715
    5. '       ' → logprob: -13.500128746032715
    6. '):' → logprob: -13.750128746032715
    7. ':**' → logprob: -13.750128746032715
    8. ':return' → logprob: -13.875128746032715
    9. 'and' → logprob: -15.250128746032715
    10. '   ' → logprob: -15.250128746032715

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15158656239509583
    2. ':' → logprob: -2.1515865325927734
    3. '       ' → logprob: -4.026586532592773
    4. ' :' → logprob: -6.401586532592773
    5. '            ' → logprob: -7.026586532592773
    6. ':return' → logprob: -7.151586532592773
    7. '               ' → logprob: -7.276586532592773
    8. ':
' → logprob: -7.526586532592773
    9. ' ' → logprob: -8.151586532592773
    10. '<|end|>' → logprob: -8.276586532592773

Token 40: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.8216790556907654
    2. '           ' → logprob: -1.0716791152954102
    3. 'cnt' (adapté à ' cnt') → logprob: -1.6966791152954102
    4. '               ' → logprob: -3.44667911529541
    5. '       ' → logprob: -6.69667911529541
    6. '	cnt' → logprob: -7.69667911529541
    7. '(cnt' → logprob: -8.19667911529541
    8. ' ' → logprob: -8.69667911529541
    9. '   ' → logprob: -8.82167911529541
    10. '[cnt' → logprob: -8.94667911529541

Token 41: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.513081431388855
    2. ' +=' → logprob: -1.388081431388855
    3. '+' → logprob: -1.888081431388855
    4. '=' → logprob: -8.388081550598145
    5. ' +' → logprob: -9.013081550598145
    6. '+='' → logprob: -10.638081550598145
    7. '<|end|>' → logprob: -10.888081550598145
    8. ']+=' → logprob: -11.388081550598145
    9. ' ' → logprob: -11.513081550598145
    10. ' =' → logprob: -11.513081550598145

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.250011444091797
    4. '１' → logprob: -20.625011444091797
    5. '<|end|>' → logprob: -22.625011444091797
    6. '  ' → logprob: -22.875011444091797
    7. '```' → logprob: -23.250011444091797
    8. '    ' → logprob: -23.375011444091797
    9. '۱' → logprob: -23.375011444091797
    10. '10' → logprob: -23.500011444091797

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.375001907348633
    4. '１' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '۱' → logprob: -20.812501907348633
    7. '```' → logprob: -21.375001907348633
    8. '१' → logprob: -21.375001907348633
    9. '!' → logprob: -21.500001907348633
    10. '+' → logprob: -22.062501907348633

Token 44: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06840206682682037
    2. '\n' → logprob: -3.693402051925659
    3. '<|end|>' → logprob: -3.943402051925659
    4. '
' → logprob: -4.318402290344238
    5. '```' → logprob: -5.818402290344238
    6. '#' → logprob: -6.318402290344238
    7. '\' → logprob: -7.193402290344238
    8. '           ' → logprob: -7.693402290344238
    9. ' 
' → logprob: -8.193402290344238
    10. '\
' → logprob: -8.193402290344238

Token 45: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028561757877469063
    2. '
' → logprob: -4.528561592102051
    3. '\n' → logprob: -4.528561592102051
    4. '<|end|>' → logprob: -5.653561592102051
    5. 'if' → logprob: -7.028561592102051
    6. ' 
' → logprob: -8.15356159210205
    7. '```' → logprob: -8.15356159210205
    8. '#' → logprob: -8.40356159210205
    9. '0' → logprob: -8.40356159210205
    10. '  
' → logprob: -8.90356159210205

Token 46: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0017487229779362679
    2. 'cnt' → logprob: -6.376748561859131
    3. '(cnt' → logprob: -10.126749038696289
    4. ' cn' → logprob: -13.376749038696289
    5. '	cnt' → logprob: -13.501749038696289
    6. ' ' → logprob: -13.501749038696289
    7. ' ' → logprob: -13.876749038696289
    8. '[cnt' → logprob: -14.751749038696289
    9. ' count' → logprob: -14.876749038696289
    10. ' ctr' → logprob: -16.00174903869629

Token 47: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08898178488016129
    2. '>' → logprob: -2.463981866836548
    3. ' ==' → logprob: -10.588981628417969
    4. ':' → logprob: -11.963981628417969
    5. '==' → logprob: -12.713981628417969
    6. ' !=' → logprob: -13.088981628417969
    7. '">' → logprob: -13.463981628417969
    8. ' ' → logprob: -13.713981628417969
    9. ' >=' → logprob: -13.713981628417969
    10. ' ' → logprob: -14.713981628417969

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030127180740237236
    2. ' ' → logprob: -3.5301272869110107
    3. '1' → logprob: -7.905127048492432
    4. '>' → logprob: -12.15512752532959
    5. '   ' → logprob: -14.28012752532959
    6. '">' → logprob: -14.53012752532959
    7. '2' → logprob: -15.28012752532959
    8. ' >' → logprob: -15.28012752532959
    9. '  ' → logprob: -15.65512752532959
    10. '9' → logprob: -16.467626571655273

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005542158614844084
    2. ' ' → logprob: -5.380542278289795
    3. '1' → logprob: -7.005542278289795
    4. '01' → logprob: -12.505541801452637
    5. '>' → logprob: -13.068041801452637
    6. '012' → logprob: -13.693041801452637
    7. '">' → logprob: -13.880541801452637
    8. '   ' → logprob: -13.880541801452637
    9. '    ' → logprob: -14.630541801452637
    10. '０' → logprob: -14.880541801452637

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007124318508431315
    2. ':
' → logprob: -7.2507123947143555
    3. ' :' → logprob: -14.000712394714355
    4. ':\' → logprob: -15.000712394714355
    5. ':
' → logprob: -15.000712394714355
    6. ':return' → logprob: -15.125712394714355
    7. 'print' → logprob: -15.750712394714355
    8. '   ' → logprob: -15.750712394714355
    9. ':

' → logprob: -16.000713348388672
    10. ':**' → logprob: -16.375713348388672

Token 51: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7185842990875244
    2. '   ' → logprob: -0.9685842990875244
    3. ' print' → logprob: -2.0935842990875244
    4. '\n' → logprob: -4.718584060668945
    5. '\' → logprob: -8.218584060668945
    6. '    
' → logprob: -9.093584060668945
    7. '	print' → logprob: -9.093584060668945
    8. '```' → logprob: -9.093584060668945
    9. '
' → logprob: -9.718584060668945
    10. '``' → logprob: -10.718584060668945

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.031075721606612206
    2. ' print' → logprob: -3.5310757160186768
    3. '   ' → logprob: -6.656075954437256
    4. '\n' → logprob: -10.781075477600098
    5. 'pr' → logprob: -12.156075477600098
    6. '\' → logprob: -12.281075477600098
    7. '```' → logprob: -13.156075477600098
    8. '	print' → logprob: -13.656075477600098
    9. 'prit' → logprob: -13.906075477600098
    10. 'Print' → logprob: -14.531075477600098

Token 53: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2599416971206665
    2. '("' → logprob: -1.7599416971206665
    3. '(-' → logprob: -3.009941577911377
    4. '('' → logprob: -5.009941577911377
    5. '-' → logprob: -7.884941577911377
    6. '("-' → logprob: -8.634942054748535
    7. '()' → logprob: -9.134942054748535
    8. '(None' → logprob: -10.259942054748535
    9. ' (' → logprob: -10.384942054748535
    10. '"' → logprob: -10.509942054748535

Token 54: 'No' (ID: 3160)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5736700296401978
    2. 'No' → logprob: -1.0736700296401978
    3. 'NO' → logprob: -2.823669910430908
    4. 'None' → logprob: -4.448669910430908
    5. ':no' → logprob: -5.448669910430908
    6. 'Impossible' → logprob: -5.573669910430908
    7. 'im' → logprob: -5.698669910430908
    8. 'NA' → logprob: -6.323669910430908
    9. 'none' → logprob: -6.323669910430908
    10. 'no' → logprob: -6.323669910430908

Token 55: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03528273478150368
    2. ')' → logprob: -3.535282850265503
    3. '!' → logprob: -5.910282611846924
    4. ' Answer' → logprob: -7.410282611846924
    5. 'Answer' → logprob: -7.535282611846924
    6. ' solution' → logprob: -7.910282611846924
    7. '')
' → logprob: -8.285283088684082
    8. ' answer' → logprob: -8.410283088684082
    9. 't' → logprob: -8.910283088684082
    10. ' )' → logprob: -8.910283088684082

Token 56: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.282920129597187e-05
    2. ' else' → logprob: -11.625012397766113
    3. '```' → logprob: -12.875012397766113
    4. 'e' → logprob: -14.000012397766113
    5. 'elif' → logprob: -16.62501335144043
    6. 'print' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.00001335144043
    8. 'es' → logprob: -17.12501335144043
    9. 'Else' → logprob: -17.12501335144043
    10. '\' → logprob: -17.50001335144043

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014104703441262245
    2. '   ' → logprob: -6.626410484313965
    3. ' :' → logprob: -10.126410484313965
    4. ':
' → logprob: -10.376410484313965
    5. ' print' → logprob: -12.376410484313965
    6. 'print' → logprob: -12.626410484313965
    7. '    ' → logprob: -12.876410484313965
    8. '       ' → logprob: -13.876410484313965
    9. '):' → logprob: -14.126410484313965
    10. '(' → logprob: -15.126410484313965

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5769845843315125
    2. ' print' → logprob: -1.0769846439361572
    3. 'print' → logprob: -2.3269846439361572
    4. ' ' → logprob: -9.701984405517578
    5. 'Print' → logprob: -9.951984405517578
    6. '	print' → logprob: -10.576984405517578
    7. '```' → logprob: -10.951984405517578
    8. '    ' → logprob: -11.451984405517578
    9. ' Yes' → logprob: -11.451984405517578
    10. 'Yes' → logprob: -11.701984405517578

Token 59: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001657565007917583
    2. ' print' → logprob: -8.750165939331055
    3. '   ' → logprob: -12.500165939331055
    4. 'Print' → logprob: -12.750165939331055
    5. 'Yes' → logprob: -15.000165939331055
    6. ''' → logprob: -16.125165939331055
    7. '	print' → logprob: -16.625165939331055
    8. '('' → logprob: -17.750165939331055
    9. ' ' → logprob: -18.000165939331055
    10. '.print' → logprob: -18.125165939331055

Token 60: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.474590003490448
    2. '(' → logprob: -0.974590003490448
    3. '("' → logprob: -7.974589824676514
    4. '(cnt' → logprob: -9.099590301513672
    5. '()' → logprob: -10.224590301513672
    6. ''' → logprob: -11.724590301513672
    7. ' (' → logprob: -12.474590301513672
    8. ' ('' → logprob: -13.224590301513672
    9. '("("' → logprob: -13.349590301513672
    10. '('(' → logprob: -13.724590301513672

Token 61: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0036096973344683647
    2. ''' → logprob: -5.628609657287598
    3. ' Yes' → logprob: -12.753609657287598
    4. '('' → logprob: -13.253609657287598
    5. 'YES' → logprob: -13.878609657287598
    6. 'Ye' → logprob: -13.878609657287598
    7. 'Y' → logprob: -14.378609657287598
    8. ''S' → logprob: -14.753609657287598
    9. 'yes' → logprob: -14.753609657287598
    10. '"' → logprob: -15.628609657287598

Token 62: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602327525615692
    2. '')' → logprob: -1.9102327823638916
    3. '")' → logprob: -12.160232543945312
    4. '()' → logprob: -13.160232543945312
    5. '('' → logprob: -14.910232543945312
    6. ' )' → logprob: -15.035232543945312
    7. '`)' → logprob: -15.160232543945312
    8. '())' → logprob: -15.660232543945312
    9. '#' → logprob: -16.410232543945312
    10. ''' → logprob: -16.910232543945312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 36.67%
Précision (top 10): 86.67%
================================================================================
