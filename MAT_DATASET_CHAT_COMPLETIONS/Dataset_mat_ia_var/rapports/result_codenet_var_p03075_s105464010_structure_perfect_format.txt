================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = int(input())
c = int(input())
d = int(input())
e = int(input())
k = int(input())
if e - a > k:
    print(":(")
else:
    print("Yay!")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11548296362161636
    2. ')' → logprob: -2.240483045578003
    3. '()' → logprob: -6.740482807159424
    4. '())' → logprob: -7.990482807159424
    5. '(
' → logprob: -8.865483283996582
    6. '))' → logprob: -9.115483283996582
    7. '```' → logprob: -9.115483283996582
    8. '(a' → logprob: -9.240483283996582
    9. 'a' → logprob: -9.740483283996582
    10. '`' → logprob: -9.740483283996582

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03134123980998993
    2. '*' → logprob: -3.656341314315796
    3. '%' → logprob: -6.406341075897217
    4. '\n' → logprob: -6.656341075897217
    5. '#' → logprob: -7.531341075897217
    6. '+
' → logprob: -8.156341552734375
    7. 'a' → logprob: -8.406341552734375
    8. '\' → logprob: -8.531341552734375
    9. '**' → logprob: -8.656341552734375
    10. ')' → logprob: -8.906341552734375

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41721296310424805
    2. '=' → logprob: -1.917212963104248
    3. '+' → logprob: -2.417212963104248
    4. ' ' → logprob: -2.792212963104248
    5. '[' → logprob: -4.042212963104248
    6. ' +=' → logprob: -4.542212963104248
    7. ')' → logprob: -4.667212963104248
    8. '_' → logprob: -6.542212963104248
    9. ' +' → logprob: -6.792212963104248
    10. '+=' → logprob: -7.167212963104248

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.027502650395035744
    2. 'int' → logprob: -3.6525025367736816
    3. ' a' → logprob: -7.027502536773682
    4. 'a' → logprob: -8.15250301361084
    5. ' input' → logprob: -11.40250301361084
    6. ' ' → logprob: -12.02750301361084
    7. '=int' → logprob: -13.02750301361084
    8. 'input' → logprob: -13.27750301361084
    9. '<int' → logprob: -13.65250301361084
    10. '(int' → logprob: -14.02750301361084

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002011075848713517
    2. '()' → logprob: -7.127011299133301
    3. ')' → logprob: -7.377011299133301
    4. '(a' → logprob: -7.877011299133301
    5. ' (' → logprob: -10.2520112991333
    6. 'a' → logprob: -10.3770112991333
    7. ' ' → logprob: -10.5020112991333
    8. '(
' → logprob: -10.7520112991333
    9. '```' → logprob: -10.7520112991333
    10. '(

' → logprob: -11.8770112991333

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05383114889264107
    2. '()' → logprob: -3.178831100463867
    3. ')' → logprob: -4.553831100463867
    4. '(' → logprob: -9.178831100463867
    5. ' ())' → logprob: -9.678831100463867
    6. '()))' → logprob: -9.928831100463867
    7. '`)' → logprob: -12.303831100463867
    8. '();)' → logprob: -12.553831100463867
    9. '()>' → logprob: -13.053831100463867
    10. '())
' → logprob: -13.178831100463867

Token 10: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7165156006813049
    2. 'if' → logprob: -0.7165156006813049
    3. 's' → logprob: -4.21651554107666
    4. '+' → logprob: -5.96651554107666
    5. 'print' → logprob: -5.96651554107666
    6. 'sum' → logprob: -6.71651554107666
    7. 'result' → logprob: -6.84151554107666
    8. ' if' → logprob: -8.59151554107666
    9. '+
' → logprob: -8.59151554107666
    10. '#' → logprob: -8.71651554107666

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.641842246055603
    2. '=' → logprob: -0.766842246055603
    3. '+' → logprob: -5.141842365264893
    4. '_' → logprob: -6.641842365264893
    5. ')' → logprob: -7.516842365264893
    6. ' ' → logprob: -7.766842365264893
    7. ' +=' → logprob: -8.141841888427734
    8. 'a' → logprob: -8.766841888427734
    9. ' +' → logprob: -9.016841888427734
    10. '+=' → logprob: -9.266841888427734

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0961319208145142
    2. ' a' → logprob: -1.3461319208145142
    3. 'int' → logprob: -1.5961319208145142
    4. 'a' → logprob: -1.5961319208145142
    5. ' input' → logprob: -9.096132278442383
    6. 'input' → logprob: -9.846132278442383
    7. ' ' → logprob: -10.846132278442383
    8. '(int' → logprob: -11.096132278442383
    9. ' max' → logprob: -11.596132278442383
    10. 'max' → logprob: -12.221132278442383

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012961853062734008
    2. '(a' → logprob: -8.126296043395996
    3. ' (' → logprob: -8.126296043395996
    4. ')' → logprob: -8.751296043395996
    5. '()' → logprob: -8.751296043395996
    6. '('' → logprob: -9.251296043395996
    7. 'a' → logprob: -9.501296043395996
    8. ' ' → logprob: -9.751296043395996
    9. '(input' → logprob: -10.126296043395996
    10. '("("' → logprob: -11.251296043395996

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5125531554222107
    2. '()' → logprob: -1.2625532150268555
    3. ')' → logprob: -2.1375532150268555
    4. '(' → logprob: -9.137553215026855
    5. ' ())' → logprob: -11.262553215026855
    6. '`)' → logprob: -11.637553215026855
    7. '()>' → logprob: -11.637553215026855
    8. ' )' → logprob: -12.512553215026855
    9. '()))' → logprob: -12.887553215026855
    10. '()
' → logprob: -13.137553215026855

Token 15: 'd' (ID: 67)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4192591905593872
    2. 'd' → logprob: -1.6692591905593872
    3. 'sum' → logprob: -2.7942590713500977
    4. 's' → logprob: -2.9192590713500977
    5. 'max' → logprob: -3.6692590713500977
    6. 'total' → logprob: -5.294259071350098
    7. 'print' → logprob: -5.544259071350098
    8. 'result' → logprob: -6.544259071350098
    9. 'n' → logprob: -6.794259071350098
    10. 'x' → logprob: -7.419259071350098

Token 16: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.828858494758606
    2. ' ' → logprob: -1.578858494758606
    3. ' =' → logprob: -1.953858494758606
    4. '=' → logprob: -2.0788583755493164
    5. ' +' → logprob: -3.4538583755493164
    6. ')' → logprob: -3.8288583755493164
    7. '[' → logprob: -4.953858375549316
    8. '_' → logprob: -5.453858375549316
    9. '*' → logprob: -5.703858375549316
    10. '>' → logprob: -5.703858375549316

Token 17: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5541942119598389
    2. 'a' → logprob: -1.0541942119598389
    3. ' int' → logprob: -3.054194211959839
    4. 'int' → logprob: -3.554194211959839
    5. ' max' → logprob: -7.304194450378418
    6. 'max' → logprob: -8.429194450378418
    7. ' ' → logprob: -9.304194450378418
    8. '(a' → logprob: -9.554194450378418
    9. ' (' → logprob: -10.179194450378418
    10. ' abs' → logprob: -10.429194450378418

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031425125780515373
    2. ' (' → logprob: -8.625314712524414
    3. 'a' → logprob: -10.875314712524414
    4. ')' → logprob: -11.000314712524414
    5. ''' → logprob: -11.125314712524414
    6. '('' → logprob: -11.250314712524414
    7. '(input' → logprob: -11.500314712524414
    8. '(
' → logprob: -11.625314712524414
    9. '(a' → logprob: -11.750314712524414
    10. '()' → logprob: -11.875314712524414

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09796047955751419
    2. '()' → logprob: -2.8479604721069336
    3. '())' → logprob: -3.3479604721069336
    4. '`)' → logprob: -8.847960472106934
    5. ' )' → logprob: -11.472960472106934
    6. '）' → logprob: -11.972960472106934
    7. '()
' → logprob: -12.097960472106934
    8. '')' → logprob: -12.222960472106934
    9. '))' → logprob: -12.347960472106934
    10. '(' → logprob: -12.347960472106934

Token 20: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5356608033180237
    2. 'if' → logprob: -1.160660743713379
    3. 'print' → logprob: -3.285660743713379
    4. 'sum' → logprob: -4.285660743713379
    5. 's' → logprob: -4.535660743713379
    6. 'n' → logprob: -4.660660743713379
    7. 'max' → logprob: -4.660660743713379
    8. 'result' → logprob: -5.160660743713379
    9. 'x' → logprob: -5.285660743713379
    10. 'total' → logprob: -5.410660743713379

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31230488419532776
    2. '=' → logprob: -1.4373048543930054
    3. ')' → logprob: -4.437304973602295
    4. '+' → logprob: -5.437304973602295
    5. '_' → logprob: -5.812304973602295
    6. ' ' → logprob: -6.062304973602295
    7. '>' → logprob: -6.562304973602295
    8. '(' → logprob: -6.687304973602295
    9. '[' → logprob: -7.312304973602295
    10. '.' → logprob: -7.312304973602295

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.2764620780944824
    2. ' a' → logprob: -1.4014620780944824
    3. 'a' → logprob: -1.5264620780944824
    4. ' ' → logprob: -1.6514620780944824
    5. 'int' → logprob: -2.9014620780944824
    6. ' (' → logprob: -5.901462078094482
    7. 'e' → logprob: -6.276462078094482
    8. 'd' → logprob: -6.651462078094482
    9. ' e' → logprob: -7.401462078094482
    10. ' d' → logprob: -7.526462078094482

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036857128143310547
    2. '(input' → logprob: -5.75368595123291
    3. ' (' → logprob: -8.62868595123291
    4. '()' → logprob: -9.62868595123291
    5. '('' → logprob: -9.62868595123291
    6. '(
' → logprob: -9.87868595123291
    7. ')' → logprob: -10.87868595123291
    8. '(a' → logprob: -11.25368595123291
    9. '((' → logprob: -11.50368595123291
    10. '(

' → logprob: -11.50368595123291

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4642115831375122
    2. '()' → logprob: -1.3392115831375122
    3. ')' → logprob: -2.2142114639282227
    4. '`)' → logprob: -10.839211463928223
    5. ' ())' → logprob: -10.964211463928223
    6. '(' → logprob: -11.339211463928223
    7. ' )' → logprob: -11.839211463928223
    8. '()
' → logprob: -12.089211463928223
    9. '();)' → logprob: -13.339211463928223
    10. '())
' → logprob: -13.339211463928223

Token 25: 'k' (ID: 74)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.24517734348773956
    2. 's' → logprob: -2.6201772689819336
    3. 'sum' → logprob: -3.3701772689819336
    4. 'if' → logprob: -3.6201772689819336
    5. 'print' → logprob: -3.7451772689819336
    6. 'max' → logprob: -3.8701772689819336
    7. 'total' → logprob: -3.9951772689819336
    8. 'x' → logprob: -4.870177268981934
    9. 'result' → logprob: -5.620177268981934
    10. 'n' → logprob: -5.995177268981934

Token 26: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6957076787948608
    2. ' =' → logprob: -0.9457076787948608
    3. '=' → logprob: -2.6957077980041504
    4. ' >' → logprob: -4.57070779800415
    5. '<|end|>' → logprob: -4.82070779800415
    6. ')' → logprob: -5.32070779800415
    7. '>' → logprob: -5.69570779800415
    8. ' )' → logprob: -6.07070779800415
    9. '+' → logprob: -6.32070779800415
    10. '[' → logprob: -6.57070779800415

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6522040367126465
    2. ' ' → logprob: -1.0272040367126465
    3. ' a' → logprob: -3.0272040367126465
    4. 'int' → logprob: -3.2772040367126465
    5. ' abs' → logprob: -4.7772040367126465
    6. 'a' → logprob: -5.0272040367126465
    7. '10' → logprob: -5.4022040367126465
    8. '5' → logprob: -6.2772040367126465
    9. 'abs' → logprob: -6.4022040367126465
    10. '1' → logprob: -6.7772040367126465

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004892042838037014
    2. '(input' → logprob: -6.004891872406006
    3. '('' → logprob: -6.754891872406006
    4. ' (' → logprob: -8.004892349243164
    5. '()' → logprob: -8.129892349243164
    6. '(a' → logprob: -9.129892349243164
    7. '(
' → logprob: -9.629892349243164
    8. ' ' → logprob: -9.754892349243164
    9. 'a' → logprob: -9.754892349243164
    10. ''' → logprob: -10.004892349243164

Token 29: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6099533438682556
    2. '())' → logprob: -1.3599534034729004
    3. ')' → logprob: -1.6099534034729004
    4. '(' → logprob: -11.109952926635742
    5. ' ())' → logprob: -11.359952926635742
    6. '`)' → logprob: -11.609952926635742
    7. ' )' → logprob: -12.359952926635742
    8. '()
' → logprob: -12.609952926635742
    9. '')' → logprob: -13.234952926635742
    10. '())
' → logprob: -13.609952926635742

Token 30: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15643487870693207
    2. 'f' → logprob: -3.1564347743988037
    3. 's' → logprob: -3.5314347743988037
    4. 'print' → logprob: -3.7814347743988037
    5. 'sum' → logprob: -4.531435012817383
    6. 'max' → logprob: -4.906435012817383
    7. 'x' → logprob: -5.156435012817383
    8. 'i' → logprob: -5.531435012817383
    9. 'n' → logprob: -5.656435012817383
    10. '\n' → logprob: -5.906435012817383

Token 31: ' e' (ID: 319)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5288811326026917
    2. ' abs' → logprob: -1.0288810729980469
    3. 'abs' → logprob: -4.028881072998047
    4. 'a' → logprob: -4.028881072998047
    5. ' (' → logprob: -4.528881072998047
    6. '(abs' → logprob: -5.903881072998047
    7. '(' → logprob: -6.278881072998047
    8. ' ' → logprob: -6.653881072998047
    9. '(a' → logprob: -7.278881072998047
    10. ' k' → logprob: -9.028881072998047

Token 32: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07510850578546524
    2. '-' → logprob: -3.200108528137207
    3. ' >' → logprob: -4.950108528137207
    4. ' >=' → logprob: -5.200108528137207
    5. ' <=' → logprob: -5.325108528137207
    6. ' <' → logprob: -5.450108528137207
    7. '<' → logprob: -5.825108528137207
    8. '>' → logprob: -5.950108528137207
    9. ' ' → logprob: -6.950108528137207
    10. '+' → logprob: -7.075108528137207

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07240217179059982
    2. ' a' → logprob: -3.447402238845825
    3. 'k' → logprob: -3.697402238845825
    4. 'd' → logprob: -4.947402000427246
    5. ' k' → logprob: -6.072402000427246
    6. 'b' → logprob: -6.447402000427246
    7. ' d' → logprob: -6.822402000427246
    8. 'c' → logprob: -7.572402000427246
    9. ' ' → logprob: -8.697402000427246
    10. ' b' → logprob: -9.197402000427246

Token 34: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5775858163833618
    2. ' >' → logprob: -1.0775858163833618
    3. ' >=' → logprob: -2.8275856971740723
    4. '>' → logprob: -3.5775856971740723
    5. '<=' → logprob: -5.327585697174072
    6. ' ' → logprob: -5.577585697174072
    7. ' <' → logprob: -6.702585697174072
    8. '>=' → logprob: -6.827585697174072
    9. '<' → logprob: -8.70258617401123
    10. ' ==' → logprob: -10.32758617401123

Token 35: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003612186061218381
    2. ' k' → logprob: -5.628612041473389
    3. ' ' → logprob: -12.003612518310547
    4. '	k' → logprob: -12.628612518310547
    5. '=k' → logprob: -13.628612518310547
    6. '>' → logprob: -15.003612518310547
    7. '9' → logprob: -15.253612518310547
    8. '   ' → logprob: -15.628612518310547
    9. '=' → logprob: -16.128612518310547
    10. '2' → logprob: -16.253612518310547

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0620909258723259
    2. ' :' → logprob: -2.8120908737182617
    3. ' and' → logprob: -10.562090873718262
    4. ' ' → logprob: -10.687090873718262
    5. ':**' → logprob: -10.937090873718262
    6. ' or' → logprob: -11.062090873718262
    7. '>' → logprob: -11.562090873718262
    8. '>:' → logprob: -12.312090873718262
    9. '.' → logprob: -12.687090873718262
    10. '):' → logprob: -12.687090873718262

Token 37: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5983151793479919
    2. 'print' → logprob: -1.3483152389526367
    3. ' print' → logprob: -1.9733152389526367
    4. ' \' → logprob: -3.5983152389526367
    5. '"\' → logprob: -4.598315238952637
    6. ''\' → logprob: -5.348315238952637
    7. '\' → logprob: -5.848315238952637
    8. ' ' → logprob: -6.473315238952637
    9. ' "\' → logprob: -6.598315238952637
    10. ' 
' → logprob: -6.723315238952637

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.17953673005104065
    2. ' print' → logprob: -1.9295367002487183
    3. '\n' → logprob: -4.554536819458008
    4. '"' → logprob: -5.804536819458008
    5. '"\' → logprob: -6.554536819458008
    6. ' \' → logprob: -6.804536819458008
    7. ' ' → logprob: -6.804536819458008
    8. ''' → logprob: -7.429536819458008
    9. ''\' → logprob: -7.429536819458008
    10. '    ' → logprob: -8.929536819458008

Token 39: '(":' (ID: 40387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.301168292760849
    2. '("' → logprob: -1.8011683225631714
    3. '"' → logprob: -2.676168203353882
    4. '("("' → logprob: -4.426168441772461
    5. '('' → logprob: -4.676168441772461
    6. '(":' → logprob: -5.801168441772461
    7. ''' → logprob: -7.176168441772461
    8. '"(' → logprob: -8.801168441772461
    9. '()' → logprob: -8.926168441772461
    10. '("")' → logprob: -9.176168441772461

Token 40: '("' (ID: 568)
  Prédit: ':('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.015235739760100842
    2. ':' → logprob: -5.640235900878906
    3. '(":' → logprob: -6.140235900878906
    4. ')' → logprob: -6.515235900878906
    5. ':D' → logprob: -6.765235900878906
    6. ' :(' → logprob: -6.890235900878906
    7. '-' → logprob: -6.890235900878906
    8. '(' → logprob: -7.515235900878906
    9. 'Yes' → logprob: -7.640235900878906
    10. '("' → logprob: -8.015235900878906

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16040365397930145
    2. 'else' → logprob: -2.4104037284851074
    3. 'elif' → logprob: -3.0354037284851074
    4. '\n' → logprob: -5.160403728485107
    5. ' else' → logprob: -6.910403728485107
    6. ')
' → logprob: -7.035403728485107
    7. '")' → logprob: -7.410403728485107
    8. '\' → logprob: -7.660403728485107
    9. '    
' → logprob: -8.28540325164795
    10. '  
' → logprob: -8.28540325164795

Token 42: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3516063392162323
    2. 'else' → logprob: -1.2266063690185547
    3. '\n' → logprob: -6.726606369018555
    4. ' else' → logprob: -7.476606369018555
    5. ' elif' → logprob: -7.976606369018555
    6. ')' → logprob: -7.976606369018555
    7. '    
' → logprob: -8.476606369018555
    8. 'el' → logprob: -8.726606369018555
    9. '  
' → logprob: -9.726606369018555
    10. '
' → logprob: -10.101606369018555

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07113010436296463
    2. '   ' → logprob: -2.6961300373077393
    3. ':
' → logprob: -7.071130275726318
    4. '    ' → logprob: -9.57112979888916
    5. '    
' → logprob: -9.57112979888916
    6. ' :' → logprob: -9.69612979888916
    7. ')' → logprob: -10.82112979888916
    8. '
' → logprob: -11.07112979888916
    9. 'print' → logprob: -11.32112979888916
    10. '```' → logprob: -11.57112979888916

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9457628130912781
    2. '"' → logprob: -1.8207628726959229
    3. '")' → logprob: -1.9457628726959229
    4. '":' → logprob: -2.070762872695923
    5. 'if' → logprob: -3.320762872695923
    6. 'print' → logprob: -3.570762872695923
    7. ':)' → logprob: -4.445762634277344
    8. '    ' → logprob: -4.445762634277344
    9. ' ' → logprob: -4.570762634277344
    10. '  ' → logprob: -4.695762634277344

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004919685423374176
    2. 'if' → logprob: -5.629919528961182
    3. '   ' → logprob: -7.129919528961182
    4. ':)' → logprob: -9.25492000579834
    5. ' print' → logprob: -9.75492000579834
    6. '")' → logprob: -9.75492000579834
    7. '"' → logprob: -9.87992000579834
    8. 'printf' → logprob: -10.37992000579834
    9. '("' → logprob: -10.62992000579834
    10. '    ' → logprob: -10.62992000579834

Token 46: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12302859127521515
    2. '"' → logprob: -2.248028516769409
    3. '(":' → logprob: -5.623028755187988
    4. '   ' → logprob: -5.998028755187988
    5. '(' → logprob: -6.123028755187988
    6. ' ' → logprob: -7.373028755187988
    7. '    ' → logprob: -8.248028755187988
    8. '("("' → logprob: -8.498028755187988
    9. '("(' → logprob: -9.248028755187988
    10. '  ' → logprob: -9.248028755187988

Token 47: 'Y' (ID: 56)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9516782760620117
    2. '")' → logprob: -1.2016782760620117
    3. 'Y' → logprob: -2.2016782760620117
    4. 'O' → logprob: -2.9516782760620117
    5. ':)' → logprob: -3.5766782760620117
    6. ')' → logprob: -3.5766782760620117
    7. '("' → logprob: -3.7016782760620117
    8. '"O' → logprob: -4.076678276062012
    9. '"D' → logprob: -4.451678276062012
    10. '"T' → logprob: -4.951678276062012

Token 48: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.3003930449485779
    2. 'ey' → logprob: -2.0503931045532227
    3. 'a' → logprob: -2.8003931045532227
    4. 'e' → logprob: -3.4253931045532227
    5. 'es' → logprob: -4.425393104553223
    6. 'ayy' → logprob: -5.425393104553223
    7. 'AY' → logprob: -5.550393104553223
    8. 'A' → logprob: -5.550393104553223
    9. '\' → logprob: -6.550393104553223
    10. 'us' → logprob: -6.675393104553223

Token 49: '!")' (ID: 193340)
  Prédit: '!")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!")' → logprob: -0.03135579824447632
    2. '")' → logprob: -3.906355857849121
    3. ')")' → logprob: -4.656355857849121
    4. '!)' → logprob: -6.781355857849121
    5. ')' → logprob: -9.906355857849121
    6. '!' → logprob: -10.406355857849121
    7. '!")
' → logprob: -10.906355857849121
    8. ':)' → logprob: -11.031355857849121
    9. '}")' → logprob: -13.906355857849121
    10. '😊' → logprob: -13.906355857849121


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 31.91%
Précision adaptée (1ère position): 36.17%
Précision (top 10): 78.72%
================================================================================
