================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on va demander à l'utilisateur un nombre et faire la somme
n = int(input())  # l'utilisateur entre un nombre, j'espère que c'est un entier
total = 0
for i in range(1, n+1):
    # On saute les multiples de 3 et 5, c'est la consigne
    if i % 3 == 0 or i % 5 == 0:
        continue # sinon on skip
    total += i  # Ajout à la somme (faut pas oublier)
print(total) # Et voilà, on affiche le truc
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042234621942043304
    2. '```' → logprob: -3.7922346591949463
    3. '  ' → logprob: -4.917234420776367
    4. ' je' → logprob: -5.667234420776367
    5. '`' → logprob: -6.167234420776367
    6. ''' → logprob: -6.667234420776367
    7. ' ```' → logprob: -6.917234420776367
    8. ' t' → logprob: -7.667234420776367
    9. '#' → logprob: -7.917234420776367
    10. ',' → logprob: -8.042234420776367

Token 4: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44003352522850037
    2. 'e' → logprob: -2.065033435821533
    3. ' continue' → logprob: -3.065033435821533
    4. ' e' → logprob: -3.690033435821533
    5. ' va' → logprob: -3.815033435821533
    6. 't' → logprob: -4.065033435821533
    7. ' a' → logprob: -4.190033435821533
    8. ' veut' → logprob: -4.190033435821533
    9. 'ne' → logprob: -4.690033435821533
    10. '_' → logprob: -4.815033435821533

Token 5: ' demander' (ID: 60771)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1506417989730835
    2. ' y' → logprob: -3.025641918182373
    3. ' continuer' → logprob: -3.525641918182373
    4. 's' → logprob: -4.525641918182373
    5. '_' → logprob: -5.025641918182373
    6. '   ' → logprob: -5.525641918182373
    7. ' essayer' → logprob: -5.525641918182373
    8. '  ' → logprob: -5.525641918182373
    9. 't' → logprob: -5.900641918182373
    10. 'l' → logprob: -5.900641918182373

Token 6: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.010432243347168
    2. '_' → logprob: -1.260432243347168
    3. '.' → logprob: -2.510432243347168
    4. ' ' → logprob: -2.635432243347168
    5. '```' → logprob: -3.385432243347168
    6. '!' → logprob: -3.510432243347168
    7. 'à' → logprob: -3.885432243347168
    8. ' à' → logprob: -4.010432243347168
    9. 'l' → logprob: -4.385432243347168
    10. '`' → logprob: -4.385432243347168

Token 7: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21300169825553894
    2. ' l' → logprob: -3.0880017280578613
    3. 'la' → logprob: -4.088001728057861
    4. 'vous' → logprob: -4.088001728057861
    5. ' la' → logprob: -4.338001728057861
    6. ' python' → logprob: -4.588001728057861
    7. ' toi' → logprob: -4.713001728057861
    8. 'le' → logprob: -5.088001728057861
    9. 'toi' → logprob: -5.088001728057861
    10. ' Python' → logprob: -5.338001728057861

Token 8: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.7251669764518738
    2. 'a' → logprob: -0.9751669764518738
    3. 'util' → logprob: -2.6001670360565186
    4. ''' → logprob: -4.3501667976379395
    5. 'ui' → logprob: -4.4751667976379395
    6. 'e' → logprob: -4.7251667976379395
    7. ' utilisateur' → logprob: -4.9751667976379395
    8. 'user' → logprob: -5.2251667976379395
    9. '’utilisateur' → logprob: -5.4751667976379395
    10. 'é' → logprob: -5.6001667976379395

Token 9: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6822798848152161
    2. '_' → logprob: -2.1822798252105713
    3. 'input' → logprob: -2.1822798252105713
    4. '`' → logprob: -2.6822798252105713
    5. '```' → logprob: -2.6822798252105713
    6. '#' → logprob: -3.8072798252105713
    7. 's' → logprob: -4.05728006362915
    8. ':' → logprob: -4.55728006362915
    9. ' `' → logprob: -4.80728006362915
    10. 'print' → logprob: -5.18228006362915

Token 10: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05815926939249039
    2. 'nombre' → logprob: -4.058159351348877
    3. 'nom' → logprob: -4.558159351348877
    4. 'n' → logprob: -5.183159351348877
    5. 'input' → logprob: -5.433159351348877
    6. 'a' → logprob: -5.683159351348877
    7. ' input' → logprob: -5.808159351348877
    8. ' nombre' → logprob: -5.933159351348877
    9. 'entrée' → logprob: -5.933159351348877
    10. ' nom' → logprob: -6.183159351348877

Token 11: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.059452418237924576
    2. '#' → logprob: -4.309452533721924
    3. 'x' → logprob: -4.434452533721924
    4. 'nombre' → logprob: -4.559452533721924
    5. '\n' → logprob: -4.934452533721924
    6. '\' → logprob: -5.184452533721924
    7. '`' → logprob: -5.934452533721924
    8. '```' → logprob: -6.059452533721924
    9. '_' → logprob: -6.934452533721924
    10. 'i' → logprob: -7.559452533721924

Token 12: ' faire' (ID: 8119)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9357122182846069
    2. '#' → logprob: -1.560712218284607
    3. 'le' → logprob: -1.560712218284607
    4. 'aff' → logprob: -3.1857123374938965
    5. ' le' → logprob: -3.3107123374938965
    6. ' l' → logprob: -4.1857123374938965
    7. 'calcul' → logprob: -4.1857123374938965
    8. ' lui' → logprob: -4.4357123374938965
    9. 'faire' → logprob: -4.4357123374938965
    10. ' calcul' → logprob: -4.8107123374938965

Token 13: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6448085904121399
    2. 'un' → logprob: -1.8948085308074951
    3. 'calcul' → logprob: -2.394808530807495
    4. '```' → logprob: -3.019808530807495
    5. 's' → logprob: -3.269808530807495
    6. 'le' → logprob: -3.644808530807495
    7. 'la' → logprob: -3.644808530807495
    8. 'l' → logprob: -3.769808530807495
    9. 'input' → logprob: -4.019808769226074
    10. 'factor' → logprob: -5.269808769226074

Token 14: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03063553012907505
    2. ' somme' → logprob: -4.530635356903076
    3. '*' → logprob: -5.655635356903076
    4. '#' → logprob: -6.030635356903076
    5. 'suite' → logprob: -6.530635356903076
    6. 'factor' → logprob: -6.655635356903076
    7. 'calcul' → logprob: -6.905635356903076
    8. '*s' → logprob: -7.155635356903076
    9. '```' → logprob: -7.280635356903076
    10. '+' → logprob: -7.405635356903076

Token 15: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6419447660446167
    2. '\n' → logprob: -2.5169448852539062
    3. 's' → logprob: -2.6419448852539062
    4. '_' → logprob: -2.8919448852539062
    5. ' ' → logprob: -3.0169448852539062
    6. '\' → logprob: -3.1419448852539062
    7. '#' → logprob: -3.2669448852539062
    8. '.' → logprob: -3.3919448852539062
    9. '```' → logprob: -3.5169448852539062
    10. 'x' → logprob: -3.8919448852539062

Token 16: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5777902007102966
    2. '_' → logprob: -1.8277902603149414
    3. ' ' → logprob: -1.8277902603149414
    4. '\' → logprob: -3.3277902603149414
    5. 's' → logprob: -3.4527902603149414
    6. 'nombre' → logprob: -4.827790260314941
    7. '\n' → logprob: -5.077790260314941
    8. '.' → logprob: -5.202790260314941
    9. 'x' → logprob: -5.327790260314941
    10. '```' → logprob: -5.452790260314941

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14888519048690796
    2. ' ' → logprob: -2.5238852500915527
    3. '=' → logprob: -3.8988852500915527
    4. 'ombre' → logprob: -4.273885250091553
    5. 'umber' → logprob: -4.398885250091553
    6. 'um' → logprob: -5.023885250091553
    7. 'b' → logprob: -6.023885250091553
    8. '_' → logprob: -6.648885250091553
    9. 'u' → logprob: -7.648885250091553
    10. 'm' → logprob: -8.523884773254395

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10071985423564911
    2. 'int' → logprob: -2.350719928741455
    3. ' ' → logprob: -8.100719451904297
    4. ' input' → logprob: -8.725719451904297
    5. 'input' → logprob: -10.600719451904297
    6. '0' → logprob: -11.100719451904297
    7. '10' → logprob: -13.100719451904297
    8. '=int' → logprob: -13.350719451904297
    9. '1' → logprob: -13.725719451904297
    10. '5' → logprob: -14.475719451904297

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06200153008103371
    2. '(' → logprob: -2.8120014667510986
    3. 'input' → logprob: -11.06200122833252
    4. ' (' → logprob: -11.18700122833252
    5. '(
' → logprob: -12.68700122833252
    6. '(

' → logprob: -14.31200122833252
    7. '()' → logprob: -15.43700122833252
    8. '=input' → logprob: -16.062002182006836
    9. '<input' → logprob: -16.562002182006836
    10. '('' → logprob: -16.687002182006836

Token 20: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029470883309841156
    2. '("("' → logprob: -4.529470920562744
    3. '('' → logprob: -4.904470920562744
    4. '("' → logprob: -5.279470920562744
    5. '()' → logprob: -5.279470920562744
    6. '("")' → logprob: -8.279470443725586
    7. '(""))' → logprob: -8.529470443725586
    8. '(">' → logprob: -9.654470443725586
    9. '(
' → logprob: -10.154470443725586
    10. '(""' → logprob: -10.529470443725586

Token 21: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012029795907437801
    2. ' +' → logprob: -4.637029647827148
    3. ' ' → logprob: -6.762029647827148
    4. '+
' → logprob: -7.762029647827148
    5. ')' → logprob: -8.887029647827148
    6. '+n' → logprob: -8.887029647827148
    7. ' +
' → logprob: -9.512029647827148
    8. '+)' → logprob: -9.512029647827148
    9. '
' → logprob: -10.262029647827148
    10. ' )' → logprob: -10.887029647827148

Token 22: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.399726927280426
    2. 's' → logprob: -1.3997268676757812
    3. '+' → logprob: -3.0247268676757812
    4. ' s' → logprob: -4.649726867675781
    5. ' +' → logprob: -4.899726867675781
    6. 'total' → logprob: -5.899726867675781
    7. ')' → logprob: -6.024726867675781
    8. ' )' → logprob: -6.399726867675781
    9. 'sum' → logprob: -6.524726867675781
    10. ' =' → logprob: -6.649726867675781

Token 23: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014005064032971859
    2. ' n' → logprob: -4.764005184173584
    3. '  ' → logprob: -5.889005184173584
    4. ' )' → logprob: -6.764005184173584
    5. 'n' → logprob: -6.889005184173584
    6. ')' → logprob: -10.014004707336426
    7. ' sum' → logprob: -10.264004707336426
    8. ' somme' → logprob: -10.264004707336426
    9. 'sum' → logprob: -10.514004707336426
    10. 's' → logprob: -10.514004707336426

Token 24: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24803932011127472
    2. 'e' → logprob: -1.7480393648147583
    3. 'n' → logprob: -4.873039245605469
    4. ' '' → logprob: -5.373039245605469
    5. ' n' → logprob: -5.623039245605469
    6. ''utilisateur' → logprob: -5.623039245605469
    7. 'nombre' → logprob: -5.748039245605469
    8. ' a' → logprob: -5.873039245605469
    9. 'u' → logprob: -5.998039245605469
    10. ''' → logprob: -6.123039245605469

Token 25: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1944059282541275
    2. ' )' → logprob: -2.694406032562256
    3. ')' → logprob: -3.319406032562256
    4. ' n' → logprob: -4.444406032562256
    5. ' veut' → logprob: -4.694406032562256
    6. ' souhaite' → logprob: -4.944406032562256
    7. '+' → logprob: -5.069406032562256
    8. ' +' → logprob: -5.069406032562256
    9. '  ' → logprob: -5.569406032562256
    10. '.' → logprob: -5.569406032562256

Token 26: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03070986270904541
    2. ' ' → logprob: -3.655709743499756
    3. 'un' → logprob: -6.280709743499756
    4. '  ' → logprob: -7.280709743499756
    5. ' son' → logprob: -7.280709743499756
    6. ' ' → logprob: -7.780709743499756
    7. ' le' → logprob: -8.780710220336914
    8. ' a' → logprob: -9.405710220336914
    9. ''un' → logprob: -9.405710220336914
    10. 'n' → logprob: -9.530710220336914

Token 27: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2964840829372406
    2. ' nombre' → logprob: -1.671484112739563
    3. 'n' → logprob: -3.9214839935302734
    4. ' ' → logprob: -4.046483993530273
    5. 'ent' → logprob: -4.046483993530273
    6. ' entier' → logprob: -4.546483993530273
    7. '_nombre' → logprob: -7.171483993530273
    8. 'e' → logprob: -7.421483993530273
    9. 'ombre' → logprob: -8.171483993530273
    10. ' n' → logprob: -8.421483993530273

Token 28: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2171047478914261
    2. ' ' → logprob: -2.34210467338562
    3. ' s' → logprob: -2.71710467338562
    4. ' total' → logprob: -4.967104911804199
    5. 'total' → logprob: -5.717104911804199
    6. ' 
' → logprob: -5.842104911804199
    7. ' suma' → logprob: -5.842104911804199
    8. ')' → logprob: -5.967104911804199
    9. 'sum' → logprob: -6.467104911804199
    10. 'n' → logprob: -6.467104911804199

Token 29: ' j' (ID: 441)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4482375979423523
    2. ' total' → logprob: -1.948237657546997
    3. ' s' → logprob: -2.073237657546997
    4. 'total' → logprob: -3.448237657546997
    5. ' somme' → logprob: -3.573237657546997
    6. 'sum' → logprob: -4.698237419128418
    7. ' sum' → logprob: -4.823237419128418
    8. 'result' → logprob: -5.198237419128418
    9. ' ' → logprob: -6.073237419128418
    10. ' result' → logprob: -6.323237419128418

Token 30: ''espère' (ID: 116557)
  Prédit: 'uste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uste' → logprob: -0.6903486251831055
    2. 'us' → logprob: -1.4403486251831055
    3. 'e' → logprob: -1.6903486251831055
    4. 'ust' → logprob: -2.8153486251831055
    5. ''' → logprob: -4.8153486251831055
    6. ''us' → logprob: -6.0653486251831055
    7. 'uge' → logprob: -6.8153486251831055
    8. ''espère' → logprob: -7.1903486251831055
    9. ''ai' → logprob: -7.3153486251831055
    10. ''aj' → logprob: -7.4403486251831055

Token 31: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30713045597076416
    2. ')' → logprob: -2.4321303367614746
    3. '<|end|>' → logprob: -3.0571303367614746
    4. 'n' → logprob: -3.1821303367614746
    5. 's' → logprob: -3.3071303367614746
    6. ' 
' → logprob: -3.9321303367614746
    7. ' )' → logprob: -4.807130336761475
    8. ' n' → logprob: -5.557130336761475
    9. '
' → logprob: -6.182130336761475
    10. '+' → logprob: -6.432130336761475

Token 32: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.3656517267227173
    2. ' ce' → logprob: -1.6156517267227173
    3. ' ' → logprob: -1.7406517267227173
    4. 'c' → logprob: -2.2406516075134277
    5. ' celui' → logprob: -2.3656516075134277
    6. ' tout' → logprob: -2.7406516075134277
    7. ' tu' → logprob: -3.6156516075134277
    8. ' vous' → logprob: -4.240651607513428
    9. '  ' → logprob: -4.615651607513428
    10. ' n' → logprob: -4.740651607513428

Token 33: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3013694286346436
    2. ''est' → logprob: -1.3013694286346436
    3. ''' → logprob: -1.5513694286346436
    4. 'a' → logprob: -1.8013694286346436
    5. ''a' → logprob: -3.3013694286346436
    6. ''#' → logprob: -3.6763694286346436
    7. 'est' → logprob: -5.301369667053223
    8. ''e' → logprob: -6.051369667053223
    9. 'l' → logprob: -6.551369667053223
    10. 'ela' → logprob: -6.926369667053223

Token 34: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.43696221709251404
    2. ' bien' → logprob: -1.0619622468948364
    3. ' correct' → logprob: -5.686962127685547
    4. 'bien' → logprob: -6.186962127685547
    5. ' valid' → logprob: -7.061962127685547
    6. ' entier' → logprob: -7.436962127685547
    7. 'un' → logprob: -7.686962127685547
    8. ' ' → logprob: -8.186962127685547
    9. ' une' → logprob: -8.311962127685547
    10. ' valide' → logprob: -9.686962127685547

Token 35: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.3506390154361725
    2. ' ' → logprob: -1.85063898563385
    3. ' nombre' → logprob: -2.1006391048431396
    4. 'ent' → logprob: -4.8506388664245605
    5. 'nombre' → logprob: -5.9756388664245605
    6. ' espace' → logprob: -6.3506388664245605
    7. '  ' → logprob: -6.8506388664245605
    8. 'n' → logprob: -6.8506388664245605
    9. ' ' → logprob: -7.4756388664245605
    10. '```' → logprob: -8.600639343261719

Token 36: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048396121710538864
    2. ' ' → logprob: -4.048396110534668
    3. 'total' → logprob: -5.048396110534668
    4. ' total' → logprob: -5.423396110534668
    5. 'n' → logprob: -5.798396110534668
    6. '
' → logprob: -6.048396110534668
    7. ' suma' → logprob: -6.173396110534668
    8. ' 
' → logprob: -6.298396110534668
    9. 'sum' → logprob: -6.298396110534668
    10. ' somme' → logprob: -6.423396110534668

Token 37: 'total' (ID: 9577)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10224482417106628
    2. ' s' → logprob: -2.8522448539733887
    3. ' total' → logprob: -3.9772448539733887
    4. 'total' → logprob: -4.602244853973389
    5. ' ' → logprob: -5.852244853973389
    6. 'sum' → logprob: -6.227244853973389
    7. ' somme' → logprob: -6.352244853973389
    8. ' sum' → logprob: -6.852244853973389
    9. 'result' → logprob: -7.477244853973389
    10. ' suma' → logprob: -7.602244853973389

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058098647743463516
    2. ' ' → logprob: -3.683098554611206
    3. ' +=' → logprob: -3.933098554611206
    4. '=' → logprob: -4.808098793029785
    5. '_' → logprob: -5.683098793029785
    6. '_space' → logprob: -10.558098793029785
    7. ' _' → logprob: -10.808098793029785
    8. '+' → logprob: -10.933098793029785
    9. 'space' → logprob: -11.183098793029785
    10. '  ' → logprob: -11.183098793029785

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519306540489197
    2. ' ' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.626930236816406
    4. ' n' → logprob: -15.501930236816406
    5. 'n' → logprob: -16.001930236816406
    6. '  ' → logprob: -18.001930236816406
    7. '۰' → logprob: -18.439430236816406
    8. '1' → logprob: -18.689430236816406
    9. '​' → logprob: -18.939430236816406
    10. '10' → logprob: -19.314430236816406

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. 'n' → logprob: -15.62523078918457
    4. ' n' → logprob: -18.37523078918457
    5. ' ' → logprob: -19.75023078918457
    6. '۰' → logprob: -20.37523078918457
    7. '1' → logprob: -20.62523078918457
    8. 'int' → logprob: -21.12523078918457
    9. '```' → logprob: -21.25023078918457
    10. '000' → logprob: -21.37523078918457

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26675963401794434
    2. 'for' → logprob: -1.6417596340179443
    3. ' for' → logprob: -3.6417596340179443
    4. ' 
' → logprob: -4.891759872436523
    5. '\n' → logprob: -5.516759872436523
    6. '
' → logprob: -7.266759872436523
    7. '' → logprob: -7.391759872436523
    8. '\' → logprob: -7.516759872436523
    9. ' ' → logprob: -8.391759872436523
    10. '```' → logprob: -8.391759872436523

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08083586394786835
    2. '
' → logprob: -2.7058358192443848
    3. ' for' → logprob: -4.580835819244385
    4. '\n' → logprob: -8.705836296081543
    5. ' 
' → logprob: -8.955836296081543
    6. '```' → logprob: -9.205836296081543
    7. 'i' → logprob: -9.705836296081543
    8. '' → logprob: -10.080836296081543
    9. 'n' → logprob: -10.455836296081543
    10. '

' → logprob: -10.580836296081543

Token 43: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3134654462337494
    2. ' i' → logprob: -1.3134654760360718
    3. '  ' → logprob: -9.188465118408203
    4. 'i' → logprob: -10.313465118408203
    5. '_' → logprob: -10.938465118408203
    6. ' _' → logprob: -11.063465118408203
    7. ' n' → logprob: -11.313465118408203
    8. ' ‌' → logprob: -11.563465118408203
    9. ' ' → logprob: -11.938465118408203
    10. ' range' → logprob: -12.813465118408203

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004338021855801344
    2. ' ' → logprob: -5.879337787628174
    3. 'in' → logprob: -6.504337787628174
    4. '  ' → logprob: -11.504338264465332
    5. ' i' → logprob: -11.504338264465332
    6. '```' → logprob: -12.879338264465332
    7. ' n' → logprob: -13.379338264465332
    8. 'n' → logprob: -13.629338264465332
    9. '1' → logprob: -13.754338264465332
    10. 'range' → logprob: -14.004338264465332

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009738749358803034
    2. 'range' → logprob: -7.375973701477051
    3. ' ' → logprob: -8.00097370147705
    4. '	range' → logprob: -12.00097370147705
    5. '(range' → logprob: -13.12597370147705
    6. ' ' → logprob: -13.37597370147705
    7. ' xrange' → logprob: -14.62597370147705
    8. ' n' → logprob: -14.62597370147705
    9. '  ' → logprob: -14.87597370147705
    10. '```' → logprob: -14.87597370147705

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03806249052286148
    2. '(n' → logprob: -3.288062572479248
    3. '(
' → logprob: -11.66306209564209
    4. '(i' → logprob: -12.03806209564209
    5. '(int' → logprob: -13.66306209564209
    6. '(len' → logprob: -13.78806209564209
    7. '((' → logprob: -13.78806209564209
    8. ' (' → logprob: -14.16306209564209
    9. '('' → logprob: -14.41306209564209
    10. '(

' → logprob: -14.53806209564209

Token 47: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1716160774230957
    2. '1' → logprob: -1.9216160774230957
    3. ' n' → logprob: -4.546616077423096
    4. '(n' → logprob: -7.546616077423096
    5. '(' → logprob: -9.046615600585938
    6. ' ' → logprob: -9.796615600585938
    7. ')n' → logprob: -11.421615600585938
    8. ',n' → logprob: -12.171615600585938
    9. ')' → logprob: -12.921615600585938
    10. '	n' → logprob: -13.171615600585938

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04164854437112808
    2. '(n' → logprob: -3.9166486263275146
    3. '(' → logprob: -4.4166483879089355
    4. ',n' → logprob: -5.1666483879089355
    5. ' ,' → logprob: -5.7916483879089355
    6. ' (' → logprob: -10.791648864746094
    7. 'n' → logprob: -10.916648864746094
    8. ' n' → logprob: -12.291648864746094
    9. ',(' → logprob: -12.791648864746094
    10. ',
' → logprob: -13.166648864746094

Token 49: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519310414791107
    2. ' n' → logprob: -1.501931071281433
    3. ')n' → logprob: -13.876931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '	n' → logprob: -15.251931190490723
    6. '(n' → logprob: -15.376931190490723
    7. ')' → logprob: -15.876931190490723
    8. ' ' → logprob: -16.376930236816406
    9. '```' → logprob: -17.126930236816406
    10. '   ' → logprob: -17.626930236816406

Token 50: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20142163336277008
    2. '+' → logprob: -1.7014216184616089
    3. ' ' → logprob: -11.826421737670898
    4. ' +
' → logprob: -15.076421737670898
    5. '):' → logprob: -15.076421737670898
    6. ')' → logprob: -16.3264217376709
    7. '1' → logprob: -16.7014217376709
    8. '+
' → logprob: -16.8264217376709
    9. ',' → logprob: -16.9514217376709
    10. '):
' → logprob: -17.4514217376709

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -17.000024795532227
    4. '```' → logprob: -18.500024795532227
    5. '):' → logprob: -18.625024795532227
    6. '   ' → logprob: -19.250024795532227
    7. '2' → logprob: -19.625024795532227
    8. '):
' → logprob: -20.000024795532227
    9. '۱' → logprob: -20.500024795532227
    10. '  ' → logprob: -20.875024795532227

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004786699544638395
    2. ')' → logprob: -5.754786491394043
    3. ' ):' → logprob: -6.879786491394043
    4. ':' → logprob: -7.504786491394043
    5. ' :' → logprob: -11.254786491394043
    6. '):
' → logprob: -11.504786491394043
    7. ' )' → logprob: -13.004786491394043
    8. ',' → logprob: -13.504786491394043
    9. ' ' → logprob: -14.379786491394043
    10. '   ' → logprob: -14.629786491394043

Token 53: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11496633291244507
    2. ' total' → logprob: -2.36496639251709
    3. 'total' → logprob: -4.98996639251709
    4. '   ' → logprob: -5.48996639251709
    5. '    ' → logprob: -6.23996639251709
    6. ' 
' → logprob: -7.61496639251709
    7. '<|end|>' → logprob: -7.73996639251709
    8. '  ' → logprob: -7.86496639251709
    9. '(total' → logprob: -9.23996639251709
    10. '	total' → logprob: -9.23996639251709

Token 54: ' #' (ID: 1069)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0413840226829052
    2. 'total' → logprob: -3.416383981704712
    3. ' ' → logprob: -5.166384220123291
    4. '    ' → logprob: -6.291384220123291
    5. ' 
' → logprob: -9.791383743286133
    6. '     
' → logprob: -10.541383743286133
    7. '   ' → logprob: -10.791383743286133
    8. '<|end|>' → logprob: -11.416383743286133
    9. '_total' → logprob: -11.666383743286133
    10. '	total' → logprob: -11.916383743286133

Token 55: ' On' (ID: 2160)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.14777213335037231
    2. 'total' → logprob: -2.2727720737457275
    3. ' ' → logprob: -3.6477720737457275
    4. '    ' → logprob: -4.897772312164307
    5. '   ' → logprob: -7.397772312164307
    6. '  ' → logprob: -10.147771835327148
    7. ' ' → logprob: -10.522771835327148
    8. '	total' → logprob: -10.647771835327148
    9. 't' → logprob: -10.897771835327148
    10. ' t' → logprob: -11.022771835327148

Token 56: ' saute' (ID: 146395)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -1.036234736442566
    2. ' total' → logprob: -1.411234736442566
    3. 'total' → logprob: -2.0362348556518555
    4. '    ' → logprob: -2.1612348556518555
    5. ' addition' → logprob: -2.6612348556518555
    6. '   ' → logprob: -3.1612348556518555
    7. ' ' → logprob: -4.1612348556518555
    8. 'addition' → logprob: -5.6612348556518555
    9. ' fait' → logprob: -6.1612348556518555
    10. ' veut' → logprob: -6.5362348556518555

Token 57: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7626911401748657
    2. 'les' → logprob: -1.1376911401748657
    3. '   ' → logprob: -1.7626911401748657
    4. ' ' → logprob: -4.512691020965576
    5. ' i' → logprob: -5.262691020965576
    6. 'if' → logprob: -5.387691020965576
    7. ' if' → logprob: -5.387691020965576
    8. 'i' → logprob: -5.512691020965576
    9. '    ' → logprob: -5.512691020965576
    10. 'le' → logprob: -5.637691020965576

Token 58: ' multiples' (ID: 70720)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5742531418800354
    2. ' nombres' → logprob: -1.5742530822753906
    3. ' i' → logprob: -2.1992530822753906
    4. ' ' → logprob: -3.1992530822753906
    5. 'n' → logprob: -3.6992530822753906
    6. '   ' → logprob: -3.9492530822753906
    7. ' multiples' → logprob: -4.074253082275391
    8. 'nombre' → logprob: -5.074253082275391
    9. 'multip' → logprob: -6.074253082275391
    10. 'div' → logprob: -6.074253082275391

Token 59: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6842568516731262
    2. '   ' → logprob: -1.4342567920684814
    3. 'de' → logprob: -1.5592567920684814
    4. '    ' → logprob: -3.8092567920684814
    5. ' ' → logprob: -4.0592570304870605
    6. '  ' → logprob: -5.3092570304870605
    7. '3' → logprob: -7.8092570304870605
    8. ' of' → logprob: -7.9342570304870605
    9. '2' → logprob: -8.059256553649902
    10. '```' → logprob: -8.434256553649902

Token 60: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005334078334271908
    2. ' ' → logprob: -5.38033390045166
    3. '5' → logprob: -7.88033390045166
    4. '2' → logprob: -8.25533390045166
    5. '4' → logprob: -10.00533390045166
    6. '7' → logprob: -11.00533390045166
    7. '  ' → logprob: -12.63033390045166
    8. ' trois' → logprob: -12.63033390045166
    9. '   ' → logprob: -13.38033390045166
    10. '10' → logprob: -13.38033390045166

Token 61: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002423814032226801
    2. '2' → logprob: -6.6274237632751465
    3. '5' → logprob: -7.0024237632751465
    4. '4' → logprob: -9.502424240112305
    5. '7' → logprob: -9.877424240112305
    6. ' ' → logprob: -10.002424240112305
    7. '10' → logprob: -12.377424240112305
    8. 'de' → logprob: -13.252424240112305
    9. '13' → logprob: -13.502424240112305
    10. '6' → logprob: -13.752424240112305

Token 62: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007510080002248287
    2. ' if' → logprob: -5.632510185241699
    3. '    ' → logprob: -6.882510185241699
    4. '  ' → logprob: -7.132510185241699
    5. '    
' → logprob: -7.507510185241699
    6. ' ' → logprob: -7.507510185241699
    7. 'if' → logprob: -7.882510185241699
    8. ':' → logprob: -8.6325101852417
    9. ',' → logprob: -8.7575101852417
    10. '   
' → logprob: -9.7575101852417

Token 63: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2764095664024353
    2. ' ' → logprob: -1.52640962600708
    3. '7' → logprob: -4.15140962600708
    4. '    ' → logprob: -5.40140962600708
    5. '2' → logprob: -6.15140962600708
    6. '   ' → logprob: -7.52640962600708
    7. '4' → logprob: -8.276409149169922
    8. '  ' → logprob: -9.026409149169922
    9. '6' → logprob: -9.026409149169922
    10. 's' → logprob: -9.151409149169922

Token 64: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.07471632212400436
    2. '7' → logprob: -2.699716329574585
    3. ' ' → logprob: -5.449716091156006
    4. '```' → logprob: -8.699716567993164
    5. '   ' → logprob: -8.949716567993164
    6. '    ' → logprob: -10.574716567993164
    7. '  ' → logprob: -10.699716567993164
    8. '2' → logprob: -11.074716567993164
    9. 's' → logprob: -11.137216567993164
    10. '#' → logprob: -12.512216567993164

Token 65: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04834296554327011
    2. '    ' → logprob: -3.6733429431915283
    3. ':' → logprob: -4.798343181610107
    4. '    
' → logprob: -5.798343181610107
    5. ' if' → logprob: -5.923343181610107
    6. ' :' → logprob: -6.548343181610107
    7. ',' → logprob: -6.923343181610107
    8. '     
' → logprob: -6.923343181610107
    9. ' ' → logprob: -7.298343181610107
    10. '       ' → logprob: -7.423343181610107

Token 66: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010324237868189812
    2. '    ' → logprob: -4.635324001312256
    3. '  ' → logprob: -8.760324478149414
    4. '    
' → logprob: -8.760324478149414
    5. '       ' → logprob: -8.885324478149414
    6. ' ' → logprob: -10.385324478149414
    7. '     ' → logprob: -10.635324478149414
    8. ' if' → logprob: -11.010324478149414
    9. ' continue' → logprob: -11.635324478149414
    10. '     
' → logprob: -11.760324478149414

Token 67: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8803040981292725
    2. 'ont' → logprob: -1.2553040981292725
    3. ''' → logprob: -2.3803040981292725
    4. 'on' → logprob: -3.0053040981292725
    5. 'i' → logprob: -3.1303040981292725
    6. 'e' → logprob: -3.5053040981292725
    7. ''est' → logprob: -3.6303040981292725
    8. 'es' → logprob: -3.8803040981292725
    9. ''on' → logprob: -5.255304336547852
    10. 'a' → logprob: -5.880304336547852

Token 68: ' la' (ID: 557)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.2362455129623413
    2. 'pas' → logprob: -1.9862455129623413
    3. '-à' → logprob: -2.111245632171631
    4. ' pas' → logprob: -2.236245632171631
    5. ' à' → logprob: -2.986245632171631
    6. ' facile' → logprob: -3.361245632171631
    7. 'tout' → logprob: -3.361245632171631
    8. 's' → logprob: -3.361245632171631
    9. ' un' → logprob: -4.111245632171631
    10. 'l' → logprob: -4.361245632171631

Token 69: ' cons' (ID: 1473)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1052383184432983
    2. ' ' → logprob: -1.6052383184432983
    3. 'suite' → logprob: -1.7302383184432983
    4. 'contin' → logprob: -2.355238437652588
    5. '   ' → logprob: -3.605238437652588
    6. 'raison' → logprob: -3.855238437652588
    7. 'condition' → logprob: -3.980238437652588
    8. 'ligne' → logprob: -4.230238437652588
    9. ' continue' → logprob: -4.355238437652588
    10. 's' → logprob: -4.480238437652588

Token 70: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.003087040036916733
    2. 'e' → logprob: -7.253087043762207
    3. 'ignation' → logprob: -7.503087043762207
    4. 'ign' → logprob: -7.628087043762207
    5. 'igna' → logprob: -8.128087043762207
    6. '#' → logprob: -8.503087043762207
    7. 'erve' → logprob: -9.628087043762207
    8. ' ' → logprob: -9.753087043762207
    9. 'ignes' → logprob: -10.003087043762207
    10. 'gne' → logprob: -10.128087043762207

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01733039878308773
    2. '    
' → logprob: -4.142330169677734
    3. '<|end|>' → logprob: -8.017330169677734
    4. '    ' → logprob: -8.642330169677734
    5. '```' → logprob: -8.767330169677734
    6. '   
' → logprob: -8.892330169677734
    7. '
' → logprob: -9.142330169677734
    8. '     
' → logprob: -9.267330169677734
    9. ' 
' → logprob: -9.517330169677734
    10. ':' → logprob: -9.892330169677734

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002338066464290023
    2. '    
' → logprob: -6.25233793258667
    3. '<|end|>' → logprob: -8.752338409423828
    4. '    ' → logprob: -9.002338409423828
    5. ' 
' → logprob: -10.252338409423828
    6. '     
' → logprob: -10.627338409423828
    7. '```' → logprob: -10.877338409423828
    8. ' if' → logprob: -11.252338409423828
    9. '   
' → logprob: -12.127338409423828
    10. '<|end|>' → logprob: -12.627338409423828

Token 73: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021415427327156067
    2. 'if' (adapté à ' if') → logprob: -4.2714152336120605
    3. ' if' → logprob: -5.0214152336120605
    4. '    ' → logprob: -7.3964152336120605
    5. '   ' → logprob: -12.271415710449219
    6. '    
' → logprob: -12.396415710449219
    7. '       ' → logprob: -13.146415710449219
    8. '  ' → logprob: -13.146415710449219
    9. '	if' → logprob: -13.146415710449219
    10. '```' → logprob: -13.771415710449219

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0031419508159160614
    2. ' (' → logprob: -6.3781418800354
    3. 'i' → logprob: -6.8781418800354
    4. ' ' → logprob: -7.8781418800354
    5. '(i' → logprob: -11.003142356872559
    6. '(' → logprob: -12.253142356872559
    7. ' ' → logprob: -12.753142356872559
    8. '	i' → logprob: -13.253142356872559
    9. ' not' → logprob: -13.503142356872559
    10. '  ' → logprob: -13.628142356872559

Token 75: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006945772562175989
    2. '%' → logprob: -5.006945610046387
    3. ' ' → logprob: -8.381945610046387
    4. '%i' → logprob: -15.256945610046387
    5. ' ' → logprob: -15.506945610046387
    6. ' %(' → logprob: -15.631945610046387
    7. '  ' → logprob: -15.881945610046387
    8. ' %
' → logprob: -16.506946563720703
    9. ' ==' → logprob: -16.756946563720703
    10. '%e' → logprob: -16.881946563720703

Token 76: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12694239616394043
    2. ' ' → logprob: -2.1269423961639404
    3. '  ' → logprob: -13.12694263458252
    4. '```' → logprob: -13.25194263458252
    5. '	' → logprob: -13.37694263458252
    6. '   ' → logprob: -13.93944263458252
    7. ' (' → logprob: -13.93944263458252
    8. '(' → logprob: -14.18944263458252
    9. '    ' → logprob: -14.18944263458252
    10. '33' → logprob: -14.43944263458252

Token 77: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003995680599473417
    2. ' ' → logprob: -7.875399589538574
    3. '15' → logprob: -11.250399589538574
    4. '   ' → logprob: -13.375399589538574
    5. '  ' → logprob: -13.625399589538574
    6. '```' → logprob: -13.625399589538574
    7. 'and' → logprob: -14.375399589538574
    8. '5' → logprob: -14.625399589538574
    9. '35' → logprob: -15.000399589538574
    10. ')' → logprob: -15.937899589538574

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6346068382263184
    2. '==' → logprob: -1.1346068382263184
    3. ' !=' → logprob: -2.0096068382263184
    4. '!=' → logprob: -4.259606838226318
    5. ' ' → logprob: -9.884607315063477
    6. '0' → logprob: -10.634607315063477
    7. '=' → logprob: -10.759607315063477
    8. ' or' → logprob: -10.759607315063477
    9. ' and' → logprob: -11.759607315063477
    10. 'and' → logprob: -12.384607315063477

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254246026277542
    2. ' ' → logprob: -1.6004246473312378
    3. '3' → logprob: -11.850424766540527
    4. '1' → logprob: -14.412924766540527
    5. '```' → logprob: -14.412924766540527
    6. '   ' → logprob: -14.475424766540527
    7. ' or' → logprob: -14.662924766540527
    8. '  ' → logprob: -14.725424766540527
    9. '=' → logprob: -14.850424766540527
    10. '    ' → logprob: -15.350424766540527

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021861877758055925
    2. ' ' → logprob: -6.127186298370361
    3. '3' → logprob: -14.502185821533203
    4. '```' → logprob: -16.189685821533203
    5. '1' → logprob: -16.502185821533203
    6. '5' → logprob: -17.064685821533203
    7. '۰' → logprob: -17.064685821533203
    8. '=' → logprob: -17.064685821533203
    9. '  ' → logprob: -17.189685821533203
    10. ' ' → logprob: -17.252185821533203

Token 81: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00037502311170101166
    2. 'or' → logprob: -8.250374794006348
    3. ' ' → logprob: -9.125374794006348
    4. '    ' → logprob: -13.500374794006348
    5. ' and' → logprob: -13.625374794006348
    6. '   ' → logprob: -13.625374794006348
    7. '  ' → logprob: -14.500374794006348
    8. '	or' → logprob: -15.125374794006348
    9. ':' → logprob: -17.000375747680664
    10. ' o' → logprob: -17.375375747680664

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00137143034953624
    2. 'i' → logprob: -6.626371383666992
    3. ' ' → logprob: -10.126371383666992
    4. ' ' → logprob: -13.376371383666992
    5. '   ' → logprob: -14.001371383666992
    6. '	i' → logprob: -14.251371383666992
    7. '5' → logprob: -14.626371383666992
    8. '    ' → logprob: -14.876371383666992
    9. '```' → logprob: -15.001371383666992
    10. '  ' → logprob: -15.251371383666992

Token 83: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.004153076093643904
    2. '%' → logprob: -5.629153251647949
    3. ' ' → logprob: -7.504153251647949
    4. '  ' → logprob: -13.87915325164795
    5. ' ' → logprob: -15.12915325164795
    6. '<|end|>' → logprob: -15.25415325164795
    7. '   ' → logprob: -16.004152297973633
    8. ')' → logprob: -16.379152297973633
    9. '    ' → logprob: -16.879152297973633
    10. '5' → logprob: -17.316652297973633

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.089077427983284
    2. '5' → logprob: -2.4640774726867676
    3. '<|end|>' → logprob: -9.71407699584961
    4. '  ' → logprob: -10.33907699584961
    5. ' ' → logprob: -10.58907699584961
    6. '20' → logprob: -12.58907699584961
    7. '    ' → logprob: -12.58907699584961
    8. '```' → logprob: -13.33907699584961
    9. '10' → logprob: -13.40157699584961
    10. '25' → logprob: -13.65157699584961

Token 85: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008090290939435363
    2. ' ' → logprob: -7.125809192657471
    3. '<|end|>' → logprob: -12.875808715820312
    4. '  ' → logprob: -13.625808715820312
    5. '```' → logprob: -15.250808715820312
    6. '   ' → logprob: -15.750808715820312
    7. ' ' → logprob: -16.438308715820312
    8. '    ' → logprob: -16.688308715820312
    9. '۵' → logprob: -17.438308715820312
    10. '५' → logprob: -17.750808715820312

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12789373099803925
    2. '==' → logprob: -2.1278936862945557
    3. ' ' → logprob: -7.002893924713135
    4. '0' → logprob: -10.877893447875977
    5. ')==' → logprob: -11.877893447875977
    6. ' !=' → logprob: -12.002893447875977
    7. '  ' → logprob: -12.252893447875977
    8. '=' → logprob: -12.377893447875977
    9. ')' → logprob: -12.877893447875977
    10. '   ' → logprob: -13.002893447875977

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254147082567215
    2. ' ' → logprob: -1.600414752960205
    3. ' ' → logprob: -14.475414276123047
    4. '```' → logprob: -14.475414276123047
    5. '   ' → logprob: -15.225414276123047
    6. '  ' → logprob: -15.225414276123047
    7. '<|end|>' → logprob: -16.350414276123047
    8. '=' → logprob: -16.600414276123047
    9. ' ' → logprob: -16.662914276123047
    10. '۰' → logprob: -17.037914276123047

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023250321100931615
    2. ' ' → logprob: -8.375232696533203
    3. '```' → logprob: -14.937732696533203
    4. '۰' → logprob: -15.187732696533203
    5. '00' → logprob: -15.625232696533203
    6. '०' → logprob: -15.937732696533203
    7. '٠' → logprob: -16.000232696533203
    8. '০' → logprob: -16.625232696533203
    9. '  ' → logprob: -16.625232696533203
    10. '012' → logprob: -16.937732696533203

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023994361981749535
    2. ':
' → logprob: -6.377399444580078
    3. '       ' → logprob: -7.377399444580078
    4. '   ' → logprob: -10.127399444580078
    5. 'continue' → logprob: -11.377399444580078
    6. ' continue' → logprob: -11.627399444580078
    7. '	continue' → logprob: -12.502399444580078
    8. ' :' → logprob: -12.627399444580078
    9. '):' → logprob: -13.502399444580078
    10. ' continues' → logprob: -13.752399444580078

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014304745709523559
    2. ' continue' → logprob: -7.376430511474609
    3. '   ' → logprob: -8.00143051147461
    4. 'continue' → logprob: -8.12643051147461
    5. '
' → logprob: -9.37643051147461
    6. ':' → logprob: -10.25143051147461
    7. '	continue' → logprob: -10.37643051147461
    8. '	' → logprob: -12.87643051147461
    9. '	   ' → logprob: -13.12643051147461
    10. ' continues' → logprob: -13.25143051147461

Token 91: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46780136227607727
    2. 'continue' (adapté à ' continue') → logprob: -1.2178013324737549
    3. ' continue' → logprob: -2.717801332473755
    4. '   ' → logprob: -4.717801570892334
    5. '	continue' → logprob: -6.342801570892334
    6. '           ' → logprob: -7.217801570892334
    7. '```' → logprob: -8.592801094055176
    8. '_continue' → logprob: -10.467801094055176
    9. 'contin' → logprob: -10.592801094055176
    10. '
' → logprob: -11.092801094055176

Token 92: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35797399282455444
    2. '    
' → logprob: -1.3579740524291992
    3. '
' → logprob: -3.357974052429199
    4. ' 
' → logprob: -5.232974052429199
    5. '   
' → logprob: -6.107974052429199
    6. '  
' → logprob: -6.732974052429199
    7. '     
' → logprob: -9.4829740524292
    8. '        
' → logprob: -11.1079740524292
    9. '    
' → logprob: -11.7329740524292
    10. '    
    
' → logprob: -11.7329740524292

Token 93: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014300077222287655
    2. '    
' → logprob: -4.5142998695373535
    3. '
' → logprob: -5.7642998695373535
    4. '   
' → logprob: -9.889300346374512
    5. '  ' → logprob: -10.889300346374512
    6. '  
' → logprob: -11.639300346374512
    7. '    
' → logprob: -12.014300346374512
    8. ' 
' → logprob: -12.389300346374512
    9. '```' → logprob: -12.389300346374512
    10. '        
' → logprob: -12.764300346374512

Token 94: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004268934950232506
    2. '    
' → logprob: -6.004269123077393
    3. '
' → logprob: -6.879269123077393
    4. 'total' → logprob: -7.629269123077393
    5. '   
' → logprob: -8.879268646240234
    6. '  ' → logprob: -9.754268646240234
    7. ' total' → logprob: -10.254268646240234
    8. '  
' → logprob: -10.629268646240234
    9. ' 
' → logprob: -12.129268646240234
    10. '        
' → logprob: -12.254268646240234

Token 95: ' skip' (ID: 16677)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007131623569875956
    2. 'total' → logprob: -5.882131576538086
    3. '  ' → logprob: -6.007131576538086
    4. '    
' → logprob: -8.007131576538086
    5. 'n' → logprob: -8.257131576538086
    6. ' ' → logprob: -8.382131576538086
    7. 's' → logprob: -8.757131576538086
    8. ' total' → logprob: -8.882131576538086
    9. 'sum' → logprob: -9.007131576538086
    10. 'aj' → logprob: -9.257131576538086

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10950138419866562
    2. '
' → logprob: -2.609501361846924
    3. '    
' → logprob: -3.609501361846924
    4. '   
' → logprob: -6.484501361846924
    5. '  
' → logprob: -6.734501361846924
    6. ' 
' → logprob: -8.734501838684082
    7. 'total' → logprob: -9.609501838684082
    8. ' total' → logprob: -9.859501838684082
    9. '  ' → logprob: -9.984501838684082
    10. '        
' → logprob: -10.734501838684082

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012113422155380249
    2. 'total' → logprob: -5.262113571166992
    3. '
' → logprob: -5.637113571166992
    4. '    
' → logprob: -6.387113571166992
    5. ' total' → logprob: -6.762113571166992
    6. '   
' → logprob: -8.637113571166992
    7. '  
' → logprob: -9.012113571166992
    8. '  ' → logprob: -9.387113571166992
    9. ' 
' → logprob: -9.887113571166992
    10. '        
' → logprob: -12.637113571166992

Token 98: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.23295384645462036
    2. '   ' → logprob: -1.7329537868499756
    3. ' total' → logprob: -3.4829537868499756
    4. '    
' → logprob: -8.607954025268555
    5. '
' → logprob: -9.857954025268555
    6. '  ' → logprob: -10.482954025268555
    7. '	total' → logprob: -10.857954025268555
    8. '   
' → logprob: -11.107954025268555
    9. ' 
' → logprob: -11.482954025268555
    10. ' ' → logprob: -11.857954025268555

Token 99: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016231194138526917
    2. '+=' → logprob: -4.141231060028076
    3. '+' → logprob: -9.391231536865234
    4. '=' → logprob: -10.141231536865234
    5. ' ' → logprob: -10.266231536865234
    6. '   ' → logprob: -11.141231536865234
    7. '    ' → logprob: -11.391231536865234
    8. ' ' → logprob: -12.641231536865234
    9. ' =' → logprob: -12.766231536865234
    10. ']+=' → logprob: -13.016231536865234

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47407999634742737
    2. ' i' → logprob: -0.974079966545105
    3. '   ' → logprob: -12.849080085754395
    4. ' ' → logprob: -15.349080085754395
    5. '	i' → logprob: -16.099079132080078
    6. '  ' → logprob: -17.849079132080078
    7. '    ' → logprob: -17.974079132080078
    8. ' ' → logprob: -18.724079132080078
    9. '(i' → logprob: -19.099079132080078
    10. '1' → logprob: -19.599079132080078

Token 101: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07901294529438019
    2. '
' → logprob: -2.579012870788574
    3. ' print' → logprob: -9.329012870788574
    4. '  
' → logprob: -11.079012870788574
    5. ' 
' → logprob: -12.329012870788574
    6. '<|end|>' → logprob: -12.454012870788574
    7. '    
' → logprob: -12.704012870788574
    8. '
' → logprob: -12.954012870788574
    9. '```' → logprob: -13.454012870788574
    10. '.print' → logprob: -14.204012870788574

Token 102: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04872192069888115
    2. '
' → logprob: -3.0487220287323
    3. ' print' → logprob: -9.048722267150879
    4. '  
' → logprob: -11.548722267150879
    5. '    
' → logprob: -13.048722267150879
    6. '
' → logprob: -13.298722267150879
    7. ' 
' → logprob: -13.423722267150879
    8. '```' → logprob: -14.298722267150879
    9. '.print' → logprob: -15.173722267150879
    10. '

' → logprob: -15.298722267150879

Token 103: ' Aj' (ID: 28294)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003030713414773345
    2. ' print' → logprob: -6.003030776977539
    3. '
' → logprob: -7.503030776977539
    4. '#' → logprob: -14.503030776977539
    5. 'Print' → logprob: -14.628030776977539
    6. ' 
' → logprob: -14.753030776977539
    7. '1' → logprob: -14.878030776977539
    8. '

' → logprob: -15.128030776977539
    9. '#print' → logprob: -15.378030776977539
    10. '
' → logprob: -15.503030776977539

Token 104: 'out' (ID: 468)
  Prédit: 'oute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.033492155373096466
    2. 'outez' → logprob: -3.783492088317871
    3. 'out' → logprob: -5.283492088317871
    4. 'outer' → logprob: -5.283492088317871
    5. 'outes' → logprob: -10.658492088317871
    6. '#' → logprob: -11.908492088317871
    7. '```' → logprob: -12.783492088317871
    8. 'ute' → logprob: -13.408492088317871
    9. '   ' → logprob: -13.658492088317871
    10. 'uste' → logprob: -13.783492088317871

Token 105: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7084100246429443
    2. '
' → logprob: -2.0834100246429443
    3. '   ' → logprob: -2.3334100246429443
    4. '  ' → logprob: -2.9584100246429443
    5. '    
' → logprob: -3.2084100246429443
    6. 'i' → logprob: -3.3334100246429443
    7. ' i' → logprob: -3.5834100246429443
    8. '  
' → logprob: -3.7084100246429443
    9. '<|end|>' → logprob: -3.9584100246429443
    10. 'total' → logprob: -4.458410263061523

Token 106: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5240961909294128
    2. ' total' → logprob: -0.8990961909294128
    3. ' la' → logprob: -7.3990960121154785
    4. ' ' → logprob: -8.399096488952637
    5. 'i' → logprob: -9.649096488952637
    6. ' i' → logprob: -11.024096488952637
    7. 'la' → logprob: -11.274096488952637
    8. 't' → logprob: -11.649096488952637
    9. 'l' → logprob: -11.899096488952637
    10. '	total' → logprob: -12.024096488952637

Token 107: ' somme' (ID: 64484)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0026691153179854155
    2. ' total' → logprob: -6.002669334411621
    3. 'sum' → logprob: -9.002669334411621
    4. 's' → logprob: -10.627669334411621
    5. ' somme' → logprob: -11.502669334411621
    6. 'otal' → logprob: -11.877669334411621
    7. 'tot' → logprob: -12.002669334411621
    8. 'som' → logprob: -12.002669334411621
    9. '	total' → logprob: -12.377669334411621
    10. '   ' → logprob: -12.502669334411621

Token 108: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20147474110126495
    2. '
' → logprob: -1.7014747858047485
    3. ' print' → logprob: -10.076475143432617
    4. ' 
' → logprob: -12.326475143432617
    5. '  
' → logprob: -12.326475143432617
    6. '
' → logprob: -12.451475143432617
    7. '    
' → logprob: -12.576475143432617
    8. '

' → logprob: -13.326475143432617
    9. '```' → logprob: -14.201475143432617
    10. '.print' → logprob: -15.326475143432617

Token 109: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013862233608961105
    2. ' )' → logprob: -4.388862133026123
    3. 'total' → logprob: -7.388862133026123
    4. '1' → logprob: -8.513862609863281
    5. 'n' → logprob: -9.013862609863281
    6. ')n' → logprob: -9.263862609863281
    7. ')
' → logprob: -9.513862609863281
    8. ' ' → logprob: -9.888862609863281
    9. 'i' → logprob: -10.263862609863281
    10. ')i' → logprob: -10.763862609863281

Token 110: 'aut' (ID: 1828)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2543085813522339
    2. 'inal' → logprob: -1.8793085813522339
    3. 'or' → logprob: -3.5043087005615234
    4. '#' → logprob: -4.504308700561523
    5. 'inish' → logprob: -4.879308700561523
    6. 'inished' → logprob: -5.004308700561523
    7. 'rom' → logprob: -5.379308700561523
    8. ')' → logprob: -6.129308700561523
    9. 'inale' → logprob: -6.879308700561523
    10. ''' → logprob: -7.004308700561523

Token 111: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.7912468910217285
    2. 'pas' → logprob: -1.7912468910217285
    3. 's' → logprob: -2.1662468910217285
    4. ' que' → logprob: -2.4162468910217285
    5. ' ' → logprob: -2.6662468910217285
    6. 'bien' → logprob: -2.6662468910217285
    7. '   ' → logprob: -3.5412468910217285
    8. ' bien' → logprob: -3.5412468910217285
    9. 'le' → logprob: -3.7912468910217285
    10. ' le' → logprob: -3.9162468910217285

Token 112: ' oublier' (ID: 99499)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.1658265590667725
    2. ' oublier' → logprob: -1.2908265590667725
    3. 'd' → logprob: -2.7908265590667725
    4. 's' → logprob: -3.1658265590667725
    5. 'de' → logprob: -3.2908265590667725
    6. 'oub' → logprob: -3.4158265590667725
    7. 'mettre' → logprob: -3.5408265590667725
    8. 'que' → logprob: -3.6658265590667725
    9. 't' → logprob: -4.040826797485352
    10. '#' → logprob: -4.415826797485352

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035751264076679945
    2. ' )' → logprob: -5.753575325012207
    3. 'total' → logprob: -8.753575325012207
    4. ' ' → logprob: -9.503575325012207
    5. '()' → logprob: -10.128575325012207
    6. ')
' → logprob: -10.253575325012207
    7. '   ' → logprob: -10.878575325012207
    8. ' total' → logprob: -11.628575325012207
    9. '1' → logprob: -11.878575325012207
    10. '`)' → logprob: -12.003575325012207

Token 114: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005242771934717894
    2. '
' → logprob: -5.255242824554443
    3. ' print' → logprob: -11.880242347717285
    4. '  
' → logprob: -14.255242347717285
    5. '```' → logprob: -14.505242347717285
    6. '    
' → logprob: -15.255242347717285
    7. '
' → logprob: -15.380242347717285
    8. '

' → logprob: -16.0052433013916
    9. '#print' → logprob: -16.0052433013916
    10. ' 
' → logprob: -16.6302433013916

Token 115: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02326923981308937
    2. '(total' → logprob: -3.7732691764831543
    3. '('' → logprob: -11.273269653320312
    4. '("("' → logprob: -12.398269653320312
    5. '("' → logprob: -13.023269653320312
    6. ' (' → logprob: -13.523269653320312
    7. '()' → logprob: -13.898269653320312
    8. '((' → logprob: -14.523269653320312
    9. '(sum' → logprob: -14.648269653320312
    10. '(
' → logprob: -14.898269653320312

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -17.625
    5. ')
' → logprob: -18.75
    6. '()' → logprob: -20.25
    7. ')}' → logprob: -20.625
    8. ')#' → logprob: -21.0
    9. '())' → logprob: -21.25
    10. ')**' → logprob: -21.375

Token 117: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' Et' (ID: 10007)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' voilà' (ID: 77612)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4654688835144043
    2. ' la' → logprob: -1.5904688835144043
    3. ' voilà' → logprob: -1.7154688835144043
    4. ' ' → logprob: -1.9654688835144043
    5. '("' → logprob: -2.8404688835144043
    6. '(' → logprob: -3.2154688835144043
    7. 'la' → logprob: -3.5904688835144043
    8. ' ' → logprob: -3.7154688835144043
    9. '('' → logprob: -3.9654688835144043
    10. 'Voilà' → logprob: -4.465468883514404

Token 120: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' affiche' (ID: 127479)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27008190751075745
    2. ' a' → logprob: -1.770081877708435
    3. 'aff' → logprob: -3.7700819969177246
    4. 'l' → logprob: -4.645081996917725
    5. 'f' → logprob: -4.770081996917725
    6. 'fait' → logprob: -5.145081996917725
    7. ' termine' → logprob: -5.645081996917725
    8. ' affiche' → logprob: -6.020081996917725
    9. 'print' → logprob: -6.145081996917725
    10. ' imprime' → logprob: -6.645081996917725

Token 123: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10093078762292862
    2. '(' → logprob: -2.475930690765381
    3. '("")' → logprob: -5.600930690765381
    4. '\n' → logprob: -6.600930690765381
    5. '<|end|>' → logprob: -6.600930690765381
    6. ')' → logprob: -6.850930690765381
    7. '```' → logprob: -6.850930690765381
    8. '\' → logprob: -6.975930690765381
    9. '("\' → logprob: -7.600930690765381
    10. '(
' → logprob: -7.975930690765381

Token 124: ' truc' (ID: 58342)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.06308437883853912
    2. 'total' → logprob: -3.313084363937378
    3. 'result' → logprob: -4.438084602355957
    4. ' résultat' → logprob: -4.438084602355957
    5. 'r' → logprob: -7.563084602355957
    6. 's' → logprob: -8.313084602355957
    7. ' total' → logprob: -9.063084602355957
    8. 'ré' → logprob: -9.938084602355957
    9. 'nombre' → logprob: -9.938084602355957
    10. 'Rés' → logprob: -10.813084602355957


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 34.43%
Précision adaptée (1ère position): 35.25%
Précision (top 10): 68.85%
================================================================================
