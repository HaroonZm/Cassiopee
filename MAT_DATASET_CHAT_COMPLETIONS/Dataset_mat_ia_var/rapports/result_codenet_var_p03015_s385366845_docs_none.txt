================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
L = input()
mod = 10**9 + 7
f = 2
nf = 1
for c in L[1:]:
    x = int(c)
    if x == 1:
        nf = 3 * nf + f
        f = 2 * f
    else:
        nf = 3 * nf
    nf %= mod
    f %= mod
print((f + nf) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'L' (ID: 43)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011120688170194626
    2. ''' → logprob: -4.886120796203613
    3. '"' → logprob: -6.636120796203613
    4. '.' → logprob: -7.386120796203613
    5. '[' → logprob: -7.511120796203613
    6. '`' → logprob: -8.261120796203613
    7. '('' → logprob: -8.261120796203613
    8. '```' → logprob: -8.886120796203613
    9. '(
' → logprob: -9.261120796203613
    10. '()' → logprob: -9.636120796203613

Token 4: 'mod' (ID: 4847)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03179146721959114
    2. '+' → logprob: -4.406791687011719
    3. '.strip' → logprob: -5.281791687011719
    4. '[' → logprob: -5.656791687011719
    5. '=' → logprob: -6.156791687011719
    6. '_' → logprob: -6.156791687011719
    7. 'if' → logprob: -6.156791687011719
    8. '.split' → logprob: -6.531791687011719
    9. ''' → logprob: -7.906791687011719
    10. '(' → logprob: -8.281791687011719

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10338599979877472
    2. ' =' → logprob: -2.7283859252929688
    3. '=' → logprob: -3.6033859252929688
    4. '_space' → logprob: -6.603385925292969
    5. ' ' → logprob: -6.853385925292969
    6. ' _' → logprob: -7.603385925292969
    7. 'ular' → logprob: -7.603385925292969
    8. 'ul' → logprob: -8.228385925292969
    9. 'ulus' → logprob: -8.228385925292969
    10. 'space' → logprob: -8.603385925292969

Token 6: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.050611719489097595
    2. '100' → logprob: -3.050611734390259
    3. ' ' → logprob: -6.30061149597168
    4. '1' → logprob: -9.05061149597168
    5. '998' → logprob: -9.67561149597168
    6. 'int' → logprob: -12.17561149597168
    7. '(' → logprob: -14.67561149597168
    8. '2' → logprob: -15.55061149597168
    9. '(int' → logprob: -15.67561149597168
    10. ' ' → logprob: -15.92561149597168

Token 7: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014258346520364285
    2. '100' → logprob: -4.26425838470459
    3. '998' → logprob: -10.01425838470459
    4. '1' → logprob: -10.38925838470459
    5. ' ' → logprob: -11.38925838470459
    6. 'int' → logprob: -11.76425838470459
    7. '(' → logprob: -16.139257431030273
    8. '2' → logprob: -16.264257431030273
    9. '(int' → logprob: -17.014257431030273
    10. 'pow' → logprob: -17.389257431030273

Token 8: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12754404544830322
    2. '**' → logprob: -2.2525439262390137
    3. '00' → logprob: -4.752543926239014
    4. '9' → logprob: -5.252543926239014
    5. '000' → logprob: -7.877543926239014
    6. '1' → logprob: -9.877544403076172
    7. ' **' → logprob: -9.877544403076172
    8. '4' → logprob: -10.002544403076172
    9. ' ' → logprob: -10.127544403076172
    10. '7' → logprob: -10.127544403076172

Token 9: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1472419600977446e-06
    2. '09' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.000001907348633
    4. '```' → logprob: -18.875001907348633
    5. '９' → logprob: -21.625001907348633
    6. '_' → logprob: -22.750001907348633
    7. '``' → logprob: -23.000001907348633
    8. '   ' → logprob: -23.125001907348633
    9. '0' → logprob: -23.375001907348633
    10. '**' → logprob: -23.500001907348633

Token 10: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005856798379682004
    2. ' +' → logprob: -7.625585556030273
    3. '7' → logprob: -9.250585556030273
    4. '+
' → logprob: -14.375585556030273
    5. '＋' → logprob: -14.500585556030273
    6. '```' → logprob: -16.125585556030273
    7. ' plus' → logprob: -16.250585556030273
    8. '9' → logprob: -16.625585556030273
    9. '+

' → logprob: -17.000585556030273
    10. ' +
' → logprob: -17.625585556030273

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -17.25
    5. '07' → logprob: -18.75
    6. '   ' → logprob: -20.375
    7. '37' → logprob: -20.5
    8. '9' → logprob: -20.5
    9. '``' → logprob: -20.5625
    10. '_' → logprob: -20.75

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '+' → logprob: -16.25
    4. '```' → logprob: -17.625
    5. '07' → logprob: -19.625
    6. '   ' → logprob: -19.625
    7. '７' → logprob: -19.8125
    8. '``' → logprob: -20.6875
    9. '۷' → logprob: -21.0
    10. '9' → logprob: -21.125

Token 13: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2180545330047607
    2. '\n' → logprob: -1.4680545330047607
    3. '
' → logprob: -1.9680545330047607
    4. 'result' → logprob: -2.8430545330047607
    5. '\' → logprob: -2.9680545330047607
    6. 's' → logprob: -3.0930545330047607
    7. 'a' → logprob: -3.2180545330047607
    8. 'd' → logprob: -3.5930545330047607
    9. 'if' → logprob: -3.9680545330047607
    10. 'dp' → logprob: -4.09305477142334

Token 14: 'f' (ID: 69)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4250274896621704
    2. 'result' → logprob: -1.9250274896621704
    3. 'dp' → logprob: -3.175027370452881
    4. 'if' → logprob: -3.550027370452881
    5. 'count' → logprob: -3.800027370452881
    6. 'ans' → logprob: -3.925027370452881
    7. 'd' → logprob: -3.925027370452881
    8. 's' → logprob: -4.050027370452881
    9. 'for' → logprob: -4.550027370452881
    10. 'a' → logprob: -4.675027370452881

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18303346633911133
    2. '_' → logprob: -2.3080334663391113
    3. 'o' → logprob: -3.5580334663391113
    4. 'or' → logprob: -4.183033466339111
    5. '[]' → logprob: -5.183033466339111
    6. '(' → logprob: -5.183033466339111
    7. 'a' → logprob: -5.558033466339111
    8. 'r' → logprob: -6.433033466339111
    9. '[u' → logprob: -6.683033466339111
    10. ' =' → logprob: -6.808033466339111

Token 16: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.35105305910110474
    2. '[' → logprob: -1.22605299949646
    3. '[int' → logprob: -6.726053237915039
    4. '[len' → logprob: -7.601053237915039
    5. '1' → logprob: -7.851053237915039
    6. ' ' → logprob: -8.726053237915039
    7. '[L' → logprob: -8.851053237915039
    8. '0' → logprob: -9.851053237915039
    9. '[f' → logprob: -10.351053237915039
    10. '[input' → logprob: -10.601053237915039

Token 17: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008521197363734245
    2. '1' → logprob: -4.88352108001709
    3. '{' → logprob: -7.88352108001709
    4. '[int' → logprob: -7.88352108001709
    5. '[len' → logprob: -10.00852108001709
    6. '0' → logprob: -10.50852108001709
    7. ' [' → logprob: -10.50852108001709
    8. '[L' → logprob: -10.63352108001709
    9. 'lambda' → logprob: -11.63352108001709
    10. '{}' → logprob: -12.38352108001709

Token 18: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7060961723327637
    2. '**' → logprob: -0.8310961723327637
    3. ' **' → logprob: -3.4560961723327637
    4. ' ' → logprob: -4.081096172332764
    5. '+' → logprob: -4.581096172332764
    6. ' *' → logprob: -5.206096172332764
    7. '<|end|>' → logprob: -6.456096172332764
    8. '_' → logprob: -7.456096172332764
    9. '#' → logprob: -7.581096172332764
    10. '[' → logprob: -7.581096172332764

Token 19: 'nf' (ID: 51054)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.47527047991752625
    2. '*' → logprob: -1.3502705097198486
    3. ' **' → logprob: -2.4752705097198486
    4. ' *' → logprob: -3.6002705097198486
    5. '*f' → logprob: -6.3502702713012695
    6. '<|end|>' → logprob: -6.4752702713012695
    7. ' ' → logprob: -6.9752702713012695
    8. 'L' → logprob: -7.1002702713012695
    9. '+' → logprob: -7.4752702713012695
    10. '%' → logprob: -7.9752702713012695

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.09407377243042
    2. '*' → logprob: -1.34407377243042
    3. '=' → logprob: -1.84407377243042
    4. 'o' → logprob: -2.59407377243042
    5. '_' → logprob: -2.84407377243042
    6. 'u' → logprob: -2.84407377243042
    7. '!' → logprob: -3.59407377243042
    8. 'ac' → logprob: -4.71907377243042
    9. 'a' → logprob: -5.46907377243042
    10. '**' → logprob: -6.09407377243042

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0859723910689354
    2. ' f' → logprob: -3.085972309112549
    3. '1' → logprob: -3.460972309112549
    4. 'f' → logprob: -5.460972309112549
    5. '2' → logprob: -8.085972785949707
    6. ' L' → logprob: -8.835972785949707
    7. ' factorial' → logprob: -9.085972785949707
    8. '0' → logprob: -9.460972785949707
    9. ' [' → logprob: -9.585972785949707
    10. ' (' → logprob: -9.585972785949707

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.328587532043457
    2. ' ' → logprob: -1.328587532043457
    3. 'f' → logprob: -1.328587532043457
    4. ' f' → logprob: -2.328587532043457
    5. '2' → logprob: -2.953587532043457
    6. '4' → logprob: -3.703587532043457
    7. '0' → logprob: -4.203587532043457
    8. '3' → logprob: -4.578587532043457
    9. ' L' → logprob: -7.078587532043457
    10. '6' → logprob: -7.078587532043457

Token 23: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.603962779045105
    2. 'for' → logprob: -1.478962779045105
    3. '*' → logprob: -1.853962779045105
    4. ' for' → logprob: -3.6039628982543945
    5. 'f' → logprob: -4.8539628982543945
    6. 'n' → logprob: -5.1039628982543945
    7. '=' → logprob: -5.3539628982543945
    8. '-' → logprob: -5.8539628982543945
    9. '**' → logprob: -5.8539628982543945
    10. '#' → logprob: -5.9789628982543945

Token 24: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4073323607444763
    2. '*' → logprob: -1.907332420349121
    3. 'for' → logprob: -2.157332420349121
    4. ' for' → logprob: -3.282332420349121
    5. ' ' → logprob: -4.407332420349121
    6. 'f' → logprob: -5.032332420349121
    7. '0' → logprob: -5.907332420349121
    8. '#' → logprob: -6.157332420349121
    9. '=' → logprob: -6.782332420349121
    10. 'n' → logprob: -6.907332420349121

Token 25: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035322096198797226
    2. ' i' → logprob: -3.4103221893310547
    3. '_' → logprob: -7.160322189331055
    4. '  ' → logprob: -7.785322189331055
    5. 'i' → logprob: -8.410322189331055
    6. ' _' → logprob: -8.535322189331055
    7. ' L' → logprob: -10.660322189331055
    8. ' l' → logprob: -11.410322189331055
    9. ' in' → logprob: -11.410322189331055
    10. ' ' → logprob: -13.160322189331055

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010856213979423046
    2. 'in' → logprob: -4.8858561515808105
    3. ' ' → logprob: -5.7608561515808105
    4. ' i' → logprob: -10.010856628417969
    5. 'n' → logprob: -11.010856628417969
    6. 'i' → logprob: -11.510856628417969
    7. '  ' → logprob: -11.885856628417969
    8. ',' → logprob: -12.635856628417969
    9. 's' → logprob: -12.635856628417969
    10. ' n' → logprob: -13.073356628417969

Token 27: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6331123113632202
    2. ' L' → logprob: -0.7581123113632202
    3. ' range' → logprob: -7.75811243057251
    4. 'range' → logprob: -9.633111953735352
    5. ' ' → logprob: -11.383111953735352
    6. ' reversed' → logprob: -13.758111953735352
    7. '[' → logprob: -14.008111953735352
    8. '[L' → logprob: -14.133111953735352
    9. '(L' → logprob: -14.258111953735352
    10. ' ' → logprob: -14.258111953735352

Token 28: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006707399734295905
    2. ' :' → logprob: -7.375670909881592
    3. ':
' → logprob: -11.375670433044434
    4. ':**' → logprob: -11.750670433044434
    5. '[' → logprob: -12.250670433044434
    6. '+:' → logprob: -12.500670433044434
    7. '[:]' → logprob: -13.000670433044434
    8. 'if' → logprob: -13.500670433044434
    9. '+' → logprob: -13.625670433044434
    10. '):' → logprob: -13.625670433044434

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35403090715408325
    2. ':' → logprob: -1.4790308475494385
    3. ':-' → logprob: -4.104031085968018
    4. ':]' → logprob: -4.104031085968018
    5. '-' → logprob: -4.354031085968018
    6. '0' → logprob: -4.854031085968018
    7. '::-' → logprob: -4.854031085968018
    8. ']:' → logprob: -6.104031085968018
    9. '])' → logprob: -6.854031085968018
    10. ']' → logprob: -6.979031085968018

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12286963313817978
    2. ']:' → logprob: -2.3728697299957275
    3. ':]' → logprob: -3.9978697299957275
    4. ' :' → logprob: -5.872869491577148
    5. ' :]' → logprob: -7.247869491577148
    6. ']' → logprob: -7.872869491577148
    7. ':].' → logprob: -10.247869491577148
    8. ' ]' → logprob: -11.122869491577148
    9. ':],' → logprob: -11.497869491577148
    10. '):' → logprob: -11.747869491577148

Token 31: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0015481874579563737
    2. ':' → logprob: -7.0015482902526855
    3. ']' → logprob: -8.251547813415527
    4. '):' → logprob: -8.501547813415527
    5. ']):' → logprob: -9.501547813415527
    6. ']:
' → logprob: -10.001547813415527
    7. '"]:' → logprob: -11.126547813415527
    8. '}:' → logprob: -11.751547813415527
    9. ']:
' → logprob: -12.251547813415527
    10. '']:' → logprob: -12.251547813415527

Token 32: '   ' (ID: 271)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6722133755683899
    2. ' if' → logprob: -1.1722133159637451
    3. 'f' → logprob: -2.922213315963745
    4. '+' → logprob: -3.422213315963745
    5. ' 
' → logprob: -3.547213315963745
    6. ' ' → logprob: -4.047213554382324
    7. '   ' → logprob: -4.047213554382324
    8. 'if' → logprob: -5.547213554382324
    9. '	f' → logprob: -5.547213554382324
    10. '	if' → logprob: -5.672213554382324

Token 33: ' x' (ID: 1215)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4655785858631134
    2. ' if' → logprob: -1.715578556060791
    3. ' ' → logprob: -2.715578556060791
    4. ' f' → logprob: -2.840578556060791
    5. 'if' → logprob: -3.465578556060791
    6. '0' → logprob: -4.215578556060791
    7. 'i' → logprob: -5.465578556060791
    8. ' *' → logprob: -6.215578556060791
    9. ' i' → logprob: -6.215578556060791
    10. ' 
' → logprob: -6.340578556060791

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3183736205101013
    2. '=' → logprob: -1.568373680114746
    3. ' *=' → logprob: -2.943373680114746
    4. '*=' → logprob: -5.193373680114746
    5. 'f' → logprob: -5.818373680114746
    6. '*' → logprob: -6.193373680114746
    7. '+=' → logprob: -8.068373680114746
    8. ' +=' → logprob: -8.693373680114746
    9. ' *' → logprob: -9.318373680114746
    10. ' ' → logprob: -9.443373680114746

Token 35: ' int' (ID: 677)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5719317197799683
    2. ' f' → logprob: -1.4469317197799683
    3. ' (' → logprob: -3.071931838989258
    4. 'int' → logprob: -3.196931838989258
    5. '2' → logprob: -3.696931838989258
    6. '0' → logprob: -4.071931838989258
    7. '(f' → logprob: -4.321931838989258
    8. ' ' → logprob: -4.446931838989258
    9. ' int' → logprob: -4.696931838989258
    10. '1' → logprob: -5.071931838989258

Token 36: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005441739689558744
    2. '(' → logprob: -5.255441665649414
    3. '(x' → logprob: -9.255441665649414
    4. '(f' → logprob: -9.255441665649414
    5. 'c' → logprob: -12.380441665649414
    6. '('' → logprob: -12.755441665649414
    7. '(n' → logprob: -13.130441665649414
    8. '(s' → logprob: -13.255441665649414
    9. '(a' → logprob: -13.880441665649414
    10. '()' → logprob: -14.005441665649414

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006354026962071657
    2. ')
' → logprob: -5.631353855133057
    3. ')+' → logprob: -6.506353855133057
    4. ' )' → logprob: -7.381353855133057
    5. ')*' → logprob: -7.881353855133057
    6. '*)' → logprob: -9.881354331970215
    7. ')**' → logprob: -10.256354331970215
    8. ')
' → logprob: -10.381354331970215
    9. '+' → logprob: -11.006354331970215
    10. '')' → logprob: -11.131354331970215

Token 38: '   ' (ID: 271)
  Prédit: '*f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*f' → logprob: -0.7193081378936768
    2. '+' → logprob: -1.0943081378936768
    3. '*' → logprob: -2.8443081378936768
    4. 'f' → logprob: -3.0943081378936768
    5. ' f' → logprob: -3.4693081378936768
    6. ' *' → logprob: -3.7193081378936768
    7. ' +' → logprob: -4.844307899475098
    8. ')' → logprob: -6.219307899475098
    9. ' ' → logprob: -6.344307899475098
    10. '+
' → logprob: -6.594307899475098

Token 39: ' if' (ID: 538)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6341953277587891
    2. ' f' → logprob: -1.259195327758789
    3. '*f' → logprob: -2.884195327758789
    4. '+' → logprob: -3.134195327758789
    5. ' *' → logprob: -3.509195327758789
    6. '*' → logprob: -3.634195327758789
    7. ' ' → logprob: -4.134195327758789
    8. ' 
' → logprob: -5.759195327758789
    9. ' +' → logprob: -6.134195327758789
    10. ' if' → logprob: -6.259195327758789

Token 40: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0891464427113533
    2. 'x' → logprob: -2.464146375656128
    3. ' f' → logprob: -9.214146614074707
    4. ' ' → logprob: -9.464146614074707
    5. 'f' → logprob: -11.589146614074707
    6. '(x' → logprob: -12.089146614074707
    7. ' (' → logprob: -12.214146614074707
    8. ' not' → logprob: -12.839146614074707
    9. '  ' → logprob: -13.964146614074707
    10. ' L' → logprob: -14.151646614074707

Token 41: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5702713131904602
    2. ' ==' → logprob: -1.1952712535858154
    3. '>' → logprob: -2.5702712535858154
    4. ' >' → logprob: -4.0702714920043945
    5. '>=' → logprob: -4.4452714920043945
    6. '%' → logprob: -4.9452714920043945
    7. ' >=' → logprob: -5.1952714920043945
    8. '!=' → logprob: -5.6952714920043945
    9. ' !=' → logprob: -5.9452714920043945
    10. ' ' → logprob: -6.0702714920043945

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16295844316482544
    2. '0' → logprob: -1.9129583835601807
    3. '1' → logprob: -6.03795862197876
    4. 'f' → logprob: -9.412958145141602
    5. ' f' → logprob: -9.537958145141602
    6. '4' → logprob: -9.912958145141602
    7. '9' → logprob: -9.912958145141602
    8. '2' → logprob: -10.162958145141602
    9. '  ' → logprob: -11.537958145141602
    10. '3' → logprob: -11.537958145141602

Token 43: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09472152590751648
    2. ' ' → logprob: -2.594721555709839
    3. '1' → logprob: -4.34472131729126
    4. 'f' → logprob: -6.46972131729126
    5. '9' → logprob: -7.71972131729126
    6. '4' → logprob: -8.219721794128418
    7. '2' → logprob: -8.594721794128418
    8. ' f' → logprob: -9.094721794128418
    9. '6' → logprob: -10.094721794128418
    10. '3' → logprob: -10.219721794128418

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038145645521581173
    2. ' :' → logprob: -8.500381469726562
    3. ':
' → logprob: -8.875381469726562
    4. '+:' → logprob: -11.875381469726562
    5. ' or' → logprob: -12.125381469726562
    6. '):' → logprob: -12.250381469726562
    7. '+' → logprob: -12.500381469726562
    8. ':f' → logprob: -12.625381469726562
    9. '0' → logprob: -13.000381469726562
    10. ' and' → logprob: -13.000381469726562

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2941405773162842
    2. ':
' → logprob: -2.044140577316284
    3. '
' → logprob: -2.294140577316284
    4. '       ' → logprob: -4.169140815734863
    5. '<|end|>' → logprob: -5.169140815734863
    6. '):
' → logprob: -7.044140815734863
    7. '0' → logprob: -7.669140815734863
    8. ')' → logprob: -8.169140815734863
    9. ',' → logprob: -8.669140815734863
    10. '<|end|>' → logprob: -8.669140815734863

Token 46: ' nf' (ID: 89636)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3409598469734192
    2. ' f' → logprob: -1.5909597873687744
    3. '*' → logprob: -3.3409597873687744
    4. ' ' → logprob: -4.0909600257873535
    5. ' *' → logprob: -4.4659600257873535
    6. '*f' → logprob: -4.7159600257873535
    7. '+' → logprob: -6.0909600257873535
    8. ')' → logprob: -6.4659600257873535
    9. '=' → logprob: -6.7159600257873535
    10. ' =' → logprob: -7.0909600257873535

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7626953721046448
    2. ' =' → logprob: -1.6376953125
    3. '*=' → logprob: -1.8876953125
    4. '+=' → logprob: -2.0126953125
    5. ' *=' → logprob: -3.2626953125
    6. ' +=' → logprob: -4.3876953125
    7. '*' → logprob: -6.5126953125
    8. ',' → logprob: -6.6376953125
    9. ' ' → logprob: -8.0126953125
    10. '+' → logprob: -9.1376953125

Token 48: ' ' (ID: 220)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.08409417420625687
    2. ' (' → logprob: -3.709094285964966
    3. 'f' → logprob: -3.834094285964966
    4. '(n' → logprob: -4.084094047546387
    5. '(' → logprob: -4.834094047546387
    6. 'nf' → logprob: -5.334094047546387
    7. ' f' → logprob: -5.959094047546387
    8. ' nf' → logprob: -6.209094047546387
    9. '_nf' → logprob: -9.834094047546387
    10. '(mod' → logprob: -10.084094047546387

Token 49: '3' (ID: 18)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.027735618874430656
    2. '(n' → logprob: -4.402735710144043
    3. '(' → logprob: -4.902735710144043
    4. 'f' → logprob: -5.277735710144043
    5. ' (' → logprob: -6.777735710144043
    6. 'nf' → logprob: -6.777735710144043
    7. ' f' → logprob: -9.527735710144043
    8. ' nf' → logprob: -9.902735710144043
    9. '(mod' → logprob: -10.402735710144043
    10. '2' → logprob: -10.652735710144043

Token 50: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5659675002098083
    2. '*' → logprob: -1.0659675598144531
    3. '*f' → logprob: -2.440967559814453
    4. '*n' → logprob: -7.440967559814453
    5. 'f' → logprob: -9.815967559814453
    6. 'elif' → logprob: -11.190967559814453
    7. 'else' → logprob: -11.815967559814453
    8. '<|end|>' → logprob: -11.940967559814453
    9. '_nf' → logprob: -12.065967559814453
    10. ' ' → logprob: -12.065967559814453

Token 51: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.008942965418100357
    2. ' nf' → logprob: -4.7589430809021
    3. 'f' → logprob: -8.633942604064941
    4. '_nf' → logprob: -8.883942604064941
    5. 'n' → logprob: -12.508942604064941
    6. ' f' → logprob: -13.008942604064941
    7. '   ' → logprob: -13.508942604064941
    8. ' ' → logprob: -14.133942604064941
    9. '(n' → logprob: -14.633942604064941
    10. 'nr' → logprob: -15.571442604064941

Token 52: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007010886911302805
    2. '2' → logprob: -5.2570109367370605
    3. ' f' → logprob: -6.8820109367370605
    4. '3' → logprob: -8.257010459899902
    5. '4' → logprob: -8.257010459899902
    6. '1' → logprob: -9.632010459899902
    7. ' ' → logprob: -9.757010459899902
    8. '6' → logprob: -9.882010459899902
    9. '7' → logprob: -10.632010459899902
    10. '5' → logprob: -11.632010459899902

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23666517436504364
    2. '<|end|>' → logprob: -1.61166512966156
    3. ' 
' → logprob: -5.86166524887085
    4. '
' → logprob: -5.86166524887085
    5. '2' → logprob: -6.73666524887085
    6. '*' → logprob: -6.86166524887085
    7. '<|end|>' → logprob: -7.73666524887085
    8. '  
' → logprob: -7.86166524887085
    9. '    ' → logprob: -7.86166524887085
    10. '  ' → logprob: -7.98666524887085

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18687818944454193
    2. ' =' → logprob: -2.311878204345703
    3. ',' → logprob: -2.811878204345703
    4. '*=' → logprob: -4.936878204345703
    5. ' *=' → logprob: -6.311878204345703
    6. '+=' → logprob: -7.061878204345703
    7. '*' → logprob: -7.311878204345703
    8. ' +=' → logprob: -8.186878204345703
    9. ' ' → logprob: -8.311878204345703
    10. ' ,' → logprob: -9.561878204345703

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011052774265408516
    2. '3' → logprob: -4.76105260848999
    3. ' ' → logprob: -6.26105260848999
    4. 'nf' → logprob: -8.011053085327148
    5. 'f' → logprob: -9.261053085327148
    6. '4' → logprob: -10.136053085327148
    7. '7' → logprob: -10.886053085327148
    8. '5' → logprob: -11.261053085327148
    9. ' nf' → logprob: -11.761053085327148
    10. '6' → logprob: -12.386053085327148

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015121384523808956
    2. '3' → logprob: -4.2651214599609375
    3. 'nf' → logprob: -8.015121459960938
    4. ' ' → logprob: -8.140121459960938
    5. '4' → logprob: -9.265121459960938
    6. 'f' → logprob: -9.390121459960938
    7. '7' → logprob: -9.390121459960938
    8. '6' → logprob: -10.640121459960938
    9. '5' → logprob: -10.890121459960938
    10. '8' → logprob: -12.015121459960938

Token 60: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13946843147277832
    2. '*' → logprob: -2.2644684314727783
    3. '*f' → logprob: -3.6394684314727783
    4. '**' → logprob: -11.5144681930542
    5. '*ft' → logprob: -12.7644681930542
    6. ' ' → logprob: -12.8894681930542
    7. '<|end|>' → logprob: -12.8894681930542
    8. '*n' → logprob: -13.0144681930542
    9. 'f' → logprob: -13.1394681930542
    10. '```' → logprob: -14.1394681930542

Token 61: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001280714524909854
    2. ' f' → logprob: -6.751280784606934
    3. 'nf' → logprob: -9.626280784606934
    4. '(f' → logprob: -10.251280784606934
    5. ' nf' → logprob: -12.376280784606934
    6. ' (' → logprob: -13.626280784606934
    7. '	f' → logprob: -14.251280784606934
    8. '(' → logprob: -14.251280784606934
    9. '(n' → logprob: -14.251280784606934
    10. '*f' → logprob: -14.501280784606934

Token 62: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7464873790740967
    2. '<|end|>' → logprob: -1.2464873790740967
    3. ' +' → logprob: -1.4964873790740967
    4. ' ' → logprob: -5.246487617492676
    5. ' else' → logprob: -5.871487617492676
    6. '%' → logprob: -6.621487617492676
    7. ')' → logprob: -7.246487617492676
    8. 'else' → logprob: -7.246487617492676
    9. '<|end|>' → logprob: -7.246487617492676
    10. '       ' → logprob: -7.496487617492676

Token 63: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43338295817375183
    2. 'else' (adapté à ' else') → logprob: -1.4333829879760742
    3. ' else' → logprob: -2.308382987976074
    4. '%' → logprob: -5.558382987976074
    5. ')' → logprob: -6.058382987976074
    6. 'elif' → logprob: -6.433382987976074
    7. ' ' → logprob: -6.933382987976074
    8. 'f' → logprob: -7.308382987976074
    9. ' %' → logprob: -7.683382987976074
    10. 'n' → logprob: -7.808382987976074

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08260969817638397
    2. ':
' → logprob: -2.5826096534729004
    3. '<|end|>' → logprob: -5.9576096534729
    4. '       ' → logprob: -7.5826096534729
    5. '):
' → logprob: -8.707610130310059
    6. '<|end|>' → logprob: -8.707610130310059
    7. '```' → logprob: -10.332610130310059
    8. ',' → logprob: -10.457610130310059
    9. '[' → logprob: -10.457610130310059
    10. '():
' → logprob: -10.457610130310059

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.91346675157547
    2. 'nf' → logprob: -1.2884666919708252
    3. 'f' → logprob: -1.6634666919708252
    4. ' nf' → logprob: -2.413466691970825
    5. ' f' → logprob: -3.538466691970825
    6. '    ' → logprob: -5.538466930389404
    7. '        ' → logprob: -5.538466930389404
    8. '   ' → logprob: -5.663466930389404
    9. '_nf' → logprob: -6.538466930389404
    10. 'n' → logprob: -6.913466930389404

Token 67: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.319919228553772
    2. ' f' → logprob: -2.3199191093444824
    3. 'nf' (adapté à ' nf') → logprob: -2.4449191093444824
    4. 'f' → logprob: -2.4449191093444824
    5. '       ' → logprob: -7.569919109344482
    6. 'n' → logprob: -8.06991958618164
    7. '    ' → logprob: -8.31991958618164
    8. ' n' → logprob: -8.69491958618164
    9. '_nf' → logprob: -8.69491958618164
    10. ' ' → logprob: -8.94491958618164

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05803251266479492
    2. '=' → logprob: -2.933032512664795
    3. ',' → logprob: -6.183032512664795
    4. ' *=' → logprob: -7.058032512664795
    5. ' +=' → logprob: -8.933032989501953
    6. ' ,' → logprob: -9.808032989501953
    7. '*=' → logprob: -11.183032989501953
    8. '+=' → logprob: -12.058032989501953
    9. ' ' → logprob: -12.933032989501953
    10. '   ' → logprob: -13.058032989501953

Token 69: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8730792999267578
    2. ' ' → logprob: -0.9980792999267578
    3. '3' → logprob: -1.8730792999267578
    4. 'f' → logprob: -3.123079299926758
    5. '6' → logprob: -5.498079299926758
    6. ' f' → logprob: -5.623079299926758
    7. '4' → logprob: -5.623079299926758
    8. 'nf' → logprob: -6.373079299926758
    9. ' nf' → logprob: -6.873079299926758
    10. '5' → logprob: -7.248079299926758

Token 70: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3142177164554596
    2. '3' → logprob: -1.9392176866531372
    3. 'f' → logprob: -2.5642178058624268
    4. ' ' → logprob: -3.4392178058624268
    5. '6' → logprob: -4.939217567443848
    6. 'nf' → logprob: -5.689217567443848
    7. '4' → logprob: -5.939217567443848
    8. '7' → logprob: -7.064217567443848
    9. '5' → logprob: -7.314217567443848
    10. ' f' → logprob: -7.564217567443848

Token 71: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.486167848110199
    2. '*' → logprob: -0.986167848110199
    3. '*f' → logprob: -4.861167907714844
    4. '*n' → logprob: -5.486167907714844
    5. '**' → logprob: -9.861167907714844
    6. ' ' → logprob: -10.861167907714844
    7. '*ft' → logprob: -11.861167907714844
    8. '<|end|>' → logprob: -11.986167907714844
    9. '*num' → logprob: -12.111167907714844
    10. '***' → logprob: -12.111167907714844

Token 72: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.16339467465877533
    2. ' nf' → logprob: -2.1633946895599365
    3. 'f' → logprob: -3.4133946895599365
    4. '_nf' → logprob: -6.163394451141357
    5. ' f' → logprob: -7.788394451141357
    6. '(n' → logprob: -8.913394927978516
    7. ' (' → logprob: -10.038394927978516
    8. ' ' → logprob: -10.413394927978516
    9. 'n' → logprob: -10.788394927978516
    10. '(f' → logprob: -10.788394927978516

Token 73: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7380788326263428
    2. ' %' → logprob: -0.9880788326263428
    3. '%' → logprob: -2.4880788326263428
    4. '<|end|>' → logprob: -3.3630788326263428
    5. '+' → logprob: -3.8630788326263428
    6. ')' → logprob: -5.363079071044922
    7. ' ' → logprob: -5.488079071044922
    8. ' -' → logprob: -7.613079071044922
    9. '       ' → logprob: -7.988079071044922
    10. '<|end|>' → logprob: -8.238079071044922

Token 74: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' nf' (ID: 89636)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7446414232254028
    2. ' %' → logprob: -1.7446414232254028
    3. '   ' → logprob: -2.1196413040161133
    4. 'f' → logprob: -2.6196413040161133
    5. ')' → logprob: -2.9946413040161133
    6. '<|end|>' → logprob: -3.6196413040161133
    7. ' mod' → logprob: -3.9946413040161133
    8. ' f' → logprob: -4.119641304016113
    9. '%n' → logprob: -4.244641304016113
    10. ' %=' → logprob: -4.619641304016113

Token 76: ' %=' (ID: 117035)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5287156105041504
    2. '%' → logprob: -0.9037156105041504
    3. ' %=' → logprob: -5.27871561050415
    4. '<|end|>' → logprob: -8.403715133666992
    5. '%n' → logprob: -9.153715133666992
    6. '%=' → logprob: -9.278715133666992
    7. ')%' → logprob: -11.153715133666992
    8. '=' → logprob: -11.903715133666992
    9. '<|end|>' → logprob: -12.278715133666992
    10. ')' → logprob: -12.528715133666992

Token 77: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.313314952421933e-05
    2. ' mod' → logprob: -9.750062942504883
    3. '(mod' → logprob: -12.250062942504883
    4. '	mod' → logprob: -19.750062942504883
    5. 'MOD' → logprob: -20.375062942504883
    6. '10' → logprob: -22.000062942504883
    7. '_mod' → logprob: -22.125062942504883
    8. '(' → logprob: -22.250062942504883
    9. ' мод' → logprob: -22.500062942504883
    10. ' ' → logprob: -22.750062942504883

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14640384912490845
    2. '   ' → logprob: -2.2714037895202637
    3. '<|end|>' → logprob: -3.6464037895202637
    4. ' f' → logprob: -5.646403789520264
    5. '
' → logprob: -6.396403789520264
    6. '	f' → logprob: -7.271403789520264
    7. '```' → logprob: -7.271403789520264
    8. ' ' → logprob: -9.146404266357422
    9. '<|end|>' → logprob: -9.896404266357422
    10. '  ' → logprob: -10.521404266357422

Token 80: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.00011152983643114567
    2. '   ' → logprob: -9.62511157989502
    3. ' f' → logprob: -10.12511157989502
    4. '	f' → logprob: -13.00011157989502
    5. '```' → logprob: -13.50011157989502
    6. '<|end|>' → logprob: -13.87511157989502
    7. '_f' → logprob: -14.87511157989502
    8. ',f' → logprob: -16.125110626220703
    9. ' ' → logprob: -16.125110626220703
    10. '*f' → logprob: -17.000110626220703

Token 81: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.12187327444553375
    2. '=' → logprob: -2.371873378753662
    3. ' %=' → logprob: -3.871873378753662
    4. ' =' → logprob: -7.871873378753662
    5. '%' → logprob: -8.371872901916504
    6. '*=' → logprob: -14.871872901916504
    7. '=%' → logprob: -15.121872901916504
    8. ',' → logprob: -15.871872901916504
    9. ' %' → logprob: -15.871872901916504
    10. 'mod' → logprob: -16.37187385559082

Token 82: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002036595979006961
    2. ' mod' → logprob: -8.500204086303711
    3. '(mod' → logprob: -16.12520408630371
    4. '	mod' → logprob: -19.50020408630371
    5. ' ' → logprob: -20.12520408630371
    6. 'm' → logprob: -21.12520408630371
    7. 'moder' → logprob: -21.37520408630371
    8. ' мод' → logprob: -22.50020408630371
    9. '   ' → logprob: -22.62520408630371
    10. '```' → logprob: -22.75020408630371

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011096511036157608
    2. '<|end|>' → logprob: -4.636096477508545
    3. '```' → logprob: -7.136096477508545
    4. ')' → logprob: -8.761096954345703
    5. '#' → logprob: -9.261096954345703
    6. '%' → logprob: -9.386096954345703
    7. 'f' → logprob: -9.761096954345703
    8. '#print' → logprob: -10.511096954345703
    9. '}' → logprob: -10.886096954345703
    10. ' print' → logprob: -11.136096954345703

Token 85: '((' (ID: 2054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.07946854829788208
    2. '(' → logprob: -2.5794684886932373
    3. '(n' → logprob: -7.704468727111816
    4. '()' → logprob: -9.204468727111816
    5. '((' → logprob: -11.329468727111816
    6. '(len' → logprob: -12.204468727111816
    7. '(max' → logprob: -13.079468727111816
    8. '(sum' → logprob: -13.079468727111816
    9. 'f' → logprob: -13.579468727111816
    10. '(s' → logprob: -14.204468727111816

Token 86: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6868442296981812
    2. 'nf' → logprob: -0.8118442296981812
    3. ' nf' → logprob: -3.3118443489074707
    4. ' f' → logprob: -4.436844348907471
    5. '(f' → logprob: -6.686844348907471
    6. 'n' → logprob: -6.686844348907471
    7. '(n' → logprob: -6.811844348907471
    8. '2' → logprob: -8.561843872070312
    9. '_nf' → logprob: -8.686843872070312
    10. ' (' → logprob: -8.936843872070312

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5763037204742432
    2. ' +' → logprob: -0.8263037204742432
    3. ' -' → logprob: -8.451303482055664
    4. ' *' → logprob: -10.076303482055664
    5. '-' → logprob: -10.201303482055664
    6. '*' → logprob: -10.201303482055664
    7. '+n' → logprob: -10.951303482055664
    8. ')' → logprob: -11.576303482055664
    9. ' ' → logprob: -13.201303482055664
    10. '-n' → logprob: -13.576303482055664

Token 88: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.04301539808511734
    2. ' nf' → logprob: -3.168015480041504
    3. '_nf' → logprob: -12.043015480041504
    4. ' ' → logprob: -12.168015480041504
    5. 'n' → logprob: -12.543015480041504
    6. '   ' → logprob: -15.168015480041504
    7. 'nof' → logprob: -16.043014526367188
    8. 'nl' → logprob: -16.168014526367188
    9. ' n' → logprob: -16.168014526367188
    10. 'nd' → logprob: -16.293014526367188

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005374033935368061
    2. ')%' → logprob: -5.255373954772949
    3. ' )' → logprob: -8.88037395477295
    4. '%' → logprob: -14.25537395477295
    5. '+' → logprob: -16.380374908447266
    6. '   ' → logprob: -16.505374908447266
    7. '）' → logprob: -16.630374908447266
    8. ' ' → logprob: -16.755374908447266
    9. '))' → logprob: -16.880374908447266
    10. '-' → logprob: -17.005374908447266

Token 90: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035210587084293365
    2. '%' → logprob: -3.660210609436035
    3. ')%' → logprob: -4.785210609436035
    4. ' %' → logprob: -7.660210609436035
    5. '%)' → logprob: -10.785210609436035
    6. ' )' → logprob: -11.035210609436035
    7. ')`' → logprob: -11.910210609436035
    8. '))' → logprob: -13.535210609436035
    9. ')
' → logprob: -14.285210609436035
    10. '```' → logprob: -14.410210609436035

Token 91: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06202247366309166
    2. ' mod' → logprob: -2.8120224475860596
    3. '(mod' → logprob: -9.81202220916748
    4. ' ' → logprob: -17.062023162841797
    5. '	mod' → logprob: -17.562023162841797
    6. '(' → logprob: -19.812023162841797
    7. ' мод' → logprob: -20.062023162841797
    8. ')' → logprob: -20.312023162841797
    9. '7' → logprob: -20.312023162841797
    10. ' (' → logprob: -20.312023162841797

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -15.125001907348633
    4. ')`' → logprob: -15.625001907348633
    5. ')
' → logprob: -16.125001907348633
    6. '`)' → logprob: -17.625001907348633
    7. '')' → logprob: -18.000001907348633
    8. '```' → logprob: -18.625001907348633
    9. '）' → logprob: -18.750001907348633
    10. ')}' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 26.67%
Précision adaptée (1ère position): 27.78%
Précision (top 10): 73.33%
================================================================================
