================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = input().split()
for i in range(len(a)):
    a[i] = int(a[i])
m = a[0]
for i in a:
    if i > m:
        m = i
for i in range(len(a)):
    if a[i] == m:
        del a[i]
        break
s = 0
for i in a:
    s += i
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010312614031136036
    2. ''' → logprob: -8.251030921936035
    3. '(
' → logprob: -8.376030921936035
    4. '('' → logprob: -8.501030921936035
    5. '"' → logprob: -8.876030921936035
    6. '`' → logprob: -9.251030921936035
    7. ' (' → logprob: -10.876030921936035
    8. '```' → logprob: -11.001030921936035
    9. '(

' → logprob: -11.251030921936035
    10. '(`' → logprob: -11.751030921936035

Token 4: 'split' (ID: 13627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5505858063697815
    2. '.' → logprob: -1.8005857467651367
    3. '(' → logprob: -2.3005857467651367
    4. '()' → logprob: -2.9255857467651367
    5. '\n' → logprob: -3.8005857467651367
    6. ')' → logprob: -4.175585746765137
    7. '\' → logprob: -4.175585746765137
    8. '*' → logprob: -4.675585746765137
    9. '```' → logprob: -4.675585746765137
    10. '.strip' → logprob: -5.050585746765137

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009190816199406981
    2. '()' → logprob: -7.125918865203857
    3. '('' → logprob: -10.375919342041016
    4. '(
' → logprob: -10.750919342041016
    5. '("("' → logprob: -10.875919342041016
    6. '"' → logprob: -11.250919342041016
    7. '(

' → logprob: -11.500919342041016
    8. '`' → logprob: -12.625919342041016
    9. '(`' → logprob: -12.625919342041016
    10. ' (' → logprob: -12.875919342041016

Token 6: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06842465698719025
    2. 'a' → logprob: -3.943424701690674
    3. '=' → logprob: -4.318424701690674
    4. '.' → logprob: -4.443424701690674
    5. 'print' → logprob: -5.068424701690674
    6. '[a' → logprob: -5.193424701690674
    7. '[
' → logprob: -6.318424701690674
    8. '```' → logprob: -6.568424701690674
    9. '\[' → logprob: -6.943424701690674
    10. 'for' → logprob: -6.943424701690674

Token 7: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11497005075216293
    2. ' i' → logprob: -3.1149699687957764
    3. ' a' → logprob: -3.8649699687957764
    4. '  ' → logprob: -3.9899699687957764
    5. '_' → logprob: -4.2399702072143555
    6. 'i' → logprob: -5.4899702072143555
    7. ' _' → logprob: -6.2399702072143555
    8. 'a' → logprob: -6.8649702072143555
    9. ' item' → logprob: -7.4899702072143555
    10. ''' → logprob: -7.7399702072143555

Token 8: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29262709617614746
    2. ' in' → logprob: -1.4176270961761475
    3. ' ' → logprob: -4.792627334594727
    4. '_' → logprob: -7.042627334594727
    5. '  ' → logprob: -7.542627334594727
    6. ')' → logprob: -8.167627334594727
    7. '[' → logprob: -8.292627334594727
    8. '<|end|>' → logprob: -8.417627334594727
    9. '(' → logprob: -8.542627334594727
    10. 'n' → logprob: -9.167627334594727

Token 9: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1416814774274826
    2. 'range' → logprob: -2.391681432723999
    3. ' range' → logprob: -3.516681432723999
    4. ' a' → logprob: -4.516681671142578
    5. ' ' → logprob: -14.016681671142578
    6. '(range' → logprob: -14.516681671142578
    7. '(a' → logprob: -14.891681671142578
    8. '	range' → logprob: -14.891681671142578
    9. '  ' → logprob: -15.016681671142578
    10. '```' → logprob: -15.391681671142578

Token 10: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.25194206833839417
    2. '(' → logprob: -1.5019420385360718
    3. '(length' → logprob: -12.251941680908203
    4. '(a' → logprob: -13.251941680908203
    5. ' (' → logprob: -13.376941680908203
    6. '(
' → logprob: -14.001941680908203
    7. '((' → logprob: -14.001941680908203
    8. '(int' → logprob: -14.126941680908203
    9. 'len' → logprob: -14.751941680908203
    10. '(n' → logprob: -14.751941680908203

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0019311357755213976
    2. '(' → logprob: -6.251931190490723
    3. 'a' → logprob: -13.001931190490723
    4. '(
' → logprob: -16.251930236816406
    5. '(s' → logprob: -17.126930236816406
    6. '(i' → logprob: -17.626930236816406
    7. '(

' → logprob: -18.001930236816406
    8. '(ai' → logprob: -18.001930236816406
    9. ' (' → logprob: -18.251930236816406
    10. '(b' → logprob: -18.501930236816406

Token 12: ')):
' (ID: 22530)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.045261677354574203
    2. ')' → logprob: -3.6702616214752197
    3. ')):' → logprob: -4.420261859893799
    4. '[' → logprob: -5.545261859893799
    5. '):' → logprob: -6.420261859893799
    6. '[a' → logprob: -7.170261859893799
    7. '[i' → logprob: -8.92026138305664
    8. ' ))' → logprob: -9.29526138305664
    9. ' ' → logprob: -9.67026138305664
    10. ')))' → logprob: -9.79526138305664

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007982654497027397
    2. 'a' → logprob: -5.7579827308654785
    3. ':' → logprob: -6.1329827308654785
    4. '```' → logprob: -7.8829827308654785
    5. ' if' → logprob: -8.00798225402832
    6. '    ' → logprob: -8.00798225402832
    7. '[' → logprob: -8.25798225402832
    8. ' a' → logprob: -8.50798225402832
    9. 'print' → logprob: -8.63298225402832
    10. 'if' → logprob: -8.88298225402832

Token 14: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7360837459564209
    2. 'a' (adapté à ' a') → logprob: -1.361083745956421
    3. '   ' → logprob: -1.611083745956421
    4. ' a' → logprob: -3.736083745956421
    5. 'if' → logprob: -3.736083745956421
    6. ' print' → logprob: -4.736083984375
    7. ' if' → logprob: -5.486083984375
    8. 'for' → logprob: -5.861083984375
    9. '    ' → logprob: -7.111083984375
    10. ' for' → logprob: -7.736083984375

Token 15: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28742197155952454
    2. '[i' → logprob: -1.4124219417572021
    3. '[a' → logprob: -5.162422180175781
    4. '\[' → logprob: -8.787422180175781
    5. '```' → logprob: -8.787422180175781
    6. '[I' → logprob: -9.912422180175781
    7. '[int' → logprob: -10.287422180175781
    8. '[:]' → logprob: -10.412422180175781
    9. '[...]' → logprob: -10.537422180175781
    10. '[input' → logprob: -11.037422180175781

Token 16: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09581591188907623
    2. ']' → logprob: -2.845815896987915
    3. '[' → logprob: -4.345816135406494
    4. '.append' → logprob: -4.845816135406494
    5. ').' → logprob: -5.845816135406494
    6. ')=' → logprob: -6.095816135406494
    7. ' )' → logprob: -6.470816135406494
    8. '].' → logprob: -6.720816135406494
    9. ']+=' → logprob: -6.970816135406494
    10. '=' → logprob: -7.345816135406494

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010283299721777439
    2. ' =' → logprob: -5.385283470153809
    3. '+=' → logprob: -5.885283470153809
    4. '+' → logprob: -6.760283470153809
    5. '[' → logprob: -7.385283470153809
    6. '.' → logprob: -8.010283470153809
    7. ' +=' → logprob: -8.760283470153809
    8. ')' → logprob: -8.885283470153809
    9. '+='' → logprob: -9.010283470153809
    10. '```' → logprob: -10.010283470153809

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00411129230633378
    2. ' int' → logprob: -5.504111289978027
    3. 'a' → logprob: -10.629111289978027
    4. 'float' → logprob: -11.879111289978027
    5. ' a' → logprob: -14.629111289978027
    6. 'str' → logprob: -14.879111289978027
    7. 'input' → logprob: -15.254111289978027
    8. '(int' → logprob: -15.754111289978027
    9. ' float' → logprob: -16.504112243652344
    10. 'list' → logprob: -16.754112243652344

Token 19: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4740826487541199
    2. '(' → logprob: -0.9740826487541199
    3. '(
' → logprob: -13.099082946777344
    4. '(

' → logprob: -13.474082946777344
    5. '('' → logprob: -13.724082946777344
    6. '(A' → logprob: -15.724082946777344
    7. '("("' → logprob: -15.724082946777344
    8. 'a' → logprob: -15.849082946777344
    9. '((' → logprob: -15.974082946777344
    10. '(`' → logprob: -16.224082946777344

Token 20: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006004538154229522
    2. '[' → logprob: -7.500600337982178
    3. ')' → logprob: -10.375600814819336
    4. ' [' → logprob: -11.625600814819336
    5. '[a' → logprob: -12.875600814819336
    6. ')[' → logprob: -13.250600814819336
    7. '[I' → logprob: -13.750600814819336
    8. '[
' → logprob: -14.375600814819336
    9. ')i' → logprob: -15.000600814819336
    10. ' ' → logprob: -15.250600814819336

Token 21: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6945909857749939
    2. '))' → logprob: -0.6945909857749939
    3. '])' → logprob: -6.569591045379639
    4. ')))' → logprob: -11.19459056854248
    5. ')]' → logprob: -12.06959056854248
    6. ')])' → logprob: -12.44459056854248
    7. ']' → logprob: -12.81959056854248
    8. ']))' → logprob: -12.94459056854248
    9. ' )' → logprob: -13.31959056854248
    10. '})' → logprob: -13.44459056854248

Token 22: 'm' (ID: 76)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3297028541564941
    2. '[' → logprob: -1.5797028541564941
    3. '<|end|>' → logprob: -2.079702854156494
    4. ')' → logprob: -2.579702854156494
    5. '```' → logprob: -2.829702854156494
    6. '#' → logprob: -3.329702854156494
    7. 'a' → logprob: -3.454702854156494
    8. 'for' → logprob: -3.579702854156494
    9. '\n' → logprob: -3.829702854156494
    10. 'print' → logprob: -3.829702854156494

Token 23: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04287654161453247
    2. 'ax' → logprob: -3.4178764820098877
    3. ' =' → logprob: -5.292876720428467
    4. 'i' → logprob: -6.667876720428467
    5. '=' → logprob: -7.417876720428467
    6. '.' → logprob: -7.417876720428467
    7. '(a' → logprob: -8.167876243591309
    8. '[a' → logprob: -8.417876243591309
    9. '_a' → logprob: -8.667876243591309
    10. '.a' → logprob: -8.667876243591309

Token 24: ' a' (ID: 261)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.09180575609207153
    2. 'max' → logprob: -2.5918056964874268
    3. ' min' → logprob: -4.466805934906006
    4. 'min' → logprob: -6.841805934906006
    5. ' ' → logprob: -8.966805458068848
    6. ' sum' → logprob: -9.591805458068848
    7. ' len' → logprob: -10.466805458068848
    8. 'sum' → logprob: -10.966805458068848
    9. 'len' → logprob: -11.466805458068848
    10. '0' → logprob: -12.216805458068848

Token 25: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.1338600516319275
    2. '.copy' → logprob: -2.1338601112365723
    3. '[:' → logprob: -5.133860111236572
    4. '[' → logprob: -7.383860111236572
    5. '.' → logprob: -8.133859634399414
    6. '[::-' → logprob: -10.383859634399414
    7. '[m' → logprob: -10.883859634399414
    8. '[i' → logprob: -11.383859634399414
    9. 'copy' → logprob: -11.508859634399414
    10. '<|end|>' → logprob: -12.008859634399414

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012795224320143461
    2. ' ' → logprob: -7.376279354095459
    3. '1' → logprob: -8.126279830932617
    4. 'i' → logprob: -8.376279830932617
    5. '-' → logprob: -9.126279830932617
    6. ']' → logprob: -12.376279830932617
    7. '])' → logprob: -12.751279830932617
    8. ' i' → logprob: -13.001279830932617
    9. '2' → logprob: -13.251279830932617
    10. ' -' → logprob: -13.688779830932617

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12284094840288162
    2. ')' → logprob: -2.3728408813476562
    3. '+' → logprob: -4.122840881347656
    4. '])' → logprob: -6.372840881347656
    5. ' ]' → logprob: -6.622840881347656
    6. ']+' → logprob: -7.122840881347656
    7. '*' → logprob: -7.622840881347656
    8. '-' → logprob: -7.997840881347656
    9. ' )' → logprob: -8.122840881347656
    10. '[' → logprob: -8.122840881347656

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2251153141260147
    2. ' for' → logprob: -1.9751152992248535
    3. '+' → logprob: -3.9751152992248535
    4. '>' → logprob: -4.6001152992248535
    5. ' ' → logprob: -4.7251152992248535
    6. '.' → logprob: -4.8501152992248535
    7. '<|end|>' → logprob: -5.9751152992248535
    8. 'i' → logprob: -6.2251152992248535
    9. ')' → logprob: -6.2251152992248535
    10. ',' → logprob: -6.3501152992248535

Token 29: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39006686210632324
    2. ' i' → logprob: -1.1400668621063232
    3. ' _' → logprob: -6.890067100524902
    4. 'i' → logprob: -6.890067100524902
    5. '_' → logprob: -7.015067100524902
    6. '  ' → logprob: -9.015067100524902
    7. ' range' → logprob: -9.515067100524902
    8. ' ‌' → logprob: -10.765067100524902
    9. ' ' → logprob: -11.765067100524902
    10. 'range' → logprob: -11.765067100524902

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05597209557890892
    2. 'in' → logprob: -2.930972099304199
    3. ' ' → logprob: -7.055972099304199
    4. '+' → logprob: -8.9309720993042
    5. 'n' → logprob: -10.1809720993042
    6. '  ' → logprob: -11.3059720993042
    7. '	in' → logprob: -11.4309720993042
    8. 'range' → logprob: -11.6809720993042
    9. '   ' → logprob: -12.0559720993042
    10. '```' → logprob: -13.0559720993042

Token 31: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04923783242702484
    2. 'range' → logprob: -3.0492377281188965
    3. ' a' → logprob: -7.5492377281188965
    4. 'a' → logprob: -9.049238204956055
    5. ' ' → logprob: -12.674238204956055
    6. '  ' → logprob: -14.174238204956055
    7. '   ' → logprob: -14.299238204956055
    8. '	range' → logprob: -14.424238204956055
    9. '(range' → logprob: -15.299238204956055
    10. '    ' → logprob: -15.799238204956055

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07728195190429688
    2. '[' → logprob: -3.077281951904297
    3. ' :' → logprob: -3.577281951904297
    4. '[:' → logprob: -9.202281951904297
    5. '>' → logprob: -9.827281951904297
    6. '[:]' → logprob: -9.827281951904297
    7. ':
' → logprob: -10.577281951904297
    8. '>:' → logprob: -10.577281951904297
    9. '[:-' → logprob: -10.952281951904297
    10. '：' → logprob: -11.577281951904297

Token 33: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26966163516044617
    2. '   ' → logprob: -2.3946616649627686
    3. '    ' → logprob: -2.5196616649627686
    4. ' ' → logprob: -3.1446616649627686
    5. 'if' → logprob: -4.5196614265441895
    6. ' =' → logprob: -5.6446614265441895
    7. ' >' → logprob: -6.1446614265441895
    8. '  ' → logprob: -6.8946614265441895
    9. ' m' → logprob: -7.0196614265441895
    10. '>' → logprob: -7.0196614265441895

Token 34: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02368529699742794
    2. 'if' (adapté à ' if') → logprob: -4.148685455322266
    3. ' ' → logprob: -5.023685455322266
    4. ' m' → logprob: -7.523685455322266
    5. '   ' → logprob: -8.898685455322266
    6. '    ' → logprob: -9.023685455322266
    7. '  ' → logprob: -9.273685455322266
    8. ' a' → logprob: -10.148685455322266
    9. ' >' → logprob: -10.648685455322266
    10. '>' → logprob: -11.273685455322266

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008559550042264163
    2. 'i' → logprob: -7.500855922698975
    3. ' ' → logprob: -8.250856399536133
    4. ' m' → logprob: -10.250856399536133
    5. ' ' → logprob: -12.500856399536133
    6. '	i' → logprob: -14.125856399536133
    7. 'm' → logprob: -14.500856399536133
    8. '    ' → logprob: -14.750856399536133
    9. '  ' → logprob: -15.625856399536133
    10. ' ‌' → logprob: -16.000856399536133

Token 36: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31860607862472534
    2. '>' → logprob: -1.3186061382293701
    3. ' <' → logprob: -5.318605899810791
    4. '<' → logprob: -8.06860637664795
    5. '<m' → logprob: -9.69360637664795
    6. ' m' → logprob: -10.44360637664795
    7. ' ' → logprob: -10.94360637664795
    8. 'm' → logprob: -11.94360637664795
    9. '   ' → logprob: -14.81860637664795
    10. ' ' → logprob: -15.44360637664795

Token 37: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759409070014954
    2. ' m' → logprob: -0.8259409070014954
    3. ' ' → logprob: -13.95094108581543
    4. '	m' → logprob: -14.82594108581543
    5. ' ' → logprob: -15.57594108581543
    6. '0' → logprob: -17.70094108581543
    7. '>' → logprob: -17.82594108581543
    8. '   ' → logprob: -18.07594108581543
    9. '  ' → logprob: -18.45094108581543
    10. ' м' → logprob: -18.82594108581543

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010676169040380046
    2. ':
' → logprob: -9.875106811523438
    3. ' :' → logprob: -9.875106811523438
    4. '=' → logprob: -13.500106811523438
    5. ':i' → logprob: -15.000106811523438
    6. '：' → logprob: -15.250106811523438
    7. 'm' → logprob: -15.250106811523438
    8. ':m' → logprob: -15.250106811523438
    9. ':**' → logprob: -15.375106811523438
    10. '>' → logprob: -15.500106811523438

Token 39: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013633318012580276
    2. 'i' → logprob: -6.876363277435303
    3. '   ' → logprob: -8.876363754272461
    4. '    ' → logprob: -10.001363754272461
    5. ' ' → logprob: -10.126363754272461
    6. '       ' → logprob: -10.376363754272461
    7. ' 
' → logprob: -10.501363754272461
    8. '	i' → logprob: -11.501363754272461
    9. '=i' → logprob: -12.001363754272461
    10. ' =' → logprob: -12.001363754272461

Token 40: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.01621384173631668
    2. 'm' (adapté à ' m') → logprob: -4.141213893890381
    3. ' i' → logprob: -8.766213417053223
    4. 'i' → logprob: -10.766213417053223
    5. ' ' → logprob: -14.391213417053223
    6. ' ' → logprob: -14.641213417053223
    7. '	m' → logprob: -14.891213417053223
    8. ' м' → logprob: -15.266213417053223
    9. '   ' → logprob: -15.516213417053223
    10. '    ' → logprob: -15.766213417053223

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023224592208862
    2. '=' → logprob: -1.9102323055267334
    3. '=i' → logprob: -12.285232543945312
    4. ' ' → logprob: -12.910232543945312
    5. '=m' → logprob: -14.035232543945312
    6. '＝' → logprob: -16.285232543945312
    7. '=

' → logprob: -16.910232543945312
    8. '.=' → logprob: -17.660232543945312
    9. '   ' → logprob: -17.785232543945312
    10. ' ' → logprob: -17.785232543945312

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326213479042053
    2. ' i' → logprob: -1.3132621049880981
    3. '	i' → logprob: -14.938261985778809
    4. '_i' → logprob: -17.313262939453125
    5. '   ' → logprob: -17.813262939453125
    6. ' ' → logprob: -18.063262939453125
    7. '    ' → logprob: -18.313262939453125
    8. ' ' → logprob: -18.938262939453125
    9. '[i' → logprob: -19.188262939453125
    10. '(i' → logprob: -19.313262939453125

Token 43: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.600942075252533
    2. '
' → logprob: -0.850942075252533
    3. '<|end|>' → logprob: -3.9759421348571777
    4. 'm' → logprob: -6.975942134857178
    5. '#' → logprob: -6.975942134857178
    6. '\n' → logprob: -7.225942134857178
    7. ')' → logprob: -7.475942134857178
    8. ' 
' → logprob: -7.725942134857178
    9. '```' → logprob: -7.850942134857178
    10. ' ' → logprob: -8.22594165802002

Token 44: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003234262694604695
    2. '
' → logprob: -8.375323295593262
    3. ' print' → logprob: -10.375323295593262
    4. '<|end|>' → logprob: -10.875323295593262
    5. ')' → logprob: -11.375323295593262
    6. 'm' → logprob: -11.875323295593262
    7. '#' → logprob: -12.750323295593262
    8. '#print' → logprob: -12.750323295593262
    9. '   ' → logprob: -12.875323295593262
    10. ' ' → logprob: -13.000323295593262

Token 45: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16983020305633545
    2. ' i' → logprob: -2.044830322265625
    3. ' ' → logprob: -4.044830322265625
    4. 'a' → logprob: -5.294830322265625
    5. 'i' → logprob: -5.544830322265625
    6. '  ' → logprob: -8.669830322265625
    7. '   ' → logprob: -9.669830322265625
    8. '_' → logprob: -10.294830322265625
    9. ' x' → logprob: -10.794830322265625
    10. ' ' → logprob: -11.544830322265625

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37808603048324585
    2. ' a' → logprob: -1.2530860900878906
    3. 'in' → logprob: -4.128086090087891
    4. ' ' → logprob: -4.753086090087891
    5. 'a' → logprob: -5.878086090087891
    6. '  ' → logprob: -8.25308609008789
    7. '_' → logprob: -8.50308609008789
    8. ' range' → logprob: -8.62808609008789
    9. ' _' → logprob: -8.75308609008789
    10. ' not' → logprob: -8.75308609008789

Token 47: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11820539832115173
    2. ' a' → logprob: -2.2432053089141846
    3. ' range' → logprob: -5.618205547332764
    4. 'range' → logprob: -6.368205547332764
    5. ' ' → logprob: -11.743205070495605
    6. '[' → logprob: -11.868205070495605
    7. '[a' → logprob: -13.243205070495605
    8. '  ' → logprob: -13.868205070495605
    9. ' [' → logprob: -13.868205070495605
    10. '	a' → logprob: -14.368205070495605

Token 48: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2521696090698242
    2. '(' → logprob: -1.5021696090698242
    3. '(m' → logprob: -9.127169609069824
    4. 'len' → logprob: -9.752169609069824
    5. '(a' → logprob: -10.002169609069824
    6. '(l' → logprob: -11.377169609069824
    7. ' (' → logprob: -12.502169609069824
    8. ' len' → logprob: -13.002169609069824
    9. '((' → logprob: -13.127169609069824
    10. '1' → logprob: -13.377169609069824

Token 49: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.625014305114746
    3. 'a' → logprob: -12.625014305114746
    4. '(m' → logprob: -13.750014305114746
    5. '(s' → logprob: -15.750014305114746
    6. ')' → logprob: -16.12501335144043
    7. ')a' → logprob: -16.87501335144043
    8. '(A' → logprob: -17.12501335144043
    9. '(b' → logprob: -17.75001335144043
    10. '((' → logprob: -17.75001335144043

Token 50: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08428309112787247
    2. '):
' → logprob: -2.7092831134796143
    3. ')):' → logprob: -4.459282875061035
    4. ')):
' → logprob: -6.709282875061035
    5. '-' → logprob: -7.584282875061035
    6. '):
' → logprob: -7.834282875061035
    7. ')' → logprob: -7.959282875061035
    8. ' ' → logprob: -9.709282875061035
    9. '))' → logprob: -10.209282875061035
    10. '   ' → logprob: -10.459282875061035

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3340521454811096
    2. ' if' → logprob: -1.8340520858764648
    3. 'if' → logprob: -2.834052085876465
    4. ' a' → logprob: -3.709052085876465
    5. ' print' → logprob: -4.584052085876465
    6. '    ' → logprob: -4.709052085876465
    7. ':' → logprob: -4.834052085876465
    8. 'print' → logprob: -5.459052085876465
    9. 'a' → logprob: -6.209052085876465
    10. ' ' → logprob: -6.459052085876465

Token 52: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2614402174949646
    2. ' if' → logprob: -1.8864402770996094
    3. 'a' → logprob: -3.2614402770996094
    4. 'print' → logprob: -3.8864402770996094
    5. '   ' → logprob: -4.636440277099609
    6. ' a' → logprob: -4.761440277099609
    7. ' print' → logprob: -7.386440277099609
    8. 'for' → logprob: -7.886440277099609
    9. ' for' → logprob: -9.01144027709961
    10. '    ' → logprob: -9.13644027709961

Token 53: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02092849090695381
    2. 'a' → logprob: -3.895928382873535
    3. ' m' → logprob: -8.145928382873535
    4. 'm' → logprob: -9.770928382873535
    5. ' ' → logprob: -11.270928382873535
    6. '   ' → logprob: -11.520928382873535
    7. '	a' → logprob: -11.645928382873535
    8. ' ' → logprob: -13.520928382873535
    9. '    ' → logprob: -13.520928382873535
    10. ' i' → logprob: -13.895928382873535

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009346862207166851
    2. '[' → logprob: -7.000934600830078
    3. '[a' → logprob: -11.000934600830078
    4. '[m' → logprob: -12.750934600830078
    5. ' [' → logprob: -13.000934600830078
    6. '[j' → logprob: -15.250934600830078
    7. ' ' → logprob: -15.375934600830078
    8. 'i' → logprob: -16.000934600830078
    9. '[index' → logprob: -16.375934600830078
    10. '   ' → logprob: -16.500934600830078

Token 55: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10394188016653061
    2. '==' → logprob: -2.3539419174194336
    3. ' >' → logprob: -6.603941917419434
    4. ' ' → logprob: -6.978941917419434
    5. '>' → logprob: -7.353941917419434
    6. ' <' → logprob: -7.603941917419434
    7. '<' → logprob: -9.353941917419434
    8. '=' → logprob: -9.853941917419434
    9. ')' → logprob: -10.603941917419434
    10. ' =' → logprob: -10.603941917419434

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6268295645713806
    2. '==' → logprob: -0.8768295645713806
    3. '<' → logprob: -3.7518296241760254
    4. ' <' → logprob: -4.376829624176025
    5. '>' → logprob: -5.001829624176025
    6. ' >' → logprob: -5.876829624176025
    7. '%' → logprob: -6.001829624176025
    8. '=' → logprob: -8.001829147338867
    9. ' ' → logprob: -8.126829147338867
    10. '<m' → logprob: -8.501829147338867

Token 57: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2519305646419525
    2. ' m' → logprob: -1.501930594444275
    3. ' ' → logprob: -13.876930236816406
    4. '   ' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '	m' → logprob: -16.126930236816406
    7. 'max' → logprob: -16.751930236816406
    8. '  ' → logprob: -17.251930236816406
    9. '    ' → logprob: -17.626930236816406
    10. '1' → logprob: -19.251930236816406

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007657911046408117
    2. ':
' → logprob: -7.250765800476074
    3. ' :' → logprob: -10.625765800476074
    4. '   ' → logprob: -11.625765800476074
    5. ' and' → logprob: -12.125765800476074
    6. '       ' → logprob: -12.750765800476074
    7. '):' → logprob: -13.250765800476074
    8. ',' → logprob: -13.250765800476074
    9. ':return' → logprob: -13.250765800476074
    10. '=' → logprob: -13.375765800476074

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31251752376556396
    2. 'print' → logprob: -2.0625176429748535
    3. ' print' → logprob: -2.1875176429748535
    4. ' a' → logprob: -4.3125176429748535
    5. '   ' → logprob: -4.3125176429748535
    6. 'a' → logprob: -7.1875176429748535
    7. '    ' → logprob: -7.3125176429748535
    8. '```' → logprob: -9.562517166137695
    9. ' continue' → logprob: -9.750017166137695
    10. '	print' → logprob: -9.812517166137695

Token 60: ' del' (ID: 1083)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0543346107006073
    2. ' print' → logprob: -3.1793346405029297
    3. 'i' → logprob: -5.05433464050293
    4. ' i' → logprob: -5.67933464050293
    5. ' a' → logprob: -7.42933464050293
    6. 'a' → logprob: -7.67933464050293
    7. '   ' → logprob: -8.80433464050293
    8. 'pr' → logprob: -9.17933464050293
    9. 'p' → logprob: -10.17933464050293
    10. 'pri' → logprob: -11.55433464050293

Token 61: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.005234713666141033
    2. 'a' → logprob: -5.255234718322754
    3. '(a' → logprob: -15.005234718322754
    4. ' ' → logprob: -15.130234718322754
    5. ' ' → logprob: -15.630234718322754
    6. '	a' → logprob: -15.880234718322754
    7. ' а' → logprob: -17.380233764648438
    8. '_a' → logprob: -17.755233764648438
    9. '[a' → logprob: -18.005233764648438
    10. ',a' → logprob: -19.005233764648438

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08020937442779541
    2. '[' → logprob: -2.580209255218506
    3. '[a' → logprob: -6.705209255218506
    4. ' [' → logprob: -10.580209732055664
    5. '\[' → logprob: -11.580209732055664
    6. '[
' → logprob: -12.080209732055664
    7. '[j' → logprob: -12.080209732055664
    8. '[m' → logprob: -12.330209732055664
    9. '   ' → logprob: -12.455209732055664
    10. ' ' → logprob: -12.705209732055664

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1960987150669098
    2. '       ' → logprob: -1.9460986852645874
    3. ')
' → logprob: -3.446098804473877
    4. '<|end|>' → logprob: -6.696098804473877
    5. '           ' → logprob: -7.196098804473877
    6. '
' → logprob: -8.696098327636719
    7. '```' → logprob: -8.696098327636719
    8. ',' → logprob: -8.696098327636719
    9. ';' → logprob: -9.196098327636719
    10. '               ' → logprob: -9.571098327636719

Token 64: '       ' (ID: 309)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.07307543605566025
    2. 'Trace' → logprob: -2.823075532913208
    3. ' ' → logprob: -5.448075294494629
    4. ']' → logprob: -6.323075294494629
    5. ' Index' → logprob: -6.948075294494629
    6. '[Index' → logprob: -6.948075294494629
    7. '[' → logprob: -7.198075294494629
    8. ')' → logprob: -8.198075294494629
    9. '```' → logprob: -8.448075294494629
    10. '   ' → logprob: -8.573075294494629

Token 65: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006413963157683611
    2. ' break' → logprob: -5.50641393661499
    3. ' ' → logprob: -7.38141393661499
    4. '        ' → logprob: -7.75641393661499
    5. 'break' (adapté à ' break') → logprob: -7.75641393661499
    6. '        
' → logprob: -8.256414413452148
    7. '```' → logprob: -9.006414413452148
    8. '	break' → logprob: -9.006414413452148
    9. '           ' → logprob: -10.131414413452148
    10. ' 
' → logprob: -10.256414413452148

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.11426720768213272
    2. 'u' → logprob: -2.239267110824585
    3. '=' → logprob: -7.364267349243164
    4. ' =' → logprob: -7.489267349243164
    5. '.' → logprob: -9.114267349243164
    6. '[' → logprob: -11.364267349243164
    7. 'uml' → logprob: -11.364267349243164
    8. '(' → logprob: -11.614267349243164
    9. '   ' → logprob: -11.739267349243164
    10. '[u' → logprob: -11.864267349243164

Token 69: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03695686534047127
    2. '0' → logprob: -3.911956787109375
    3. ' sum' → logprob: -4.286956787109375
    4. 'str' → logprob: -6.036956787109375
    5. ' str' → logprob: -10.161956787109375
    6. ' ' → logprob: -10.161956787109375
    7. '"' → logprob: -10.411956787109375
    8. 'm' → logprob: -11.536956787109375
    9. 'max' → logprob: -11.536956787109375
    10. '(sum' → logprob: -12.536956787109375

Token 70: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0020497434306889772
    2. '0' → logprob: -6.377049922943115
    3. 'str' → logprob: -8.127049446105957
    4. 'max' → logprob: -10.252049446105957
    5. ' sum' → logprob: -12.127049446105957
    6. 'a' → logprob: -12.252049446105957
    7. 'min' → logprob: -12.877049446105957
    8. 'm' → logprob: -13.502049446105957
    9. '(sum' → logprob: -13.752049446105957
    10. '1' → logprob: -14.627049446105957

Token 71: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03457522392272949
    2. ' for' → logprob: -3.4095752239227295
    3. '<|end|>' → logprob: -7.534575462341309
    4. '+' → logprob: -7.909575462341309
    5. ' ' → logprob: -11.534575462341309
    6. '
' → logprob: -11.784575462341309
    7. '+
' → logprob: -12.159575462341309
    8. ' 
' → logprob: -13.534575462341309
    9. '<|end|>' → logprob: -14.534575462341309
    10. '```' → logprob: -14.909575462341309

Token 72: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026169343618676066
    2. ' for' → logprob: -8.250261306762695
    3. '+' → logprob: -15.625261306762695
    4. '<|end|>' → logprob: -16.500261306762695
    5. 'or' → logprob: -17.625261306762695
    6. ' ' → logprob: -17.875261306762695
    7. '```' → logprob: -18.250261306762695
    8. '
' → logprob: -19.125261306762695
    9. '	for' → logprob: -19.125261306762695
    10. '   ' → logprob: -19.250261306762695

Token 73: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02105993963778019
    2. 'i' → logprob: -3.896059989929199
    3. ' ' → logprob: -7.771059989929199
    4. ' x' → logprob: -10.3960599899292
    5. ' a' → logprob: -11.2710599899292
    6. '  ' → logprob: -11.7710599899292
    7. '   ' → logprob: -11.8960599899292
    8. 'a' → logprob: -12.2710599899292
    9. 'x' → logprob: -12.5210599899292
    10. ' num' → logprob: -12.5210599899292

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055050864815711975
    2. 'in' → logprob: -2.930050849914551
    3. 'a' → logprob: -9.93005084991455
    4. ' ' → logprob: -10.18005084991455
    5. 's' → logprob: -10.43005084991455
    6. '  ' → logprob: -10.80505084991455
    7. ' a' → logprob: -11.05505084991455
    8. '   ' → logprob: -12.05505084991455
    9. '    ' → logprob: -13.18005084991455
    10. '	in' → logprob: -13.18005084991455

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016183577477931976
    2. ' a' → logprob: -4.141183376312256
    3. ' range' → logprob: -9.391183853149414
    4. 'range' → logprob: -9.641183853149414
    5. ' ' → logprob: -15.266183853149414
    6. '(a' → logprob: -15.516183853149414
    7. '   ' → logprob: -15.891183853149414
    8. '	a' → logprob: -16.641183853149414
    9. '  ' → logprob: -17.016183853149414
    10. '    ' → logprob: -17.516183853149414

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004129152512177825
    2. ':
' → logprob: -8.875412940979004
    3. '+' → logprob: -9.000412940979004
    4. '+:' → logprob: -9.125412940979004
    5. '   ' → logprob: -11.500412940979004
    6. '+=' → logprob: -11.625412940979004
    7. 's' → logprob: -12.125412940979004
    8. '=' → logprob: -12.500412940979004
    9. ' +=' → logprob: -12.625412940979004
    10. ':s' → logprob: -12.750412940979004

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04963470622897148
    2. 's' → logprob: -3.6746346950531006
    3. ' s' → logprob: -3.7996346950531006
    4. '       ' → logprob: -8.67463493347168
    5. '<|end|>' → logprob: -8.67463493347168
    6. ' ' → logprob: -9.04963493347168
    7. '	s' → logprob: -9.54963493347168
    8. '    ' → logprob: -9.67463493347168
    9. '  ' → logprob: -9.67463493347168
    10. '+' → logprob: -11.54963493347168

Token 78: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3135069012641907
    2. ' s' → logprob: -1.313506841659546
    3. ' ' → logprob: -8.688507080078125
    4. '   ' → logprob: -9.938507080078125
    5. '<|end|>' → logprob: -11.313507080078125
    6. '```' → logprob: -12.438507080078125
    7. '>' → logprob: -13.063507080078125
    8. ' if' → logprob: -13.188507080078125
    9. '	s' → logprob: -13.313507080078125
    10. '+' → logprob: -13.313507080078125

Token 79: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027185291051864624
    2. ' +=' → logprob: -3.7771852016448975
    3. '+' → logprob: -5.652185440063477
    4. '=' → logprob: -7.777185440063477
    5. '+="' → logprob: -13.902185440063477
    6. '+='' → logprob: -14.152185440063477
    7. ' +' → logprob: -14.527185440063477
    8. ']+=' → logprob: -14.902185440063477
    9. ' =' → logprob: -15.152185440063477
    10. '+=(' → logprob: -15.902185440063477

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001502598519437015
    2. ' i' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.126502990722656
    4. '   ' → logprob: -17.001502990722656
    5. 'int' → logprob: -17.001502990722656
    6. '  ' → logprob: -18.501502990722656
    7. '	i' → logprob: -18.501502990722656
    8. '1' → logprob: -19.376502990722656
    9. '(i' → logprob: -19.626502990722656
    10. ' ' → logprob: -20.876502990722656

Token 81: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022939443588256836
    2. '
' → logprob: -6.252294063568115
    3. ' print' → logprob: -8.252293586730957
    4. ' 
' → logprob: -10.627293586730957
    5. ')' → logprob: -11.127293586730957
    6. '<|end|>' → logprob: -11.252293586730957
    7. '
' → logprob: -11.752293586730957
    8. ' ' → logprob: -12.002293586730957
    9. '  
' → logprob: -12.127293586730957
    10. '#' → logprob: -12.252293586730957

Token 82: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01560164149850607
    2. ' print' → logprob: -5.640601634979248
    3. ' 
' → logprob: -5.765601634979248
    4. 'p' → logprob: -5.890601634979248
    5. '/' → logprob: -6.015601634979248
    6. '
' → logprob: -6.890601634979248
    7. 's' → logprob: -7.265601634979248
    8. '#' → logprob: -7.765601634979248
    9. ' /' → logprob: -8.265602111816406
    10. 'n' → logprob: -8.265602111816406

Token 83: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.47475141286849976
    2. '(' → logprob: -0.9747514128684998
    3. '(sum' → logprob: -7.8497514724731445
    4. '((' → logprob: -9.224751472473145
    5. '('' → logprob: -9.974751472473145
    6. '("' → logprob: -10.099751472473145
    7. ' (' → logprob: -10.599751472473145
    8. '()' → logprob: -10.724751472473145
    9. 's' → logprob: -11.099751472473145
    10. '(max' → logprob: -11.474751472473145

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. ' )' → logprob: -10.625028610229492
    3. '))' → logprob: -13.375028610229492
    4. ')`' → logprob: -14.375028610229492
    5. ')
' → logprob: -14.625028610229492
    6. ')#' → logprob: -15.250028610229492
    7. '-' → logprob: -15.375028610229492
    8. '//' → logprob: -15.500028610229492
    9. '+' → logprob: -15.625028610229492
    10. '`)' → logprob: -16.125028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 36.59%
Précision adaptée (1ère position): 39.02%
Précision (top 10): 81.71%
================================================================================
