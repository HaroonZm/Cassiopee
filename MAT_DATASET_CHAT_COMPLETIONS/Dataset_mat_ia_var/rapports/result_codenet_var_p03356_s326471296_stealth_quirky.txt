================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(99999)

N_M_tuple = tuple(map(int, input().split()))
_AmntOfNodes, _AmntOfEdges = N_M_tuple

P_ = [None] + list(map(int, input().split()))
Neighborz = [[] for _ in 'a' * (_AmntOfNodes + 1)]

for _ in range(_AmntOfEdges):
    a, b = map(int, input().split())
    Neighborz[a].append(b)
    Neighborz[b].append(a)

_UFro = [i for i in range(_AmntOfNodes+1)]

def _guru(x): # personal naming!
    if x == _UFro[x]: return x
    _UFro[x] = _guru(_UFro[x]); return _UFro[x]

def _chtsama(a, b):
    return _guru(a) == _guru(b)

def _konbu(x, y):  # y dom
    x, y = _guru(x), _guru(y)
    if x ^ y:  # just because XOR is cool
        _UFro[x] = y

_tl = [0]*(1+_AmntOfNodes)
CHECKPOINT = lambda k: _tl[k]    # weird helper

from collections import deque as superq

for idx in range(1, _AmntOfNodes+1):
    if not _tl[idx]:
        _tl[idx] = 1
        QQQ = superq([idx])
        while QQQ:
            very_temp = QQQ.popleft()
            for zz in Neighborz[very_temp]:
                if not _tl[zz]:
                    _tl[zz] = 1
                    _konbu(zz, idx)
                    QQQ.append(zz)

wr8 = 0
for p_p in range(1, _AmntOfNodes+1):
    wr8 += _chtsama(P_[p_p], p_p) & 1  # for 'personal' flair
print(wr8)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001324764802120626
    2. 'ursive' → logprob: -6.876324653625488
    3. 'ur' → logprob: -9.376324653625488
    4. 'urs' → logprob: -9.876324653625488
    5. '_' → logprob: -10.126324653625488
    6. 'limit' → logprob: -10.376324653625488
    7. '_limit' → logprob: -11.001324653625488
    8. 'urf' → logprob: -11.126324653625488
    9. 't' → logprob: -11.501324653625488
    10. 'ursor' → logprob: -11.751324653625488

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.314270555973053
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.939270973205566
    5. ' limit' → logprob: -9.939270973205566
    6. 'lim' → logprob: -10.314270973205566
    7. '_stack' → logprob: -12.189270973205566
    8. '_lim' → logprob: -12.314270973205566
    9. '(limit' → logprob: -12.314270973205566
    10. '-limit' → logprob: -12.939270973205566

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '99' (ID: 2058)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08926168829202652
    2. ')' → logprob: -2.464261770248413
    3. '99' → logprob: -8.964262008666992
    4. '999' → logprob: -9.464262008666992
    5. '))' → logprob: -10.089262008666992
    6. ' )' → logprob: -10.089262008666992
    7. '```' → logprob: -11.464262008666992
    8. ' ' → logprob: -11.964262008666992
    9. '+' → logprob: -12.589262008666992
    10. '   ' → logprob: -13.089262008666992

Token 11: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -13.125004768371582
    3. '))' → logprob: -13.500004768371582
    4. ')
' → logprob: -14.000004768371582
    5. '`)' → logprob: -14.750004768371582
    6. ')`' → logprob: -16.7500057220459
    7. '')' → logprob: -17.1250057220459
    8. '```' → logprob: -17.3750057220459
    9. ')

' → logprob: -17.5000057220459
    10. '）' → logprob: -17.5000057220459

Token 12: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003947317600250244
    2. 'def' → logprob: -6.2539472579956055
    3. ')' → logprob: -7.0039472579956055
    4. '(
' → logprob: -7.5039472579956055
    5. '\(' → logprob: -8.503947257995605
    6. '\' → logprob: -9.003947257995605
    7. '#' → logprob: -9.503947257995605
    8. '```' → logprob: -9.753947257995605
    9. '()' → logprob: -11.128947257995605
    10. ',' → logprob: -11.128947257995605

Token 13: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24795253574848175
    2. '=' → logprob: -1.8729525804519653
    3. '.' → logprob: -3.247952461242676
    4. ' ' → logprob: -4.622952461242676
    5. ',' → logprob: -5.372952461242676
    6. '_' → logprob: -5.372952461242676
    7. ')' → logprob: -5.497952461242676
    8. '  ' → logprob: -6.497952461242676
    9. '>' → logprob: -7.372952461242676
    10. ' )' → logprob: -8.122952461242676

Token 14: '_tuple' (ID: 53371)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05656933784484863
    2. ' =' → logprob: -3.1815693378448486
    3. '[' → logprob: -5.0565690994262695
    4. '_' → logprob: -5.1815690994262695
    5. ')' → logprob: -8.18156909942627
    6. '.' → logprob: -8.18156909942627
    7. '[:]' → logprob: -8.68156909942627
    8. '[]' → logprob: -8.93156909942627
    9. '_=' → logprob: -9.55656909942627
    10. '=int' → logprob: -9.55656909942627

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40524211525917053
    2. '=' → logprob: -1.2802420854568481
    3. '(' → logprob: -3.7802422046661377
    4. '[' → logprob: -4.280241966247559
    5. ')' → logprob: -4.780241966247559
    6. '_' → logprob: -5.280241966247559
    7. 's' → logprob: -6.280241966247559
    8. ',' → logprob: -7.030241966247559
    9. '[:]' → logprob: -7.405241966247559
    10. '.' → logprob: -8.405241966247559

Token 16: ' tuple' (ID: 31311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8970020413398743
    2. '(int' → logprob: -1.1470019817352295
    3. ' (' → logprob: -1.8970019817352295
    4. 'tuple' → logprob: -2.6470019817352295
    5. 'map' → logprob: -3.7720019817352295
    6. ' tuple' → logprob: -4.897002220153809
    7. 'int' → logprob: -5.022002220153809
    8. '(tuple' → logprob: -5.397002220153809
    9. '()' → logprob: -5.647002220153809
    10. 'list' → logprob: -6.397002220153809

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26581844687461853
    2. '(int' → logprob: -1.640818476676941
    3. '(list' → logprob: -4.3908185958862305
    4. '(range' → logprob: -4.6408185958862305
    5. '[int' → logprob: -5.3908185958862305
    6. '([' → logprob: -5.6408185958862305
    7. '((' → logprob: -5.7658185958862305
    8. '(input' → logprob: -6.1408185958862305
    9. '(map' → logprob: -6.3908185958862305
    10. '(sys' → logprob: -7.1408185958862305

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024279333651065826
    2. '(' → logprob: -3.7742793560028076
    3. '(str' → logprob: -7.0242791175842285
    4. 'int' → logprob: -9.524279594421387
    5. '(lambda' → logprob: -10.399279594421387
    6. '(eval' → logprob: -11.524279594421387
    7. '(
' → logprob: -11.899279594421387
    8. '(input' → logprob: -12.149279594421387
    9. '<int' → logprob: -12.149279594421387
    10. '```' → logprob: -13.024279594421387

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.28707563877105713
    2. '(sys' → logprob: -1.6620756387710571
    3. 'input' → logprob: -2.9120755195617676
    4. '(' → logprob: -6.287075519561768
    5. 'sys' → logprob: -6.412075519561768
    6. ')' → logprob: -6.912075519561768
    7. '))' → logprob: -7.912075519561768
    8. ',input' → logprob: -8.662075996398926
    9. ' input' → logprob: -8.912075996398926
    10. ' (' → logprob: -8.912075996398926

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07137087732553482
    2. ' input' → logprob: -2.696370840072632
    3. 'sys' → logprob: -6.696371078491211
    4. ' sys' → logprob: -8.571371078491211
    5. '(input' → logprob: -12.946371078491211
    6. ')' → logprob: -13.571371078491211
    7. ',input' → logprob: -13.571371078491211
    8. '(sys' → logprob: -13.571371078491211
    9. '_input' → logprob: -14.446371078491211
    10. '=input' → logprob: -14.946371078491211

Token 21: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5914736390113831
    2. '()))' → logprob: -0.9664736390113831
    3. '())' → logprob: -3.5914735794067383
    4. '().' → logprob: -4.466473579406738
    5. '(' → logprob: -4.466473579406738
    6. '()));' → logprob: -4.841473579406738
    7. '(()' → logprob: -5.841473579406738
    8. '())))' → logprob: -6.591473579406738
    9. '()>' → logprob: -7.091473579406738
    10. '());' → logprob: -7.341473579406738

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002680112374946475
    2. 'strip' → logprob: -8.25026798248291
    3. 'rstrip' → logprob: -12.25026798248291
    4. ' split' → logprob: -13.50026798248291
    5. '(split' → logprob: -14.87526798248291
    6. 'spl' → logprob: -15.87526798248291
    7. '().' → logprob: -17.375268936157227
    8. 's' → logprob: -18.125268936157227
    9. 'sp' → logprob: -18.500268936157227
    10. '```' → logprob: -18.625268936157227

Token 23: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1408945471048355
    2. '())' → logprob: -2.140894651412964
    3. '()' → logprob: -4.890894412994385
    4. '(' → logprob: -6.265894412994385
    5. '())))' → logprob: -6.265894412994385
    6. '('' → logprob: -6.390894412994385
    7. '))' → logprob: -7.515894412994385
    8. '()));' → logprob: -9.015894889831543
    9. '()),' → logprob: -10.140894889831543
    10. ')' → logprob: -10.140894889831543

Token 24: '_' (ID: 62)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3344982862472534
    2. ')' → logprob: -1.7094982862472534
    3. 'n' → logprob: -2.084498405456543
    4. '
' → logprob: -2.334498405456543
    5. 'if' → logprob: -2.584498405456543
    6. 'N' → logprob: -2.834498405456543
    7. '```' → logprob: -3.084498405456543
    8. '\' → logprob: -3.584498405456543
    9. 'x' → logprob: -3.959498405456543
    10. 'a' → logprob: -4.209498405456543

Token 25: 'Am' (ID: 6275)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15647056698799133
    2. '=' → logprob: -2.281470537185669
    3. 'N' → logprob: -3.781470537185669
    4. 'M' → logprob: -5.406470775604248
    5. '_' → logprob: -5.656470775604248
    6. '.' → logprob: -5.781470775604248
    7. 'input' → logprob: -6.531470775604248
    8. ',' → logprob: -6.781470775604248
    9. ' ' → logprob: -6.906470775604248
    10. 'n' → logprob: -7.281470775604248

Token 26: 'nt' (ID: 578)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -1.414083480834961
    2. 'ap' → logprob: -1.664083480834961
    3. '_' → logprob: -1.789083480834961
    4. 'a' → logprob: -2.039083480834961
    5. 'ax' → logprob: -2.539083480834961
    6. 't' → logprob: -2.914083480834961
    7. ' =' → logprob: -3.914083480834961
    8. 'A' → logprob: -3.914083480834961
    9. '_list' → logprob: -3.914083480834961
    10. 's' → logprob: -4.289083480834961

Token 27: 'Of' (ID: 2566)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7773159742355347
    2. '_' → logprob: -1.5273159742355347
    3. '_of' → logprob: -3.152316093444824
    4. '_tuple' → logprob: -3.152316093444824
    5. 'a' → logprob: -3.277316093444824
    6. 'ount' → logprob: -3.402316093444824
    7. '_list' → logprob: -3.777316093444824
    8. '_s' → logprob: -3.777316093444824
    9. ' =' → logprob: -3.902316093444824
    10. '_counts' → logprob: -3.902316093444824

Token 28: 'Nodes' (ID: 16704)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.600722074508667
    2. '_numbers' → logprob: -2.225722074508667
    3. '_people' → logprob: -2.350722074508667
    4. '_elements' → logprob: -2.475722074508667
    5. '_lines' → logprob: -2.850722074508667
    6. '_items' → logprob: -2.850722074508667
    7. '_letters' → logprob: -3.475722074508667
    8. 'People' → logprob: -3.850722074508667
    9. '_players' → logprob: -3.850722074508667
    10. '_s' → logprob: -3.975722074508667

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3941452205181122
    2. '=' → logprob: -1.3941452503204346
    3. ',' → logprob: -2.7691452503204346
    4. '_' → logprob: -4.8941450119018555
    5. ')' → logprob: -5.6441450119018555
    6. 's' → logprob: -6.0191450119018555
    7. ' ' → logprob: -7.3941450119018555
    8. ' ,' → logprob: -8.394145011901855
    9. '_nodes' → logprob: -8.644145011901855
    10. '_=' → logprob: -10.019145011901855

Token 30: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014527094550430775
    2. '_N' → logprob: -4.764527320861816
    3. ' _' → logprob: -5.889527320861816
    4. '_M' → logprob: -6.639527320861816
    5. '<|end|>' → logprob: -7.139527320861816
    6. ' ' → logprob: -7.639527320861816
    7. 'N' → logprob: -9.014527320861816
    8. '<|end|>' → logprob: -9.264527320861816
    9. '_AM' → logprob: -9.764527320861816
    10. ' N' → logprob: -10.014527320861816

Token 31: 'Am' (ID: 6275)
  Prédit: 'Edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edges' → logprob: -0.44522392749786377
    2. 'M' → logprob: -2.070223808288574
    3. 'B' → logprob: -2.445223808288574
    4. '_edges' → logprob: -3.570223808288574
    5. 'Be' → logprob: -3.945223808288574
    6. 'Ed' → logprob: -4.320223808288574
    7. 'E' → logprob: -4.570223808288574
    8. 'Bm' → logprob: -4.695223808288574
    9. 'Max' → logprob: -5.070223808288574
    10. '_B' → logprob: -5.195223808288574

Token 32: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.18865792453289032
    2. 'Of' → logprob: -2.1886579990386963
    3. 'ount' → logprob: -3.5636579990386963
    4. 't' → logprob: -4.188657760620117
    5. 'Nodes' → logprob: -4.813657760620117
    6. 'nts' → logprob: -5.813657760620117
    7. '_nodes' → logprob: -6.313657760620117
    8. 'ot' → logprob: -6.688657760620117
    9. '_of' → logprob: -7.938657760620117
    10. 'of' → logprob: -8.688657760620117

Token 33: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.1019093245267868
    2. '_' → logprob: -3.2269093990325928
    3. '_nodes' → logprob: -3.6019093990325928
    4. '_of' → logprob: -4.476909160614014
    5. '_N' → logprob: -5.226909160614014
    6. ' =' → logprob: -5.351909160614014
    7. '=' → logprob: -5.476909160614014
    8. '_M' → logprob: -6.351909160614014
    9. 'Nodes' → logprob: -6.976909160614014
    10. '_OF' → logprob: -7.851909160614014

Token 34: 'Edges' (ID: 53698)
  Prédit: 'Edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edges' → logprob: -0.1729763150215149
    2. 'Nodes' → logprob: -2.04797625541687
    3. '_edges' → logprob: -5.297976493835449
    4. 'Neighbors' → logprob: -5.422976493835449
    5. '_nodes' → logprob: -5.797976493835449
    6. '_N' → logprob: -6.047976493835449
    7. 'Connections' → logprob: -6.172976493835449
    8. 'Links' → logprob: -6.422976493835449
    9. 'edges' → logprob: -6.672976493835449
    10. 'Vertices' → logprob: -6.672976493835449

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017424124525859952
    2. '=' → logprob: -6.376742362976074
    3. ' ' → logprob: -10.626742362976074
    4. ',' → logprob: -11.251742362976074
    5. ')' → logprob: -14.126742362976074
    6. ' ,' → logprob: -14.751742362976074
    7. '  ' → logprob: -14.876742362976074
    8. '_' → logprob: -15.376742362976074
    9. ' =
' → logprob: -15.376742362976074
    10. '<|end|>' → logprob: -15.376742362976074

Token 36: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4740789234638214
    2. ' N' → logprob: -0.974078893661499
    3. ' ' → logprob: -14.099079132080078
    4. '	N' → logprob: -14.599079132080078
    5. '_N' → logprob: -15.474079132080078
    6. '<N' → logprob: -16.099079132080078
    7. '=N' → logprob: -16.224079132080078
    8. '(N' → logprob: -16.599079132080078
    9. '  ' → logprob: -17.224079132080078
    10. '>N' → logprob: -17.349079132080078

Token 37: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -5.0259150157216936e-05
    2. '_' → logprob: -10.37505054473877
    3. ' _' → logprob: -11.75005054473877
    4. ')' → logprob: -12.50005054473877
    5. '```' → logprob: -13.37505054473877
    6. ')_' → logprob: -13.75005054473877
    7. '_N' → logprob: -14.12505054473877
    8. 'M' → logprob: -14.12505054473877
    9. '_T' → logprob: -14.62505054473877
    10. '_tuple' → logprob: -14.75005054473877

Token 38: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.016063109040260315
    2. '_M' → logprob: -4.266063213348389
    3. '_' → logprob: -6.766063213348389
    4. '_t' → logprob: -8.01606273651123
    5. '_T' → logprob: -9.01606273651123
    6. '```' → logprob: -9.51606273651123
    7. 'tuple' → logprob: -9.64106273651123
    8. ')' → logprob: -10.01606273651123
    9. ' _' → logprob: -10.51606273651123
    10. '_N' → logprob: -11.64106273651123

Token 39: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32411128282546997
    2. '
' → logprob: -1.5741112232208252
    3. '<|end|>' → logprob: -3.949111223220825
    4. '\' → logprob: -4.449111461639404
    5. 'newline' → logprob: -4.449111461639404
    6. '' → logprob: -4.574111461639404
    7. ' 
' → logprob: -5.699111461639404
    8. '```' → logprob: -6.199111461639404
    9. '#' → logprob: -6.324111461639404
    10. ')' → logprob: -6.449111461639404

Token 40: 'P' (ID: 47)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06992398202419281
    2. '\n' → logprob: -3.4449238777160645
    3. 'edges' → logprob: -3.9449238777160645
    4. 'graph' → logprob: -5.0699238777160645
    5. '\' → logprob: -6.4449238777160645
    6. 'nodes' → logprob: -6.5699238777160645
    7. '
' → logprob: -6.6949238777160645
    8. '' → logprob: -6.6949238777160645
    9. ' edges' → logprob: -7.3199238777160645
    10. '```' → logprob: -7.3199238777160645

Token 41: '_' (ID: 62)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4158408045768738
    2. ' =' → logprob: -1.9158408641815186
    3. '_' → logprob: -3.0408408641815186
    4. 'aths' → logprob: -3.9158408641815186
    5. 'ARENT' → logprob: -4.4158406257629395
    6. '=' → logprob: -4.4158406257629395
    7. 'ath' → logprob: -4.5408406257629395
    8. 'A' → logprob: -4.6658406257629395
    9. '_r' → logprob: -4.9158406257629395
    10. 'R' → logprob: -5.0408406257629395

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7070194482803345
    2. 'ar' → logprob: -1.0820194482803345
    3. '_edges' → logprob: -3.207019329071045
    4. '_nodes' → logprob: -3.832019329071045
    5. '_' → logprob: -4.207019329071045
    6. 'r' → logprob: -4.332019329071045
    7. 'edges' → logprob: -4.457019329071045
    8. 'nodes' → logprob: -4.707019329071045
    9. '=' → logprob: -4.957019329071045
    10. 'air' → logprob: -5.957019329071045

Token 43: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6405406594276428
    2. '[]' → logprob: -1.765540599822998
    3. 'list' → logprob: -1.765540599822998
    4. ' [' → logprob: -2.890540599822998
    5. ' list' → logprob: -3.390540599822998
    6. '[' → logprob: -3.890540599822998
    7. '[list' → logprob: -4.765540599822998
    8. '[int' → logprob: -5.140540599822998
    9. ' [[]' → logprob: -6.140540599822998
    10. ' {}' → logprob: -6.515540599822998

Token 44: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29849493503570557
    2. 'int' → logprob: -2.048494815826416
    3. '1' → logprob: -2.673494815826416
    4. '-' → logprob: -3.298494815826416
    5. 'False' → logprob: -4.673494815826416
    6. 'None' → logprob: -5.548494815826416
    7. 'True' → logprob: -5.673494815826416
    8. ']' → logprob: -5.798494815826416
    9. '[]' → logprob: -7.048494815826416
    10. '[int' → logprob: -7.423494815826416

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025924941524863243
    2. ' for' → logprob: -4.525925159454346
    3. ']*' → logprob: -4.775925159454346
    4. ']*(' → logprob: -5.525925159454346
    5. 'for' → logprob: -6.900925159454346
    6. '()]' → logprob: -7.900925159454346
    7. ',' → logprob: -8.275924682617188
    8. ' ]' → logprob: -8.275924682617188
    9. ']+' → logprob: -8.400924682617188
    10. '(' → logprob: -9.275924682617188

Token 46: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5806941986083984
    2. '*' → logprob: -1.2056941986083984
    3. ' (' → logprob: -3.0806941986083984
    4. ' *' → logprob: -3.2056941986083984
    5. '([' → logprob: -4.705694198608398
    6. '+' → logprob: -4.955694198608398
    7. '(N' → logprob: -4.955694198608398
    8. 'for' → logprob: -5.580694198608398
    9. '_' → logprob: -5.705694198608398
    10. '(None' → logprob: -5.705694198608398

Token 47: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16325141489505768
    2. '[list' → logprob: -1.9132513999938965
    3. '[input' → logprob: -6.6632513999938965
    4. '[N' → logprob: -7.4132513999938965
    5. 'list' → logprob: -7.9132513999938965
    6. '[List' → logprob: -8.413251876831055
    7. '[int' → logprob: -8.663251876831055
    8. ' [' → logprob: -9.163251876831055
    9. '[node' → logprob: -10.163251876831055
    10. '[len' → logprob: -10.288251876831055

Token 48: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007283596321940422
    2. '(' → logprob: -5.632283687591553
    3. '(range' → logprob: -5.632283687591553
    4. '(int' → logprob: -9.382283210754395
    5. '(input' → logprob: -11.882283210754395
    6. '()' → logprob: -13.132283210754395
    7. '((' → logprob: -14.257283210754395
    8. '(
' → logprob: -14.507283210754395
    9. '(tuple' → logprob: -15.132283210754395
    10. 'map' → logprob: -15.382283210754395

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003513125702738762
    2. '(' → logprob: -8.500350952148438
    3. 'int' → logprob: -9.000350952148438
    4. '(lambda' → logprob: -10.750350952148438
    5. '<int' → logprob: -14.000350952148438
    6. '[int' → logprob: -14.000350952148438
    7. '```' → logprob: -14.625350952148438
    8. '=int' → logprob: -15.750350952148438
    9. '(
' → logprob: -16.000350952148438
    10. ' int' → logprob: -16.000350952148438

Token 50: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06195424124598503
    2. ',input' → logprob: -2.9369542598724365
    3. ',' → logprob: -5.561954021453857
    4. '(' → logprob: -5.811954021453857
    5. '(sys' → logprob: -9.061954498291016
    6. 'input' → logprob: -10.061954498291016
    7. ' (' → logprob: -10.436954498291016
    8. ' input' → logprob: -11.311954498291016
    9. ')' → logprob: -12.436954498291016
    10. ' ,' → logprob: -12.561954498291016

Token 51: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20147687196731567
    2. 'input' → logprob: -1.701476812362671
    3. '(input' → logprob: -10.45147705078125
    4. ' sys' → logprob: -10.70147705078125
    5. ',input' → logprob: -12.45147705078125
    6. 'sys' → logprob: -12.82647705078125
    7. '	input' → logprob: -13.07647705078125
    8. ' ' → logprob: -13.45147705078125
    9. '=input' → logprob: -14.82647705078125
    10. '_input' → logprob: -15.07647705078125

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1054253011243418e-05
    2. '()' → logprob: -10.875020980834961
    3. '(' → logprob: -13.875020980834961
    4. ' ().' → logprob: -14.500020980834961
    5. '()))' → logprob: -15.375020980834961
    6. '.' → logprob: -15.875020980834961
    7. '(.' → logprob: -16.50002098083496
    8. '())' → logprob: -17.12502098083496
    9. ')' → logprob: -17.12502098083496
    10. ' .' → logprob: -18.00002098083496

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. ' split' → logprob: -13.37500286102295
    3. 'strip' → logprob: -14.37500286102295
    4. 'rstrip' → logprob: -16.000001907348633
    5. 'spl' → logprob: -16.500001907348633
    6. '(split' → logprob: -16.500001907348633
    7. 's' → logprob: -16.625001907348633
    8. 'read' → logprob: -18.125001907348633
    9. '.split' → logprob: -19.875001907348633
    10. '().' → logprob: -20.000001907348633

Token 54: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0768129974603653
    2. '())' → logprob: -2.826812982559204
    3. '()' → logprob: -4.326813220977783
    4. '(' → logprob: -7.076813220977783
    5. '))' → logprob: -7.576813220977783
    6. ')' → logprob: -10.201812744140625
    7. '()));' → logprob: -10.201812744140625
    8. '()))
' → logprob: -10.326812744140625
    9. '())))' → logprob: -10.951812744140625
    10. '(),' → logprob: -11.576812744140625

Token 55: 'Neighbor' (ID: 95702)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.890204668045044
    2. ')' → logprob: -1.765204668045044
    3. '<|end|>' → logprob: -1.765204668045044
    4. '
' → logprob: -2.265204668045044
    5. ' 
' → logprob: -2.890204668045044
    6. '[' → logprob: -3.890204668045044
    7. '  
' → logprob: -3.890204668045044
    8. ' ' → logprob: -4.140204429626465
    9. '```' → logprob: -5.140204429626465
    10. '\' → logprob: -5.265204429626465

Token 56: 'z' (ID: 89)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024000320117920637
    2. ' =' → logprob: -7.252399921417236
    3. '_' → logprob: -7.627399921417236
    4. 'List' → logprob: -8.002400398254395
    5. '_s' → logprob: -8.002400398254395
    6. '_list' → logprob: -8.502400398254395
    7. '=' → logprob: -9.377400398254395
    8. 'Lists' → logprob: -10.127400398254395
    9. 'list' → logprob: -10.252400398254395
    10. '_lists' → logprob: -10.502400398254395

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4928623139858246
    2. 's' → logprob: -0.992862343788147
    3. '=' → logprob: -3.9928622245788574
    4. '[' → logprob: -9.242862701416016
    5. '_' → logprob: -10.617862701416016
    6. ' ' → logprob: -11.242862701416016
    7. '_list' → logprob: -12.242862701416016
    8. '_s' → logprob: -12.367862701416016
    9. ' s' → logprob: -12.742862701416016
    10. '=[]' → logprob: -12.867862701416016

Token 58: ' [[]' (ID: 182908)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3977990448474884
    2. '[' → logprob: -1.147799015045166
    3. '(' → logprob: -5.272799015045166
    4. '([]' → logprob: -5.397799015045166
    5. ' [[]' → logprob: -7.147799015045166
    6. '(lambda' → logprob: -8.022799491882324
    7. '({' → logprob: -10.147799491882324
    8. '[]' → logprob: -10.397799491882324
    9. '(default' → logprob: -12.147799491882324
    10. '([[' → logprob: -12.397799491882324

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3518851101398468
    2. ')' → logprob: -1.9768850803375244
    3. '(' → logprob: -2.2268850803375244
    4. ' for' → logprob: -3.7268850803375244
    5. '(N' → logprob: -4.2268853187561035
    6. '()' → logprob: -4.8518853187561035
    7. ']' → logprob: -6.1018853187561035
    8. ',' → logprob: -7.6018853187561035
    9. '(range' → logprob: -7.9768853187561035
    10. '(P' → logprob: -8.476884841918945

Token 60: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041600409895181656
    2. ' range' → logprob: -3.416600465774536
    3. 'range' → logprob: -4.916600227355957
    4. '(range' → logprob: -8.291600227355957
    5. ' _' → logprob: -8.416600227355957
    6. '_range' → logprob: -9.166600227355957
    7. ' ' → logprob: -11.541600227355957
    8. '(' → logprob: -12.166600227355957
    9. '	range' → logprob: -12.916600227355957
    10. '0' → logprob: -13.541600227355957

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5761480331420898
    2. 'in' → logprob: -0.8261480331420898
    3. '_' → logprob: -8.70114803314209
    4. ' ' → logprob: -10.45114803314209
    5. 'range' → logprob: -11.95114803314209
    6. 'i' → logprob: -12.70114803314209
    7. 'x' → logprob: -13.57614803314209
    8. '0' → logprob: -14.20114803314209
    9. '(' → logprob: -14.57614803314209
    10. ' _' → logprob: -15.20114803314209

Token 62: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059469291009008884
    2. ' range' → logprob: -5.130947113037109
    3. 'P' → logprob: -12.50594711303711
    4. '(range' → logprob: -12.63094711303711
    5. ' ' → logprob: -12.75594711303711
    6. '_' → logprob: -13.13094711303711
    7. 'rang' → logprob: -13.25594711303711
    8. 'ran' → logprob: -13.75594711303711
    9. 'r' → logprob: -14.00594711303711
    10. '  ' → logprob: -14.25594711303711

Token 63: 'a' (ID: 64)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13053403794765472
    2. '_' → logprob: -2.5055339336395264
    3. ' range' → logprob: -3.3805339336395264
    4. '0' → logprob: -6.2555341720581055
    5. '[' → logprob: -6.5055341720581055
    6. ''' → logprob: -7.3805341720581055
    7. 'r' → logprob: -7.5055341720581055
    8. ' ' → logprob: -8.005534172058105
    9. 'P' → logprob: -8.505534172058105
    10. '_range' → logprob: -8.630534172058105

Token 64: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2955654263496399
    2. '_' → logprob: -2.045565366744995
    3. ''*' → logprob: -2.920565366744995
    4. 'a' → logprob: -3.670565366744995
    5. 'r' → logprob: -3.920565366744995
    6. '_'' → logprob: -4.420565605163574
    7. 'range' → logprob: -5.170565605163574
    8. ' '' → logprob: -5.795565605163574
    9. '_r' → logprob: -6.420565605163574
    10. ''r' → logprob: -6.795565605163574

Token 65: ' *' (ID: 425)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3551664352416992
    2. '_' → logprob: -1.7301664352416992
    3. ' range' → logprob: -2.480166435241699
    4. 'ra' → logprob: -4.605166435241699
    5. 'a' → logprob: -4.855166435241699
    6. ''' → logprob: -5.355166435241699
    7. '_range' → logprob: -5.355166435241699
    8. 'b' → logprob: -6.605166435241699
    9. ''*' → logprob: -6.605166435241699
    10. 'A' → logprob: -6.730166435241699

Token 66: ' (_' (ID: 11350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011775348335504532
    2. '(_' → logprob: -4.636775493621826
    3. '_N' → logprob: -6.386775493621826
    4. '(' → logprob: -9.511775016784668
    5. ' (_' → logprob: -9.761775016784668
    6. '_AM' → logprob: -9.761775016784668
    7. '_A' → logprob: -10.011775016784668
    8. ' _' → logprob: -10.511775016784668
    9. '_am' → logprob: -10.761775016784668
    10. '_n' → logprob: -10.886775016784668

Token 67: 'Am' (ID: 6275)
  Prédit: 'Am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Am' → logprob: -4.656383680412546e-05
    2. '_' → logprob: -10.250046730041504
    3. ' Am' → logprob: -12.250046730041504
    4. '(' → logprob: -12.875046730041504
    5. ' ' → logprob: -13.875046730041504
    6. ''Am' → logprob: -15.000046730041504
    7. 'm' → logprob: -15.125046730041504
    8. '  ' → logprob: -15.250046730041504
    9. '```' → logprob: -15.250046730041504
    10. 'am' → logprob: -15.500046730041504

Token 68: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.000563042180147022
    2. 'Of' → logprob: -7.500563144683838
    3. '_' → logprob: -12.75056266784668
    4. 'Am' → logprob: -13.12556266784668
    5. 'Nt' → logprob: -13.87556266784668
    6. 'ount' → logprob: -14.50056266784668
    7. 'Ont' → logprob: -14.75056266784668
    8. 't' → logprob: -14.87556266784668
    9. 'Ant' → logprob: -14.87556266784668
    10. 'nd' → logprob: -15.00056266784668

Token 69: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.00038336371653713286
    2. 'Nodes' → logprob: -8.125383377075195
    3. 'Edges' → logprob: -9.875383377075195
    4. 'of' → logprob: -11.250383377075195
    5. 'O' → logprob: -11.875383377075195
    6. 'OF' → logprob: -12.125383377075195
    7. '_' → logprob: -13.750383377075195
    8. '```' → logprob: -14.000383377075195
    9. ' Of' → logprob: -14.125383377075195
    10. '_of' → logprob: -14.250383377075195

Token 70: 'Nodes' (ID: 16704)
  Prédit: 'Nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nodes' → logprob: -0.05498214438557625
    2. 'Edges' → logprob: -2.9299821853637695
    3. '_nodes' → logprob: -9.92998218536377
    4. 'N' → logprob: -11.05498218536377
    5. '_N' → logprob: -11.05498218536377
    6. 'nodes' → logprob: -12.42998218536377
    7. 'Vertices' → logprob: -12.92998218536377
    8. '_edges' → logprob: -12.92998218536377
    9. ' Nodes' → logprob: -13.05498218536377
    10. '.Nodes' → logprob: -13.42998218536377

Token 71: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00859412644058466
    2. '+' → logprob: -5.008594036102295
    3. ')' → logprob: -6.883594036102295
    4. ' )' → logprob: -7.133594036102295
    5. ' +' → logprob: -10.633594512939453
    6. ')]
' → logprob: -11.883594512939453
    7. '')]' → logprob: -12.008594512939453
    8. ')])' → logprob: -12.633594512939453
    9. ')]

' → logprob: -12.758594512939453
    10. ']' → logprob: -13.008594512939453

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00601992616429925
    2. ' ' → logprob: -5.1310200691223145
    3. '_' → logprob: -9.381019592285156
    4. '  ' → logprob: -13.006019592285156
    5. ' _' → logprob: -13.131019592285156
    6. '   ' → logprob: -14.381019592285156
    7. '2' → logprob: -14.506019592285156
    8. '+' → logprob: -14.631019592285156
    9. '(' → logprob: -15.006019592285156
    10. '```' → logprob: -15.256019592285156

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013572083844337612
    2. ' ' → logprob: -9.00013542175293
    3. '2' → logprob: -11.37513542175293
    4. '   ' → logprob: -15.50013542175293
    5. '  ' → logprob: -15.75013542175293
    6. '0' → logprob: -16.25013542175293
    7. '3' → logprob: -16.37513542175293
    8. '7' → logprob: -17.06263542175293
    9. '```' → logprob: -17.12513542175293
    10. '１' → logprob: -17.50013542175293

Token 74: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.3782830137643032e-05
    2. ')' → logprob: -11.62501335144043
    3. ')]
' → logprob: -13.37501335144043
    4. ']' → logprob: -13.87501335144043
    5. ' )' → logprob: -14.12501335144043
    6. '')]' → logprob: -14.50001335144043
    7. ')]

' → logprob: -14.62501335144043
    8. ')])' → logprob: -15.50001335144043
    9. ')],' → logprob: -15.75001335144043
    10. ')]
' → logprob: -16.12501335144043

Token 75: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28942030668258667
    2. '<|end|>' → logprob: -1.5394203662872314
    3. '_' → logprob: -3.9144203662872314
    4. ')' → logprob: -4.664420127868652
    5. ' for' → logprob: -5.789420127868652
    6. '<|end|>' → logprob: -6.414420127868652
    7. '```' → logprob: -7.039420127868652
    8. '
' → logprob: -7.414420127868652
    9. '.' → logprob: -8.039420127868652
    10. '#' → logprob: -8.789420127868652

Token 76: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.011756033636629581
    2. ' i' → logprob: -4.51175594329834
    3. '_' → logprob: -7.63675594329834
    4. ' ' → logprob: -8.51175594329834
    5. '_i' → logprob: -11.38675594329834
    6. 'i' → logprob: -12.38675594329834
    7. ' __' → logprob: -13.38675594329834
    8. '  ' → logprob: -13.76175594329834
    9. ' ___' → logprob: -13.76175594329834
    10. ' a' → logprob: -13.88675594329834

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1721091866493225
    2. ' _' → logprob: -2.2971091270446777
    3. ' i' → logprob: -3.5471091270446777
    4. ' ' → logprob: -3.9221091270446777
    5. '_' → logprob: -4.797109127044678
    6. 'i' → logprob: -8.297109603881836
    7. 'in' → logprob: -8.547109603881836
    8. ' n' → logprob: -9.547109603881836
    9. '  ' → logprob: -9.672109603881836
    10. '_i' → logprob: -10.547109603881836

Token 78: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133905827999115
    2. 'range' → logprob: -1.3133906126022339
    3. '_' → logprob: -9.813390731811523
    4. ' ' → logprob: -10.313390731811523
    5. '	range' → logprob: -11.938390731811523
    6. ' ran' → logprob: -12.063390731811523
    7. 'r' → logprob: -12.063390731811523
    8. ' ra' → logprob: -12.188390731811523
    9. 'rang' → logprob: -12.688390731811523
    10. ' _' → logprob: -12.938390731811523

Token 79: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -4.1080467781284824e-05
    2. '(' → logprob: -10.375041007995605
    3. '_' → logprob: -12.000041007995605
    4. ' (_' → logprob: -13.375041007995605
    5. '_AM' → logprob: -13.875041007995605
    6. ' _' → logprob: -14.125041007995605
    7. '_A' → logprob: -15.125041007995605
    8. '((_' → logprob: -16.250041961669922
    9. ' (' → logprob: -17.875041961669922
    10. ' ' → logprob: -18.625041961669922

Token 80: 'Am' (ID: 6275)
  Prédit: 'Am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Am' → logprob: -0.01259547658264637
    2. '_' → logprob: -4.3875956535339355
    3. ' ' → logprob: -10.262595176696777
    4. ' Am' → logprob: -10.512595176696777
    5. ' _' → logprob: -11.012595176696777
    6. '_A' → logprob: -13.887595176696777
    7. '  ' → logprob: -14.012595176696777
    8. '1' → logprob: -14.512595176696777
    9. '```' → logprob: -14.762595176696777
    10. '	' → logprob: -14.887595176696777

Token 81: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.0001468067930545658
    2. 'Of' → logprob: -10.000146865844727
    3. 'ount' → logprob: -10.125146865844727
    4. 't' → logprob: -10.875146865844727
    5. '_' → logprob: -11.625146865844727
    6. 'ont' → logprob: -11.750146865844727
    7. '_of' → logprob: -12.000146865844727
    8. '_M' → logprob: -12.125146865844727
    9. '_nt' → logprob: -12.375146865844727
    10. 'ot' → logprob: -13.125146865844727

Token 82: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.00040898515726439655
    2. 'Edges' → logprob: -8.000409126281738
    3. '_' → logprob: -9.625409126281738
    4. '_O' → logprob: -13.375409126281738
    5. '_of' → logprob: -13.500409126281738
    6. '_edges' → logprob: -13.875409126281738
    7. 'of' → logprob: -14.125409126281738
    8. 'f' → logprob: -14.500409126281738
    9. '_OF' → logprob: -14.625409126281738
    10. 't' → logprob: -15.000409126281738

Token 83: 'Edges' (ID: 53698)
  Prédit: 'Edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edges' → logprob: -0.0009286141721531749
    2. 'Nodes' → logprob: -7.3759284019470215
    3. '_edges' → logprob: -8.25092887878418
    4. '_E' → logprob: -11.00092887878418
    5. 'Ed' → logprob: -11.62592887878418
    6. ' ' → logprob: -12.50092887878418
    7. '_N' → logprob: -12.50092887878418
    8. 'Es' → logprob: -13.75092887878418
    9. 'edges' → logprob: -13.87592887878418
    10. 's' → logprob: -14.12592887878418

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000726252153981477
    2. ' ):' → logprob: -8.000726699829102
    3. ')' → logprob: -8.250726699829102
    4. ':' → logprob: -9.250726699829102
    5. '):
' → logprob: -10.375726699829102
    6. '():' → logprob: -14.125726699829102
    7. ' )' → logprob: -14.500726699829102
    8. ']:' → logprob: -15.125726699829102
    9. ' :' → logprob: -15.500726699829102
    10. '}:' → logprob: -15.875726699829102

Token 85: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.7040371894836426
    2. ' ' → logprob: -1.3290371894836426
    3. ' a' → logprob: -2.3290371894836426
    4. ' n' → logprob: -3.2040371894836426
    5. ' 
' → logprob: -3.9540371894836426
    6. ' node' → logprob: -4.204037189483643
    7. ' s' → logprob: -4.329037189483643
    8. ' x' → logprob: -4.954037189483643
    9. 'n' → logprob: -5.204037189483643
    10. ' A' → logprob: -5.204037189483643

Token 86: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4353398382663727
    2. 'a' (adapté à ' a') → logprob: -1.3103398084640503
    3. ' u' → logprob: -2.81033992767334
    4. ' a' → logprob: -4.68533992767334
    5. 'A' → logprob: -4.81033992767334
    6. 'x' → logprob: -6.93533992767334
    7. 'v' → logprob: -7.06033992767334
    8. 'U' → logprob: -7.31033992767334
    9. '   ' → logprob: -7.56033992767334
    10. 's' → logprob: -7.56033992767334

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040076421573758125
    2. ',b' → logprob: -5.879007816314697
    3. ' ,' → logprob: -6.754007816314697
    4. 'b' → logprob: -10.379007339477539
    5. ' b' → logprob: -13.379007339477539
    6. ',n' → logprob: -14.254007339477539
    7. ',v' → logprob: -14.504007339477539
    8. ',B' → logprob: -15.129007339477539
    9. ' ' → logprob: -15.254007339477539
    10. '_,' → logprob: -15.504007339477539

Token 88: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.57607102394104
    2. 'b' → logprob: -0.82607102394104
    3. ' ' → logprob: -8.951070785522461
    4. '<|end|>' → logprob: -13.951070785522461
    5. 'space' → logprob: -15.076070785522461
    6. '_' → logprob: -15.201070785522461
    7. '_b' → logprob: -15.951070785522461
    8. 'c' → logprob: -16.57607078552246
    9. '  ' → logprob: -16.82607078552246
    10. 'd' → logprob: -16.82607078552246

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759466886520386
    2. ' =' → logprob: -0.8259466886520386
    3. ',' → logprob: -12.200946807861328
    4. ')' → logprob: -14.575946807861328
    5. ' ' → logprob: -14.825946807861328
    6. '=input' → logprob: -14.825946807861328
    7. '=line' → logprob: -15.325946807861328
    8. '=int' → logprob: -15.950946807861328
    9. ' =)' → logprob: -16.200946807861328
    10. '＝' → logprob: -16.325946807861328

Token 90: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00042412037146277726
    2. 'map' → logprob: -8.0004243850708
    3. ' list' → logprob: -10.1254243850708
    4. ' input' → logprob: -10.6254243850708
    5. ' ' → logprob: -11.5004243850708
    6. ' tuple' → logprob: -11.5004243850708
    7. '	map' → logprob: -13.2504243850708
    8. ' mapa' → logprob: -13.5004243850708
    9. ' ' → logprob: -15.6254243850708
    10. ' int' → logprob: -15.7504243850708

Token 91: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -9.375091552734375
    3. 'int' → logprob: -13.125091552734375
    4. '<int' → logprob: -13.125091552734375
    5. '[int' → logprob: -13.625091552734375
    6. '=int' → logprob: -14.000091552734375
    7. ' (' → logprob: -15.000091552734375
    8. '(input' → logprob: -15.750091552734375
    9. ',int' → logprob: -16.750091552734375
    10. '```' → logprob: -17.000091552734375

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3175162672996521
    2. ',input' → logprob: -1.9425163269042969
    3. '(input' → logprob: -2.067516326904297
    4. '(' → logprob: -6.317516326904297
    5. ' ,' → logprob: -8.692516326904297
    6. 'input' → logprob: -8.817516326904297
    7. ' input' → logprob: -10.567516326904297
    8. '(),' → logprob: -10.817516326904297
    9. ')' → logprob: -11.317516326904297
    10. '=input' → logprob: -11.567516326904297

Token 93: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31326231360435486
    2. 'input' → logprob: -1.3132623434066772
    3. '(input' → logprob: -15.813261985778809
    4. ' ' → logprob: -15.938261985778809
    5. ')' → logprob: -16.188262939453125
    6. '=input' → logprob: -16.313262939453125
    7. '	input' → logprob: -16.813262939453125
    8. ',input' → logprob: -17.688262939453125
    9. '<input' → logprob: -18.688262939453125
    10. 'sys' → logprob: -18.688262939453125

Token 94: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2233183042553719e-05
    2. '()' → logprob: -11.375012397766113
    3. '.' → logprob: -14.750012397766113
    4. ' ().' → logprob: -15.250012397766113
    5. '(' → logprob: -17.500011444091797
    6. '().__' → logprob: -19.125011444091797
    7. '()
' → logprob: -19.125011444091797
    8. ')' → logprob: -19.250011444091797
    9. '```' → logprob: -19.250011444091797
    10. '('').' → logprob: -20.000011444091797

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.875000953674316
    3. 'spl' → logprob: -16.5
    4. '(split' → logprob: -16.75
    5. 'strip' → logprob: -16.875
    6. ')' → logprob: -17.375
    7. '```' → logprob: -18.625
    8. 'rstrip' → logprob: -19.0
    9. ' ' → logprob: -19.125
    10. '.split' → logprob: -19.25

Token 96: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10536979883909225
    2. ')' → logprob: -2.355369806289673
    3. '()' → logprob: -5.480369567871094
    4. '())
' → logprob: -6.980369567871094
    5. ')
' → logprob: -10.605369567871094
    6. '()
' → logprob: -11.605369567871094
    7. '))' → logprob: -12.230369567871094
    8. '());' → logprob: -12.980369567871094
    9. '())
' → logprob: -13.105369567871094
    10. ' ())' → logprob: -13.480369567871094

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027326583862304688
    2. '
' → logprob: -4.652326583862305
    3. '<|end|>' → logprob: -4.777326583862305
    4. '    
' → logprob: -5.277326583862305
    5. ')' → logprob: -6.902326583862305
    6. '  
' → logprob: -7.402326583862305
    7. ' ' → logprob: -7.652326583862305
    8. ' 
' → logprob: -7.777326583862305
    9. '  ' → logprob: -8.402326583862305
    10. ' Neighbor' → logprob: -8.527326583862305

Token 98: ' Neighbor' (ID: 177795)
  Prédit: 'Neighbor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Neighbor' (adapté à ' Neighbor') → logprob: -0.6626652479171753
    2. '   ' → logprob: -0.9126652479171753
    3. ' Neighbor' → logprob: -2.537665367126465
    4. '
' → logprob: -5.912665367126465
    5. '    
' → logprob: -8.037665367126465
    6. '```' → logprob: -8.162665367126465
    7. ' 
' → logprob: -8.787665367126465
    8. ' ' → logprob: -9.162665367126465
    9. '_neighbor' → logprob: -9.537665367126465
    10. '  ' → logprob: -9.912665367126465

Token 99: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.15310683415737e-05
    2. '[z' → logprob: -11.125021934509277
    3. 's' → logprob: -12.000021934509277
    4. 'sz' → logprob: -14.875021934509277
    5. 'zs' → logprob: -16.00002098083496
    6. '_z' → logprob: -17.62502098083496
    7. '[' → logprob: -18.00002098083496
    8. ''z' → logprob: -18.25002098083496
    9. '[a' → logprob: -18.50002098083496
    10. 'з' → logprob: -18.75002098083496

Token 100: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.625005722045898
    3. '[b' → logprob: -13.000005722045898
    4. 'a' → logprob: -16.6250057220459
    5. '```' → logprob: -18.0000057220459
    6. ' [' → logprob: -18.8750057220459
    7. '   ' → logprob: -19.8750057220459
    8. '[A' → logprob: -21.0000057220459
    9. '[s' → logprob: -21.5000057220459
    10. '[i' → logprob: -22.0000057220459

Token 101: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.011997058056294918
    2. '.append' → logprob: -4.761997222900391
    3. ').' → logprob: -5.761997222900391
    4. ']' → logprob: -9.01199722290039
    5. '.' → logprob: -9.26199722290039
    6. ' ].' → logprob: -11.88699722290039
    7. ')' → logprob: -12.13699722290039
    8. '   ' → logprob: -14.38699722290039
    9. '.Append' → logprob: -14.38699722290039
    10. '}.' → logprob: -14.76199722290039

Token 102: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.25
    3. '.append' → logprob: -17.5
    4. 'appen' → logprob: -17.875
    5. 'app' → logprob: -21.25
    6. '_append' → logprob: -21.625
    7. '	append' → logprob: -22.0
    8. 'Append' → logprob: -22.0
    9. 'appe' → logprob: -23.125
    10. 'ap' → logprob: -24.125

Token 103: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.7432603272027336e-06
    2. 'b' → logprob: -13.500001907348633
    3. '(' → logprob: -15.000001907348633
    4. '(
' → logprob: -18.625001907348633
    5. ' (' → logprob: -20.625001907348633
    6. ' b' → logprob: -20.750001907348633
    7. '	b' → logprob: -21.125001907348633
    8. ')b' → logprob: -21.875001907348633
    9. '(B' → logprob: -23.125001907348633
    10. '(
' → logprob: -24.250001907348633

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.347765181795694e-05
    2. ')
' → logprob: -10.000053405761719
    3. ' )' → logprob: -11.750053405761719
    4. '   ' → logprob: -17.00005340576172
    5. '),' → logprob: -17.62505340576172
    6. ')

' → logprob: -17.75005340576172
    7. '<|end|>' → logprob: -18.12505340576172
    8. ')a' → logprob: -18.50005340576172
    9. ')#' → logprob: -18.62505340576172
    10. ')
' → logprob: -18.62505340576172

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000972921319771558
    2. '<|end|>' → logprob: -7.000972747802734
    3. '    
' → logprob: -10.125972747802734
    4. ' ' → logprob: -12.500972747802734
    5. '<|end|>' → logprob: -12.625972747802734
    6. ')' → logprob: -12.750972747802734
    7. ',' → logprob: -12.750972747802734
    8. '  ' → logprob: -13.000972747802734
    9. '```' → logprob: -13.500972747802734
    10. '  
' → logprob: -14.000972747802734

Token 106: ' Neighbor' (ID: 177795)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17991462349891663
    2. 'Neighbor' (adapté à ' Neighbor') → logprob: -1.8049145936965942
    3. ' Neighbor' → logprob: -8.804914474487305
    4. 'Neighborhood' → logprob: -12.554914474487305
    5. '   ' → logprob: -13.054914474487305
    6. '  ' → logprob: -13.054914474487305
    7. '_neighbor' → logprob: -13.054914474487305
    8. ' ' → logprob: -13.304914474487305
    9. '    ' → logprob: -13.679914474487305
    10. '	' → logprob: -13.929914474487305

Token 107: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.816093228830141e-06
    2. '[z' → logprob: -13.75000286102295
    3. 's' → logprob: -14.00000286102295
    4. '_z' → logprob: -14.62500286102295
    5. 'з' → logprob: -15.87500286102295
    6. ''z' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. '_' → logprob: -17.000001907348633
    9. 'b' → logprob: -17.125001907348633
    10. 'zs' → logprob: -17.250001907348633

Token 108: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00010878815373871475
    2. '[a' → logprob: -9.62510871887207
    3. '[' → logprob: -10.12510871887207
    4. 'b' → logprob: -13.00010871887207
    5. '```' → logprob: -16.12510871887207
    6. '[s' → logprob: -16.25010871887207
    7. '[B' → logprob: -17.50010871887207
    8. '[c' → logprob: -18.12510871887207
    9. ' [' → logprob: -18.12510871887207
    10. '[
' → logprob: -18.25010871887207

Token 109: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.10468904674053192
    2. '].' → logprob: -2.354689121246338
    3. ')' → logprob: -6.104689121246338
    4. '.' → logprob: -6.604689121246338
    5. '.append' → logprob: -7.104689121246338
    6. ']' → logprob: -10.60468864440918
    7. '   ' → logprob: -11.22968864440918
    8. ' ).' → logprob: -12.22968864440918
    9. ' ].' → logprob: -12.47968864440918
    10. '}.' → logprob: -12.47968864440918

Token 110: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. 'appen' → logprob: -14.125000953674316
    3. ' append' → logprob: -16.375
    4. '	append' → logprob: -17.25
    5. '.append' → logprob: -17.875
    6. 'app' → logprob: -19.625
    7. '```' → logprob: -20.125
    8. 'prepend' → logprob: -20.375
    9. 'add' → logprob: -20.75
    10. 'Append' → logprob: -20.75

Token 111: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. 'a' → logprob: -15.625003814697266
    4. '(
' → logprob: -15.750003814697266
    5. '(A' → logprob: -21.375003814697266
    6. '(an' → logprob: -22.250003814697266
    7. ' (' → logprob: -22.625003814697266
    8. '(

' → logprob: -22.625003814697266
    9. '   ' → logprob: -22.750003814697266
    10. '```' → logprob: -22.875003814697266

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.125008583068848
    4. ')

' → logprob: -17.12500762939453
    5. ')return' → logprob: -17.75000762939453
    6. '))' → logprob: -18.37500762939453
    7. ')n' → logprob: -18.87500762939453
    8. ')`' → logprob: -19.12500762939453
    9. '```' → logprob: -19.12500762939453
    10. '),' → logprob: -19.25000762939453

Token 113: '_U' (ID: 13856)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.043755412101745605
    2. 'def' → logprob: -3.543755531311035
    3. 'v' → logprob: -5.793755531311035
    4. 'dist' → logprob: -6.293755531311035
    5. 'used' → logprob: -6.918755531311035
    6. 'dp' → logprob: -6.918755531311035
    7. 'stack' → logprob: -7.043755531311035
    8. 'color' → logprob: -7.168755531311035
    9. 'vis' → logprob: -7.293755531311035
    10. 'd' → logprob: -7.543755531311035

Token 114: 'F' (ID: 37)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.3646513223648071
    2. 'n' → logprob: -1.4896513223648071
    3. 'P' → logprob: -2.1146512031555176
    4. 'sed' → logprob: -2.3646512031555176
    5. 'Visited' → logprob: -2.4896512031555176
    6. 'se' → logprob: -3.1146512031555176
    7. 's' → logprob: -3.4896512031555176
    8. 'SED' → logprob: -3.8646512031555176
    9. 'V' → logprob: -4.239651203155518
    10. 'sers' → logprob: -4.239651203155518

Token 115: 'ro' (ID: 298)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -1.1487349271774292
    2. ' =' → logprob: -1.2737349271774292
    3. 'P' → logprob: -1.6487349271774292
    4. 'F' → logprob: -2.8987350463867188
    5. '_' → logprob: -3.1487350463867188
    6. 'parent' → logprob: -3.5237350463867188
    7. 'Parent' → logprob: -3.6487350463867188
    8. 'Parents' → logprob: -4.523735046386719
    9. '_par' → logprob: -4.773735046386719
    10. '=' → logprob: -5.023735046386719

Token 116: ' =' (ID: 314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1769822835922241
    2. 'm' → logprob: -1.8019822835922241
    3. 'p' → logprob: -2.1769824028015137
    4. 'n' → logprob: -2.1769824028015137
    5. 'Visited' → logprob: -3.0519824028015137
    6. 'ot' → logprob: -3.3019824028015137
    7. ' =' → logprob: -3.3019824028015137
    8. '=' → logprob: -4.051982402801514
    9. 't' → logprob: -4.051982402801514
    10. 's' → logprob: -4.426982402801514

Token 117: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10371382534503937
    2. '[P' → logprob: -2.6037137508392334
    3. '[]' → logprob: -4.6037139892578125
    4. '[-' → logprob: -4.8537139892578125
    5. '{}' → logprob: -5.9787139892578125
    6. 'P' → logprob: -6.2287139892578125
    7. ' [' → logprob: -7.8537139892578125
    8. '[_' → logprob: -7.8537139892578125
    9. 'set' → logprob: -7.8537139892578125
    10. '[int' → logprob: -8.353713989257812

Token 118: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20936280488967896
    2. '-' → logprob: -1.7093627452850342
    3. '0' → logprob: -5.834362983703613
    4. 'False' → logprob: -5.959362983703613
    5. 'None' → logprob: -7.334362983703613
    6. '_' → logprob: -7.459362983703613
    7. '-i' → logprob: -7.959362983703613
    8. 'x' → logprob: -8.709362983703613
    9. '_i' → logprob: -8.959362983703613
    10. ' i' → logprob: -8.959362983703613

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741162061691284
    2. 'for' → logprob: -0.9741162061691284
    3. ']' → logprob: -11.224116325378418
    4. ' ' → logprob: -11.849116325378418
    5. ')' → logprob: -11.974116325378418
    6. 'in' → logprob: -12.474116325378418
    7. '	for' → logprob: -12.849116325378418
    8. ' in' → logprob: -13.474116325378418
    9. 'or' → logprob: -14.349116325378418
    10. '
' → logprob: -14.349116325378418

Token 120: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859134554862976
    2. 'range' → logprob: -3.048591375350952
    3. '(range' → logprob: -12.673591613769531
    4. ' ' → logprob: -14.798591613769531
    5. '	range' → logprob: -15.798591613769531
    6. '_range' → logprob: -16.29859161376953
    7. ' in' → logprob: -17.17359161376953
    8. ' i' → logprob: -17.29859161376953
    9. '  ' → logprob: -18.04859161376953
    10. 'i' → logprob: -18.92359161376953

Token 121: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3482428193092346
    2. ' range' → logprob: -1.3482427597045898
    3. ' in' → logprob: -3.72324275970459
    4. 'in' → logprob: -4.59824275970459
    5. '(range' → logprob: -9.09824275970459
    6. ' ' → logprob: -10.97324275970459
    7. 'i' → logprob: -12.09824275970459
    8. '  ' → logprob: -12.22324275970459
    9. '_range' → logprob: -12.72324275970459
    10. '	range' → logprob: -12.84824275970459

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -15.77975082397461
    4. '	range' → logprob: -17.77975082397461
    5. ' ' → logprob: -19.65475082397461
    6. '_range' → logprob: -20.77975082397461
    7. '  ' → logprob: -21.90475082397461
    8. '   ' → logprob: -22.40475082397461
    9. '_' → logprob: -22.52975082397461
    10. 'r' → logprob: -22.65475082397461

Token 123: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.006510728970170021
    2. '_' → logprob: -5.2565107345581055
    3. ' (_' → logprob: -6.7565107345581055
    4. '(' → logprob: -9.881510734558105
    5. ' _' → logprob: -10.756510734558105
    6. '_AM' → logprob: -10.756510734558105
    7. '_A' → logprob: -12.006510734558105
    8. '((_' → logprob: -12.006510734558105
    9. '(len' → logprob: -13.256510734558105
    10. '_am' → logprob: -13.756510734558105

Token 124: 'Am' (ID: 6275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008229722734540701
    2. '(_' → logprob: -7.250823020935059
    3. ' _' → logprob: -9.875823020935059
    4. '(' → logprob: -10.750823020935059
    5. ' (_' → logprob: -11.000823020935059
    6. ' ' → logprob: -11.375823020935059
    7. '   ' → logprob: -12.500823020935059
    8. '  ' → logprob: -13.000823020935059
    9. '_N' → logprob: -13.375823020935059
    10. '_AM' → logprob: -14.250823020935059

Token 125: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -9.610702363715973e-06
    2. 't' → logprob: -12.000009536743164
    3. 'ount' → logprob: -13.500009536743164
    4. 'Of' → logprob: -14.250009536743164
    5. '_nt' → logprob: -14.250009536743164
    6. 'unt' → logprob: -15.125009536743164
    7. 'nts' → logprob: -16.375009536743164
    8. '_' → logprob: -16.375009536743164
    9. '_t' → logprob: -16.500009536743164
    10. 'mt' → logprob: -17.000009536743164

Token 126: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.00020330198458395898
    2. 'f' → logprob: -9.125203132629395
    3. 'Nodes' → logprob: -10.375203132629395
    4. '_' → logprob: -10.750203132629395
    5. '_of' → logprob: -11.000203132629395
    6. 'of' → logprob: -11.000203132629395
    7. '_OF' → logprob: -13.750203132629395
    8. 'F' → logprob: -13.875203132629395
    9. '+' → logprob: -14.000203132629395
    10. '_O' → logprob: -14.250203132629395

Token 127: 'Nodes' (ID: 16704)
  Prédit: 'Nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nodes' → logprob: -0.006042439490556717
    2. '_N' → logprob: -5.75604248046875
    3. 'odes' → logprob: -6.50604248046875
    4. '_nodes' → logprob: -7.00604248046875
    5. '(_' → logprob: -8.13104248046875
    6. 'Of' → logprob: -9.50604248046875
    7. 'Edges' → logprob: -10.75604248046875
    8. '(N' → logprob: -11.13104248046875
    9. 'ODES' → logprob: -11.75604248046875
    10. ' ' → logprob: -11.75604248046875

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.575941264629364
    2. ' +' → logprob: -0.825941264629364
    3. ' ' → logprob: -13.70094108581543
    4. '+
' → logprob: -15.20094108581543
    5. '   ' → logprob: -15.82594108581543
    6. ' +
' → logprob: -16.07594108581543
    7. '＋' → logprob: -16.45094108581543
    8. '  ' → logprob: -17.32594108581543
    9. '1' → logprob: -17.57594108581543
    10. '()+' → logprob: -17.95094108581543

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015332948416471481
    2. '+' → logprob: -4.76533317565918
    3. ' ' → logprob: -5.01533317565918
    4. ' +' → logprob: -10.51533317565918
    5. '2' → logprob: -11.26533317565918
    6. '_' → logprob: -11.39033317565918
    7. '(' → logprob: -13.26533317565918
    8. '(_' → logprob: -13.39033317565918
    9. '(N' → logprob: -13.64033317565918
    10. '   ' → logprob: -14.01533317565918

Token 130: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.50000286102295
    3. ' )' → logprob: -14.37500286102295
    4. ')]
' → logprob: -14.75000286102295
    5. ']' → logprob: -15.00000286102295
    6. ')])' → logprob: -15.87500286102295
    7. ')]

' → logprob: -16.500003814697266
    8. ')],' → logprob: -16.500003814697266
    9. '+' → logprob: -16.750003814697266
    10. '])' → logprob: -17.375003814697266

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1398757123970427e-05
    2. ')' → logprob: -11.750011444091797
    3. ' def' → logprob: -13.375011444091797
    4. 'd' → logprob: -14.875011444091797
    5. '
' → logprob: -15.000011444091797
    6. '```' → logprob: -15.375011444091797
    7. '#' → logprob: -15.750011444091797
    8. '_def' → logprob: -15.750011444091797
    9. ':def' → logprob: -15.750011444091797
    10. '_' → logprob: -15.875011444091797

Token 132: ' _' (ID: 1175)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.03579240292310715
    2. ' uf' → logprob: -4.410792350769043
    3. 'find' → logprob: -4.910792350769043
    4. '_find' → logprob: -5.160792350769043
    5. ' union' → logprob: -5.535792350769043
    6. ' UF' → logprob: -6.285792350769043
    7. ' _' → logprob: -6.910792350769043
    8. ' Find' → logprob: -7.410792350769043
    9. ' ' → logprob: -7.785792350769043
    10. '_' → logprob: -7.785792350769043

Token 133: 'guru' (ID: 196055)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.06630856543779373
    2. 'Find' → logprob: -3.6913084983825684
    3. 'UF' → logprob: -4.191308498382568
    4. 'uf' → logprob: -4.941308498382568
    5. '_find' → logprob: -5.316308498382568
    6. 'root' → logprob: -5.441308498382568
    7. 'ind' → logprob: -5.816308498382568
    8. 'union' → logprob: -6.566308498382568
    9. 'parent' → logprob: -7.316308498382568
    10. 'F' → logprob: -7.691308498382568

Token 134: '(x' (ID: 4061)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -1.6137953996658325
    2. '_union' → logprob: -1.7387953996658325
    3. '(u' → logprob: -2.238795280456543
    4. '(i' → logprob: -2.613795280456543
    5. 'union' → logprob: -2.988795280456543
    6. '(x' → logprob: -2.988795280456543
    7. '(n' → logprob: -3.238795280456543
    8. 'find' → logprob: -3.488795280456543
    9. '_f' → logprob: -3.738795280456543
    10. '_' → logprob: -3.988795280456543

Token 135: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011160464491695166
    2. '):
' → logprob: -6.8761162757873535
    3. ')' → logprob: -9.876115798950195
    4. ' ):' → logprob: -10.501115798950195
    5. ':' → logprob: -13.251115798950195
    6. ',' → logprob: -14.001115798950195
    7. '):
' → logprob: -14.126115798950195
    8. '):

' → logprob: -15.126115798950195
    9. ']:' → logprob: -16.251115798950195
    10. '}:' → logprob: -16.501115798950195

Token 136: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761387944221497
    2. ' if' → logprob: -0.8261387944221497
    3. 'if' → logprob: -8.701138496398926
    4. ' while' → logprob: -11.576138496398926
    5. '	if' → logprob: -11.576138496398926
    6. ' ' → logprob: -12.451138496398926
    7. '    
' → logprob: -12.576138496398926
    8. ' global' → logprob: -13.326138496398926
    9. '
' → logprob: -13.451138496398926
    10. '   ' → logprob: -13.701138496398926

Token 137: ' personal' (ID: 3832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5764598846435547
    2. 'if' → logprob: -0.8264598846435547
    3. '   ' → logprob: -7.576459884643555
    4. ' while' → logprob: -12.576459884643555
    5. 'while' → logprob: -13.201459884643555
    6. ' ' → logprob: -13.701459884643555
    7. '	if' → logprob: -13.951459884643555
    8. '```' → logprob: -15.326459884643555
    9. '
' → logprob: -15.826459884643555
    10. '  ' → logprob: -16.576459884643555

Token 138: ' naming' (ID: 64882)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016103820875287056
    2. '):' → logprob: -4.516103744506836
    3. ')' → logprob: -5.766103744506836
    4. ' :' → logprob: -7.641103744506836
    5. '   ' → logprob: -7.766103744506836
    6. ':
' → logprob: -8.391103744506836
    7. ' ' → logprob: -8.391103744506836
    8. '[' → logprob: -9.516103744506836
    9. '():' → logprob: -9.641103744506836
    10. '_:' → logprob: -9.641103744506836

Token 139: '!
' (ID: 4175)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07784101366996765
    2. '):' → logprob: -2.70284104347229
    3. ')' → logprob: -5.202840805053711
    4. ':
' → logprob: -6.952840805053711
    5. '   ' → logprob: -7.827840805053711
    6. '():' → logprob: -8.077840805053711
    7. '):
' → logprob: -8.202840805053711
    8. ':return' → logprob: -9.327840805053711
    9. '<|end|>' → logprob: -9.452840805053711
    10. '```' → logprob: -9.952840805053711

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11742908507585526
    2. ' if' → logprob: -2.24242901802063
    3. 'if' → logprob: -5.492429256439209
    4. ':' → logprob: -8.74242877960205
    5. '	if' → logprob: -8.86742877960205
    6. ' ' → logprob: -9.36742877960205
    7. '  ' → logprob: -10.61742877960205
    8. '
' → logprob: -11.11742877960205
    9. '```' → logprob: -11.36742877960205
    10. '    
' → logprob: -11.49242877960205

Token 141: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00017147827020380646
    2. ' if' → logprob: -8.750171661376953
    3. '   ' → logprob: -11.250171661376953
    4. 'while' → logprob: -17.000171661376953
    5. '
' → logprob: -18.125171661376953
    6. ' ' → logprob: -18.875171661376953
    7. '	if' → logprob: -20.375171661376953
    8. '  ' → logprob: -21.625171661376953
    9. 'p' → logprob: -21.625171661376953
    10. 'parent' → logprob: -22.000171661376953

Token 142: ' x' (ID: 1215)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.320334255695343
    2. ' _' → logprob: -1.3203341960906982
    3. '_' → logprob: -5.195334434509277
    4. '_x' → logprob: -6.695334434509277
    5. ' ' → logprob: -9.070334434509277
    6. 'x' → logprob: -9.820334434509277
    7. ' x' → logprob: -10.320334434509277
    8. '_F' → logprob: -10.945334434509277
    9. '_X' → logprob: -11.070334434509277
    10. '_G' → logprob: -11.695334434509277

Token 143: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18815475702285767
    2. '==' → logprob: -2.063154697418213
    3. ' !=' → logprob: -3.313154697418213
    4. ' ==' → logprob: -5.188154697418213
    5. '_' → logprob: -6.688154697418213
    6. '[' → logprob: -8.063155174255371
    7. ')!=' → logprob: -8.313155174255371
    8. '=' → logprob: -8.563155174255371
    9. ']!=' → logprob: -8.813155174255371
    10. ')' → logprob: -9.813155174255371

Token 144: ' _' (ID: 1175)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.027700599282979965
    2. ' _' → logprob: -3.652700662612915
    3. '_' → logprob: -7.652700424194336
    4. 'x' → logprob: -7.777700424194336
    5. ' ' → logprob: -8.402700424194336
    6. '_x' → logprob: -9.777700424194336
    7. ' x' → logprob: -10.027700424194336
    8. '_X' → logprob: -10.027700424194336
    9. '_UN' → logprob: -10.277700424194336
    10. '_F' → logprob: -10.277700424194336

Token 145: 'UF' (ID: 54005)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.002711199689656496
    2. 'UF' → logprob: -6.127711296081543
    3. '_F' → logprob: -8.127711296081543
    4. 'U' → logprob: -8.627711296081543
    5. '_' → logprob: -10.377711296081543
    6. '[' → logprob: -12.502711296081543
    7. 'F' → logprob: -12.752711296081543
    8. ' UF' → logprob: -13.377711296081543
    9. '_GF' → logprob: -13.752711296081543
    10. '```' → logprob: -14.002711296081543

Token 146: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00300777330994606
    2. '_ro' → logprob: -6.378007888793945
    3. '_' → logprob: -7.253007888793945
    4. '[x' → logprob: -8.378007888793945
    5. '[' → logprob: -8.628007888793945
    6. 'fro' → logprob: -10.503007888793945
    7. 'Ro' → logprob: -10.628007888793945
    8. '[_' → logprob: -10.628007888793945
    9. 'U' → logprob: -10.753007888793945
    10. 'F' → logprob: -11.003007888793945

Token 147: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00040219054790213704
    2. '[' → logprob: -7.875401973724365
    3. 'x' → logprob: -11.125402450561523
    4. '[i' → logprob: -12.625402450561523
    5. ' [' → logprob: -13.250402450561523
    6. '[
' → logprob: -14.625402450561523
    7. '[u' → logprob: -14.750402450561523
    8. '```' → logprob: -15.000402450561523
    9. '[s' → logprob: -15.250402450561523
    10. '[I' → logprob: -16.000402450561523

Token 148: ']:' (ID: 12433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005819845828227699
    2. '):
' → logprob: -7.750582218170166
    3. ']:' → logprob: -9.250581741333008
    4. ':' → logprob: -10.625581741333008
    5. ')' → logprob: -10.875581741333008
    6. ' ):' → logprob: -11.500581741333008
    7. '}:' → logprob: -13.750581741333008
    8. '):
' → logprob: -15.625581741333008
    9. '>:' → logprob: -15.750581741333008
    10. '):

' → logprob: -16.000581741333008

Token 149: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1518857479095459
    2. ' return' → logprob: -2.151885747909546
    3. '
' → logprob: -4.526885986328125
    4. '   ' → logprob: -4.651885986328125
    5. 'return' → logprob: -6.151885986328125
    6. ':return' → logprob: -7.276885986328125
    7. '\n' → logprob: -7.526885986328125
    8. '	return' → logprob: -8.151885986328125
    9. ' 
' → logprob: -8.276885986328125
    10. '        
' → logprob: -9.401885986328125

Token 150: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.253177642822266
    4. '_x' → logprob: -18.128177642822266
    5. 'None' → logprob: -18.503177642822266
    6. '	x' → logprob: -18.503177642822266
    7. ' ' → logprob: -18.628177642822266
    8. '(x' → logprob: -19.128177642822266
    9. '0' → logprob: -19.128177642822266
    10. '   ' → logprob: -19.503177642822266

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6761841773986816
    2. '
' → logprob: -0.8011841773986816
    3. '\n' → logprob: -3.8011841773986816
    4. '    
' → logprob: -4.301184177398682
    5. '  
' → logprob: -5.551184177398682
    6. ' 
' → logprob: -6.301184177398682
    7. ' else' → logprob: -7.676184177398682
    8. '   
' → logprob: -8.301183700561523
    9. 'else' → logprob: -9.051183700561523
    10. '\' → logprob: -9.926183700561523

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0955800786614418
    2. '    
' → logprob: -3.4705801010131836
    3. '
' → logprob: -4.220580101013184
    4. '_' → logprob: -4.345580101013184
    5. ' _' → logprob: -4.720580101013184
    6. ' 
' → logprob: -5.095580101013184
    7. ' else' → logprob: -5.345580101013184
    8. '\n' → logprob: -5.345580101013184
    9. '  
' → logprob: -5.470580101013184
    10. '_
' → logprob: -6.970580101013184

Token 153: ' _' (ID: 1175)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.4113943576812744
    2. '   ' → logprob: -1.6613943576812744
    3. ' _' → logprob: -2.0363943576812744
    4. '
' → logprob: -4.661394119262695
    5. '    
' → logprob: -5.661394119262695
    6. '_' (adapté à ' _') → logprob: -6.536394119262695
    7. '_F' → logprob: -6.911394119262695
    8. '  
' → logprob: -7.661394119262695
    9. ' ' → logprob: -7.911394119262695
    10. ' 
' → logprob: -9.036394119262695

Token 154: 'UF' (ID: 54005)
  Prédit: 'UF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UF' → logprob: -0.0002031827752944082
    2. '_U' → logprob: -9.625203132629395
    3. '_' → logprob: -9.875203132629395
    4. '_F' → logprob: -10.250203132629395
    5. 'F' → logprob: -10.625203132629395
    6. 'U' → logprob: -11.375203132629395
    7. 'FU' → logprob: -12.875203132629395
    8. 'uf' → logprob: -13.250203132629395
    9. ' UF' → logprob: -13.375203132629395
    10. '=' → logprob: -13.375203132629395

Token 155: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00023619852436240762
    2. '_ro' → logprob: -8.500236511230469
    3. 'fro' → logprob: -11.125236511230469
    4. 'Ro' → logprob: -11.750236511230469
    5. 'F' → logprob: -12.750236511230469
    6. '_' → logprob: -13.125236511230469
    7. '[' → logprob: -13.875236511230469
    8. 'or' → logprob: -14.625236511230469
    9. 'rof' → logprob: -14.625236511230469
    10. 'Pro' → logprob: -14.750236511230469

Token 156: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. 'x' → logprob: -15.375003814697266
    4. '```' → logprob: -17.000003814697266
    5. '(x' → logprob: -17.625003814697266
    6. '[
' → logprob: -18.375003814697266
    7. ' [' → logprob: -18.625003814697266
    8. '[i' → logprob: -19.500003814697266
    9. '{x' → logprob: -19.500003814697266
    10. '[_' → logprob: -19.625003814697266

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005440961103886366
    2. ']=' → logprob: -8.125544548034668
    3. ' ]' → logprob: -9.125544548034668
    4. '=' → logprob: -9.125544548034668
    5. ' =' → logprob: -11.125544548034668
    6. ')' → logprob: -11.375544548034668
    7. ' ' → logprob: -12.750544548034668
    8. '[' → logprob: -13.875544548034668
    9. ']==' → logprob: -17.00054359436035
    10. '   ' → logprob: -17.50054359436035

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '_=' → logprob: -15.508614540100098
    4. '=_' → logprob: -16.383615493774414
    5. '＝' → logprob: -17.258615493774414
    6. '=sys' → logprob: -18.008615493774414
    7. '.=' → logprob: -18.758615493774414
    8. '_' → logprob: -19.633615493774414
    9. '=

' → logprob: -19.633615493774414
    10. '=
' → logprob: -19.758615493774414

Token 159: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.014177384786307812
    2. ' _' → logprob: -4.264177322387695
    3. '_' → logprob: -11.764177322387695
    4. ' ' → logprob: -13.139177322387695
    5. '_gr' → logprob: -13.264177322387695
    6. '_gui' → logprob: -14.389177322387695
    7. 'guru' → logprob: -15.139177322387695
    8. '_gpu' → logprob: -15.639177322387695
    9. '_t' → logprob: -15.764177322387695
    10. '_gu' → logprob: -15.764177322387695

Token 160: 'guru' (ID: 196055)
  Prédit: 'guru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'guru' → logprob: -2.7610454708337784e-05
    2. 'UF' → logprob: -10.875027656555176
    3. 'Guru' → logprob: -12.500027656555176
    4. ' guru' → logprob: -12.750027656555176
    5. 'gur' → logprob: -13.500027656555176
    6. '_g' → logprob: -16.37502670288086
    7. '_F' → logprob: -16.50002670288086
    8. 'F' → logprob: -16.50002670288086
    9. 'g' → logprob: -16.50002670288086
    10. 'uru' → logprob: -16.75002670288086

Token 161: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -2.0100624169572257e-05
    2. '(' → logprob: -10.875020027160645
    3. '(x' → logprob: -14.625020027160645
    4. '((_' → logprob: -15.000020027160645
    5. '(U' → logprob: -15.875020027160645
    6. ' (_' → logprob: -16.37502098083496
    7. '(
' → logprob: -16.37502098083496
    8. ')(_' → logprob: -18.37502098083496
    9. '([' → logprob: -18.62502098083496
    10. '_' → logprob: -18.75002098083496

Token 162: 'UF' (ID: 54005)
  Prédit: 'UF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UF' → logprob: -3.953082341467962e-05
    2. '(U' → logprob: -11.000039100646973
    3. 'U' → logprob: -12.000039100646973
    4. 'F' → logprob: -12.500039100646973
    5. '(' → logprob: -12.625039100646973
    6. '_U' → logprob: -12.750039100646973
    7. ' UF' → logprob: -13.250039100646973
    8. 'uf' → logprob: -13.500039100646973
    9. 'Uf' → logprob: -14.000039100646973
    10. '(F' → logprob: -14.500039100646973

Token 163: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.004873419646173716
    2. 'fro' → logprob: -6.254873275756836
    3. '(x' → logprob: -6.629873275756836
    4. 'fo' → logprob: -7.379873275756836
    5. '[x' → logprob: -7.879873275756836
    6. 'x' → logprob: -8.129873275756836
    7. 'rof' → logprob: -9.754873275756836
    8. 'F' → logprob: -10.004873275756836
    9. 'r' → logprob: -10.379873275756836
    10. 'Fo' → logprob: -10.629873275756836

Token 164: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.214019307051785e-05
    2. 'x' → logprob: -10.625032424926758
    3. '[' → logprob: -12.250032424926758
    4. '[_' → logprob: -13.125032424926758
    5. '(x' → logprob: -14.000032424926758
    6. '[
' → logprob: -16.750032424926758
    7. ' x' → logprob: -17.125032424926758
    8. ' [' → logprob: -17.500032424926758
    9. '_x' → logprob: -17.500032424926758
    10. '```' → logprob: -17.625032424926758

Token 165: ']);' (ID: 34389)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.2729995988775045e-06
    2. 'x' → logprob: -12.125006675720215
    3. '[' → logprob: -14.500006675720215
    4. '(x' → logprob: -15.875006675720215
    5. ' x' → logprob: -16.2500057220459
    6. '])' → logprob: -17.1250057220459
    7. '[_' → logprob: -17.2500057220459
    8. '{x' → logprob: -18.6250057220459
    9. ')x' → logprob: -19.5000057220459
    10. '	x' → logprob: -19.5000057220459

Token 166: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47677406668663025
    2. 'return' → logprob: -0.9767740964889526
    3. '   ' → logprob: -5.976774215698242
    4. '	return' → logprob: -8.976774215698242
    5. '_return' → logprob: -10.476774215698242
    6. '
' → logprob: -14.851774215698242
    7. ' ' → logprob: -14.976774215698242
    8. ' ' → logprob: -15.226774215698242
    9. ' _' → logprob: -15.601774215698242
    10. '  ' → logprob: -15.851774215698242

Token 167: ' _' (ID: 1175)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.16300056874752045
    2. '_G' → logprob: -2.1630005836486816
    3. ' _' → logprob: -3.5380005836486816
    4. '_F' → logprob: -6.038000583648682
    5. '_g' → logprob: -6.413000583648682
    6. '_' → logprob: -6.413000583648682
    7. '_GF' → logprob: -7.788000583648682
    8. ' ' → logprob: -9.413000106811523
    9. '_UN' → logprob: -9.788000106811523
    10. '_GP' → logprob: -10.538000106811523

Token 168: 'UF' (ID: 54005)
  Prédit: 'UF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UF' → logprob: -8.423219696851447e-05
    2. 'guru' → logprob: -9.625083923339844
    3. 'F' → logprob: -11.500083923339844
    4. 'uf' → logprob: -12.875083923339844
    5. 'U' → logprob: -12.875083923339844
    6. 'Guru' → logprob: -13.875083923339844
    7. '```' → logprob: -14.875083923339844
    8. 'FU' → logprob: -15.125083923339844
    9. '_U' → logprob: -15.625083923339844
    10. ' UF' → logprob: -15.750083923339844

Token 169: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -8.864272967912257e-05
    2. 'fro' → logprob: -9.750088691711426
    3. 'Ro' → logprob: -11.500088691711426
    4. '_ro' → logprob: -11.750088691711426
    5. 'roz' → logprob: -13.250088691711426
    6. 'F' → logprob: -13.250088691711426
    7. 'rof' → logprob: -13.500088691711426
    8. 'fo' → logprob: -13.750088691711426
    9. 'Fo' → logprob: -13.750088691711426
    10. 'o' → logprob: -14.250088691711426

Token 170: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0019672929774969816
    2. 'x' → logprob: -6.251967430114746
    3. '[' → logprob: -10.251967430114746
    4. '(x' → logprob: -13.251967430114746
    5. '[_' → logprob: -14.876967430114746
    6. ' x' → logprob: -14.876967430114746
    7. '{x' → logprob: -15.001967430114746
    8. ' [' → logprob: -15.501967430114746
    9. '_x' → logprob: -16.12696647644043
    10. '```' → logprob: -16.37696647644043

Token 171: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ']' → logprob: -11.500029563903809
    3. '])' → logprob: -12.250029563903809
    4. ' )' → logprob: -12.375029563903809
    5. '[' → logprob: -12.750029563903809
    6. '[x' → logprob: -12.875029563903809
    7. '(x' → logprob: -13.375029563903809
    8. ')x' → logprob: -14.500029563903809
    9. '<|end|>' → logprob: -14.750029563903809
    10. ')
' → logprob: -14.750029563903809

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7303073406219482
    2. '_' → logprob: -0.8553073406219482
    3. ')' → logprob: -2.4803073406219482
    4. 'for' → logprob: -5.230307579040527
    5. '<|end|>' → logprob: -7.480307579040527
    6. '=' → logprob: -7.605307579040527
    7. ',' → logprob: -7.605307579040527
    8. '(' → logprob: -7.605307579040527
    9. 'a' → logprob: -8.105307579040527
    10. ' for' → logprob: -8.730307579040527

Token 173: ' _' (ID: 1175)
  Prédit: '_union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_union' → logprob: -0.6643931865692139
    2. ' _' → logprob: -1.1643931865692139
    3. ' union' → logprob: -3.164393186569214
    4. '_' → logprob: -3.414393186569214
    5. '_merge' → logprob: -3.914393186569214
    6. ' main' → logprob: -4.039393424987793
    7. '_un' → logprob: -4.164393424987793
    8. '_main' → logprob: -5.414393424987793
    9. '_g' → logprob: -5.414393424987793
    10. ' dfs' → logprob: -5.539393424987793

Token 174: 'chts' (ID: 18462)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.3008926212787628
    2. 'un' → logprob: -2.3008925914764404
    3. 'merge' → logprob: -2.3008925914764404
    4. 'join' → logprob: -4.1758928298950195
    5. 'connect' → logprob: -4.8008928298950195
    6. 'dfs' → logprob: -4.9258928298950195
    7. 'uni' → logprob: -5.5508928298950195
    8. 'combine' → logprob: -5.5508928298950195
    9. 'guru' → logprob: -6.4258928298950195
    10. 'Union' → logprob: -6.5508928298950195

Token 175: 'ama' (ID: 2152)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.012701409868896008
    2. '(' → logprob: -5.387701511383057
    3. '(a' → logprob: -6.137701511383057
    4. '(i' → logprob: -6.512701511383057
    5. '(u' → logprob: -7.012701511383057
    6. '(y' → logprob: -7.387701511383057
    7. '(k' → logprob: -8.012701034545898
    8. '(s' → logprob: -8.012701034545898
    9. '(_' → logprob: -8.012701034545898
    10. 'x' → logprob: -8.137701034545898

Token 176: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03050915338099003
    2. '(u' → logprob: -4.155508995056152
    3. '(node' → logprob: -5.280508995056152
    4. '():' → logprob: -5.655508995056152
    5. '(a' → logprob: -6.405508995056152
    6. '(' → logprob: -6.530508995056152
    7. '(s' → logprob: -7.030508995056152
    8. '(n' → logprob: -7.655508995056152
    9. '(v' → logprob: -7.780508995056152
    10. '(i' → logprob: -8.655508995056152

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005260322242975235
    2. ',b' → logprob: -5.255260467529297
    3. ' ,' → logprob: -10.630260467529297
    4. 'b' → logprob: -13.880260467529297
    5. ',a' → logprob: -14.130260467529297
    6. '):' → logprob: -15.005260467529297
    7. '_,' → logprob: -15.880260467529297
    8. ',int' → logprob: -16.880260467529297
    9. ',
' → logprob: -17.005260467529297
    10. '   ' → logprob: -17.255260467529297

Token 178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324652671813965
    2. ' b' → logprob: -3.7732465267181396
    3. ' ' → logprob: -13.898246765136719
    4. '   ' → logprob: -16.77324676513672
    5. '	b' → logprob: -16.89824676513672
    6. ' ' → logprob: -17.27324676513672
    7. ')b' → logprob: -17.77324676513672
    8. '_b' → logprob: -17.89824676513672
    9. '
' → logprob: -18.02324676513672
    10. ',b' → logprob: -18.14824676513672

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004845346265938133
    2. '):
' → logprob: -7.750484466552734
    3. ')' → logprob: -9.875484466552734
    4. ' ):' → logprob: -13.750484466552734
    5. '):
' → logprob: -14.375484466552734
    6. ':' → logprob: -15.000484466552734
    7. '):

' → logprob: -15.750484466552734
    8. '_' → logprob: -16.500484466552734
    9. '   ' → logprob: -16.750484466552734
    10. ''):' → logprob: -16.875484466552734

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1583527773618698
    2. ' a' → logprob: -2.658352851867676
    3. '_a' → logprob: -3.158352851867676
    4. 'a' → logprob: -4.158352851867676
    5. ' _' → logprob: -4.908352851867676
    6. ' ' → logprob: -6.033352851867676
    7. '_ra' → logprob: -6.033352851867676
    8. ' ra' → logprob: -6.658352851867676
    9. ' root' → logprob: -6.908352851867676
    10. '_' → logprob: -7.408352851867676

Token 181: ' return' (ID: 622)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.24129906296730042
    2. 'a' → logprob: -1.991299033164978
    3. '_' → logprob: -2.8662991523742676
    4. '_ra' → logprob: -4.991299152374268
    5. '_A' → logprob: -5.241299152374268
    6. '_U' → logprob: -6.241299152374268
    7. '_u' → logprob: -6.616299152374268
    8. '   ' → logprob: -6.741299152374268
    9. '_pa' → logprob: -6.866299152374268
    10. 'ra' → logprob: -7.241299152374268

Token 182: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00434336019679904
    2. ' _' → logprob: -5.504343509674072
    3. '_G' → logprob: -9.129343032836914
    4. '(_' → logprob: -10.379343032836914
    5. '_a' → logprob: -10.504343032836914
    6. '_ch' → logprob: -10.754343032836914
    7. '_t' → logprob: -10.879343032836914
    8. '_gr' → logprob: -11.504343032836914
    9. '_m' → logprob: -11.879343032836914
    10. '_' → logprob: -12.004343032836914

Token 183: 'guru' (ID: 196055)
  Prédit: 'guru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'guru' → logprob: -0.0005975929088890553
    2. 'P' → logprob: -8.750597953796387
    3. 'UF' → logprob: -8.875597953796387
    4. 'Guru' → logprob: -9.625597953796387
    5. '_P' → logprob: -10.125597953796387
    6. '_g' → logprob: -10.250597953796387
    7. 'gur' → logprob: -10.750597953796387
    8. ' guru' → logprob: -10.750597953796387
    9. '_U' → logprob: -11.125597953796387
    10. '_' → logprob: -11.250597953796387

Token 184: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012856863031629473
    2. '(' → logprob: -9.250128746032715
    3. '((' → logprob: -11.000128746032715
    4. '(_' → logprob: -11.250128746032715
    5. 'a' → logprob: -13.625128746032715
    6. '(P' → logprob: -14.375128746032715
    7. '(max' → logprob: -14.875128746032715
    8. '((_' → logprob: -15.625128746032715
    9. '(
' → logprob: -16.2501277923584
    10. '(int' → logprob: -16.3751277923584

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013808291405439377
    2. ')==' → logprob: -6.626380920410156
    3. ')!=' → logprob: -9.876380920410156
    4. '==' → logprob: -13.126380920410156
    5. ' )' → logprob: -13.751380920410156
    6. ')
' → logprob: -16.376380920410156
    7. ']==' → logprob: -16.626380920410156
    8. ')=' → logprob: -16.626380920410156
    9. '!=' → logprob: -16.751380920410156
    10. ']' → logprob: -17.626380920410156

Token 186: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21861858665943146
    2. '!=' → logprob: -1.968618631362915
    3. ' ==' → logprob: -3.343618631362915
    4. 'if' → logprob: -4.343618392944336
    5. ' !=' → logprob: -5.093618392944336
    6. ',' → logprob: -6.593618392944336
    7. ' if' → logprob: -7.718618392944336
    8. '=' → logprob: -8.343618392944336
    9. '_' → logprob: -10.468618392944336
    10. '==
' → logprob: -10.468618392944336

Token 187: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0013717879774048924
    2. '_' → logprob: -6.75137186050415
    3. ' _' → logprob: -9.251371383666992
    4. 'guru' → logprob: -9.251371383666992
    5. '_ch' → logprob: -13.376371383666992
    6. 'g' → logprob: -13.501371383666992
    7. ' ' → logprob: -13.751371383666992
    8. '_gr' → logprob: -14.001371383666992
    9. ' guru' → logprob: -14.251371383666992
    10. '  ' → logprob: -14.626371383666992

Token 188: 'guru' (ID: 196055)
  Prédit: 'guru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'guru' → logprob: -1.0087516784551553e-05
    2. ' guru' → logprob: -13.12501049041748
    3. 'Guru' → logprob: -13.37501049041748
    4. '_' → logprob: -13.50001049041748
    5. '```' → logprob: -14.00001049041748
    6. 'g' → logprob: -14.25001049041748
    7. '_g' → logprob: -15.00001049041748
    8. 'guild' → logprob: -15.00001049041748
    9. 'gur' → logprob: -15.12501049041748
    10. '_F' → logprob: -15.62501049041748

Token 189: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.492120155598968e-05
    2. '(' → logprob: -9.750064849853516
    3. '(_' → logprob: -12.375064849853516
    4. 'b' → logprob: -13.750064849853516
    5. '(g' → logprob: -13.750064849853516
    6. ' (' → logprob: -16.500064849853516
    7. '(
' → logprob: -17.375064849853516
    8. '	b' → logprob: -17.500064849853516
    9. '(s' → logprob: -17.625064849853516
    10. '((' → logprob: -18.125064849853516

Token 190: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -12.625007629394531
    3. ' or' → logprob: -13.625007629394531
    4. ')
' → logprob: -13.875007629394531
    5. '<|end|>' → logprob: -14.000007629394531
    6. ')return' → logprob: -14.750007629394531
    7. 'or' → logprob: -15.000007629394531
    8. ')#' → logprob: -15.500007629394531
    9. '),' → logprob: -15.500007629394531
    10. ')a' → logprob: -15.625007629394531

Token 191: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03386145085096359
    2. '_' → logprob: -3.6588613986968994
    3. '<|end|>' → logprob: -5.0338616371154785
    4. ')' → logprob: -7.1588616371154785
    5. '#' → logprob: -9.28386116027832
    6. '```' → logprob: -10.40886116027832
    7. '=' → logprob: -11.03386116027832
    8. 'a' → logprob: -11.03386116027832
    9. ' def' → logprob: -11.28386116027832
    10. '_def' → logprob: -11.78386116027832

Token 192: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2798685133457184
    2. '_' → logprob: -1.529868483543396
    3. '_union' → logprob: -4.2798686027526855
    4. '_ch' → logprob: -5.0298686027526855
    5. '_g' → logprob: -5.5298686027526855
    6. '_main' → logprob: -7.1548686027526855
    7. '_merge' → logprob: -7.7798686027526855
    8. ' main' → logprob: -8.279868125915527
    9. ' ' → logprob: -8.529868125915527
    10. '_un' → logprob: -9.029868125915527

Token 193: 'kon' (ID: 24134)
  Prédit: 'chts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chts' → logprob: -0.5521512031555176
    2. 'union' → logprob: -2.0521512031555176
    3. 'ch' → logprob: -2.8021512031555176
    4. 'guru' → logprob: -2.8021512031555176
    5. 'uf' → logprob: -3.1771512031555176
    6. 'merge' → logprob: -4.427151203155518
    7. 'un' → logprob: -4.677151203155518
    8. 'cht' → logprob: -5.052151203155518
    9. 'joins' → logprob: -5.052151203155518
    10. 'UF' → logprob: -5.177151203155518

Token 194: 'bu' (ID: 9936)
  Prédit: 'nect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nect' → logprob: -0.808974027633667
    2. 'w' → logprob: -1.808974027633667
    3. 'kat' → logprob: -2.683974027633667
    4. 'wa' → logprob: -2.808974027633667
    5. 'k' → logprob: -2.808974027633667
    6. 'ect' → logprob: -3.308974027633667
    7. 'ai' → logprob: -3.808974027633667
    8. 'a' → logprob: -4.558974266052246
    9. 'ku' → logprob: -4.808974266052246
    10. '(w' → logprob: -4.933974266052246

Token 195: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006003346061334014
    2. '(x' → logprob: -7.625600337982178
    3. 'a' → logprob: -9.75059986114502
    4. '(u' → logprob: -10.87559986114502
    5. '(' → logprob: -11.50059986114502
    6. '(_' → logprob: -12.00059986114502
    7. '(k' → logprob: -12.37559986114502
    8. 'def' → logprob: -12.87559986114502
    9. 'x' → logprob: -13.50059986114502
    10. '(c' → logprob: -13.75059986114502

Token 196: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008152463473379612
    2. ',' → logprob: -4.883152484893799
    3. '):
' → logprob: -7.633152484893799
    4. ')' → logprob: -10.75815200805664
    5. ' ):' → logprob: -11.25815200805664
    6. ',y' → logprob: -11.75815200805664
    7. ':' → logprob: -12.63315200805664
    8. '):
' → logprob: -12.88315200805664
    9. ',x' → logprob: -13.25815200805664
    10. ',b' → logprob: -13.25815200805664

Token 197: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.34871554374694824
    2. ' y' → logprob: -1.2237155437469482
    3. 'a' → logprob: -8.973715782165527
    4. 'b' → logprob: -9.473715782165527
    5. ' ' → logprob: -10.473715782165527
    6. ' b' → logprob: -10.848715782165527
    7. ' a' → logprob: -11.473715782165527
    8. '	y' → logprob: -13.348715782165527
    9. '_y' → logprob: -13.723715782165527
    10. '_' → logprob: -14.098715782165527

Token 198: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023288801312446594
    2. '):
' → logprob: -3.7732887268066406
    3. '):
' → logprob: -10.14828872680664
    4. ')' → logprob: -12.89828872680664
    5. '):

' → logprob: -14.02328872680664
    6. ' ):' → logprob: -14.89828872680664
    7. '   ' → logprob: -15.39828872680664
    8. '_' → logprob: -16.39828872680664
    9. ':' → logprob: -16.64828872680664
    10. 'def' → logprob: -16.64828872680664

Token 199: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005527573637664318
    2. ' _' → logprob: -5.630527496337891
    3. '_a' → logprob: -7.005527496337891
    4. '_x' → logprob: -8.50552749633789
    5. ' ' → logprob: -8.88052749633789
    6. '_U' → logprob: -8.88052749633789
    7. '_u' → logprob: -9.25552749633789
    8. 'a' → logprob: -9.38052749633789
    9. '_' → logprob: -9.50552749633789
    10. ' a' → logprob: -9.63052749633789

Token 200: ' #' (ID: 1069)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.7719758152961731
    2. '_a' → logprob: -1.2719757556915283
    3. '   ' → logprob: -2.0219757556915283
    4. 'a' → logprob: -3.2719757556915283
    5. '_x' → logprob: -3.2719757556915283
    6. '_u' → logprob: -3.8969757556915283
    7. '_' → logprob: -4.146975994110107
    8. 'x' → logprob: -5.396975994110107
    9. '_A' → logprob: -5.521975994110107
    10. '_f' → logprob: -6.896975994110107

Token 201: ' y' (ID: 342)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.7049035429954529
    2. 'a' → logprob: -1.2049036026000977
    3. '_U' → logprob: -2.8299036026000977
    4. 'x' → logprob: -2.9549036026000977
    5. '_' → logprob: -3.2049036026000977
    6. '_x' → logprob: -3.2049036026000977
    7. '_u' → logprob: -5.329903602600098
    8. '_fx' → logprob: -5.704903602600098
    9. '_g' → logprob: -6.704903602600098
    10. '_A' → logprob: -6.829903602600098

Token 202: ' dom' (ID: 3878)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5289273858070374
    2. '):
' → logprob: -1.5289273262023926
    3. '=' → logprob: -2.4039273262023926
    4. '_root' → logprob: -3.1539273262023926
    5. 'root' → logprob: -4.278927326202393
    6. 'def' → logprob: -4.278927326202393
    7. '<|end|>' → logprob: -4.403927326202393
    8. ')' → logprob: -4.903927326202393
    9. ':' → logprob: -6.153927326202393
    10. ' =' → logprob: -6.403927326202393

Token 203: '
' (ID: 198)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1712146997451782
    2. '):' → logprob: -1.2962146997451782
    3. ')' → logprob: -1.5462146997451782
    4. 'ain' → logprob: -2.7962145805358887
    5. '=' → logprob: -2.9212145805358887
    6. 'inator' → logprob: -3.4212145805358887
    7. '):
' → logprob: -4.171214580535889
    8. 'inate' → logprob: -4.796214580535889
    9. 'aint' → logprob: -5.046214580535889
    10. 'int' → logprob: -5.046214580535889

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002398009179159999
    2. ' _' → logprob: -6.5023980140686035
    3. '_' → logprob: -8.377397537231445
    4. '_x' → logprob: -8.752397537231445
    5. '_U' → logprob: -8.877397537231445
    6. '_u' → logprob: -9.502397537231445
    7. ':' → logprob: -9.752397537231445
    8. 'x' → logprob: -10.002397537231445
    9. ' ' → logprob: -10.502397537231445
    10. ':
' → logprob: -10.752397537231445

Token 205: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3896372318267822
    2. '_a' → logprob: -1.6396372318267822
    3. '_x' → logprob: -1.6396372318267822
    4. '_U' → logprob: -1.6396372318267822
    5. 'x' (adapté à ' x') → logprob: -2.0146372318267822
    6. '_' → logprob: -4.139636993408203
    7. '_u' → logprob: -5.264636993408203
    8. '_g' → logprob: -5.764636993408203
    9. '_fx' → logprob: -6.014636993408203
    10. '   ' → logprob: -6.014636993408203

Token 206: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9516639709472656
    2. '_root' → logprob: -1.3266639709472656
    3. ' =' → logprob: -1.4516639709472656
    4. 'root' → logprob: -3.3266639709472656
    5. '_' → logprob: -3.5766639709472656
    6. '_parent' → logprob: -3.9516639709472656
    7. ',' → logprob: -5.076663970947266
    8. '_=' → logprob: -5.076663970947266
    9. '_repr' → logprob: -5.451663970947266
    10. '=_' → logprob: -5.826663970947266

Token 207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519415020942688
    2. ' y' → logprob: -1.501941442489624
    3. '_y' → logprob: -11.876941680908203
    4. '=' → logprob: -13.251941680908203
    5. ' =' → logprob: -13.876941680908203
    6. '_' → logprob: -14.001941680908203
    7. ' _' → logprob: -14.501941680908203
    8. ' ' → logprob: -15.251941680908203
    9. '	y' → logprob: -15.626941680908203
    10. 'guru' → logprob: -15.626941680908203

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008847257122397423
    2. ' =' → logprob: -4.758847236633301
    3. '=_' → logprob: -8.3838472366333
    4. '=
' → logprob: -14.0088472366333
    5. '=g' → logprob: -14.1338472366333
    6. ' ' → logprob: -14.2588472366333
    7. '_=' → logprob: -14.3838472366333
    8. '=root' → logprob: -14.6338472366333
    9. '=find' → logprob: -15.5088472366333
    10. '=

' → logprob: -15.5088472366333

Token 209: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.00024763107649050653
    2. ' _' → logprob: -8.625247955322266
    3. 'guru' → logprob: -10.250247955322266
    4. '_' → logprob: -11.500247955322266
    5. '_k' → logprob: -11.625247955322266
    6. '  ' → logprob: -12.375247955322266
    7. ' ' → logprob: -12.375247955322266
    8. '   ' → logprob: -13.750247955322266
    9. 'g' → logprob: -13.875247955322266
    10. '_gr' → logprob: -14.750247955322266

Token 210: 'guru' (ID: 196055)
  Prédit: 'guru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'guru' → logprob: -2.816093228830141e-06
    2. '_g' → logprob: -13.12500286102295
    3. ' guru' → logprob: -15.12500286102295
    4. 'gur' → logprob: -15.87500286102295
    5. '_k' → logprob: -16.625001907348633
    6. '
' → logprob: -16.875001907348633
    7. '_' → logprob: -17.000001907348633
    8. 'Guru' → logprob: -17.250001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'gui' → logprob: -18.250001907348633

Token 211: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.333223139634356e-05
    2. 'x' → logprob: -10.375033378601074
    3. '(' → logprob: -13.250033378601074
    4. '(y' → logprob: -15.125033378601074
    5. '(
' → logprob: -18.250032424926758
    6. ' (' → logprob: -18.375032424926758
    7. '(a' → logprob: -19.000032424926758
    8. ' x' → logprob: -19.500032424926758
    9. ')' → logprob: -20.250032424926758
    10. ')x' → logprob: -20.250032424926758

Token 212: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.038188714534044266
    2. ',' → logprob: -3.2881886959075928
    3. ' ),' → logprob: -9.663188934326172
    4. ')' → logprob: -9.788188934326172
    5. ',y' → logprob: -10.788188934326172
    6. ' ,' → logprob: -12.788188934326172
    7. ' ' → logprob: -13.288188934326172
    8. ',),' → logprob: -14.038188934326172
    9. '),
' → logprob: -14.288188934326172
    10. ',
' → logprob: -15.288188934326172

Token 213: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.09470406919717789
    2. '_' → logprob: -2.9697041511535645
    3. ' _' → logprob: -3.8447041511535645
    4. 'guru' → logprob: -4.9697041511535645
    5. 'y' → logprob: -5.5947041511535645
    6. '_y' → logprob: -5.8447041511535645
    7. ' y' → logprob: -5.8447041511535645
    8. ' guru' → logprob: -7.9697041511535645
    9. 'g' → logprob: -8.469703674316406
    10. '_k' → logprob: -8.594703674316406

Token 214: 'guru' (ID: 196055)
  Prédit: 'guru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'guru' → logprob: -3.7697225252486533e-06
    2. ' guru' → logprob: -13.500003814697266
    3. '```' → logprob: -14.500003814697266
    4. 'gur' → logprob: -14.750003814697266
    5. 'g' → logprob: -15.250003814697266
    6. '_g' → logprob: -15.375003814697266
    7. 'gui' → logprob: -15.500003814697266
    8. 'y' → logprob: -15.750003814697266
    9. 'Guru' → logprob: -16.250003814697266
    10. '
' → logprob: -16.250003814697266

Token 215: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0001427538663847372
    2. 'y' → logprob: -8.875143051147461
    3. '(' → logprob: -12.875143051147461
    4. ' y' → logprob: -16.62514305114746
    5. '	y' → logprob: -16.87514305114746
    6. '<|end|>' → logprob: -18.12514305114746
    7. ' (' → logprob: -18.37514305114746
    8. ''y' → logprob: -19.12514305114746
    9. '```' → logprob: -19.12514305114746
    10. '(x' → logprob: -19.25014305114746

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057564906775951385
    2. ')
' → logprob: -2.9325649738311768
    3. '   ' → logprob: -5.932564735412598
    4. ')
' → logprob: -11.557564735412598
    5. ' )' → logprob: -12.932564735412598
    6. 'if' → logprob: -13.057564735412598
    7. '
' → logprob: -13.182564735412598
    8. ');' → logprob: -13.182564735412598
    9. '):
' → logprob: -13.557564735412598
    10. '<|end|>' → logprob: -13.557564735412598

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058192797005176544
    2. 'if' → logprob: -3.433192729949951
    3. ' if' → logprob: -4.433192729949951
    4. '_U' → logprob: -4.433192729949951
    5. '_' → logprob: -7.933192729949951
    6. ' _' → logprob: -9.30819320678711
    7. ' ' → logprob: -11.18319320678711
    8. '    
' → logprob: -11.43319320678711
    9. '
' → logprob: -12.05819320678711
    10. '  ' → logprob: -12.68319320678711

Token 218: ' if' (ID: 538)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.0012827336322516203
    2. 'if' (adapté à ' if') → logprob: -6.876282691955566
    3. '   ' → logprob: -8.376282691955566
    4. 'UF' → logprob: -12.001282691955566
    5. ' if' → logprob: -12.251282691955566
    6. '	U' → logprob: -13.251282691955566
    7. '_IF' → logprob: -13.626282691955566
    8. '\' → logprob: -13.751282691955566
    9. '```' → logprob: -13.876282691955566
    10. '_' → logprob: -14.126282691955566

Token 219: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12693451344966888
    2. ' x' → logprob: -2.12693452835083
    3. '   ' → logprob: -12.251934051513672
    4. ' ' → logprob: -13.751934051513672
    5. '	x' → logprob: -15.126934051513672
    6. '_x' → logprob: -15.501934051513672
    7. '```' → logprob: -16.501934051513672
    8. '  ' → logprob: -17.126934051513672
    9. '_' → logprob: -17.251934051513672
    10. '[' → logprob: -18.126934051513672

Token 220: ' ^' (ID: 7602)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3192906379699707
    2. '==' → logprob: -1.3192906379699707
    3. ' !=' → logprob: -5.319290637969971
    4. ' ==' → logprob: -7.069290637969971
    5. '=' → logprob: -8.319290161132812
    6. '==
' → logprob: -11.319290161132812
    7. '<|end|>' → logprob: -13.194290161132812
    8. ']!=' → logprob: -14.069290161132812
    9. '!=(' → logprob: -14.194290161132812
    10. '!==' → logprob: -14.569290161132812

Token 221: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04863641783595085
    2. ' y' → logprob: -3.0486364364624023
    3. '=' → logprob: -10.673636436462402
    4. '0' → logprob: -12.173636436462402
    5. '=y' → logprob: -12.673636436462402
    6. '1' → logprob: -12.798636436462402
    7. 'x' → logprob: -12.798636436462402
    8. ' ' → logprob: -13.048636436462402
    9. '<|end|>' → logprob: -13.048636436462402
    10. ''y' → logprob: -13.173636436462402

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007067943457514048
    2. ' :' → logprob: -5.507068157196045
    3. '==' → logprob: -6.507068157196045
    4. 'and' → logprob: -7.882068157196045
    5. ' ==' → logprob: -7.882068157196045
    6. ':
' → logprob: -8.132067680358887
    7. ' and' → logprob: -8.257067680358887
    8. '=' → logprob: -9.257067680358887
    9. ':return' → logprob: -10.132067680358887
    10. '!=' → logprob: -10.507067680358887

Token 223: ' ' (ID: 220)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.01678674854338169
    2. ' _' → logprob: -4.766786575317383
    3. '   ' → logprob: -4.891786575317383
    4. '_' → logprob: -8.016786575317383
    5. ' ' → logprob: -9.016786575317383
    6. '	U' → logprob: -9.766786575317383
    7. ' UF' → logprob: -10.766786575317383
    8. '       ' → logprob: -11.016786575317383
    9. '_AF' → logprob: -11.141786575317383
    10. '  ' → logprob: -11.266786575317383

Token 224: ' #' (ID: 1069)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -6.8497312895488e-05
    2. '   ' → logprob: -9.625068664550781
    3. '	U' → logprob: -14.375068664550781
    4. ' ' → logprob: -14.875068664550781
    5. '_' → logprob: -14.875068664550781
    6. '
' → logprob: -15.500068664550781
    7. '  ' → logprob: -15.625068664550781
    8. 'UF' → logprob: -15.875068664550781
    9. '\' → logprob: -16.00006866455078
    10. '_UN' → logprob: -16.25006866455078

Token 225: ' just' (ID: 1327)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.0017469348385930061
    2. ' _' → logprob: -6.626747131347656
    3. '   ' → logprob: -8.376747131347656
    4. '_' → logprob: -9.376747131347656
    5. ' ' → logprob: -10.501747131347656
    6. '  ' → logprob: -10.876747131347656
    7. '_AF' → logprob: -11.501747131347656
    8. 'UF' → logprob: -11.626747131347656
    9. '_US' → logprob: -12.251747131347656
    10. 'if' → logprob: -12.376747131347656

Token 226: ' because' (ID: 2236)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.012864295393228531
    2. 'if' → logprob: -5.262864112854004
    3. '   ' → logprob: -5.387864112854004
    4. '_' → logprob: -6.512864112854004
    5. 'x' → logprob: -8.137864112854004
    6. 'UF' → logprob: -8.137864112854004
    7. ' _' → logprob: -8.887864112854004
    8. '  ' → logprob: -9.012864112854004
    9. '
' → logprob: -9.262864112854004
    10. '=' → logprob: -9.262864112854004

Token 227: ' XOR' (ID: 147209)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.12285137921571732
    2. ' _' → logprob: -2.4978513717651367
    3. '   ' → logprob: -3.4978513717651367
    4. '_' → logprob: -6.372851371765137
    5. ' if' → logprob: -7.747851371765137
    6. 'if' → logprob: -7.747851371765137
    7. ' ' → logprob: -8.872851371765137
    8. '_F' → logprob: -9.122851371765137
    9. '  ' → logprob: -9.747851371765137
    10. '       ' → logprob: -9.997851371765137

Token 228: ' is' (ID: 382)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.34767669439315796
    2. ':' → logprob: -1.5976767539978027
    3. ' _' → logprob: -3.2226767539978027
    4. ':
' → logprob: -3.7226767539978027
    5. '   ' → logprob: -3.9726767539978027
    6. '_' → logprob: -5.222676753997803
    7. '       ' → logprob: -6.722676753997803
    8. ':_' → logprob: -7.222676753997803
    9. '[' → logprob: -8.222676277160645
    10. '_F' → logprob: -8.347676277160645

Token 229: ' cool' (ID: 8157)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10604161024093628
    2. 'not' → logprob: -2.856041669845581
    3. ' x' → logprob: -3.856041669845581
    4. '1' → logprob: -4.856041431427002
    5. ' not' → logprob: -5.106041431427002
    6. 'True' → logprob: -5.481041431427002
    7. '0' → logprob: -6.356041431427002
    8. 'true' → logprob: -6.731041431427002
    9. ' True' → logprob: -7.731041431427002
    10. ' ' → logprob: -8.35604190826416

Token 230: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6733466982841492
    2. '   ' → logprob: -1.423346757888794
    3. '_U' → logprob: -2.423346757888794
    4. ':
' → logprob: -2.798346757888794
    5. ' _' → logprob: -3.048346757888794
    6. '_' → logprob: -3.548346757888794
    7. '       ' → logprob: -4.298346519470215
    8. ':_' → logprob: -5.923346519470215
    9. '_F' → logprob: -6.423346519470215
    10. ',' → logprob: -6.423346519470215

Token 231: '       ' (ID: 309)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_U' → logprob: -0.0701264962553978
    2. '   ' → logprob: -3.195126533508301
    3. ' _' → logprob: -3.695126533508301
    4. '_' → logprob: -6.945126533508301
    5. '       ' → logprob: -7.195126533508301
    6. '[' → logprob: -9.6951265335083
    7. '_F' → logprob: -10.1951265335083
    8. ' ' → logprob: -10.8201265335083
    9. ' UF' → logprob: -10.8201265335083
    10. '	U' → logprob: -11.8201265335083

Token 232: ' _' (ID: 1175)
  Prédit: '_U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_U' → logprob: -2.141186450899113e-05
    2. '   ' → logprob: -11.000020980834961
    3. '	U' → logprob: -13.500020980834961
    4. '       ' → logprob: -13.625020980834961
    5. 'UF' → logprob: -14.125020980834961
    6. '_UN' → logprob: -14.500020980834961
    7. '\' → logprob: -15.875020980834961
    8. '  ' → logprob: -16.00002098083496
    9. '__' → logprob: -16.25002098083496
    10. '_US' → logprob: -16.75002098083496

Token 233: 'UF' (ID: 54005)
  Prédit: 'UF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UF' → logprob: -7.111979357432574e-05
    2. '_U' → logprob: -9.62507152557373
    3. '_' → logprob: -13.12507152557373
    4. ' UF' → logprob: -13.62507152557373
    5. 'U' → logprob: -13.87507152557373
    6. 'uf' → logprob: -15.12507152557373
    7. '```' → logprob: -16.000070571899414
    8. 'UG' → logprob: -16.125070571899414
    9. 'UFF' → logprob: -16.625070571899414
    10. '_F' → logprob: -17.125070571899414

Token 234: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.0005456457729451358
    2. '_ro' → logprob: -7.625545501708984
    3. 'Ro' → logprob: -10.750545501708984
    4. 'fro' → logprob: -10.750545501708984
    5. 'F' → logprob: -12.375545501708984
    6. '_' → logprob: -13.000545501708984
    7. 'U' → logprob: -13.750545501708984
    8. '[' → logprob: -14.000545501708984
    9. '```' → logprob: -14.000545501708984
    10. 'rof' → logprob: -14.250545501708984

Token 235: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.12693682312965393
    2. '[x' → logprob: -2.126936912536621
    3. '[' → logprob: -12.126936912536621
    4. 'y' → logprob: -13.501936912536621
    5. 'x' → logprob: -14.501936912536621
    6. '[
' → logprob: -15.126936912536621
    7. ' [' → logprob: -15.251936912536621
    8. '```' → logprob: -15.876936912536621
    9. '[_' → logprob: -16.001935958862305
    10. ' y' → logprob: -16.251935958862305

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08046932518482208
    2. ']=' → logprob: -2.5804693698883057
    3. '=' → logprob: -6.455469131469727
    4. ' ]' → logprob: -12.330469131469727
    5. '=y' → logprob: -13.830469131469727
    6. ' =' → logprob: -14.830469131469727
    7. ']+=' → logprob: -15.455469131469727
    8. ']
' → logprob: -16.080469131469727
    9. 'y' → logprob: -16.580469131469727
    10. '[' → logprob: -16.830469131469727

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005622077151201665
    2. ' =' → logprob: -7.5005621910095215
    3. '=y' → logprob: -11.62556266784668
    4. '=x' → logprob: -16.50056266784668
    5. '＝' → logprob: -16.62556266784668
    6. '=_' → logprob: -17.00056266784668
    7. '=
' → logprob: -18.12556266784668
    8. '=u' → logprob: -18.25056266784668
    9. '=user' → logprob: -18.25056266784668
    10. '_=' → logprob: -18.37556266784668

Token 238: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.935296834039036e-06
    2. ' y' → logprob: -12.75000286102295
    3. '_y' → logprob: -18.000003814697266
    4. '	y' → logprob: -19.875003814697266
    5. '<|end|>' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.125003814697266
    7. ''y' → logprob: -22.250003814697266
    8. 'Y' → logprob: -23.000003814697266
    9. '‘y' → logprob: -23.000003814697266
    10. 'y's' → logprob: -23.000003814697266

Token 239: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: '_t' (ID: 838)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01354699581861496
    2. 'def' → logprob: -4.888546943664551
    3. '
' → logprob: -5.888546943664551
    4. '<|end|>' → logprob: -6.888546943664551
    5. '  
' → logprob: -7.763546943664551
    6. '    
' → logprob: -8.26354694366455
    7. ' for' → logprob: -8.26354694366455
    8. '_' → logprob: -8.38854694366455
    9. ' 
' → logprob: -9.13854694366455
    10. 'P' → logprob: -9.13854694366455

Token 241: 'l' (ID: 75)
  Prédit: 'kon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kon' → logprob: -0.6015245318412781
    2. '_' → logprob: -1.4765245914459229
    3. 'on' → logprob: -3.101524591445923
    4. 'o' → logprob: -3.351524591445923
    5. 'ry' → logprob: -3.351524591445923
    6. '_k' → logprob: -4.226524353027344
    7. 'op' → logprob: -4.476524353027344
    8. '_con' → logprob: -4.851524353027344
    9. 'r' → logprob: -4.976524353027344
    10. '_g' → logprob: -5.476524353027344

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9611713290214539
    2. '_' → logprob: -1.7111713886260986
    3. '=' → logprob: -2.4611713886260986
    4. 'e' → logprob: -2.9611713886260986
    5. 'im' → logprob: -3.7111713886260986
    6. 'ime' → logprob: -3.9611713886260986
    7. 'arget' → logprob: -4.2111711502075195
    8. 'r' → logprob: -4.3361711502075195
    9. 'imes' → logprob: -4.3361711502075195
    10. '_=' → logprob: -4.3361711502075195

Token 243: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26352155208587646
    2. '[' → logprob: -2.263521671295166
    3. '0' → logprob: -2.513521671295166
    4. '_' → logprob: -4.263521671295166
    5. 'set' → logprob: -5.263521671295166
    6. '[]
' → logprob: -5.388521671295166
    7. '[P' → logprob: -5.513521671295166
    8. '[int' → logprob: -5.888521671295166
    9. ' []' → logprob: -5.888521671295166
    10. '1' → logprob: -6.138521671295166

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4183017313480377
    2. 'False' → logprob: -1.9183017015457153
    3. 'P' → logprob: -3.043301820755005
    4. '[]' → logprob: -3.668301820755005
    5. ']' → logprob: -3.918301820755005
    6. 'i' → logprob: -3.918301820755005
    7. 'None' → logprob: -4.168301582336426
    8. '(' → logprob: -4.293301582336426
    9. '()]' → logprob: -4.418301582336426
    10. '-' → logprob: -4.793301582336426

Token 245: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015468176454305649
    2. ']*' → logprob: -4.640468120574951
    3. ']*(' → logprob: -5.640468120574951
    4. ' for' → logprob: -6.640468120574951
    5. 'for' → logprob: -7.640468120574951
    6. ' ]' → logprob: -8.39046859741211
    7. ']+' → logprob: -9.26546859741211
    8. ',' → logprob: -10.64046859741211
    9. ']int' → logprob: -13.26546859741211
    10. ']_' → logprob: -13.76546859741211

Token 246: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.176947600673884e-05
    2. ' _' → logprob: -12.000021934509277
    3. '_N' → logprob: -12.625021934509277
    4. ' ' → logprob: -12.750021934509277
    5. '_AM' → logprob: -13.125021934509277
    6. 'len' → logprob: -13.250021934509277
    7. '(' → logprob: -13.375021934509277
    8. '(_' → logprob: -13.750021934509277
    9. '```' → logprob: -14.750021934509277
    10. '_am' → logprob: -14.875021934509277

Token 247: '+' (ID: 10)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05610904097557068
    2. '+' → logprob: -2.9311089515686035
    3. '_AM' → logprob: -7.6811089515686035
    4. ' _' → logprob: -8.056109428405762
    5. ' +' → logprob: -8.556109428405762
    6. '_N' → logprob: -9.431109428405762
    7. '_A' → logprob: -9.806109428405762
    8. '000' → logprob: -10.681109428405762
    9. '<_' → logprob: -11.306109428405762
    10. '*_' → logprob: -11.306109428405762

Token 248: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.440506407059729e-05
    2. ' _' → logprob: -11.00003433227539
    3. '_N' → logprob: -12.00003433227539
    4. ' ' → logprob: -12.75003433227539
    5. '_AM' → logprob: -12.75003433227539
    6. 'Am' → logprob: -14.00003433227539
    7. '```' → logprob: -14.00003433227539
    8. 'N' → logprob: -14.25003433227539
    9. '   ' → logprob: -14.62503433227539
    10. '_am' → logprob: -14.75003433227539

Token 249: 'Am' (ID: 6275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2014218121767044
    2. 'Am' → logprob: -1.701421856880188
    3. '_AM' → logprob: -13.451421737670898
    4. ''Am' → logprob: -13.576421737670898
    5. '_A' → logprob: -14.201421737670898
    6. ' Am' → logprob: -14.201421737670898
    7. ' _' → logprob: -14.201421737670898
    8. 'N' → logprob: -14.326421737670898
    9. '_N' → logprob: -14.826421737670898
    10. ' ' → logprob: -15.076421737670898

Token 250: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.010837343521416187
    2. 'Am' → logprob: -4.760837554931641
    3. '_nt' → logprob: -7.010837554931641
    4. 'ant' → logprob: -7.885837554931641
    5. 'Ant' → logprob: -8.26083755493164
    6. '_N' → logprob: -8.38583755493164
    7. 'N' → logprob: -8.88583755493164
    8. 'ont' → logprob: -9.76083755493164
    9. 'Of' → logprob: -9.88583755493164
    10. 'Nt' → logprob: -10.13583755493164

Token 251: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -2.939851037808694e-05
    2. 'of' → logprob: -10.875029563903809
    3. '_of' → logprob: -12.125029563903809
    4. 'O' → logprob: -12.875029563903809
    5. '[' → logprob: -14.750029563903809
    6. '
' → logprob: -15.000029563903809
    7. 'Nodes' → logprob: -15.125029563903809
    8. ' Of' → logprob: -15.250029563903809
    9. 'OF' → logprob: -15.500029563903809
    10. '(Of' → logprob: -15.500029563903809

Token 252: 'Nodes' (ID: 16704)
  Prédit: 'Nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nodes' → logprob: -0.005675991531461477
    2. '_nodes' → logprob: -5.255675792694092
    3. '_N' → logprob: -8.25567626953125
    4. 'odes' → logprob: -9.50567626953125
    5. '.Nodes' → logprob: -9.75567626953125
    6. 'N' → logprob: -10.50567626953125
    7. ' Nodes' → logprob: -11.25567626953125
    8. 'nodes' → logprob: -13.25567626953125
    9. '```' → logprob: -13.50567626953125
    10. 'Node' → logprob: -14.38067626953125

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ')
' → logprob: -11.375018119812012
    3. ' )' → logprob: -12.500018119812012
    4. '+' → logprob: -14.125018119812012
    5. '_)' → logprob: -14.750018119812012
    6. '))' → logprob: -14.750018119812012
    7. ')

' → logprob: -14.875018119812012
    8. '*)' → logprob: -15.875018119812012
    9. '+)' → logprob: -16.000019073486328
    10. ')...' → logprob: -16.000019073486328

Token 254: 'CHECK' (ID: 73978)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19322046637535095
    2. 'def' → logprob: -1.8182204961776733
    3. '_stack' → logprob: -6.193220615386963
    4. 'import' → logprob: -6.318220615386963
    5. 'from' → logprob: -6.568220615386963
    6. '_t' → logprob: -6.693220615386963
    7. 'stack' → logprob: -7.068220615386963
    8. '_for' → logprob: -7.693220615386963
    9. 'visited' → logprob: -7.818220615386963
    10. 'Q' → logprob: -7.943220615386963

Token 255: 'POINT' (ID: 42788)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2368394136428833
    2. '
' → logprob: -1.4868394136428833
    3. 'def' → logprob: -1.7368394136428833
    4. '

' → logprob: -2.1118392944335938
    5. '_stack' → logprob: -3.3618392944335938
    6. 'for' → logprob: -3.6118392944335938
    7. '=' → logprob: -3.7368392944335938
    8. 'stack' → logprob: -3.9868392944335938
    9. 'import' → logprob: -4.736839294433594
    10. '_' → logprob: -4.861839294433594

Token 256: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5875782370567322
    2. 'for' → logprob: -0.8375782370567322
    3. ' for' → logprob: -5.587578296661377
    4. '
' → logprob: -6.087578296661377
    5. '<|end|>' → logprob: -6.587578296661377
    6. '_' → logprob: -6.837578296661377
    7. 'import' → logprob: -8.087577819824219
    8. '_stack' → logprob: -8.087577819824219
    9. ')' → logprob: -8.212577819824219
    10. '#' → logprob: -8.462577819824219

Token 257: ' lambda' (ID: 27871)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.061042070388794
    2. '0' → logprob: -1.311042070388794
    3. '_' → logprob: -2.186042070388794
    4. '100' → logprob: -2.686042070388794
    5. '1' → logprob: -3.061042070388794
    6. '-' → logprob: -3.061042070388794
    7. '[' → logprob: -4.436041831970215
    8. '_t' → logprob: -4.436041831970215
    9. '[]' → logprob: -4.436041831970215
    10. '999' → logprob: -4.686041831970215

Token 258: ' k' (ID: 372)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7788997292518616
    2. 'x' → logprob: -1.2788996696472168
    3. ' lambda' → logprob: -2.653899669647217
    4. 'lambda' → logprob: -3.278899669647217
    5. '_' → logprob: -3.403899669647217
    6. ' _' → logprob: -3.528899669647217
    7. ' i' → logprob: -4.403899669647217
    8. ' n' → logprob: -4.778899669647217
    9. 'i' → logprob: -4.903899669647217
    10. 'n' → logprob: -5.153899669647217

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49603235721588135
    2. 'k' → logprob: -1.7460323572158813
    3. ' k' → logprob: -2.246032238006592
    4. ' :' → logprob: -2.371032238006592
    5. ':k' → logprob: -5.121032238006592
    6. '_:' → logprob: -5.996032238006592
    7. '(k' → logprob: -6.246032238006592
    8. ',k' → logprob: -6.871032238006592
    9. ' ' → logprob: -7.246032238006592
    10. ',' → logprob: -7.246032238006592

Token 260: ' _' (ID: 1175)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8904518485069275
    2. ' all' → logprob: -2.0154519081115723
    3. 'k' → logprob: -2.1404519081115723
    4. ' _' → logprob: -2.7654519081115723
    5. '_k' → logprob: -2.7654519081115723
    6. '_t' → logprob: -3.0154519081115723
    7. '_g' → logprob: -3.6404519081115723
    8. ' (' → logprob: -3.8904519081115723
    9. '(k' → logprob: -4.140451908111572
    10. ' sum' → logprob: -4.265451908111572

Token 261: 'tl' (ID: 15894)
  Prédit: 'tl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -0.0340094119310379
    2. '_t' → logprob: -4.7840094566345215
    3. 'P' → logprob: -5.2840094566345215
    4. 'UF' → logprob: -5.5340094566345215
    5. '_P' → logprob: -6.1590094566345215
    6. 'guru' → logprob: -6.1590094566345215
    7. 'len' → logprob: -6.2840094566345215
    8. 'TL' → logprob: -6.2840094566345215
    9. 'kon' → logprob: -6.4090094566345215
    10. 'sum' → logprob: -6.9090094566345215

Token 262: '[k' (ID: 14298)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16533690690994263
    2. ']==' → logprob: -2.790336847305298
    3. ']>=' → logprob: -2.915336847305298
    4. ']!=' → logprob: -3.915336847305298
    5. ']>' → logprob: -4.415337085723877
    6. ' ]' → logprob: -6.290337085723877
    7. ']<=' → logprob: -6.415337085723877
    8. ']<' → logprob: -7.790337085723877
    9. ']+=' → logprob: -8.165336608886719
    10. '])' → logprob: -9.415336608886719

Token 264: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' weird' (ID: 28783)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053509827703237534
    2. 'for' → logprob: -3.6785097122192383
    3. 'import' → logprob: -4.553509712219238
    4. 'from' → logprob: -5.303509712219238
    5. 'visited' → logprob: -5.303509712219238
    6. '_' → logprob: -6.678509712219238
    7. 'stack' → logprob: -7.053509712219238
    8. '_stack' → logprob: -7.303509712219238
    9. '#' → logprob: -7.928509712219238
    10. '0' → logprob: -8.178509712219238

Token 267: ' helper' (ID: 25246)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033828381448984146
    2. '
' → logprob: -4.283828258514404
    3. 'visited' → logprob: -4.783828258514404
    4. 'import' → logprob: -5.783828258514404
    5. '

' → logprob: -6.658828258514404
    6. '<|end|>' → logprob: -6.658828258514404
    7. '_stack' → logprob: -6.783828258514404
    8. 'for' → logprob: -6.908828258514404
    9. 'stack' → logprob: -7.158828258514404
    10. '_' → logprob: -8.033828735351562

Token 268: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05579172074794769
    2. 'for' → logprob: -3.9307916164398193
    3. 'visited' → logprob: -4.055791854858398
    4. 'stack' → logprob: -5.055791854858398
    5. 'import' → logprob: -6.055791854858398
    6. '_stack' → logprob: -6.180791854858398
    7. 'dfs' → logprob: -7.555791854858398
    8. 'Q' → logprob: -7.555791854858398
    9. 'from' → logprob: -7.805791854858398
    10. '#' → logprob: -8.305791854858398

Token 269: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04726903885602951
    2. 'visited' → logprob: -3.922269105911255
    3. 'for' → logprob: -4.172268867492676
    4. 'stack' → logprob: -5.672268867492676
    5. 'import' → logprob: -5.922268867492676
    6. '_stack' → logprob: -7.172268867492676
    7. '_' → logprob: -7.547268867492676
    8. 'Q' → logprob: -7.922268867492676
    9. 'from' → logprob: -8.047268867492676
    10. 'dfs' → logprob: -8.172268867492676

Token 270: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00866609811782837
    2. ' collections' → logprob: -4.758666038513184
    3. 'heap' → logprob: -10.758666038513184
    4. 'sys' → logprob: -10.883666038513184
    5. 'queue' → logprob: -12.008666038513184
    6. '_' → logprob: -12.758666038513184
    7. 'collection' → logprob: -13.633666038513184
    8. 'math' → logprob: -14.883666038513184
    9. ' heap' → logprob: -15.258666038513184
    10. '_collection' → logprob: -15.258666038513184

Token 271: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.003612662898376584
    2. ' import' → logprob: -5.628612518310547
    3. 'port' → logprob: -12.753612518310547
    4. '```' → logprob: -12.878612518310547
    5. '	import' → logprob: -13.628612518310547
    6. '
' → logprob: -13.878612518310547
    7. '.import' → logprob: -14.003612518310547
    8. 'deque' → logprob: -14.128612518310547
    9. '_import' → logprob: -14.628612518310547
    10. 'from' → logprob: -15.003612518310547

Token 272: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0004436587623786181
    2. ' deque' → logprob: -7.750443458557129
    3. 'default' → logprob: -11.500443458557129
    4. 'collections' → logprob: -13.250443458557129
    5. 'de' → logprob: -14.125443458557129
    6. ' defaultdict' → logprob: -15.625443458557129
    7. 'queue' → logprob: -16.375444412231445
    8. 'sys' → logprob: -18.125444412231445
    9. '_' → logprob: -19.375444412231445
    10. 'stack' → logprob: -20.125444412231445

Token 273: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48144444823265076
    2. 'visited' → logprob: -2.3564443588256836
    3. '
' → logprob: -2.4814443588256836
    4. 'Q' → logprob: -2.6064443588256836
    5. 'q' → logprob: -3.4814443588256836
    6. 'queue' → logprob: -3.8564443588256836
    7. 'deque' → logprob: -4.231444358825684
    8. '

' → logprob: -4.231444358825684
    9. 'dq' → logprob: -4.856444358825684
    10. 'd' → logprob: -5.481444358825684

Token 274: ' super' (ID: 2539)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.2587517499923706
    2. ' deque' → logprob: -2.00875186920166
    3. '_de' → logprob: -3.25875186920166
    4. ' dq' → logprob: -3.50875186920166
    5. 'dq' → logprob: -4.63375186920166
    6. 'de' → logprob: -4.75875186920166
    7. ' de' → logprob: -5.25875186920166
    8. 'Deque' → logprob: -7.25875186920166
    9. ' De' → logprob: -7.63375186920166
    10. 'd' → logprob: -7.88375186920166

Token 275: 'q' (ID: 80)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.006988633889704943
    2. 'import' → logprob: -6.256988525390625
    3. 'collections' → logprob: -6.256988525390625
    4. 'queue' → logprob: -7.256988525390625
    5. '<|end|>' → logprob: -7.256988525390625
    6. '```' → logprob: -7.631988525390625
    7. '_de' → logprob: -8.006988525390625
    8. 'que' → logprob: -9.256988525390625
    9. '_' → logprob: -9.256988525390625
    10. 'Deque' → logprob: -9.381988525390625

Token 276: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6345326900482178
    2. '

' → logprob: -1.6345326900482178
    3. 'def' → logprob: -1.6345326900482178
    4. 'Q' → logprob: -3.5095326900482178
    5. 'dq' → logprob: -4.509532928466797
    6. 'deque' → logprob: -4.884532928466797
    7. 'q' → logprob: -5.134532928466797
    8. '_' → logprob: -5.884532928466797
    9. 'D' → logprob: -6.009532928466797
    10. '
' → logprob: -6.384532928466797

Token 277: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22347864508628845
    2. 'Q' → logprob: -2.9734785556793213
    3. 'visited' → logprob: -2.9734785556793213
    4. 'q' → logprob: -3.4734785556793213
    5. 'for' → logprob: -4.4734787940979
    6. 'queue' → logprob: -4.9734787940979
    7. 'dist' → logprob: -4.9734787940979
    8. 'dq' → logprob: -5.3484787940979
    9. '_q' → logprob: -5.7234787940979
    10. 'd' → logprob: -5.9734787940979

Token 278: ' idx' (ID: 14016)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12104102224111557
    2. ' i' → logprob: -2.7460410594940186
    3. '_' → logprob: -3.4960410594940186
    4. ' node' → logprob: -4.7460408210754395
    5. ' k' → logprob: -5.3710408210754395
    6. ' u' → logprob: -6.1210408210754395
    7. ' v' → logprob: -7.2460408210754395
    8. '_node' → logprob: -7.6210408210754395
    9. ' ' → logprob: -7.7460408210754395
    10. ' x' → logprob: -7.7460408210754395

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3885733485221863
    2. 'in' → logprob: -1.138573408126831
    3. ' ' → logprob: -6.763573169708252
    4. ',' → logprob: -8.76357364654541
    5. '_' → logprob: -9.26357364654541
    6. '_in' → logprob: -9.51357364654541
    7. ' _' → logprob: -9.63857364654541
    8. '1' → logprob: -10.76357364654541
    9. 'import' → logprob: -11.01357364654541
    10. '  ' → logprob: -11.13857364654541

Token 280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005576772149652243
    2. ' range' → logprob: -5.2555766105651855
    3. '_' → logprob: -8.255577087402344
    4. '(range' → logprob: -10.630577087402344
    5. 'P' → logprob: -11.130577087402344
    6. '1' → logprob: -11.380577087402344
    7. '_range' → logprob: -11.880577087402344
    8. 'Neighbor' → logprob: -11.880577087402344
    9. '(' → logprob: -12.005577087402344
    10. 'in' → logprob: -13.380577087402344

Token 281: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015051016816869378
    2. '(_' → logprob: -6.501504898071289
    3. ' (' → logprob: -13.501504898071289
    4. '_' → logprob: -15.001504898071289
    5. '1' → logprob: -15.126504898071289
    6. '(len' → logprob: -15.626504898071289
    7. ',' → logprob: -15.876504898071289
    8. ' ' → logprob: -16.00150489807129
    9. '   ' → logprob: -16.12650489807129
    10. '(
' → logprob: -16.50150489807129

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034510161727666855
    2. '_' → logprob: -3.4095101356506348
    3. '(' → logprob: -7.784510135650635
    4. ' ' → logprob: -7.909510135650635
    5. 'Am' → logprob: -10.659510612487793
    6. '_AM' → logprob: -11.034510612487793
    7. '_am' → logprob: -11.284510612487793
    8. '   ' → logprob: -11.409510612487793
    9. '2' → logprob: -11.659510612487793
    10. '(_' → logprob: -13.409510612487793

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008146785199642181
    2. ',_' → logprob: -5.5081467628479
    3. ' ,' → logprob: -5.5081467628479
    4. ',
' → logprob: -12.508147239685059
    5. '_,' → logprob: -13.883147239685059
    6. ',len' → logprob: -14.508147239685059
    7. '   ' → logprob: -14.758147239685059
    8. ' ' → logprob: -15.633147239685059
    9. ' _' → logprob: -16.383146286010742
    10. ',n' → logprob: -16.383146286010742

Token 284: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000192812061868608
    2. ' _' → logprob: -8.750192642211914
    3. ' ' → logprob: -11.000192642211914
    4. '1' → logprob: -12.250192642211914
    5. '   ' → logprob: -12.250192642211914
    6. '_AM' → logprob: -13.000192642211914
    7. '(' → logprob: -13.125192642211914
    8. '  ' → logprob: -13.375192642211914
    9. '_A' → logprob: -14.875192642211914
    10. '_N' → logprob: -15.000192642211914

Token 285: 'Am' (ID: 6275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001462107611587271
    2. 'Am' → logprob: -9.00014591217041
    3. ' _' → logprob: -11.12514591217041
    4. '(' → logprob: -12.75014591217041
    5. '(_' → logprob: -13.12514591217041
    6. '   ' → logprob: -14.25014591217041
    7. ' ' → logprob: -15.00014591217041
    8. '_AM' → logprob: -15.12514591217041
    9. '
' → logprob: -15.25014591217041
    10. '+' → logprob: -15.25014591217041

Token 286: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -4.215330409351736e-05
    2. 't' → logprob: -11.250041961669922
    3. 'Am' → logprob: -11.375041961669922
    4. '_nt' → logprob: -12.000041961669922
    5. 'cnt' → logprob: -13.375041961669922
    6. '_nodes' → logprob: -13.375041961669922
    7. 'N' → logprob: -13.625041961669922
    8. 'lt' → logprob: -13.875041961669922
    9. '_' → logprob: -13.875041961669922
    10. '_m' → logprob: -14.125041961669922

Token 287: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.2551640272140503
    2. '+' → logprob: -2.25516414642334
    3. '_nodes' → logprob: -3.00516414642334
    4. 'Nodes' → logprob: -3.50516414642334
    5. '_of' → logprob: -4.13016414642334
    6. 'of' → logprob: -4.50516414642334
    7. '_N' → logprob: -5.00516414642334
    8. 'odes' → logprob: -5.38016414642334
    9. 'z' → logprob: -8.00516414642334
    10. 'N' → logprob: -8.38016414642334

Token 288: 'Nodes' (ID: 16704)
  Prédit: 'Nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nodes' → logprob: -0.03408176451921463
    2. 'odes' → logprob: -3.4090816974639893
    3. '_nodes' → logprob: -8.15908145904541
    4. 'nodes' → logprob: -9.65908145904541
    5. 'N' → logprob: -10.78408145904541
    6. '+' → logprob: -10.90908145904541
    7. ')' → logprob: -11.40908145904541
    8. 'x' → logprob: -11.53408145904541
    9. 's' → logprob: -12.53408145904541
    10. ' Nodes' → logprob: -12.65908145904541

Token 289: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032381978817284107
    2. ' +' → logprob: -5.753238201141357
    3. '):
' → logprob: -10.7532377243042
    4. '+
' → logprob: -10.8782377243042
    5. '()+' → logprob: -11.3782377243042
    6. '):' → logprob: -12.2532377243042
    7. '
' → logprob: -13.8782377243042
    8. '```' → logprob: -14.1282377243042
    9. '   ' → logprob: -14.5032377243042
    10. '[' → logprob: -15.1282377243042

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.625021934509277
    5. '+' → logprob: -15.750021934509277
    6. '
' → logprob: -17.000022888183594
    7. '```' → logprob: -17.125022888183594
    8. '_' → logprob: -17.750022888183594
    9. '):
' → logprob: -17.875022888183594
    10. '

' → logprob: -18.125022888183594

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.037235308438539505
    2. ':' → logprob: -3.5372352600097656
    3. '):
' → logprob: -4.912235260009766
    4. ')' → logprob: -10.037235260009766
    5. ':
' → logprob: -10.037235260009766
    6. '   ' → logprob: -12.037235260009766
    7. ' ):' → logprob: -12.912235260009766
    8. ',' → logprob: -14.162235260009766
    9. ' :' → logprob: -14.162235260009766
    10. '):
' → logprob: -14.287235260009766

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005913154222071171
    2. ' if' → logprob: -5.255913257598877
    3. 'if' → logprob: -7.630913257598877
    4. ' visited' → logprob: -10.005912780761719
    5. ' queue' → logprob: -10.505912780761719
    6. '_queue' → logprob: -10.630912780761719
    7. 'visited' → logprob: -11.005912780761719
    8. '   ' → logprob: -11.630912780761719
    9. 'q' → logprob: -11.755912780761719
    10. ' _' → logprob: -11.880912780761719

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07983093708753586
    2. '   ' → logprob: -2.9548308849334717
    3. 'q' → logprob: -4.454831123352051
    4. '_q' → logprob: -5.954831123352051
    5. 'queue' → logprob: -6.079831123352051
    6. 'super' → logprob: -6.579831123352051
    7. 'for' → logprob: -6.704831123352051
    8. ' if' → logprob: -6.704831123352051
    9. 'tl' → logprob: -6.829831123352051
    10. 'visited' → logprob: -7.204831123352051

Token 294: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26882168650627136
    2. ' P' → logprob: -2.6438217163085938
    3. ' CHECK' → logprob: -2.7688217163085938
    4. '_CHECK' → logprob: -3.3938217163085938
    5. 'P' → logprob: -4.018821716308594
    6. ' _' → logprob: -4.018821716308594
    7. 'CHECK' → logprob: -4.393821716308594
    8. 'not' → logprob: -4.643821716308594
    9. '_P' → logprob: -6.143821716308594
    10. '_t' → logprob: -6.893821716308594

Token 295: ' _' (ID: 1175)
  Prédit: 'CHECK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CHECK' → logprob: -1.0162689685821533
    2. '_CHECK' → logprob: -1.1412689685821533
    3. ' CHECK' → logprob: -1.2662689685821533
    4. '_check' → logprob: -4.766268730163574
    5. '_t' → logprob: -5.016268730163574
    6. 'P' → logprob: -5.266268730163574
    7. ' _' → logprob: -5.391268730163574
    8. '	CHECK' → logprob: -5.391268730163574
    9. ' P' → logprob: -5.516268730163574
    10. '_C' → logprob: -6.766268730163574

Token 296: 'tl' (ID: 15894)
  Prédit: 'tl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -0.001682559377513826
    2. 'CHECK' → logprob: -7.001682758331299
    3. 'P' → logprob: -8.00168228149414
    4. 'chk' → logprob: -8.37668228149414
    5. 'checked' → logprob: -10.50168228149414
    6. '_t' → logprob: -10.50168228149414
    7. 'tls' → logprob: -11.00168228149414
    8. 'CHK' → logprob: -11.00168228149414
    9. 'visited' → logprob: -11.37668228149414
    10. 'CH' → logprob: -11.37668228149414

Token 297: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.750006675720215
    3. '[_' → logprob: -13.500006675720215
    4. '```' → logprob: -13.750006675720215
    5. ' [' → logprob: -14.625006675720215
    6. 'idx' → logprob: -14.750006675720215
    7. '[id' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.6250057220459
    9. '
' → logprob: -16.8750057220459
    10. '(idx' → logprob: -17.2500057220459

Token 298: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.38707059621810913
    2. ']:
' → logprob: -1.137070655822754
    3. ']:
' → logprob: -9.512070655822754
    4. ':' → logprob: -9.637070655822754
    5. ':
' → logprob: -10.887070655822754
    6. ']' → logprob: -11.012070655822754
    7. ']:

' → logprob: -11.262070655822754
    8. ' ]' → logprob: -13.012070655822754
    9. '():
' → logprob: -13.387070655822754
    10. ']:


' → logprob: -13.512070655822754

Token 299: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9592469334602356
    2. ':
' → logprob: -1.0842468738555908
    3. '       ' → logprob: -1.7092468738555908
    4. '   ' → logprob: -3.084246873855591
    5. ' and' → logprob: -3.959246873855591
    6. 'q' → logprob: -4.83424711227417
    7. ' q' → logprob: -4.95924711227417
    8. ' queue' → logprob: -5.33424711227417
    9. '_queue' → logprob: -5.70924711227417
    10. '_q' → logprob: -6.20924711227417

Token 300: ' _' (ID: 1175)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.7169483304023743
    2. 'q' → logprob: -1.0919482707977295
    3. 'queue' → logprob: -2.4669482707977295
    4. 'dq' → logprob: -3.4669482707977295
    5. '_queue' → logprob: -4.716948509216309
    6. '   ' → logprob: -4.716948509216309
    7. '_t' → logprob: -4.841948509216309
    8. 'que' → logprob: -4.841948509216309
    9. 'Q' → logprob: -4.841948509216309
    10. '_d' → logprob: -5.216948509216309

Token 301: 'tl' (ID: 15894)
  Prédit: 'tl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -0.23332898318767548
    2. 'q' → logprob: -1.983328938484192
    3. 'guru' → logprob: -3.2333290576934814
    4. 'queue' → logprob: -4.608328819274902
    5. 'deque' → logprob: -4.983328819274902
    6. 'dq' → logprob: -6.108328819274902
    7. 'super' → logprob: -6.483328819274902
    8. '_' → logprob: -6.608328819274902
    9. 'stack' → logprob: -6.858328819274902
    10. '_queue' → logprob: -7.233328819274902

Token 302: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.975612187583465e-05
    2. ' [' → logprob: -12.000029563903809
    3. 'idx' → logprob: -12.000029563903809
    4. '[' → logprob: -12.625029563903809
    5. '=' → logprob: -13.250029563903809
    6. '[id' → logprob: -13.375029563903809
    7. '   ' → logprob: -13.500029563903809
    8. '```' → logprob: -13.500029563903809
    9. '[q' → logprob: -13.875029563903809
    10. '(idx' → logprob: -13.875029563903809

Token 303: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0206806231290102
    2. ']=' → logprob: -3.8956806659698486
    3. '=' → logprob: -10.02068042755127
    4. ' ]' → logprob: -10.39568042755127
    5. '].' → logprob: -11.02068042755127
    6. 'queue' → logprob: -11.89568042755127
    7. ' =' → logprob: -12.14568042755127
    8. ']=(' → logprob: -12.27068042755127
    9. ']+=' → logprob: -12.39568042755127
    10. 'deque' → logprob: -12.39568042755127

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08907076716423035
    2. ' =' → logprob: -2.4640707969665527
    3. '=q' → logprob: -9.839070320129395
    4. '+=' → logprob: -10.964070320129395
    5. '.append' → logprob: -11.214070320129395
    6. ' ' → logprob: -11.964070320129395
    7. '=
' → logprob: -12.339070320129395
    8. 'super' → logprob: -12.339070320129395
    9. '.=' → logprob: -12.464070320129395
    10. 'q' → logprob: -12.964070320129395

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13278037309646606
    2. 'P' → logprob: -2.7577803134918213
    3. 'idx' → logprob: -2.8827803134918213
    4. '-' → logprob: -6.6327805519104
    5. 'super' → logprob: -6.6327805519104
    6. 'True' → logprob: -7.1327805519104
    7. 'float' → logprob: -7.8827805519104
    8. 'sys' → logprob: -8.507780075073242
    9. '999' → logprob: -8.882780075073242
    10. '100' → logprob: -8.882780075073242

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24071918427944183
    2. 'P' → logprob: -2.1157190799713135
    3. 'idx' → logprob: -2.4907190799713135
    4. 'super' → logprob: -5.365719318389893
    5. 'deque' → logprob: -5.990719318389893
    6. '-' → logprob: -6.615719318389893
    7. 'True' → logprob: -7.615719318389893
    8. 'float' → logprob: -8.240718841552734
    9. 'int' → logprob: -8.740718841552734
    10. 'sys' → logprob: -8.990718841552734

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013266648165881634
    2. '
' → logprob: -7.251326560974121
    3. 'q' → logprob: -8.251326560974121
    4. 'queue' → logprob: -8.626326560974121
    5. '   ' → logprob: -10.001326560974121
    6. '_queue' → logprob: -10.751326560974121
    7. ' queue' → logprob: -10.876326560974121
    8. ',' → logprob: -11.251326560974121
    9. 'super' → logprob: -11.376326560974121
    10. '
' → logprob: -11.376326560974121

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009078474715352058
    2. 'queue' → logprob: -5.384078502655029
    3. 'q' → logprob: -5.634078502655029
    4. '
' → logprob: -8.134078025817871
    5. 'super' → logprob: -8.509078025817871
    6. ' queue' → logprob: -8.884078025817871
    7. '_queue' → logprob: -9.134078025817871
    8. '   ' → logprob: -10.509078025817871
    9. '               ' → logprob: -11.384078025817871
    10. ',' → logprob: -11.634078025817871

Token 309: ' Q' (ID: 1486)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17523592710494995
    2. 'dq' → logprob: -2.4252359867095947
    3. 'queue' → logprob: -2.9252359867095947
    4. 'Q' (adapté à ' Q') → logprob: -4.675235748291016
    5. 'super' → logprob: -5.175235748291016
    6. 'que' → logprob: -6.050235748291016
    7. 'qq' → logprob: -7.925235748291016
    8. 'sq' → logprob: -8.675235748291016
    9. 'deque' → logprob: -9.300235748291016
    10. 'd' → logprob: -9.550235748291016

Token 310: 'QQ' (ID: 38291)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022604703903198
    2. '=' → logprob: -1.9102261066436768
    3. '(super' → logprob: -14.535225868225098
    4. '.append' → logprob: -14.660225868225098
    5. ' ' → logprob: -15.160225868225098
    6. '(queue' → logprob: -15.410225868225098
    7. 'super' → logprob: -15.910225868225098
    8. '＝' → logprob: -16.285226821899414
    9. ')' → logprob: -16.910226821899414
    10. '(' → logprob: -16.910226821899414

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326693296432495
    2. '=' → logprob: -1.3132669925689697
    3. 'super' → logprob: -13.18826675415039
    4. '.append' → logprob: -13.31326675415039
    5. ' ' → logprob: -14.06326675415039
    6. '(super' → logprob: -15.31326675415039
    7. '   ' → logprob: -16.43826675415039
    8. 'q' → logprob: -16.43826675415039
    9. ' super' → logprob: -16.68826675415039
    10. ':' → logprob: -17.06326675415039

Token 312: ' super' (ID: 2539)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.0008060562540777028
    2. ' super' → logprob: -7.125805854797363
    3. 'deque' → logprob: -13.500805854797363
    4. '(super' → logprob: -16.37580680847168
    5. '	super' → logprob: -17.00080680847168
    6. '
' → logprob: -17.12580680847168
    7. 'uper' → logprob: -18.25080680847168
    8. '   ' → logprob: -18.25080680847168
    9. '```' → logprob: -18.25080680847168
    10. 'sup' → logprob: -18.87580680847168

Token 313: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1398757123970427e-05
    2. 'Q' → logprob: -12.625011444091797
    3. '()' → logprob: -13.125011444091797
    4. '```' → logprob: -13.375011444091797
    5. 's' → logprob: -13.625011444091797
    6. 'z' → logprob: -15.000011444091797
    7. 'k' → logprob: -15.250011444091797
    8. 'r' → logprob: -15.375011444091797
    9. 'x' → logprob: -15.375011444091797
    10. '()
' → logprob: -15.750011444091797

Token 314: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0075735002756118774
    2. '()' → logprob: -5.75757360458374
    3. '()
' → logprob: -6.00757360458374
    4. '([(' → logprob: -6.25757360458374
    5. '[(' → logprob: -12.507573127746582
    6. '(' → logprob: -13.132573127746582
    7. '((' → logprob: -13.382573127746582
    8. '[' → logprob: -13.757573127746582
    9. '()

' → logprob: -14.132573127746582
    10. '([])
' → logprob: -15.882573127746582

Token 315: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00014489953173324466
    2. '(idx' → logprob: -9.000144958496094
    3. ' idx' → logprob: -10.750144958496094
    4. '[idx' → logprob: -16.750144958496094
    5. '(' → logprob: -17.250144958496094
    6. '	idx' → logprob: -18.500144958496094
    7. 'index' → logprob: -19.375144958496094
    8. '   ' → logprob: -19.500144958496094
    9. '.idx' → logprob: -20.875144958496094
    10. ' (' → logprob: -21.000144958496094

Token 316: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004091104958206415
    2. '])
' → logprob: -5.504091262817383
    3. '])

' → logprob: -11.629091262817383
    4. ' ])' → logprob: -12.879091262817383
    5. '])
' → logprob: -14.379091262817383
    6. ')])' → logprob: -15.129091262817383
    7. ')' → logprob: -16.254091262817383
    8. ']);' → logprob: -16.504091262817383
    9. '])]' → logprob: -16.629091262817383
    10. ''])' → logprob: -17.504091262817383

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8152402639389038
    2. 'while' → logprob: -1.3152402639389038
    3. '   ' → logprob: -1.5652402639389038
    4. ' while' → logprob: -2.6902403831481934
    5. '
' → logprob: -4.440240383148193
    6. '	while' → logprob: -8.690239906311035
    7. '```' → logprob: -9.065239906311035
    8. '  ' → logprob: -10.690239906311035
    9. ' ' → logprob: -10.690239906311035
    10. '        
' → logprob: -11.690239906311035

Token 318: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00028255043434910476
    2. ' while' → logprob: -8.750282287597656
    3. '   ' → logprob: -9.000282287597656
    4. '	while' → logprob: -15.250282287597656
    5. '
' → logprob: -15.500282287597656
    6. '       ' → logprob: -15.875282287597656
    7. '```' → logprob: -17.000282287597656
    8. 'While' → logprob: -18.500282287597656
    9. '  ' → logprob: -18.875282287597656
    10. ' ' → logprob: -19.500282287597656

Token 319: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.3875083327293396
    2. 'QQ' → logprob: -1.1375083923339844
    3. ' len' → logprob: -8.637508392333984
    4. 'len' → logprob: -8.637508392333984
    5. 'Q' → logprob: -9.137508392333984
    6. '(Q' → logprob: -9.512508392333984
    7. ' QQ' → logprob: -9.762508392333984
    8. ' ' → logprob: -10.762508392333984
    9. '   ' → logprob: -11.637508392333984
    10. '(len' → logprob: -12.512508392333984

Token 320: 'QQ' (ID: 38291)
  Prédit: 'QQ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.00020592445798683912
    2. 'Q' → logprob: -8.500205993652344
    3. '
' → logprob: -14.625205993652344
    4. 'qq' → logprob: -14.750205993652344
    5. '(Q' → logprob: -14.750205993652344
    6. 'ZZ' → logprob: -15.125205993652344
    7. '_' → logprob: -15.375205993652344
    8. '_Q' → logprob: -15.875205993652344
    9. ' QQ' → logprob: -16.250205993652344
    10. '[' → logprob: -16.375205993652344

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08723174035549164
    2. '):' → logprob: -2.8372316360473633
    3. ':
' → logprob: -4.087231636047363
    4. '):
' → logprob: -4.837231636047363
    5. '>:' → logprob: -9.962231636047363
    6. ')' → logprob: -10.587231636047363
    7. 'not' → logprob: -10.712231636047363
    8. '.size' → logprob: -11.087231636047363
    9. '():' → logprob: -11.212231636047363
    10. ':not' → logprob: -11.212231636047363

Token 322: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4606599807739258
    2. '           ' → logprob: -1.5856599807739258
    3. 'x' → logprob: -1.7106599807739258
    4. ' x' → logprob: -2.210659980773926
    5. ' v' → logprob: -2.335659980773926
    6. 'cur' → logprob: -2.835659980773926
    7. 'u' → logprob: -3.460659980773926
    8. ' u' → logprob: -4.210659980773926
    9. ' cur' → logprob: -4.710659980773926
    10. 'node' → logprob: -4.710659980773926

Token 323: ' very' (ID: 1869)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1663936376571655
    2. 'cur' → logprob: -1.2913936376571655
    3. 'x' → logprob: -2.041393756866455
    4. 'u' → logprob: -2.416393756866455
    5. 'node' → logprob: -3.291393756866455
    6. 'curr' → logprob: -3.291393756866455
    7. 'now' → logprob: -3.666393756866455
    8. 'c' → logprob: -4.416393756866455
    9. 'top' → logprob: -4.666393756866455
    10. 'pos' → logprob: -4.916393756866455

Token 324: '_temp' (ID: 27535)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.816760778427124
    2. 'top' → logprob: -2.691760778427124
    3. 'old' → logprob: -2.816760778427124
    4. 'curr' → logprob: -2.941760778427124
    5. ' =' → logprob: -3.191760778427124
    6. 'current' → logprob: -3.316760778427124
    7. '_' → logprob: -3.566760778427124
    8. 'first' → logprob: -3.691760778427124
    9. 'node' → logprob: -3.691760778427124
    10. '_cur' → logprob: -3.691760778427124

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32551878690719604
    2. '=' → logprob: -1.3255188465118408
    3. '_node' → logprob: -4.825518608093262
    4. 'node' → logprob: -6.450518608093262
    5. '_idx' → logprob: -6.950518608093262
    6. 'idx' → logprob: -7.700518608093262
    7. '=node' → logprob: -8.450518608093262
    8. '_' → logprob: -8.575518608093262
    9. '_=' → logprob: -8.825518608093262
    10. '=current' → logprob: -9.700518608093262

Token 326: ' Q' (ID: 1486)
  Prédit: 'QQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.12695688009262085
    2. ' Q' → logprob: -2.1269569396972656
    3. 'Q' → logprob: -10.626956939697266
    4. ' QQ' → logprob: -12.501956939697266
    5. 'qq' → logprob: -14.751956939697266
    6. ' ' → logprob: -16.501956939697266
    7. '   ' → logprob: -16.626956939697266
    8. '_Q' → logprob: -16.626956939697266
    9. '	Q' → logprob: -17.126956939697266
    10. '(Q' → logprob: -17.501956939697266

Token 327: 'QQ' (ID: 38291)
  Prédit: 'QQ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.0024793429765850306
    2. 'Q' → logprob: -6.002479553222656
    3. '[' → logprob: -13.377479553222656
    4. '
' → logprob: -14.752479553222656
    5. ' QQ' → logprob: -14.752479553222656
    6. 'qq' → logprob: -14.877479553222656
    7. '=' → logprob: -15.627479553222656
    8. '(Q' → logprob: -16.002479553222656
    9. 'ZZ' → logprob: -16.377479553222656
    10. '(' → logprob: -16.877479553222656

Token 328: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00011939727846765891
    2. '.' → logprob: -9.37511920928955
    3. '.pop' → logprob: -10.37511920928955
    4. ' .' → logprob: -12.75011920928955
    5. '   ' → logprob: -14.87511920928955
    6. 'p' → logprob: -16.625120162963867
    7. '=' → logprob: -17.125120162963867
    8. '.dequeue' → logprob: -17.500120162963867
    9. ' =' → logprob: -18.875120162963867
    10. ' ' → logprob: -19.375120162963867

Token 329: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.006118624936789274
    2. 'op' → logprob: -5.1311187744140625
    3. 'opl' → logprob: -9.006118774414062
    4. 'ople' → logprob: -9.631118774414062
    5. 'opup' → logprob: -15.256118774414062
    6. 'opf' → logprob: -15.256118774414062
    7. 'o' → logprob: -15.506118774414062
    8. '   ' → logprob: -15.631118774414062
    9. 'oplevel' → logprob: -15.881118774414062
    10. '```' → logprob: -16.006118774414062

Token 330: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37525588274002075
    2. 'for' → logprob: -1.750255823135376
    3. ' for' → logprob: -2.500255823135376
    4. ')' → logprob: -4.000256061553955
    5. ')
' → logprob: -4.500256061553955
    6. '()
' → logprob: -4.750256061553955
    7. '
' → logprob: -4.875256061553955
    8. '   ' → logprob: -5.750256061553955
    9. '()' → logprob: -6.375256061553955
    10. '       ' → logprob: -6.750256061553955

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6224967241287231
    2. ' for' → logprob: -1.2474967241287231
    3. 'for' → logprob: -1.8724967241287231
    4. '   ' → logprob: -3.8724966049194336
    5. '       ' → logprob: -6.747496604919434
    6. '	for' → logprob: -8.497496604919434
    7. '            
' → logprob: -9.497496604919434
    8. '
' → logprob: -9.872496604919434
    9. '```' → logprob: -10.122496604919434
    10. '               ' → logprob: -10.372496604919434

Token 332: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019300628919154406
    2. ' for' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.626930236816406
    4. '	for' → logprob: -16.376930236816406
    5. '```' → logprob: -16.626930236816406
    6. '           ' → logprob: -17.501930236816406
    7. '
' → logprob: -17.876930236816406
    8. '            
' → logprob: -18.501930236816406
    9. '_for' → logprob: -18.501930236816406
    10. ' ' → logprob: -19.001930236816406

Token 333: ' zz' (ID: 41240)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6484864950180054
    2. 'ne' → logprob: -1.6484864950180054
    3. 'neighbor' → logprob: -1.8984864950180054
    4. 'nx' → logprob: -2.273486614227295
    5. 'nbr' → logprob: -2.773486614227295
    6. 'nei' → logprob: -3.023486614227295
    7. 'nb' → logprob: -3.523486614227295
    8. 'adj' → logprob: -3.648486614227295
    9. 'v' → logprob: -3.898486614227295
    10. '_ne' → logprob: -4.148486614227295

Token 334: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6330894827842712
    2. ' in' → logprob: -0.7580894827842712
    3. ' ' → logprob: -7.758089542388916
    4. '	in' → logprob: -10.758089065551758
    5. '_in' → logprob: -11.508089065551758
    6. ' ' → logprob: -11.633089065551758
    7. '_' → logprob: -12.258089065551758
    8. '<|end|>' → logprob: -12.508089065551758
    9. '<|end|>' → logprob: -12.633089065551758
    10. '  ' → logprob: -12.758089065551758

Token 335: ' Neighbor' (ID: 177795)
  Prédit: 'Neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Neighbor' → logprob: -0.0008066523587331176
    2. ' Neighbor' → logprob: -7.12580680847168
    3. 'Neighborhood' → logprob: -14.00080680847168
    4. 'Neighbour' → logprob: -14.50080680847168
    5. '	' → logprob: -15.75080680847168
    6. '_neighbor' → logprob: -16.12580680847168
    7. ' ' → logprob: -16.12580680847168
    8. '   ' → logprob: -16.50080680847168
    9. '(' → logprob: -16.62580680847168
    10. 'Friend' → logprob: -16.62580680847168

Token 336: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -11.250020027160645
    3. 's' → logprob: -12.000020027160645
    4. 'very' → logprob: -15.500020027160645
    5. 'zz' → logprob: -16.125019073486328
    6. '[z' → logprob: -18.125019073486328
    7. 'es' → logprob: -18.250019073486328
    8. 'з' → logprob: -18.250019073486328
    9. 'x' → logprob: -18.750019073486328
    10. 'sz' → logprob: -19.000019073486328

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6166903151315637e-05
    2. 'very' → logprob: -11.125016212463379
    3. ' very' → logprob: -14.375016212463379
    4. 'Very' → logprob: -14.500016212463379
    5. ' [' → logprob: -15.500016212463379
    6. '[
' → logprob: -16.875015258789062
    7. 'VERY' → logprob: -17.875015258789062
    8. '
' → logprob: -19.250015258789062
    9. '```' → logprob: -19.375015258789062
    10. '   ' → logprob: -19.375015258789062

Token 338: 'very' (ID: 1437)
  Prédit: 'very'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.0002666999935172498
    2. '[' → logprob: -8.625267028808594
    3. ' very' → logprob: -9.375267028808594
    4. 'Very' → logprob: -14.125267028808594
    5. ']' → logprob: -14.875267028808594
    6. 've' → logprob: -15.250267028808594
    7. 'VERY' → logprob: -15.375267028808594
    8. ' ' → logprob: -15.375267028808594
    9. '   ' → logprob: -16.375267028808594
    10. 'ver' → logprob: -16.500267028808594

Token 339: '_temp' (ID: 27535)
  Prédit: '_temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.006719759665429592
    2. 'temp' → logprob: -5.006719589233398
    3. '[temp' → logprob: -13.381719589233398
    4. '_TEMP' → logprob: -13.506719589233398
    5. ' temp' → logprob: -14.631719589233398
    6. '	temp' → logprob: -14.881719589233398
    7. '$temp' → logprob: -15.881719589233398
    8. 'Temp' → logprob: -16.2567195892334
    9. '_t' → logprob: -16.5067195892334
    10. '_' → logprob: -16.6317195892334

Token 340: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003960736095905304
    2. ':' → logprob: -6.003960609436035
    3. '):' → logprob: -7.003960609436035
    4. ']:
' → logprob: -8.253960609436035
    5. ']' → logprob: -8.378960609436035
    6. '>:' → logprob: -10.003960609436035
    7. '}:' → logprob: -10.628960609436035
    8. ']:
' → logprob: -11.878960609436035
    9. ']):' → logprob: -13.253960609436035
    10. '):
' → logprob: -13.753960609436035

Token 341: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016326900804415345
    2. ' if' → logprob: -6.5016326904296875
    3. 'if' → logprob: -9.126632690429688
    4. '                
' → logprob: -11.751632690429688
    5. '
' → logprob: -12.376632690429688
    6. ',' → logprob: -12.751632690429688
    7. '                   ' → logprob: -13.376632690429688
    8. '           ' → logprob: -13.501632690429688
    9. '```' → logprob: -13.751632690429688
    10. '   ' → logprob: -14.626632690429688

Token 342: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.30078229308128357
    2. '                   ' → logprob: -1.550782322883606
    3. ' if' → logprob: -3.1757822036743164
    4. '   ' → logprob: -5.175782203674316
    5. '               ' → logprob: -8.675782203674316
    6. '
' → logprob: -10.425782203674316
    7. '	if' → logprob: -11.550782203674316
    8. '                       ' → logprob: -11.550782203674316
    9. '                ' → logprob: -11.675782203674316
    10. '           ' → logprob: -11.800782203674316

Token 343: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.27606263756752014
    2. ' not' → logprob: -1.9010626077651978
    3. '_t' → logprob: -2.4010627269744873
    4. '   ' → logprob: -7.651062488555908
    5. ' _' → logprob: -8.901062965393066
    6. '_' → logprob: -9.026062965393066
    7. '_not' → logprob: -9.151062965393066
    8. '_chk' → logprob: -9.651062965393066
    9. '_ch' → logprob: -9.901062965393066
    10. '	not' → logprob: -9.901062965393066

Token 344: ' _' (ID: 1175)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.01816117763519287
    2. ' _' → logprob: -4.018161296844482
    3. '_tls' → logprob: -12.018160820007324
    4. ' ' → logprob: -13.268160820007324
    5. ' tl' → logprob: -13.268160820007324
    6. '   ' → logprob: -14.393160820007324
    7. '  ' → logprob: -14.893160820007324
    8. '_chk' → logprob: -15.018160820007324
    9. '_' → logprob: -16.14316177368164
    10. '
' → logprob: -16.76816177368164

Token 345: 'tl' (ID: 15894)
  Prédit: 'tl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -5.512236498361744e-07
    2. 't' → logprob: -15.875000953674316
    3. ' tl' → logprob: -16.0
    4. 'lt' → logprob: -17.125
    5. 'tls' → logprob: -17.25
    6. '```' → logprob: -17.5
    7. 'l' → logprob: -17.875
    8. 'tle' → logprob: -18.5
    9. 'sl' → logprob: -18.5625
    10. 'll' → logprob: -18.8125

Token 346: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -15.000000953674316
    3. 'zz' → logprob: -15.125000953674316
    4. '[
' → logprob: -17.25
    5. '```' → logprob: -17.5
    6. '[z' → logprob: -18.25
    7. '   ' → logprob: -18.625
    8. '[[' → logprob: -18.75
    9. '           ' → logprob: -19.0
    10. ' zz' → logprob: -19.375

Token 347: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.00026205103495158255
    2. '[' → logprob: -8.375262260437012
    3. ' zz' → logprob: -10.375262260437012
    4. 'zzz' → logprob: -16.000261306762695
    5. '.zz' → logprob: -17.625261306762695
    6. 'zza' → logprob: -18.250261306762695
    7. '   ' → logprob: -18.250261306762695
    8. 'z' → logprob: -18.625261306762695
    9. '[z' → logprob: -18.625261306762695
    10. ']' → logprob: -18.750261306762695

Token 348: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.11298596858978271
    2. ']:
' → logprob: -2.4879860877990723
    3. ':' → logprob: -3.8629860877990723
    4. ':
' → logprob: -6.237986087799072
    5. ']' → logprob: -8.112985610961914
    6. ']:
' → logprob: -8.612985610961914
    7. '=' → logprob: -9.112985610961914
    8. ']=' → logprob: -9.237985610961914
    9. '):' → logprob: -10.612985610961914
    10. '):
' → logprob: -10.737985610961914

Token 349: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00895395316183567
    2. ':
' → logprob: -5.383954048156738
    3. '_t' → logprob: -6.508954048156738
    4. '               ' → logprob: -6.883954048156738
    5. ':' → logprob: -7.508954048156738
    6. '                       ' → logprob: -7.633954048156738
    7. '           ' → logprob: -8.383954048156738
    8. '                    
' → logprob: -9.383954048156738
    9. '```' → logprob: -9.633954048156738
    10. '                  ' → logprob: -9.758954048156738

Token 350: ' _' (ID: 1175)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00021629150433000177
    2. '                   ' → logprob: -9.250216484069824
    3. '   ' → logprob: -9.500216484069824
    4. '                       ' → logprob: -11.000216484069824
    5. '               ' → logprob: -11.625216484069824
    6. ' _' → logprob: -12.000216484069824
    7. '
' → logprob: -12.750216484069824
    8. '```' → logprob: -12.750216484069824
    9. '                           ' → logprob: -13.375216484069824
    10. '           ' → logprob: -13.625216484069824

Token 351: 'tl' (ID: 15894)
  Prédit: 'tl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tl' → logprob: -1.2664456789934775e-06
    2. ' tl' → logprob: -14.875000953674316
    3. 't' → logprob: -15.750000953674316
    4. '```' → logprob: -16.125001907348633
    5. 'ql' → logprob: -16.375001907348633
    6. '_t' → logprob: -16.500001907348633
    7. 'Q' → logprob: -16.500001907348633
    8. '
' → logprob: -17.125001907348633
    9. 'tls' → logprob: -17.125001907348633
    10. 'l' → logprob: -17.125001907348633

Token 352: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.750000953674316
    3. '```' → logprob: -16.0
    4. '[
' → logprob: -16.25
    5. 'zz' → logprob: -16.5
    6. '[z' → logprob: -17.125
    7. '][' → logprob: -17.625
    8. '   ' → logprob: -18.75
    9. '=' → logprob: -19.0
    10. ')[' → logprob: -19.0

Token 353: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.0001502636878285557
    2. ' zz' → logprob: -9.000150680541992
    3. 'very' → logprob: -10.750150680541992
    4. 'zzz' → logprob: -13.500150680541992
    5. 'z' → logprob: -14.000150680541992
    6. ']' → logprob: -14.375150680541992
    7. '   ' → logprob: -14.625150680541992
    8. ' very' → logprob: -14.625150680541992
    9. 'idx' → logprob: -14.875150680541992
    10. 'qq' → logprob: -15.750150680541992

Token 354: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08539015799760818
    2. '=' → logprob: -2.710390090942383
    3. ']=' → logprob: -4.460390090942383
    4. ' =' → logprob: -5.585390090942383
    5. ' ]' → logprob: -10.710390090942383
    6. '[' → logprob: -13.960390090942383
    7. ')' → logprob: -14.335390090942383
    8. ']+=' → logprob: -15.835390090942383
    9. ')=' → logprob: -15.960390090942383
    10. '   ' → logprob: -15.960390090942383

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -16.889163970947266
    4. ',' → logprob: -18.264163970947266
    5. '<|end|>' → logprob: -18.639163970947266
    6. '.=' → logprob: -19.014163970947266
    7. ' ' → logprob: -19.389163970947266
    8. '＝' → logprob: -19.389163970947266
    9. '=

' → logprob: -19.514163970947266
    10. '+=' → logprob: -19.514163970947266

Token 356: ' ' (ID: 220)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.41081351041793823
    2. '3' → logprob: -1.285813570022583
    3. '1' → logprob: -3.785813570022583
    4. '-' → logprob: -4.160813331604004
    5. ' ' → logprob: -4.660813331604004
    6. '2' → logprob: -5.410813331604004
    7. ' _' → logprob: -6.160813331604004
    8. ' -' → logprob: -6.285813331604004
    9. '_T' → logprob: -7.035813331604004
    10. '   ' → logprob: -7.035813331604004

Token 357: '1' (ID: 16)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.15632110834121704
    2. '3' → logprob: -2.1563210487365723
    3. '-' → logprob: -4.406321048736572
    4. '2' → logprob: -4.781321048736572
    5. '1' → logprob: -5.531321048736572
    6. ' ' → logprob: -6.781321048736572
    7. '-_' → logprob: -7.281321048736572
    8. ' -' → logprob: -7.656321048736572
    9. ' _' → logprob: -7.781321048736572
    10. '_T' → logprob: -7.781321048736572

Token 358: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004709464497864246
    2. '
' → logprob: -5.629709243774414
    3. '				' → logprob: -8.379709243774414
    4. '		           ' → logprob: -8.629709243774414
    5. '           ' → logprob: -9.004709243774414
    6. '                    
' → logprob: -9.379709243774414
    7. '<|end|>' → logprob: -9.629709243774414
    8. '   ' → logprob: -9.629709243774414
    9. '					
' → logprob: -10.004709243774414
    10. '                       ' → logprob: -10.004709243774414

Token 359: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025503424927592278
    2. '                    
' → logprob: -4.775503635406494
    3. '<|end|>' → logprob: -4.900503635406494
    4. '
' → logprob: -6.025503635406494
    5. ' 
' → logprob: -6.525503635406494
    6. '                    ' → logprob: -7.275503635406494
    7. '               ' → logprob: -7.400503635406494
    8. '  
' → logprob: -8.025503158569336
    9. '<|end|>' → logprob: -8.150503158569336
    10. '                           ' → logprob: -8.150503158569336

Token 360: ' _' (ID: 1175)
  Prédit: 'QQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.31155386567115784
    2. 'Q' → logprob: -1.8115538358688354
    3. '_k' → logprob: -2.561553955078125
    4. '_Q' → logprob: -4.061553955078125
    5. '_' (adapté à ' _') → logprob: -5.686553955078125
    6. 'Kon' → logprob: -6.186553955078125
    7. '_q' → logprob: -7.186553955078125
    8. '_con' → logprob: -7.186553955078125
    9. 'KK' → logprob: -7.186553955078125
    10. 'kon' → logprob: -7.811553955078125

Token 361: 'kon' (ID: 24134)
  Prédit: 'QQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.7555304765701294
    2. 'Q' → logprob: -1.6305304765701294
    3. 'kon' → logprob: -1.8805304765701294
    4. 'tl' → logprob: -2.13053035736084
    5. 'guru' → logprob: -4.13053035736084
    6. 'l' → logprob: -4.50553035736084
    7. 'Kon' → logprob: -5.38053035736084
    8. '_' → logprob: -5.88053035736084
    9. 'qq' → logprob: -6.25553035736084
    10. 'UF' → logprob: -6.31803035736084

Token 362: 'bu' (ID: 9936)
  Prédit: 'bu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bu' → logprob: -0.0011314053554087877
    2. '(' → logprob: -7.501131534576416
    3. 'bb' → logprob: -8.501131057739258
    4. 'bo' → logprob: -9.001131057739258
    5. 'zz' → logprob: -9.376131057739258
    6. 'b' → logprob: -9.876131057739258
    7. '(z' → logprob: -10.876131057739258
    8. 'zu' → logprob: -11.126131057739258
    9. '```' → logprob: -11.626131057739258
    10. 'бу' → logprob: -11.751131057739258

Token 363: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5332478142227046e-05
    2. 'very' → logprob: -11.250015258789062
    3. '(_' → logprob: -13.625015258789062
    4. '   ' → logprob: -15.625015258789062
    5. '(z' → logprob: -16.125015258789062
    6. '((' → logprob: -16.500015258789062
    7. ' (' → logprob: -16.500015258789062
    8. 'Very' → logprob: -16.500015258789062
    9. '	' → logprob: -16.625015258789062
    10. '```' → logprob: -17.250015258789062

Token 364: 'zz' (ID: 8013)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.008778009563684464
    2. 'zz' → logprob: -4.758778095245361
    3. ' very' → logprob: -9.508777618408203
    4. 'zzz' → logprob: -10.758777618408203
    5. '_' → logprob: -11.133777618408203
    6. '   ' → logprob: -11.258777618408203
    7. ' zz' → logprob: -11.383777618408203
    8. 'idx' → logprob: -11.633777618408203
    9. '(' → logprob: -12.383777618408203
    10. 'vv' → logprob: -13.008777618408203

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006532243569381535
    2. 'very' → logprob: -7.375653266906738
    3. ' ,' → logprob: -11.250653266906738
    4. ' very' → logprob: -11.625653266906738
    5. '                   ' → logprob: -12.625653266906738
    6. '   ' → logprob: -14.375653266906738
    7. 'Very' → logprob: -15.250653266906738
    8. '               ' → logprob: -15.875653266906738
    9. 'idx' → logprob: -16.375652313232422
    10. ',
' → logprob: -16.750652313232422

Token 366: ' idx' (ID: 14016)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.009145212359726429
    2. ' very' → logprob: -5.384145259857178
    3. 'idx' → logprob: -5.509145259857178
    4. 'zz' → logprob: -8.25914478302002
    5. ' idx' → logprob: -9.50914478302002
    6. '   ' → logprob: -9.88414478302002
    7. 'temp' → logprob: -11.25914478302002
    8. ' zz' → logprob: -11.50914478302002
    9. '_' → logprob: -11.88414478302002
    10. ' ' → logprob: -12.00914478302002

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002813078695908189
    2. ')
' → logprob: -5.87781286239624
    3. '                   ' → logprob: -12.127813339233398
    4. ' )' → logprob: -14.127813339233398
    5. ')
' → logprob: -14.252813339233398
    6. '))' → logprob: -15.002813339233398
    7. '<|end|>' → logprob: -15.377813339233398
    8. '               ' → logprob: -15.502813339233398
    9. '   ' → logprob: -15.752813339233398
    10. ')

' → logprob: -15.877813339233398

Token 368: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' Q' (ID: 1486)
  Prédit: 'QQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.0008340472122654319
    2. '                   ' → logprob: -7.250833988189697
    3. 'Q' (adapté à ' Q') → logprob: -9.125834465026855
    4. '               ' → logprob: -12.625834465026855
    5. '                       ' → logprob: -13.000834465026855
    6. '   ' → logprob: -13.250834465026855
    7. '           ' → logprob: -13.375834465026855
    8. '
' → logprob: -13.750834465026855
    9. ' Q' → logprob: -13.750834465026855
    10. 'qq' → logprob: -13.875834465026855

Token 370: 'QQ' (ID: 38291)
  Prédit: 'QQ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QQ' → logprob: -0.0001507405104348436
    2. 'Q' → logprob: -9.000150680541992
    3. 'ZZ' → logprob: -10.875150680541992
    4. '_' → logprob: -12.750150680541992
    5. 'qq' → logprob: -13.000150680541992
    6. '_Q' → logprob: -13.625150680541992
    7. ' QQ' → logprob: -14.125150680541992
    8. 'Z' → logprob: -14.500150680541992
    9. 'QL' → logprob: -15.750150680541992
    10. 'UU' → logprob: -16.000150680541992

Token 371: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00533099751919508
    2. '.p' → logprob: -5.255331039428711
    3. '.' → logprob: -9.630331039428711
    4. '.extend' → logprob: -10.505331039428711
    5. '.put' → logprob: -13.005331039428711
    6. '.enqueue' → logprob: -14.005331039428711
    7. 'append' → logprob: -15.255331039428711
    8. ' .' → logprob: -15.505331039428711
    9. ').' → logprob: -15.630331039428711
    10. '.Append' → logprob: -16.00533103942871

Token 372: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. 'left' → logprob: -17.625
    3. '((' → logprob: -18.75
    4. '(
' → logprob: -18.875
    5. '(z' → logprob: -19.625
    6. ' (' → logprob: -19.875
    7. '(ss' → logprob: -20.125
    8. '(ll' → logprob: -20.75
    9. '(zip' → logprob: -21.0
    10. '(xx' → logprob: -21.0

Token 373: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -3.0948158382670954e-05
    2. '(' → logprob: -10.500030517578125
    3. 'zzz' → logprob: -12.750030517578125
    4. ' zz' → logprob: -14.750030517578125
    5. '.zz' → logprob: -17.375030517578125
    6. 'z' → logprob: -17.375030517578125
    7. 'zzle' → logprob: -19.250030517578125
    8. 'zn' → logprob: -19.750030517578125
    9. '   ' → logprob: -19.750030517578125
    10. 'zzel' → logprob: -20.125030517578125

Token 374: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -14.250012397766113
    4. '               ' → logprob: -14.750012397766113
    5. ')#' → logprob: -15.500012397766113
    6. '<|end|>' → logprob: -15.500012397766113
    7. ')return' → logprob: -15.875012397766113
    8. '       ' → logprob: -16.125011444091797
    9. '))' → logprob: -16.875011444091797
    10. '())' → logprob: -17.125011444091797

Token 375: 'wr' (ID: 16085)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6814273595809937
    2. 'for' → logprob: -1.6814273595809937
    3. 'Q' → logprob: -3.056427478790283
    4. 'K' → logprob: -3.681427478790283
    5. 'answer' → logprob: -3.681427478790283
    6. 'M' → logprob: -4.056427478790283
    7. 'P' → logprob: -4.431427478790283
    8. '_' → logprob: -4.431427478790283
    9. 'res' → logprob: -4.556427478790283
    10. 'if' → logprob: -4.556427478790283

Token 376: '8' (ID: 23)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.032543059438467026
    2. 'iter' → logprob: -4.157543182373047
    3. 'it' → logprob: -4.782543182373047
    4. 'iting' → logprob: -6.157543182373047
    5. 'i' → logprob: -7.032543182373047
    6. 'ites' → logprob: -7.282543182373047
    7. '```' → logprob: -7.282543182373047
    8. 'iters' → logprob: -7.532543182373047
    9. 'ight' → logprob: -7.907543182373047
    10. '_' → logprob: -8.282543182373047

Token 377: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16196587681770325
    2. '_' → logprob: -3.286965847015381
    3. '()' → logprob: -3.661965847015381
    4. '('' → logprob: -4.161965847015381
    5. '=' → logprob: -4.286965847015381
    6. '#' → logprob: -4.786965847015381
    7. ' =' → logprob: -4.786965847015381
    8. '(
' → logprob: -5.161965847015381
    9. 'import' → logprob: -5.911965847015381
    10. 'print' → logprob: -6.036965847015381

Token 378: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03148990869522095
    2. '{}' → logprob: -4.406489849090576
    3. '[' → logprob: -5.031489849090576
    4. '""' → logprob: -5.281489849090576
    5. '[]
' → logprob: -6.406489849090576
    6. '''' → logprob: -6.531489849090576
    7. 'set' → logprob: -6.531489849090576
    8. '0' → logprob: -7.156489849090576
    9. '{' → logprob: -8.656490325927734
    10. '"' → logprob: -8.656490325927734

Token 379: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3656917214393616
    2. '[' → logprob: -1.8656916618347168
    3. '[max' → logprob: -3.240691661834717
    4. '[P' → logprob: -3.865691661834717
    5. '0' → logprob: -3.990691661834717
    6. 'max' → logprob: -4.115691661834717
    7. '{}' → logprob: -4.490691661834717
    8. 'sum' → logprob: -4.615691661834717
    9. 'set' → logprob: -5.115691661834717
    10. '{' → logprob: -5.615691661834717

Token 380: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03199618309736252
    2. '<|end|>' → logprob: -4.156996250152588
    3. ' for' → logprob: -4.906996250152588
    4. '
' → logprob: -5.031996250152588
    5. '+' → logprob: -7.031996250152588
    6. '_' → logprob: -8.53199577331543
    7. ',' → logprob: -8.78199577331543
    8. ';' → logprob: -9.28199577331543
    9. '#' → logprob: -9.90699577331543
    10. 'print' → logprob: -10.03199577331543

Token 381: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033784625702537596
    2. 'print' → logprob: -9.250337600708008
    3. 'wr' → logprob: -9.750337600708008
    4. 'P' → logprob: -10.000337600708008
    5. 'from' → logprob: -11.375337600708008
    6. 'WR' → logprob: -11.500337600708008
    7. 'max' → logprob: -11.625337600708008
    8. '_' → logprob: -11.875337600708008
    9. 'def' → logprob: -11.875337600708008
    10. 'i' → logprob: -12.000337600708008

Token 382: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4666772186756134
    2. 'idx' → logprob: -1.216677188873291
    3. '_' → logprob: -4.466677188873291
    4. 'x' → logprob: -4.841677188873291
    5. ' idx' → logprob: -4.841677188873291
    6. '_i' → logprob: -4.966677188873291
    7. 'k' → logprob: -5.216677188873291
    8. ' i' → logprob: -5.216677188873291
    9. 'p' → logprob: -5.341677188873291
    10. 'P' → logprob: -5.466677188873291

Token 383: '_p' (ID: 1359)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07183107733726501
    2. '_' → logprob: -3.196830987930298
    3. 'i' → logprob: -4.571831226348877
    4. '_i' → logprob: -4.696831226348877
    5. 'in' → logprob: -5.821831226348877
    6. '_idx' → logprob: -6.071831226348877
    7. 'r' → logprob: -6.946831226348877
    8. 'idx' → logprob: -7.571831226348877
    9. 'v' → logprob: -8.071830749511719
    10. '_val' → logprob: -8.071830749511719

Token 384: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5310792922973633
    2. ' in' → logprob: -0.9060792922973633
    3. 'i' → logprob: -5.156079292297363
    4. 'idx' → logprob: -7.531079292297363
    5. '_idx' → logprob: -8.156079292297363
    6. 'p' → logprob: -8.406079292297363
    7. 'r' → logprob: -8.406079292297363
    8. 'index' → logprob: -8.656079292297363
    9. '_i' → logprob: -8.781079292297363
    10. '_' → logprob: -9.031079292297363

Token 385: ' range' (ID: 3352)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5801571607589722
    2. 'range' → logprob: -0.8301571607589722
    3. ' range' → logprob: -5.580157279968262
    4. '_' → logprob: -8.455157279968262
    5. '_P' → logprob: -8.705157279968262
    6. ' P' → logprob: -10.705157279968262
    7. '(range' → logprob: -10.955157279968262
    8. '_range' → logprob: -12.205157279968262
    9. '(' → logprob: -12.705157279968262
    10. '[' → logprob: -12.830157279968262

Token 386: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. '(_' → logprob: -13.250003814697266
    3. '(len' → logprob: -13.250003814697266
    4. '1' → logprob: -15.375003814697266
    5. '(N' → logprob: -16.125003814697266
    6. ' (' → logprob: -16.500003814697266
    7. 'len' → logprob: -16.875003814697266
    8. '_' → logprob: -17.375003814697266
    9. '(
' → logprob: -17.500003814697266
    10. '   ' → logprob: -17.875003814697266

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. '_' → logprob: -10.000110626220703
    3. ' ' → logprob: -10.375110626220703
    4. 'len' → logprob: -11.125110626220703
    5. '   ' → logprob: -11.375110626220703
    6. '2' → logprob: -12.125110626220703
    7. '(' → logprob: -13.875110626220703
    8. '  ' → logprob: -15.250110626220703
    9. '_A' → logprob: -15.625110626220703
    10. '_N' → logprob: -15.875110626220703

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006189120467752218
    2. ' ,' → logprob: -7.625618934631348
    3. ',_' → logprob: -9.000618934631348
    4. '1' → logprob: -12.875618934631348
    5. '_,' → logprob: -13.000618934631348
    6. ',len' → logprob: -13.875618934631348
    7. ' ' → logprob: -14.500618934631348
    8. '+' → logprob: -15.000618934631348
    9. '   ' → logprob: -15.250618934631348
    10. '(' → logprob: -15.500618934631348

Token 389: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6047699318733066e-05
    2. '1' → logprob: -12.000016212463379
    3. ' _' → logprob: -12.250016212463379
    4. '_AM' → logprob: -13.750016212463379
    5. 'len' → logprob: -13.875016212463379
    6. '_N' → logprob: -13.875016212463379
    7. ' ' → logprob: -14.250016212463379
    8. '(' → logprob: -14.500016212463379
    9. '   ' → logprob: -14.625016212463379
    10. '_A' → logprob: -15.500016212463379

Token 390: 'Am' (ID: 6275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12713231146335602
    2. 'Am' → logprob: -2.1271324157714844
    3. '(' → logprob: -8.752132415771484
    4. '(_' → logprob: -11.002132415771484
    5. 'N' → logprob: -12.252132415771484
    6. ''Am' → logprob: -12.377132415771484
    7. '_AM' → logprob: -12.752132415771484
    8. ' ' → logprob: -13.002132415771484
    9. '1' → logprob: -13.252132415771484
    10. '+' → logprob: -13.502132415771484

Token 391: 'nt' (ID: 578)
  Prédit: 'nt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -2.7133641196996905e-05
    2. '_nt' → logprob: -11.62502670288086
    3. 'nts' → logprob: -12.75002670288086
    4. '_nodes' → logprob: -12.87502670288086
    5. 'Nodes' → logprob: -13.00002670288086
    6. '_p' → logprob: -13.00002670288086
    7. 'Am' → logprob: -13.12502670288086
    8. 'p' → logprob: -13.75002670288086
    9. '_' → logprob: -14.12502670288086
    10. 'unt' → logprob: -14.25002670288086

Token 392: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.00022952310973778367
    2. 'of' → logprob: -8.500229835510254
    3. '_of' → logprob: -10.750229835510254
    4. '_OF' → logprob: -13.750229835510254
    5. '+' → logprob: -14.000229835510254
    6. '_p' → logprob: -14.250229835510254
    7. ' of' → logprob: -14.875229835510254
    8. '_' → logprob: -15.000229835510254
    9. 'p' → logprob: -15.250229835510254
    10. 'OF' → logprob: -15.500229835510254

Token 393: 'Nodes' (ID: 16704)
  Prédit: 'Nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nodes' → logprob: -0.0047882418148219585
    2. 'odes' → logprob: -5.879788398742676
    3. '_nodes' → logprob: -6.379788398742676
    4. '_N' → logprob: -8.254788398742676
    5. 'Of' → logprob: -11.379788398742676
    6. 'p' → logprob: -12.379788398742676
    7. 'N' → logprob: -12.879788398742676
    8. '.Nodes' → logprob: -13.379788398742676
    9. 'ODES' → logprob: -13.754788398742676
    10. '+' → logprob: -14.004788398742676

Token 394: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008367887930944562
    2. ' +' → logprob: -7.3758368492126465
    3. '()+' → logprob: -8.500836372375488
    4. '
' → logprob: -13.125836372375488
    5. '```' → logprob: -13.500836372375488
    6. '+p' → logprob: -13.500836372375488
    7. '+
' → logprob: -14.375836372375488
    8. 'p' → logprob: -14.875836372375488
    9. ')+' → logprob: -15.125836372375488
    10. '1' → logprob: -16.000837326049805

Token 395: '1' (ID: 16)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.5704098343849182
    2. '1' → logprob: -1.0704097747802734
    3. '+' → logprob: -2.5704097747802734
    4. '(' → logprob: -5.070409774780273
    5. '(p' → logprob: -5.570409774780273
    6. 'p' → logprob: -6.445409774780273
    7. '2' → logprob: -7.570409774780273
    8. '_' → logprob: -7.570409774780273
    9. '_p' → logprob: -7.570409774780273
    10. '(N' → logprob: -7.570409774780273

Token 396: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05632800981402397
    2. '):' → logprob: -3.056328058242798
    3. ':' → logprob: -5.056327819824219
    4. ':
' → logprob: -6.681327819824219
    5. '   ' → logprob: -10.181327819824219
    6. ',' → logprob: -11.056327819824219
    7. '):
' → logprob: -11.306327819824219
    8. '+' → logprob: -11.681327819824219
    9. ' ):
' → logprob: -12.056327819824219
    10. ')' → logprob: -13.431327819824219

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049228183925151825
    2. 'if' → logprob: -3.1742281913757324
    3. ' if' → logprob: -5.174228191375732
    4. 'wr' → logprob: -7.924228191375732
    5. 'for' → logprob: -8.799227714538574
    6. ' for' → logprob: -11.174227714538574
    7. ' wr' → logprob: -11.549227714538574
    8. ' ' → logprob: -12.424227714538574
    9. '_wr' → logprob: -13.174227714538574
    10. '	if' → logprob: -13.299227714538574

Token 398: ' wr' (ID: 5899)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08257248997688293
    2. 'wr' (adapté à ' wr') → logprob: -2.9575724601745605
    3. 'for' → logprob: -3.8325724601745605
    4. 'parent' → logprob: -6.3325724601745605
    5. '   ' → logprob: -7.3325724601745605
    6. 'u' → logprob: -7.7075724601745605
    7. 'par' → logprob: -7.7075724601745605
    8. 'root' → logprob: -7.7075724601745605
    9. 'uf' → logprob: -7.9575724601745605
    10. 'pr' → logprob: -8.332572937011719

Token 399: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.17186757922172546
    2. '+=' → logprob: -2.046867609024048
    3. '_' → logprob: -4.171867370605469
    4. ' +=' → logprob: -5.296867370605469
    5. 'r' → logprob: -5.421867370605469
    6. '_p' → logprob: -6.796867370605469
    7. 'p' → logprob: -7.546867370605469
    8. '+' → logprob: -7.796867370605469
    9. 't' → logprob: -8.046867370605469
    10. '   ' → logprob: -8.171867370605469

Token 400: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04874815046787262
    2. ' +=' → logprob: -3.048748254776001
    3. '=' → logprob: -9.298748016357422
    4. '+=(' → logprob: -10.298748016357422
    5. '   ' → logprob: -11.673748016357422
    6. '+' → logprob: -11.923748016357422
    7. ' ^=' → logprob: -12.298748016357422
    8. ']+=' → logprob: -12.298748016357422
    9. 'if' → logprob: -13.048748016357422
    10. '_' → logprob: -13.548748016357422

Token 401: ' _' (ID: 1175)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.09098456054925919
    2. 'p' → logprob: -3.090984582901001
    3. 'CHECK' → logprob: -3.340984582901001
    4. '_CHECK' → logprob: -6.590984344482422
    5. '1' → logprob: -6.965984344482422
    6. 'abs' → logprob: -7.090984344482422
    7. '(' → logprob: -7.215984344482422
    8. '_p' → logprob: -7.840984344482422
    9. '_P' → logprob: -8.090984344482422
    10. 'not' → logprob: -8.215984344482422

Token 402: 'chts' (ID: 18462)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.008052542805671692
    2. 'p' → logprob: -5.008052349090576
    3. 'tl' → logprob: -7.133052349090576
    4. 'CHECK' → logprob: -8.633052825927734
    5. 'CH' → logprob: -9.758052825927734
    6. '_P' → logprob: -10.133052825927734
    7. '_CH' → logprob: -10.383052825927734
    8. '_p' → logprob: -10.508052825927734
    9. '_CHECK' → logprob: -11.008052825927734
    10. '_' → logprob: -11.008052825927734

Token 403: 'ama' (ID: 2152)
  Prédit: 'ama'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ama' → logprob: -0.02477441169321537
    2. 'p' → logprob: -4.024774551391602
    3. '(p' → logprob: -5.149774551391602
    4. '_p' → logprob: -7.649774551391602
    5. 's' → logprob: -9.149774551391602
    6. '(' → logprob: -9.774774551391602
    7. 'amaa' → logprob: -10.899774551391602
    8. 'amma' → logprob: -11.024774551391602
    9. 'ама' → logprob: -11.024774551391602
    10. 'a' → logprob: -11.149774551391602

Token 404: '(P' (ID: 8952)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006207481492310762
    2. '(P' → logprob: -5.256207466125488
    3. 'p' → logprob: -7.256207466125488
    4. '(_' → logprob: -8.506207466125488
    5. '(' → logprob: -10.631207466125488
    6. 'P' → logprob: -10.756207466125488
    7. '_p' → logprob: -11.131207466125488
    8. '((' → logprob: -14.256207466125488
    9. '(w' → logprob: -14.381207466125488
    10. '(
' → logprob: -14.506207466125488

Token 405: '_[' (ID: 27517)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.21228177845478058
    2. 'p' → logprob: -2.3372817039489746
    3. '[p' → logprob: -2.9622817039489746
    4. '_,' → logprob: -4.087281703948975
    5. '_' → logprob: -4.462281703948975
    6. '_[' → logprob: -5.212281703948975
    7. '_
' → logprob: -6.087281703948975
    8. '
' → logprob: -6.837281703948975
    9. '(p' → logprob: -7.087281703948975
    10. '_(' → logprob: -7.212281703948975

Token 406: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002444125711917877
    2. '_p' → logprob: -8.500244140625
    3. ' p' → logprob: -11.375244140625
    4. 'wr' → logprob: -11.750244140625
    5. '[p' → logprob: -12.375244140625
    6. 'P' → logprob: -12.375244140625
    7. '   ' → logprob: -12.500244140625
    8. '_wr' → logprob: -13.000244140625
    9. ' ' → logprob: -13.375244140625
    10. 'pp' → logprob: -14.250244140625

Token 407: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.03718730807304382
    2. 'p' → logprob: -3.912187337875366
    3. '[p' → logprob: -4.537187099456787
    4. '
' → logprob: -6.537187099456787
    5. '_
' → logprob: -6.912187099456787
    6. '_' → logprob: -7.162187099456787
    7. '][' → logprob: -7.287187099456787
    8. '_[' → logprob: -7.537187099456787
    9. '_,' → logprob: -8.412187576293945
    10. ',p' → logprob: -8.912187576293945

Token 408: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028864551335573196
    2. ',p' → logprob: -4.02886438369751
    3. '[p' → logprob: -5.27886438369751
    4. ' ,' → logprob: -6.02886438369751
    5. '(p' → logprob: -6.40386438369751
    6. 'p' → logprob: -6.77886438369751
    7. '   ' → logprob: -8.653864860534668
    8. ' ' → logprob: -9.778864860534668
    9. '[' → logprob: -10.778864860534668
    10. '+p' → logprob: -11.028864860534668

Token 409: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001049736310960725
    2. ' p' → logprob: -9.250104904174805
    3. '   ' → logprob: -11.875104904174805
    4. '_p' → logprob: -14.125104904174805
    5. 'P' → logprob: -15.000104904174805
    6. ' ' → logprob: -15.250104904174805
    7. '    ' → logprob: -16.000104904174805
    8. '  ' → logprob: -16.250104904174805
    9. '           ' → logprob: -16.375104904174805
    10. '       ' → logprob: -17.000104904174805

Token 410: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0003931384126190096
    2. 'p' → logprob: -7.875392913818359
    3. '[p' → logprob: -12.00039291381836
    4. ''p' → logprob: -13.37539291381836
    5. ')' → logprob: -14.25039291381836
    6. '+p' → logprob: -14.37539291381836
    7. '```' → logprob: -14.37539291381836
    8. '_' → logprob: -14.62539291381836
    9. ')p' → logprob: -14.62539291381836
    10. '[' → logprob: -14.75039291381836

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001294030516874045
    2. ')
' → logprob: -9.250129699707031
    3. ' )' → logprob: -10.625129699707031
    4. ')*' → logprob: -13.125129699707031
    5. ' and' → logprob: -13.250129699707031
    6. ')#' → logprob: -13.250129699707031
    7. ')+' → logprob: -14.500129699707031
    8. '),' → logprob: -15.250129699707031
    9. ')

' → logprob: -15.250129699707031
    10. ')return' → logprob: -15.375129699707031

Token 412: ' &' (ID: 827)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -11.62501049041748
    3. ' print' → logprob: -13.87501049041748
    4. 'pr' → logprob: -16.750009536743164
    5. '(print' → logprob: -17.375009536743164
    6. '#print' → logprob: -18.000009536743164
    7. '```' → logprob: -18.250009536743164
    8. '\n' → logprob: -18.500009536743164
    9. '<|end|>' → logprob: -18.500009536743164
    10. '#' → logprob: -18.875009536743164

Token 413: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04600442945957184
    2. ' ' → logprob: -3.5460045337677
    3. 'CHECK' → logprob: -4.546004295349121
    4. ' CHECK' → logprob: -6.171004295349121
    5. '_CHECK' → logprob: -7.046004295349121
    6. 'True' → logprob: -7.921004295349121
    7. '_t' → logprob: -8.046004295349121
    8. 'tl' → logprob: -8.046004295349121
    9. '0' → logprob: -8.296004295349121
    10. '(' → logprob: -8.546004295349121

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004184891004115343
    2. 'True' → logprob: -6.629184722900391
    3. ' ' → logprob: -6.754184722900391
    4. 'CHECK' → logprob: -7.129184722900391
    5. 'tl' → logprob: -8.00418472290039
    6. '(' → logprob: -8.75418472290039
    7. '(True' → logprob: -8.87918472290039
    8. '_t' → logprob: -10.12918472290039
    9. '_CHECK' → logprob: -10.25418472290039
    10. 'Tl' → logprob: -10.62918472290039

Token 415: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008143932209350169
    2. '
' → logprob: -7.125814437866211
    3. ' print' → logprob: -11.875814437866211
    4. 'pr' → logprob: -14.000814437866211
    5. '<|end|>' → logprob: -14.625814437866211
    6. 'wr' → logprob: -14.750814437866211
    7. '\n' → logprob: -15.125814437866211
    8. '(print' → logprob: -15.375814437866211
    9. ')' → logprob: -15.500814437866211
    10. '#' → logprob: -16.37581443786621

Token 416: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.650518920039758e-06
    2. '
' → logprob: -13.000003814697266
    3. ' print' → logprob: -13.750003814697266
    4. '(print' → logprob: -16.125003814697266
    5. 'pr' → logprob: -16.250003814697266
    6. ')' → logprob: -17.500003814697266
    7. '.print' → logprob: -18.125003814697266
    8. ';' → logprob: -18.375003814697266
    9. '#print' → logprob: -19.000003814697266
    10. '#' → logprob: -19.125003814697266

Token 417: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.6457742175552994e-05
    2. '
' → logprob: -10.250056266784668
    3. ' print' → logprob: -11.000056266784668
    4. 'wr' → logprob: -13.000056266784668
    5. '1' → logprob: -14.250056266784668
    6. 'write' → logprob: -14.625056266784668
    7. ')' → logprob: -15.125056266784668
    8. ' 
' → logprob: -16.000057220458984
    9. '+
' → logprob: -16.250057220458984
    10. 'pr' → logprob: -16.375057220458984

Token 418: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0077786445617676
    2. 'print' → logprob: -1.1327786445617676
    3. '_' → logprob: -1.5077786445617676
    4. 'wr' → logprob: -3.0077786445617676
    5. ' p' → logprob: -3.8827786445617676
    6. '1' → logprob: -5.007778644561768
    7. ' _' → logprob: -5.132778644561768
    8. '_p' → logprob: -6.632778644561768
    9. 'range' → logprob: -6.632778644561768
    10. 'True' → logprob: -6.757778644561768

Token 419: 'personal' (ID: 43979)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4184223413467407
    2. 'True' → logprob: -1.5434223413467407
    3. '_' → logprob: -1.6684223413467407
    4. 'wr' → logprob: -1.6684223413467407
    5. ')' → logprob: -2.918422222137451
    6. ' True' → logprob: -3.043422222137451
    7. ' p' → logprob: -3.293422222137451
    8. ' _' → logprob: -4.918422222137451
    9. '_p' → logprob: -5.668422222137451
    10. '1' → logprob: -5.793422222137451

Token 420: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9276536703109741
    2. '_' → logprob: -1.1776536703109741
    3. ' ' → logprob: -2.5526537895202637
    4. '<|end|>' → logprob: -2.6776537895202637
    5. '  ' → logprob: -3.8026537895202637
    6. '+' → logprob: -3.9276537895202637
    7. 'p' → logprob: -4.552653789520264
    8. '.' → logprob: -4.677653789520264
    9. 'tokens' → logprob: -4.677653789520264
    10. '_p' → logprob: -4.802653789520264

Token 421: ' flair' (ID: 96993)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008750165579840541
    2. ')
' → logprob: -7.750874996185303
    3. '
' → logprob: -7.875874996185303
    4. ')' → logprob: -10.250875473022461
    5. ' print' → logprob: -10.500875473022461
    6. '(print' → logprob: -15.125875473022461
    7. '
' → logprob: -15.250875473022461
    8. '.print' → logprob: -15.500875473022461
    9. ')

' → logprob: -15.625875473022461
    10. ' 
' → logprob: -15.750875473022461

Token 422: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.88418151892256e-05
    2. '
' → logprob: -10.000059127807617
    3. ' print' → logprob: -12.000059127807617
    4. ')' → logprob: -12.375059127807617
    5. ')
' → logprob: -12.875059127807617
    6. '(print' → logprob: -16.125059127807617
    7. 'pr' → logprob: -16.500059127807617
    8. '```' → logprob: -16.750059127807617
    9. ' 
' → logprob: -17.250059127807617
    10. '.print' → logprob: -17.250059127807617

Token 423: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -14.875001907348633
    4. 'pr' → logprob: -15.375001907348633
    5. '<|end|>' → logprob: -16.375001907348633
    6. '(print' → logprob: -17.750001907348633
    7. 'prin' → logprob: -17.750001907348633
    8. '#print' → logprob: -17.875001907348633
    9. '#' → logprob: -18.000001907348633
    10. '.print' → logprob: -18.250001907348633

Token 424: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'wr' → logprob: -16.750003814697266
    4. ' (' → logprob: -17.000003814697266
    5. 'w' → logprob: -18.375003814697266
    6. '(
' → logprob: -18.500003814697266
    7. '(write' → logprob: -19.250003814697266
    8. '(writer' → logprob: -19.375003814697266
    9. '(dw' → logprob: -19.875003814697266
    10. '((' → logprob: -20.250003814697266

Token 425: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.45848218582978e-06
    2. 'wr' → logprob: -13.37500286102295
    3. 'р' → logprob: -14.75000286102295
    4. '8' → logprob: -16.250001907348633
    5. '_wr' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. ' r' → logprob: -17.000001907348633
    8. ')' → logprob: -17.125001907348633
    9. '
' → logprob: -17.125001907348633
    10. '	r' → logprob: -17.250001907348633

Token 426: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.010262529365718365
    2. 't' → logprob: -4.635262489318848
    3. '7' → logprob: -7.635262489318848
    4. 'т' → logprob: -12.635262489318848
    5. '
' → logprob: -13.010262489318848
    6. '_' → logprob: -13.135262489318848
    7. '_t' → logprob: -13.260262489318848
    8. ')' → logprob: -13.385262489318848
    9. '(t' → logprob: -13.635262489318848
    10. '2' → logprob: -13.760262489318848

Token 427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ')
' → logprob: -11.625014305114746
    3. ' )' → logprob: -12.250014305114746
    4. '```' → logprob: -15.750014305114746
    5. '+' → logprob: -16.375015258789062
    6. '))' → logprob: -16.375015258789062
    7. '`)' → logprob: -16.500015258789062
    8. ')`' → logprob: -16.625015258789062
    9. '
' → logprob: -17.000015258789062
    10. '#' → logprob: -17.125015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 425
Tokens correctement prédits (1ère position, stricte): 186
Tokens correctement prédits (1ère position, avec adaptation): 192
Tokens correctement prédits (top 10): 327
Précision stricte (1ère position): 43.76%
Précision adaptée (1ère position): 45.18%
Précision (top 10): 76.94%
================================================================================
