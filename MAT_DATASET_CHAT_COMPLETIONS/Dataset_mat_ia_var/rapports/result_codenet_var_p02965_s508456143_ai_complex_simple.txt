================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

(n, m), MOD = map(int, input().split()), 998244353
w, u = 3 * m, int.__sub__(*reversed((n, 1)))

def fact_seq(limit, acc=[1]):
    def step(i):
        if i > limit: return acc
        acc.append(acc[-1]*i % MOD)
        return step(i+1)
    return step(1)

F = fact_seq(w + n)

def C(n, k):
    num = F[n]
    denom = pow(F[n - k]*F[k], MOD-2, MOD)
    return num * denom % MOD

summand = lambda x, y: x - y

def S():
    expr1 = C(w + u, u)
    expr2 = n * C(n + m - 2, u)
    r = summand(expr1, expr2)
    a, b, c = m, n, w
    # Crafty condition with all()
    while all([(n > -~a), (a < c)]):
        r -= C(b, a) * C(((2 * u + c - a) >> 1), u)
        a += 2
    return r % MOD

print(S())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0288831889629364
    2. '\' → logprob: -4.15388298034668
    3. 'def' → logprob: -5.02888298034668
    4. '(
' → logprob: -6.02888298034668
    5. '(lambda' → logprob: -6.52888298034668
    6. ',' → logprob: -7.52888298034668
    7. '\n' → logprob: -7.77888298034668
    8. '```' → logprob: -7.90388298034668
    9. '\(' → logprob: -8.40388298034668
    10. '`' → logprob: -9.27888298034668

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7582562565803528
    2. '\' → logprob: -2.008256196975708
    3. '\n' → logprob: -2.008256196975708
    4. '(
' → logprob: -2.383256196975708
    5. '*' → logprob: -2.633256196975708
    6. ',' → logprob: -3.133256196975708
    7. '`' → logprob: -4.383256435394287
    8. 'def' → logprob: -4.633256435394287
    9. '#' → logprob: -4.883256435394287
    10. '```' → logprob: -5.758256435394287

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06361429393291473
    2. '(
' → logprob: -3.3136143684387207
    3. 'def' → logprob: -4.563614368438721
    4. '#' → logprob: -5.313614368438721
    5. '\' → logprob: -5.563614368438721
    6. 'a' → logprob: -6.813614368438721
    7. ',' → logprob: -6.938614368438721
    8. 'result' → logprob: -7.313614368438721
    9. '`' → logprob: -7.438614368438721
    10. '*' → logprob: -8.063613891601562

Token 11: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.0004642009735107
    2. '(n' → logprob: -1.1254642009735107
    3. ')' → logprob: -2.8754642009735107
    4. '*n' → logprob: -2.8754642009735107
    5. 'umber' → logprob: -3.0004642009735107
    6. ' *' → logprob: -3.3754642009735107
    7. ',' → logprob: -3.6254642009735107
    8. '*' → logprob: -3.8754642009735107
    9. 'umbers' → logprob: -4.87546443939209
    10. 'u' → logprob: -5.00046443939209

Token 12: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9938352704048157
    2. ' m' → logprob: -0.9938352704048157
    3. 'k' → logprob: -1.993835210800171
    4. ' k' → logprob: -2.493835210800171
    5. ')' → logprob: -3.368835210800171
    6. ' )' → logprob: -5.99383544921875
    7. ' n' → logprob: -7.11883544921875
    8. 'n' → logprob: -7.49383544921875
    9. 'a' → logprob: -7.49383544921875
    10. ' ' → logprob: -8.24383544921875

Token 13: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005943780997768044
    2. ')=' → logprob: -7.750594615936279
    3. ' )' → logprob: -9.625594139099121
    4. ',' → logprob: -10.000594139099121
    5. '),' → logprob: -10.250594139099121
    6. '=' → logprob: -12.000594139099121
    7. ')n' → logprob: -13.250594139099121
    8. '):' → logprob: -13.500594139099121
    9. ')>' → logprob: -13.625594139099121
    10. '))' → logprob: -14.125594139099121

Token 14: ' MOD' (ID: 32868)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8727198839187622
    2. '*' → logprob: -1.2477198839187622
    3. '=' → logprob: -1.4977198839187622
    4. ' *' → logprob: -3.8727197647094727
    5. 'data' → logprob: -4.122719764709473
    6. ' ' → logprob: -4.747719764709473
    7. ' data' → logprob: -5.872719764709473
    8. ' (' → logprob: -5.872719764709473
    9. '[' → logprob: -6.247719764709473
    10. 'values' → logprob: -6.372719764709473

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008628524839878082
    2. '=' → logprob: -4.7586283683776855
    3. ',' → logprob: -11.883628845214844
    4. ' ' → logprob: -12.508628845214844
    5. ' ,' → logprob: -13.508628845214844
    6. ' =
' → logprob: -13.883628845214844
    7. ')' → logprob: -15.258628845214844
    8. ' =)' → logprob: -15.258628845214844
    9. ' =",' → logprob: -15.883628845214844
    10. '  ' → logprob: -16.633628845214844

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.37384942173957825
    2. 'map' → logprob: -1.4988493919372559
    3. ' (' → logprob: -2.998849391937256
    4. ' input' → logprob: -3.998849391937256
    5. 'input' → logprob: -5.123849391937256
    6. ' ' → logprob: -5.498849391937256
    7. '(' → logprob: -6.248849391937256
    8. ' int' → logprob: -6.248849391937256
    9. 'int' → logprob: -6.498849391937256
    10. '0' → logprob: -6.748849391937256

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5127735733985901
    2. '<|end|>' → logprob: -1.3877735137939453
    3. '(lambda' → logprob: -2.2627735137939453
    4. '(int' → logprob: -3.1377735137939453
    5. '<|end|>' → logprob: -6.262773513793945
    6. 'int' → logprob: -7.762773513793945
    7. '[int' → logprob: -8.387773513793945
    8. 'lambda' → logprob: -8.762773513793945
    9. '<int' → logprob: -9.137773513793945
    10. '((' → logprob: -9.137773513793945

Token 18: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5864062905311584
    2. ',' → logprob: -1.4614062309265137
    3. ')' → logprob: -1.5864062309265137
    4. '<|end|>' → logprob: -5.586406230926514
    5. '),(' → logprob: -6.836406230926514
    6. ',input' → logprob: -7.336406230926514
    7. 'input' → logprob: -8.336406707763672
    8. '(' → logprob: -8.586406707763672
    9. '<|end|>' → logprob: -8.836406707763672
    10. '()),' → logprob: -9.086406707763672

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519630193710327
    2. ' input' → logprob: -1.5019630193710327
    3. ')' → logprob: -10.376962661743164
    4. '(input' → logprob: -13.501962661743164
    5. '```' → logprob: -14.751962661743164
    6. ',input' → logprob: -15.001962661743164
    7. ' )' → logprob: -15.501962661743164
    8. '=input' → logprob: -15.751962661743164
    9. 'open' → logprob: -15.876962661743164
    10. '	input' → logprob: -16.626962661743164

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002512071805540472
    2. '()),' → logprob: -8.375250816345215
    3. '()' → logprob: -11.375250816345215
    4. '),' → logprob: -12.000250816345215
    5. '())' → logprob: -13.125250816345215
    6. ')' → logprob: -14.500250816345215
    7. '()
' → logprob: -15.750250816345215
    8. ' ().' → logprob: -16.50025177001953
    9. '(' → logprob: -16.75025177001953
    10. '(),' → logprob: -17.50025177001953

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.666993507067673e-05
    2. 'strip' → logprob: -10.375036239624023
    3. 'rstrip' → logprob: -12.875036239624023
    4. ' split' → logprob: -13.250036239624023
    5. '(split' → logprob: -14.875036239624023
    6. 'read' → logprob: -15.000036239624023
    7. 'spl' → logprob: -15.875036239624023
    8. '```' → logprob: -16.125036239624023
    9. 'rs' → logprob: -17.750036239624023
    10. 'sp' → logprob: -18.250036239624023

Token 22: '()),' (ID: 24379)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12343444675207138
    2. '),' → logprob: -2.623434543609619
    3. '))' → logprob: -3.248434543609619
    4. ')),' → logprob: -6.248434543609619
    5. '())' → logprob: -6.498434543609619
    6. '()' → logprob: -6.998434543609619
    7. '()),' → logprob: -8.123434066772461
    8. ')))' → logprob: -11.123434066772461
    9. '()))' → logprob: -11.123434066772461
    10. '(' → logprob: -11.373434066772461

Token 23: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5808970332145691
    2. ' ' → logprob: -0.8308970332145691
    3. '100' → logprob: -5.330896854400635
    4. '1' → logprob: -10.330897331237793
    5. 'int' → logprob: -10.955897331237793
    6. ' (' → logprob: -11.580897331237793
    7. ' ' → logprob: -11.705897331237793
    8. '998' → logprob: -11.705897331237793
    9. ' int' → logprob: -11.830897331237793
    10. ')' → logprob: -12.205897331237793

Token 24: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005115395877510309
    2. '100' → logprob: -5.380115509033203
    3. 'int' → logprob: -8.255115509033203
    4. '998' → logprob: -8.880115509033203
    5. '1' → logprob: -10.255115509033203
    6. ' ' → logprob: -10.380115509033203
    7. '101' → logprob: -11.755115509033203
    8. '999' → logprob: -12.380115509033203
    9. '123' → logprob: -12.755115509033203
    10. '(' → logprob: -12.880115509033203

Token 25: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.951771421066951e-05
    2. '247' → logprob: -10.875029563903809
    3. '457' → logprob: -13.250029563903809
    4. '+' → logprob: -13.750029563903809
    5. '257' → logprob: -13.750029563903809
    6. '```' → logprob: -13.750029563903809
    7. '254' → logprob: -14.250029563903809
    8. '2' → logprob: -14.500029563903809
    9. '245' → logprob: -14.625029563903809
    10. '587' → logprob: -14.625029563903809

Token 26: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.006896997801959515
    2. '853' → logprob: -5.00689697265625
    3. '857' → logprob: -8.88189697265625
    4. '3' → logprob: -11.00689697265625
    5. '357' → logprob: -11.63189697265625
    6. '```' → logprob: -12.25689697265625
    7. '257' → logprob: -12.50689697265625
    8. '253' → logprob: -13.25689697265625
    9. '53' → logprob: -13.50689697265625
    10. '753' → logprob: -14.00689697265625

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22158798575401306
    2. '\n' → logprob: -2.471587896347046
    3. '
' → logprob: -3.221587896347046
    4. ' 
' → logprob: -4.096588134765625
    5. '[n' → logprob: -4.721588134765625
    6. '(n' → logprob: -4.846588134765625
    7. '```' → logprob: -5.096588134765625
    8. ')' → logprob: -5.096588134765625
    9. 'n' → logprob: -5.471588134765625
    10. '' → logprob: -5.721588134765625

Token 28: 'w' (ID: 86)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027279485017061234
    2. ' 
' → logprob: -4.777279376983643
    3. '
' → logprob: -5.027279376983643
    4. '\n' → logprob: -5.777279376983643
    5. '(n' → logprob: -6.402279376983643
    6. 'n' → logprob: -7.027279376983643
    7. '  
' → logprob: -7.027279376983643
    8. '[n' → logprob: -7.152279376983643
    9. '[
' → logprob: -7.527279376983643
    10. '```' → logprob: -7.777279376983643

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06605561822652817
    2. '=' → logprob: -2.9410555362701416
    3. 'e' → logprob: -5.191055774688721
    4. 's' → logprob: -5.566055774688721
    5. 'eight' → logprob: -7.816055774688721
    6. ' ' → logprob: -7.941055774688721
    7. ',' → logprob: -8.191055297851562
    8. ' =[' → logprob: -8.566055297851562
    9. 'ays' → logprob: -9.066055297851562
    10. '=[' → logprob: -9.941055297851562

Token 30: ' u' (ID: 337)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9690222144126892
    2. ' h' → logprob: -1.719022274017334
    3. 'a' → logprob: -1.844022274017334
    4. ' a' → logprob: -3.219022274017334
    5. 'v' → logprob: -3.469022274017334
    6. 'k' → logprob: -3.469022274017334
    7. 'l' → logprob: -3.719022274017334
    8. ' k' → logprob: -3.844022274017334
    9. ' v' → logprob: -4.094022274017334
    10. 'c' → logprob: -4.219022274017334

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4802038371562958
    2. ' =' → logprob: -0.9802038669586182
    3. ',' → logprob: -5.105203628540039
    4. ' ,' → logprob: -11.105203628540039
    5. ' ' → logprob: -11.480203628540039
    6. 's' → logprob: -11.980203628540039
    7. ')' → logprob: -13.230203628540039
    8. 'w' → logprob: -13.480203628540039
    9. 'p' → logprob: -14.105203628540039
    10. 'n' → logprob: -14.105203628540039

Token 32: ' ' (ID: 220)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[],' → logprob: -1.1311285495758057
    2. 'map' → logprob: -1.5061285495758057
    3. '[n' → logprob: -2.1311285495758057
    4. ' map' → logprob: -2.5061285495758057
    5. 'list' → logprob: -2.7561285495758057
    6. '[' → logprob: -2.8811285495758057
    7. '[]' → logprob: -3.2561285495758057
    8. ' [],' → logprob: -3.5061285495758057
    9. '0' → logprob: -3.8811285495758057
    10. ' list' → logprob: -4.506128311157227

Token 33: '3' (ID: 18)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.43461111187934875
    2. '[n' → logprob: -1.9346110820770264
    3. ' map' → logprob: -2.8096110820770264
    4. 'list' → logprob: -2.8096110820770264
    5. '[],' → logprob: -3.3096110820770264
    6. '(n' → logprob: -4.8096113204956055
    7. '[' → logprob: -5.1846113204956055
    8. '1' → logprob: -5.1846113204956055
    9. 'input' → logprob: -5.3096113204956055
    10. '(map' → logprob: -5.4346113204956055

Token 34: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018612129613757133
    2. ' ,' → logprob: -4.893611907958984
    3. '**' → logprob: -5.768611907958984
    4. '0' → logprob: -6.393611907958984
    5. '*' → logprob: -6.768611907958984
    6. ',
' → logprob: -7.268611907958984
    7. ' ' → logprob: -7.643611907958984
    8. '[' → logprob: -7.768611907958984
    9. 'w' → logprob: -7.768611907958984
    10. '2' → logprob: -8.268611907958984

Token 35: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1044193506240845
    2. 'm' → logprob: -1.6044193506240845
    3. '(n' → logprob: -1.8544193506240845
    4. ' n' → logprob: -2.229419231414795
    5. ' (' → logprob: -2.354419231414795
    6. ' m' → logprob: -3.104419231414795
    7. '(m' → logprob: -4.229419231414795
    8. '[' → logprob: -4.229419231414795
    9. ' [' → logprob: -4.979419231414795
    10. ' ' → logprob: -4.979419231414795

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01204134151339531
    2. ' ,' → logprob: -5.2620415687561035
    3. '*' → logprob: -6.0120415687561035
    4. '+' → logprob: -7.2620415687561035
    5. '**' → logprob: -7.3870415687561035
    6. ' ' → logprob: -7.7620415687561035
    7. 'w' → logprob: -7.7620415687561035
    8. ')' → logprob: -7.7620415687561035
    9. ',n' → logprob: -8.262041091918945
    10. ',w' → logprob: -8.512041091918945

Token 37: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5977044701576233
    2. ' n' → logprob: -1.0977044105529785
    3. '3' → logprob: -3.8477044105529785
    4. 'n' → logprob: -3.9727044105529785
    5. ' (' → logprob: -3.9727044105529785
    6. '2' → logprob: -4.2227044105529785
    7. ' [' → logprob: -4.2227044105529785
    8. ' m' → logprob: -5.3477044105529785
    9. '[' → logprob: -5.4727044105529785
    10. '4' → logprob: -5.7227044105529785

Token 38: '.__' (ID: 10210)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25046923756599426
    2. '(n' → logprob: -1.8754692077636719
    3. '((' → logprob: -3.000469207763672
    4. '(input' → logprob: -4.750469207763672
    5. '(pow' → logprob: -6.000469207763672
    6. '(len' → logprob: -6.250469207763672
    7. '(m' → logprob: -6.500469207763672
    8. '(s' → logprob: -7.125469207763672
    9. '<|end|>' → logprob: -7.375469207763672
    10. '(w' → logprob: -7.375469207763672

Token 39: 'sub' (ID: 3834)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.6889836192131042
    2. 'pow' → logprob: -0.8139836192131042
    3. 'flo' → logprob: -3.438983678817749
    4. 'tr' → logprob: -4.43898344039917
    5. 'add' → logprob: -5.68898344039917
    6. 'mod' → logprob: -5.81398344039917
    7. 'i' → logprob: -6.93898344039917
    8. 'xor' → logprob: -7.18898344039917
    9. 'r' → logprob: -7.43898344039917
    10. 'rm' → logprob: -7.93898344039917

Token 40: '__(*' (ID: 185514)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.035553593188524246
    2. '__(' → logprob: -4.535553455352783
    3. '__((' → logprob: -5.285553455352783
    4. '<|end|>' → logprob: -5.285553455352783
    5. 'stract' → logprob: -5.535553455352783
    6. '__(
' → logprob: -6.035553455352783
    7. '__(*' → logprob: -6.035553455352783
    8. '__('' → logprob: -6.285553455352783
    9. 'tract' → logprob: -6.910553455352783
    10. '___' → logprob: -7.160553455352783

Token 41: 're' (ID: 264)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17211781442165375
    2. ')' → logprob: -1.922117829322815
    3. '(' → logprob: -5.547117710113525
    4. 'div' → logprob: -5.672117710113525
    5. 'n' → logprob: -6.547117710113525
    6. ',' → logprob: -7.297117710113525
    7. '(w' → logprob: -7.422117710113525
    8. 'w' → logprob: -8.047118186950684
    9. '(div' → logprob: -8.297118186950684
    10. '[n' → logprob: -8.797118186950684

Token 42: 'versed' (ID: 76479)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6738936901092529
    2. 'verse' → logprob: -1.423893690109253
    3. 'v' → logprob: -2.173893690109253
    4. 'f' → logprob: -3.423893690109253
    5. 'duce' → logprob: -3.423893690109253
    6. 'versed' → logprob: -3.423893690109253
    7. 'w' → logprob: -4.423893928527832
    8. 'div' → logprob: -4.423893928527832
    9. 'place' → logprob: -6.173893928527832
    10. '(w' → logprob: -6.298893928527832

Token 43: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.050883226096630096
    2. ')(' → logprob: -3.0508832931518555
    3. '(w' → logprob: -6.8008832931518555
    4. ')' → logprob: -7.6758832931518555
    5. '((' → logprob: -8.050883293151855
    6. '(' → logprob: -8.425883293151855
    7. ')((' → logprob: -9.675883293151855
    8. '(m' → logprob: -10.550883293151855
    9. ' (' → logprob: -11.050883293151855
    10. ',' → logprob: -11.300883293151855

Token 44: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09788449108600616
    2. '(n' → logprob: -2.7228844165802
    3. 'w' → logprob: -4.597884654998779
    4. 'm' → logprob: -4.847884654998779
    5. ')(' → logprob: -5.972884654998779
    6. ')' → logprob: -6.097884654998779
    7. ',' → logprob: -6.472884654998779
    8. '))' → logprob: -7.472884654998779
    9. ' (' → logprob: -8.097884178161621
    10. '(' → logprob: -8.097884178161621

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01006841566413641
    2. ',n' → logprob: -5.385068416595459
    3. ')))' → logprob: -6.510068416595459
    4. ' ,' → logprob: -6.635068416595459
    5. ',w' → logprob: -6.760068416595459
    6. '))' → logprob: -7.635068416595459
    7. ',u' → logprob: -8.1350679397583
    8. 'w' → logprob: -8.6350679397583
    9. '(n' → logprob: -8.7600679397583
    10. ',m' → logprob: -8.8850679397583

Token 46: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14152078330516815
    2. 'w' → logprob: -2.6415207386016846
    3. ' m' → logprob: -3.7665207386016846
    4. '1' → logprob: -4.266520977020264
    5. '0' → logprob: -4.891520977020264
    6. 'n' → logprob: -4.891520977020264
    7. '3' → logprob: -6.266520977020264
    8. '2' → logprob: -6.516520977020264
    9. ' w' → logprob: -6.516520977020264
    10. 'u' → logprob: -7.016520977020264

Token 47: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.030235785990953445
    2. 'w' → logprob: -4.405235767364502
    3. ' m' → logprob: -4.530235767364502
    4. 'n' → logprob: -5.655235767364502
    5. '1' → logprob: -6.655235767364502
    6. '0' → logprob: -8.03023624420166
    7. '2' → logprob: -8.40523624420166
    8. ' w' → logprob: -8.53023624420166
    9. '(m' → logprob: -8.65523624420166
    10. '(n' → logprob: -8.65523624420166

Token 48: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.09183306246995926
    2. '))' → logprob: -2.4668331146240234
    3. ',' → logprob: -7.091833114624023
    4. ')' → logprob: -7.591833114624023
    5. ' ' → logprob: -7.966833114624023
    6. ' ))' → logprob: -8.591833114624023
    7. '0' → logprob: -8.716833114624023
    8. '))))' → logprob: -9.091833114624023
    9. '))),' → logprob: -9.216833114624023
    10. ')),' → logprob: -9.216833114624023

Token 49: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3767484724521637
    2. 'w' → logprob: -2.001748561859131
    3. ' ' → logprob: -3.376748561859131
    4. '
' → logprob: -3.751748561859131
    5. '(' → logprob: -3.876748561859131
    6. '(n' → logprob: -4.126748561859131
    7. '<|end|>' → logprob: -4.376748561859131
    8. '*' → logprob: -4.376748561859131
    9. ',' → logprob: -4.876748561859131
    10. 'u' → logprob: -5.001748561859131

Token 50: ' fact' (ID: 2840)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.27460840344429016
    2. ' calculate' → logprob: -3.2746083736419678
    3. ' f' → logprob: -3.3996083736419678
    4. ' combine' → logprob: -3.5246083736419678
    5. ' solve' → logprob: -3.7746083736419678
    6. ' multiply' → logprob: -4.024608612060547
    7. ' factor' → logprob: -4.399608612060547
    8. ' pow' → logprob: -4.774608612060547
    9. ' dfs' → logprob: -5.149608612060547
    10. ' count' → logprob: -5.274608612060547

Token 51: '_seq' (ID: 34260)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43076178431510925
    2. '(n' → logprob: -1.3057618141174316
    3. 'or' → logprob: -2.8057618141174316
    4. 'orial' → logprob: -5.180761814117432
    5. 'ory' → logprob: -5.430761814117432
    6. '(x' → logprob: -5.805761814117432
    7. 'o' → logprob: -6.805761814117432
    8. '_' → logprob: -7.680761814117432
    9. 'orl' → logprob: -7.680761814117432
    10. '(i' → logprob: -7.680761814117432

Token 52: '(limit' (ID: 112473)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2522256374359131
    2. '(k' → logprob: -2.002225637435913
    3. '(' → logprob: -2.752225637435913
    4. '(x' → logprob: -4.627225875854492
    5. '(i' → logprob: -5.502225875854492
    6. '(l' → logprob: -5.752225875854492
    7. '(w' → logprob: -5.752225875854492
    8. '(start' → logprob: -6.877225875854492
    9. '(a' → logprob: -7.502225875854492
    10. '(s' → logprob: -7.877225875854492

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11425954848527908
    2. '):' → logprob: -2.2392594814300537
    3. ' ,' → logprob: -7.614259719848633
    4. ')' → logprob: -7.739259719848633
    5. ' ):' → logprob: -8.864259719848633
    6. '):
' → logprob: -9.614259719848633
    7. '(n' → logprob: -9.614259719848633
    8. ',n' → logprob: -10.239259719848633
    9. '=' → logprob: -10.364259719848633
    10. '):
' → logprob: -10.364259719848633

Token 54: ' acc' (ID: 1259)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7974880933761597
    2. ' start' → logprob: -0.9224880933761597
    3. ' step' → logprob: -3.297488212585449
    4. 'step' → logprob: -3.297488212585449
    5. ' ' → logprob: -4.922488212585449
    6. 'mod' → logprob: -5.422488212585449
    7. ' x' → logprob: -5.422488212585449
    8. 'x' → logprob: -5.547488212585449
    9. ' mod' → logprob: -5.797488212585449
    10. ' f' → logprob: -5.922488212585449

Token 55: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14935389161109924
    2. '):' → logprob: -2.7743539810180664
    3. ',' → logprob: -3.0243539810180664
    4. '=None' → logprob: -3.7743539810180664
    5. '=lambda' → logprob: -6.024353981018066
    6. '=[]' → logprob: -6.399353981018066
    7. ' =' → logprob: -8.899353981018066
    8. 'u' → logprob: -9.399353981018066
    9. 'umulator' → logprob: -9.524353981018066
    10. ')' → logprob: -9.649353981018066

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005395700572989881
    2. ' ' → logprob: -7.625539779663086
    3. '(' → logprob: -10.875539779663086
    4. ']' → logprob: -11.375539779663086
    5. '0' → logprob: -11.750539779663086
    6. '2' → logprob: -12.750539779663086
    7. '  ' → logprob: -13.375539779663086
    8. ' (' → logprob: -13.438039779663086
    9. ')' → logprob: -13.750539779663086
    10. '[' → logprob: -14.500539779663086

Token 57: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.3911716639995575
    2. ']' → logprob: -1.2661716938018799
    3. '],' → logprob: -3.51617169380188
    4. ',' → logprob: -5.391171455383301
    5. ']:' → logprob: -5.766171455383301
    6. ']):
' → logprob: -5.891171455383301
    7. '])' → logprob: -7.266171455383301
    8. ' ]' → logprob: -8.1411714553833
    9. '):' → logprob: -9.1411714553833
    10. ']*' → logprob: -9.3911714553833

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4021904170513153
    2. ',' → logprob: -2.2771904468536377
    3. ' ' → logprob: -2.5271904468536377
    4. ' :' → logprob: -3.1521904468536377
    5. '   ' → logprob: -3.2771904468536377
    6. '    ' → logprob: -4.027190208435059
    7. '):' → logprob: -4.402190208435059
    8. ' while' → logprob: -4.527190208435059
    9. ' for' → logprob: -4.777190208435059
    10. '	' → logprob: -5.527190208435059

Token 59: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2031846046447754
    2. ' if' → logprob: -1.4531846046447754
    3. ' while' → logprob: -1.5781846046447754
    4. '    ' → logprob: -2.0781846046447754
    5. ' for' → logprob: -2.5781846046447754
    6. '   ' → logprob: -4.453184604644775
    7. ',' → logprob: -4.453184604644775
    8. ' i' → logprob: -4.828184604644775
    9. ' acc' → logprob: -5.328184604644775
    10. ' 
' → logprob: -5.578184604644775

Token 60: ' step' (ID: 5983)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.2584218382835388
    2. 'inner' → logprob: -2.2584218978881836
    3. ' f' → logprob: -2.7584218978881836
    4. ' _' → logprob: -4.508421897888184
    5. '_' → logprob: -4.758421897888184
    6. ' acc' → logprob: -4.758421897888184
    7. ' helper' → logprob: -5.258421897888184
    8. 'f' → logprob: -5.758421897888184
    9. 'acc' → logprob: -5.758421897888184
    10. ' lambda' → logprob: -6.133421897888184

Token 61: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6725292205810547
    2. '(n' → logprob: -1.0475292205810547
    3. '(i' → logprob: -2.1725292205810547
    4. '(acc' → logprob: -4.797529220581055
    5. '():' → logprob: -5.047529220581055
    6. '(k' → logprob: -5.297529220581055
    7. '(' → logprob: -6.172529220581055
    8. '(lambda' → logprob: -6.922529220581055
    9. '(a' → logprob: -7.547529220581055
    10. '(last' → logprob: -8.297529220581055

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06607827544212341
    2. ',' → logprob: -2.8160781860351562
    3. '):
' → logprob: -5.941078186035156
    4. ':' → logprob: -7.691078186035156
    5. '=' → logprob: -7.941078186035156
    6. '   ' → logprob: -8.191078186035156
    7. ')' → logprob: -8.941078186035156
    8. ' ):' → logprob: -9.566078186035156
    9. '),' → logprob: -10.441078186035156
    10. '):
' → logprob: -10.566078186035156

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3718652129173279
    2. '   ' → logprob: -1.9968652725219727
    3. '    ' → logprob: -2.9968652725219727
    4. ' return' → logprob: -3.2468652725219727
    5. ',' → logprob: -3.8718652725219727
    6. 'acc' → logprob: -3.8718652725219727
    7. ' acc' → logprob: -4.121865272521973
    8. 'return' → logprob: -4.246865272521973
    9. '	acc' → logprob: -5.371865272521973
    10. ':' → logprob: -6.496865272521973

Token 64: ' if' (ID: 538)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.5703067183494568
    2. ' return' → logprob: -1.6953067779541016
    3. 'acc' → logprob: -1.9453067779541016
    4. 'return' → logprob: -2.6953067779541016
    5. '           ' → logprob: -3.5703067779541016
    6. '   ' → logprob: -5.695306777954102
    7. '        ' → logprob: -5.820306777954102
    8. '	acc' → logprob: -6.195306777954102
    9. '            ' → logprob: -6.820306777954102
    10. '       ' → logprob: -7.195306777954102

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3151632249355316
    2. ' i' → logprob: -1.315163254737854
    3. 'len' → logprob: -7.0651631355285645
    4. 'acc' → logprob: -7.6901631355285645
    5. ' len' → logprob: -8.440163612365723
    6. ' acc' → logprob: -8.690163612365723
    7. '	i' → logprob: -9.815163612365723
    8. ' ' → logprob: -9.940163612365723
    9. ' not' → logprob: -10.315163612365723
    10. 'limit' → logprob: -10.565163612365723

Token 66: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.32275107502937317
    2. '<=' → logprob: -1.5727510452270508
    3. ' >' → logprob: -3.197751045227051
    4. ' <=' → logprob: -3.822751045227051
    5. '==' → logprob: -5.447751045227051
    6. '>=' → logprob: -7.322751045227051
    7. '<' → logprob: -8.19775104522705
    8. ' ==' → logprob: -8.94775104522705
    9. '<len' → logprob: -9.44775104522705
    10. '=' → logprob: -10.07275104522705

Token 67: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.16023783385753632
    2. ' limit' → logprob: -1.9102377891540527
    3. '(limit' → logprob: -12.410238265991211
    4. '0' → logprob: -12.785238265991211
    5. ' ' → logprob: -12.785238265991211
    6. '   ' → logprob: -13.785238265991211
    7. '  ' → logprob: -14.535238265991211
    8. 'lim' → logprob: -15.285238265991211
    9. '_limit' → logprob: -15.410238265991211
    10. '1' → logprob: -15.472738265991211

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44839733839035034
    2. ':
' → logprob: -1.0733973979949951
    3. ':return' → logprob: -4.073397159576416
    4. '           ' → logprob: -6.198397159576416
    5. '       ' → logprob: -9.323397636413574
    6. 'return' → logprob: -9.448397636413574
    7. '):
' → logprob: -9.573397636413574
    8. ':
' → logprob: -9.948397636413574
    9. '):' → logprob: -10.573397636413574
    10. ' return' → logprob: -10.573397636413574

Token 69: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3396250009536743
    2. '           ' → logprob: -1.7146250009536743
    3. 'return' → logprob: -2.4646248817443848
    4. '       ' → logprob: -4.089624881744385
    5. '   ' → logprob: -5.839624881744385
    6. ':return' → logprob: -6.839624881744385
    7. '
' → logprob: -7.089624881744385
    8. ' ' → logprob: -7.464624881744385
    9. '	return' → logprob: -7.964624881744385
    10. ':' → logprob: -9.214625358581543

Token 70: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.34918901324272156
    2. 'acc' → logprob: -1.224189043045044
    3. ' ' → logprob: -8.349188804626465
    4. ' None' → logprob: -8.974188804626465
    5. '	acc' → logprob: -9.474188804626465
    6. '  ' → logprob: -9.724188804626465
    7. 'None' → logprob: -10.224188804626465
    8. '   ' → logprob: -10.474188804626465
    9. '    ' → logprob: -10.599188804626465
    10. ' accu' → logprob: -10.599188804626465

Token 71: '
' (ID: 198)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5649775266647339
    2. '       ' → logprob: -1.4399775266647339
    3. '
' → logprob: -1.8149775266647339
    4. '[' → logprob: -3.8149776458740234
    5. '        
' → logprob: -6.064977645874023
    6. '   ' → logprob: -6.689977645874023
    7. 'return' → logprob: -7.064977645874023
    8. '           ' → logprob: -7.439977645874023
    9. '[]
' → logprob: -7.439977645874023
    10. '[::-' → logprob: -7.939977645874023

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02699512615799904
    2. '
' → logprob: -4.7769951820373535
    3. '   ' → logprob: -5.6519951820373535
    4. '        
' → logprob: -5.6519951820373535
    5. '	' → logprob: -6.2769951820373535
    6. '    ' → logprob: -6.6519951820373535
    7. ' else' → logprob: -6.6519951820373535
    8. '    
' → logprob: -6.7769951820373535
    9. '           ' → logprob: -7.5269951820373535
    10. 's' → logprob: -7.6519951820373535

Token 73: ' acc' (ID: 1259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.134773388504982
    2. 'acc' (adapté à ' acc') → logprob: -2.8847734928131104
    3. ' acc' → logprob: -4.009773254394531
    4. '
' → logprob: -4.009773254394531
    5. ' return' → logprob: -4.509773254394531
    6. '   ' → logprob: -4.759773254394531
    7. 'return' → logprob: -5.509773254394531
    8. '        
' → logprob: -6.134773254394531
    9. '           ' → logprob: -6.509773254394531
    10. '    ' → logprob: -6.884773254394531

Token 74: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006723891478031874
    2. '.' → logprob: -5.006723880767822
    3. ' .' → logprob: -12.75672435760498
    4. '.app' → logprob: -12.88172435760498
    5. '.ap' → logprob: -13.75672435760498
    6. '[-' → logprob: -13.88172435760498
    7. 'append' → logprob: -14.00672435760498
    8. '.extend' → logprob: -15.75672435760498
    9. '_append' → logprob: -16.756723403930664
    10. '[' → logprob: -17.631723403930664

Token 75: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0005823421524837613
    2. '(' → logprob: -7.500582218170166
    3. '((' → logprob: -11.375582695007324
    4. '(m' → logprob: -11.750582695007324
    5. 'acc' → logprob: -12.250582695007324
    6. '(ac' → logprob: -13.250582695007324
    7. '(i' → logprob: -13.750582695007324
    8. ' acc' → logprob: -13.750582695007324
    9. '(
' → logprob: -14.625582695007324
    10. '	acc' → logprob: -14.875582695007324

Token 76: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.054500666621607e-06
    2. '[i' → logprob: -13.00000286102295
    3. '[' → logprob: -15.25000286102295
    4. ' [-' → logprob: -15.50000286102295
    5. '-' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '	' → logprob: -17.375003814697266
    8. '```' → logprob: -18.125003814697266
    9. '[
' → logprob: -18.500003814697266
    10. ' ' → logprob: -19.125003814697266

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10361634194850922
    2. ']' → logprob: -2.478616237640381
    3. 'i' → logprob: -5.228616237640381
    4. '*' → logprob: -5.978616237640381
    5. ']*' → logprob: -6.103616237640381
    6. ')' → logprob: -7.103616237640381
    7. 'token' → logprob: -7.603616237640381
    8. '-' → logprob: -7.728616237640381
    9. '   ' → logprob: -7.728616237640381
    10. ' ' → logprob: -7.853616237640381

Token 78: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11587488651275635
    2. ' *' → logprob: -2.240874767303467
    3. '*i' → logprob: -5.990874767303467
    4. ' ' → logprob: -8.115875244140625
    5. ' ' → logprob: -9.865875244140625
    6. ')' → logprob: -10.115875244140625
    7. ']*' → logprob: -10.615875244140625
    8. ')*' → logprob: -10.990875244140625
    9. ']' → logprob: -10.990875244140625
    10. 'i' → logprob: -11.115875244140625

Token 79: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008619893342256546
    2. ' i' → logprob: -4.758619785308838
    3. ' ' → logprob: -12.633620262145996
    4. 'step' → logprob: -14.633620262145996
    5. ' step' → logprob: -15.008620262145996
    6. '<|end|>' → logprob: -15.258620262145996
    7. '	i' → logprob: -15.383620262145996
    8. '(i' → logprob: -15.508620262145996
    9. '<|end|>' → logprob: -16.63361930847168
    10. ' (' → logprob: -16.63361930847168

Token 80: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14345912635326385
    2. '%' → logprob: -2.0184590816497803
    3. ')' → logprob: -8.14345932006836
    4. '%i' → logprob: -8.26845932006836
    5. '%m' → logprob: -9.51845932006836
    6. '%n' → logprob: -9.76845932006836
    7. ')
' → logprob: -9.89345932006836
    8. '%c' → logprob: -10.76845932006836
    9. '%d' → logprob: -12.14345932006836
    10. '%x' → logprob: -12.39345932006836

Token 81: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10021012276411057
    2. ' MOD' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.725210189819336
    4. '_MOD' → logprob: -13.850210189819336
    5. '.MOD' → logprob: -14.600210189819336
    6. ' ' → logprob: -14.725210189819336
    7. 'MO' → logprob: -15.975210189819336
    8. 'MODULE' → logprob: -16.350210189819336
    9. '   ' → logprob: -16.975210189819336
    10. 'mod' → logprob: -17.225210189819336

Token 82: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.157207652926445
    2. ')' → logprob: -2.282207727432251
    3. '       ' → logprob: -3.157207727432251
    4. ')
' → logprob: -7.532207489013672
    5. ')return' → logprob: -9.032207489013672
    6. ');' → logprob: -9.657207489013672
    7. '   ' → logprob: -10.407207489013672
    8. '),' → logprob: -10.532207489013672
    9. ' )
' → logprob: -10.657207489013672
    10. ')

' → logprob: -11.032207489013672

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072676134295761585
    2. '
' → logprob: -6.382267475128174
    3. ' return' → logprob: -6.382267475128174
    4. '        
' → logprob: -6.382267475128174
    5. '   ' → logprob: -7.882267475128174
    6. 'return' → logprob: -8.132267951965332
    7. '	' → logprob: -8.507267951965332
    8. '    
' → logprob: -8.632267951965332
    9. ' ' → logprob: -8.757267951965332
    10. ' 
' → logprob: -8.757267951965332

Token 84: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5840389728546143
    2. 'return' (adapté à ' return') → logprob: -1.4590389728546143
    3. '       ' → logprob: -1.5840389728546143
    4. ' step' → logprob: -5.834038734436035
    5. '   ' → logprob: -6.834038734436035
    6. 'step' → logprob: -8.209038734436035
    7. '	return' → logprob: -8.334038734436035
    8. ' ' → logprob: -9.209038734436035
    9. ' ' → logprob: -9.584038734436035
    10. '	' → logprob: -11.084038734436035

Token 85: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.04861064255237579
    2. ' step' → logprob: -3.0486106872558594
    3. '	step' → logprob: -11.17361068725586
    4. 'lambda' → logprob: -12.67361068725586
    5. '(step' → logprob: -13.29861068725586
    6. ' ' → logprob: -13.42361068725586
    7. ' lambda' → logprob: -14.29861068725586
    8. ' ' → logprob: -14.79861068725586
    9. 'fact' → logprob: -14.79861068725586
    10. 'acc' → logprob: -15.29861068725586

Token 86: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.62515926361084
    4. ' (' → logprob: -15.50015926361084
    5. ' i' → logprob: -16.125160217285156
    6. 'i' → logprob: -16.250160217285156
    7. '(I' → logprob: -17.000160217285156
    8. '<|end|>' → logprob: -17.125160217285156
    9. '(++' → logprob: -18.125160217285156
    10. '(int' → logprob: -18.125160217285156

Token 87: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043001484125852585
    2. ' +' → logprob: -3.168001413345337
    3. ' ' → logprob: -13.793001174926758
    4. '+i' → logprob: -14.543001174926758
    5. '＋' → logprob: -15.293001174926758
    6. '+
' → logprob: -15.668001174926758
    7. '1' → logprob: -16.418001174926758
    8. '+)' → logprob: -16.543001174926758
    9. ' ' → logprob: -16.668001174926758
    10. '```' → logprob: -17.418001174926758

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. ')' → logprob: -14.5001802444458
    4. '   ' → logprob: -15.1251802444458
    5. '<|end|>' → logprob: -16.250181198120117
    6. '```' → logprob: -16.750181198120117
    7. '2' → logprob: -17.000181198120117
    8. '  ' → logprob: -17.500181198120117
    9. '+' → logprob: -17.875181198120117
    10. '-' → logprob: -18.000181198120117

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02475370280444622
    2. ')
' → logprob: -3.7747538089752197
    3. ')

' → logprob: -6.524753570556641
    4. ')return' → logprob: -11.39975357055664
    5. ' )' → logprob: -11.77475357055664
    6. ')
' → logprob: -11.77475357055664
    7. '   ' → logprob: -12.27475357055664
    8. '
' → logprob: -13.27475357055664
    9. 'return' → logprob: -13.39975357055664
    10. ')

' → logprob: -14.02475357055664

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08679673075675964
    2. 'return' → logprob: -2.836796760559082
    3. '(n' → logprob: -4.336796760559082
    4. 'n' → logprob: -5.086796760559082
    5. ' return' → logprob: -5.961796760559082
    6. 'limit' → logprob: -7.086796760559082
    7. '
' → logprob: -7.711796760559082
    8. ')' → logprob: -8.211796760559082
    9. '(limit' → logprob: -8.586796760559082
    10. '(' → logprob: -8.711796760559082

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02998003177344799
    2. 'step' → logprob: -4.279980182647705
    3. ' return' → logprob: -4.404980182647705
    4. 'fact' → logprob: -6.779980182647705
    5. '
' → logprob: -7.404980182647705
    6. ' step' → logprob: -7.779980182647705
    7. 'limit' → logprob: -7.904980182647705
    8. ' ' → logprob: -8.779979705810547
    9. '   ' → logprob: -8.904979705810547
    10. '(step' → logprob: -9.279979705810547

Token 92: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.6931820511817932
    2. 'step' → logprob: -0.6931820511817932
    3. 'fact' → logprob: -11.193181991577148
    4. ' fact' → logprob: -11.318181991577148
    5. '(step' → logprob: -11.818181991577148
    6. '	step' → logprob: -13.943181991577148
    7. 'acc' → logprob: -15.443181991577148
    8. 'def' → logprob: -16.31818199157715
    9. 'factor' → logprob: -16.94318199157715
    10. ' ' → logprob: -16.94318199157715

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4378848391061183e-05
    2. '1' → logprob: -12.000014305114746
    3. '(n' → logprob: -12.500014305114746
    4. '2' → logprob: -13.750014305114746
    5. ' ' → logprob: -14.125014305114746
    6. '<|end|>' → logprob: -14.125014305114746
    7. 'def' → logprob: -14.875014305114746
    8. '((' → logprob: -14.875014305114746
    9. ' (' → logprob: -15.125014305114746
    10. '```' → logprob: -15.375014305114746

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006060526939108968
    2. ' ' → logprob: -8.000605583190918
    3. '2' → logprob: -8.250605583190918
    4. '(' → logprob: -12.375605583190918
    5. '0' → logprob: -12.875605583190918
    6. ')' → logprob: -13.125605583190918
    7. '   ' → logprob: -14.625605583190918
    8. '  ' → logprob: -16.625606536865234
    9. '```' → logprob: -16.875606536865234
    10. 'w' → logprob: -17.250606536865234

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.62501049041748
    3. ')
' → logprob: -14.25001049041748
    4. '))' → logprob: -14.87501049041748
    5. ')return' → logprob: -16.375009536743164
    6. ')))' → logprob: -16.875009536743164
    7. ')n' → logprob: -17.000009536743164
    8. ')#' → logprob: -17.500009536743164
    9. ')}' → logprob: -17.875009536743164
    10. '),' → logprob: -18.000009536743164

Token 96: 'F' (ID: 37)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.22084125876426697
    2. 'f' → logprob: -2.7208411693573
    3. 'facts' → logprob: -2.7208411693573
    4. 'factor' → logprob: -2.8458411693573
    5. 'fac' → logprob: -5.345841407775879
    6. 'res' → logprob: -7.595841407775879
    7. 'fa' → logprob: -7.720841407775879
    8. 'for' → logprob: -7.845841407775879
    9. 'def' → logprob: -7.970841407775879
    10. ')' → logprob: -7.970841407775879

Token 97: ' =' (ID: 314)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.2805635929107666
    2. '_' → logprob: -1.6555635929107666
    3. 'ACT' → logprob: -3.7805635929107666
    4. 'A' → logprob: -4.6555633544921875
    5. 'AC' → logprob: -5.0305633544921875
    6. 'ac' → logprob: -5.5305633544921875
    7. '(' → logprob: -6.4055633544921875
    8. '_act' → logprob: -6.6555633544921875
    9. 'acto' → logprob: -6.6555633544921875
    10. '_seq' → logprob: -6.7805633544921875

Token 98: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.04859974980354309
    2. ' fact' → logprob: -3.0485997200012207
    3. 'act' → logprob: -11.798600196838379
    4. ' ' → logprob: -13.798600196838379
    5. '.fact' → logprob: -14.173600196838379
    6. '_fact' → logprob: -14.548600196838379
    7. 'list' → logprob: -15.048600196838379
    8. 'Fact' → logprob: -15.173600196838379
    9. 'f' → logprob: -15.173600196838379
    10. '  ' → logprob: -15.423600196838379

Token 99: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -5.512236498361744e-07
    2. 'seq' → logprob: -14.625000953674316
    3. '_' → logprob: -18.25
    4. '_se' → logprob: -18.875
    5. '_SEQ' → logprob: -19.125
    6. 'Seq' → logprob: -19.5
    7. '_sec' → logprob: -20.5
    8. '__' → logprob: -22.375
    9. '(seq' → logprob: -22.5
    10. '_fact' → logprob: -22.625

Token 100: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.10104198753833771
    2. '(u' → logprob: -2.8510420322418213
    3. '(m' → logprob: -3.9760420322418213
    4. '(n' → logprob: -4.476041793823242
    5. '(' → logprob: -5.226041793823242
    6. '(max' → logprob: -5.976041793823242
    7. 'w' → logprob: -8.726041793823242
    8. '((' → logprob: -10.476041793823242
    9. '(min' → logprob: -10.476041793823242
    10. 'u' → logprob: -11.601041793823242

Token 101: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.4192871175473556e-05
    2. ' )' → logprob: -10.375054359436035
    3. '))' → logprob: -11.000054359436035
    4. '+' → logprob: -12.625054359436035
    5. ')
' → logprob: -13.625054359436035
    6. ')

' → logprob: -15.375054359436035
    7. 'w' → logprob: -15.625054359436035
    8. ')))' → logprob: -15.750054359436035
    9. '),' → logprob: -15.750054359436035
    10. ',)' → logprob: -15.875054359436035

Token 102: ' n' (ID: 297)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07810598611831665
    2. '1' → logprob: -3.703105926513672
    3. 'w' → logprob: -3.828105926513672
    4. ' u' → logprob: -4.203105926513672
    5. 'n' → logprob: -4.953105926513672
    6. '3' → logprob: -6.578105926513672
    7. '2' → logprob: -6.578105926513672
    8. 'm' → logprob: -6.703105926513672
    9. '10' → logprob: -7.328105926513672
    10. ' n' → logprob: -7.578105926513672

Token 103: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007535056211054325
    2. '+' → logprob: -5.507534980773926
    3. '-' → logprob: -5.882534980773926
    4. '*' → logprob: -8.382534980773926
    5. '[' → logprob: -9.882534980773926
    6. ' +' → logprob: -10.007534980773926
    7. '+m' → logprob: -10.132534980773926
    8. '))' → logprob: -10.382534980773926
    9. '*u' → logprob: -10.507534980773926
    10. 'u' → logprob: -10.632534980773926

Token 104: 'def' (ID: 1314)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.8491370677947998
    2. 'ans' → logprob: -2.0991370677948
    3. 'r' → logprob: -2.0991370677948
    4. 'C' → logprob: -2.4741370677948
    5. 'inv' → logprob: -2.7241370677948
    6. 'c' → logprob: -2.9741370677948
    7. ')' → logprob: -3.2241370677948
    8. 'v' → logprob: -3.4741370677948
    9. 'result' → logprob: -3.4741370677948
    10. 'a' → logprob: -3.7241370677948

Token 105: ' C' (ID: 363)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.10117407143115997
    2. ' pow' → logprob: -3.3511741161346436
    3. ' inv' → logprob: -3.9761741161346436
    4. ' combine' → logprob: -4.1011738777160645
    5. ' mod' → logprob: -5.3511738777160645
    6. ' _' → logprob: -5.9761738777160645
    7. ' ' → logprob: -6.3511738777160645
    8. ' bin' → logprob: -6.3511738777160645
    9. '_' → logprob: -6.4761738777160645
    10. ' choose' → logprob: -6.6011738777160645

Token 106: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09517186880111694
    2. '(k' → logprob: -2.5951719284057617
    3. '(a' → logprob: -4.345171928405762
    4. '(' → logprob: -5.970171928405762
    5. '(x' → logprob: -8.470171928405762
    6. '(r' → logprob: -8.595171928405762
    7. '(i' → logprob: -8.845171928405762
    8. '(l' → logprob: -10.470171928405762
    9. '(N' → logprob: -10.720171928405762
    10. 'k' → logprob: -10.970171928405762

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001847062085289508
    2. ',k' → logprob: -8.750185012817383
    3. ' ,' → logprob: -11.000185012817383
    4. ',n' → logprob: -12.375185012817383
    5. 'k' → logprob: -12.875185012817383
    6. ',r' → logprob: -13.750185012817383
    7. ',m' → logprob: -14.500185012817383
    8. 'n' → logprob: -15.250185012817383
    9. '_,' → logprob: -15.500185012817383
    10. ',j' → logprob: -15.750185012817383

Token 108: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0831151232123375
    2. 'r' → logprob: -2.5831151008605957
    3. 'm' → logprob: -5.708115100860596
    4. ' k' → logprob: -7.333115100860596
    5. ' r' → logprob: -8.458115577697754
    6. ' m' → logprob: -11.583115577697754
    7. 'n' → logprob: -11.833115577697754
    8. '   ' → logprob: -12.458115577697754
    9. ' ' → logprob: -13.208115577697754
    10. '
' → logprob: -13.333115577697754

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006866805721074343
    2. '):
' → logprob: -5.006866931915283
    3. ')' → logprob: -8.881866455078125
    4. '):
' → logprob: -12.381866455078125
    5. ',' → logprob: -12.506866455078125
    6. ':' → logprob: -13.256866455078125
    7. ''):' → logprob: -14.256866455078125
    8. ' ):' → logprob: -14.256866455078125
    9. '):

' → logprob: -14.881866455078125
    10. '*' → logprob: -15.506866455078125

Token 110: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48347046971321106
    2. '   ' → logprob: -1.1084704399108887
    3. ' if' → logprob: -3.4834704399108887
    4. 'return' → logprob: -3.8584704399108887
    5. '	return' → logprob: -7.233470439910889
    6. 'if' → logprob: -7.608470439910889
    7. ' ' → logprob: -9.608470916748047
    8. ':return' → logprob: -9.608470916748047
    9. ' k' → logprob: -9.858470916748047
    10. '    
' → logprob: -10.858470916748047

Token 111: ' num' (ID: 2269)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09172353893518448
    2. 'if' → logprob: -2.4667234420776367
    3. ' return' → logprob: -6.466723442077637
    4. '   ' → logprob: -7.591723442077637
    5. ' if' → logprob: -7.841723442077637
    6. 'k' → logprob: -8.091723442077637
    7. '	return' → logprob: -11.091723442077637
    8. '	if' → logprob: -13.841723442077637
    9. 'n' → logprob: -14.091723442077637
    10. '```' → logprob: -14.091723442077637

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893186807632446
    2. ' =' → logprob: -2.5789318084716797
    3. ',' → logprob: -10.95393180847168
    4. '  ' → logprob: -12.07893180847168
    5. '   ' → logprob: -12.20393180847168
    6. '=n' → logprob: -12.32893180847168
    7. ' ' → logprob: -13.07893180847168
    8. 'ERATOR' → logprob: -13.45393180847168
    9. 'er' → logprob: -13.45393180847168
    10. '    ' → logprob: -14.07893180847168

Token 113: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00033832306507974863
    2. ' F' → logprob: -8.000338554382324
    3. '(F' → logprob: -13.750338554382324
    4. '   ' → logprob: -13.750338554382324
    5. ' ' → logprob: -15.250338554382324
    6. '	F' → logprob: -15.750338554382324
    7. '1' → logprob: -15.750338554382324
    8. '(' → logprob: -16.250337600708008
    9. '  ' → logprob: -17.000337600708008
    10. ' ' → logprob: -18.125337600708008

Token 114: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. 'n' → logprob: -13.875000953674316
    3. '[' → logprob: -17.875001907348633
    4. ' [' → logprob: -18.875001907348633
    5. '(n' → logprob: -19.000001907348633
    6. '	n' → logprob: -19.875001907348633
    7. '

' → logprob: -20.375001907348633
    8. '[int' → logprob: -21.000001907348633
    9. '[k' → logprob: -21.250001907348633
    10. '[
' → logprob: -21.625001907348633

Token 115: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013220267137512565
    2. ']
' → logprob: -7.001321792602539
    3. ']*' → logprob: -8.001321792602539
    4. ']

' → logprob: -10.251321792602539
    5. ']
' → logprob: -11.251321792602539
    6. ']%' → logprob: -11.376321792602539
    7. ' ]' → logprob: -11.501321792602539
    8. '*' → logprob: -13.876321792602539
    9. '   ' → logprob: -14.251321792602539
    10. '];' → logprob: -14.376321792602539

Token 116: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04725504666566849
    2. ' *' → logprob: -3.172255039215088
    3. '*
' → logprob: -6.422255039215088
    4. '   ' → logprob: -6.922255039215088
    5. '//' → logprob: -7.422255039215088
    6. '*num' → logprob: -8.797255516052246
    7. '*k' → logprob: -8.797255516052246
    8. 'def' → logprob: -8.922255516052246
    9. 'F' → logprob: -9.172255516052246
    10. ' ' → logprob: -9.422255516052246

Token 117: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.021769853308796883
    2. ' den' → logprob: -4.021770000457764
    3. ' denom' → logprob: -5.646770000457764
    4. '   ' → logprob: -10.146769523620605
    5. 'dem' → logprob: -10.521769523620605
    6. 'd' → logprob: -11.646769523620605
    7. ' dem' → logprob: -12.021769523620605
    8. ' ' → logprob: -13.521769523620605
    9. 'dom' → logprob: -14.771769523620605
    10. 'def' → logprob: -14.896769523620605

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740820825099945
    2. ' =' → logprob: -0.9740821123123169
    3. ',' → logprob: -13.599081993103027
    4. ')' → logprob: -14.099081993103027
    5. 's' → logprob: -14.849081993103027
    6. ' ' → logprob: -14.974081993103027
    7. '=k' → logprob: -15.099081993103027
    8. ' ' → logprob: -15.224081993103027
    9. ' =
' → logprob: -15.599081993103027
    10. '*' → logprob: -15.724081993103027

Token 119: ' pow' (ID: 9779)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.25360947847366333
    2. '(F' → logprob: -1.5036094188690186
    3. ' F' → logprob: -6.753609657287598
    4. '(' → logprob: -8.003609657287598
    5. ' (' → logprob: -8.878609657287598
    6. '((' → logprob: -11.253609657287598
    7. '	F' → logprob: -11.753609657287598
    8. '   ' → logprob: -12.003609657287598
    9. '(
' → logprob: -13.566109657287598
    10. '
' → logprob: -13.566109657287598

Token 120: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -9.090760431718081e-05
    2. '((' → logprob: -9.750090599060059
    3. '(' → logprob: -10.375090599060059
    4. '(
' → logprob: -14.125090599060059
    5. 'F' → logprob: -14.750090599060059
    6. ' (' → logprob: -17.500091552734375
    7. '(f' → logprob: -17.500091552734375
    8. '(C' → logprob: -17.625091552734375
    9. '	F' → logprob: -17.625091552734375
    10. '(

' → logprob: -18.000091552734375

Token 121: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.7432603272027336e-06
    2. 'k' → logprob: -14.125001907348633
    3. '(k' → logprob: -14.750001907348633
    4. '[n' → logprob: -15.250001907348633
    5. '[m' → logprob: -16.750001907348633
    6. ')' → logprob: -16.750001907348633
    7. '{k' → logprob: -17.125001907348633
    8. '[' → logprob: -17.250001907348633
    9. '

' → logprob: -17.375001907348633
    10. 'F' → logprob: -17.750001907348633

Token 122: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.01008022204041481
    2. ' -' → logprob: -5.010080337524414
    3. '-' → logprob: -6.385080337524414
    4. 'k' → logprob: -7.010080337524414
    5. '[k' → logprob: -7.260080337524414
    6. '-m' → logprob: -11.135080337524414
    7. '],' → logprob: -11.260080337524414
    8. ' k' → logprob: -11.510080337524414
    9. ']' → logprob: -11.760080337524414
    10. '
' → logprob: -12.635080337524414

Token 123: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033713103039190173
    2. ' k' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.625337600708008
    4. ']' → logprob: -14.875337600708008
    5. '	k' → logprob: -15.000337600708008
    6. 'm' → logprob: -15.375337600708008
    7. ')' → logprob: -16.250337600708008
    8. ' ' → logprob: -16.250337600708008
    9. ' к' → logprob: -17.375337600708008
    10. '-k' → logprob: -17.750337600708008

Token 124: ']*' (ID: 18579)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5767956376075745
    2. ']' → logprob: -0.8267956376075745
    3. ']*' → logprob: -7.07679557800293
    4. ' ],' → logprob: -12.32679557800293
    5. ' ]' → logprob: -13.20179557800293
    6. '```' → logprob: -14.20179557800293
    7. ']
' → logprob: -14.32679557800293
    8. '1' → logprob: -14.57679557800293
    9. '],
' → logprob: -15.32679557800293
    10. ']%' → logprob: -15.45179557800293

Token 125: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0009362359414808452
    2. ' F' → logprob: -7.500936031341553
    3. '(F' → logprob: -7.875936031341553
    4. '(' → logprob: -13.000936508178711
    5. '	F' → logprob: -14.250936508178711
    6. '   ' → logprob: -15.500936508178711
    7. ' (' → logprob: -15.750936508178711
    8. ' ' → logprob: -16.50093650817871
    9. '
' → logprob: -16.75093650817871
    10. ')' → logprob: -16.87593650817871

Token 126: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005852030590176582
    2. 'k' → logprob: -7.500585079193115
    3. '(k' → logprob: -10.625585556030273
    4. '	k' → logprob: -12.625585556030273
    5. '
' → logprob: -13.000585556030273
    6. '[' → logprob: -14.500585556030273
    7. '```' → logprob: -14.750585556030273
    8. '{k' → logprob: -15.000585556030273
    9. '   ' → logprob: -15.250585556030273
    10. '[
' → logprob: -15.500585556030273

Token 127: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006832706276327372
    2. '%' → logprob: -5.631832599639893
    3. ' ,' → logprob: -6.256832599639893
    4. ',n' → logprob: -7.131832599639893
    5. '%,' → logprob: -8.50683307647705
    6. '],' → logprob: -9.25683307647705
    7. ' %' → logprob: -9.50683307647705
    8. '%n' → logprob: -9.75683307647705
    9. ']' → logprob: -10.75683307647705
    10. ']%' → logprob: -10.88183307647705

Token 128: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5781331062316895
    2. ' MOD' → logprob: -0.8281331062316895
    3. '-' → logprob: -6.2031331062316895
    4. ' -' → logprob: -9.578132629394531
    5. '-M' → logprob: -9.953132629394531
    6. '_MOD' → logprob: -10.328132629394531
    7. ' ' → logprob: -11.578132629394531
    8. ')' → logprob: -12.953132629394531
    9. '1' → logprob: -13.078132629394531
    10. '.MOD' → logprob: -13.328132629394531

Token 129: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05880880728363991
    2. ' -' → logprob: -2.9338088035583496
    3. ',' → logprob: -5.55880880355835
    4. ')' → logprob: -10.933809280395508
    5. ' ,' → logprob: -11.058809280395508
    6. '2' → logprob: -12.308809280395508
    7. ',-' → logprob: -12.433809280395508
    8. '=' → logprob: -12.558809280395508
    9. '   ' → logprob: -12.808809280395508
    10. '−' → logprob: -12.808809280395508

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.339776832144707e-05
    2. '-' → logprob: -9.625082969665527
    3. '```' → logprob: -12.375082969665527
    4. ' -' → logprob: -12.500082969665527
    5. ' ' → logprob: -13.062582969665527
    6. '

' → logprob: -13.312582969665527
    7. '
' → logprob: -13.500082969665527
    8. '   ' → logprob: -14.812582969665527
    9. '' → logprob: -14.875082969665527
    10. '
' → logprob: -15.125082969665527

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0087478868663311
    2. ' ,' → logprob: -4.7587480545043945
    3. ')' → logprob: -9.008748054504395
    4. ' %' → logprob: -12.758748054504395
    5. ' ' → logprob: -13.133748054504395
    6. '%' → logprob: -14.133748054504395
    7. ' )' → logprob: -14.258748054504395
    8. ',
' → logprob: -14.258748054504395
    9. 'mod' → logprob: -14.383748054504395
    10. '   ' → logprob: -14.758748054504395

Token 132: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002476135268807411
    2. ' MOD' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.25247573852539
    4. '_MOD' → logprob: -15.75247573852539
    5. ' ' → logprob: -17.00247573852539
    6. ')' → logprob: -18.00247573852539
    7. '  ' → logprob: -18.62747573852539
    8. ' ' → logprob: -18.75247573852539
    9. 'mod' → logprob: -19.00247573852539
    10. 'Mod' → logprob: -19.25247573852539

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. ' )' → logprob: -10.625032424926758
    3. ')
' → logprob: -12.250032424926758
    4. '))' → logprob: -14.625032424926758
    5. ')}' → logprob: -14.750032424926758
    6. ')%' → logprob: -14.875032424926758
    7. ')`' → logprob: -14.875032424926758
    8. ')

' → logprob: -15.000032424926758
    9. ' ' → logprob: -15.250032424926758
    10. '),' → logprob: -15.375032424926758

Token 134: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20360970497131348
    2. '   ' → logprob: -1.7036097049713135
    3. ')
' → logprob: -6.953609466552734
    4. 'return' → logprob: -7.078609466552734
    5. ' return' → logprob: -8.828609466552734
    6. '	return' → logprob: -9.078609466552734
    7. '*' → logprob: -9.703609466552734
    8. ',' → logprob: -11.328609466552734
    9. '	' → logprob: -11.328609466552734
    10. '  ' → logprob: -11.453609466552734

Token 135: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010707031935453415
    2. ' return' → logprob: -4.760706901550293
    3. '   ' → logprob: -6.760706901550293
    4. ')' → logprob: -7.010706901550293
    5. '	return' → logprob: -11.260706901550293
    6. ' ' → logprob: -11.635706901550293
    7. 'eturn' → logprob: -13.010706901550293
    8. ')return' → logprob: -13.635706901550293
    9. 'result' → logprob: -13.760706901550293
    10. ')
' → logprob: -14.135706901550293

Token 136: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.17814677953720093
    2. ' num' → logprob: -2.0531468391418457
    3. '(num' → logprob: -3.4281468391418457
    4. ' (' → logprob: -6.053146839141846
    5. '(' → logprob: -10.303146362304688
    6. ' ' → logprob: -12.178146362304688
    7. '   ' → logprob: -12.553146362304688
    8. '	num' → logprob: -12.678146362304688
    9. ' ' → logprob: -13.178146362304688
    10. ',num' → logprob: -13.678146362304688

Token 137: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759416222572327
    2. ' *' → logprob: -0.8259416222572327
    3. '%' → logprob: -13.950942039489746
    4. ' ' → logprob: -14.450942039489746
    5. ' ' → logprob: -14.575942039489746
    6. '**' → logprob: -15.950942039489746
    7. '*object' → logprob: -16.70094108581543
    8. '*num' → logprob: -16.70094108581543
    9. ')' → logprob: -17.45094108581543
    10. '*(' → logprob: -17.70094108581543

Token 138: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0010334034450352192
    2. ' denom' → logprob: -6.876033306121826
    3. 'pow' → logprob: -15.001033782958984
    4. ' den' → logprob: -15.626033782958984
    5. ' ' → logprob: -17.626033782958984
    6. '(' → logprob: -17.751033782958984
    7. ' denominator' → logprob: -18.001033782958984
    8. 'deny' → logprob: -18.376033782958984
    9. 'mod' → logprob: -18.626033782958984
    10. '-den' → logprob: -18.751033782958984

Token 139: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38687217235565186
    2. '%' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.511872291564941
    4. ' ' → logprob: -15.511872291564941
    5. ')' → logprob: -15.636872291564941
    6. '%n' → logprob: -16.011871337890625
    7. '`' → logprob: -16.636871337890625
    8. ')%' → logprob: -16.636871337890625
    9. 'mod' → logprob: -17.136871337890625
    10. ' mod' → logprob: -17.261871337890625

Token 140: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -20.3750057220459
    4. '.MOD' → logprob: -23.1250057220459
    5. ' ' → logprob: -23.5000057220459
    6. 'MODULE' → logprob: -23.6250057220459
    7. 'MO' → logprob: -23.6250057220459
    8. 'MD' → logprob: -24.3750057220459
    9. ' ' → logprob: -25.1250057220459
    10. '   ' → logprob: -25.2500057220459

Token 141: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: 'summ' (ID: 141249)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06584848463535309
    2. 'w' → logprob: -4.190848350524902
    3. '(n' → logprob: -4.315848350524902
    4. 'n' → logprob: -4.565848350524902
    5. ')
' → logprob: -5.440848350524902
    6. 'print' → logprob: -5.440848350524902
    7. '<|end|>' → logprob: -5.940848350524902
    8. '
' → logprob: -6.065848350524902
    9. '#' → logprob: -6.315848350524902
    10. '(' → logprob: -6.440848350524902

Token 143: 'and' (ID: 427)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.004800938069820404
    2. '=' → logprob: -5.379800796508789
    3. ' =' → logprob: -9.129800796508789
    4. 'ator' → logprob: -11.004800796508789
    5. '_' → logprob: -11.254800796508789
    6. 'ations' → logprob: -11.379800796508789
    7. 'a' → logprob: -11.504800796508789
    8. '_=' → logprob: -12.254800796508789
    9. 'atory' → logprob: -12.504800796508789
    10. 'ed' → logprob: -12.879800796508789

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43057671189308167
    2. ' =' → logprob: -1.3055766820907593
    3. 's' → logprob: -2.555576801300049
    4. '_' → logprob: -6.930576801300049
    5. ' ' → logprob: -9.68057632446289
    6. 'ation' → logprob: -10.18057632446289
    7. ' s' → logprob: -10.30557632446289
    8. ',' → logprob: -10.43057632446289
    9. '_=' → logprob: -10.80557632446289
    10. '(s' → logprob: -12.30557632446289

Token 145: ' lambda' (ID: 27871)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5546693801879883
    2. '0' → logprob: -1.6796693801879883
    3. ' sum' → logprob: -2.5546693801879883
    4. 'C' → logprob: -2.6796693801879883
    5. '(sum' → logprob: -4.304669380187988
    6. '(' → logprob: -4.554669380187988
    7. 'lambda' → logprob: -4.554669380187988
    8. ' C' → logprob: -4.679669380187988
    9. '(lambda' → logprob: -4.804669380187988
    10. ' lambda' → logprob: -5.429669380187988

Token 146: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.44265609979629517
    2. 'x' → logprob: -1.9426560401916504
    3. ' k' → logprob: -2.0676560401916504
    4. 'i' → logprob: -3.0676560401916504
    5. ' x' → logprob: -4.06765604019165
    6. ' i' → logprob: -4.69265604019165
    7. 'n' → logprob: -5.69265604019165
    8. 'lambda' → logprob: -5.94265604019165
    9. 'a' → logprob: -6.06765604019165
    10. ' lambda' → logprob: -6.56765604019165

Token 147: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03659134730696678
    2. ',' → logprob: -3.4115912914276123
    3. ':x' → logprob: -6.911591529846191
    4. ' :' → logprob: -7.161591529846191
    5. ',x' → logprob: -7.536591529846191
    6. 'x' → logprob: -8.036591529846191
    7. ',:' → logprob: -9.161591529846191
    8. '_:' → logprob: -10.161591529846191
    9. ',n' → logprob: -10.286591529846191
    10. ':n' → logprob: -10.786591529846191

Token 148: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1271793395280838
    2. ' y' → logprob: -2.3771793842315674
    3. 'k' → logprob: -4.377179145812988
    4. 'i' → logprob: -5.252179145812988
    5. 'r' → logprob: -5.627179145812988
    6. 'x' → logprob: -6.627179145812988
    7. 'f' → logprob: -7.127179145812988
    8. ' k' → logprob: -7.502179145812988
    9. 'j' → logprob: -8.252179145812988
    10. 'a' → logprob: -8.252179145812988

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008228530059568584
    2. ',' → logprob: -8.125823020935059
    3. ' :' → logprob: -8.125823020935059
    4. ':x' → logprob: -9.000823020935059
    5. ',:' → logprob: -9.875823020935059
    6. ':(' → logprob: -10.375823020935059
    7. '=' → logprob: -11.750823020935059
    8. '_:' → logprob: -12.375823020935059
    9. ':y' → logprob: -12.750823020935059
    10. ',x' → logprob: -13.125823020935059

Token 150: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08813372254371643
    2. ' (' → logprob: -2.8381338119506836
    3. 'x' → logprob: -3.8381338119506836
    4. '(s' → logprob: -6.463133811950684
    5. ' x' → logprob: -6.963133811950684
    6. '(' → logprob: -7.463133811950684
    7. '(C' → logprob: -7.588133811950684
    8. ' ' → logprob: -8.713133811950684
    9. 'C' → logprob: -8.838133811950684
    10. 'summ' → logprob: -8.963133811950684

Token 151: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01961861364543438
    2. ' +' → logprob: -4.144618511199951
    3. '+y' → logprob: -5.644618511199951
    4. '*' → logprob: -11.01961898803711
    5. '+x' → logprob: -11.64461898803711
    6. '+=' → logprob: -12.01961898803711
    7. '+w' → logprob: -12.51961898803711
    8. '+
' → logprob: -14.39461898803711
    9. '+k' → logprob: -14.39461898803711
    10. ' ' → logprob: -14.51961898803711

Token 152: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15697689354419708
    2. ' y' → logprob: -2.0319769382476807
    3. '(y' → logprob: -5.531976699829102
    4. 'C' → logprob: -5.781976699829102
    5. '(C' → logprob: -6.031976699829102
    6. ' (' → logprob: -6.656976699829102
    7. '(' → logprob: -7.281976699829102
    8. '1' → logprob: -7.531976699829102
    9. 'w' → logprob: -7.656976699829102
    10. 'x' → logprob: -7.781976699829102

Token 153: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7787793874740601
    2. '+' → logprob: -1.02877938747406
    3. ',' → logprob: -3.0287795066833496
    4. 'for' → logprob: -4.15377950668335
    5. '
' → logprob: -4.27877950668335
    6. '(' → logprob: -4.27877950668335
    7. '<|end|>' → logprob: -4.40377950668335
    8. '*' → logprob: -4.52877950668335
    9. '#' → logprob: -4.90377950668335
    10. 'result' → logprob: -5.02877950668335

Token 154: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.350172221660614
    2. 'print' → logprob: -2.600172281265259
    3. 'res' → logprob: -2.975172281265259
    4. 'answer' → logprob: -3.600172281265259
    5. 's' → logprob: -3.725172281265259
    6. 'ans' → logprob: -3.975172281265259
    7. ')' → logprob: -4.22517204284668
    8. 'total' → logprob: -4.35017204284668
    9. 'def' → logprob: -4.97517204284668
    10. ' ans' → logprob: -4.97517204284668

Token 155: ' S' (ID: 336)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8650500774383545
    2. ' sum' → logprob: -1.7400500774383545
    3. ' reduce' → logprob: -1.7400500774383545
    4. ' lambda' → logprob: -2.8650500774383545
    5. ' solve' → logprob: -3.3650500774383545
    6. ' factorial' → logprob: -4.115050315856934
    7. ' summ' → logprob: -4.240050315856934
    8. ' max' → logprob: -4.365050315856934
    9. 'reduce' → logprob: -4.865050315856934
    10. ' mul' → logprob: -4.865050315856934

Token 156: '():
' (ID: 8595)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5081871747970581
    2. '(x' → logprob: -1.633187174797058
    3. '(n' → logprob: -2.3831872940063477
    4. '(' → logprob: -3.5081872940063477
    5. '(i' → logprob: -3.6331872940063477
    6. 'um' → logprob: -4.508187294006348
    7. '(w' → logprob: -4.758187294006348
    8. '(a' → logprob: -4.883187294006348
    9. '(t' → logprob: -5.008187294006348
    10. '(s' → logprob: -5.758187294006348

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08615504950284958
    2. ' s' → logprob: -3.4611549377441406
    3. ' res' → logprob: -3.4611549377441406
    4. ' r' → logprob: -5.211154937744141
    5. ' result' → logprob: -5.461154937744141
    6. ' total' → logprob: -5.836154937744141
    7. ' ans' → logprob: -6.211154937744141
    8. ' sum' → logprob: -7.086154937744141
    9. ' return' → logprob: -7.586154937744141
    10. ' def' → logprob: -7.711154937744141

Token 158: ' expr' (ID: 30206)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.087123990058899
    2. ' s' → logprob: -1.587123990058899
    3. ' r' → logprob: -2.4621238708496094
    4. 's' → logprob: -2.9621238708496094
    5. 'res' → logprob: -3.0871238708496094
    6. ' ans' → logprob: -3.0871238708496094
    7. '   ' → logprob: -3.2121238708496094
    8. ' result' → logprob: -3.3371238708496094
    9. ' return' → logprob: -3.3371238708496094
    10. 'r' → logprob: -3.5871238708496094

Token 159: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3145253658294678
    2. '=' → logprob: -1.3145253658294678
    3. ' ' → logprob: -8.189525604248047
    4. ',' → logprob: -8.439525604248047
    5. 'sum' → logprob: -8.939525604248047
    6. '_' → logprob: -8.939525604248047
    7. 's' → logprob: -9.189525604248047
    8. '(' → logprob: -9.689525604248047
    9. '  ' → logprob: -9.814525604248047
    10. '_sum' → logprob: -9.939525604248047

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938028335571289
    2. ' =' → logprob: -0.6938028335571289
    3. ',' → logprob: -7.568802833557129
    4. '=lambda' → logprob: -9.693802833557129
    5. '(' → logprob: -10.818802833557129
    6. ' ' → logprob: -11.568802833557129
    7. '=

' → logprob: -12.193802833557129
    8. '()' → logprob: -12.693802833557129
    9. '=(' → logprob: -12.818802833557129
    10. '   ' → logprob: -12.818802833557129

Token 161: ' C' (ID: 363)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1023585796356201
    2. ' sum' → logprob: -1.7273585796356201
    3. 'C' → logprob: -1.8523585796356201
    4. '(sum' → logprob: -2.85235857963562
    5. ' C' → logprob: -3.22735857963562
    6. '(w' → logprob: -3.35235857963562
    7. '0' → logprob: -3.47735857963562
    8. ' (' → logprob: -3.85235857963562
    9. '(n' → logprob: -4.102358818054199
    10. '(C' → logprob: -4.102358818054199

Token 162: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0440780445933342
    2. '(n' → logprob: -3.6690781116485596
    3. '(' → logprob: -4.5440778732299805
    4. '(u' → logprob: -5.2940778732299805
    5. '(m' → logprob: -6.2940778732299805
    6. 'w' → logprob: -9.66907787322998
    7. '((' → logprob: -11.16907787322998
    8. '(s' → logprob: -12.04407787322998
    9. '(l' → logprob: -12.04407787322998
    10. '<|end|>' → logprob: -12.16907787322998

Token 163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16096147894859314
    2. ' +' → logprob: -2.410961389541626
    3. ',' → logprob: -3.660961389541626
    4. '+n' → logprob: -4.160961627960205
    5. '+x' → logprob: -4.660961627960205
    6. '+w' → logprob: -5.535961627960205
    7. '-' → logprob: -6.660961627960205
    8. '+m' → logprob: -7.285961627960205
    9. '+y' → logprob: -7.785961627960205
    10. '+k' → logprob: -8.160961151123047

Token 164: ' u' (ID: 337)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17121978104114532
    2. 'u' → logprob: -2.546219825744629
    3. 'x' → logprob: -3.171219825744629
    4. 'm' → logprob: -3.796219825744629
    5. ' n' → logprob: -4.921219825744629
    6. 'y' → logprob: -5.796219825744629
    7. 'w' → logprob: -6.671219825744629
    8. '1' → logprob: -7.046219825744629
    9. ' u' → logprob: -7.296219825744629
    10. '2' → logprob: -8.046219825744629

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011689930222928524
    2. '-' → logprob: -5.636690139770508
    3. ' -' → logprob: -5.761690139770508
    4. ' ,' → logprob: -5.761690139770508
    5. '+' → logprob: -8.261690139770508
    6. ',u' → logprob: -8.386690139770508
    7. ',k' → logprob: -8.386690139770508
    8. ' +' → logprob: -8.511690139770508
    9. ',w' → logprob: -8.636690139770508
    10. 'w' → logprob: -9.136690139770508

Token 166: ' u' (ID: 337)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4629460573196411
    2. 'w' → logprob: -1.4629460573196411
    3. 'u' → logprob: -1.7129460573196411
    4. 'm' → logprob: -1.9629460573196411
    5. ' n' → logprob: -2.4629459381103516
    6. ' u' → logprob: -3.2129459381103516
    7. ' m' → logprob: -3.4629459381103516
    8. ' w' → logprob: -3.5879459381103516
    9. '3' → logprob: -3.9629459381103516
    10. '2' → logprob: -5.212945938110352

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00533099751919508
    2. ')
' → logprob: -6.005331039428711
    3. '-' → logprob: -6.755331039428711
    4. '+' → logprob: -7.130331039428711
    5. ' )' → logprob: -8.255331039428711
    6. ')*' → logprob: -8.505331039428711
    7. ' -' → logprob: -9.005331039428711
    8. '   ' → logprob: -9.505331039428711
    9. ' +' → logprob: -9.755331039428711
    10. '-)' → logprob: -11.130331039428711

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13826343417167664
    2. '<|end|>' → logprob: -2.513263463973999
    3. ' +' → logprob: -4.26326322555542
    4. ')' → logprob: -4.26326322555542
    5. '+' → logprob: -4.76326322555542
    6. ' return' → logprob: -5.51326322555542
    7. '
' → logprob: -5.88826322555542
    8. 'return' → logprob: -6.51326322555542
    9. '    
' → logprob: -7.51326322555542
    10. '<|end|>' → logprob: -7.63826322555542

Token 169: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.05461763218045235
    2. 'return' → logprob: -3.6796176433563232
    3. 'result' → logprob: -4.554617404937744
    4. 'res' → logprob: -5.054617404937744
    5. ' expr' → logprob: -5.929617404937744
    6. 'ans' → logprob: -6.054617404937744
    7. 'total' → logprob: -6.429617404937744
    8. '+' → logprob: -6.554617404937744
    9. 'for' → logprob: -7.679617404937744
    10. 's' → logprob: -7.929617404937744

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034869377850554883
    2. '1' → logprob: -8.375349044799805
    3. '=' → logprob: -10.000349044799805
    4. ' =' → logprob: -10.125349044799805
    5. '_' → logprob: -11.375349044799805
    6. '```' → logprob: -12.000349044799805
    7. ' ' → logprob: -12.750349044799805
    8. '0' → logprob: -13.000349044799805
    9. ' +=' → logprob: -13.250349044799805
    10. '+' → logprob: -13.375349044799805

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. ',' → logprob: -14.974078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '=lambda' → logprob: -15.474078178405762
    6. '=C' → logprob: -15.724078178405762
    7. ')' → logprob: -15.849078178405762
    8. ' ' → logprob: -15.974078178405762
    9. '=}' → logprob: -16.224079132080078
    10. 'def' → logprob: -16.849079132080078

Token 172: ' n' (ID: 297)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03809462487697601
    2. ' C' → logprob: -3.7880945205688477
    3. 'sum' → logprob: -4.913094520568848
    4. 'pow' → logprob: -6.788094520568848
    5. '0' → logprob: -7.163094520568848
    6. 'expr' → logprob: -7.288094520568848
    7. ' sum' → logprob: -7.288094520568848
    8. 'summ' → logprob: -7.288094520568848
    9. '2' → logprob: -7.538094520568848
    10. '(C' → logprob: -7.913094520568848

Token 173: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5255042314529419
    2. '*' → logprob: -1.275504231452942
    3. ' -' → logprob: -2.6505041122436523
    4. '-' → logprob: -3.0255041122436523
    5. ' +' → logprob: -5.650504112243652
    6. '+' → logprob: -5.775504112243652
    7. ' ' → logprob: -6.650504112243652
    8. '**' → logprob: -7.150504112243652
    9. 'def' → logprob: -7.400504112243652
    10. '*u' → logprob: -9.275504112243652

Token 174: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.042227305471897125
    2. '(n' → logprob: -4.417227268218994
    3. '(C' → logprob: -4.542227268218994
    4. 'expr' → logprob: -5.917227268218994
    5. '(m' → logprob: -6.167227268218994
    6. 'F' → logprob: -6.167227268218994
    7. 'w' → logprob: -6.292227268218994
    8. 'pow' → logprob: -6.417227268218994
    9. '(' → logprob: -6.667227268218994
    10. '(w' → logprob: -7.042227268218994

Token 175: '(n' (ID: 2406)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.003032255917787552
    2. '(m' → logprob: -6.753032207489014
    3. '(u' → logprob: -7.003032207489014
    4. '(n' → logprob: -7.253032207489014
    5. '(' → logprob: -8.378032684326172
    6. 'w' → logprob: -12.003032684326172
    7. '((' → logprob: -12.378032684326172
    8. '(v' → logprob: -13.753032684326172
    9. '(l' → logprob: -15.003032684326172
    10. '(
' → logprob: -15.253032684326172

Token 176: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1095521450042725
    2. '(w' → logprob: -1.1095521450042725
    3. 'w' → logprob: -1.8595521450042725
    4. ',' → logprob: -2.9845521450042725
    5. '(n' → logprob: -3.3595521450042725
    6. '(m' → logprob: -3.3595521450042725
    7. '(' → logprob: -4.234552383422852
    8. '+' → logprob: -4.234552383422852
    9. '(u' → logprob: -4.234552383422852
    10. ' -' → logprob: -4.859552383422852

Token 177: ' m' (ID: 284)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12157519906759262
    2. 'm' → logprob: -2.496575117111206
    3. 'u' → logprob: -3.746575117111206
    4. '3' → logprob: -5.246575355529785
    5. ' w' → logprob: -6.621575355529785
    6. '2' → logprob: -7.496575355529785
    7. '-' → logprob: -8.121575355529785
    8. ' m' → logprob: -8.121575355529785
    9. 'n' → logprob: -8.746575355529785
    10. ' u' → logprob: -9.121575355529785

Token 178: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8622209429740906
    2. '-' → logprob: -0.8622209429740906
    3. ' -' → logprob: -2.6122210025787354
    4. 'm' → logprob: -3.1122210025787354
    5. 'w' → logprob: -3.8622210025787354
    6. ' ,' → logprob: -4.862220764160156
    7. ',m' → logprob: -5.737220764160156
    8. 'u' → logprob: -6.487220764160156
    9. ' m' → logprob: -7.237220764160156
    10. ',w' → logprob: -7.612220764160156

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00748677970841527
    2. '2' → logprob: -6.007486820220947
    3. 'w' → logprob: -6.132486820220947
    4. 'm' → logprob: -6.382486820220947
    5. 'u' → logprob: -7.132486820220947
    6. ' ' → logprob: -9.257486343383789
    7. 'n' → logprob: -9.632486343383789
    8. '3' → logprob: -10.007486343383789
    9. '-' → logprob: -10.132486343383789
    10. '(' → logprob: -11.257486343383789

Token 180: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012962207198143005
    2. '2' → logprob: -5.012962341308594
    3. 'w' → logprob: -6.012962341308594
    4. 'm' → logprob: -6.262962341308594
    5. 'u' → logprob: -6.887962341308594
    6. 'n' → logprob: -7.762962341308594
    7. '3' → logprob: -8.387962341308594
    8. ' ' → logprob: -9.387962341308594
    9. '-' → logprob: -10.512962341308594
    10. '   ' → logprob: -11.387962341308594

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031025448814034462
    2. ' ,' → logprob: -3.5310254096984863
    3. ',w' → logprob: -7.781025409698486
    4. ',m' → logprob: -8.156025886535645
    5. ',n' → logprob: -8.781025886535645
    6. 'm' → logprob: -9.531025886535645
    7. 'w' → logprob: -9.656025886535645
    8. ')' → logprob: -9.656025886535645
    9. '(w' → logprob: -10.406025886535645
    10. '(n' → logprob: -10.531025886535645

Token 182: ' u' (ID: 337)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006789381615817547
    2. ' m' → logprob: -5.131789207458496
    3. 'n' → logprob: -7.631789207458496
    4. 'w' → logprob: -8.631789207458496
    5. 'u' → logprob: -9.631789207458496
    6. '   ' → logprob: -10.131789207458496
    7. '2' → logprob: -10.756789207458496
    8. ' ' → logprob: -11.006789207458496
    9. ' n' → logprob: -11.006789207458496
    10. '3' → logprob: -11.631789207458496

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001391900354065001
    2. '))' → logprob: -7.501391887664795
    3. ' )' → logprob: -8.501392364501953
    4. ')
' → logprob: -8.751392364501953
    5. '-' → logprob: -9.001392364501953
    6. '   ' → logprob: -9.126392364501953
    7. '+' → logprob: -9.251392364501953
    8. ')))' → logprob: -9.751392364501953
    9. ' -' → logprob: -10.751392364501953
    10. ')

' → logprob: -11.126392364501953

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010585333220660686
    2. 'return' → logprob: -7.126058578491211
    3. ' return' → logprob: -8.751058578491211
    4. '    
' → logprob: -10.376058578491211
    5. '<|end|>' → logprob: -10.376058578491211
    6. '
' → logprob: -11.376058578491211
    7. 'expr' → logprob: -11.751058578491211
    8. ')' → logprob: -12.126058578491211
    9. '	return' → logprob: -13.501058578491211
    10. 'result' → logprob: -13.751058578491211

Token 185: ' r' (ID: 428)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010896080173552036
    2. '   ' → logprob: -5.1358962059021
    3. ' return' → logprob: -5.8858962059021
    4. 'print' → logprob: -7.2608962059021
    5. 'result' → logprob: -7.3858962059021
    6. 'expr' → logprob: -7.6358962059021
    7. 'ans' → logprob: -8.885895729064941
    8. 'res' → logprob: -9.260895729064941
    9. '
' → logprob: -10.010895729064941
    10. 's' → logprob: -10.760895729064941

Token 186: ' =' (ID: 314)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.009343295358121395
    2. 'es' → logprob: -4.884343147277832
    3. 'et' → logprob: -6.509343147277832
    4. 'etur' → logprob: -9.134343147277832
    5. 'etu' → logprob: -10.009343147277832
    6. 'e' → logprob: -10.259343147277832
    7. '=' → logprob: -10.384343147277832
    8. ' =' → logprob: -11.634343147277832
    9. 'etr' → logprob: -12.384343147277832
    10. '```' → logprob: -12.634343147277832

Token 187: ' summ' (ID: 16552)
  Prédit: '(expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.08546624332666397
    2. '(s' → logprob: -3.210466146469116
    3. ' (' → logprob: -3.835466146469116
    4. 'expr' → logprob: -4.460466384887695
    5. 'summ' → logprob: -5.335466384887695
    6. ' expr' → logprob: -6.085466384887695
    7. ' summ' → logprob: -8.210466384887695
    8. '(' → logprob: -8.460466384887695
    9. '(sum' → logprob: -8.960466384887695
    10. 'sum' → logprob: -9.210466384887695

Token 188: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -3.4121114822482923e-06
    2. 'mand' → logprob: -13.000003814697266
    3. 'AND' → logprob: -16.000003814697266
    4. '(and' → logprob: -16.250003814697266
    5. 'andr' → logprob: -16.375003814697266
    6. 'анд' → logprob: -16.375003814697266
    7. 'd' → logprob: -16.500003814697266
    8. 'm' → logprob: -16.625003814697266
    9. 't' → logprob: -17.000003814697266
    10. 'am' → logprob: -17.000003814697266

Token 189: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -3.531315314830863e-06
    2. ' (' → logprob: -13.250003814697266
    3. '(' → logprob: -14.375003814697266
    4. '(express' → logprob: -15.125003814697266
    5. 'expr' → logprob: -15.375003814697266
    6. '(
' → logprob: -15.500003814697266
    7. '(expression' → logprob: -15.625003814697266
    8. '((' → logprob: -16.500003814697266
    9. '(s' → logprob: -16.500003814697266
    10. '(EXPR' → logprob: -16.625003814697266

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. '2' → logprob: -10.500029563903809
    3. 's' → logprob: -14.250029563903809
    4. 'expr' → logprob: -14.250029563903809
    5. 'r' → logprob: -16.500028610229492
    6. '(expr' → logprob: -16.875028610229492
    7. ' ' → logprob: -17.250028610229492
    8. ')' → logprob: -17.375028610229492
    9. '```' → logprob: -17.625028610229492
    10. '
' → logprob: -18.000028610229492

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002538296685088426
    2. ' ,' → logprob: -8.500253677368164
    3. ',r' → logprob: -10.000253677368164
    4. ',y' → logprob: -13.375253677368164
    5. ',
' → logprob: -13.750253677368164
    6. ',n' → logprob: -14.000253677368164
    7. ',s' → logprob: -14.500253677368164
    8. ',

' → logprob: -16.000253677368164
    9. '   ' → logprob: -16.000253677368164
    10. ',x' → logprob: -16.375253677368164

Token 192: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.023252464830875397
    2. ' expr' → logprob: -3.773252487182617
    3. '(expr' → logprob: -12.023252487182617
    4. '   ' → logprob: -15.148252487182617
    5. 'int' → logprob: -15.398252487182617
    6. ' ' → logprob: -15.648252487182617
    7. '  ' → logprob: -16.773252487182617
    8. 'express' → logprob: -16.898252487182617
    9. '    ' → logprob: -17.023252487182617
    10. ' ' → logprob: -17.148252487182617

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. 'expr' → logprob: -11.750009536743164
    3. ' ' → logprob: -14.625009536743164
    4. 's' → logprob: -15.375009536743164
    5. 'r' → logprob: -15.500009536743164
    6. ' expr' → logprob: -16.000009536743164
    7. '(expr' → logprob: -16.250009536743164
    8. ')' → logprob: -17.250009536743164
    9. '   ' → logprob: -17.250009536743164
    10. 'def' → logprob: -17.625009536743164

Token 194: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6328918933868408
    2. ')' → logprob: -0.7578918933868408
    3. ')
' → logprob: -8.507891654968262
    4. ')

' → logprob: -9.882891654968262
    5. ')return' → logprob: -10.757891654968262
    6. '%' → logprob: -12.382891654968262
    7. ' )
' → logprob: -12.507891654968262
    8. 'return' → logprob: -13.007891654968262
    9. ' )' → logprob: -13.632891654968262
    10. '
' → logprob: -13.632891654968262

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06548600643873215
    2. 'return' → logprob: -3.315485954284668
    3. ' return' → logprob: -3.690485954284668
    4. '
' → logprob: -6.690485954284668
    5. '<|end|>' → logprob: -7.940485954284668
    6. 'print' → logprob: -8.190485954284668
    7. '	return' → logprob: -9.190485954284668
    8. ')' → logprob: -10.440485954284668
    9. '    
' → logprob: -10.565485954284668
    10. ' print' → logprob: -11.065485954284668

Token 196: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001668876619078219
    2. ' return' → logprob: -7.126668930053711
    3. 'print' → logprob: -7.251668930053711
    4. 'r' → logprob: -9.376668930053711
    5. '   ' → logprob: -10.001668930053711
    6. '
' → logprob: -11.376668930053711
    7. 'if' → logprob: -12.001668930053711
    8. 'for' → logprob: -12.876668930053711
    9. 'eturn' → logprob: -14.126668930053711
    10. '	return' → logprob: -14.251668930053711

Token 197: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6819046139717102
    2. '=' → logprob: -1.4319045543670654
    3. 'return' → logprob: -2.3069045543670654
    4. 'r' → logprob: -2.8069045543670654
    5. 'pp' → logprob: -3.5569045543670654
    6. 'ns' → logprob: -3.5569045543670654
    7. 'dd' → logprob: -4.3069047927856445
    8. 'rg' → logprob: -5.3069047927856445
    9. 'ss' → logprob: -5.4319047927856445
    10. 'rray' → logprob: -6.1819047927856445

Token 198: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.43032729625701904
    2. ' b' → logprob: -1.055327296257019
    3. '_' → logprob: -8.305327415466309
    4. '_=' → logprob: -8.430327415466309
    5. ' s' → logprob: -8.680327415466309
    6. ' _' → logprob: -8.805327415466309
    7. ' =' → logprob: -8.930327415466309
    8. 's' → logprob: -9.555327415466309
    9. ' r' → logprob: -9.555327415466309
    10. 'r' → logprob: -9.680327415466309

Token 199: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6339211463928223
    2. ' =' → logprob: -0.7589211463928223
    3. ',' → logprob: -6.633921146392822
    4. ' ,' → logprob: -12.758920669555664
    5. ' ' → logprob: -14.633920669555664
    6. '<|end|>' → logprob: -14.758920669555664
    7. '=

' → logprob: -14.883920669555664
    8. ' =
' → logprob: -15.133920669555664
    9. '=
' → logprob: -15.258920669555664
    10. ' ' → logprob: -15.633920669555664

Token 200: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05628957599401474
    2. '_' → logprob: -4.3062896728515625
    3. ' c' → logprob: -4.6812896728515625
    4. '=' → logprob: -5.1812896728515625
    5. 'r' → logprob: -5.8062896728515625
    6. 's' → logprob: -5.8062896728515625
    7. 'd' → logprob: -5.8062896728515625
    8. '_=' → logprob: -5.8062896728515625
    9. ' =' → logprob: -5.9312896728515625
    10. 'g' → logprob: -6.6812896728515625

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4763234257698059
    2. '=' → logprob: -0.9763234257698059
    3. ',' → logprob: -6.10132360458374
    4. ' ,' → logprob: -13.101323127746582
    5. ' ' → logprob: -15.226323127746582
    6. ' ' → logprob: -15.726323127746582
    7. '  ' → logprob: -15.851323127746582
    8. '<|end|>' → logprob: -16.5388240814209
    9. '=int' → logprob: -16.6638240814209
    10. ')' → logprob: -16.6638240814209

Token 202: ' m' (ID: 284)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.6190026998519897
    2. '1' → logprob: -2.1190028190612793
    3. 'w' → logprob: -2.1190028190612793
    4. 'r' → logprob: -2.2440028190612793
    5. 'n' → logprob: -2.8690028190612793
    6. '0' → logprob: -2.8690028190612793
    7. '(n' → logprob: -3.3690028190612793
    8. 'pow' → logprob: -3.3690028190612793
    9. ' C' → logprob: -3.7440028190612793
    10. ' ' → logprob: -3.7440028190612793

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6302348971366882
    2. ' -' → logprob: -1.255234956741333
    3. '-' → logprob: -2.005234956741333
    4. '+' → logprob: -4.005234718322754
    5. ' +' → logprob: -4.005234718322754
    6. ' ,' → logprob: -4.755234718322754
    7. ' ' → logprob: -6.505234718322754
    8. '*' → logprob: -8.255234718322754
    9. ' *' → logprob: -8.755234718322754
    10. '  ' → logprob: -9.130234718322754

Token 204: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.514337956905365
    2. 'u' → logprob: -1.7643380165100098
    3. 'w' → logprob: -2.6393380165100098
    4. ' n' → logprob: -2.6393380165100098
    5. 'm' → logprob: -3.2643380165100098
    6. ' u' → logprob: -4.01433801651001
    7. '2' → logprob: -4.76433801651001
    8. '3' → logprob: -5.51433801651001
    9. ' m' → logprob: -5.51433801651001
    10. ' w' → logprob: -5.63933801651001

Token 205: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.639690637588501
    2. ',' → logprob: -0.889690637588501
    3. ' -' → logprob: -2.889690637588501
    4. '+' → logprob: -6.389690399169922
    5. ' ,' → logprob: -7.389690399169922
    6. 'm' → logprob: -7.514690399169922
    7. 'u' → logprob: -7.639690399169922
    8. ' +' → logprob: -7.639690399169922
    9. ' ' → logprob: -8.014690399169922
    10. 'def' → logprob: -8.264690399169922

Token 206: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.535655677318573
    2. 'u' → logprob: -1.7856557369232178
    3. 'm' → logprob: -1.9106557369232178
    4. '3' → logprob: -4.035655498504639
    5. '2' → logprob: -4.160655498504639
    6. '1' → logprob: -4.160655498504639
    7. 'n' → logprob: -4.285655498504639
    8. 'r' → logprob: -4.410655498504639
    9. '998' → logprob: -5.285655498504639
    10. '0' → logprob: -5.535655498504639

Token 207: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8240756392478943
    2. ' -' → logprob: -1.699075698852539
    3. '
' → logprob: -2.574075698852539
    4. 'd' → logprob: -2.949075698852539
    5. 'def' → logprob: -2.949075698852539
    6. ',' → logprob: -3.574075698852539
    7. 'u' → logprob: -3.699075698852539
    8. ' ' → logprob: -3.699075698852539
    9. '+' → logprob: -4.449075698852539
    10. '//' → logprob: -4.824075698852539

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3064658045768738
    2. '
' → logprob: -1.9314658641815186
    3. 'd' → logprob: -3.1814658641815186
    4. 'def' → logprob: -3.8064658641815186
    5. 'return' → logprob: -3.8064658641815186
    6. 'for' → logprob: -4.4314656257629395
    7. ' for' → logprob: -5.0564656257629395
    8. 'if' → logprob: -6.0564656257629395
    9. '    
' → logprob: -6.0564656257629395
    10. ' return' → logprob: -6.9314656257629395

Token 209: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.07184636592865
    2. 'd' → logprob: -1.44684636592865
    3. 'if' → logprob: -2.5718464851379395
    4. 'for' → logprob: -2.6968464851379395
    5. 'res' → logprob: -2.8218464851379395
    6. 'ans' → logprob: -3.0718464851379395
    7. 'r' → logprob: -3.0718464851379395
    8. 'result' → logprob: -4.3218464851379395
    9. 's' → logprob: -4.4468464851379395
    10. 'x' → logprob: -4.6968464851379395

Token 210: ' Craft' (ID: 34180)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7486961483955383
    2. 'res' → logprob: -1.9986960887908936
    3. 'for' → logprob: -2.4986960887908936
    4. 'if' → logprob: -2.7486960887908936
    5. 'd' → logprob: -2.9986960887908936
    6. 'result' → logprob: -2.9986960887908936
    7. 'r' → logprob: -3.7486960887908936
    8. '#' → logprob: -3.9986960887908936
    9. 'ans' → logprob: -4.123696327209473
    10. ' return' → logprob: -4.248696327209473

Token 211: 'y' (ID: 88)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3847092390060425
    2. ' return' → logprob: -1.5097092390060425
    3. 'result' → logprob: -2.259709358215332
    4. ' result' → logprob: -2.509709358215332
    5. '   ' → logprob: -2.634709358215332
    6. 'r' → logprob: -3.634709358215332
    7. ' ans' → logprob: -3.759709358215332
    8. 'ed' → logprob: -3.884709358215332
    9. 'res' → logprob: -3.884709358215332
    10. ' res' → logprob: -4.009709358215332

Token 212: ' condition' (ID: 7060)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3459068536758423
    2. ' return' → logprob: -1.7209068536758423
    3. 'd' → logprob: -2.4709067344665527
    4. 'r' → logprob: -2.5959067344665527
    5. ' =' → logprob: -2.8459067344665527
    6. 'result' → logprob: -3.0959067344665527
    7. ' r' → logprob: -3.5959067344665527
    8. 'a' → logprob: -4.095906734466553
    9. ' for' → logprob: -4.095906734466553
    10. ' d' → logprob: -4.220906734466553

Token 213: ' with' (ID: 483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19571229815483093
    2. ' if' → logprob: -1.8207123279571533
    3. '   ' → logprob: -4.695712089538574
    4. '
' → logprob: -5.820712089538574
    5. ':' → logprob: -6.820712089538574
    6. 'for' → logprob: -7.695712089538574
    7. 'return' → logprob: -7.820712089538574
    8. ':
' → logprob: -7.945712089538574
    9. '<|end|>' → logprob: -8.320712089538574
    10. ' for' → logprob: -8.445712089538574

Token 214: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5425751209259033
    2. ' a' → logprob: -1.4175751209259033
    3. 'b' → logprob: -3.0425751209259033
    4. '(a' → logprob: -3.1675751209259033
    5. 'if' → logprob: -3.6675751209259033
    6. ' b' → logprob: -4.167574882507324
    7. 'c' → logprob: -4.417574882507324
    8. ' c' → logprob: -4.792574882507324
    9. ' (' → logprob: -5.542574882507324
    10. ' not' → logprob: -5.667574882507324

Token 215: '()
' (ID: 1234)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4072365164756775
    2. 'three' → logprob: -2.0322365760803223
    3. 'if' → logprob: -2.5322365760803223
    4. ' three' → logprob: -3.1572365760803223
    5. 'a' → logprob: -3.1572365760803223
    6. 'variables' → logprob: -4.782236576080322
    7. '((' → logprob: -5.282236576080322
    8. '(' → logprob: -5.407236576080322
    9. '([' → logprob: -5.532236576080322
    10. ' variables' → logprob: -5.657236576080322

Token 216: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38319092988967896
    2. ' if' → logprob: -1.5081908702850342
    3. '   ' → logprob: -2.883190870285034
    4. 'all' → logprob: -4.508191108703613
    5. '```' → logprob: -5.008191108703613
    6. ' all' → logprob: -5.383191108703613
    7. 'condition' → logprob: -6.258191108703613
    8. '(
' → logprob: -6.383191108703613
    9. ' and' → logprob: -6.508191108703613
    10. '
' → logprob: -6.508191108703613

Token 217: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1598900407552719
    2. ' if' → logprob: -2.4098899364471436
    3. '   ' → logprob: -4.034890174865723
    4. 'all' → logprob: -4.534890174865723
    5. 'return' → logprob: -4.534890174865723
    6. '```' → logprob: -5.409890174865723
    7. 'condition' → logprob: -5.909890174865723
    8. ' all' → logprob: -5.909890174865723
    9. ' return' → logprob: -6.159890174865723
    10. 'conditions' → logprob: -6.659890174865723

Token 218: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06914178282022476
    2. ' all' → logprob: -2.9441418647766113
    3. 'not' → logprob: -4.694141864776611
    4. ' not' → logprob: -5.319141864776611
    5. 'any' → logprob: -9.819141387939453
    6. 'a' → logprob: -11.194141387939453
    7. '(all' → logprob: -11.319141387939453
    8. '   ' → logprob: -11.569141387939453
    9. ' any' → logprob: -12.194141387939453
    10. ' ' → logprob: -12.194141387939453

Token 219: '([(' (ID: 156282)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9242660999298096
    2. '([' → logprob: -1.1742660999298096
    3. '((' → logprob: -1.2992660999298096
    4. '(i' → logprob: -4.5492658615112305
    5. '(a' → logprob: -5.7992658615112305
    6. '(v' → logprob: -6.1742658615112305
    7. '(lambda' → logprob: -6.1742658615112305
    8. '(' → logprob: -6.5492658615112305
    9. '(val' → logprob: -7.4242658615112305
    10. '([
' → logprob: -7.9242658615112305

Token 220: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16257165372371674
    2. 'a' → logprob: -2.162571668624878
    3. 'i' → logprob: -3.912571668624878
    4. 'v' → logprob: -6.037571430206299
    5. 'expr' → logprob: -6.412571430206299
    6. 'not' → logprob: -6.537571430206299
    7. 'c' → logprob: -6.662571430206299
    8. 'F' → logprob: -6.662571430206299
    9. 'b' → logprob: -6.912571430206299
    10. '_' → logprob: -6.912571430206299

Token 221: ' >' (ID: 1424)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8175737857818604
    2. ',' → logprob: -1.5675737857818604
    3. '-' → logprob: -1.6925737857818604
    4. ' >' → logprob: -3.1925737857818604
    5. ' ,' → logprob: -3.9425737857818604
    6. ' ' → logprob: -4.067573547363281
    7. '>' → logprob: -4.067573547363281
    8. ' <' → logprob: -4.067573547363281
    9. 'a' → logprob: -4.567573547363281
    10. '<' → logprob: -5.192573547363281

Token 222: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7004209160804749
    2. 'i' → logprob: -1.82542085647583
    3. '1' → logprob: -2.45042085647583
    4. ' ' → logprob: -2.45042085647583
    5. 'x' → logprob: -2.57542085647583
    6. 'a' → logprob: -3.45042085647583
    7. ' i' → logprob: -4.32542085647583
    8. ' x' → logprob: -4.45042085647583
    9. 'k' → logprob: -4.57542085647583
    10. 'b' → logprob: -4.82542085647583

Token 223: '~' (ID: 93)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028453536331653595
    2. 'i' → logprob: -4.653453350067139
    3. 'c' → logprob: -5.778453350067139
    4. '100' → logprob: -5.778453350067139
    5. 'k' → logprob: -6.153453350067139
    6. 'b' → logprob: -6.278453350067139
    7. '2' → logprob: -6.278453350067139
    8. ' ' → logprob: -6.903453350067139
    9. 'x' → logprob: -6.903453350067139
    10. '10' → logprob: -7.153453350067139

Token 224: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8334364891052246
    2. 'a' → logprob: -1.3334364891052246
    3. 'b' → logprob: -1.5834364891052246
    4. 'x' → logprob: -3.4584364891052246
    5. '0' → logprob: -3.5834364891052246
    6. '1' → logprob: -4.583436489105225
    7. 'c' → logprob: -4.708436489105225
    8. 'k' → logprob: -4.708436489105225
    9. 'n' → logprob: -6.208436489105225
    10. '   ' → logprob: -6.208436489105225

Token 225: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.16226309537887573
    2. ')' → logprob: -2.9122631549835205
    3. '),
' → logprob: -3.5372631549835205
    4. ' ),' → logprob: -3.6622631549835205
    5. ' and' → logprob: -4.287262916564941
    6. '),(' → logprob: -4.912262916564941
    7. ',' → logprob: -5.412262916564941
    8. 'and' → logprob: -5.787262916564941
    9. '-' → logprob: -6.412262916564941
    10. '   ' → logprob: -6.412262916564941

Token 226: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1120368242263794
    2. ' b' → logprob: -1.4870368242263794
    3. '(n' → logprob: -2.48703670501709
    4. ' (' → logprob: -2.61203670501709
    5. '      ' → logprob: -3.48703670501709
    6. '   ' → logprob: -3.73703670501709
    7. '(b' → logprob: -3.86203670501709
    8. ' n' → logprob: -3.86203670501709
    9. '    ' → logprob: -3.98703670501709
    10. ' m' → logprob: -4.36203670501709

Token 227: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2721557319164276
    2. 'm' → logprob: -1.89715576171875
    3. 'u' → logprob: -3.89715576171875
    4. 'c' → logprob: -4.02215576171875
    5. 'n' → logprob: -4.14715576171875
    6. 'a' → logprob: -4.64715576171875
    7. ' b' → logprob: -4.89715576171875
    8. ' m' → logprob: -5.27215576171875
    9. 'w' → logprob: -5.52215576171875
    10. '~' → logprob: -6.77215576171875

Token 228: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6033731698989868
    2. ' >' → logprob: -1.1033731698989868
    3. '<' → logprob: -2.8533730506896973
    4. '>' → logprob: -3.6033730506896973
    5. '-' → logprob: -4.353373050689697
    6. '+' → logprob: -4.978373050689697
    7. ' -' → logprob: -5.603373050689697
    8. ' ' → logprob: -5.853373050689697
    9. 'b' → logprob: -6.353373050689697
    10. ' +' → logprob: -6.603373050689697

Token 229: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12340684980154037
    2. 'c' → logprob: -2.8734068870544434
    3. ' b' → logprob: -3.4984068870544434
    4. ' c' → logprob: -4.998406887054443
    5. 'm' → logprob: -5.498406887054443
    6. '1' → logprob: -5.498406887054443
    7. 'w' → logprob: -5.623406887054443
    8. '=' → logprob: -6.123406887054443
    9. 'n' → logprob: -6.123406887054443
    10. 'u' → logprob: -7.248406887054443

Token 230: ')]' (ID: 15710)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12349123507738113
    2. ')])' → logprob: -2.6234912872314453
    3. ')]' → logprob: -3.6234912872314453
    4. ' ),' → logprob: -4.748491287231445
    5. ')' → logprob: -5.873491287231445
    6. ')],' → logprob: -5.998491287231445
    7. ' )' → logprob: -7.123491287231445
    8. '),(' → logprob: -7.373491287231445
    9. '):' → logprob: -7.998491287231445
    10. '-' → logprob: -8.748491287231445

Token 231: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5655304789543152
    2. '):' → logprob: -0.9405304789543152
    3. ']):' → logprob: -4.440530300140381
    4. '):
' → logprob: -4.690530300140381
    5. ')' → logprob: -5.565530300140381
    6. ' ,' → logprob: -5.690530300140381
    7. ',
' → logprob: -5.940530300140381
    8. ' ):' → logprob: -6.065530300140381
    9. ')]' → logprob: -6.315530300140381
    10. ' and' → logprob: -6.315530300140381

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25995689630508423
    2. '   ' → logprob: -2.3849568367004395
    3. ' a' → logprob: -3.5099568367004395
    4. ':' → logprob: -4.0099568367004395
    5. 'a' → logprob: -4.0099568367004395
    6. '    ' → logprob: -4.1349568367004395
    7. '<|end|>' → logprob: -4.7599568367004395
    8. ' 
' → logprob: -4.8849568367004395
    9. ' :' → logprob: -5.3849568367004395
    10. ',' → logprob: -5.3849568367004395

Token 233: ' r' (ID: 428)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4668501317501068
    2. 'a' → logprob: -1.2168501615524292
    3. '       ' → logprob: -3.2168500423431396
    4. '    ' → logprob: -4.216850280761719
    5. '   ' → logprob: -4.716850280761719
    6. '        ' → logprob: -5.341850280761719
    7. ' b' → logprob: -5.966850280761719
    8. 'b' → logprob: -6.091850280761719
    9. ' ' → logprob: -7.716850280761719
    10. ' if' → logprob: -7.966850280761719

Token 234: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3656315207481384
    2. '-=' → logprob: -1.8656315803527832
    3. '+=' → logprob: -2.615631580352783
    4. ' +=' → logprob: -2.990631580352783
    5. '=' → logprob: -4.490631580352783
    6. '%=' → logprob: -4.990631580352783
    7. ' =' → logprob: -5.615631580352783
    8. '*=' → logprob: -6.115631580352783
    9. ' *=' → logprob: -6.615631580352783
    10. ' %=' → logprob: -6.740631580352783

Token 235: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20761670172214508
    2. 'b' → logprob: -2.3326168060302734
    3. ' C' → logprob: -4.082616806030273
    4. 'a' → logprob: -4.207616806030273
    5. 'summ' → logprob: -4.457616806030273
    6. '1' → logprob: -4.832616806030273
    7. 'pow' → logprob: -5.332616806030273
    8. '(n' → logprob: -5.457616806030273
    9. 'n' → logprob: -5.457616806030273
    10. 'S' → logprob: -5.832616806030273

Token 236: '(b' (ID: 3229)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.49251386523246765
    2. '(n' → logprob: -1.99251389503479
    3. '(a' → logprob: -1.99251389503479
    4. '(b' → logprob: -2.49251389503479
    5. '(c' → logprob: -3.86751389503479
    6. '(u' → logprob: -5.242513656616211
    7. '(' → logprob: -5.742513656616211
    8. '(m' → logprob: -6.492513656616211
    9. 'w' → logprob: -6.617513656616211
    10. 'a' → logprob: -7.867513656616211

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27420011162757874
    2. 'a' → logprob: -2.024200201034546
    3. ' ,' → logprob: -3.649200201034546
    4. '-' → logprob: -3.774200201034546
    5. ' -' → logprob: -4.399199962615967
    6. ' +' → logprob: -4.524199962615967
    7. '+' → logprob: -4.774199962615967
    8. ' a' → logprob: -5.024199962615967
    9. ',a' → logprob: -5.399199962615967
    10. 'w' → logprob: -5.649199962615967

Token 238: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021474001929163933
    2. 'u' → logprob: -4.5214738845825195
    3. 'w' → logprob: -6.3964738845825195
    4. ' a' → logprob: -6.3964738845825195
    5. '1' → logprob: -6.5214738845825195
    6. 'c' → logprob: -6.7714738845825195
    7. 'n' → logprob: -6.7714738845825195
    8. 'b' → logprob: -6.8964738845825195
    9. 'm' → logprob: -7.1464738845825195
    10. '2' → logprob: -7.8964738845825195

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00380387669429183
    2. ')
' → logprob: -6.378803730010986
    3. ')*' → logprob: -7.003803730010986
    4. ' )' → logprob: -7.753803730010986
    5. '+' → logprob: -8.003804206848145
    6. '       ' → logprob: -8.503804206848145
    7. '   ' → logprob: -9.128804206848145
    8. ' +' → logprob: -10.378804206848145
    9. ')

' → logprob: -11.753804206848145
    10. '-' → logprob: -11.753804206848145

Token 240: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5998542308807373
    2. 'a' → logprob: -1.0998542308807373
    3. '<|end|>' → logprob: -2.5998542308807373
    4. '+' → logprob: -4.474854469299316
    5. ' a' → logprob: -5.099854469299316
    6. '        
' → logprob: -5.099854469299316
    7. '+
' → logprob: -5.849854469299316
    8. ' +' → logprob: -6.099854469299316
    9. ',' → logprob: -6.349854469299316
    10. 'b' → logprob: -6.474854469299316

Token 241: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.17793068289756775
    2. 'pow' → logprob: -2.9279305934906006
    3. 'b' → logprob: -3.3029305934906006
    4. 'F' → logprob: -3.8029305934906006
    5. '(n' → logprob: -4.05293083190918
    6. 'w' → logprob: -5.17793083190918
    7. 'a' → logprob: -5.30293083190918
    8. '(' → logprob: -5.92793083190918
    9. '(m' → logprob: -6.05293083190918
    10. 'c' → logprob: -6.17793083190918

Token 242: '(((' (ID: 13163)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.22070656716823578
    2. '(w' → logprob: -1.720706582069397
    3. '(n' → logprob: -5.470706462860107
    4. '(m' → logprob: -5.595706462860107
    5. '(b' → logprob: -5.720706462860107
    6. '(' → logprob: -5.970706462860107
    7. '(a' → logprob: -5.970706462860107
    8. '(u' → logprob: -6.220706462860107
    9. 'c' → logprob: -8.345706939697266
    10. 'w' → logprob: -8.470706939697266

Token 243: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43700340390205383
    2. 'w' → logprob: -1.1870033740997314
    3. 'a' → logprob: -3.4370033740997314
    4. 'm' → logprob: -4.9370036125183105
    5. 'u' → logprob: -5.6870036125183105
    6. 'b' → logprob: -6.1870036125183105
    7. 'n' → logprob: -6.4370036125183105
    8. ' c' → logprob: -7.4370036125183105
    9. '   ' → logprob: -7.8120036125183105
    10. ' w' → logprob: -7.9370036125183105

Token 244: ' *' (ID: 425)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5251110792160034
    2. 'w' → logprob: -1.7751110792160034
    3. 'm' → logprob: -2.525111198425293
    4. '*c' → logprob: -2.650111198425293
    5. 'a' → logprob: -3.900111198425293
    6. '*w' → logprob: -3.900111198425293
    7. '*m' → logprob: -4.150111198425293
    8. ' *' → logprob: -5.025111198425293
    9. 'b' → logprob: -5.400111198425293
    10. '*' → logprob: -5.525111198425293

Token 245: ' u' (ID: 337)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6054336428642273
    2. 'm' → logprob: -1.355433702468872
    3. 'w' → logprob: -1.980433702468872
    4. 'a' → logprob: -3.355433702468872
    5. 'b' → logprob: -4.605433464050293
    6. 'n' → logprob: -5.605433464050293
    7. 'u' → logprob: -5.855433464050293
    8. '(m' → logprob: -5.980433464050293
    9. ' c' → logprob: -7.480433464050293
    10. '(w' → logprob: -7.480433464050293

Token 246: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1596187353134155
    2. ')' → logprob: -1.6596187353134155
    3. '+' → logprob: -1.9096187353134155
    4. '-' → logprob: -2.034618854522705
    5. ' +' → logprob: -2.159618854522705
    6. '),' → logprob: -3.034618854522705
    7. ',' → logprob: -4.034618854522705
    8. ')+' → logprob: -4.659618854522705
    9. ' ' → logprob: -4.909618854522705
    10. ' )' → logprob: -5.409618854522705

Token 247: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.595162570476532
    2. 'w' → logprob: -1.2201626300811768
    3. 'b' → logprob: -3.4701626300811768
    4. 'm' → logprob: -3.4701626300811768
    5. 'a' → logprob: -3.5951626300811768
    6. '1' → logprob: -3.7201626300811768
    7. '2' → logprob: -5.345162391662598
    8. '(' → logprob: -5.345162391662598
    9. 'n' → logprob: -5.345162391662598
    10. ' c' → logprob: -5.595162391662598

Token 248: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4542791545391083
    2. ' -' → logprob: -1.5792791843414307
    3. '-' → logprob: -2.0792791843414307
    4. ' )' → logprob: -4.329278945922852
    5. '),' → logprob: -4.829278945922852
    6. ')-' → logprob: -5.204278945922852
    7. 'a' → logprob: -6.704278945922852
    8. ' ' → logprob: -6.704278945922852
    9. '+' → logprob: -6.954278945922852
    10. ')),' → logprob: -7.079278945922852

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5110183954238892
    2. 'b' → logprob: -1.1360183954238892
    3. '1' → logprob: -3.7610182762145996
    4. '(' → logprob: -4.3860182762146
    5. '2' → logprob: -4.6360182762146
    6. '3' → logprob: -4.8860182762146
    7. ' a' → logprob: -5.3860182762146
    8. ' b' → logprob: -5.3860182762146
    9. 'w' → logprob: -5.3860182762146
    10. 'm' → logprob: -6.0110182762146

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14474327862262726
    2. '),' → logprob: -2.7697432041168213
    3. ' )' → logprob: -3.6447432041168213
    4. ' -' → logprob: -4.0197434425354
    5. '-' → logprob: -4.7697434425354
    6. ')),' → logprob: -4.8947434425354
    7. ' ),' → logprob: -5.7697434425354
    8. ')-' → logprob: -6.1447434425354
    9. ' ' → logprob: -6.6447434425354
    10. '+' → logprob: -6.6447434425354

Token 251: ' >>' (ID: 6832)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -1.290474772453308
    2. ')' → logprob: -1.415474772453308
    3. ' -' → logprob: -1.540474772453308
    4. '-' → logprob: -1.540474772453308
    5. ',' → logprob: -3.7904748916625977
    6. ' ),' → logprob: -4.665474891662598
    7. ' )' → logprob: -4.915474891662598
    8. ')-' → logprob: -5.415474891662598
    9. ' ' → logprob: -6.165474891662598
    10. '+' → logprob: -6.290474891662598

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015788905147928745
    2. '2' → logprob: -9.375158309936523
    3. ' ' → logprob: -10.000158309936523
    4. '   ' → logprob: -11.250158309936523
    5. '3' → logprob: -13.000158309936523
    6. '0' → logprob: -13.000158309936523
    7. '```' → logprob: -13.562658309936523
    8. '           ' → logprob: -13.625158309936523
    9. '
' → logprob: -13.625158309936523
    10. '       ' → logprob: -14.500158309936523

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015383612480945885
    2. '2' → logprob: -9.375153541564941
    3. ' ' → logprob: -10.000153541564941
    4. '   ' → logprob: -11.812653541564941
    5. '3' → logprob: -13.000153541564941
    6. '0' → logprob: -13.062653541564941
    7. '```' → logprob: -13.750153541564941
    8. '4' → logprob: -14.437653541564941
    9. '           ' → logprob: -14.437653541564941
    10. '
' → logprob: -14.437653541564941

Token 254: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3541628420352936
    2. ',' → logprob: -1.4791628122329712
    3. ')' → logprob: -3.2291629314422607
    4. ' ,' → logprob: -4.104162693023682
    5. ' ),' → logprob: -4.479162693023682
    6. ' )' → logprob: -6.729162693023682
    7. '   ' → logprob: -7.604162693023682
    8. '))' → logprob: -8.60416316986084
    9. ' ' → logprob: -8.85416316986084
    10. ')),' → logprob: -8.97916316986084

Token 255: ' u' (ID: 337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6026530265808105
    2. 'u' → logprob: -1.8526530265808105
    3. 'c' → logprob: -1.8526530265808105
    4. ' (' → logprob: -2.2276530265808105
    5. 'a' → logprob: -2.6026530265808105
    6. 'b' → logprob: -2.8526530265808105
    7. ' u' → logprob: -2.9776530265808105
    8. '(u' → logprob: -2.9776530265808105
    9. ' c' → logprob: -3.3526530265808105
    10. '(a' → logprob: -3.8526530265808105

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08459577709436417
    2. '-' → logprob: -3.2095956802368164
    3. ' -' → logprob: -3.9595956802368164
    4. '+' → logprob: -4.209595680236816
    5. ' )' → logprob: -5.959595680236816
    6. ' +' → logprob: -6.834595680236816
    7. '   ' → logprob: -7.209595680236816
    8. '-)' → logprob: -7.334595680236816
    9. ')
' → logprob: -7.834595680236816
    10. ' ' → logprob: -8.584595680236816

Token 257: '       ' (ID: 309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.317895770072937
    2. 'a' → logprob: -1.817895770072937
    3. '\n' → logprob: -3.1928958892822266
    4. '       ' → logprob: -4.067895889282227
    5. '\' → logprob: -4.442895889282227
    6. ' \' → logprob: -4.817895889282227
    7. ' 
' → logprob: -5.192895889282227
    8. ' ' → logprob: -5.317895889282227
    9. '   ' → logprob: -5.567895889282227
    10. '    ' → logprob: -6.067895889282227

Token 258: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01610897295176983
    2. ' a' → logprob: -4.141108989715576
    3. '   ' → logprob: -10.141108512878418
    4. '	a' → logprob: -10.641108512878418
    5. '       ' → logprob: -11.891108512878418
    6. ' ' → logprob: -13.641108512878418
    7. 'r' → logprob: -13.766108512878418
    8. '    ' → logprob: -14.016108512878418
    9. ' r' → logprob: -14.516108512878418
    10. ' ' → logprob: -15.516108512878418

Token 259: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002147762104868889
    2. ' +=' → logprob: -6.877147674560547
    3. '=' → logprob: -7.252147674560547
    4. '+' → logprob: -8.002147674560547
    5. '-=' → logprob: -9.627147674560547
    6. '++' → logprob: -13.377147674560547
    7. '_' → logprob: -13.752147674560547
    8. '-' → logprob: -14.627147674560547
    9. 'plus' → logprob: -14.752147674560547
    10. ']+=' → logprob: -15.127147674560547

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125139236450195
    4. '2' → logprob: -16.375139236450195
    5. '  ' → logprob: -17.125139236450195
    6. '
' → logprob: -17.875139236450195
    7. '3' → logprob: -18.625139236450195
    8. '```' → logprob: -18.875139236450195
    9. '<|end|>' → logprob: -19.125139236450195
    10. ' ' → logprob: -19.125139236450195

Token 261: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.946405094116926e-05
    2. ' ' → logprob: -9.500079154968262
    3. '2' → logprob: -12.750079154968262
    4. '3' → logprob: -15.000079154968262
    5. '   ' → logprob: -15.000079154968262
    6. '  ' → logprob: -15.312579154968262
    7. '-' → logprob: -16.125080108642578
    8. '7' → logprob: -16.250080108642578
    9. '<|end|>' → logprob: -16.312580108642578
    10. '4' → logprob: -16.625080108642578

Token 262: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46299827098846436
    2. '<|end|>' → logprob: -1.0879982709884644
    3. ')' → logprob: -4.212998390197754
    4. ' ' → logprob: -5.337998390197754
    5. ' return' → logprob: -5.462998390197754
    6. 'return' → logprob: -5.962998390197754
    7. '    ' → logprob: -6.212998390197754
    8. 'b' → logprob: -6.712998390197754
    9. ',' → logprob: -7.587998390197754
    10. '
' → logprob: -7.712998390197754

Token 264: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6995341777801514
    2. ')' → logprob: -0.9495341777801514
    3. '<|end|>' → logprob: -2.4495341777801514
    4. ' return' → logprob: -4.6995344161987305
    5. 'return' (adapté à ' return') → logprob: -4.9495344161987305
    6. ' ' → logprob: -5.6995344161987305
    7. 'r' → logprob: -5.8245344161987305
    8. '	return' → logprob: -6.6995344161987305
    9. '
' → logprob: -7.1995344161987305
    10. ',' → logprob: -7.5745344161987305

Token 265: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0028754882514476776
    2. ' r' → logprob: -5.877875328063965
    3. '(r' → logprob: -9.752875328063965
    4. 'int' → logprob: -11.877875328063965
    5. ' ' → logprob: -14.127875328063965
    6. ' ' → logprob: -14.252875328063965
    7. '	r' → logprob: -14.252875328063965
    8. ' (' → logprob: -14.627875328063965
    9. 'max' → logprob: -14.627875328063965
    10. '
' → logprob: -14.627875328063965

Token 266: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18196932971477509
    2. '<|end|>' → logprob: -1.8069692850112915
    3. '
' → logprob: -6.806969165802002
    4. '```' → logprob: -8.05696964263916
    5. '<|end|>' → logprob: -8.93196964263916
    6. '(' → logprob: -9.68196964263916
    7. ')
' → logprob: -9.80696964263916
    8. '+' → logprob: -9.93196964263916
    9. ']' → logprob: -9.93196964263916
    10. '#' → logprob: -10.05696964263916

Token 267: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.6550729419104755e-05
    2. ' MOD' → logprob: -10.250036239624023
    3. '998' → logprob: -13.750036239624023
    4. '_MOD' → logprob: -16.500036239624023
    5. '.MOD' → logprob: -18.250036239624023
    6. ' ' → logprob: -18.875036239624023
    7. '`' → logprob: -20.125036239624023
    8. '```' → logprob: -20.125036239624023
    9. '   ' → logprob: -20.375036239624023
    10. '(M' → logprob: -20.750036239624023

Token 268: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013064699247479439
    2. '<|end|>' → logprob: -4.638064861297607
    3. 'print' → logprob: -7.388064861297607
    4. '(' → logprob: -7.763064861297607
    5. '#' → logprob: -7.763064861297607
    6. '0' → logprob: -8.51306438446045
    7. '(n' → logprob: -8.88806438446045
    8. '
' → logprob: -9.01306438446045
    9. '   ' → logprob: -9.01306438446045
    10. ':' → logprob: -9.13806438446045

Token 269: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020105013623833656
    2. 'S' → logprob: -5.145104885101318
    3. 'print' → logprob: -5.145104885101318
    4. '(' → logprob: -5.895104885101318
    5. 'r' → logprob: -6.270104885101318
    6. '#' → logprob: -7.520104885101318
    7. 'return' → logprob: -7.645104885101318
    8. '()' → logprob: -7.770104885101318
    9. '<|end|>' → logprob: -8.145105361938477
    10. '(
' → logprob: -8.270105361938477

Token 270: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.026039114221930504
    2. '(' → logprob: -3.7760391235351562
    3. '()' → logprob: -6.026039123535156
    4. 'S' → logprob: -8.026039123535156
    5. '(
' → logprob: -10.651039123535156
    6. '(s' → logprob: -11.526039123535156
    7. ' (' → logprob: -12.901039123535156
    8. '(print' → logprob: -12.901039123535156
    9. '('' → logprob: -13.026039123535156
    10. '(()' → logprob: -13.276039123535156

Token 271: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021331757307052612
    2. ')' → logprob: -4.021331787109375
    3. '()' → logprob: -5.771331787109375
    4. '))' → logprob: -10.271331787109375
    5. '()))' → logprob: -11.646331787109375
    6. '(' → logprob: -12.146331787109375
    7. ' ())' → logprob: -12.146331787109375
    8. '())
' → logprob: -12.521331787109375
    9. '();)' → logprob: -13.396331787109375
    10. '()
' → logprob: -14.396331787109375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 269
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 29.37%
Précision adaptée (1ère position): 30.86%
Précision (top 10): 72.12%
================================================================================
