================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input().rstrip()

def define_weather_list():
    return ['Sunny', 'Cloudy', 'Rainy']

def get_length_of_list(lst):
    return len(lst)

def get_element_at_index(lst, idx):
    return lst[idx]

def compare_values(val1, val2):
    return val1 == val2

def increment_index(idx):
    return idx + 1

def modulo_operation(val, mod):
    return val % mod

def print_value(val):
    print(val)

def main():
    Ss = get_input()
    Ts = define_weather_list()
    length = get_length_of_list(Ts)
    for i in range(length):
        current_element = get_element_at_index(Ts, i)
        if compare_values(current_element, Ss):
            next_index_base = increment_index(i)
            next_index = modulo_operation(next_index_base, length)
            value_to_print = get_element_at_index(Ts, next_index)
            print_value(value_to_print)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015994871500879526
    2. '_' → logprob: -6.626599311828613
    3. ' (' → logprob: -9.376599311828613
    4. '():' → logprob: -9.376599311828613
    5. '```' → logprob: -10.751599311828613
    6. '()' → logprob: -11.126599311828613
    7. '(:' → logprob: -11.501599311828613
    8. '("("' → logprob: -11.876599311828613
    9. ':' → logprob: -12.376599311828613
    10. '(_:' → logprob: -12.501599311828613

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05937580764293671
    2. '():' → logprob: -3.684375762939453
    3. ':' → logprob: -4.559375762939453
    4. '   ' → logprob: -4.684375762939453
    5. '\' → logprob: -5.809375762939453
    6. '\n' → logprob: -5.934375762939453
    7. '``' → logprob: -5.934375762939453
    8. '    
' → logprob: -7.059375762939453
    9. '()' → logprob: -7.934375762939453
    10. '(' → logprob: -7.934375762939453

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3084721863269806
    2. 'i' → logprob: -2.058472156524658
    3. 'input' → logprob: -2.808472156524658
    4. 'user' → logprob: -3.808472156524658
    5. 'r' → logprob: -4.058472156524658
    6. 'x' → logprob: -4.433472156524658
    7. '   ' → logprob: -4.558472156524658
    8. ' ' → logprob: -5.558472156524658
    9. '```' → logprob: -6.058472156524658
    10. 'n' → logprob: -6.058472156524658

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5094094276428223
    2. ' input' → logprob: -1.1344094276428223
    3. 'input' → logprob: -2.8844094276428223
    4. '"' → logprob: -4.259409427642822
    5. ''' → logprob: -5.759409427642822
    6. ' "' → logprob: -6.384409427642822
    7. '  ' → logprob: -6.884409427642822
    8. ' '' → logprob: -7.634409427642822
    9. ' None' → logprob: -8.259408950805664
    10. '(input' → logprob: -8.509408950805664

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015529518714174628
    2. '()' → logprob: -6.626553058624268
    3. '('' → logprob: -9.25155258178711
    4. '("("' → logprob: -9.62655258178711
    5. '(
' → logprob: -11.25155258178711
    6. ' (' → logprob: -11.25155258178711
    7. '```' → logprob: -11.62655258178711
    8. '("")' → logprob: -11.87655258178711
    9. ' ' → logprob: -12.12655258178711
    10. ''' → logprob: -12.62655258178711

Token 8: 'rstrip' (ID: 180429)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6939741373062134
    2. '()' → logprob: -1.1939741373062134
    3. 'strip' → logprob: -2.443974018096924
    4. '\n' → logprob: -3.568974018096924
    5. '```' → logprob: -3.568974018096924
    6. 'rstrip' → logprob: -4.568974018096924
    7. 'split' → logprob: -4.818974018096924
    8. ')' → logprob: -5.068974018096924
    9. ' ' → logprob: -5.318974018096924
    10. '\' → logprob: -5.318974018096924

Token 9: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029609426856040955
    2. '()' → logprob: -5.877961158752441
    3. '(
' → logprob: -9.877961158752441
    4. '(

' → logprob: -10.877961158752441
    5. '```' → logprob: -11.002961158752441
    6. '"' → logprob: -11.127961158752441
    7. ' (' → logprob: -11.252961158752441
    8. '('' → logprob: -12.002961158752441
    9. '`' → logprob: -12.002961158752441
    10. ''' → logprob: -12.127961158752441

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2720993459224701
    2. '
' → logprob: -2.647099256515503
    3. '(
' → logprob: -3.147099256515503
    4. ':' → logprob: -3.522099256515503
    5. '()' → logprob: -3.772099256515503
    6. '\n' → logprob: -4.272099494934082
    7. '```' → logprob: -4.272099494934082
    8. 'def' → logprob: -4.397099494934082
    9. '#' → logprob: -5.522099494934082
    10. ')' → logprob: -5.772099494934082

Token 11: ' define' (ID: 13174)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1385217010974884
    2. ' calculate' → logprob: -2.263521671295166
    3. ' main' → logprob: -4.888521671295166
    4. ' process' → logprob: -5.263521671295166
    5. ' space' → logprob: -5.513521671295166
    6. '_' → logprob: -6.263521671295166
    7. ' user' → logprob: -6.388521671295166
    8. ' compute' → logprob: -7.263521671295166
    9. '_get' → logprob: -7.638521671295166
    10. ' set' → logprob: -7.888521671295166

Token 12: '_weather' (ID: 170154)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012385673820972443
    2. '(' → logprob: -5.012385845184326
    3. '_function' → logprob: -5.512385845184326
    4. '_name' → logprob: -8.262385368347168
    5. '_space' → logprob: -8.387385368347168
    6. '_variable' → logprob: -8.512385368347168
    7. ' _' → logprob: -8.762385368347168
    8. '_user' → logprob: -9.137385368347168
    9. '_functions' → logprob: -9.387385368347168
    10. '_parameters' → logprob: -9.512385368347168

Token 13: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.648536205291748
    2. '_' → logprob: -0.773536205291748
    3. '():' → logprob: -4.773536205291748
    4. '()' → logprob: -6.648536205291748
    5. '_conditions' → logprob: -6.773536205291748
    6. '_condition' → logprob: -6.898536205291748
    7. '(_)' → logprob: -7.148536205291748
    8. '_weather' → logprob: -7.773536205291748
    9. 's' → logprob: -8.148536682128906
    10. '_(' → logprob: -8.148536682128906

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5862206816673279
    2. '(' → logprob: -0.8362206816673279
    3. '_' → logprob: -5.711220741271973
    4. '_list' → logprob: -5.711220741271973
    5. '()' → logprob: -6.461220741271973
    6. 's' → logprob: -6.961220741271973
    7. '(_' → logprob: -8.961220741271973
    8. '_s' → logprob: -9.336220741271973
    9. '("("' → logprob: -9.461220741271973
    10. ' ():' → logprob: -9.711220741271973

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16930760443210602
    2. '[]' → logprob: -2.7943077087402344
    3. 'weather' → logprob: -3.0443077087402344
    4. '[' → logprob: -3.4193077087402344
    5. '_weather' → logprob: -5.294307708740234
    6. ' weather' → logprob: -5.669307708740234
    7. '(weather' → logprob: -7.294307708740234
    8. ' return' → logprob: -7.294307708740234
    9. '<|end|>' → logprob: -7.419307708740234
    10. ' []' → logprob: -7.544307708740234

Token 16: ' return' (ID: 622)
  Prédit: 'weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weather' → logprob: -0.6792150735855103
    2. '   ' → logprob: -1.4292150735855103
    3. ' weather' → logprob: -1.5542150735855103
    4. ' return' → logprob: -3.5542149543762207
    5. 'return' (adapté à ' return') → logprob: -5.054214954376221
    6. 'w' → logprob: -6.804214954376221
    7. 'we' → logprob: -6.929214954376221
    8. '[' → logprob: -6.929214954376221
    9. ' we' → logprob: -7.179214954376221
    10. '[]' → logprob: -7.179214954376221

Token 17: ' ['' (ID: 5140)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.45691776275634766
    2. ' ['' → logprob: -2.0819177627563477
    3. ' ["' → logprob: -2.5819177627563477
    4. ' [' → logprob: -2.5819177627563477
    5. '[]' → logprob: -2.8319177627563477
    6. '[' → logprob: -4.331917762756348
    7. '["' → logprob: -4.456917762756348
    8. '['' → logprob: -5.081917762756348
    9. ' [
' → logprob: -7.206917762756348
    10. '[
' → logprob: -9.581917762756348

Token 18: 'Sunny' (ID: 145166)
  Prédit: 'sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sun' → logprob: -0.25968503952026367
    2. 'Sunny' → logprob: -2.1346850395202637
    3. 'rain' → logprob: -2.7596850395202637
    4. 'clear' → logprob: -4.259685039520264
    5. 'cloud' → logprob: -4.509685039520264
    6. 'Rain' → logprob: -5.009685039520264
    7. 'Clear' → logprob: -5.134685039520264
    8. 'Cloud' → logprob: -5.509685039520264
    9. '晴' → logprob: -6.134685039520264
    10. 'snow' → logprob: -7.384685039520264

Token 19: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00011188744247192517
    2. ' ',' → logprob: -9.87511157989502
    3. ''' → logprob: -10.25011157989502
    4. '','' → logprob: -10.75011157989502
    5. ',' → logprob: -13.12511157989502
    6. '']' → logprob: -14.87511157989502
    7. '',
' → logprob: -15.00011157989502
    8. 'Sunny' → logprob: -15.12511157989502
    9. '",' → logprob: -15.62511157989502
    10. 'Day' → logprob: -16.125112533569336

Token 20: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05509869381785393
    2. ' '' → logprob: -2.93009877204895
    3. ''S' → logprob: -9.680098533630371
    4. ' ' → logprob: -10.055098533630371
    5. 'Rain' → logprob: -10.555098533630371
    6. ' Rain' → logprob: -10.805098533630371
    7. '"' → logprob: -11.055098533630371
    8. 'Cloud' → logprob: -11.805098533630371
    9. 'cloud' → logprob: -12.055098533630371
    10. ''s' → logprob: -12.180098533630371

Token 21: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.4774959087371826
    2. 'Rain' → logprob: -0.9774959087371826
    3. ' Rain' → logprob: -6.477496147155762
    4. ' Cloud' → logprob: -6.727496147155762
    5. 'Wind' → logprob: -9.352496147155762
    6. '   ' → logprob: -9.602496147155762
    7. ''' → logprob: -9.602496147155762
    8. 'Part' → logprob: -9.602496147155762
    9. 'cloud' → logprob: -9.852496147155762
    10. ' ' → logprob: -9.852496147155762

Token 22: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.3856492842023727e-06
    2. ''y' → logprob: -14.625000953674316
    3. ' y' → logprob: -14.875000953674316
    4. '[y' → logprob: -15.500000953674316
    5. 'ly' → logprob: -15.875000953674316
    6. 's' → logprob: -16.500001907348633
    7. '‘y' → logprob: -17.250001907348633
    8. 'less' → logprob: -17.250001907348633
    9. '```' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.750001907348633

Token 23: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -8.566264295950532e-05
    2. ''' → logprob: -9.500085830688477
    3. '']' → logprob: -12.375085830688477
    4. ',' → logprob: -12.875085830688477
    5. '','' → logprob: -13.000085830688477
    6. ' ',' → logprob: -14.000085830688477
    7. '",' → logprob: -15.500085830688477
    8. ''S' → logprob: -15.750085830688477
    9. ']' → logprob: -16.000085830688477
    10. ']',' → logprob: -16.250085830688477

Token 24: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0161892082542181
    2. ' '' → logprob: -4.141189098358154
    3. ''S' → logprob: -8.891189575195312
    4. ' ' → logprob: -12.266189575195312
    5. '"' → logprob: -13.016189575195312
    6. '',' → logprob: -13.016189575195312
    7. ''s' → logprob: -13.766189575195312
    8. ',' → logprob: -14.016189575195312
    9. '`' → logprob: -14.141189575195312
    10. ' ' → logprob: -14.266189575195312

Token 25: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -0.00377573911100626
    2. ''' → logprob: -6.253775596618652
    3. ' Rain' → logprob: -6.628775596618652
    4. 'Snow' → logprob: -9.003775596618652
    5. 'Wind' → logprob: -9.628775596618652
    6. ''r' → logprob: -10.128775596618652
    7. ' rainy' → logprob: -10.253775596618652
    8. 'Fog' → logprob: -10.253775596618652
    9. 'rain' → logprob: -10.753775596618652
    10. '   ' → logprob: -10.753775596618652

Token 26: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.741137283621356e-05
    2. '']' → logprob: -10.250057220458984
    3. ''y' → logprob: -10.875057220458984
    4. 'ny' → logprob: -13.000057220458984
    5. ''' → logprob: -14.625057220458984
    6. '‘y' → logprob: -16.250057220458984
    7. '```' → logprob: -16.875057220458984
    8. '',' → logprob: -16.875057220458984
    9. '']]' → logprob: -17.375057220458984
    10. '')' → logprob: -17.625057220458984

Token 27: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.029774438589811325
    2. '']' → logprob: -3.5297744274139404
    3. ''' → logprob: -11.02977466583252
    4. '','' → logprob: -12.27977466583252
    5. ']' → logprob: -13.27977466583252
    6. '",' → logprob: -14.27977466583252
    7. ''],' → logprob: -16.029773712158203
    8. '',
' → logprob: -16.029773712158203
    9. ' ',' → logprob: -16.154773712158203
    10. '')' → logprob: -16.279773712158203

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002456510905176401
    2. '<|end|>' → logprob: -7.2524566650390625
    3. '
' → logprob: -7.8774566650390625
    4. 'weather' → logprob: -8.127456665039062
    5. '```' → logprob: -8.252456665039062
    6. '

' → logprob: -8.377456665039062
    7. '[' → logprob: -9.127456665039062
    8. '\' → logprob: -9.252456665039062
    9. '#' → logprob: -9.502456665039062
    10. 'for' → logprob: -9.752456665039062

Token 29: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.611391007900238
    2. ' get' → logprob: -1.7363910675048828
    3. ' check' → logprob: -2.611391067504883
    4. ' calculate' → logprob: -2.861391067504883
    5. ' is' → logprob: -3.486391067504883
    6. ' predict' → logprob: -4.111391067504883
    7. ' weather' → logprob: -4.111391067504883
    8. ' process' → logprob: -4.486391067504883
    9. ' define' → logprob: -4.611391067504883
    10. ' classify' → logprob: -4.611391067504883

Token 30: '_length' (ID: 11514)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.023810094222426414
    2. '_input' → logprob: -4.648809909820557
    3. '_temperature' → logprob: -5.898809909820557
    4. '_' → logprob: -5.898809909820557
    5. '_user' → logprob: -6.273809909820557
    6. '_w' → logprob: -6.273809909820557
    7. '_day' → logprob: -6.773809909820557
    8. '_current' → logprob: -6.898809909820557
    9. '_average' → logprob: -8.648810386657715
    10. '_max' → logprob: -8.773810386657715

Token 31: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020133523270487785
    2. '()' → logprob: -4.2701334953308105
    3. '_' → logprob: -5.3951334953308105
    4. '():' → logprob: -8.020133972167969
    5. 's' → logprob: -9.020133972167969
    6. '```' → logprob: -9.020133972167969
    7. '("("' → logprob: -9.020133972167969
    8. ' (' → logprob: -9.895133972167969
    9. '(_)' → logprob: -10.145133972167969
    10. '_of' → logprob: -10.270133972167969

Token 32: '_list' (ID: 4162)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.7213550806045532
    2. '_list' → logprob: -1.2213550806045532
    3. '_' → logprob: -1.7213550806045532
    4. '_define' → logprob: -4.471354961395264
    5. ' define' → logprob: -5.221354961395264
    6. ' _' → logprob: -5.471354961395264
    7. ' weather' → logprob: -5.846354961395264
    8. ' list' → logprob: -5.971354961395264
    9. 'define' → logprob: -6.471354961395264
    10. 'list' → logprob: -6.846354961395264

Token 33: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022759558632969856
    2. '_' → logprob: -4.647759437561035
    3. '()' → logprob: -4.647759437561035
    4. '():' → logprob: -6.397759437561035
    5. '_list' → logprob: -7.397759437561035
    6. 's' → logprob: -8.522759437561035
    7. '("("' → logprob: -9.022759437561035
    8. '('' → logprob: -9.147759437561035
    9. '('_' → logprob: -9.522759437561035
    10. '_parent' → logprob: -9.522759437561035

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008747772313654423
    2. ')' → logprob: -4.758747577667236
    3. ' ):' → logprob: -9.258748054504395
    4. '):
' → logprob: -11.383748054504395
    5. '(' → logprob: -11.758748054504395
    6. '():' → logprob: -12.133748054504395
    7. '[]):' → logprob: -12.883748054504395
    8. '[' → logprob: -13.258748054504395
    9. ':' → logprob: -13.508748054504395
    10. ' )' → logprob: -13.508748054504395

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13304755091667175
    2. ' len' → logprob: -2.383047580718994
    3. ' return' → logprob: -3.758047580718994
    4. 'len' → logprob: -5.008047580718994
    5. '    ' → logprob: -7.133047580718994
    6. '(len' → logprob: -7.383047580718994
    7. ' ' → logprob: -8.008047103881836
    8. 'return' → logprob: -8.383047103881836
    9. '  ' → logprob: -9.133047103881836
    10. '	len' → logprob: -9.508047103881836

Token 36: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2016259729862213
    2. ' return' → logprob: -1.701625943183899
    3. 'return' (adapté à ' return') → logprob: -8.57662582397461
    4. '    ' → logprob: -11.32662582397461
    5. '```' → logprob: -12.07662582397461
    6. ' len' → logprob: -12.70162582397461
    7. ' ' → logprob: -14.07662582397461
    8. '	return' → logprob: -14.07662582397461
    9. '  ' → logprob: -14.07662582397461
    10. '       ' → logprob: -14.82662582397461

Token 37: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0022181766107678413
    2. 'len' → logprob: -6.127218246459961
    3. ' ' → logprob: -10.377218246459961
    4. ' ' → logprob: -13.752218246459961
    5. '(len' → logprob: -14.627218246459961
    6. '	len' → logprob: -15.627218246459961
    7. '[len' → logprob: -16.50221824645996
    8. '=len' → logprob: -16.62721824645996
    9. ' int' → logprob: -18.50221824645996
    10. '<len' → logprob: -18.75221824645996

Token 38: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47410714626312256
    2. '(lst' → logprob: -0.9741071462631226
    3. '(

' → logprob: -11.599106788635254
    4. '(l' → logprob: -12.099106788635254
    5. '(
' → logprob: -12.224106788635254
    6. '(ls' → logprob: -12.349106788635254
    7. '(list' → logprob: -12.724106788635254
    8. ' (' → logprob: -13.724106788635254
    9. '(ll' → logprob: -14.224106788635254
    10. '('' → logprob: -15.349106788635254

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -16.000001907348633
    4. '())' → logprob: -16.375001907348633
    5. ')
' → logprob: -16.750001907348633
    6. ')return' → logprob: -17.000001907348633
    7. '(' → logprob: -17.500001907348633
    8. '[' → logprob: -17.625001907348633
    9. ')))' → logprob: -17.875001907348633
    10. '')' → logprob: -18.125001907348633

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11268704384565353
    2. '
' → logprob: -2.987687110900879
    3. '<|end|>' → logprob: -3.487687110900879
    4. '

' → logprob: -4.112687110900879
    5. '```' → logprob: -5.362687110900879
    6. '#' → logprob: -6.487687110900879
    7. '<|end|>' → logprob: -6.737687110900879
    8. '\' → logprob: -7.362687110900879
    9. '\n' → logprob: -8.112687110900879
    10. '[' → logprob: -8.612687110900879

Token 41: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3875248432159424
    2. ' main' → logprob: -1.5125248432159424
    3. ' calculate' → logprob: -2.5125248432159424
    4. ' is' → logprob: -5.762524604797363
    5. ' check' → logprob: -5.887524604797363
    6. ' add' → logprob: -5.887524604797363
    7. ' define' → logprob: -6.012524604797363
    8. ' convert' → logprob: -6.012524604797363
    9. ' print' → logprob: -7.137524604797363
    10. ' compute' → logprob: -7.512524604797363

Token 42: '_element' (ID: 21131)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7604296207427979
    2. '_input' → logprob: -1.7604296207427979
    3. '_length' → logprob: -2.135429620742798
    4. '_weather' → logprob: -2.135429620742798
    5. '_list' → logprob: -2.510429620742798
    6. '_max' → logprob: -4.510429382324219
    7. '_user' → logprob: -5.010429382324219
    8. '_element' → logprob: -5.385429382324219
    9. '_item' → logprob: -5.635429382324219
    10. '_string' → logprob: -6.635429382324219

Token 43: '_at' (ID: 8254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14441005885601044
    2. '_at' → logprob: -2.2694101333618164
    3. '(lst' → logprob: -3.8944101333618164
    4. '_' → logprob: -5.769410133361816
    5. '_of' → logprob: -6.394410133361816
    6. '_from' → logprob: -6.644410133361816
    7. '_by' → logprob: -6.769410133361816
    8. 's' → logprob: -6.894410133361816
    9. '(s' → logprob: -7.269410133361816
    10. '_list' → logprob: -8.394410133361816

Token 44: '_index' (ID: 7748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12219560891389847
    2. '_' → logprob: -2.3721957206726074
    3. '_index' → logprob: -4.997195720672607
    4. '(lst' → logprob: -5.122195720672607
    5. ' (' → logprob: -5.497195720672607
    6. '_list' → logprob: -6.247195720672607
    7. '_(' → logprob: -6.372195720672607
    8. '(index' → logprob: -7.622195720672607
    9. ' ' → logprob: -8.49719524383545
    10. '<|end|>' → logprob: -9.24719524383545

Token 45: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.5246338844299316
    2. '(' → logprob: -0.8996338844299316
    3. ' (' → logprob: -7.149633884429932
    4. '(l' → logprob: -8.274633407592773
    5. '(ls' → logprob: -9.024633407592773
    6. '(list' → logprob: -10.024633407592773
    7. '(ll' → logprob: -10.399633407592773
    8. ' ' → logprob: -10.524633407592773
    9. '(index' → logprob: -10.649633407592773
    10. '_' → logprob: -11.149633407592773

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028016636497341096
    2. ',index' → logprob: -8.500280380249023
    3. ' ,' → logprob: -9.625280380249023
    4. '[' → logprob: -12.375280380249023
    5. '[index' → logprob: -12.500280380249023
    6. '):' → logprob: -14.125280380249023
    7. '   ' → logprob: -14.875280380249023
    8. '[],' → logprob: -14.875280380249023
    9. ')' → logprob: -15.000280380249023
    10. 'index' → logprob: -15.250280380249023

Token 47: ' idx' (ID: 14016)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.035885561257600784
    2. 'index' → logprob: -3.4108855724334717
    3. ' idx' → logprob: -6.160885334014893
    4. 'idx' → logprob: -9.66088581085205
    5. ' i' → logprob: -10.78588581085205
    6. '   ' → logprob: -11.16088581085205
    7. 'i' → logprob: -11.66088581085205
    8. ')' → logprob: -12.03588581085205
    9. ' ' → logprob: -13.03588581085205
    10. '    ' → logprob: -13.66088581085205

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16027691960334778
    2. ')' → logprob: -1.9102768898010254
    3. ' ):' → logprob: -10.660277366638184
    4. '):
' → logprob: -10.910277366638184
    5. ' )' → logprob: -12.410277366638184
    6. ':' → logprob: -13.535277366638184
    7. '   ' → logprob: -14.035277366638184
    8. '[' → logprob: -14.410277366638184
    9. ' ' → logprob: -14.660277366638184
    10. ']:' → logprob: -14.660277366638184

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005960680078715086
    2. ' return' → logprob: -5.255960464477539
    3. 'return' → logprob: -7.255960464477539
    4. '```' → logprob: -11.630960464477539
    5. '    ' → logprob: -12.130960464477539
    6. ' lst' → logprob: -12.755960464477539
    7. '	return' → logprob: -13.755960464477539
    8. 'lst' → logprob: -14.005960464477539
    9. '   ' → logprob: -14.380960464477539
    10. '    
' → logprob: -14.630960464477539

Token 50: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07905227690935135
    2. ' return' → logprob: -2.829052209854126
    3. 'return' (adapté à ' return') → logprob: -4.079052448272705
    4. '```' → logprob: -11.204051971435547
    5. '    ' → logprob: -13.329051971435547
    6. ' if' → logprob: -15.079051971435547
    7. '	return' → logprob: -15.204051971435547
    8. '   ' → logprob: -16.329051971435547
    9. ' ' → logprob: -16.954051971435547
    10. '``' → logprob: -17.204051971435547

Token 51: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.008615399710834026
    2. 'lst' → logprob: -4.758615493774414
    3. '(lst' → logprob: -14.133615493774414
    4. '_lst' → logprob: -15.883615493774414
    5. ' ' → logprob: -17.508615493774414
    6. '.lst' → logprob: -17.883615493774414
    7. ' ls' → logprob: -18.008615493774414
    8. ' ' → logprob: -18.883615493774414
    9. ' list' → logprob: -19.508615493774414
    10. '```' → logprob: -20.633615493774414

Token 52: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.860340752406046e-05
    2. '[' → logprob: -9.7500581741333
    3. '```' → logprob: -16.750059127807617
    4. ' [' → logprob: -17.375059127807617
    5. '[int' → logprob: -17.750059127807617
    6. 'idx' → logprob: -18.125059127807617
    7. '[index' → logprob: -18.375059127807617
    8. '[
' → logprob: -18.625059127807617
    9. '[Index' → logprob: -18.625059127807617
    10. '[i' → logprob: -18.750059127807617

Token 53: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07895466685295105
    2. ')' → logprob: -2.5789546966552734
    3. '])' → logprob: -10.453954696655273
    4. ')]' → logprob: -10.953954696655273
    5. ' ]' → logprob: -11.953954696655273
    6. '}' → logprob: -12.453954696655273
    7. '）' → logprob: -12.703954696655273
    8. '']' → logprob: -12.828954696655273
    9. ' )' → logprob: -13.828954696655273
    10. '<|end|>' → logprob: -14.828954696655273

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08149393647909164
    2. '<|end|>' → logprob: -3.206493854522705
    3. '#' → logprob: -3.581493854522705
    4. '
' → logprob: -5.206493854522705
    5. '```' → logprob: -6.706493854522705
    6. '<|end|>' → logprob: -6.831493854522705
    7. '\' → logprob: -7.081493854522705
    8. '\n' → logprob: -7.456493854522705
    9. '

' → logprob: -8.581494331359863
    10. '[' → logprob: -9.206494331359863

Token 55: ' compare' (ID: 12221)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9515458345413208
    2. ' main' → logprob: -0.9515458345413208
    3. ' set' → logprob: -2.4515457153320312
    4. ' define' → logprob: -3.4515457153320312
    5. ' is' → logprob: -3.7015457153320312
    6. ' add' → logprob: -3.8265457153320312
    7. ' calculate' → logprob: -3.9515457153320312
    8. ' convert' → logprob: -4.326545715332031
    9. '_' → logprob: -4.951545715332031
    10. ' create' → logprob: -5.701545715332031

Token 56: '_values' (ID: 20393)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.7417774200439453
    2. '_lists' → logprob: -1.6167774200439453
    3. '_strings' → logprob: -1.6167774200439453
    4. '_' → logprob: -2.3667774200439453
    5. 's' → logprob: -4.991777420043945
    6. '_items' → logprob: -5.241777420043945
    7. '_values' → logprob: -5.366777420043945
    8. '(' → logprob: -5.741777420043945
    9. '(a' → logprob: -5.741777420043945
    10. '_(' → logprob: -5.991777420043945

Token 57: '(val' (ID: 17391)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.39343249797821045
    2. '(' → logprob: -1.1434324979782104
    3. '(value' → logprob: -5.7684326171875
    4. ' (' → logprob: -6.7684326171875
    5. '(v' → logprob: -7.2684326171875
    6. '(x' → logprob: -7.7684326171875
    7. '(_' → logprob: -8.0184326171875
    8. '(lhs' → logprob: -8.0184326171875
    9. '(val' → logprob: -8.7684326171875
    10. '(left' → logprob: -10.2684326171875

Token 58: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15088456869125366
    2. '1' → logprob: -2.1508846282958984
    3. 'ues' → logprob: -4.400884628295898
    4. '(s' → logprob: -5.275884628295898
    5. '(a' → logprob: -6.650884628295898
    6. '_s' → logprob: -7.025884628295898
    7. '_a' → logprob: -7.150884628295898
    8. ')' → logprob: -7.275884628295898
    9. '(' → logprob: -7.525884628295898
    10. '(val' → logprob: -7.775884628295898

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001329791557509452
    2. ' ,' → logprob: -9.62513256072998
    3. ',val' → logprob: -9.62513256072998
    4. ',v' → logprob: -15.00013256072998
    5. ',value' → logprob: -15.37513256072998
    6. '1' → logprob: -16.500133514404297
    7. ')' → logprob: -17.125133514404297
    8. ',
' → logprob: -17.125133514404297
    9. ',)' → logprob: -17.500133514404297
    10. '):' → logprob: -17.750133514404297

Token 60: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.006717386189848185
    2. 'val' → logprob: -5.006717205047607
    3. ',val' → logprob: -13.881717681884766
    4. '	val' → logprob: -14.506717681884766
    5. ' ' → logprob: -15.506717681884766
    6. '_val' → logprob: -16.381717681884766
    7. '(val' → logprob: -16.881717681884766
    8. '[val' → logprob: -17.256717681884766
    9. '    ' → logprob: -17.381717681884766
    10. 'Val' → logprob: -17.381717681884766

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018971276585943997
    2. '1' → logprob: -8.625189781188965
    3. 'val' → logprob: -12.750189781188965
    4. 'al' → logprob: -13.000189781188965
    5. 'ue' → logprob: -13.125189781188965
    6. 'alue' → logprob: -13.500189781188965
    7. 'f' → logprob: -14.750189781188965
    8. 'ues' → logprob: -15.125189781188965
    9. ',' → logprob: -15.875189781188965
    10. '_val' → logprob: -16.25018882751465

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016063073417171836
    2. ')' → logprob: -9.250160217285156
    3. '):
' → logprob: -10.000160217285156
    4. ' ):' → logprob: -11.375160217285156
    5. ':' → logprob: -12.500160217285156
    6. '   ' → logprob: -13.125160217285156
    7. ',' → logprob: -15.000160217285156
    8. ' ' → logprob: -15.250160217285156
    9. '=' → logprob: -15.375160217285156
    10. ')==' → logprob: -15.625160217285156

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026851817965507507
    2. ':' → logprob: -3.9018518924713135
    3. ' return' → logprob: -5.526851654052734
    4. '>' → logprob: -7.526851654052734
    5. '    ' → logprob: -7.651851654052734
    6. ' :' → logprob: -8.026851654052734
    7. ' if' → logprob: -8.401851654052734
    8. 'return' → logprob: -8.651851654052734
    9. ':return' → logprob: -8.776851654052734
    10. ':
' → logprob: -9.276851654052734

Token 64: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.365129292011261
    2. ' return' → logprob: -1.7401292324066162
    3. ' if' → logprob: -2.615129232406616
    4. 'return' (adapté à ' return') → logprob: -2.990129232406616
    5. 'if' → logprob: -4.990129470825195
    6. '```' → logprob: -10.240129470825195
    7. '	return' → logprob: -10.365129470825195
    8. ' ' → logprob: -10.490129470825195
    9. '    ' → logprob: -10.990129470825195
    10. 'def' → logprob: -12.115129470825195

Token 65: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.03366575390100479
    2. 'val' → logprob: -3.408665657043457
    3. ' ' → logprob: -11.658665657043457
    4. '(val' → logprob: -13.283665657043457
    5. '	val' → logprob: -13.533665657043457
    6. '   ' → logprob: -13.783665657043457
    7. ' ' → logprob: -13.783665657043457
    8. ' int' → logprob: -14.033665657043457
    9. '1' → logprob: -14.033665657043457
    10. '"' → logprob: -14.346165657043457

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. '2' → logprob: -11.25002384185791
    3. '==' → logprob: -12.37502384185791
    4. 'val' → logprob: -13.25002384185791
    5. '```' → logprob: -13.50002384185791
    6. ' ' → logprob: -13.75002384185791
    7. '>' → logprob: -13.87502384185791
    8. ' ==' → logprob: -15.37502384185791
    9. 'e' → logprob: -15.50002384185791
    10. 'f' → logprob: -15.62502384185791

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09117686748504639
    2. '==' → logprob: -3.216176986694336
    3. ' >' → logprob: -3.591176986694336
    4. '>' → logprob: -4.591176986694336
    5. ' <' → logprob: -5.216176986694336
    6. ' >=' → logprob: -6.966176986694336
    7. ' <=' → logprob: -7.216176986694336
    8. '<' → logprob: -7.216176986694336
    9. ' ' → logprob: -7.716176986694336
    10. ' !=' → logprob: -8.216176986694336

Token 68: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5759406089782715
    2. 'val' → logprob: -0.8259406089782715
    3. '	val' → logprob: -14.07594108581543
    4. '(val' → logprob: -15.82594108581543
    5. '_val' → logprob: -16.57594108581543
    6. '[val' → logprob: -16.57594108581543
    7. ',val' → logprob: -17.07594108581543
    8. ' ' → logprob: -17.20094108581543
    9. 'v' → logprob: -17.32594108581543
    10. ' ' → logprob: -17.45094108581543

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. 'val' → logprob: -10.750021934509277
    3. '_val' → logprob: -16.50002098083496
    4. ' ' → logprob: -16.62502098083496
    5. ' val' → logprob: -17.00002098083496
    6. '_' → logprob: -18.37502098083496
    7. '２' → logprob: -18.75002098083496
    8. 'value' → logprob: -18.75002098083496
    9. '₂' → logprob: -19.25002098083496
    10. '   ' → logprob: -19.75002098083496

Token 70: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14844278991222382
    2. '<|end|>' → logprob: -2.8984427452087402
    3. '
' → logprob: -3.1484427452087402
    4. '

' → logprob: -3.3984427452087402
    5. '```' → logprob: -5.89844274520874
    6. '<|end|>' → logprob: -6.64844274520874
    7. '\n' → logprob: -6.89844274520874
    8. '\' → logprob: -7.52344274520874
    9. '#' → logprob: -8.023443222045898
    10. '[' → logprob: -9.523443222045898

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1746036261320114
    2. '#' → logprob: -2.4246037006378174
    3. '```' → logprob: -3.5496037006378174
    4. '\n' → logprob: -4.049603462219238
    5. '
' → logprob: -4.924603462219238
    6. '\' → logprob: -5.049603462219238
    7. '<|end|>' → logprob: -5.424603462219238
    8. '[' → logprob: -6.049603462219238
    9. 'for' → logprob: -7.299603462219238
    10. '(' → logprob: -7.424603462219238

Token 72: ' increment' (ID: 24032)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04951639100909233
    2. ' check' → logprob: -3.674516439437866
    3. ' is' → logprob: -4.049516201019287
    4. ' get' → logprob: -6.174516201019287
    5. ' compare' → logprob: -6.674516201019287
    6. ' calculate' → logprob: -7.299516201019287
    7. ' weather' → logprob: -7.674516201019287
    8. 'main' → logprob: -7.799516201019287
    9. ' print' → logprob: -9.174516677856445
    10. ' find' → logprob: -9.174516677856445

Token 73: '_index' (ID: 7748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44987374544143677
    2. '_value' → logprob: -1.324873685836792
    3. '_counter' → logprob: -3.199873685836792
    4. '(value' → logprob: -3.949873685836792
    5. '_' → logprob: -4.324873924255371
    6. '(_' → logprob: -4.824873924255371
    7. '_count' → logprob: -5.949873924255371
    8. '(x' → logprob: -6.199873924255371
    9. '_number' → logprob: -6.449873924255371
    10. '_values' → logprob: -6.949873924255371

Token 74: '(idx' (ID: 42793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004539892543107271
    2. '(idx' → logprob: -5.629539966583252
    3. '(_' → logprob: -8.004539489746094
    4. '(index' → logprob: -8.004539489746094
    5. '(i' → logprob: -9.129539489746094
    6. ' (' → logprob: -9.754539489746094
    7. '(lst' → logprob: -10.879539489746094
    8. '(n' → logprob: -11.504539489746094
    9. '_' → logprob: -11.629539489746094
    10. '(_)' → logprob: -11.629539489746094

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000523842521943152
    2. '):
' → logprob: -8.125523567199707
    3. ')' → logprob: -8.625523567199707
    4. '   ' → logprob: -11.125523567199707
    5. ' ):' → logprob: -11.250523567199707
    6. ',' → logprob: -11.375523567199707
    7. '+' → logprob: -12.750523567199707
    8. ' ' → logprob: -13.125523567199707
    9. ':' → logprob: -13.625523567199707
    10. '):
' → logprob: -14.750523567199707

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010663988068699837
    2. ' return' → logprob: -4.635663986206055
    3. 'return' → logprob: -7.135663986206055
    4. ' idx' → logprob: -9.385663986206055
    5. '```' → logprob: -11.885663986206055
    6. '    
' → logprob: -12.135663986206055
    7. '1' → logprob: -12.385663986206055
    8. 'idx' → logprob: -12.385663986206055
    9. '	return' → logprob: -12.385663986206055
    10. '   ' → logprob: -14.260663986206055

Token 77: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4927152991294861
    2. '   ' → logprob: -0.9927152991294861
    3. 'return' (adapté à ' return') → logprob: -3.992715358734131
    4. ' idx' → logprob: -11.617714881896973
    5. '	return' → logprob: -12.617714881896973
    6. '    ' → logprob: -13.492714881896973
    7. '    
' → logprob: -13.742714881896973
    8. '```' → logprob: -14.617714881896973
    9. '   ' → logprob: -15.242714881896973
    10. '  ' → logprob: -15.617714881896973

Token 78: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.07889298349618912
    2. 'idx' → logprob: -2.578892946243286
    3. '	idx' → logprob: -13.203892707824707
    4. '(idx' → logprob: -13.953892707824707
    5. 'index' → logprob: -15.703892707824707
    6. '_idx' → logprob: -16.328893661499023
    7. ' index' → logprob: -16.453893661499023
    8. '[idx' → logprob: -16.578893661499023
    9. '   ' → logprob: -17.453893661499023
    10. '.idx' → logprob: -17.578893661499023

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602463573217392
    2. '+' → logprob: -1.9102463722229004
    3. ' +
' → logprob: -11.660245895385742
    4. '1' → logprob: -12.035245895385742
    5. '()+' → logprob: -13.160245895385742
    6. ' ' → logprob: -13.910245895385742
    7. '+
' → logprob: -14.035245895385742
    8. '   ' → logprob: -14.285245895385742
    9. ' idx' → logprob: -14.285245895385742
    10. ' plus' → logprob: -14.410245895385742

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.750052452087402
    4. '```' → logprob: -17.750051498413086
    5. 'def' → logprob: -19.625051498413086
    6. '  ' → logprob: -19.875051498413086
    7. '１' → logprob: -20.250051498413086
    8. ' ' → logprob: -20.562551498413086
    9. '=' → logprob: -20.937551498413086
    10. '`' → logprob: -20.937551498413086

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '  ' → logprob: -20.375
    6. 'def' → logprob: -20.375
    7. '`' → logprob: -20.8125
    8. '１' → logprob: -21.1875
    9. '' → logprob: -21.4375
    10. '[' → logprob: -21.625

Token 82: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2773514986038208
    2. '
' → logprob: -2.1523513793945312
    3. '

' → logprob: -2.1523513793945312
    4. '\n' → logprob: -5.777351379394531
    5. '\' → logprob: -6.277351379394531
    6. '```' → logprob: -6.277351379394531
    7. '<|end|>' → logprob: -6.777351379394531
    8. '#' → logprob: -7.027351379394531
    9. 'newline' → logprob: -9.027351379394531
    10. '[' → logprob: -9.652351379394531

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061035823076963425
    2. '#' → logprob: -3.1860358715057373
    3. 'for' → logprob: -5.311035633087158
    4. 'd' → logprob: -5.436035633087158
    5. 'i' → logprob: -6.061035633087158
    6. 'n' → logprob: -6.436035633087158
    7. 'if' → logprob: -6.811035633087158
    8. 'idx' → logprob: -7.561035633087158
    9. '```' → logprob: -7.811035633087158
    10. 'index' → logprob: -7.936035633087158

Token 84: ' modulo' (ID: 112372)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05279790610074997
    2. ' get' → logprob: -3.552797794342041
    3. ' check' → logprob: -4.927797794342041
    4. 'main' → logprob: -5.302797794342041
    5. ' is' → logprob: -6.177797794342041
    6. ' calculate' → logprob: -6.427797794342041
    7. ' find' → logprob: -6.552797794342041
    8. ' weather' → logprob: -6.677797794342041
    9. ' compare' → logprob: -7.427797794342041
    10. ' process' → logprob: -7.552797794342041

Token 85: '_operation' (ID: 77985)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02964726649224758
    2. ' (' → logprob: -3.6546473503112793
    3. '_' → logprob: -6.029647350311279
    4. ' ' → logprob: -7.654647350311279
    5. '```' → logprob: -9.654646873474121
    6. '(n' → logprob: -10.154646873474121
    7. '_space' → logprob: -10.154646873474121
    8. ' (_)' → logprob: -10.529646873474121
    9. '_index' → logprob: -10.779646873474121
    10. '_(' → logprob: -10.904646873474121

Token 86: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009419540292583406
    2. ' (' → logprob: -7.000941753387451
    3. '(idx' → logprob: -11.75094223022461
    4. ' ' → logprob: -12.25094223022461
    5. '("("' → logprob: -12.87594223022461
    6. '('' → logprob: -13.00094223022461
    7. '(
' → logprob: -13.00094223022461
    8. 'def' → logprob: -13.12594223022461
    9. '(

' → logprob: -13.87594223022461
    10. '(n' → logprob: -14.00094223022461

Token 87: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3550602197647095
    2. '):' → logprob: -1.4800602197647095
    3. ',' → logprob: -2.73006010055542
    4. '(' → logprob: -6.60506010055542
    5. '(val' → logprob: -6.85506010055542
    6. '   ' → logprob: -6.98006010055542
    7. ',val' → logprob: -6.98006010055542
    8. ')(' → logprob: -7.73006010055542
    9. ' ' → logprob: -8.480060577392578
    10. '):
' → logprob: -8.855060577392578

Token 88: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5447152256965637
    2. ' divisor' → logprob: -2.544715166091919
    3. 'div' → logprob: -2.919715166091919
    4. '3' → logprob: -3.044715166091919
    5. '10' → logprob: -3.044715166091919
    6. '2' → logprob: -3.294715166091919
    7. ' val' → logprob: -3.544715166091919
    8. ' mod' → logprob: -3.919715166091919
    9. ' n' → logprob: -4.044715404510498
    10. ' lst' → logprob: -4.419715404510498

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029859058558940887
    2. '):
' → logprob: -6.252985954284668
    3. ' ):' → logprob: -7.627985954284668
    4. ')' → logprob: -8.502985954284668
    5. 'ulus' → logprob: -9.002985954284668
    6. 'ulo' → logprob: -9.002985954284668
    7. 'ul' → logprob: -10.252985954284668
    8. '   ' → logprob: -10.752985954284668
    9. ' ' → logprob: -11.127985954284668
    10. '):
' → logprob: -11.752985954284668

Token 90: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06283576786518097
    2. '   ' → logprob: -2.812835693359375
    3. ' ' → logprob: -7.562835693359375
    4. ' val' → logprob: -9.062835693359375
    5. '    ' → logprob: -9.187835693359375
    6. 'return' → logprob: -9.937835693359375
    7. ' ' → logprob: -10.562835693359375
    8. '	return' → logprob: -11.437835693359375
    9. '  ' → logprob: -11.562835693359375
    10. '  ' → logprob: -12.062835693359375

Token 91: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.006811884231865406
    2. ' val' → logprob: -5.00681209564209
    3. 'return' (adapté à ' return') → logprob: -9.38181209564209
    4. '   ' → logprob: -11.75681209564209
    5. ' ' → logprob: -13.13181209564209
    6. '    ' → logprob: -14.38181209564209
    7. ' ' → logprob: -14.38181209564209
    8. 'val' → logprob: -14.63181209564209
    9. '	return' → logprob: -15.00681209564209
    10. ' 
' → logprob: -15.38181209564209

Token 92: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.023250021040439606
    2. 'val' → logprob: -3.773250102996826
    3. '	val' → logprob: -12.398249626159668
    4. '(val' → logprob: -15.648249626159668
    5. ' ' → logprob: -16.023250579833984
    6. '_val' → logprob: -16.773250579833984
    7. ' ' → logprob: -17.273250579833984
    8. 'Val' → logprob: -17.398250579833984
    9. '[val' → logprob: -17.398250579833984
    10. '.val' → logprob: -17.523250579833984

Token 93: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0015087933279573917
    2. '%' → logprob: -6.501508712768555
    3. ' %
' → logprob: -12.251508712768555
    4. ' ' → logprob: -13.501508712768555
    5. ' ' → logprob: -15.251508712768555
    6. ' %

' → logprob: -17.001508712768555
    7. ' %)' → logprob: -19.126508712768555
    8. ' %"' → logprob: -20.001508712768555
    9. ' `%' → logprob: -20.126508712768555
    10. ' %=' → logprob: -20.126508712768555

Token 94: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0011703446507453918
    2. ' mod' → logprob: -6.7511701583862305
    3. '	mod' → logprob: -16.876171112060547
    4. '(mod' → logprob: -17.001171112060547
    5. ' ' → logprob: -19.001171112060547
    6. 'mo' → logprob: -19.001171112060547
    7. '```' → logprob: -19.376171112060547
    8. '_mod' → logprob: -20.376171112060547
    9. '20' → logprob: -20.376171112060547
    10. 'm' → logprob: -20.376171112060547

Token 95: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40701842308044434
    2. '
' → logprob: -1.9070184230804443
    3. '<|end|>' → logprob: -2.0320184230804443
    4. '#' → logprob: -3.9070184230804443
    5. '```' → logprob: -4.407018661499023
    6. '\n' → logprob: -4.407018661499023
    7. '

' → logprob: -5.657018661499023
    8. '[' → logprob: -6.282018661499023
    9. '<|end|>' → logprob: -6.657018661499023
    10. '%' → logprob: -7.282018661499023

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017846565460786223
    2. 'for' → logprob: -7.251784801483154
    3. '#' → logprob: -8.251784324645996
    4. '```' → logprob: -8.251784324645996
    5. '
' → logprob: -9.626784324645996
    6. 'print' → logprob: -9.751784324645996
    7. 'import' → logprob: -9.751784324645996
    8. '\n' → logprob: -9.876784324645996
    9. 'index' → logprob: -10.001784324645996
    10. '\' → logprob: -10.001784324645996

Token 97: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0167616605758667
    2. 'main' → logprob: -5.266761779785156
    3. ' is' → logprob: -5.641761779785156
    4. ' calculate' → logprob: -5.891761779785156
    5. ' get' → logprob: -6.141761779785156
    6. ' check' → logprob: -6.641761779785156
    7. ' factorial' → logprob: -7.766761779785156
    8. ' weather' → logprob: -8.391761779785156
    9. ' generate' → logprob: -8.641761779785156
    10. ' compute' → logprob: -9.141761779785156

Token 98: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037633657455444336
    2. '()' → logprob: -4.287633895874023
    3. '('' → logprob: -4.412633895874023
    4. '("' → logprob: -5.037633895874023
    5. '("")' → logprob: -5.912633895874023
    6. '_' → logprob: -8.162633895874023
    7. '<|end|>' → logprob: -8.162633895874023
    8. ' (' → logprob: -8.537633895874023
    9. '("""' → logprob: -8.787633895874023
    10. ' ' → logprob: -9.162633895874023

Token 99: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011688045226037502
    2. '(value' → logprob: -4.511688232421875
    3. '(val' → logprob: -8.761688232421875
    4. ' (' → logprob: -8.761688232421875
    5. '('' → logprob: -9.011688232421875
    6. '()' → logprob: -9.386688232421875
    7. '(Value' → logprob: -10.261688232421875
    8. '(valor' → logprob: -11.261688232421875
    9. '(print' → logprob: -11.386688232421875
    10. '("("' → logprob: -11.636688232421875

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007882715202867985
    2. '):
' → logprob: -5.007882595062256
    3. ')' → logprob: -6.757882595062256
    4. ' ):' → logprob: -13.007883071899414
    5. '):
' → logprob: -13.632883071899414
    6. '   ' → logprob: -14.507883071899414
    7. '(' → logprob: -15.132883071899414
    8. ':' → logprob: -15.507883071899414
    9. '):

' → logprob: -15.507883071899414
    10. '(val' → logprob: -16.007883071899414

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00104614719748497
    2. ' print' → logprob: -6.876046180725098
    3. 'print' → logprob: -11.251046180725098
    4. '   ' → logprob: -15.501046180725098
    5. '```' → logprob: -16.25104522705078
    6. '    ' → logprob: -16.87604522705078
    7. '	print' → logprob: -17.50104522705078
    8. '    
' → logprob: -17.75104522705078
    9. '   ' → logprob: -17.87604522705078
    10. '  ' → logprob: -19.37604522705078

Token 102: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.020044375211000443
    2. 'print' (adapté à ' print') → logprob: -4.020044326782227
    3. '   ' → logprob: -6.270044326782227
    4. '	print' → logprob: -15.145044326782227
    5. '```' → logprob: -16.145044326782227
    6. ' prin' → logprob: -16.645044326782227
    7. '    ' → logprob: -17.270044326782227
    8. 'pr' → logprob: -17.895044326782227
    9. '    
' → logprob: -17.895044326782227
    10. ' p' → logprob: -18.520044326782227

Token 103: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.12704885005950928
    2. '(' → logprob: -2.127048969268799
    3. ' (' → logprob: -9.62704849243164
    4. '(value' → logprob: -10.25204849243164
    5. '()' → logprob: -11.62704849243164
    6. 'val' → logprob: -12.12704849243164
    7. '(
' → logprob: -13.25204849243164
    8. '(valor' → logprob: -13.75204849243164
    9. ' ' → logprob: -14.75204849243164
    10. '(Value' → logprob: -15.12704849243164

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. ')
' → logprob: -16.375
    4. '()' → logprob: -20.0
    5. ')`' → logprob: -20.125
    6. '))' → logprob: -20.625
    7. ')

' → logprob: -21.375
    8. '),' → logprob: -21.5
    9. '())' → logprob: -22.0
    10. '')' → logprob: -22.25

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025579307228326797
    2. 'idx' → logprob: -3.7755792140960693
    3. 'if' → logprob: -6.775579452514648
    4. 'index' → logprob: -7.150579452514648
    5. 'for' → logprob: -8.650579452514648
    6. 'current' → logprob: -9.275579452514648
    7. 'n' → logprob: -10.775579452514648
    8. 'i' → logprob: -10.900579452514648
    9. 'weather' → logprob: -10.900579452514648
    10. '#' → logprob: -11.150579452514648

Token 106: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007837798330001533
    2. 'main' → logprob: -7.375783920288086
    3. ' __' → logprob: -9.875783920288086
    4. '_main' → logprob: -10.250783920288086
    5. ' check' → logprob: -11.125783920288086
    6. ' get' → logprob: -11.125783920288086
    7. '__' → logprob: -11.250783920288086
    8. '	main' → logprob: -11.750783920288086
    9. ' ' → logprob: -12.500783920288086
    10. ' calculate' → logprob: -13.125783920288086

Token 107: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.729906196298543e-06
    2. ' ():' → logprob: -11.875009536743164
    3. '():
' → logprob: -13.125009536743164
    4. '()' → logprob: -14.375009536743164
    5. '_' → logprob: -15.750009536743164
    6. '(' → logprob: -17.500009536743164
    7. '():
' → logprob: -18.125009536743164
    8. '(:' → logprob: -20.125009536743164
    9. '():

' → logprob: -20.500009536743164
    10. '().' → logprob: -20.625009536743164

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16991157829761505
    2. ' weather' → logprob: -2.2949116230010986
    3. 'weather' → logprob: -2.9199116230010986
    4. ' lst' → logprob: -7.5449113845825195
    5. ' idx' → logprob: -8.16991138458252
    6. 'lst' → logprob: -8.41991138458252
    7. '   ' → logprob: -9.54491138458252
    8. '    
' → logprob: -9.79491138458252
    9. '```' → logprob: -9.79491138458252
    10. 'idx' → logprob: -9.91991138458252

Token 109: ' Ss' (ID: 186035)
  Prédit: 'weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weather' → logprob: -0.020773107185959816
    2. ' weather' → logprob: -4.270772933959961
    3. '   ' → logprob: -5.895772933959961
    4. 'lst' → logprob: -6.645772933959961
    5. 'idx' → logprob: -6.770772933959961
    6. 'we' → logprob: -7.770772933959961
    7. 'index' → logprob: -8.520772933959961
    8. ' lst' → logprob: -9.020772933959961
    9. '    
' → logprob: -9.395772933959961
    10. 'def' → logprob: -9.770772933959961

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1349833905696869
    2. '=' → logprob: -2.1349833011627197
    3. '_list' → logprob: -6.134983539581299
    4. 's' → logprob: -7.009983539581299
    5. ' ' → logprob: -7.134983539581299
    6. '=[]' → logprob: -7.384983539581299
    7. 'e' → logprob: -7.509983539581299
    8. 't' → logprob: -7.759983539581299
    9. 'weather' → logprob: -8.25998306274414
    10. 'S' → logprob: -8.50998306274414

Token 111: ' get' (ID: 717)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'define' → logprob: -0.05558876693248749
    2. ' define' → logprob: -3.180588722229004
    3. 'get' → logprob: -4.680588722229004
    4. '[]' → logprob: -6.305588722229004
    5. ' get' → logprob: -7.055588722229004
    6. ' []' → logprob: -8.555588722229004
    7. '['' → logprob: -8.555588722229004
    8. '[' → logprob: -10.555588722229004
    9. ' ['' → logprob: -10.680588722229004
    10. ' ' → logprob: -10.930588722229004

Token 112: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.000003814697266
    3. '_value' → logprob: -14.250003814697266
    4. '_s' → logprob: -15.000003814697266
    5. '_inputs' → logprob: -15.500003814697266
    6. '_in' → logprob: -15.750003814697266
    7. '_Input' → logprob: -16.125003814697266
    8. ' _' → logprob: -16.750003814697266
    9. '_INPUT' → logprob: -17.875003814697266
    10. '_list' → logprob: -18.125003814697266

Token 113: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.123899558791891e-05
    2. '(' → logprob: -10.00007152557373
    3. ' ()' → logprob: -11.37507152557373
    4. '()
' → logprob: -12.00007152557373
    5. '()(' → logprob: -13.50007152557373
    6. '().' → logprob: -13.75007152557373
    7. '()

' → logprob: -13.87507152557373
    8. '()"' → logprob: -14.37507152557373
    9. '()`' → logprob: -14.50007152557373
    10. ' ' → logprob: -14.75007152557373

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2988736033439636
    2. 'weather' → logprob: -1.9238736629486084
    3. ' weather' → logprob: -3.5488736629486084
    4. 'def' → logprob: -4.048873424530029
    5. 'idx' → logprob: -4.673873424530029
    6. '    
' → logprob: -4.798873424530029
    7. '
' → logprob: -5.048873424530029
    8. 'w' → logprob: -5.298873424530029
    9. 'Weather' → logprob: -5.923873424530029
    10. '_weather' → logprob: -6.048873424530029

Token 115: ' Ts' (ID: 27096)
  Prédit: 'weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weather' → logprob: -0.13630041480064392
    2. 'W' → logprob: -3.2613003253936768
    3. 'w' → logprob: -3.6363003253936768
    4. 'Ws' → logprob: -4.261300563812256
    5. ' weather' → logprob: -4.886300563812256
    6. 'S' → logprob: -5.136300563812256
    7. 'Ls' → logprob: -5.136300563812256
    8. 'Ss' → logprob: -5.761300563812256
    9. 'wl' → logprob: -6.011300563812256
    10. '   ' → logprob: -6.261300563812256

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029762526974081993
    2. '=' → logprob: -3.5297625064849854
    3. ' ' → logprob: -11.404762268066406
    4. 's' → logprob: -14.529762268066406
    5. '  ' → logprob: -16.529762268066406
    6. '   ' → logprob: -16.779762268066406
    7. '=get' → logprob: -16.904762268066406
    8. '_' → logprob: -17.029762268066406
    9. ',' → logprob: -17.029762268066406
    10. ' ' → logprob: -17.404762268066406

Token 117: ' define' (ID: 13174)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.6941373944282532
    2. ' get' → logprob: -0.6941373944282532
    3. 'define' → logprob: -7.9441375732421875
    4. ' define' → logprob: -8.569137573242188
    5. ' Ss' → logprob: -8.694137573242188
    6. '[get' → logprob: -9.569137573242188
    7. 'Ss' → logprob: -9.819137573242188
    8. ' ' → logprob: -10.569137573242188
    9. '(get' → logprob: -11.069137573242188
    10. '[]' → logprob: -11.194137573242188

Token 118: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.375001907348633
    3. 'weather' → logprob: -15.625001907348633
    4. '_we' → logprob: -17.000001907348633
    5. '_temperature' → logprob: -17.000001907348633
    6. '_s' → logprob: -17.625001907348633
    7. '_water' → logprob: -17.875001907348633
    8. '```' → logprob: -18.375001907348633
    9. '(weather' → logprob: -18.500001907348633
    10. '('_' → logprob: -19.125001907348633

Token 119: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. '_lists' → logprob: -17.5
    4. 'List' → logprob: -17.5
    5. '_lst' → logprob: -17.875
    6. '_List' → logprob: -19.125
    7. '_lista' → logprob: -19.125
    8. 'list' → logprob: -19.25
    9. '_l' → logprob: -19.625
    10. '_li' → logprob: -20.625

Token 120: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.723352049040841e-06
    2. '()
' → logprob: -12.875004768371582
    3. ' ()' → logprob: -13.250004768371582
    4. '()

' → logprob: -16.125003814697266
    5. '()"' → logprob: -16.750003814697266
    6. '()`' → logprob: -16.750003814697266
    7. '(' → logprob: -16.875003814697266
    8. '()]' → logprob: -18.000003814697266
    9. '`()' → logprob: -18.000003814697266
    10. '（）' → logprob: -18.000003814697266

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6875190734863281
    2. 'idx' → logprob: -0.8125190734863281
    3. 'i' → logprob: -3.687519073486328
    4. ' idx' → logprob: -3.812519073486328
    5. ' i' → logprob: -6.312519073486328
    6. 'index' → logprob: -7.187519073486328
    7. 'current' → logprob: -7.312519073486328
    8. 'for' → logprob: -7.687519073486328
    9. 'n' → logprob: -7.687519073486328
    10. 's' → logprob: -7.937519073486328

Token 122: ' length' (ID: 5517)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6045714616775513
    2. 'i' → logprob: -1.7295714616775513
    3. 'length' (adapté à ' length') → logprob: -3.2295713424682617
    4. 'S' → logprob: -3.3545713424682617
    5. 'index' → logprob: -3.3545713424682617
    6. 'len' → logprob: -3.7295713424682617
    7. 'Ls' → logprob: -3.8545713424682617
    8. 'Ss' → logprob: -3.8545713424682617
    9. 'result' → logprob: -3.9795713424682617
    10. 'Ts' → logprob: -4.104571342468262

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4506460428237915
    2. '_of' → logprob: -1.5756460428237915
    3. '_S' → logprob: -2.575645923614502
    4. '_' → logprob: -2.700645923614502
    5. '=' → logprob: -5.075645923614502
    6. '_s' → logprob: -5.325645923614502
    7. 's' → logprob: -7.450645923614502
    8. 'of' → logprob: -7.825645923614502
    9. '()' → logprob: -9.20064640045166
    10. 'Of' → logprob: -9.32564640045166

Token 124: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.02981448359787464
    2. 'get' → logprob: -3.5298144817352295
    3. ' len' → logprob: -9.779814720153809
    4. 'len' → logprob: -12.029814720153809
    5. '(get' → logprob: -13.654814720153809
    6. '	get' → logprob: -16.279813766479492
    7. '_get' → logprob: -17.029813766479492
    8. '[get' → logprob: -17.029813766479492
    9. '=get' → logprob: -17.404813766479492
    10. ' ' → logprob: -18.154813766479492

Token 125: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.128163257315464e-07
    2. '_l' → logprob: -15.625
    3. '_len' → logprob: -16.625
    4. '_' → logprob: -17.625
    5. '_le' → logprob: -19.0
    6. '_value' → logprob: -20.0
    7. 'length' → logprob: -20.0
    8. '```' → logprob: -20.625
    9. '_Length' → logprob: -20.75
    10. '_LENGTH' → logprob: -20.75

Token 126: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.250001907348633
    3. '_o' → logprob: -14.500001907348633
    4. '```' → logprob: -15.000001907348633
    5. ' _' → logprob: -16.250001907348633
    6. 'of' → logprob: -16.250001907348633
    7. '_s' → logprob: -16.375001907348633
    8. ')_' → logprob: -16.375001907348633
    9. '_or' → logprob: -16.750001907348633
    10. '_off' → logprob: -16.750001907348633

Token 127: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014874893240630627
    2. 'list' → logprob: -4.2648749351501465
    3. 'ist' → logprob: -7.5148749351501465
    4. 'List' → logprob: -8.764874458312988
    5. 'lst' → logprob: -11.889874458312988
    6. '(T' → logprob: -13.764874458312988
    7. ' list' → logprob: -14.764874458312988
    8. '_lst' → logprob: -14.889874458312988
    9. 's' → logprob: -15.014874458312988
    10. '(list' → logprob: -15.389874458312988

Token 128: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.125017166137695
    4. '(S' → logprob: -15.250017166137695
    5. '(
' → logprob: -18.500017166137695
    6. '(ts' → logprob: -18.625017166137695
    7. ' ' → logprob: -19.250017166137695
    8. '(Task' → logprob: -20.250017166137695
    9. ' ' → logprob: -20.375017166137695
    10. '(t' → logprob: -20.375017166137695

Token 129: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.896309739408025e-07
    2. 'Ss' → logprob: -14.750000953674316
    3. '(s' → logprob: -15.625000953674316
    4. 'S' → logprob: -15.750000953674316
    5. '(T' → logprob: -16.375
    6. '_s' → logprob: -17.375
    7. 'Ts' → logprob: -17.5
    8. '
' → logprob: -18.125
    9. '(' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2304137498140335
    2. '())' → logprob: -2.1054136753082275
    3. '()' → logprob: -2.4804136753082275
    4. ')
' → logprob: -9.230413436889648
    5. '()
' → logprob: -9.730413436889648
    6. '())
' → logprob: -9.855413436889648
    7. ' )' → logprob: -10.230413436889648
    8. ' ())' → logprob: -10.480413436889648
    9. ' ()' → logprob: -11.980413436889648
    10. '(' → logprob: -12.355413436889648

Token 131: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0957351103425026
    2. 'i' → logprob: -2.8457350730895996
    3. 'index' → logprob: -3.8457350730895996
    4. '   ' → logprob: -5.2207350730896
    5. 'for' → logprob: -5.9707350730896
    6. 'current' → logprob: -6.0957350730896
    7. ' idx' → logprob: -7.4707350730896
    8. 'result' → logprob: -7.7207350730896
    9. 'count' → logprob: -9.220735549926758
    10. 'curr' → logprob: -9.845735549926758

Token 132: ' for' (ID: 395)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2919922173023224
    2. 'i' → logprob: -1.7919921875
    3. 'index' → logprob: -2.6669921875
    4. 'for' (adapté à ' for') → logprob: -5.0419921875
    5. 'result' → logprob: -5.4169921875
    6. 'current' → logprob: -5.9169921875
    7. 'count' → logprob: -6.5419921875
    8. 'answer' → logprob: -7.6669921875
    9. 'found' → logprob: -7.9169921875
    10. 'ans' → logprob: -8.6669921875

Token 133: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.13879452645778656
    2. ' i' → logprob: -2.388794422149658
    3. ' _' → logprob: -3.513794422149658
    4. ' ' → logprob: -5.013794422149658
    5. ' index' → logprob: -7.513794422149658
    6. '_' → logprob: -7.638794422149658
    7. '_idx' → logprob: -8.888794898986816
    8. 'idx' → logprob: -9.513794898986816
    9. ' val' → logprob: -10.013794898986816
    10. ' s' → logprob: -10.513794898986816

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005325427744537592
    2. 'in' → logprob: -5.6303253173828125
    3. ' ' → logprob: -6.3803253173828125
    4. 'n' → logprob: -11.630325317382812
    5. '	in' → logprob: -12.005325317382812
    6. '  ' → logprob: -12.130325317382812
    7. '_' → logprob: -13.255325317382812
    8. ' n' → logprob: -13.505325317382812
    9. '_in' → logprob: -13.880325317382812
    10. ' ' → logprob: -14.255325317382812

Token 135: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00011570196511456743
    2. 'range' → logprob: -9.125115394592285
    3. ' ' → logprob: -12.625115394592285
    4. ' xrange' → logprob: -13.250115394592285
    5. '	range' → logprob: -13.750115394592285
    6. '(range' → logprob: -15.125115394592285
    7. ' ' → logprob: -16.5001163482666
    8. ' ran' → logprob: -16.7501163482666
    9. ' rango' → logprob: -16.8751163482666
    10. ' rang' → logprob: -17.0001163482666

Token 136: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31356242299079895
    2. '(length' → logprob: -1.3135623931884766
    3. ' (' → logprob: -8.188562393188477
    4. '(len' → logprob: -11.063562393188477
    5. '(
' → logprob: -12.313562393188477
    6. '(

' → logprob: -13.563562393188477
    7. '(l' → logprob: -14.188562393188477
    8. ' length' → logprob: -14.938562393188477
    9. 'length' → logprob: -16.563562393188477
    10. ',length' → logprob: -16.938562393188477

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10035073012113571
    2. ' ):' → logprob: -2.3503506183624268
    3. ')' → logprob: -9.850350379943848
    4. '):
' → logprob: -10.225350379943848
    5. ':' → logprob: -10.600350379943848
    6. ' )' → logprob: -11.975350379943848
    7. ' :' → logprob: -12.100350379943848
    8. ' ):
' → logprob: -12.225350379943848
    9. '():' → logprob: -12.350350379943848
    10. ' ' → logprob: -12.475350379943848

Token 138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05302020534873009
    2. '       ' → logprob: -3.0530202388763428
    3. '    
' → logprob: -6.178020000457764
    4. '<|end|>' → logprob: -6.553020000457764
    5. ' if' → logprob: -8.428020477294922
    6. '   ' → logprob: -8.678020477294922
    7. ',' → logprob: -8.928020477294922
    8. ' ' → logprob: -9.678020477294922
    9. '
' → logprob: -9.928020477294922
    10. '    ' → logprob: -9.928020477294922

Token 139: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4721508026123047
    2. 'if' → logprob: -1.4721508026123047
    3. 'current' (adapté à ' current') → logprob: -1.5971508026123047
    4. ' if' → logprob: -2.7221508026123047
    5. 'weather' → logprob: -2.8471508026123047
    6. 'element' → logprob: -3.2221508026123047
    7. ' current' → logprob: -3.3471508026123047
    8. 'temp' → logprob: -3.4721508026123047
    9. 'elem' → logprob: -3.7221508026123047
    10. 'val' → logprob: -3.8471508026123047

Token 140: '_element' (ID: 21131)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2940704822540283
    2. '_val' → logprob: -1.9190704822540283
    3. '_weather' → logprob: -2.5440704822540283
    4. '_value' → logprob: -4.044070243835449
    5. '_element' → logprob: -4.919070243835449
    6. ' =' → logprob: -6.169070243835449
    7. '=' → logprob: -6.419070243835449
    8. '_s' → logprob: -8.04407024383545
    9. '_=' → logprob: -8.79407024383545
    10. '_item' → logprob: -8.91907024383545

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023540223017334938
    2. '=' → logprob: -3.7735402584075928
    3. '_' → logprob: -8.148540496826172
    4. ' ' → logprob: -13.398540496826172
    5. '_=' → logprob: -13.398540496826172
    6. 's' → logprob: -14.148540496826172
    7. ' ' → logprob: -14.773540496826172
    8. ',' → logprob: -14.898540496826172
    9. ')' → logprob: -15.273540496826172
    10. '_space' → logprob: -15.648540496826172

Token 142: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3485109806060791
    2. 'get' → logprob: -1.223510980606079
    3. ' Ts' → logprob: -10.9735107421875
    4. 'Ts' → logprob: -11.0985107421875
    5. '	get' → logprob: -11.5985107421875
    6. '(get' → logprob: -11.8485107421875
    7. ' ' → logprob: -12.2235107421875
    8. '.get' → logprob: -13.4735107421875
    9. '   ' → logprob: -13.7235107421875
    10. '_get' → logprob: -13.8485107421875

Token 143: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.500004768371582
    3. '_elem' → logprob: -14.875004768371582
    4. '_value' → logprob: -15.125004768371582
    5. 'element' → logprob: -16.375003814697266
    6. '```' → logprob: -17.125003814697266
    7. '_ele' → logprob: -17.250003814697266
    8. '_
' → logprob: -17.250003814697266
    9. '_Element' → logprob: -17.250003814697266
    10. '_elements' → logprob: -17.625003814697266

Token 144: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. '_a' → logprob: -16.625
    3. '_' → logprob: -17.625
    4. 's' → logprob: -17.875
    5. ' _' → logprob: -19.125
    6. '_as' → logprob: -19.25
    7. 'At' → logprob: -19.875
    8. '```' → logprob: -20.25
    9. '_s' → logprob: -20.625
    10. ' ' → logprob: -20.75

Token 145: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.64708495605737e-05
    2. 'index' → logprob: -9.625066757202148
    3. 'Index' → logprob: -15.250066757202148
    4. '_list' → logprob: -17.37506675720215
    5. '_idx' → logprob: -17.75006675720215
    6. ' index' → logprob: -18.25006675720215
    7. '_' → logprob: -19.12506675720215
    8. '```' → logprob: -19.25006675720215
    9. 'list' → logprob: -19.37506675720215
    10. 's' → logprob: -19.50006675720215

Token 146: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -9.090760431718081e-05
    2. '(' → logprob: -9.375090599060059
    3. ' (' → logprob: -12.625090599060059
    4. '(S' → logprob: -13.375090599060059
    5. '```' → logprob: -14.625090599060059
    6. '(
' → logprob: -14.875090599060059
    7. ' ' → logprob: -16.500091552734375
    8. '(s' → logprob: -17.125091552734375
    9. 's' → logprob: -17.375091552734375
    10. '(

' → logprob: -17.625091552734375

Token 147: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. '(T' → logprob: -15.625
    3. 'S' → logprob: -16.5
    4. 'Ss' → logprob: -16.75
    5. 'Ts' → logprob: -17.875
    6. '(' → logprob: -18.125
    7. 'ss' → logprob: -18.75
    8. 'с' → logprob: -18.75
    9. '_s' → logprob: -19.0
    10. '```' → logprob: -19.625

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006323783891275525
    2. ' ,' → logprob: -8.250632286071777
    3. ',i' → logprob: -8.250632286071777
    4. ',T' → logprob: -10.000632286071777
    5. ',S' → logprob: -10.250632286071777
    6. ',
' → logprob: -11.375632286071777
    7. '(' → logprob: -11.875632286071777
    8. '(i' → logprob: -12.500632286071777
    9. ',

' → logprob: -13.375632286071777
    10. ')' → logprob: -14.125632286071777

Token 149: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17991213500499725
    2. 'i' → logprob: -1.8049120903015137
    3. '	i' → logprob: -9.304912567138672
    4. ')' → logprob: -10.054912567138672
    5. ' ' → logprob: -10.929912567138672
    6. ' )' → logprob: -11.929912567138672
    7. ' ' → logprob: -12.679912567138672
    8. ')i' → logprob: -13.054912567138672
    9. '(i' → logprob: -14.179912567138672
    10. ' 
' → logprob: -14.304912567138672

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002764710516203195
    2. ')
' → logprob: -8.250276565551758
    3. ' )' → logprob: -12.125276565551758
    4. ')

' → logprob: -12.375276565551758
    5. '   ' → logprob: -13.000276565551758
    6. '       ' → logprob: -14.000276565551758
    7. ')
' → logprob: -14.000276565551758
    8. '):' → logprob: -14.500276565551758
    9. '):
' → logprob: -15.125276565551758
    10. ')==' → logprob: -15.375276565551758

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15432286262512207
    2. '   ' → logprob: -2.529322862625122
    3. 'if' → logprob: -3.404322862625122
    4. ' if' → logprob: -3.529322862625122
    5. '
' → logprob: -8.154322624206543
    6. '	if' → logprob: -8.904322624206543
    7. ' ' → logprob: -9.404322624206543
    8. '	' → logprob: -10.029322624206543
    9. '<|end|>' → logprob: -10.029322624206543
    10. ',' → logprob: -10.404322624206543

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.033779632300138474
    2. ' if' → logprob: -3.4087796211242676
    3. '       ' → logprob: -9.033780097961426
    4. '   ' → logprob: -12.408780097961426
    5. 'is' → logprob: -12.908780097961426
    6. 'result' → logprob: -13.533780097961426
    7. '
' → logprob: -13.533780097961426
    8. ' is' → logprob: -13.908780097961426
    9. 'compare' → logprob: -13.908780097961426
    10. 'current' → logprob: -14.283780097961426

Token 153: ' compare' (ID: 12221)
  Prédit: ' compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.020967839285731316
    2. ' current' → logprob: -4.270967960357666
    3. 'compare' → logprob: -5.020967960357666
    4. ' not' → logprob: -9.645967483520508
    5. 'current' → logprob: -9.770967483520508
    6. '(compare' → logprob: -9.895967483520508
    7. ' ' → logprob: -12.645967483520508
    8. ' Ss' → logprob: -13.395967483520508
    9. ' get' → logprob: -13.645967483520508
    10. '.compare' → logprob: -13.895967483520508

Token 154: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00017708084487821907
    2. '_' → logprob: -9.625177383422852
    3. 's' → logprob: -9.625177383422852
    4. 'values' → logprob: -10.875177383422852
    5. '(current' → logprob: -11.625177383422852
    6. 'Values' → logprob: -12.125177383422852
    7. '_s' → logprob: -12.625177383422852
    8. '_value' → logprob: -13.375177383422852
    9. '_VALUES' → logprob: -13.375177383422852
    10. '_(' → logprob: -13.875177383422852

Token 155: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.2016582190990448
    2. '(S' → logprob: -1.7016582489013672
    3. '(' → logprob: -8.451658248901367
    4. 'current' → logprob: -11.701658248901367
    5. ' current' → logprob: -11.951658248901367
    6. ' (' → logprob: -12.326658248901367
    7. '(Current' → logprob: -12.576658248901367
    8. '(s' → logprob: -13.076658248901367
    9. '(curr' → logprob: -13.201658248901367
    10. '(cur' → logprob: -13.701658248901367

Token 156: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.3754476308822632
    2. 's' → logprob: -2.1254477500915527
    3. '_(' → logprob: -2.3754477500915527
    4. '_' → logprob: -2.8754477500915527
    5. '(current' → logprob: -3.2504477500915527
    6. '(' → logprob: -6.500447750091553
    7. '_s' → logprob: -7.250447750091553
    8. '(element' → logprob: -7.500447750091553
    9. 'element' → logprob: -7.625447750091553
    10. '(_' → logprob: -7.625447750091553

Token 157: ',' (ID: 11)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.5723101496696472
    2. ',' → logprob: -0.9473101496696472
    3. '(' → logprob: -3.197310209274292
    4. ',S' → logprob: -5.197309970855713
    5. ' ,' → logprob: -6.572309970855713
    6. '(s' → logprob: -9.447310447692871
    7. ' (' → logprob: -10.322310447692871
    8. 's' → logprob: -11.447310447692871
    9. '(current' → logprob: -11.447310447692871
    10. '('' → logprob: -11.572310447692871

Token 158: ' Ss' (ID: 186035)
  Prédit: 'Ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ss' → logprob: -0.008675315417349339
    2. ' Ss' → logprob: -4.7586750984191895
    3. 'S' → logprob: -9.758675575256348
    4. ' ' → logprob: -13.883675575256348
    5. '   ' → logprob: -14.508675575256348
    6. '  ' → logprob: -15.383675575256348
    7. ' S' → logprob: -15.508675575256348
    8. ''S' → logprob: -15.508675575256348
    9. 'SS' → logprob: -16.13367462158203
    10. '	S' → logprob: -16.13367462158203

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015407454338856041
    2. '):
' → logprob: -9.625154495239258
    3. ')' → logprob: -9.750154495239258
    4. ' ):' → logprob: -10.875154495239258
    5. ':' → logprob: -11.750154495239258
    6. '():' → logprob: -14.000154495239258
    7. '):

' → logprob: -14.750154495239258
    8. '):
' → logprob: -15.000154495239258
    9. ')):' → logprob: -15.500154495239258
    10. ')==' → logprob: -15.750154495239258

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13052986562252045
    2. 'print' → logprob: -2.1305298805236816
    3. ' print' → logprob: -6.505529880523682
    4. '       ' → logprob: -6.880529880523682
    5. 'increment' → logprob: -7.755529880523682
    6. '   ' → logprob: -8.630529403686523
    7. ':' → logprob: -8.755529403686523
    8. ':
' → logprob: -8.880529403686523
    9. '
' → logprob: -9.755529403686523
    10. '            
' → logprob: -11.005529403686523

Token 161: ' next' (ID: 2613)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002149546518921852
    2. 'increment' → logprob: -6.25214958190918
    3. '           ' → logprob: -8.75214958190918
    4. ' print' → logprob: -10.37714958190918
    5. 'i' → logprob: -11.12714958190918
    6. '   ' → logprob: -11.75214958190918
    7. '            
' → logprob: -13.00214958190918
    8. ' increment' → logprob: -13.62714958190918
    9. '       ' → logprob: -13.75214958190918
    10. '               ' → logprob: -14.12714958190918

Token 162: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.11277129501104355
    2. '_element' → logprob: -2.6127712726593018
    3. '_idx' → logprob: -3.6127712726593018
    4. '_i' → logprob: -5.737771511077881
    5. '_value' → logprob: -6.487771511077881
    6. '_' → logprob: -6.737771511077881
    7. '_val' → logprob: -8.237771034240723
    8. '_elem' → logprob: -9.487771034240723
    9. '_item' → logprob: -11.362771034240723
    10. '_s' → logprob: -11.737771034240723

Token 163: '_base' (ID: 17096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197306513786316
    2. '=' → logprob: -2.8119730949401855
    3. ' ' → logprob: -12.436972618103027
    4. ')' → logprob: -14.311972618103027
    5. 's' → logprob: -15.561972618103027
    6. ' =)' → logprob: -16.061973571777344
    7. ' ' → logprob: -16.311973571777344
    8. '_' → logprob: -16.561973571777344
    9. '```' → logprob: -16.561973571777344
    10. ',' → logprob: -16.686973571777344

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6690442562103271
    2. '=' → logprob: -1.2940442562103271
    3. 'd' → logprob: -1.5440442562103271
    4. '_' → logprob: -10.669044494628906
    5. ' ' → logprob: -10.669044494628906
    6. 'r' → logprob: -11.044044494628906
    7. 's' → logprob: -11.294044494628906
    8. '_idx' → logprob: -11.294044494628906
    9. 'x' → logprob: -12.044044494628906
    10. 'idx' → logprob: -12.419044494628906

Token 165: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.14297422766685486
    2. 'i' → logprob: -2.3929741382598877
    3. ' increment' → logprob: -3.2679741382598877
    4. ' i' → logprob: -5.642974376678467
    5. 'mod' → logprob: -9.642973899841309
    6. '   ' → logprob: -9.892973899841309
    7. ' incremental' → logprob: -10.767973899841309
    8. 'inc' → logprob: -11.267973899841309
    9. ' modulo' → logprob: -11.392973899841309
    10. '0' → logprob: -11.642973899841309

Token 166: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0020572387147694826
    2. '(i' → logprob: -6.877057075500488
    3. 'index' → logprob: -7.752057075500488
    4. '_i' → logprob: -8.377057075500488
    5. 'i' → logprob: -9.002057075500488
    6. '_idx' → logprob: -9.252057075500488
    7. '_' → logprob: -10.127057075500488
    8. ' i' → logprob: -11.002057075500488
    9. 'Index' → logprob: -11.377057075500488
    10. 'd' → logprob: -11.752057075500488

Token 167: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. 'i' → logprob: -16.0000057220459
    4. ' (' → logprob: -16.8750057220459
    5. '(
' → logprob: -17.7500057220459
    6. ' i' → logprob: -19.6250057220459
    7. '(I' → logprob: -19.8750057220459
    8. '(index' → logprob: -20.5000057220459
    9. '(ii' → logprob: -20.6250057220459
    10. '=i' → logprob: -20.7500057220459

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011154872365295887
    2. ')
' → logprob: -4.511154651641846
    3. '<|end|>' → logprob: -10.636155128479004
    4. ' )' → logprob: -10.886155128479004
    5. ')
' → logprob: -11.011155128479004
    6. ')

' → logprob: -11.136155128479004
    7. '           ' → logprob: -11.261155128479004
    8. '       ' → logprob: -11.511155128479004
    9. '   ' → logprob: -13.136155128479004
    10. '               ' → logprob: -13.386155128479004

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.5861724831629544e-05
    2. ' next' → logprob: -11.000056266784668
    3. 'next' → logprob: -11.125056266784668
    4. '
' → logprob: -12.250056266784668
    5. 'mod' → logprob: -12.375056266784668
    6. '            
' → logprob: -12.500056266784668
    7. '       ' → logprob: -13.000056266784668
    8. ' mod' → logprob: -13.250056266784668
    9. '```' → logprob: -13.750056266784668
    10. '		' → logprob: -14.125056266784668

Token 170: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.014743585139513016
    2. 'mod' → logprob: -4.514743804931641
    3. '           ' → logprob: -6.139743804931641
    4. ' next' → logprob: -7.764743804931641
    5. 'wrapped' → logprob: -8.51474380493164
    6. 'result' → logprob: -8.88974380493164
    7. 'final' → logprob: -9.26474380493164
    8. 'loop' → logprob: -9.38974380493164
    9. 'n' → logprob: -9.63974380493164
    10. 'print' → logprob: -9.63974380493164

Token 171: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.106736039626412e-05
    2. '_value' → logprob: -11.500031471252441
    3. '_mod' → logprob: -12.000031471252441
    4. '_element' → logprob: -12.000031471252441
    5. '_' → logprob: -12.500031471252441
    6. '_idx' → logprob: -13.500031471252441
    7. 'index' → logprob: -14.125031471252441
    8. 'Index' → logprob: -14.625031471252441
    9. '_val' → logprob: -14.750031471252441
    10. '_base' → logprob: -14.750031471252441

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005392768885940313
    2. '=' → logprob: -5.255392551422119
    3. ' ' → logprob: -8.880393028259277
    4. '_' → logprob: -11.005393028259277
    5. '_base' → logprob: -14.005393028259277
    6. ' =)' → logprob: -14.130393028259277
    7. ' _' → logprob: -15.255393028259277
    8. ' ' → logprob: -15.380393028259277
    9. ')' → logprob: -15.380393028259277
    10. 's' → logprob: -15.505393028259277

Token 173: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38699787855148315
    2. ' modulo' → logprob: -1.136997938156128
    3. '           ' → logprob: -9.511998176574707
    4. ' mod' → logprob: -10.511998176574707
    5. '(mod' → logprob: -11.636998176574707
    6. ' next' → logprob: -12.386998176574707
    7. 'next' → logprob: -12.511998176574707
    8. '_mod' → logprob: -13.261998176574707
    9. '	mod' → logprob: -13.386998176574707
    10. '   ' → logprob: -13.511998176574707

Token 174: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -1.1472419600977446e-06
    2. 'operation' → logprob: -14.125000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_operator' → logprob: -16.250001907348633
    5. '_OPERATION' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'Operation' → logprob: -17.750001907348633
    8. '_oper' → logprob: -18.250001907348633
    9. '(operation' → logprob: -18.625001907348633
    10. '_op' → logprob: -19.375001907348633

Token 175: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0004354373668320477
    2. '(' → logprob: -7.7504353523254395
    3. ' (' → logprob: -12.875435829162598
    4. '(
' → logprob: -13.875435829162598
    5. ' next' → logprob: -14.250435829162598
    6. 'next' → logprob: -15.000435829162598
    7. '(previous' → logprob: -16.37543487548828
    8. '(len' → logprob: -16.62543487548828
    9. ',next' → logprob: -17.12543487548828
    10. '(current' → logprob: -18.00043487548828

Token 176: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.2246291337069124e-05
    2. 'index' → logprob: -11.625021934509277
    3. '(next' → logprob: -12.000021934509277
    4. 'next' → logprob: -13.375021934509277
    5. '_element' → logprob: -13.875021934509277
    6. 'Index' → logprob: -13.875021934509277
    7. '_' → logprob: -14.375021934509277
    8. '_next' → logprob: -14.750021934509277
    9. '_value' → logprob: -15.000021934509277
    10. '_INDEX' → logprob: -15.125021934509277

Token 177: '_base' (ID: 17096)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.07587499171495438
    2. '_index' → logprob: -2.7008750438690186
    3. ')' → logprob: -6.3258748054504395
    4. 'next' → logprob: -6.4508748054504395
    5. ')(' → logprob: -7.2008748054504395
    6. ' (' → logprob: -7.8258748054504395
    7. 'index' → logprob: -8.075875282287598
    8. '_value' → logprob: -8.200875282287598
    9. '_base' → logprob: -8.200875282287598
    10. ',next' → logprob: -9.325875282287598

Token 178: ',' (ID: 11)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.14470067620277405
    2. ',' → logprob: -2.269700765609741
    3. ',length' → logprob: -3.519700765609741
    4. '(len' → logprob: -7.269700527191162
    5. '(' → logprob: -7.519700527191162
    6. ' ,' → logprob: -8.14470100402832
    7. ' (' → logprob: -8.51970100402832
    8. ',len' → logprob: -11.51970100402832
    9. '(next' → logprob: -11.76970100402832
    10. ')' → logprob: -11.89470100402832

Token 179: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.38694536685943604
    2. 'length' → logprob: -1.136945366859436
    3. 'len' → logprob: -10.386945724487305
    4. ' len' → logprob: -10.386945724487305
    5. ' get' → logprob: -12.886945724487305
    6. '    ' → logprob: -13.136945724487305
    7. '(length' → logprob: -13.136945724487305
    8. 'leng' → logprob: -13.636945724487305
    9. 'get' → logprob: -13.761945724487305
    10. ' lenght' → logprob: -13.761945724487305

Token 180: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31352198123931885
    2. ')' → logprob: -1.3135219812393188
    3. ')
' → logprob: -8.313522338867188
    4. ')

' → logprob: -11.688522338867188
    5. ' )
' → logprob: -13.063522338867188
    6. '   ' → logprob: -13.438522338867188
    7. '           ' → logprob: -13.813522338867188
    8. ')
/' → logprob: -14.438522338867188
    9. ' ' → logprob: -14.938522338867188
    10. '       ' → logprob: -14.938522338867188

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019293125660624355
    2. 'print' → logprob: -9.000192642211914
    3. '            
' → logprob: -10.375192642211914
    4. '
' → logprob: -11.125192642211914
    5. ' print' → logprob: -11.750192642211914
    6. '       ' → logprob: -12.375192642211914
    7. '<|end|>' → logprob: -12.500192642211914
    8. '```' → logprob: -13.500192642211914
    9. 'next' → logprob: -14.125192642211914
    10. '   ' → logprob: -14.500192642211914

Token 182: ' value' (ID: 1432)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08042445033788681
    2. 'next' → logprob: -2.5804245471954346
    3. '           ' → logprob: -6.5804243087768555
    4. ' print' → logprob: -9.455424308776855
    5. ' next' → logprob: -10.580424308776855
    6. 'result' → logprob: -10.830424308776855
    7. 'output' → logprob: -11.205424308776855
    8. 'current' → logprob: -13.330424308776855
    9. '               ' → logprob: -13.455424308776855
    10. '            
' → logprob: -13.580424308776855

Token 183: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.59779292345047
    2. '_to' → logprob: -1.0977928638458252
    3. '=' → logprob: -2.222792863845825
    4. '_at' → logprob: -4.972793102264404
    5. 'to' → logprob: -7.472793102264404
    6. '_next' → logprob: -8.097792625427246
    7. '_' → logprob: -9.222792625427246
    8. 's' → logprob: -9.597792625427246
    9. 'next' → logprob: -10.597792625427246
    10. 'To' → logprob: -10.722792625427246

Token 184: '_print' (ID: 31509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004275699320714921
    2. '_print' → logprob: -8.25042724609375
    3. 'get' → logprob: -8.87542724609375
    4. ' print' → logprob: -10.62542724609375
    5. 'return' → logprob: -14.12542724609375
    6. '_get' → logprob: -14.62542724609375
    7. 'pr' → logprob: -14.75042724609375
    8. 'output' → logprob: -15.75042724609375
    9. 'retrieve' → logprob: -16.50042724609375
    10. '#print' → logprob: -16.62542724609375

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717505399137735
    2. '=' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.881717681884766
    4. '  ' → logprob: -14.256717681884766
    5. 's' → logprob: -15.131717681884766
    6. ')' → logprob: -16.256717681884766
    7. '=get' → logprob: -16.256717681884766
    8. '_' → logprob: -16.381717681884766
    9. '(' → logprob: -16.756717681884766
    10. '   ' → logprob: -17.631717681884766

Token 186: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1269317865371704
    2. ' get' → logprob: -2.126931667327881
    3. '(get' → logprob: -13.001932144165039
    4. '	get' → logprob: -14.626932144165039
    5. '.get' → logprob: -15.251932144165039
    6. '   ' → logprob: -16.00193214416504
    7. ' ' → logprob: -16.12693214416504
    8. '_get' → logprob: -16.12693214416504
    9. '[get' → logprob: -16.12693214416504
    10. '=get' → logprob: -16.62693214416504

Token 187: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -4.320199877838604e-07
    2. 'element' → logprob: -15.0
    3. '_value' → logprob: -17.0
    4. 'Element' → logprob: -19.625
    5. '_' → logprob: -19.75
    6. '_ELEMENT' → logprob: -20.0
    7. '_elem' → logprob: -20.25
    8. '_Element' → logprob: -21.5
    9. '```' → logprob: -21.875
    10. '_elements' → logprob: -21.875

Token 188: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. 'At' → logprob: -15.625
    3. 'at' → logprob: -19.125
    4. '_' → logprob: -20.75
    5. '_a' → logprob: -20.75
    6. '_AT' → logprob: -21.125
    7. ' at' → logprob: -21.625
    8. '```' → logprob: -22.125
    9. '_as' → logprob: -22.625
    10. 'a' → logprob: -23.0

Token 189: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.575969398021698
    2. '_index' → logprob: -0.825969398021698
    3. 'Index' → logprob: -10.575969696044922
    4. 'list' → logprob: -12.950969696044922
    5. 'ex' → logprob: -14.700969696044922
    6. 'ind' → logprob: -14.825969696044922
    7. '(T' → logprob: -15.075969696044922
    8. ' index' → logprob: -15.200969696044922
    9. 'dex' → logprob: -15.950969696044922
    10. '_list' → logprob: -16.325969696044922

Token 190: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00023154958034865558
    2. '(' → logprob: -8.375231742858887
    3. '(S' → logprob: -14.625231742858887
    4. '(
' → logprob: -15.125231742858887
    5. ' (' → logprob: -16.87523078918457
    6. '((' → logprob: -18.00023078918457
    7. '(Task' → logprob: -18.12523078918457
    8. '```' → logprob: -18.12523078918457
    9. '(ts' → logprob: -18.37523078918457
    10. '('' → logprob: -18.87523078918457

Token 191: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0028645433485507965
    2. 'S' → logprob: -6.252864360809326
    3. '(T' → logprob: -7.252864360809326
    4. 'Ts' → logprob: -8.627864837646484
    5. 'Ss' → logprob: -10.002864837646484
    6. ' Ts' → logprob: -13.252864837646484
    7. '_s' → logprob: -14.877864837646484
    8. '(' → logprob: -15.127864837646484
    9. 'T' → logprob: -15.752864837646484
    10. '
' → logprob: -15.752864837646484

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017227759584784508
    2. '(next' → logprob: -4.267227649688721
    3. '(' → logprob: -6.017227649688721
    4. ' ,' → logprob: -7.892227649688721
    5. ',next' → logprob: -8.392228126525879
    6. ' (' → logprob: -11.642228126525879
    7. ')' → logprob: -11.892228126525879
    8. '(",' → logprob: -13.767228126525879
    9. ',
' → logprob: -13.892228126525879
    10. '(n' → logprob: -14.142228126525879

Token 193: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07897472381591797
    2. ' next' → logprob: -2.578974723815918
    3. '(next' → logprob: -9.578974723815918
    4. '[next' → logprob: -11.078974723815918
    5. ',next' → logprob: -15.953974723815918
    6. '	next' → logprob: -16.078975677490234
    7. ')' → logprob: -16.453975677490234
    8. '   ' → logprob: -18.453975677490234
    9. '_next' → logprob: -18.828975677490234
    10. '.next' → logprob: -19.203975677490234

Token 194: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.2664456789934775e-06
    2. 'index' → logprob: -13.750000953674316
    3. '(index' → logprob: -17.000001907348633
    4. ')' → logprob: -17.750001907348633
    5. 'Index' → logprob: -18.625001907348633
    6. '_INDEX' → logprob: -19.000001907348633
    7. 's' → logprob: -19.125001907348633
    8. '_value' → logprob: -19.250001907348633
    9. '[index' → logprob: -19.500001907348633
    10. '_indices' → logprob: -19.625001907348633

Token 195: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062080174684524536
    2. ')' → logprob: -2.812080144882202
    3. ')
' → logprob: -9.437080383300781
    4. ' )
' → logprob: -11.312080383300781
    5. '   ' → logprob: -11.562080383300781
    6. '(' → logprob: -12.812080383300781
    7. ' ' → logprob: -13.062080383300781
    8. ')

' → logprob: -13.062080383300781
    9. '       ' → logprob: -13.937080383300781
    10. '()
' → logprob: -14.187080383300781

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010829445673152804
    2. 'print' → logprob: -7.001082897186279
    3. '
' → logprob: -9.001083374023438
    4. '   ' → logprob: -11.626083374023438
    5. '            
' → logprob: -11.876083374023438
    6. '()
' → logprob: -12.126083374023438
    7. '       ' → logprob: -12.126083374023438
    8. ' print' → logprob: -12.376083374023438
    9. '		' → logprob: -12.751083374023438
    10. '```' → logprob: -12.751083374023438

Token 197: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008665391243994236
    2. ' print' → logprob: -4.758665561676025
    3. '
' → logprob: -10.008665084838867
    4. '           ' → logprob: -12.133665084838867
    5. '   ' → logprob: -15.758665084838867
    6. '(print' → logprob: -15.883665084838867
    7. '	print' → logprob: -17.258665084838867
    8. '       ' → logprob: -17.758665084838867
    9. '            
' → logprob: -18.133665084838867
    10. ' ' → logprob: -18.508665084838867

Token 198: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.750005722045898
    3. 'value' → logprob: -13.000005722045898
    4. '```' → logprob: -15.625005722045898
    5. '_val' → logprob: -16.1250057220459
    6. '(value' → logprob: -16.7500057220459
    7. '_VALUE' → logprob: -18.0000057220459
    8. 'Value' → logprob: -18.5000057220459
    9. '_Value' → logprob: -18.8750057220459
    10. '(_' → logprob: -18.8750057220459

Token 199: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. ' (' → logprob: -15.8750581741333
    4. '```' → logprob: -18.375059127807617
    5. 'value' → logprob: -19.000059127807617
    6. '(Value' → logprob: -19.125059127807617
    7. '(val' → logprob: -19.625059127807617
    8. '(valor' → logprob: -20.250059127807617
    9. ')value' → logprob: -20.500059127807617
    10. '(
' → logprob: -20.625059127807617

Token 200: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2664456789934775e-06
    2. 'to' → logprob: -14.875000953674316
    3. ')' → logprob: -15.000000953674316
    4. '_value' → logprob: -16.250001907348633
    5. 'alue' → logprob: -16.625001907348633
    6. 'value' → logprob: -16.625001907348633
    7. 'To' → logprob: -16.875001907348633
    8. 's' → logprob: -17.125001907348633
    9. 'o' → logprob: -17.125001907348633
    10. '(value' → logprob: -17.125001907348633

Token 201: '_print' (ID: 31509)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4797583818435669
    2. 'print' → logprob: -0.9797583818435669
    3. '_print' → logprob: -5.604758262634277
    4. 'int' → logprob: -6.354758262634277
    5. 'rin' → logprob: -9.229758262634277
    6. 'n' → logprob: -9.604758262634277
    7. 'rt' → logprob: -10.979758262634277
    8. 'Print' → logprob: -11.854758262634277
    9. 't' → logprob: -12.104758262634277
    10. 'rl' → logprob: -12.229758262634277

Token 202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003872974484693259
    2. '()' → logprob: -8.000387191772461
    3. '<|end|>' → logprob: -10.750387191772461
    4. '())' → logprob: -11.500387191772461
    5. ')
' → logprob: -12.000387191772461
    6. '```' → logprob: -12.125387191772461
    7. '(' → logprob: -12.750387191772461
    8. ' )' → logprob: -13.125387191772461
    9. '#' → logprob: -14.500387191772461
    10. '}' → logprob: -14.625387191772461

Token 203: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.375005722045898
    3. '()
' → logprob: -14.500005722045898
    4. '();' → logprob: -15.375005722045898
    5. '()`' → logprob: -16.0000057220459
    6. ' ()' → logprob: -16.2500057220459
    7. '()

' → logprob: -16.8750057220459
    8. '()?' → logprob: -17.1250057220459
    9. '().' → logprob: -17.3750057220459
    10. '()"' → logprob: -17.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 202
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 51.98%
Précision (top 10): 86.63%
================================================================================
