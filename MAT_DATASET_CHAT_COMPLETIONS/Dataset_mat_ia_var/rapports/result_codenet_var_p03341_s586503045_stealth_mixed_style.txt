================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def f(x):
    return list(x)

n=int(sys.stdin.readline())
S=sys.stdin.readline()
L=f(S)
w=0
e=0
for ch in L[1:]:
    if ch=='E': e+=1
M=e
i=1
j=None
it=L[0]
k=0
while True:
    if i>=len(L):
        break
    if it=='W':
        w+=1
    it=L[i]
    if it=='E':
        e-=1
    x=w+e
    if x<M:
        M=x
        j=i
    i+=1
print(M)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05600862577557564
    2. ' main' → logprob: -3.8060085773468018
    3. ' process' → logprob: -4.806008815765381
    4. ' sys' → logprob: -5.556008815765381
    5. ' space' → logprob: -5.806008815765381
    6. ' ' → logprob: -6.056008815765381
    7. ' function' → logprob: -6.431008815765381
    8. ' a' → logprob: -6.681008815765381
    9. '  ' → logprob: -6.931008815765381
    10. ' my' → logprob: -7.181008815765381

Token 5: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7505570650100708
    2. 'u' → logprob: -0.7505570650100708
    3. '_' → logprob: -3.0005569458007812
    4. 'a' → logprob: -5.750556945800781
    5. '(u' → logprob: -6.250556945800781
    6. '_u' → logprob: -8.375556945800781
    7. '(a' → logprob: -8.625556945800781
    8. ' (' → logprob: -9.875556945800781
    9. 'unc' → logprob: -10.000556945800781
    10. 'e' → logprob: -10.125556945800781

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062023479491472244
    2. ')' → logprob: -2.812023401260376
    3. ':' → logprob: -10.562023162841797
    4. ',' → logprob: -11.562023162841797
    5. '):
' → logprob: -12.062023162841797
    6. '=' → logprob: -12.687023162841797
    7. '*' → logprob: -13.312023162841797
    8. ' ):' → logprob: -13.437023162841797
    9. ')>' → logprob: -14.062023162841797
    10. '**' → logprob: -14.187023162841797

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14480267465114594
    2. ':' → logprob: -2.2698025703430176
    3. ' ' → logprob: -3.8948025703430176
    4. ' return' → logprob: -5.894802570343018
    5. '    ' → logprob: -6.144802570343018
    6. '\' → logprob: -6.769802570343018
    7. '    
' → logprob: -7.019802570343018
    8. '(' → logprob: -7.394802570343018
    9. ':return' → logprob: -7.394802570343018
    10. ' 
' → logprob: -7.769802570343018

Token 8: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41112884879112244
    2. '   ' → logprob: -1.5361288785934448
    3. ' return' → logprob: -2.6611287593841553
    4. '    ' → logprob: -3.4111287593841553
    5. 'r' → logprob: -4.536128997802734
    6. 'return' (adapté à ' return') → logprob: -5.661128997802734
    7. ' r' → logprob: -7.161128997802734
    8. '  ' → logprob: -7.161128997802734
    9. ' )' → logprob: -7.411128997802734
    10. 'x' → logprob: -7.911128997802734

Token 9: ' list' (ID: 1562)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06592404842376709
    2. ' ' → logprob: -3.0659241676330566
    3. 'x' → logprob: -4.065924167633057
    4. 's' → logprob: -11.815923690795898
    5. ' ' → logprob: -11.940923690795898
    6. '  ' → logprob: -12.065923690795898
    7. ' None' → logprob: -12.565923690795898
    8. '(x' → logprob: -12.565923690795898
    9. '"' → logprob: -12.940923690795898
    10. ' "' → logprob: -13.690923690795898

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028569400310516357
    2. '(x' → logprob: -6.002856731414795
    3. '(range' → logprob: -9.252857208251953
    4. '((' → logprob: -9.627857208251953
    5. '```' → logprob: -10.127857208251953
    6. ')' → logprob: -10.627857208251953
    7. '(user' → logprob: -10.877857208251953
    8. '[' → logprob: -11.377857208251953
    9. '('' → logprob: -11.627857208251953
    10. ' (' → logprob: -12.002857208251953

Token 11: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.171581091824919e-05
    2. '))' → logprob: -10.12507152557373
    3. ')))' → logprob: -11.50007152557373
    4. ' )' → logprob: -11.62507152557373
    5. ').' → logprob: -13.37507152557373
    6. ')`' → logprob: -13.50007152557373
    7. '.' → logprob: -13.62507152557373
    8. '[' → logprob: -13.62507152557373
    9. '(' → logprob: -13.75007152557373
    10. ')}}' → logprob: -14.12507152557373

Token 12: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017618563026189804
    2. '.' → logprob: -4.642618656158447
    3. '(
' → logprob: -6.267618656158447
    4. '[' → logprob: -6.517618656158447
    5. ''' → logprob: -6.642618656158447
    6. '_' → logprob: -7.142618656158447
    7. '#' → logprob: -7.392618656158447
    8. ')' → logprob: -7.642618656158447
    9. ':' → logprob: -9.017618179321289
    10. 'def' → logprob: -9.142618179321289

Token 13: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.227034568786621
    2. '.' → logprob: -1.727034568786621
    3. '(' → logprob: -1.852034568786621
    4. ' =' → logprob: -2.102034568786621
    5. ' ' → logprob: -3.102034568786621
    6. '[' → logprob: -3.102034568786621
    7. 'o' → logprob: -3.477034568786621
    8. 'u' → logprob: -3.477034568786621
    9. '_' → logprob: -3.727034568786621
    10. ')' → logprob: -3.852034568786621

Token 14: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03438657894730568
    2. '(input' → logprob: -3.40938663482666
    3. '(sys' → logprob: -7.28438663482666
    4. ' (' → logprob: -11.40938663482666
    5. '('' → logprob: -11.40938663482666
    6. '(x' → logprob: -11.40938663482666
    7. 'input' → logprob: -12.28438663482666
    8. '(
' → logprob: -12.53438663482666
    9. '(s' → logprob: -13.53438663482666
    10. '()' → logprob: -13.65938663482666

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010604370618239045
    2. '.argv' → logprob: -7.626060485839844
    3. '.stdin' → logprob: -7.876060485839844
    4. '.)' → logprob: -8.876060485839844
    5. ' .' → logprob: -11.001060485839844
    6. '.readline' → logprob: -11.251060485839844
    7. '.')' → logprob: -12.376060485839844
    8. ')' → logprob: -12.751060485839844
    9. '.")' → logprob: -12.751060485839844
    10. '.import' → logprob: -13.251060485839844

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01565597392618656
    2. '.read' → logprob: -4.265655994415283
    3. '.' → logprob: -6.515655994415283
    4. '.)' → logprob: -12.140655517578125
    5. '.readlines' → logprob: -13.140655517578125
    6. '.Read' → logprob: -13.640655517578125
    7. ').' → logprob: -14.015655517578125
    8. ')' → logprob: -14.390655517578125
    9. '.READ' → logprob: -14.890655517578125
    10. ' .' → logprob: -15.140655517578125

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2193865180015564
    2. '()' → logprob: -1.7193865776062012
    3. '().' → logprob: -4.344386577606201
    4. '(' → logprob: -6.094386577606201
    5. ')' → logprob: -6.719386577606201
    6. '('' → logprob: -7.469386577606201
    7. ' ())' → logprob: -8.219386100769043
    8. '()[' → logprob: -8.469386100769043
    9. '()))' → logprob: -8.594386100769043
    10. ' ' → logprob: -10.969386100769043

Token 18: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010221228934824467
    2. ' for' → logprob: -5.260221004486084
    3. 'data' → logprob: -6.385221004486084
    4. 'x' → logprob: -7.135221004486084
    5. 'a' → logprob: -7.510221004486084
    6. 'n' → logprob: -7.885221004486084
    7. '<|end|>' → logprob: -7.885221004486084
    8. 's' → logprob: -8.010221481323242
    9. 'result' → logprob: -8.260221481323242
    10. ')' → logprob: -9.135221481323242

Token 19: '=sys' (ID: 149200)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12098842859268188
    2. ' =' → logprob: -2.245988368988037
    3. '=input' → logprob: -4.870988368988037
    4. '.' → logprob: -8.995988845825195
    5. '=sys' → logprob: -9.120988845825195
    6. ' ' → logprob: -9.870988845825195
    7. '=[]' → logprob: -9.995988845825195
    8. '=S' → logprob: -10.745988845825195
    9. '=line' → logprob: -11.120988845825195
    10. '=s' → logprob: -11.245988845825195

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001395592000335455
    2. '.' → logprob: -7.0013957023620605
    3. '.readline' → logprob: -8.126395225524902
    4. '.stdout' → logprob: -8.876395225524902
    5. '.std' → logprob: -10.501395225524902
    6. 'stdin' → logprob: -11.501395225524902
    7. '.argv' → logprob: -11.751395225524902
    8. '.st' → logprob: -14.251395225524902
    9. ' .' → logprob: -14.626395225524902
    10. '.read' → logprob: -14.876395225524902

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00015478975547011942
    2. '.readlines' → logprob: -9.000154495239258
    3. '.read' → logprob: -10.500154495239258
    4. '.' → logprob: -12.750154495239258
    5. ' readline' → logprob: -14.500154495239258
    6. 'read' → logprob: -15.000154495239258
    7. '```' → logprob: -16.500154495239258
    8. 'README' → logprob: -18.625154495239258
    9. '.Read' → logprob: -19.000154495239258
    10. '_read' → logprob: -19.375154495239258

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006675214972347021
    2. '().' → logprob: -7.375667572021484
    3. '())' → logprob: -11.125667572021484
    4. '(' → logprob: -11.125667572021484
    5. ' ()' → logprob: -12.500667572021484
    6. ')' → logprob: -13.750667572021484
    7. '`()' → logprob: -14.000667572021484
    8. '()
' → logprob: -14.125667572021484
    9. '()

' → logprob: -14.125667572021484
    10. '()(' → logprob: -14.125667572021484

Token 23: 'L' (ID: 43)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.602907121181488
    2. 's' → logprob: -2.102907180786133
    3. ')' → logprob: -2.602907180786133
    4. '[' → logprob: -3.102907180786133
    5. '.split' → logprob: -3.102907180786133
    6. '.rstrip' → logprob: -3.477907180786133
    7. 'n' → logprob: -3.727907180786133
    8. '[:-' → logprob: -3.977907180786133
    9. '.s' → logprob: -4.102907180786133
    10. '<|end|>' → logprob: -4.352907180786133

Token 24: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013037392869591713
    2. ' =' → logprob: -4.513037204742432
    3. 'ist' → logprob: -6.888037204742432
    4. '=[]' → logprob: -8.26303768157959
    5. '=list' → logprob: -9.01303768157959
    6. '=int' → logprob: -9.51303768157959
    7. '=[' → logprob: -9.51303768157959
    8. 'st' → logprob: -9.63803768157959
    9. '.' → logprob: -10.13803768157959
    10. '=sys' → logprob: -10.13803768157959

Token 25: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0032245332840830088
    2. '(' → logprob: -5.7532243728637695
    3. '(s' → logprob: -10.62822437286377
    4. 'S' → logprob: -11.87822437286377
    5. '(n' → logprob: -12.25322437286377
    6. '((' → logprob: -12.87822437286377
    7. '(x' → logprob: -13.25322437286377
    8. ' (' → logprob: -13.37822437286377
    9. '('' → logprob: -14.00322437286377
    10. '(str' → logprob: -14.75322437286377

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003096023283433169
    2. '))' → logprob: -8.500309944152832
    3. '[' → logprob: -9.875309944152832
    4. '.strip' → logprob: -11.000309944152832
    5. '[:-' → logprob: -11.500309944152832
    6. ' )' → logprob: -11.500309944152832
    7. '[:' → logprob: -12.375309944152832
    8. ')))' → logprob: -12.625309944152832
    9. ')n' → logprob: -12.625309944152832
    10. '[n' → logprob: -13.250309944152832

Token 27: 'w' (ID: 86)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12813571095466614
    2. '[' → logprob: -3.1281356811523438
    3. '(' → logprob: -3.3781356811523438
    4. '.' → logprob: -4.628135681152344
    5. '[n' → logprob: -4.878135681152344
    6. '(n' → logprob: -5.378135681152344
    7. '[:]' → logprob: -5.753135681152344
    8. '\n' → logprob: -5.878135681152344
    9. '<|end|>' → logprob: -5.878135681152344
    10. 'n' → logprob: -6.253135681152344

Token 28: '=' (ID: 28)
  Prédit: 'hile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hile' → logprob: -0.19882753491401672
    2. 'h' → logprob: -2.1988275051116943
    3. '=' → logprob: -3.5738275051116943
    4. 'i' → logprob: -4.948827743530273
    5. 'e' → logprob: -5.198827743530273
    6. ' =' → logprob: -5.448827743530273
    7. 'len' → logprob: -6.073827743530273
    8. '=len' → logprob: -6.073827743530273
    9. 'hen' → logprob: -6.323827743530273
    10. '[' → logprob: -6.323827743530273

Token 29: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6363446116447449
    2. '[]' → logprob: -1.3863446712493896
    3. '0' → logprob: -2.5113446712493896
    4. '[' → logprob: -3.3863446712493896
    5. 'L' → logprob: -3.5113446712493896
    6. '{}' → logprob: -3.5113446712493896
    7. 'list' → logprob: -4.6363444328308105
    8. '1' → logprob: -4.7613444328308105
    9. '[len' → logprob: -5.3863444328308105
    10. '""' → logprob: -5.7613444328308105

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053548023104667664
    2. ' for' → logprob: -3.4285480976104736
    3. '<|end|>' → logprob: -4.8035478591918945
    4. '
' → logprob: -5.6785478591918945
    5. ' ' → logprob: -6.0535478591918945
    6. 'f' → logprob: -6.5535478591918945
    7. 'i' → logprob: -6.6785478591918945
    8. 'n' → logprob: -7.0535478591918945
    9. ')' → logprob: -7.5535478591918945
    10. '+' → logprob: -8.303547859191895

Token 31: 'e' (ID: 68)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41386380791664124
    2. ' for' → logprob: -1.7888637781143188
    3. ' ' → logprob: -2.5388638973236084
    4. '<|end|>' → logprob: -3.2888638973236084
    5. '
' → logprob: -3.9138638973236084
    6. 'f' → logprob: -4.538863658905029
    7. 'i' → logprob: -4.913863658905029
    8. ':' → logprob: -5.663863658905029
    9. 'n' → logprob: -5.663863658905029
    10. ' 
' → logprob: -6.038863658905029

Token 32: '=' (ID: 28)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4486464858055115
    2. '=' → logprob: -1.3236465454101562
    3. '+=' → logprob: -3.5736465454101562
    4. 'w' → logprob: -3.9486465454101562
    5. 'f' → logprob: -4.823646545410156
    6. 'x' → logprob: -5.198646545410156
    7. 'l' → logprob: -5.698646545410156
    8. 'n' → logprob: -5.948646545410156
    9. 'q' → logprob: -5.948646545410156
    10. ' ' → logprob: -5.948646545410156

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022298341616988182
    2. 'w' → logprob: -4.147298336029053
    3. 'len' → logprob: -5.897298336029053
    4. '1' → logprob: -6.397298336029053
    5. 'n' → logprob: -7.522298336029053
    6. ' ' → logprob: -8.147298812866211
    7. 'L' → logprob: -8.522298812866211
    8. '-' → logprob: -8.772298812866211
    9. '[]' → logprob: -9.272298812866211
    10. 'S' → logprob: -9.272298812866211

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1342698633670807
    2. ' for' → logprob: -3.009269952774048
    3. '
' → logprob: -3.759269952774048
    4. '<|end|>' → logprob: -3.759269952774048
    5. 'f' → logprob: -4.384269714355469
    6. 'n' → logprob: -5.384269714355469
    7. 'i' → logprob: -5.634269714355469
    8. ' ' → logprob: -6.009269714355469
    9. '' → logprob: -6.259269714355469
    10. '\n' → logprob: -6.634269714355469

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2653403878211975
    2. '
' → logprob: -2.1403403282165527
    3. ' for' → logprob: -2.5153403282165527
    4. ' ' → logprob: -4.890340328216553
    5. ' 
' → logprob: -5.015340328216553
    6. 'f' → logprob: -5.015340328216553
    7. 'i' → logprob: -5.640340328216553
    8. 'n' → logprob: -6.015340328216553
    9. '\n' → logprob: -6.515340328216553
    10. '<|end|>' → logprob: -6.515340328216553

Token 36: ' ch' (ID: 549)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31472882628440857
    2. ' ' → logprob: -2.0647287368774414
    3. 'i' → logprob: -2.5647287368774414
    4. ' L' → logprob: -3.1897287368774414
    5. 'L' → logprob: -4.939728736877441
    6. ' c' → logprob: -5.314728736877441
    7. '_' → logprob: -6.189728736877441
    8. 'c' → logprob: -6.439728736877441
    9. ' _' → logprob: -6.439728736877441
    10. ' l' → logprob: -6.439728736877441

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0173858143389225
    2. ' ' → logprob: -4.517385959625244
    3. 'in' → logprob: -5.142385959625244
    4. '  ' → logprob: -8.142385482788086
    5. 's' → logprob: -9.267385482788086
    6. ' i' → logprob: -10.892385482788086
    7. '	in' → logprob: -11.392385482788086
    8. '<|end|>' → logprob: -11.392385482788086
    9. 'i' → logprob: -11.517385482788086
    10. ',' → logprob: -12.079885482788086

Token 38: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.22547541558742523
    2. 'L' → logprob: -1.6004754304885864
    3. ' S' → logprob: -10.600475311279297
    4. ' ' → logprob: -10.725475311279297
    5. 'S' → logprob: -12.100475311279297
    6. ' range' → logprob: -13.100475311279297
    7. '<|end|>' → logprob: -13.850475311279297
    8. '	L' → logprob: -13.975475311279297
    9. '  ' → logprob: -14.100475311279297
    10. '>L' → logprob: -14.412975311279297

Token 39: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.362307223957032e-05
    2. ' :' → logprob: -10.375073432922363
    3. ':
' → logprob: -11.000073432922363
    4. ':**' → logprob: -11.250073432922363
    5. '):' → logprob: -11.875073432922363
    6. '=' → logprob: -14.375073432922363
    7. '<|end|>' → logprob: -14.375073432922363
    8. '+:' → logprob: -14.750073432922363
    9. ')' → logprob: -14.875073432922363
    10. '>:' → logprob: -14.875073432922363

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7915990352630615
    2. ':' → logprob: -0.9165990352630615
    3. ':]' → logprob: -3.1665990352630615
    4. 'n' → logprob: -3.4165990352630615
    5. 'w' → logprob: -3.6665990352630615
    6. ':-' → logprob: -4.041599273681641
    7. ':n' → logprob: -4.541599273681641
    8. '2' → logprob: -5.291599273681641
    9. '0' → logprob: -5.416599273681641
    10. ':w' → logprob: -6.041599273681641

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003098927205428481
    2. ':]' → logprob: -5.878098964691162
    3. ':-' → logprob: -8.628098487854004
    4. ']:' → logprob: -9.253098487854004
    5. '::' → logprob: -11.878098487854004
    6. ':].' → logprob: -12.378098487854004
    7. ':],' → logprob: -12.628098487854004
    8. ' :' → logprob: -13.878098487854004
    9. ':end' → logprob: -14.128098487854004
    10. ' :]' → logprob: -15.003098487854004

Token 42: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.000365259445970878
    2. ']):' → logprob: -8.875365257263184
    3. ']' → logprob: -9.125365257263184
    4. ']:
' → logprob: -9.750365257263184
    5. ':' → logprob: -10.375365257263184
    6. ']:
' → logprob: -11.625365257263184
    7. '"]:' → logprob: -13.125365257263184
    8. '):' → logprob: -13.125365257263184
    9. '-' → logprob: -13.250365257263184
    10. '1' → logprob: -13.500365257263184

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04001583158969879
    2. ' if' → logprob: -3.915015935897827
    3. ' ' → logprob: -4.290015697479248
    4. '<|end|>' → logprob: -6.290015697479248
    5. '    ' → logprob: -7.290015697479248
    6. 'if' → logprob: -7.415015697479248
    7. 'e' → logprob: -7.415015697479248
    8. '  ' → logprob: -7.790015697479248
    9. ' w' → logprob: -7.915015697479248
    10. 'w' → logprob: -8.915016174316406

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2998431921005249
    2. '   ' → logprob: -1.799843192100525
    3. ' ' → logprob: -3.1748433113098145
    4. '    ' → logprob: -3.5498433113098145
    5. 'if' (adapté à ' if') → logprob: -4.1748433113098145
    6. '       ' → logprob: -6.0498433113098145
    7. ' w' → logprob: -6.5498433113098145
    8. ' 
' → logprob: -7.0498433113098145
    9. 'e' → logprob: -7.1748433113098145
    10. '  ' → logprob: -7.2998433113098145

Token 45: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.00582877965644002
    2. 'ch' → logprob: -5.255828857421875
    3. ' w' → logprob: -7.880828857421875
    4. ' ' → logprob: -8.880828857421875
    5. 'w' → logprob: -11.005828857421875
    6. ' s' → logprob: -11.755828857421875
    7. '(ch' → logprob: -11.755828857421875
    8. ' c' → logprob: -11.880828857421875
    9. '  ' → logprob: -12.130828857421875
    10. ' e' → logprob: -12.443328857421875

Token 46: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39112767577171326
    2. ' ==' → logprob: -1.1411277055740356
    3. '=='' → logprob: -6.141127586364746
    4. ' in' → logprob: -7.266127586364746
    5. '=' → logprob: -8.141127586364746
    6. '!=' → logprob: -8.266127586364746
    7. ' =='' → logprob: -8.391127586364746
    8. '.' → logprob: -8.766127586364746
    9. '=="' → logprob: -9.016127586364746
    10. ' !=' → logprob: -9.016127586364746

Token 47: 'E' (ID: 36)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9457193613052368
    2. 'W' → logprob: -1.5707193613052368
    3. ''' → logprob: -2.0707192420959473
    4. 'a' → logprob: -2.4457192420959473
    5. 'e' → logprob: -2.8207192420959473
    6. '('' → logprob: -4.070719242095947
    7. '0' → logprob: -4.195719242095947
    8. '"' → logprob: -4.445719242095947
    9. 'E' → logprob: -4.695719242095947
    10. '<' → logprob: -4.695719242095947

Token 48: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.49631059169769287
    2. ''' → logprob: -1.2463105916976929
    3. ' ':' → logprob: -2.8713107109069824
    4. ' '' → logprob: -3.4963107109069824
    5. '':
' → logprob: -4.746310710906982
    6. 'Q' → logprob: -5.746310710906982
    7. ':' → logprob: -6.871310710906982
    8. 'A' → logprob: -7.621310710906982
    9. ''S' → logprob: -7.871310710906982
    10. '':
' → logprob: -7.996310710906982

Token 49: ' e' (ID: 319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3074236214160919
    2. 'e' → logprob: -2.1824235916137695
    3. ' w' → logprob: -2.6824235916137695
    4. 'w' → logprob: -3.6824235916137695
    5. ' e' → logprob: -3.6824235916137695
    6. '   ' → logprob: -4.0574235916137695
    7. '    ' → logprob: -4.4324235916137695
    8. ' ' → logprob: -6.8074235916137695
    9. '      ' → logprob: -7.3074235916137695
    10. '        ' → logprob: -7.5574235916137695

Token 50: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027521206066012383
    2. ' +=' → logprob: -4.277521133422852
    3. '+' → logprob: -4.652521133422852
    4. '=' → logprob: -5.652521133422852
    5. '++' → logprob: -8.527521133422852
    6. ']+=' → logprob: -12.277521133422852
    7. '+='' → logprob: -12.652521133422852
    8. '-=' → logprob: -12.652521133422852
    9. '+=(' → logprob: -13.277521133422852
    10. ' ' → logprob: -13.527521133422852

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003364158037584275
    2. ' ' → logprob: -8.000336647033691
    3. 'w' → logprob: -15.125336647033691
    4. '2' → logprob: -15.250336647033691
    5. '-' → logprob: -16.125335693359375
    6. 'e' → logprob: -16.750335693359375
    7. '+' → logprob: -16.875335693359375
    8. '0' → logprob: -17.125335693359375
    9. '3' → logprob: -17.250335693359375
    10. ' w' → logprob: -17.625335693359375

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: 'M' (ID: 44)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '=e' (ID: 88454)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7934583425521851
    2. 'a' → logprob: -1.043458342552185
    3. 'if' → logprob: -2.6684584617614746
    4. 'i' → logprob: -2.9184584617614746
    5. 'ax' → logprob: -3.2934584617614746
    6. 'M' → logprob: -4.543458461761475
    7. 'for' → logprob: -5.043458461761475
    8. 'e' → logprob: -5.168458461761475
    9. '=' → logprob: -6.418458461761475
    10. 'while' → logprob: -6.793458461761475

Token 55: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3324347138404846
    2. '<|end|>' → logprob: -1.3324346542358398
    3. '
' → logprob: -4.83243465423584
    4. ' ' → logprob: -5.45743465423584
    5. 'w' → logprob: -6.70743465423584
    6. '+w' → logprob: -6.95743465423584
    7. '<|end|>' → logprob: -7.33243465423584
    8. ' +' → logprob: -7.45743465423584
    9. '+
' → logprob: -7.58243465423584
    10. ' for' → logprob: -7.70743465423584

Token 56: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21185439825057983
    2. '<|end|>' → logprob: -2.7118544578552246
    3. 'w' → logprob: -3.3368544578552246
    4. 'max' → logprob: -3.7118544578552246
    5. ' for' → logprob: -4.211854457855225
    6. 's' → logprob: -4.586854457855225
    7. 'n' → logprob: -4.961854457855225
    8. 'e' → logprob: -5.211854457855225
    9. 'i' → logprob: -5.586854457855225
    10. 'ans' → logprob: -5.836854457855225

Token 57: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17294833064079285
    2. ' =' → logprob: -2.0479483604431152
    3. 'n' → logprob: -3.6729483604431152
    4. 'nd' → logprob: -6.172948360443115
    5. ' ' → logprob: -7.172948360443115
    6. 'f' → logprob: -7.797948360443115
    7. ' n' → logprob: -8.672947883605957
    8. 's' → logprob: -8.672947883605957
    9. ',' → logprob: -8.922947883605957
    10. 'nt' → logprob: -8.922947883605957

Token 58: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5792032480239868
    2. '1' → logprob: -0.8292032480239868
    3. ' ' → logprob: -5.829203128814697
    4. '2' → logprob: -8.829203605651855
    5. 'w' → logprob: -9.704203605651855
    6. '-' → logprob: -9.704203605651855
    7. 'len' → logprob: -11.454203605651855
    8. ' -' → logprob: -12.016703605651855
    9. 'n' → logprob: -12.204203605651855
    10. '3' → logprob: -12.829203605651855

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'j' (ID: 73)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6619961857795715
    2. '<|end|>' → logprob: -1.2869961261749268
    3. '
' → logprob: -2.9119961261749268
    4. ' while' → logprob: -3.0369961261749268
    5. 'n' → logprob: -3.1619961261749268
    6. '+' → logprob: -3.4119961261749268
    7. 'for' → logprob: -5.036996364593506
    8. ',' → logprob: -5.161996364593506
    9. '<len' → logprob: -5.786996364593506
    10. 'i' → logprob: -5.786996364593506

Token 61: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3137495219707489
    2. ' =' → logprob: -1.3137495517730713
    3. '=n' → logprob: -7.938749313354492
    4. '=int' → logprob: -10.438749313354492
    5. '=len' → logprob: -10.563749313354492
    6. '=i' → logprob: -11.063749313354492
    7. ',' → logprob: -11.313749313354492
    8. '=w' → logprob: -12.063749313354492
    9. ' ' → logprob: -12.313749313354492
    10. '<|end|>' → logprob: -12.313749313354492

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'it' (ID: 278)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '=L' (ID: 170129)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.316882461309433
    2. 'er' → logprob: -1.3168824911117554
    3. ' =' → logprob: -6.191882610321045
    4. 'ertools' → logprob: -7.316882610321045
    5. '=i' → logprob: -7.566882610321045
    6. '=len' → logprob: -9.816882133483887
    7. '=None' → logprob: -10.066882133483887
    8. 'e' → logprob: -10.066882133483887
    9. '=index' → logprob: -10.191882133483887
    10. '=e' → logprob: -10.941882133483887

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3505252003669739
    2. '[:]' → logprob: -1.600525140762329
    3. '.copy' → logprob: -3.850525140762329
    4. '[::-' → logprob: -3.975525140762329
    5. '[:' → logprob: -4.350525379180908
    6. 'ter' → logprob: -4.725525379180908
    7. '[:-' → logprob: -5.225525379180908
    8. '[len' → logprob: -5.350525379180908
    9. '.__' → logprob: -5.350525379180908
    10. '[i' → logprob: -5.975525379180908

Token 66: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08220736682415009
    2. '0' → logprob: -3.332207441329956
    3. ':' → logprob: -4.332207202911377
    4. ':]' → logprob: -4.707207202911377
    5. 'i' → logprob: -4.832207202911377
    6. ']' → logprob: -5.582207202911377
    7. ')' → logprob: -6.207207202911377
    8. 'M' → logprob: -6.332207202911377
    9. 'j' → logprob: -7.082207202911377
    10. '2' → logprob: -7.207207202911377

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049826398491859436
    2. ':]' → logprob: -3.4248263835906982
    3. ' ]' → logprob: -5.174826622009277
    4. ']==' → logprob: -5.924826622009277
    5. ':' → logprob: -6.299826622009277
    6. '])' → logprob: -6.674826622009277
    7. ']
' → logprob: -7.174826622009277
    8. ':j' → logprob: -7.424826622009277
    9. ' :]' → logprob: -7.799826622009277
    10. ':i' → logprob: -7.799826622009277

Token 68: 'k' (ID: 74)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.071991205215454
    2. 'while' → logprob: -2.071991205215454
    3. '<|end|>' → logprob: -2.321991205215454
    4. 'i' → logprob: -2.446991205215454
    5. 's' → logprob: -2.446991205215454
    6. ' for' → logprob: -2.946991205215454
    7. 'w' → logprob: -3.321991205215454
    8. ':' → logprob: -3.696991205215454
    9. 'e' → logprob: -3.821991205215454
    10. 't' → logprob: -4.071990966796875

Token 69: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004932258743792772
    2. ' =' → logprob: -5.879932403564453
    3. '=i' → logprob: -6.754932403564453
    4. '=None' → logprob: -7.629932403564453
    5. '=j' → logprob: -9.504932403564453
    6. '+=' → logprob: -9.504932403564453
    7. '=k' → logprob: -9.629932403564453
    8. '=int' → logprob: -10.004932403564453
    9. '=w' → logprob: -10.129932403564453
    10. '=-' → logprob: -10.254932403564453

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08662085235118866
    2. '1' → logprob: -3.211620807647705
    3. ' ' → logprob: -4.086620807647705
    4. 'M' → logprob: -4.711620807647705
    5. 'w' → logprob: -5.336620807647705
    6. 'i' → logprob: -5.336620807647705
    7. '-' → logprob: -6.211620807647705
    8. 'len' → logprob: -6.336620807647705
    9. 'n' → logprob: -6.711620807647705
    10. 'e' → logprob: -7.336620807647705

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' True' (ID: 6432)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6344466805458069
    2. ' i' → logprob: -0.8844466805458069
    3. ' k' → logprob: -3.384446620941162
    4. 'j' → logprob: -5.009446620941162
    5. 'i' → logprob: -5.384446620941162
    6. ' ' → logprob: -6.009446620941162
    7. ' True' → logprob: -6.009446620941162
    8. ' e' → logprob: -6.384446620941162
    9. ' w' → logprob: -6.509446620941162
    10. ' n' → logprob: -6.634446620941162

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001671015052124858
    2. ':
' → logprob: -7.001670837402344
    3. ' :' → logprob: -7.251670837402344
    4. '   ' → logprob: -10.876670837402344
    5. ' :
' → logprob: -11.251670837402344
    6. ' and' → logprob: -11.626670837402344
    7. ',' → logprob: -13.251670837402344
    8. '<|end|>' → logprob: -13.501670837402344
    9. ':

' → logprob: -13.751670837402344
    10. ' ' → logprob: -13.751670837402344

Token 75: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4088637828826904
    2. ' j' → logprob: -1.4088637828826904
    3. '   ' → logprob: -1.5338637828826904
    4. ' i' → logprob: -2.1588637828826904
    5. ' k' → logprob: -3.0338637828826904
    6. 'i' → logprob: -3.1588637828826904
    7. 'k' → logprob: -3.4088637828826904
    8. ':' → logprob: -4.1588640213012695
    9. ' ' → logprob: -4.5338640213012695
    10. ' True' → logprob: -5.5338640213012695

Token 76: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2047401666641235
    2. ' i' → logprob: -1.3297401666641235
    3. 'j' → logprob: -1.9547401666641235
    4. 'k' → logprob: -1.9547401666641235
    5. ' j' → logprob: -2.579740047454834
    6. ' k' → logprob: -3.329740047454834
    7. ' True' → logprob: -3.954740047454834
    8. '   ' → logprob: -4.579740047454834
    9. 'True' → logprob: -5.704740047454834
    10. ' if' → logprob: -6.079740047454834

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6991368532180786
    2. ' j' → logprob: -1.5741368532180786
    3. ' k' → logprob: -1.6991368532180786
    4. 'i' → logprob: -3.324136734008789
    5. 'j' → logprob: -3.824136734008789
    6. 'k' → logprob: -3.949136734008789
    7. ' ' → logprob: -4.324136734008789
    8. ' w' → logprob: -5.074136734008789
    9. ' L' → logprob: -5.449136734008789
    10. ' e' → logprob: -5.699136734008789

Token 78: '>=' (ID: 20974)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5693499445915222
    2. '<len' → logprob: -1.444350004196167
    3. '>=' → logprob: -2.319350004196167
    4. '<n' → logprob: -2.819350004196167
    5. ' <' → logprob: -3.569350004196167
    6. '==' → logprob: -4.944349765777588
    7. ' >=' → logprob: -6.194349765777588
    8. ' ==' → logprob: -7.569349765777588
    9. '<=' → logprob: -7.694349765777588
    10. ' ' → logprob: -7.694349765777588

Token 79: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2550020217895508
    2. 'len' → logprob: -1.5050020217895508
    3. ' n' → logprob: -6.130002021789551
    4. ' len' → logprob: -7.380002021789551
    5. '   ' → logprob: -8.75500202178955
    6. ' ' → logprob: -10.13000202178955
    7. 'M' → logprob: -11.75500202178955
    8. '(len' → logprob: -12.00500202178955
    9. 'k' → logprob: -12.19250202178955
    10. 'j' → logprob: -12.31750202178955

Token 80: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -5.180879816180095e-05
    2. 'L' → logprob: -10.125051498413086
    3. '(S' → logprob: -11.750051498413086
    4. '(' → logprob: -13.250051498413086
    5. ' L' → logprob: -13.750051498413086
    6. ' (' → logprob: -14.625051498413086
    7. ')L' → logprob: -16.250051498413086
    8. ')' → logprob: -16.500051498413086
    9. '(M' → logprob: -17.000051498413086
    10. '(
' → logprob: -17.375051498413086

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22969022393226624
    2. ')' → logprob: -1.6046901941299438
    3. '):
' → logprob: -5.979690074920654
    4. ' ):' → logprob: -6.979690074920654
    5. ' or' → logprob: -7.354690074920654
    6. ' )' → logprob: -9.354690551757812
    7. '):

' → logprob: -10.604690551757812
    8. ':' → logprob: -11.479690551757812
    9. 'or' → logprob: -11.604690551757812
    10. '):
' → logprob: -12.354690551757812

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6446208357810974
    2. '   ' → logprob: -0.7696208357810974
    3. ' or' → logprob: -5.269620895385742
    4. ' break' → logprob: -5.894620895385742
    5. ':' → logprob: -6.019620895385742
    6. ' ' → logprob: -7.644620895385742
    7. ' if' → logprob: -8.394620895385742
    8. ':
' → logprob: -8.644620895385742
    9. '	break' → logprob: -9.019620895385742
    10. ' and' → logprob: -9.144620895385742

Token 83: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.20052409172058105
    2. '   ' → logprob: -2.325524091720581
    3. '       ' → logprob: -2.575524091720581
    4. 'break' (adapté à ' break') → logprob: -5.32552433013916
    5. '```' → logprob: -7.07552433013916
    6. ' k' → logprob: -7.20052433013916
    7. '	break' → logprob: -8.07552433013916
    8. ' if' → logprob: -8.32552433013916
    9. ' j' → logprob: -8.70052433013916
    10. ' ' → logprob: -9.07552433013916

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03413211926817894
    2. '<|end|>' → logprob: -3.6591320037841797
    3. '  
' → logprob: -5.78413200378418
    4. ' 
' → logprob: -6.15913200378418
    5. '    
' → logprob: -7.03413200378418
    6. '\n' → logprob: -7.28413200378418
    7. '   
' → logprob: -8.65913200378418
    8. '<|end|>' → logprob: -9.03413200378418
    9. '+' → logprob: -9.15913200378418
    10. '
' → logprob: -9.28413200378418

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5828880667686462
    2. ' if' → logprob: -1.707888126373291
    3. '   ' → logprob: -2.332888126373291
    4. '    
' → logprob: -2.582888126373291
    5. ' 
' → logprob: -3.207888126373291
    6. '  
' → logprob: -4.332888126373291
    7. '   
' → logprob: -4.457888126373291
    8. '\n' → logprob: -5.207888126373291
    9. 's' → logprob: -5.582888126373291
    10. 'if' → logprob: -5.707888126373291

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.477349191904068
    2. ' 
' → logprob: -1.9773491621017456
    3. '   ' → logprob: -2.352349281311035
    4. '
' → logprob: -2.977349281311035
    5. ' ch' → logprob: -3.727349281311035
    6. '    
' → logprob: -3.727349281311035
    7. '  
' → logprob: -4.227349281311035
    8. ' ' → logprob: -4.602349281311035
    9. 'ch' → logprob: -5.602349281311035
    10. 'if' (adapté à ' if') → logprob: -5.852349281311035

Token 87: ' it' (ID: 480)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.028285635635256767
    2. ' it' → logprob: -4.278285503387451
    3. 'L' → logprob: -4.778285503387451
    4. ' k' → logprob: -6.528285503387451
    5. ' ' → logprob: -6.778285503387451
    6. ' w' → logprob: -7.153285503387451
    7. ' i' → logprob: -7.153285503387451
    8. 'it' → logprob: -7.528285503387451
    9. ' j' → logprob: -8.02828598022461
    10. '  ' → logprob: -9.27828598022461

Token 88: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.6401807069778442
    2. '==' → logprob: -0.7651807069778442
    3. ' ==' → logprob: -5.515180587768555
    4. '!=' → logprob: -6.015180587768555
    5. '!='' → logprob: -7.640180587768555
    6. '=="' → logprob: -8.015180587768555
    7. ' =='' → logprob: -8.765180587768555
    8. ' !=' → logprob: -9.890180587768555
    9. '==
' → logprob: -11.390180587768555
    10. '=' → logprob: -11.640180587768555

Token 89: 'W' (ID: 54)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3263804316520691
    2. 'W' → logprob: -1.4513804912567139
    3. 'S' → logprob: -3.576380491256714
    4. 'N' → logprob: -4.451380252838135
    5. ''E' → logprob: -6.826380252838135
    6. 'L' → logprob: -6.951380252838135
    7. 'Q' → logprob: -7.826380252838135
    8. 'P' → logprob: -8.076380729675293
    9. 'F' → logprob: -8.326380729675293
    10. ''' → logprob: -8.701380729675293

Token 90: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4106781482696533
    2. '':' → logprob: -1.1606781482696533
    3. '':
' → logprob: -4.160677909851074
    4. ' and' → logprob: -5.160677909851074
    5. ':' → logprob: -7.410677909851074
    6. ' '' → logprob: -7.785677909851074
    7. 'and' → logprob: -7.785677909851074
    8. ' ':' → logprob: -8.660677909851074
    9. '':
' → logprob: -9.035677909851074
    10. ''s' → logprob: -9.160677909851074

Token 91: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08835560828447342
    2. ':
' → logprob: -3.338355541229248
    3. ':' → logprob: -3.713355541229248
    4. '       ' → logprob: -4.588355541229248
    5. '   ' → logprob: -4.963355541229248
    6. 'and' → logprob: -6.213355541229248
    7. 'e' → logprob: -6.338355541229248
    8. '    ' → logprob: -6.463355541229248
    9. '      ' → logprob: -8.463356018066406
    10. ' ' → logprob: -8.463356018066406

Token 92: ' w' (ID: 286)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6421178579330444
    2. ' if' → logprob: -1.1421178579330444
    3. 'i' → logprob: -3.017117977142334
    4. 'k' → logprob: -3.267117977142334
    5. 'w' (adapté à ' w') → logprob: -3.517117977142334
    6. 'e' → logprob: -4.392117977142334
    7. 'j' → logprob: -4.392117977142334
    8. '   ' → logprob: -5.517117977142334
    9. ' i' → logprob: -5.517117977142334
    10. ' w' → logprob: -6.767117977142334

Token 93: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.025068018585443497
    2. '-=' → logprob: -3.9000680446624756
    3. ' +=' → logprob: -5.7750678062438965
    4. '=' → logprob: -7.5250678062438965
    5. '+' → logprob: -7.9000678062438965
    6. '-' → logprob: -8.650068283081055
    7. '>' → logprob: -8.900068283081055
    8. ' -=' → logprob: -9.275068283081055
    9. '+=(' → logprob: -10.900068283081055
    10. '==' → logprob: -11.400068283081055

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011677479778882116
    2. ' ' → logprob: -9.375116348266602
    3. 'k' → logprob: -10.500116348266602
    4. 'M' → logprob: -14.125116348266602
    5. '2' → logprob: -14.125116348266602
    6. 'e' → logprob: -14.625116348266602
    7. '-' → logprob: -14.750116348266602
    8. '0' → logprob: -14.812616348266602
    9. ' k' → logprob: -15.125116348266602
    10. 'j' → logprob: -15.250116348266602

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03181571513414383
    2. '<|end|>' → logprob: -4.156815528869629
    3. '       ' → logprob: -5.031815528869629
    4. '   ' → logprob: -5.281815528869629
    5. '    
' → logprob: -6.906815528869629
    6. '  
' → logprob: -7.031815528869629
    7. ' 
' → logprob: -7.281815528869629
    8. '<|end|>' → logprob: -7.781815528869629
    9. '        
' → logprob: -8.156815528869629
    10. 'elif' → logprob: -9.031815528869629

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23151905834674835
    2. '<|end|>' → logprob: -2.2315189838409424
    3. '   ' → logprob: -2.9815189838409424
    4. '       ' → logprob: -3.4815189838409424
    5. '<|end|>' → logprob: -5.6065192222595215
    6. '    
' → logprob: -5.6065192222595215
    7. ' elif' → logprob: -6.2315192222595215
    8. 'elif' → logprob: -6.3565192222595215
    9. '  
' → logprob: -6.6065192222595215
    10. ' else' → logprob: -6.7315192222595215

Token 97: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25771963596343994
    2. 'elif' → logprob: -2.1327195167541504
    3. ' else' → logprob: -3.2577195167541504
    4. 'else' → logprob: -3.3827195167541504
    5. ' elif' → logprob: -3.5077195167541504
    6. '<|end|>' → logprob: -6.50771951675415
    7. 'if' → logprob: -7.00771951675415
    8. ' if' → logprob: -7.25771951675415
    9. '  ' → logprob: -7.38271951675415
    10. 'i' → logprob: -7.63271951675415

Token 98: '=L' (ID: 170129)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012832103529945016
    2. '='' → logprob: -7.126283168792725
    3. ' =' → logprob: -8.126283645629883
    4. '=''' → logprob: -9.501283645629883
    5. '==' → logprob: -9.751283645629883
    6. 'else' → logprob: -12.001283645629883
    7. ' '='' → logprob: -12.001283645629883
    8. '=='' → logprob: -12.376283645629883
    9. '!='' → logprob: -12.751283645629883
    10. '!=' → logprob: -12.751283645629883

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.453737710718997e-05
    2. '[j' → logprob: -10.125044822692871
    3. '[' → logprob: -12.375044822692871
    4. '[k' → logprob: -16.625043869018555
    5. 'i' → logprob: -17.875043869018555
    6. '```' → logprob: -19.000043869018555
    7. '[I' → logprob: -19.000043869018555
    8. '[
' → logprob: -19.125043869018555
    9. '[ch' → logprob: -19.375043869018555
    10. '[index' → logprob: -19.500043869018555

Token 100: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001458927639760077
    2. ']
' → logprob: -6.626459121704102
    3. ' ]' → logprob: -9.001459121704102
    4. '+' → logprob: -13.126459121704102
    5. ']

' → logprob: -13.626459121704102
    6. '<|end|>' → logprob: -13.626459121704102
    7. ']==' → logprob: -13.876459121704102
    8. '']' → logprob: -13.876459121704102
    9. '   ' → logprob: -14.376459121704102
    10. '+]' → logprob: -14.876459121704102

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017368001863360405
    2. '<|end|>' → logprob: -4.767367839813232
    3. 'i' → logprob: -5.267367839813232
    4. ' i' → logprob: -5.767367839813232
    5. '<|end|>' → logprob: -9.14236831665039
    6. '[i' → logprob: -9.26736831665039
    7. ' if' → logprob: -9.64236831665039
    8. '    
' → logprob: -10.26736831665039
    9. '    ' → logprob: -11.14236831665039
    10. ')' → logprob: -11.14236831665039

Token 102: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006570653524249792
    2. ' i' → logprob: -5.256570816040039
    3. 'if' (adapté à ' if') → logprob: -7.256570816040039
    4. '   ' → logprob: -7.881570816040039
    5. ' if' → logprob: -8.506570816040039
    6. '<|end|>' → logprob: -10.256570816040039
    7. 'e' → logprob: -12.006570816040039
    8. ' ' → logprob: -13.256570816040039
    9. '    ' → logprob: -13.631570816040039
    10. '  ' → logprob: -13.756570816040039

Token 103: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.14644081890583038
    2. ' L' → logprob: -2.5214407444000244
    3. 'it' → logprob: -3.7714407444000244
    4. 'L' → logprob: -4.2714409828186035
    5. ' w' → logprob: -4.3964409828186035
    6. ' ' → logprob: -6.7714409828186035
    7. 'w' → logprob: -6.8964409828186035
    8. ' j' → logprob: -6.8964409828186035
    9. ' i' → logprob: -6.8964409828186035
    10. ' k' → logprob: -7.1464409828186035

Token 104: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.01698225550353527
    2. '==' → logprob: -4.266982078552246
    3. ' ==' → logprob: -6.266982078552246
    4. ' =='' → logprob: -7.391982078552246
    5. ''' → logprob: -9.141982078552246
    6. '=="' → logprob: -9.641982078552246
    7. '!='' → logprob: -9.766982078552246
    8. '='' → logprob: -10.891982078552246
    9. '==
' → logprob: -11.141982078552246
    10. ']=='' → logprob: -11.516982078552246

Token 105: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.23895259201526642
    2. 'W' → logprob: -1.73895263671875
    3. ''E' → logprob: -3.48895263671875
    4. ''' → logprob: -5.36395263671875
    5. 'N' → logprob: -7.73895263671875
    6. 'S' → logprob: -8.36395263671875
    7. ' E' → logprob: -8.55145263671875
    8. '"E' → logprob: -9.48895263671875
    9. ' W' → logprob: -9.61395263671875
    10. ''S' → logprob: -9.73895263671875

Token 106: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6496202349662781
    2. '':
' → logprob: -0.7746202349662781
    3. ''' → logprob: -4.149620056152344
    4. ' '' → logprob: -7.899620056152344
    5. ':' → logprob: -8.274620056152344
    6. '':
' → logprob: -9.149620056152344
    7. '       ' → logprob: -9.274620056152344
    8. '   ' → logprob: -9.774620056152344
    9. ' ':' → logprob: -9.899620056152344
    10. ':
' → logprob: -10.024620056152344

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036156948655843735
    2. ' e' → logprob: -4.286157131195068
    3. 'e' → logprob: -5.036157131195068
    4. ' w' → logprob: -5.161157131195068
    5. 'j' → logprob: -6.036157131195068
    6. 'w' → logprob: -6.661157131195068
    7. ' k' → logprob: -6.786157131195068
    8. ' j' → logprob: -7.036157131195068
    9. ':
' → logprob: -7.161157131195068
    10. ':' → logprob: -7.161157131195068

Token 108: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.2798808515071869
    2. 'e' (adapté à ' e') → logprob: -1.9048808813095093
    3. ' w' → logprob: -2.9048807621002197
    4. 'w' → logprob: -4.279881000518799
    5. ' k' → logprob: -4.779881000518799
    6. '       ' → logprob: -5.029881000518799
    7. 'k' → logprob: -5.529881000518799
    8. 'j' → logprob: -6.029881000518799
    9. ' j' → logprob: -6.029881000518799
    10. '           ' → logprob: -7.029881000518799

Token 109: '-=' (ID: 77519)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0017540723783895373
    2. ' +=' → logprob: -6.501754283905029
    3. '+' → logprob: -8.751753807067871
    4. '=' → logprob: -10.126753807067871
    5. '-=' → logprob: -10.126753807067871
    6. ']+=' → logprob: -12.251753807067871
    7. '   ' → logprob: -12.501753807067871
    8. '+='' → logprob: -13.376753807067871
    9. '<|end|>' → logprob: -13.751753807067871
    10. '+=(' → logprob: -14.626753807067871

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '0' → logprob: -16.750001907348633
    5. '       ' → logprob: -16.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. '  ' → logprob: -18.812501907348633
    8. '<|end|>' → logprob: -18.937501907348633
    9. '
' → logprob: -19.500001907348633
    10. '１' → logprob: -19.687501907348633

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7411013245582581
    2. '   ' → logprob: -0.9911013245582581
    3. 'i' → logprob: -2.4911012649536133
    4. '<|end|>' → logprob: -2.9911012649536133
    5. ' i' → logprob: -4.241101264953613
    6. '    
' → logprob: -6.741101264953613
    7. '<|end|>' → logprob: -7.491101264953613
    8. 'k' → logprob: -7.991101264953613
    9. 'j' → logprob: -7.991101264953613
    10. '```' → logprob: -7.991101264953613

Token 113: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6943617463111877
    2. 'i' → logprob: -0.8193617463111877
    3. '<|end|>' → logprob: -3.569361686706543
    4. '   ' → logprob: -4.569361686706543
    5. 'j' → logprob: -5.444361686706543
    6. 'k' → logprob: -5.569361686706543
    7. ' ' → logprob: -5.819361686706543
    8. '
' → logprob: -6.069361686706543
    9. ' if' → logprob: -6.694361686706543
    10. '    ' → logprob: -6.694361686706543

Token 114: '=w' (ID: 147163)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3885343074798584
    2. '=i' → logprob: -1.5135343074798584
    3. '+=' → logprob: -2.3885343074798584
    4. '=k' → logprob: -5.8885345458984375
    5. '=int' → logprob: -6.2635345458984375
    6. ' =' → logprob: -6.5135345458984375
    7. '=x' → logprob: -6.6385345458984375
    8. '=j' → logprob: -6.6385345458984375
    9. ' +=' → logprob: -8.638534545898438
    10. '==' → logprob: -8.638534545898438

Token 115: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26087668538093567
    2. '-' → logprob: -1.7608766555786133
    3. '-k' → logprob: -3.8858766555786133
    4. '<|end|>' → logprob: -4.885876655578613
    5. '+k' → logprob: -4.885876655578613
    6. '>' → logprob: -5.260876655578613
    7. '+=' → logprob: -5.635876655578613
    8. '=' → logprob: -6.010876655578613
    9. '-e' → logprob: -6.260876655578613
    10. ' -' → logprob: -6.510876655578613

Token 116: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09732970595359802
    2. 'M' → logprob: -2.597329616546631
    3. 'k' → logprob: -4.222329616546631
    4. ' e' → logprob: -6.597329616546631
    5. '(M' → logprob: -7.472329616546631
    6. '1' → logprob: -7.722329616546631
    7. '(e' → logprob: -8.097330093383789
    8. ' M' → logprob: -8.347330093383789
    9. '(k' → logprob: -8.472330093383789
    10. 'w' → logprob: -9.472330093383789

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001091639045625925
    2. '<|end|>' → logprob: -7.126091480255127
    3. ' if' → logprob: -9.001091957092285
    4. '<|end|>' → logprob: -10.376091957092285
    5. 'if' → logprob: -10.501091957092285
    6. ',' → logprob: -10.626091957092285
    7. '    
' → logprob: -10.751091957092285
    8. '
' → logprob: -11.376091957092285
    9. ')' → logprob: -11.501091957092285
    10. ':' → logprob: -12.001091957092285

Token 119: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6882212162017822
    2. '   ' → logprob: -0.8132212162017822
    3. ' if' → logprob: -2.9382212162017822
    4. '<|end|>' → logprob: -7.938220977783203
    5. ' ' → logprob: -8.813220977783203
    6. '    
' → logprob: -8.938220977783203
    7. '  ' → logprob: -9.563220977783203
    8. 'i' → logprob: -9.688220977783203
    9. '  
' → logprob: -10.063220977783203
    10. '	if' → logprob: -10.188220977783203

Token 120: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25280889868736267
    2. 'x' → logprob: -1.502808928489685
    3. ' k' → logprob: -8.377808570861816
    4. ' j' → logprob: -8.627808570861816
    5. 'j' → logprob: -9.002808570861816
    6. 'k' → logprob: -9.377808570861816
    7. ' (' → logprob: -9.752808570861816
    8. ' M' → logprob: -10.002808570861816
    9. ' ' → logprob: -10.127808570861816
    10. ' w' → logprob: -10.377808570861816

Token 121: '<M' (ID: 59431)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0491262711584568
    2. ' >' → logprob: -3.049126386642456
    3. '>=' → logprob: -8.424126625061035
    4. '>x' → logprob: -8.674126625061035
    5. '<' → logprob: -9.674126625061035
    6. ' ' → logprob: -10.924126625061035
    7. ' >=' → logprob: -11.049126625061035
    8. ' <' → logprob: -11.799126625061035
    9. '>w' → logprob: -11.924126625061035
    10. '==' → logprob: -12.299126625061035

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6945591568946838
    2. ':
' → logprob: -0.6945591568946838
    3. '       ' → logprob: -7.194559097290039
    4. '   ' → logprob: -7.944559097290039
    5. '):
' → logprob: -8.569559097290039
    6. '<|end|>' → logprob: -10.444559097290039
    7. '<|end|>' → logprob: -10.694559097290039
    8. ':

' → logprob: -11.694559097290039
    9. ',' → logprob: -11.694559097290039
    10. ' and' → logprob: -11.819559097290039

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007370850071310997
    2. '   ' → logprob: -8.000737190246582
    3. 'j' → logprob: -8.125737190246582
    4. 'k' → logprob: -10.125737190246582
    5. '```' → logprob: -10.625737190246582
    6. ' j' → logprob: -11.250737190246582
    7. 'M' → logprob: -11.875737190246582
    8. '           ' → logprob: -12.125737190246582
    9. '
' → logprob: -13.125737190246582
    10. ' k' → logprob: -13.250737190246582

Token 124: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.001320596318691969
    2. ' M' → logprob: -7.8763203620910645
    3. '       ' → logprob: -7.8763203620910645
    4. 'x' → logprob: -8.376320838928223
    5. 'j' → logprob: -9.126320838928223
    6. 'k' → logprob: -9.126320838928223
    7. '   ' → logprob: -9.751320838928223
    8. '
' → logprob: -10.751320838928223
    9. '<|end|>' → logprob: -11.126320838928223
    10. '<|end|>' → logprob: -12.251320838928223

Token 125: '=x' (ID: 56980)
  Prédit: '=x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=x' → logprob: -0.3310459554195404
    2. '=' → logprob: -1.5810459852218628
    3. ' =' → logprob: -2.5810458660125732
    4. '=j' → logprob: -8.831046104431152
    5. '=k' → logprob: -9.331046104431152
    6. '=i' → logprob: -9.331046104431152
    7. ',x' → logprob: -11.331046104431152
    8. ',' → logprob: -11.706046104431152
    9. '=y' → logprob: -12.456046104431152
    10. '=int' → logprob: -12.831046104431152

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010538602247834206
    2. 'j' → logprob: -4.635538578033447
    3. ' j' → logprob: -7.260538578033447
    4. ',' → logprob: -10.760539054870605
    5. '   ' → logprob: -11.010539054870605
    6. '
' → logprob: -11.385539054870605
    7. ',j' → logprob: -11.885539054870605
    8. '	j' → logprob: -12.260539054870605
    9. '```' → logprob: -12.510539054870605
    10. 'n' → logprob: -13.260539054870605

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014635397121310234
    2. 'j' → logprob: -4.2646355628967285
    3. '   ' → logprob: -8.01463508605957
    4. ' j' → logprob: -9.13963508605957
    5. '```' → logprob: -11.51463508605957
    6. '	j' → logprob: -12.01463508605957
    7. '
' → logprob: -12.51463508605957
    8. ',' → logprob: -12.51463508605957
    9. ',j' → logprob: -12.88963508605957
    10. 'k' → logprob: -13.01463508605957

Token 128: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -1.3902033970225602e-05
    2. ' j' → logprob: -11.875014305114746
    3. '   ' → logprob: -12.625014305114746
    4. 'i' → logprob: -12.750014305114746
    5. '	j' → logprob: -14.750014305114746
    6. 'k' → logprob: -15.250014305114746
    7. '_j' → logprob: -17.00001335144043
    8. '
' → logprob: -17.12501335144043
    9. '```' → logprob: -17.62501335144043
    10. '  ' → logprob: -17.75001335144043

Token 129: '=i' (ID: 48141)
  Prédit: '=i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.47409316897392273
    2. '=' → logprob: -0.9740931987762451
    3. ' =' → logprob: -11.724093437194824
    4. '=j' → logprob: -11.974093437194824
    5. '=k' → logprob: -14.224093437194824
    6. '=
' → logprob: -15.849093437194824
    7. '=w' → logprob: -15.974093437194824
    8. '=int' → logprob: -16.349092483520508
    9. '=u' → logprob: -16.349092483520508
    10. '=n' → logprob: -16.474092483520508

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005200279993005097
    2. '
' → logprob: -9.000519752502441
    3. '<|end|>' → logprob: -9.000519752502441
    4. ' i' → logprob: -9.375519752502441
    5. '    
' → logprob: -10.000519752502441
    6. '  
' → logprob: -10.500519752502441
    7. '<|end|>' → logprob: -10.500519752502441
    8. '  ' → logprob: -10.750519752502441
    9. 'i' → logprob: -10.875519752502441
    10. ' 
' → logprob: -11.250519752502441

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.100355364382267
    2. 'i' → logprob: -2.350355386734009
    3. ' i' → logprob: -8.85035514831543
    4. '	i' → logprob: -12.47535514831543
    5. '    
' → logprob: -14.60035514831543
    6. '       ' → logprob: -14.85035514831543
    7. '```' → logprob: -15.22535514831543
    8. '
' → logprob: -16.22535514831543
    9. '        
' → logprob: -16.47535514831543
    10. '++' → logprob: -16.47535514831543

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -2.2246291337069124e-05
    2. '   ' → logprob: -11.250021934509277
    3. ' i' → logprob: -11.625021934509277
    4. 'if' → logprob: -16.375022888183594
    5. '	i' → logprob: -16.375022888183594
    6. '    
' → logprob: -17.500022888183594
    7. '
' → logprob: -18.000022888183594
    8. '  ' → logprob: -18.000022888183594
    9. '```' → logprob: -18.625022888183594
    10. 'k' → logprob: -19.250022888183594

Token 133: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38885340094566345
    2. '+' → logprob: -1.1388534307479858
    3. ' +=' → logprob: -6.263853549957275
    4. '++' → logprob: -10.013853073120117
    5. '=' → logprob: -11.263853073120117
    6. '+++' → logprob: -12.013853073120117
    7. '+="' → logprob: -12.138853073120117
    8. '+='' → logprob: -12.138853073120117
    9. '<|end|>' → logprob: -14.388853073120117
    10. ']+=' → logprob: -14.763853073120117

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -22.375
    5. '+' → logprob: -22.875
    6. '１' → logprob: -24.0
    7. '
' → logprob: -24.25
    8. '`' → logprob: -24.5
    9. '-' → logprob: -24.5625
    10. '  ' → logprob: -24.75

Token 135: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00503925234079361
    2. 'if' → logprob: -5.380039215087891
    3. '<|end|>' → logprob: -8.13003921508789
    4. ' print' → logprob: -10.00503921508789
    5. '#' → logprob: -10.38003921508789
    6. 'return' → logprob: -11.13003921508789
    7. ' if' → logprob: -11.38003921508789
    8. '#print' → logprob: -12.38003921508789
    9. 'n' → logprob: -12.75503921508789
    10. 'i' → logprob: -13.13003921508789

Token 136: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08194204419851303
    2. '<|end|>' → logprob: -2.956942081451416
    3. '#' → logprob: -4.581942081451416
    4. ')' → logprob: -5.206942081451416
    5. 'if' → logprob: -5.331942081451416
    6. 'return' → logprob: -5.956942081451416
    7. 'k' → logprob: -7.956942081451416
    8. 'n' → logprob: -8.206941604614258
    9. ' ' → logprob: -8.206941604614258
    10. 'w' → logprob: -8.331941604614258

Token 137: '(M' (ID: 6103)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.004267865791916847
    2. '(' → logprob: -5.754267692565918
    3. '(M' → logprob: -7.129267692565918
    4. '()' → logprob: -8.754267692565918
    5. '('' → logprob: -9.629267692565918
    6. '(L' → logprob: -10.504267692565918
    7. '((' → logprob: -11.504267692565918
    8. 'j' → logprob: -11.754267692565918
    9. '("' → logprob: -11.879267692565918
    10. '(i' → logprob: -13.004267692565918

Token 138: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3919212818145752
    2. ',j' → logprob: -1.1419212818145752
    3. ')' → logprob: -5.391921043395996
    4. ' ,' → logprob: -7.891921043395996
    5. ',end' → logprob: -9.391921043395996
    6. ')
' → logprob: -11.266921043395996
    7. ' )' → logprob: -12.766921043395996
    8. ' j' → logprob: -13.016921043395996
    9. 'j' → logprob: -13.266921043395996
    10. ',
' → logprob: -13.516921043395996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 136
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 40.44%
Précision (top 10): 73.53%
================================================================================
