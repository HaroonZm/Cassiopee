================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import sys
import math
from functools import lru_cache
from queue import Queue
from operator import mul
from functools import reduce

def read_input_line():
    return sys.stdin.readline()

def parse_ints_from_input():
    return list(map(int, read_input_line().split()))

def parse_list():
    return list(map(int, read_input_line().split()))

def parse_and_sort_list():
    lst = parse_list()
    lst.sort(reverse=True)
    return lst

def gather_inputs():
    x, y, z, kk = parse_ints_from_input()
    a = parse_and_sort_list()
    b = parse_and_sort_list()
    c = parse_and_sort_list()
    return x, y, z, kk, a, b, c

def should_break_i_j(i, j, kk):
    return i * j > kk

def should_break_i_j_k(i, j, k, kk):
    return i * j * k > kk

def sum_combinations(a, b, c, kk):
    ll = []
    count = 0
    for i in range(len(a)):
        for j in range(len(b)):
            if should_break_i_j(i, j, kk):
                break
            for k in range(len(c)):
                if should_break_i_j_k(i, j, k, kk):
                    break
                ll.append(compute_sum(a, b, c, i, j, k))
    return ll

def compute_sum(a, b, c, i, j, k):
    return a[i] + b[j] + c[k]

def sort_list_desc(lst):
    lst.sort(reverse=True)
    return lst

def print_top_k_elements(lst, k):
    for i in range(k):
        print(lst[i])

def main():
    x, y, z, kk, a, b, c = gather_inputs()
    ll = sum_combinations(a, b, c, kk)
    ll = sort_list_desc(ll)
    print_top_k_elements(ll, kk)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.619311974034645e-05
    2. '\' → logprob: -11.500036239624023
    3. '```' → logprob: -12.750036239624023
    4. '(' → logprob: -13.000036239624023
    5. 'import' → logprob: -13.250036239624023
    6. '\.' → logprob: -13.375036239624023
    7. '.experimental' → logprob: -13.500036239624023
    8. '.period' → logprob: -13.625036239624023
    9. '.import' → logprob: -13.625036239624023
    10. '.​' → logprob: -13.625036239624023

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8327421545982361
    2. ' math' → logprob: -1.3327422142028809
    3. ' os' → logprob: -2.082742214202881
    4. ' collections' → logprob: -2.332742214202881
    5. ' functools' → logprob: -2.832742214202881
    6. ' operator' → logprob: -5.082742214202881
    7. 'os' → logprob: -5.207742214202881
    8. 'collections' → logprob: -6.207742214202881
    9. 'sys' → logprob: -6.332742214202881
    10. 'math' → logprob: -6.707742214202881

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06805732846260071
    2. '\n' → logprob: -3.5680572986602783
    3. '\' → logprob: -3.9430572986602783
    4. '```' → logprob: -5.318057537078857
    5. '
' → logprob: -5.693057537078857
    6. 'import' → logprob: -5.818057537078857
    7. '

' → logprob: -6.443057537078857
    8. ',' → logprob: -6.693057537078857
    9. '<|end|>' → logprob: -7.318057537078857
    10. '[' → logprob: -7.443057537078857

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030691243708133698
    2. '\n' → logprob: -4.155691146850586
    3. '```' → logprob: -5.780691146850586
    4. '\' → logprob: -6.155691146850586
    5. '
' → logprob: -6.155691146850586
    6. '[' → logprob: -6.655691146850586
    7. '<|end|>' → logprob: -6.905691146850586
    8. 'import' → logprob: -7.030691146850586
    9. ',' → logprob: -7.280691146850586
    10. '.
' → logprob: -7.405691146850586

Token 7: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03554496541619301
    2. 'os' → logprob: -3.4105448722839355
    3. ' collections' → logprob: -6.6605448722839355
    4. ' math' → logprob: -7.7855448722839355
    5. 'collections' → logprob: -9.535545349121094
    6. ' io' → logprob: -10.660545349121094
    7. ' functools' → logprob: -10.785545349121094
    8. ' argparse' → logprob: -10.785545349121094
    9. 'math' → logprob: -11.035545349121094
    10. ' re' → logprob: -11.410545349121094

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6997424364089966
    2. '\n' → logprob: -1.4497424364089966
    3. '<|end|>' → logprob: -2.074742317199707
    4. '\' → logprob: -2.949742317199707
    5. '
' → logprob: -3.324742317199707
    6. '```' → logprob: -3.574742317199707
    7. '

' → logprob: -4.949742317199707
    8. 'import' → logprob: -5.199742317199707
    9. '<|end|>' → logprob: -5.824742317199707
    10. ',' → logprob: -5.824742317199707

Token 9: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0245972871780396
    2. '```' → logprob: -1.5245972871780396
    3. '\' → logprob: -2.02459716796875
    4. '
' → logprob: -2.27459716796875
    5. 'def' → logprob: -2.77459716796875
    6. '

' → logprob: -3.02459716796875
    7. '.' → logprob: -3.39959716796875
    8. 'import' → logprob: -3.89959716796875
    9. '<|end|>' → logprob: -5.02459716796875
    10. ',' → logprob: -5.89959716796875

Token 10: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4540348947048187
    2. 'collections' → logprob: -1.0790349245071411
    3. ' typing' → logprob: -5.079034805297852
    4. ' fractions' → logprob: -5.079034805297852
    5. ' functools' → logprob: -5.704034805297852
    6. 'typing' → logprob: -6.454034805297852
    7. 'os' → logprob: -6.579034805297852
    8. 'fra' → logprob: -6.829034805297852
    9. ' operator' → logprob: -6.829034805297852
    10. ' statistics' → logprob: -6.954034805297852

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020715655758976936
    2. 'import' → logprob: -3.8957157135009766
    3. ' ' → logprob: -9.520715713500977
    4. '.' → logprob: -10.145715713500977
    5. '_import' → logprob: -10.520715713500977
    6. '_' → logprob: -11.520715713500977
    7. '	import' → logprob: -11.645715713500977
    8. ' ' → logprob: -12.520715713500977
    9. ' _' → logprob: -12.645715713500977
    10. '<|end|>' → logprob: -13.145715713500977

Token 12: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0419071912765503
    2. 'reduce' → logprob: -1.0419071912765503
    3. ' reduce' → logprob: -1.7919071912765503
    4. 'l' → logprob: -2.54190731048584
    5. ' wraps' → logprob: -3.79190731048584
    6. 'wrap' → logprob: -4.41690731048584
    7. 'partial' → logprob: -4.91690731048584
    8. ' partial' → logprob: -5.04190731048584
    9. 'cache' → logprob: -8.79190731048584
    10. 'cmp' → logprob: -9.16690731048584

Token 13: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.233190655708313
    2. 'a' → logprob: -2.4831905364990234
    3. 'u' → logprob: -2.4831905364990234
    4. 'amb' → logprob: -3.9831905364990234
    5. 'z' → logprob: -4.358190536499023
    6. 'r' → logprob: -5.608190536499023
    7. 'ambda' → logprob: -5.858190536499023
    8. '```' → logprob: -7.483190536499023
    9. ''u' → logprob: -8.108190536499023
    10. 'am' → logprob: -8.358190536499023

Token 14: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00019388488726690412
    2. '_c' → logprob: -9.50019359588623
    3. 'cache' → logprob: -9.50019359588623
    4. '_cached' → logprob: -11.12519359588623
    5. 'c' → logprob: -11.87519359588623
    6. 'f' → logprob: -12.00019359588623
    7. '_' → logprob: -12.12519359588623
    8. '_CACHE' → logprob: -13.12519359588623
    9. '_counter' → logprob: -13.62519359588623
    10. '-cache' → logprob: -14.25019359588623

Token 15: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.362838625907898
    2. '\n' → logprob: -1.612838625907898
    3. '
' → logprob: -1.987838625907898
    4. '@' → logprob: -2.6128387451171875
    5. 'def' → logprob: -2.6128387451171875
    6. '

' → logprob: -2.7378387451171875
    7. '#' → logprob: -2.9878387451171875
    8. '(' → logprob: -3.2378387451171875
    9. '```' → logprob: -3.2378387451171875
    10. '' → logprob: -4.2378387451171875

Token 16: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8726996779441833
    2. '

' → logprob: -1.2476997375488281
    3. '\n' → logprob: -1.9976997375488281
    4. '#' → logprob: -3.497699737548828
    5. 'def' → logprob: -3.497699737548828
    6. '@' → logprob: -3.497699737548828
    7. '```' → logprob: -3.497699737548828
    8. '\' → logprob: -4.372699737548828
    9. '`' → logprob: -5.497699737548828
    10. 'd' → logprob: -5.747699737548828

Token 17: ' queue' (ID: 13661)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -1.0730749368667603
    2. 'collections' → logprob: -1.1980749368667603
    3. ' operator' → logprob: -1.6980749368667603
    4. ' typing' → logprob: -2.6980748176574707
    5. 'typing' → logprob: -3.0730748176574707
    6. ' collections' → logprob: -3.0730748176574707
    7. ' ' → logprob: -5.448074817657471
    8. ' itertools' → logprob: -5.948074817657471
    9. 'os' → logprob: -6.073074817657471
    10. 'heap' → logprob: -6.448074817657471

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0265300665050745
    2. 'import' → logprob: -4.4015302658081055
    3. '.' → logprob: -4.7765302658081055
    4. ' ' → logprob: -5.2765302658081055
    5. '<|end|>' → logprob: -8.151530265808105
    6. '	import' → logprob: -10.526530265808105
    7. ' .' → logprob: -11.651530265808105
    8. '<|end|>' → logprob: -11.901530265808105
    9. 's' → logprob: -12.026530265808105
    10. ' im' → logprob: -12.151530265808105

Token 19: ' Queue' (ID: 35581)
  Prédit: ' Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Priority' → logprob: -0.1128489226102829
    2. 'Priority' → logprob: -2.362848997116089
    3. ' Queue' → logprob: -4.61284875869751
    4. 'Queue' → logprob: -6.11284875869751
    5. '.Priority' → logprob: -8.487849235534668
    6. ' deque' → logprob: -9.237849235534668
    7. '```' → logprob: -9.362849235534668
    8. ' Simple' → logprob: -11.237849235534668
    9. '.Queue' → logprob: -12.112849235534668
    10. 'Deque' → logprob: -12.112849235534668

Token 20: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21715906262397766
    2. '
' → logprob: -1.7171590328216553
    3. '\n' → logprob: -5.217159271240234
    4. 'import' → logprob: -5.842159271240234
    5. '#' → logprob: -5.967159271240234
    6. '<|end|>' → logprob: -6.467159271240234
    7. '```' → logprob: -6.717159271240234
    8. 'class' → logprob: -7.592159271240234
    9. 'def' → logprob: -8.092159271240234
    10. '' → logprob: -8.592159271240234

Token 21: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7654803991317749
    2. '

' → logprob: -0.8904803991317749
    3. '\n' → logprob: -2.5154805183410645
    4. '#' → logprob: -4.0154805183410645
    5. '<|end|>' → logprob: -5.0154805183410645
    6. 'import' → logprob: -5.2654805183410645
    7. 'class' → logprob: -5.7654805183410645
    8. '```' → logprob: -5.8904805183410645
    9. '\' → logprob: -6.6404805183410645
    10. 'n' → logprob: -7.0154805183410645

Token 22: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6644163131713867
    2. ' threading' → logprob: -0.9144163131713867
    3. 'collections' → logprob: -2.9144163131713867
    4. ' multiprocessing' → logprob: -3.6644163131713867
    5. ' typing' → logprob: -6.664416313171387
    6. ' heap' → logprob: -6.914416313171387
    7. 'heap' → logprob: -6.914416313171387
    8. 'thread' → logprob: -7.164416313171387
    9. 'multip' → logprob: -8.164416313171387
    10. ' concurrent' → logprob: -8.414416313171387

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026440562680363655
    2. 'import' → logprob: -3.6514406204223633
    3. ' ' → logprob: -9.901440620422363
    4. '.' → logprob: -10.026440620422363
    5. '	import' → logprob: -10.901440620422363
    6. '<|end|>' → logprob: -11.151440620422363
    7. '_import' → logprob: -12.776440620422363
    8. '  ' → logprob: -13.151440620422363
    9. ' Import' → logprob: -13.651440620422363
    10. ' as' → logprob: -13.651440620422363

Token 24: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.08386696130037308
    2. 'item' → logprob: -2.583867073059082
    3. ' add' → logprob: -6.708867073059082
    4. ' is' → logprob: -7.083867073059082
    5. ' mul' → logprob: -7.083867073059082
    6. ' attr' → logprob: -7.333867073059082
    7. 'mul' → logprob: -7.833867073059082
    8. ' ' → logprob: -8.333867073059082
    9. ' method' → logprob: -8.833867073059082
    10. 'add' → logprob: -8.833867073059082

Token 25: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35483819246292114
    2. 'import' → logprob: -1.8548381328582764
    3. '
' → logprob: -3.3548381328582764
    4. 'from' → logprob: -3.4798381328582764
    5. '\n' → logprob: -3.7298381328582764
    6. '<|end|>' → logprob: -4.3548383712768555
    7. '' → logprob: -4.7298383712768555
    8. ',
' → logprob: -4.7298383712768555
    9. '

' → logprob: -5.4798383712768555
    10. '#' → logprob: -5.4798383712768555

Token 26: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.212483525276184
    2. '
' → logprob: -1.712483525276184
    3. 'import' → logprob: -1.962483525276184
    4. '#' → logprob: -2.3374834060668945
    5. '<|end|>' → logprob: -2.3374834060668945
    6. '\n' → logprob: -2.5874834060668945
    7. ' ' → logprob: -3.7124834060668945
    8. '

' → logprob: -3.7124834060668945
    9. '' → logprob: -4.7124834060668945
    10. 'a' → logprob: -4.9624834060668945

Token 27: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.13578829169273376
    2. ' itertools' → logprob: -2.1357882022857666
    3. 'operator' → logprob: -5.760788440704346
    4. ' operator' → logprob: -6.010788440704346
    5. 'fun' → logprob: -6.760788440704346
    6. ' ' → logprob: -6.885788440704346
    7. ' random' → logprob: -8.635787963867188
    8. ' math' → logprob: -8.760787963867188
    9. '_' → logprob: -9.010787963867188
    10. ' os' → logprob: -9.260787963867188

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10181445628404617
    2. 'import' → logprob: -2.3518145084381104
    3. '_import' → logprob: -6.976814270019531
    4. ' ' → logprob: -7.976814270019531
    5. '.' → logprob: -8.851814270019531
    6. '_' → logprob: -9.476814270019531
    7. ' _' → logprob: -9.851814270019531
    8. '	import' → logprob: -10.726814270019531
    9. '.import' → logprob: -11.476814270019531
    10. ' .' → logprob: -11.726814270019531

Token 29: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0016843474004417658
    2. ' reduce' → logprob: -6.501684188842773
    3. 'partial' → logprob: -9.251684188842773
    4. 'redu' → logprob: -10.001684188842773
    5. 'wrap' → logprob: -10.751684188842773
    6. 'import' → logprob: -11.626684188842773
    7. 'cache' → logprob: -12.876684188842773
    8. '.reduce' → logprob: -13.251684188842773
    9. '_reduce' → logprob: -13.251684188842773
    10. 'red' → logprob: -14.126684188842773

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4393854141235352
    2. '

' → logprob: -1.4393854141235352
    3. '\n' → logprob: -1.5643854141235352
    4. '#' → logprob: -1.8143854141235352
    5. 'import' → logprob: -2.314385414123535
    6. '\' → logprob: -4.189385414123535
    7. 'def' → logprob: -4.814385414123535
    8. ',' → logprob: -5.064385414123535
    9. '<|end|>' → logprob: -5.064385414123535
    10. '' → logprob: -5.314385414123535

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7872052788734436
    2. '#' → logprob: -1.4122052192687988
    3. '
' → logprob: -2.412205219268799
    4. '\' → logprob: -2.537205219268799
    5. '\n' → logprob: -3.162205219268799
    6. 'd' → logprob: -4.037205219268799
    7. 'import' → logprob: -4.287205219268799
    8. 'n' → logprob: -4.412205219268799
    9. '

' → logprob: -4.662205219268799
    10. '' → logprob: -5.162205219268799

Token 32: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3408273160457611
    2. ' factorial' → logprob: -1.5908273458480835
    3. ' factor' → logprob: -3.590827226638794
    4. ' space' → logprob: -5.090827465057373
    5. ' calculate' → logprob: -5.215827465057373
    6. ' is' → logprob: -5.340827465057373
    7. ' fibonacci' → logprob: -5.340827465057373
    8. ' main' → logprob: -5.840827465057373
    9. ' f' → logprob: -5.840827465057373
    10. ' max' → logprob: -5.840827465057373

Token 33: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31948092579841614
    2. '_' → logprob: -1.3194808959960938
    3. '_line' → logprob: -6.069480895996094
    4. '_input' → logprob: -6.444480895996094
    5. '()' → logprob: -7.444480895996094
    6. '_token' → logprob: -8.069480895996094
    7. '```' → logprob: -8.694480895996094
    8. '("("' → logprob: -9.194480895996094
    9. '_user' → logprob: -9.194480895996094
    10. ' (' → logprob: -9.319480895996094

Token 34: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00400229636579752
    2. '()' → logprob: -6.129002094268799
    3. '():' → logprob: -6.754002094268799
    4. '_' → logprob: -8.254002571105957
    5. '("("' → logprob: -8.629002571105957
    6. ' (' → logprob: -10.254002571105957
    7. '("")' → logprob: -10.879002571105957
    8. '```' → logprob: -11.129002571105957
    9. '<|end|>' → logprob: -11.129002571105957
    10. '('' → logprob: -11.504002571105957

Token 35: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005399276851676404
    2. ' ():' → logprob: -7.875539779663086
    3. '()' → logprob: -9.000539779663086
    4. '(' → logprob: -10.500539779663086
    5. '():
' → logprob: -12.625539779663086
    6. ' ()' → logprob: -13.000539779663086
    7. 's' → logprob: -13.500539779663086
    8. ':' → logprob: -14.375539779663086
    9. '):' → logprob: -14.875539779663086
    10. '(":' → logprob: -15.500539779663086

Token 36: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08981504291296005
    2. '   ' → logprob: -3.089815139770508
    3. '()' → logprob: -3.464815139770508
    4. ':' → logprob: -5.839815139770508
    5. '(' → logprob: -6.089815139770508
    6. ' ():' → logprob: -6.839815139770508
    7. '<|end|>' → logprob: -7.714815139770508
    8. ' return' → logprob: -7.964815139770508
    9. ' ' → logprob: -8.089815139770508
    10. ':return' → logprob: -8.214815139770508

Token 37: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27677857875823975
    2. 'return' (adapté à ' return') → logprob: -1.9017785787582397
    3. '   ' → logprob: -2.4017786979675293
    4. ' line' → logprob: -6.526778697967529
    5. 'line' → logprob: -8.776778221130371
    6. ' try' → logprob: -10.026778221130371
    7. ' sys' → logprob: -10.026778221130371
    8. '    ' → logprob: -10.151778221130371
    9. ' ' → logprob: -10.276778221130371
    10. ' input' → logprob: -10.776778221130371

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.48826757073402405
    2. ' input' → logprob: -0.9882675409317017
    3. 'input' → logprob: -4.613267421722412
    4. 'sys' → logprob: -5.488267421722412
    5. ' ' → logprob: -11.11326789855957
    6. ' list' → logprob: -11.11326789855957
    7. ' ' → logprob: -13.61326789855957
    8. ' int' → logprob: -13.73826789855957
    9. 'list' → logprob: -14.23826789855957
    10. '	sys' → logprob: -14.23826789855957

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0017718080198392272
    2. '.' → logprob: -6.626771926879883
    3. '.stdout' → logprob: -7.876771926879883
    4. '.argv' → logprob: -10.251771926879883
    5. '.readline' → logprob: -10.501771926879883
    6. '.std' → logprob: -13.251771926879883
    7. '.stderr' → logprob: -14.626771926879883
    8. '.input' → logprob: -14.751771926879883
    9. '.st' → logprob: -15.251771926879883
    10. 'stdin' → logprob: -15.251771926879883

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004911953583359718
    2. '.' → logprob: -7.750491142272949
    3. '.read' → logprob: -9.75049114227295
    4. '.readlines' → logprob: -13.25049114227295
    5. '().' → logprob: -15.12549114227295
    6. ' .' → logprob: -16.125492095947266
    7. ' readline' → logprob: -16.750492095947266
    8. '.buffer' → logprob: -18.000492095947266
    9. 'read' → logprob: -18.000492095947266
    10. '.Read' → logprob: -18.625492095947266

Token 41: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31339728832244873
    2. '().' → logprob: -1.3133972883224487
    3. '(' → logprob: -9.313397407531738
    4. '()
' → logprob: -11.438397407531738
    5. '()\' → logprob: -11.563397407531738
    6. ' ()' → logprob: -11.938397407531738
    7. '()

' → logprob: -11.938397407531738
    8. '()`' → logprob: -13.438397407531738
    9. '())' → logprob: -13.563397407531738
    10. '（）' → logprob: -13.938397407531738

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06308605521917343
    2. '
' → logprob: -2.9380860328674316
    3. '\' → logprob: -6.313086032867432
    4. '

' → logprob: -6.438086032867432
    5. '#' → logprob: -6.688086032867432
    6. '\n' → logprob: -7.063086032867432
    7. '```' → logprob: -7.188086032867432
    8. '(' → logprob: -7.438086032867432
    9. '<|end|>' → logprob: -8.18808650970459
    10. '<|end|>' → logprob: -8.68808650970459

Token 43: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9515615105628967
    2. ' calculate' → logprob: -1.576561450958252
    3. ' read' → logprob: -1.826561450958252
    4. ' process' → logprob: -2.951561450958252
    5. ' factorial' → logprob: -2.951561450958252
    6. ' parse' → logprob: -3.451561450958252
    7. ' compute' → logprob: -3.701561450958252
    8. ' def' → logprob: -4.451561450958252
    9. ' solve' → logprob: -4.451561450958252
    10. ' multiply' → logprob: -4.826561450958252

Token 44: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6468269228935242
    2. '_line' → logprob: -1.146826982498169
    3. '(' → logprob: -2.271826982498169
    4. '_input' → logprob: -3.021826982498169
    5. '(_' → logprob: -6.64682674407959
    6. '_token' → logprob: -6.89682674407959
    7. '(line' → logprob: -7.14682674407959
    8. '_user' → logprob: -7.14682674407959
    9. '_(' → logprob: -8.14682674407959
    10. '('_' → logprob: -8.14682674407959

Token 45: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4816860258579254
    2. '(' → logprob: -0.981685996055603
    3. '(s' → logprob: -6.231686115264893
    4. '_line' → logprob: -6.856686115264893
    5. '(line' → logprob: -7.106686115264893
    6. '32' → logprob: -7.356686115264893
    7. '()' → logprob: -7.606686115264893
    8. '("("' → logprob: -7.856686115264893
    9. '```' → logprob: -7.856686115264893
    10. '_s' → logprob: -8.481685638427734

Token 46: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006534181069582701
    2. '(line' → logprob: -5.631534099578857
    3. '():' → logprob: -6.256534099578857
    4. '()' → logprob: -7.631534099578857
    5. '("("' → logprob: -8.756534576416016
    6. ' (' → logprob: -9.256534576416016
    7. '(s' → logprob: -9.506534576416016
    8. '('' → logprob: -9.631534576416016
    9. '(data' → logprob: -11.256534576416016
    10. '(input' → logprob: -11.381534576416016

Token 47: '_input' (ID: 12507)
  Prédit: ' readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.8562806844711304
    2. '(read' → logprob: -1.8562806844711304
    3. '(' → logprob: -2.35628080368042
    4. ' (' → logprob: -2.60628080368042
    5. '(line' → logprob: -2.73128080368042
    6. '(sys' → logprob: -3.60628080368042
    7. '(str' → logprob: -3.73128080368042
    8. 'read' → logprob: -3.73128080368042
    9. '_line' → logprob: -3.85628080368042
    10. '(input' → logprob: -3.85628080368042

Token 48: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22641129791736603
    2. '_line' → logprob: -2.1014113426208496
    3. '():' → logprob: -3.1014113426208496
    4. '(' → logprob: -3.9764113426208496
    5. '(line' → logprob: -4.22641134262085
    6. 'line' → logprob: -7.10141134262085
    7. '_' → logprob: -8.101410865783691
    8. ' ()' → logprob: -9.101410865783691
    9. '();' → logprob: -9.101410865783691
    10. '(){' → logprob: -9.726410865783691

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7515420317649841
    2. ' return' → logprob: -1.001542091369629
    3. 'return' → logprob: -2.376542091369629
    4. '():' → logprob: -3.626542091369629
    5. '()' → logprob: -4.126542091369629
    6. '[]' → logprob: -4.876542091369629
    7. ' ()' → logprob: -5.001542091369629
    8. '    ' → logprob: -6.001542091369629
    9. '():
' → logprob: -7.001542091369629
    10. ' ():' → logprob: -7.001542091369629

Token 50: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5501889586448669
    2. '   ' → logprob: -1.3001890182495117
    3. 'return' (adapté à ' return') → logprob: -2.1751890182495117
    4. ' map' → logprob: -3.9251890182495117
    5. ' list' → logprob: -4.425189018249512
    6. 'map' → logprob: -6.175189018249512
    7. ' line' → logprob: -6.550189018249512
    8. 'list' → logprob: -6.800189018249512
    9. 'line' → logprob: -8.175189018249512
    10. ' ' → logprob: -8.550189018249512

Token 51: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.009402812458574772
    2. 'list' → logprob: -4.884402751922607
    3. ' [' → logprob: -7.134402751922607
    4. ' map' → logprob: -7.634402751922607
    5. '[list' → logprob: -8.259403228759766
    6. '[' → logprob: -8.509403228759766
    7. ' ' → logprob: -10.384403228759766
    8. 'map' → logprob: -12.009403228759766
    9. '[int' → logprob: -12.259403228759766
    10. ' tuple' → logprob: -13.009403228759766

Token 52: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.016527770087122917
    2. '(' → logprob: -4.1415276527404785
    3. '(int' → logprob: -7.6415276527404785
    4. '()' → logprob: -12.641528129577637
    5. '(
' → logprob: -12.891528129577637
    6. 'map' → logprob: -13.016528129577637
    7. '(filter' → logprob: -13.516528129577637
    8. '(

' → logprob: -14.391528129577637
    9. '(eval' → logprob: -14.516528129577637
    10. ',map' → logprob: -15.141528129577637

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013926156098023057
    2. '(' → logprob: -6.876392841339111
    3. 'int' → logprob: -8.126392364501953
    4. '<int' → logprob: -10.001392364501953
    5. ' int' → logprob: -12.501392364501953
    6. '=int' → logprob: -12.626392364501953
    7. '(
' → logprob: -12.876392364501953
    8. ',int' → logprob: -13.001392364501953
    9. ' (' → logprob: -13.376392364501953
    10. '[int' → logprob: -13.501392364501953

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2692284882068634
    2. '(sys' → logprob: -1.894228458404541
    3. '(' → logprob: -2.769228458404541
    4. '(read' → logprob: -3.894228458404541
    5. ' ,' → logprob: -6.769228458404541
    6. 'sys' → logprob: -8.6442289352417
    7. ')' → logprob: -8.6442289352417
    8. 'read' → logprob: -8.7692289352417
    9. ',input' → logprob: -9.1442289352417
    10. '(
' → logprob: -9.1442289352417

Token 55: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.22603413462638855
    2. 'read' → logprob: -1.601034164428711
    3. ' sys' → logprob: -7.726034164428711
    4. 'sys' → logprob: -9.476034164428711
    5. ' readline' → logprob: -9.851034164428711
    6. '(read' → logprob: -10.476034164428711
    7. '	read' → logprob: -11.476034164428711
    8. ' input' → logprob: -12.976034164428711
    9. ')' → logprob: -13.226034164428711
    10. '.read' → logprob: -13.601034164428711

Token 56: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.6240566083070007e-06
    2. 'input' → logprob: -15.375001907348633
    3. '_line' → logprob: -15.750001907348633
    4. '```' → logprob: -15.750001907348633
    5. '_inputs' → logprob: -15.750001907348633
    6. ')_' → logprob: -15.875001907348633
    7. ' _' → logprob: -16.000001907348633
    8. '_output' → logprob: -16.125001907348633
    9. '_in' → logprob: -16.500001907348633
    10. '(_' → logprob: -16.875001907348633

Token 57: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.7697225252486533e-06
    2. ')_' → logprob: -14.000003814697266
    3. 'line' → logprob: -14.375003814697266
    4. '_lines' → logprob: -14.625003814697266
    5. '_LINE' → logprob: -14.750003814697266
    6. '_' → logprob: -14.750003814697266
    7. '_l' → logprob: -15.500003814697266
    8. ')' → logprob: -15.625003814697266
    9. ' _' → logprob: -15.875003814697266
    10. '_li' → logprob: -16.875003814697266

Token 58: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06357861310243607
    2. '()' → logprob: -2.9385786056518555
    3. '())' → logprob: -5.0635786056518555
    4. '))' → logprob: -6.4385786056518555
    5. '().' → logprob: -8.688578605651855
    6. '()));' → logprob: -8.688578605651855
    7. ')' → logprob: -8.938578605651855
    8. '(' → logprob: -9.188578605651855
    9. '())))' → logprob: -9.313578605651855
    10. '()),' → logprob: -11.563578605651855

Token 59: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12863172590732574
    2. 'split' → logprob: -2.128631830215454
    3. 'rstrip' → logprob: -6.378631591796875
    4. ' strip' → logprob: -13.128631591796875
    5. ')' → logprob: -13.503631591796875
    6. ' split' → logprob: -14.253631591796875
    7. '(strip' → logprob: -15.128631591796875
    8. '.strip' → logprob: -15.378631591796875
    9. '(split' → logprob: -15.878631591796875
    10. 'read' → logprob: -16.878631591796875

Token 60: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.025000223889946938
    2. '()' → logprob: -3.7750003337860107
    3. '())' → logprob: -7.025000095367432
    4. '(' → logprob: -7.275000095367432
    5. '))' → logprob: -9.27500057220459
    6. '())))' → logprob: -10.15000057220459
    7. '()))
' → logprob: -10.52500057220459
    8. '()));' → logprob: -12.40000057220459
    9. '()))

' → logprob: -13.65000057220459
    10. '()))
' → logprob: -13.90000057220459

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09294549375772476
    2. '
' → logprob: -3.2179455757141113
    3. '

' → logprob: -3.3429455757141113
    4. '#' → logprob: -5.217945575714111
    5. 'd' → logprob: -5.342945575714111
    6. '\' → logprob: -6.092945575714111
    7. '\n' → logprob: -8.092945098876953
    8. '
' → logprob: -8.967945098876953
    9. '' → logprob: -9.342945098876953
    10. '```' → logprob: -9.467945098876953

Token 62: ' parse' (ID: 8420)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.291134238243103
    2. ' factorial' → logprob: -1.416134238243103
    3. ' main' → logprob: -1.916134238243103
    4. ' count' → logprob: -2.5411343574523926
    5. ' calculate' → logprob: -2.6661343574523926
    6. ' compute' → logprob: -3.0411343574523926
    7. ' find' → logprob: -3.6661343574523926
    8. ' is' → logprob: -4.291134357452393
    9. ' parse' → logprob: -4.541134357452393
    10. 'solve' → logprob: -4.666134357452393

Token 63: '_list' (ID: 4162)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.2179126739501953
    2. '_' → logprob: -1.7179126739501953
    3. '_text' → logprob: -5.717912673950195
    4. '_string' → logprob: -6.217912673950195
    5. '_str' → logprob: -6.467912673950195
    6. '_float' → logprob: -6.967912673950195
    7. '_s' → logprob: -7.092912673950195
    8. '_strings' → logprob: -7.342912673950195
    9. '_in' → logprob: -7.467912673950195
    10. '_bytes' → logprob: -7.592912673950195

Token 64: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31008249521255493
    2. '(' → logprob: -2.31008243560791
    3. '()' → logprob: -2.81008243560791
    4. '_' → logprob: -3.06008243560791
    5. '_of' → logprob: -3.68508243560791
    6. '<|end|>' → logprob: -4.81008243560791
    7. '_from' → logprob: -5.06008243560791
    8. '_s' → logprob: -5.81008243560791
    9. '```' → logprob: -5.81008243560791
    10. '(int' → logprob: -6.18508243560791

Token 65: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003085851902142167
    2. '():
' → logprob: -7.003086090087891
    3. ' ():' → logprob: -7.003086090087891
    4. '()' → logprob: -7.378086090087891
    5. ':' → logprob: -8.25308609008789
    6. '   ' → logprob: -8.37808609008789
    7. '[]' → logprob: -9.75308609008789
    8. ' ()' → logprob: -9.87808609008789
    9. '(' → logprob: -10.87808609008789
    10. ' :' → logprob: -11.75308609008789

Token 66: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22590889036655426
    2. 'return' (adapté à ' return') → logprob: -1.975908875465393
    3. '   ' → logprob: -2.9759089946746826
    4. '[]' → logprob: -5.1009087562561035
    5. ' read' → logprob: -6.3509087562561035
    6. 'read' → logprob: -6.4759087562561035
    7. ' []' → logprob: -6.6009087562561035
    8. '    ' → logprob: -6.8509087562561035
    9. ' ' → logprob: -8.475909233093262
    10. ' list' → logprob: -8.975909233093262

Token 67: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.19371020793914795
    2. 'list' → logprob: -2.4437103271484375
    3. ' []' → logprob: -2.8187103271484375
    4. '[]' → logprob: -4.0687103271484375
    5. ' read' → logprob: -4.8187103271484375
    6. ' [' → logprob: -6.3187103271484375
    7. 'read' → logprob: -6.6937103271484375
    8. ' parse' → logprob: -7.1937103271484375
    9. 'parse' → logprob: -8.693710327148438
    10. '[list' → logprob: -9.193710327148438

Token 68: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44103461503982544
    2. '(map' → logprob: -1.4410345554351807
    3. '<|end|>' → logprob: -2.6910345554351807
    4. '()' → logprob: -3.4410345554351807
    5. '(input' → logprob: -5.06603479385376
    6. '(eval' → logprob: -5.31603479385376
    7. '(parse' → logprob: -5.44103479385376
    8. '<|end|>' → logprob: -6.81603479385376
    9. '(range' → logprob: -7.06603479385376
    10. '(int' → logprob: -7.69103479385376

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0055520012974739075
    2. '(str' → logprob: -6.005551815032959
    3. '(' → logprob: -6.630551815032959
    4. '<|end|>' → logprob: -6.630551815032959
    5. ')' → logprob: -8.880552291870117
    6. '(eval' → logprob: -9.130552291870117
    7. '(lambda' → logprob: -9.755552291870117
    8. 'int' → logprob: -9.880552291870117
    9. ',int' → logprob: -11.255552291870117
    10. ')(' → logprob: -11.380552291870117

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020457444712519646
    2. '(read' → logprob: -4.2704572677612305
    3. ',input' → logprob: -5.3954572677612305
    4. '(' → logprob: -7.8954572677612305
    5. '<|end|>' → logprob: -8.02045726776123
    6. 'read' → logprob: -8.14545726776123
    7. ' ,' → logprob: -8.27045726776123
    8. ',(' → logprob: -9.14545726776123
    9. '(),' → logprob: -9.89545726776123
    10. ' read' → logprob: -10.27045726776123

Token 71: ' read' (ID: 1729)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7629433274269104
    2. 'read' → logprob: -1.2629432678222656
    3. ' input' → logprob: -1.7629432678222656
    4. ' read' → logprob: -2.6379432678222656
    5. 'sys' → logprob: -5.262943267822266
    6. ' sys' → logprob: -6.012943267822266
    7. ' ' → logprob: -9.887943267822266
    8. '(input' → logprob: -10.762943267822266
    9. '	read' → logprob: -11.012943267822266
    10. '(read' → logprob: -11.137943267822266

Token 72: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0035425745882093906
    2. 'input' → logprob: -5.753542423248291
    3. '_line' → logprob: -8.87854290008545
    4. '(input' → logprob: -9.75354290008545
    5. 'from' → logprob: -10.37854290008545
    6. '_' → logprob: -10.37854290008545
    7. '(sys' → logprob: -10.62854290008545
    8. 'sys' → logprob: -11.37854290008545
    9. '(' → logprob: -11.50354290008545
    10. '(read' → logprob: -11.75354290008545

Token 73: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.088138227118179e-05
    2. 'line' → logprob: -9.750070571899414
    3. 'from' → logprob: -11.875070571899414
    4. '_list' → logprob: -12.750070571899414
    5. '_' → logprob: -14.625070571899414
    6. '_LINE' → logprob: -14.750070571899414
    7. '_lines' → logprob: -15.125070571899414
    8. '()' → logprob: -15.125070571899414
    9. 'sys' → logprob: -15.250070571899414
    10. 'Line' → logprob: -15.875070571899414

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00160782050807029
    2. '()))' → logprob: -6.876607894897461
    3. '()' → logprob: -7.501607894897461
    4. '())' → logprob: -11.626607894897461
    5. '))' → logprob: -12.126607894897461
    6. '()));' → logprob: -12.876607894897461
    7. ' ().' → logprob: -13.626607894897461
    8. '())))' → logprob: -13.876607894897461
    9. ')' → logprob: -14.001607894897461
    10. '()[' → logprob: -14.001607894897461

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0041654217056930065
    2. 'strip' → logprob: -5.5041656494140625
    3. ' split' → logprob: -9.629165649414062
    4. 'rstrip' → logprob: -11.254165649414062
    5. ')' → logprob: -12.004165649414062
    6. '().' → logprob: -14.504165649414062
    7. '(split' → logprob: -14.629165649414062
    8. ' strip' → logprob: -14.879165649414062
    9. '))' → logprob: -15.254165649414062
    10. '()' → logprob: -15.504165649414062

Token 76: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.39636680483818054
    2. '()))' → logprob: -1.146366834640503
    3. '()' → logprob: -4.896366596221924
    4. ')' → logprob: -6.771366596221924
    5. '())' → logprob: -7.146366596221924
    6. '(' → logprob: -10.896367073059082
    7. ')))' → logprob: -11.271367073059082
    8. '()))
' → logprob: -12.771367073059082
    9. '()));' → logprob: -12.896367073059082
    10. '())))' → logprob: -13.646367073059082

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011890692636370659
    2. '\' → logprob: -5.261890888214111
    3. 'd' → logprob: -5.761890888214111
    4. '

' → logprob: -6.136890888214111
    5. '
' → logprob: -7.136890888214111
    6. '#' → logprob: -9.011890411376953
    7. '```' → logprob: -9.011890411376953
    8. '\n' → logprob: -9.261890411376953
    9. '@' → logprob: -9.761890411376953
    10. 'class' → logprob: -10.261890411376953

Token 78: ' parse' (ID: 8420)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7988744378089905
    2. ' calculate' → logprob: -2.2988743782043457
    3. ' main' → logprob: -2.4238743782043457
    4. ' is' → logprob: -2.4238743782043457
    5. ' solve' → logprob: -2.5488743782043457
    6. ' compute' → logprob: -2.6738743782043457
    7. ' count' → logprob: -3.5488743782043457
    8. ' fibonacci' → logprob: -4.423874378204346
    9. ' dfs' → logprob: -4.673874378204346
    10. ' gcd' → logprob: -4.798874378204346

Token 79: '_and' (ID: 18645)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.02479952946305275
    2. '_list' → logprob: -4.149799346923828
    3. '_string' → logprob: -5.774799346923828
    4. '_' → logprob: -7.149799346923828
    5. '_line' → logprob: -7.149799346923828
    6. '_float' → logprob: -7.524799346923828
    7. '_str' → logprob: -7.774799346923828
    8. '_input' → logprob: -7.774799346923828
    9. 'int' → logprob: -8.024799346923828
    10. '_token' → logprob: -8.524799346923828

Token 80: '_sort' (ID: 43815)
  Prédit: '_filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_filter' → logprob: -1.2773184776306152
    2. '_validate' → logprob: -2.0273184776306152
    3. '_convert' → logprob: -2.0273184776306152
    4. '_reduce' → logprob: -2.2773184776306152
    5. '_split' → logprob: -2.7773184776306152
    6. '_sum' → logprob: -3.0273184776306152
    7. '_' → logprob: -3.6523184776306152
    8. '_compute' → logprob: -3.7773184776306152
    9. '_compare' → logprob: -3.9023184776306152
    10. '_remove' → logprob: -3.9023184776306152

Token 81: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5410869121551514
    2. '_' → logprob: -1.7910869121551514
    3. '_list' → logprob: -2.0410869121551514
    4. '(' → logprob: -2.2910869121551514
    5. '_lists' → logprob: -5.1660871505737305
    6. '()(' → logprob: -5.9160871505737305
    7. '```' → logprob: -6.4160871505737305
    8. '():' → logprob: -7.0410871505737305
    9. '(_)' → logprob: -7.0410871505737305
    10. '_items' → logprob: -7.1660871505737305

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003676440566778183
    2. '()' → logprob: -5.628676414489746
    3. '(' → logprob: -10.003676414489746
    4. '():
' → logprob: -11.128676414489746
    5. '()">' → logprob: -12.878676414489746
    6. '():

' → logprob: -13.003676414489746
    7. ' ():' → logprob: -13.628676414489746
    8. '(()' → logprob: -13.628676414489746
    9. '()>' → logprob: -13.878676414489746
    10. '()(' → logprob: -14.003676414489746

Token 83: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009606543462723494
    2. '()' → logprob: -7.750960826873779
    3. ' ():' → logprob: -8.375960350036621
    4. '():
' → logprob: -9.125960350036621
    5. ':' → logprob: -9.750960350036621
    6. '(' → logprob: -9.750960350036621
    7. ' return' → logprob: -10.750960350036621
    8. '   ' → logprob: -11.000960350036621
    9. 'return' → logprob: -11.375960350036621
    10. ':return' → logprob: -11.875960350036621

Token 84: ' lst' (ID: 33384)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07101064175367355
    2. 'return' → logprob: -3.3210105895996094
    3. '   ' → logprob: -3.4460105895996094
    4. ' ' → logprob: -8.32101058959961
    5. '    ' → logprob: -9.19601058959961
    6. ' lst' → logprob: -9.57101058959961
    7. '    
' → logprob: -10.07101058959961
    8. ' 
' → logprob: -10.32101058959961
    9. ' list' → logprob: -11.82101058959961
    10. '
' → logprob: -11.82101058959961

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6967248916625977
    2. ' =' → logprob: -0.6967248916625977
    3. '.' → logprob: -6.196724891662598
    4. '(' → logprob: -6.946724891662598
    5. '   ' → logprob: -8.321724891662598
    6. '.=' → logprob: -9.446724891662598
    7. ' ' → logprob: -9.821724891662598
    8. '()' → logprob: -10.071724891662598
    9. 's' → logprob: -10.446724891662598
    10. '=[]' → logprob: -11.196724891662598

Token 86: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.16579391062259674
    2. ' sorted' → logprob: -2.2907938957214355
    3. 'parse' → logprob: -3.1657938957214355
    4. ' list' → logprob: -5.1657938957214355
    5. 'sorted' → logprob: -5.9157938957214355
    6. 'list' → logprob: -7.7907938957214355
    7. ' read' → logprob: -8.290794372558594
    8. ' ' → logprob: -8.915794372558594
    9. ' parsed' → logprob: -9.415794372558594
    10. '(parse' → logprob: -10.165794372558594

Token 87: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0004360334132798016
    2. '_and' → logprob: -7.750435829162598
    3. '_' → logprob: -12.125435829162598
    4. 'and' → logprob: -18.625436782836914
    5. '_List' → logprob: -19.625436782836914
    6. '_int' → logprob: -20.000436782836914
    7. '_li' → logprob: -20.000436782836914
    8. '_l' → logprob: -20.500436782836914
    9. '_or' → logprob: -20.625436782836914
    10. '_lst' → logprob: -20.875436782836914

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03806616738438606
    2. '()
' → logprob: -3.2880661487579346
    3. '()

' → logprob: -11.538065910339355
    4. '(' → logprob: -12.163065910339355
    5. '()
' → logprob: -12.163065910339355
    6. '();' → logprob: -13.538065910339355
    7. '()\' → logprob: -13.538065910339355
    8. ' ()' → logprob: -14.913065910339355
    9. '()`' → logprob: -14.913065910339355
    10. ')' → logprob: -15.163065910339355

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05240216478705406
    2. '.' → logprob: -3.9274022579193115
    3. 'lst' → logprob: -4.052402019500732
    4. '
' → logprob: -5.302402019500732
    5. ' ' → logprob: -6.177402019500732
    6. '    
' → logprob: -6.427402019500732
    7. ' lst' → logprob: -6.677402019500732
    8. '<|end|>' → logprob: -6.802402019500732
    9. '```' → logprob: -7.177402019500732
    10. '.sort' → logprob: -7.552402019500732

Token 90: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.05049487575888634
    2. 'lst' (adapté à ' lst') → logprob: -3.050494909286499
    3. '   ' → logprob: -7.42549467086792
    4. ' 
' → logprob: -7.80049467086792
    5. ' ' → logprob: -8.300495147705078
    6. ' return' → logprob: -8.300495147705078
    7. '    
' → logprob: -8.550495147705078
    8. '
' → logprob: -9.300495147705078
    9. '```' → logprob: -10.925495147705078
    10. '_lst' → logprob: -11.050495147705078

Token 91: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5759491324424744
    2. '.sort' → logprob: -0.8259491324424744
    3. '.s' → logprob: -11.950948715209961
    4. ' .' → logprob: -13.700948715209961
    5. 'sort' → logprob: -14.450948715209961
    6. '.sorted' → logprob: -14.450948715209961
    7. ' sort' → logprob: -15.450948715209961
    8. '.Sort' → logprob: -15.450948715209961
    9. '.append' → logprob: -16.45094871520996
    10. ' ' → logprob: -16.57594871520996

Token 92: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2603901015827432e-05
    2. '()
' → logprob: -11.375022888183594
    3. '(' → logprob: -11.500022888183594
    4. '()

' → logprob: -15.250022888183594
    5. '()`' → logprob: -15.750022888183594
    6. '())' → logprob: -15.750022888183594
    7. '()]' → logprob: -16.375022888183594
    8. '()>' → logprob: -16.375022888183594
    9. '()\' → logprob: -16.750022888183594
    10. '();' → logprob: -16.875022888183594

Token 93: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.14373381435871124
    2. '=' → logprob: -2.0187337398529053
    3. ')' → logprob: -6.893733978271484
    4. '=False' → logprob: -11.018733978271484
    5. ' =' → logprob: -12.018733978271484
    6. ')=' → logprob: -12.143733978271484
    7. '())' → logprob: -12.518733978271484
    8. '(True' → logprob: -12.518733978271484
    9. 'True' → logprob: -13.018733978271484
    10. '()' → logprob: -13.018733978271484

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034261439577676356
    2. ')
' → logprob: -8.00034236907959
    3. ')return' → logprob: -12.25034236907959
    4. ' )' → logprob: -13.37534236907959
    5. '()' → logprob: -15.25034236907959
    6. ')
' → logprob: -15.62534236907959
    7. '   ' → logprob: -15.87534236907959
    8. '))' → logprob: -16.250343322753906
    9. ')

' → logprob: -17.000343322753906
    10. '),' → logprob: -17.375343322753906

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007176140323281288
    2. 'return' → logprob: -5.882175922393799
    3. ' return' → logprob: -6.132175922393799
    4. '
' → logprob: -7.132175922393799
    5. '	return' → logprob: -7.382175922393799
    6. '<|end|>' → logprob: -7.507175922393799
    7. ' ' → logprob: -9.382176399230957
    8. '    
' → logprob: -10.132176399230957
    9. ')' → logprob: -10.882176399230957
    10. '  ' → logprob: -11.132176399230957

Token 96: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5568830966949463
    2. '   ' → logprob: -0.9318830966949463
    3. ' return' → logprob: -3.4318830966949463
    4. '	return' → logprob: -7.556882858276367
    5. ' ' → logprob: -8.681882858276367
    6. '<|end|>' → logprob: -9.931882858276367
    7. ':return' → logprob: -10.306882858276367
    8. '
' → logprob: -10.431882858276367
    9. '  ' → logprob: -10.806882858276367
    10. '_return' → logprob: -11.931882858276367

Token 97: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.07889639586210251
    2. 'lst' → logprob: -2.5788962841033936
    3. '(lst' → logprob: -11.953896522521973
    4. ' ' → logprob: -15.953896522521973
    5. '_lst' → logprob: -16.328895568847656
    6. ' ' → logprob: -17.703895568847656
    7. ' ls' → logprob: -17.953895568847656
    8. '.lst' → logprob: -18.078895568847656
    9. 'list' → logprob: -18.828895568847656
    10. 'l' → logprob: -19.453895568847656

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3093480169773102
    2. '<|end|>' → logprob: -1.9343479871749878
    3. 'def' → logprob: -2.9343481063842773
    4. '

' → logprob: -3.3093481063842773
    5. '\n' → logprob: -3.8093481063842773
    6. '\' → logprob: -5.934348106384277
    7. '```' → logprob: -6.309348106384277
    8. '#' → logprob: -6.434348106384277
    9. '<|end|>' → logprob: -7.059348106384277
    10. 'newline' → logprob: -7.309348106384277

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6088966131210327
    2. '
' → logprob: -0.8588966131210327
    3. '

' → logprob: -3.9838967323303223
    4. '\' → logprob: -5.233896732330322
    5. '#' → logprob: -5.733896732330322
    6. '\n' → logprob: -5.858896732330322
    7. 'd' → logprob: -7.108896732330322
    8. '```' → logprob: -7.108896732330322
    9. '' → logprob: -8.483896255493164
    10. '
' → logprob: -9.483896255493164

Token 100: ' gather' (ID: 13660)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.0432000160217285
    2. ' calculate' → logprob: -1.5432000160217285
    3. ' compute' → logprob: -2.0432000160217285
    4. ' main' → logprob: -2.7932000160217285
    5. ' max' → logprob: -3.0432000160217285
    6. ' solve' → logprob: -3.2932000160217285
    7. ' multiply' → logprob: -3.4182000160217285
    8. ' count' → logprob: -3.6682000160217285
    9. ' combine' → logprob: -3.9182000160217285
    10. ' is' → logprob: -4.7932000160217285

Token 101: '_inputs' (ID: 67304)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9139642715454102
    2. '_items' → logprob: -1.5389642715454102
    3. '_data' → logprob: -2.28896427154541
    4. '_candidates' → logprob: -3.16396427154541
    5. '_input' → logprob: -3.78896427154541
    6. '_inputs' → logprob: -4.16396427154541
    7. '_lists' → logprob: -4.16396427154541
    8. '_numbers' → logprob: -4.28896427154541
    9. '_s' → logprob: -4.41396427154541
    10. '_elements' → logprob: -4.66396427154541

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00036787090357393026
    2. '(' → logprob: -8.625368118286133
    3. ' ():' → logprob: -8.750368118286133
    4. '()' → logprob: -11.375368118286133
    5. '():
' → logprob: -11.500368118286133
    6. '_' → logprob: -12.375368118286133
    7. '(**' → logprob: -14.875368118286133
    8. '(:' → logprob: -14.875368118286133
    9. '(*' → logprob: -14.875368118286133
    10. 'def' → logprob: -15.750368118286133

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3202526271343231
    2. '()' → logprob: -1.6952526569366455
    3. '
' → logprob: -3.6952526569366455
    4. '(' → logprob: -3.8202526569366455
    5. '<|end|>' → logprob: -4.195252418518066
    6. '    
' → logprob: -4.570252418518066
    7. '```' → logprob: -5.695252418518066
    8. ':' → logprob: -5.695252418518066
    9. '()
' → logprob: -6.320252418518066
    10. '<|end|>' → logprob: -6.445252418518066

Token 104: ' x' (ID: 1215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.150099515914917
    2. '   ' → logprob: -2.400099515914917
    3. 'n' → logprob: -3.275099515914917
    4. ' N' → logprob: -5.400099754333496
    5. ' num' → logprob: -6.650099754333496
    6. ' t' → logprob: -6.650099754333496
    7. ' return' → logprob: -7.150099754333496
    8. ' data' → logprob: -7.900099754333496
    9. ' T' → logprob: -8.025099754333496
    10. ' a' → logprob: -8.400099754333496

Token 105: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09341997653245926
    2. ',' → logprob: -2.8434200286865234
    3. '_' → logprob: -4.343420028686523
    4. 's' → logprob: -4.718420028686523
    5. '=' → logprob: -4.968420028686523
    6. 'y' → logprob: -7.843420028686523
    7. ',_' → logprob: -8.218420028686523
    8. ',y' → logprob: -8.593420028686523
    9. '1' → logprob: -8.968420028686523
    10. '=int' → logprob: -9.343420028686523

Token 106: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4740927219390869
    2. 'y' → logprob: -0.9740927219390869
    3. ' ' → logprob: -11.474092483520508
    4. '	y' → logprob: -13.724092483520508
    5. '*y' → logprob: -13.974092483520508
    6. '    ' → logprob: -13.974092483520508
    7. '  ' → logprob: -14.099092483520508
    8. '_y' → logprob: -14.974092483520508
    9. ',y' → logprob: -15.474092483520508
    10. ''y' → logprob: -15.599092483520508

Token 107: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026356730610132217
    2. '=' → logprob: -3.7763566970825195
    3. ',' → logprob: -5.7763566970825195
    4. ' ' → logprob: -13.02635669708252
    5. ' ,' → logprob: -13.77635669708252
    6. '<|end|>' → logprob: -13.90135669708252
    7. '  ' → logprob: -14.90135669708252
    8. ')' → logprob: -15.40135669708252
    9. '<|end|>' → logprob: -15.40135669708252
    10. '   ' → logprob: -15.65135669708252

Token 108: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.4343540668487549
    2. 'z' → logprob: -1.0593540668487549
    3. ' =' → logprob: -6.309353828430176
    4. ' n' → logprob: -6.934353828430176
    5. 'n' → logprob: -7.309353828430176
    6. 'w' → logprob: -7.309353828430176
    7. ' w' → logprob: -7.434353828430176
    8. '=' → logprob: -8.309353828430176
    9. ' ' → logprob: -9.059353828430176
    10. 'a' → logprob: -9.309353828430176

Token 109: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637496031820774
    2. '=' → logprob: -3.6513750553131104
    3. ',' → logprob: -9.526374816894531
    4. ' ' → logprob: -14.276374816894531
    5. ')' → logprob: -15.151374816894531
    6. '  ' → logprob: -15.276374816894531
    7. ' ,' → logprob: -15.401374816894531
    8. ' =
' → logprob: -16.40137481689453
    9. '   ' → logprob: -16.65137481689453
    10. '<|end|>' → logprob: -17.40137481689453

Token 110: ' kk' (ID: 76595)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.2467494010925293
    2. 'w' → logprob: -1.3717494010925293
    3. ' n' → logprob: -2.1217494010925293
    4. ' =' → logprob: -2.3717494010925293
    5. 'n' → logprob: -2.8717494010925293
    6. 'a' → logprob: -3.1217494010925293
    7. ' t' → logprob: -3.3717494010925293
    8. ' a' → logprob: -4.246749401092529
    9. ' k' → logprob: -4.246749401092529
    10. ' q' → logprob: -4.371749401092529

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524792551994324
    2. '=' → logprob: -1.5024793148040771
    3. ')' → logprob: -8.377479553222656
    4. ',' → logprob: -8.502479553222656
    5. ' ' → logprob: -9.502479553222656
    6. ')=' → logprob: -12.002479553222656
    7. '   ' → logprob: -12.252479553222656
    8. '  ' → logprob: -12.252479553222656
    9. 'k' → logprob: -12.377479553222656
    10. 'e' → logprob: -12.752479553222656

Token 112: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.02854113280773163
    2. ' map' → logprob: -4.153541088104248
    3. 'parse' → logprob: -4.403541088104248
    4. 'map' → logprob: -9.153541564941406
    5. ' ' → logprob: -10.278541564941406
    6. ' list' → logprob: -10.903541564941406
    7. ' tuple' → logprob: -10.903541564941406
    8. '   ' → logprob: -12.278541564941406
    9. '	parse' → logprob: -12.278541564941406
    10. '  ' → logprob: -13.028541564941406

Token 113: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.026550382375717163
    2. '_list' → logprob: -3.77655029296875
    3. '_and' → logprob: -5.90155029296875
    4. '_' → logprob: -7.52655029296875
    5. '_(' → logprob: -12.02655029296875
    6. 'int' → logprob: -12.15155029296875
    7. '(_' → logprob: -12.52655029296875
    8. '_in' → logprob: -13.52655029296875
    9. '```' → logprob: -13.65155029296875
    10. 'ints' → logprob: -13.90155029296875

Token 114: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. ' s' → logprob: -19.0
    3. '_s' → logprob: -19.875
    4. '(s' → logprob: -20.0
    5. 'с' → logprob: -20.125
    6. 'ints' → logprob: -20.25
    7. ''s' → logprob: -20.5
    8. 'ss' → logprob: -20.875
    9. '<s' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 115: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -4.961759259458631e-06
    2. 'from' → logprob: -12.250004768371582
    3. '_FROM' → logprob: -17.3750057220459
    4. '_for' → logprob: -17.5000057220459
    5. '_' → logprob: -17.7500057220459
    6. 'From' → logprob: -18.6250057220459
    7. ' from' → logprob: -18.7500057220459
    8. '()' → logprob: -18.7500057220459
    9. '_From' → logprob: -18.8750057220459
    10. '```' → logprob: -19.6250057220459

Token 116: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004309076175559312
    2. 'input' → logprob: -7.750431060791016
    3. 'Input' → logprob: -16.750431060791016
    4. 'sys' → logprob: -17.250431060791016
    5. ' input' → logprob: -17.375431060791016
    6. 'put' → logprob: -17.500431060791016
    7. '(input' → logprob: -17.875431060791016
    8. 'import' → logprob: -18.375431060791016
    9. '_INPUT' → logprob: -18.375431060791016
    10. '-input' → logprob: -18.750431060791016

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6166903151315637e-05
    2. '()
' → logprob: -11.125016212463379
    3. ' ()' → logprob: -14.625016212463379
    4. '()]' → logprob: -15.125016212463379
    5. '(' → logprob: -15.750016212463379
    6. '()

' → logprob: -15.875016212463379
    7. '()`' → logprob: -16.250015258789062
    8. '())' → logprob: -16.750015258789062
    9. '(),' → logprob: -16.875015258789062
    10. ')' → logprob: -17.000015258789062

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004534080624580383
    2. '<|end|>' → logprob: -6.6295342445373535
    3. 'return' → logprob: -7.0045342445373535
    4. '    
' → logprob: -7.1295342445373535
    5. '
' → logprob: -7.1295342445373535
    6. ' return' → logprob: -7.8795342445373535
    7. '	return' → logprob: -8.879533767700195
    8. 'x' → logprob: -9.754533767700195
    9. '    ' → logprob: -11.004533767700195
    10. ')' → logprob: -11.004533767700195

Token 119: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7008402347564697
    2. ' return' → logprob: -1.8258402347564697
    3. 'return' → logprob: -2.3258402347564697
    4. ' lst' → logprob: -2.9508402347564697
    5. 'lst' → logprob: -3.3258402347564697
    6. 'a' (adapté à ' a') → logprob: -4.075839996337891
    7. ' a' → logprob: -4.075839996337891
    8. 'rest' → logprob: -4.700839996337891
    9. '
' → logprob: -4.825839996337891
    10. ' rest' → logprob: -4.825839996337891

Token 120: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007887827814556658
    2. ',b' → logprob: -7.875788688659668
    3. ' ,' → logprob: -8.750788688659668
    4. ' =' → logprob: -8.875788688659668
    5. '=' → logprob: -9.500788688659668
    6. 's' → logprob: -10.750788688659668
    7. '_list' → logprob: -13.250788688659668
    8. ',a' → logprob: -13.250788688659668
    9. 'b' → logprob: -13.625788688659668
    10. ',s' → logprob: -13.875788688659668

Token 121: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.048813316971063614
    2. 'parse' → logprob: -3.0488133430480957
    3. '(parse' → logprob: -9.048812866210938
    4. '=parse' → logprob: -10.423812866210938
    5. '	parse' → logprob: -10.548812866210938
    6. ' [' → logprob: -11.048812866210938
    7. '[]' → logprob: -11.798812866210938
    8. ' ' → logprob: -12.173812866210938
    9. '[' → logprob: -12.173812866210938
    10. ' []' → logprob: -12.423812866210938

Token 122: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.16023387014865875
    2. '_list' → logprob: -1.9102338552474976
    3. '_' → logprob: -11.785233497619629
    4. 'and' → logprob: -13.785233497619629
    5. '_int' → logprob: -14.660233497619629
    6. '&_' → logprob: -16.535234451293945
    7. '_sorted' → logprob: -16.785234451293945
    8. ' and' → logprob: -16.910234451293945
    9. '_lists' → logprob: -17.035234451293945
    10. '_AND' → logprob: -17.160234451293945

Token 123: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.3868841528892517
    2. 'sort' → logprob: -1.1368842124938965
    3. '_list' → logprob: -11.636883735656738
    4. 'ort' → logprob: -13.261883735656738
    5. 'list' → logprob: -13.261883735656738
    6. ' sort' → logprob: -14.886883735656738
    7. 'sorted' → logprob: -16.011884689331055
    8. '	sort' → logprob: -16.136884689331055
    9. '_sorted' → logprob: -16.261884689331055
    10. 'Sort' → logprob: -17.136884689331055

Token 124: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011705794604495168
    2. 'list' → logprob: -6.751170635223389
    3. 'List' → logprob: -15.62617015838623
    4. 'ist' → logprob: -16.251171112060547
    5. 'lst' → logprob: -17.251171112060547
    6. 'a' → logprob: -18.126171112060547
    7. '_lst' → logprob: -18.126171112060547
    8. '_LIST' → logprob: -18.501171112060547
    9. '(list' → logprob: -18.876171112060547
    10. '_' → logprob: -19.126171112060547

Token 125: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.236549335066229e-05
    2. '()
' → logprob: -10.750021934509277
    3. ' ()' → logprob: -14.250021934509277
    4. '()

' → logprob: -15.625021934509277
    5. '()]' → logprob: -16.875022888183594
    6. '(' → logprob: -17.625022888183594
    7. '()
' → logprob: -17.750022888183594
    8. '()`' → logprob: -18.125022888183594
    9. '()"' → logprob: -18.625022888183594
    10. '(),' → logprob: -18.875022888183594

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015147423837333918
    2. 'b' → logprob: -6.876514911651611
    3. '    
' → logprob: -8.251514434814453
    4. '	return' → logprob: -9.626514434814453
    5. 'return' → logprob: -10.376514434814453
    6. '<|end|>' → logprob: -10.501514434814453
    7. '	b' → logprob: -10.501514434814453
    8. ',' → logprob: -11.501514434814453
    9. '
' → logprob: -11.626514434814453
    10. ' return' → logprob: -11.626514434814453

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.001048646867275238
    2. ' b' → logprob: -6.876048564910889
    3. '   ' → logprob: -11.376049041748047
    4. 'd' → logprob: -14.251049041748047
    5. 'c' → logprob: -14.376049041748047
    6. 'a' → logprob: -14.626049041748047
    7. ' ' → logprob: -15.001049041748047
    8. 'k' → logprob: -15.063549041748047
    9. 's' → logprob: -15.251049041748047
    10. 'B' → logprob: -15.251049041748047

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05699664354324341
    2. '=' → logprob: -2.9319965839385986
    3. ',' → logprob: -6.181996822357178
    4. ' ,' → logprob: -10.05699634552002
    5. ' ' → logprob: -14.05699634552002
    6. '  ' → logprob: -14.68199634552002
    7. 'space' → logprob: -15.18199634552002
    8. 's' → logprob: -15.55699634552002
    9. ' ' → logprob: -15.55699634552002
    10. ')' → logprob: -15.55699634552002

Token 129: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.07895422726869583
    2. 'parse' → logprob: -2.5789542198181152
    3. '(parse' → logprob: -9.828954696655273
    4. '	parse' → logprob: -11.703954696655273
    5. '=parse' → logprob: -13.453954696655273
    6. '.parse' → logprob: -15.203954696655273
    7. ' ' → logprob: -15.328954696655273
    8. ' ' → logprob: -16.078954696655273
    9. '_parse' → logprob: -16.453954696655273
    10. '
' → logprob: -16.703954696655273

Token 130: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.5213274309644476e-05
    2. '_list' → logprob: -11.125015258789062
    3. 'and' → logprob: -16.500015258789062
    4. '_or' → logprob: -16.625015258789062
    5. '_as' → logprob: -16.875015258789062
    6. '_int' → logprob: -17.125015258789062
    7. 'int' → logprob: -17.375015258789062
    8. 'list' → logprob: -18.125015258789062
    9. '_an' → logprob: -18.625015258789062
    10. '_a' → logprob: -18.875015258789062

Token 131: '_sort' (ID: 43815)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.03387781232595444
    2. '_sort' → logprob: -3.5338778495788574
    3. '_list' → logprob: -5.908877849578857
    4. 'input' → logprob: -7.408877849578857
    5. '_input' → logprob: -7.658877849578857
    6. 'list' → logprob: -8.7838773727417
    7. 'parse' → logprob: -9.0338773727417
    8. '_and' → logprob: -11.5338773727417
    9. 'sorted' → logprob: -11.5338773727417
    10. 'int' → logprob: -11.7838773727417

Token 132: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003820524725597352
    2. 'list' → logprob: -7.875381946563721
    3. 'List' → logprob: -13.375382423400879
    4. '_LIST' → logprob: -16.000381469726562
    5. 'ist' → logprob: -16.375381469726562
    6. '-list' → logprob: -17.000381469726562
    7. '```' → logprob: -17.125381469726562
    8. 'and' → logprob: -17.375381469726562
    9. '$list' → logprob: -17.375381469726562
    10. ' list' → logprob: -17.625381469726562

Token 133: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5107177862082608e-05
    2. '()
' → logprob: -10.750024795532227
    3. '(' → logprob: -13.625024795532227
    4. ' ()' → logprob: -14.000024795532227
    5. '()

' → logprob: -14.000024795532227
    6. '()]' → logprob: -14.875024795532227
    7. '(),' → logprob: -16.000024795532227
    8. '();' → logprob: -16.500024795532227
    9. '()`' → logprob: -17.000024795532227
    10. '())' → logprob: -17.125024795532227

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011269801296293736
    2. 'c' → logprob: -4.511269569396973
    3. ' c' → logprob: -9.011269569396973
    4. '    
' → logprob: -10.136269569396973
    5. '	c' → logprob: -10.386269569396973
    6. ' ' → logprob: -11.386269569396973
    7. 'return' → logprob: -12.011269569396973
    8. '
' → logprob: -12.261269569396973
    9. 'def' → logprob: -12.886269569396973
    10. '  ' → logprob: -13.261269569396973

Token 135: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.002423106227070093
    2. '   ' → logprob: -6.127423286437988
    3. 'k' → logprob: -9.502423286437988
    4. 'C' → logprob: -9.752423286437988
    5. ' c' → logprob: -9.752423286437988
    6. 'return' → logprob: -12.127423286437988
    7. 'p' → logprob: -12.127423286437988
    8. 'd' → logprob: -12.127423286437988
    9. '	c' → logprob: -12.252423286437988
    10. 'def' → logprob: -12.377423286437988

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788949653506279
    2. '=' → logprob: -2.578894853591919
    3. ',' → logprob: -12.32889461517334
    4. ' =
' → logprob: -15.57889461517334
    5. '  ' → logprob: -15.82889461517334
    6. ' ' → logprob: -15.82889461517334
    7. '.' → logprob: -16.828895568847656
    8. ' ' → logprob: -16.828895568847656
    9. ')' → logprob: -16.953895568847656
    10. '=parse' → logprob: -16.953895568847656

Token 137: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5760197043418884
    2. ' parse' → logprob: -0.8260197043418884
    3. '(parse' → logprob: -9.701019287109375
    4. '	parse' → logprob: -11.451019287109375
    5. '=parse' → logprob: -12.326019287109375
    6. ' ' → logprob: -13.326019287109375
    7. '   ' → logprob: -13.826019287109375
    8. '  ' → logprob: -13.951019287109375
    9. '.parse' → logprob: -15.576019287109375
    10. '_parse' → logprob: -16.451019287109375

Token 138: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00014084660506341606
    2. '_list' → logprob: -8.875141143798828
    3. 'and' → logprob: -14.250141143798828
    4. '_sorted' → logprob: -16.750141143798828
    5. '_as' → logprob: -17.000141143798828
    6. '_' → logprob: -17.375141143798828
    7. '_from' → logprob: -18.125141143798828
    8. 'list' → logprob: -18.375141143798828
    9. '_AND' → logprob: -18.875141143798828
    10. '_or' → logprob: -19.000141143798828

Token 139: '_sort' (ID: 43815)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0017928705783560872
    2. '_sort' → logprob: -6.626792907714844
    3. 'list' → logprob: -8.126792907714844
    4. '_list' → logprob: -8.751792907714844
    5. 'parse' → logprob: -12.376792907714844
    6. ' sort' → logprob: -12.501792907714844
    7. 'sorted' → logprob: -13.001792907714844
    8. 'ort' → logprob: -13.751792907714844
    9. '```' → logprob: -15.251792907714844
    10. 'split' → logprob: -15.376792907714844

Token 140: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.319370302458992e-06
    2. 'list' → logprob: -12.250005722045898
    3. 'List' → logprob: -16.1250057220459
    4. '_and' → logprob: -16.8750057220459
    5. '_lists' → logprob: -17.5000057220459
    6. '$list' → logprob: -17.5000057220459
    7. '_line' → logprob: -17.7500057220459
    8. '_LIST' → logprob: -17.7500057220459
    9. '_lst' → logprob: -18.1250057220459
    10. 'def' → logprob: -18.2500057220459

Token 141: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.129266067640856e-05
    2. '()
' → logprob: -11.250020980834961
    3. '(' → logprob: -12.125020980834961
    4. '()]' → logprob: -13.500020980834961
    5. '()

' → logprob: -14.500020980834961
    6. ' ()' → logprob: -15.375020980834961
    7. '();' → logprob: -15.875020980834961
    8. '()`' → logprob: -16.00002098083496
    9. '())' → logprob: -16.12502098083496
    10. '(),' → logprob: -16.25002098083496

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018983196059707552
    2. 'return' → logprob: -8.875189781188965
    3. '<|end|>' → logprob: -10.750189781188965
    4. '	return' → logprob: -10.875189781188965
    5. ' return' → logprob: -11.875189781188965
    6. '    
' → logprob: -13.750189781188965
    7. 'def' → logprob: -14.625189781188965
    8. '       ' → logprob: -14.875189781188965
    9. '<|end|>' → logprob: -15.250189781188965
    10. ':return' → logprob: -16.62519073486328

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08703005313873291
    2. '   ' → logprob: -2.5870299339294434
    3. ' return' → logprob: -4.837029933929443
    4. ' ' → logprob: -9.587030410766602
    5. 'd' → logprob: -10.087030410766602
    6. '	return' → logprob: -10.337030410766602
    7. 'def' → logprob: -11.337030410766602
    8. 'k' → logprob: -11.462030410766602
    9. '  ' → logprob: -13.087030410766602
    10. '    
' → logprob: -13.087030410766602

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05266819894313812
    2. ' x' → logprob: -3.0526680946350098
    3. '(x' → logprob: -5.55266809463501
    4. ' (' → logprob: -8.552668571472168
    5. '(' → logprob: -13.302668571472168
    6. ' ' → logprob: -14.677668571472168
    7. '   ' → logprob: -16.42766761779785
    8. '[x' → logprob: -16.55266761779785
    9. '{x' → logprob: -17.80266761779785
    10. '  ' → logprob: -17.92766761779785

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015991552209015936
    2. ' ,' → logprob: -9.375160217285156
    3. ',y' → logprob: -9.500160217285156
    4. 'y' → logprob: -16.125160217285156
    5. ',
' → logprob: -17.250160217285156
    6. ' y' → logprob: -17.250160217285156
    7. '‌,' → logprob: -18.625160217285156
    8. ',Y' → logprob: -19.000160217285156
    9. ',x' → logprob: -19.125160217285156
    10. ' ' → logprob: -19.500160217285156

Token 146: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.575939416885376
    2. ' y' → logprob: -0.825939416885376
    3. ' ' → logprob: -17.825939178466797
    4. '	y' → logprob: -18.950939178466797
    5. ' ' → logprob: -20.075939178466797
    6. ''y' → logprob: -20.450939178466797
    7. 'b' → logprob: -20.700939178466797
    8. '    ' → logprob: -20.825939178466797
    9. 'Y' → logprob: -20.950939178466797
    10. ',y' → logprob: -20.950939178466797

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.198043699143454e-05
    2. ',z' → logprob: -9.625091552734375
    3. ' ,' → logprob: -10.625091552734375
    4. 'z' → logprob: -14.375091552734375
    5. ',y' → logprob: -14.500091552734375
    6. ' z' → logprob: -16.375091552734375
    7. ',c' → logprob: -16.500091552734375
    8. ',b' → logprob: -16.625091552734375
    9. ',
' → logprob: -17.000091552734375
    10. '<|end|>' → logprob: -17.250091552734375

Token 148: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004306692280806601
    2. ' z' → logprob: -7.750430583953857
    3. '	z' → logprob: -18.375431060791016
    4. ' ' → logprob: -20.000431060791016
    5. '   ' → logprob: -20.500431060791016
    6. '<|end|>' → logprob: -21.000431060791016
    7. 'c' → logprob: -21.375431060791016
    8. '  ' → logprob: -21.500431060791016
    9. '
' → logprob: -21.750431060791016
    10. '    ' → logprob: -22.125431060791016

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038825106457807124
    2. ' ,' → logprob: -7.875388145446777
    3. ',k' → logprob: -13.125388145446777
    4. '   ' → logprob: -13.125388145446777
    5. ',
' → logprob: -13.375388145446777
    6. ' ' → logprob: -14.625388145446777
    7. 'k' → logprob: -15.000388145446777
    8. '‌,' → logprob: -15.250388145446777
    9. '`,' → logprob: -15.500388145446777
    10. '4' → logprob: -15.875388145446777

Token 150: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.02975245751440525
    2. ' kk' → logprob: -3.529752492904663
    3. 'k' → logprob: -13.279752731323242
    4. 'ck' → logprob: -15.779752731323242
    5. 'kkkk' → logprob: -16.029752731323242
    6. ' ' → logprob: -17.279752731323242
    7. '   ' → logprob: -18.404752731323242
    8. 'ks' → logprob: -18.779752731323242
    9. 'KK' → logprob: -18.904752731323242
    10. ' k' → logprob: -18.904752731323242

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027250947430729866
    2. '<|end|>' → logprob: -4.02725076675415
    3. ',a' → logprob: -4.77725076675415
    4. ' ,' → logprob: -8.777251243591309
    5. 'a' → logprob: -9.027251243591309
    6. '<|end|>' → logprob: -9.277251243591309
    7. ',c' → logprob: -9.777251243591309
    8. ',b' → logprob: -9.902251243591309
    9. '   ' → logprob: -10.027251243591309
    10. ')' → logprob: -10.902251243591309

Token 152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004309076175559312
    2. ' a' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.875431060791016
    4. '	a' → logprob: -17.125431060791016
    5. '  ' → logprob: -18.125431060791016
    6. '[a' → logprob: -18.375431060791016
    7. '    ' → logprob: -19.000431060791016
    8. '(a' → logprob: -19.250431060791016
    9. ' ' → logprob: -19.250431060791016
    10. '
' → logprob: -19.500431060791016

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004146068822592497
    2. ',b' → logprob: -5.504146099090576
    3. ' ,' → logprob: -10.004145622253418
    4. 'b' → logprob: -10.754145622253418
    5. ' b' → logprob: -13.879145622253418
    6. '   ' → logprob: -16.004146575927734
    7. ',
' → logprob: -17.879146575927734
    8. ',B' → logprob: -18.254146575927734
    9. ',y' → logprob: -18.254146575927734
    10. '_,' → logprob: -19.129146575927734

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022422909736633
    2. ' b' → logprob: -1.910224199295044
    3. ' ' → logprob: -17.16022491455078
    4. '<|end|>' → logprob: -17.53522491455078
    5. '	b' → logprob: -18.41022491455078
    6. ',b' → logprob: -18.66022491455078
    7. '   ' → logprob: -20.03522491455078
    8. '    ' → logprob: -20.66022491455078
    9. '  ' → logprob: -20.78522491455078
    10. '(b' → logprob: -20.91022491455078

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014360661152750254
    2. 'c' → logprob: -7.126436233520508
    3. ',c' → logprob: -7.376436233520508
    4. ' ,' → logprob: -12.751436233520508
    5. 'def' → logprob: -13.376436233520508
    6. '<|end|>' → logprob: -14.876436233520508
    7. ',
' → logprob: -15.126436233520508
    8. 'import' → logprob: -15.876436233520508
    9. ' c' → logprob: -15.876436233520508
    10. ',C' → logprob: -16.376436233520508

Token 156: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1002068892121315
    2. ' c' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.22520637512207
    4. '	c' → logprob: -16.72520637512207
    5. '  ' → logprob: -18.60020637512207
    6. '   ' → logprob: -19.10020637512207
    7. ')c' → logprob: -19.35020637512207
    8. '<|end|>' → logprob: -19.35020637512207
    9. 'C' → logprob: -19.85020637512207
    10. ',c' → logprob: -20.10020637512207

Token 157: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.184719979763031
    2. '
' → logprob: -1.9347200393676758
    3. '<|end|>' → logprob: -4.059720039367676
    4. '

' → logprob: -5.684720039367676
    5. '#' → logprob: -6.309720039367676
    6. '\n' → logprob: -7.809720039367676
    7. '<|end|>' → logprob: -7.934720039367676
    8. '\' → logprob: -7.934720039367676
    9. '```' → logprob: -8.309720039367676
    10. '' → logprob: -10.184720039367676

Token 158: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004728684201836586
    2. '<|end|>' → logprob: -6.1297287940979
    3. '
' → logprob: -6.2547287940979
    4. '#' → logprob: -8.754728317260742
    5. '<|end|>' → logprob: -9.379728317260742
    6. '\' → logprob: -9.504728317260742
    7. '[' → logprob: -9.504728317260742
    8. '\n' → logprob: -9.629728317260742
    9. 'x' → logprob: -10.254728317260742
    10. '```' → logprob: -10.254728317260742

Token 159: ' should' (ID: 1757)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8902551531791687
    2. ' main' → logprob: -1.1402552127838135
    3. ' combine' → logprob: -2.5152552127838135
    4. ' max' → logprob: -3.0152552127838135
    5. ' find' → logprob: -3.1402552127838135
    6. ' top' → logprob: -3.2652552127838135
    7. 'solve' → logprob: -4.015254974365234
    8. ' maximize' → logprob: -4.515254974365234
    9. ' best' → logprob: -5.015254974365234
    10. ' get' → logprob: -5.890254974365234

Token 160: '_break' (ID: 98301)
  Prédit: '_continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.5722976326942444
    2. '_use' → logprob: -1.9472975730895996
    3. '_take' → logprob: -2.5722975730895996
    4. '_cons' → logprob: -2.9472975730895996
    5. '_choose' → logprob: -2.9472975730895996
    6. '_include' → logprob: -3.0722975730895996
    7. '_select' → logprob: -3.9472975730895996
    8. '_process' → logprob: -4.5722975730896
    9. '_generate' → logprob: -4.6972975730896
    10. '_pro' → logprob: -5.3222975730896

Token 161: '_i' (ID: 10853)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4249173104763031
    2. '(' → logprob: -1.1749173402786255
    3. '(a' → logprob: -4.174917221069336
    4. '(x' → logprob: -5.174917221069336
    5. '(line' → logprob: -6.049917221069336
    6. '(current' → logprob: -6.049917221069336
    7. '()' → logprob: -6.549917221069336
    8. '(i' → logprob: -6.799917221069336
    9. '(args' → logprob: -7.174917221069336
    10. '(value' → logprob: -7.174917221069336

Token 162: '_j' (ID: 12021)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7983002066612244
    2. '(i' → logprob: -0.9233002066612244
    3. '(' → logprob: -2.548300266265869
    4. 'nd' → logprob: -2.798300266265869
    5. '(nd' → logprob: -5.423300266265869
    6. 'n' → logprob: -5.673300266265869
    7. '(index' → logprob: -5.923300266265869
    8. '(j' → logprob: -6.423300266265869
    9. 'nder' → logprob: -8.048299789428711
    10. '(x' → logprob: -8.423299789428711

Token 163: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04331374168395996
    2. '(' → logprob: -3.16831374168396
    3. '(_' → logprob: -9.043313980102539
    4. '_(' → logprob: -9.793313980102539
    5. '_' → logprob: -9.918313980102539
    6. '(a' → logprob: -10.543313980102539
    7. '((' → logprob: -10.793313980102539
    8. ' (' → logprob: -11.543313980102539
    9. '(x' → logprob: -11.918313980102539
    10. '(
' → logprob: -12.043313980102539

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10453498363494873
    2. ',j' → logprob: -2.3545351028442383
    3. ' ,' → logprob: -5.479535102844238
    4. '):' → logprob: -10.354535102844238
    5. ' ' → logprob: -10.604535102844238
    6. ')' → logprob: -11.354535102844238
    7. ',
' → logprob: -11.604535102844238
    8. 'j' → logprob: -11.604535102844238
    9. ',b' → logprob: -11.979535102844238
    10. '   ' → logprob: -11.979535102844238

Token 165: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04907212778925896
    2. ' j' → logprob: -3.049072027206421
    3. '   ' → logprob: -8.674072265625
    4. 'k' → logprob: -9.299072265625
    5. ')' → logprob: -9.299072265625
    6. '    ' → logprob: -10.549072265625
    7. ' ' → logprob: -10.674072265625
    8. '  ' → logprob: -11.486572265625
    9. '	j' → logprob: -11.736572265625
    10. 'def' → logprob: -11.799072265625

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10422021895647049
    2. '):' → logprob: -2.354220151901245
    3. ' ,' → logprob: -5.854220390319824
    4. ')' → logprob: -7.479220390319824
    5. ' ):' → logprob: -8.729220390319824
    6. ',i' → logprob: -9.104220390319824
    7. ':' → logprob: -10.104220390319824
    8. ',k' → logprob: -10.229220390319824
    9. ',int' → logprob: -10.354220390319824
    10. '   ' → logprob: -10.479220390319824

Token 167: ' kk' (ID: 76595)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09358260780572891
    2. ' k' → logprob: -2.5935826301574707
    3. 'kk' → logprob: -5.093582630157471
    4. ' kk' → logprob: -5.843582630157471
    5. 'a' → logprob: -6.468582630157471
    6. 'c' → logprob: -7.218582630157471
    7. 'b' → logprob: -8.218582153320312
    8. ' a' → logprob: -8.218582153320312
    9. '   ' → logprob: -8.468582153320312
    10. ')' → logprob: -8.531082153320312

Token 168: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06650221347808838
    2. '):' → logprob: -2.816502094268799
    3. ' ,' → logprob: -5.941502094268799
    4. ')' → logprob: -7.441502094268799
    5. '):
' → logprob: -7.566502094268799
    6. ' ):' → logprob: -8.316502571105957
    7. '   ' → logprob: -9.316502571105957
    8. ',
' → logprob: -9.566502571105957
    9. ':' → logprob: -9.566502571105957
    10. ',k' → logprob: -10.191502571105957

Token 169: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43243375420570374
    2. '   ' → logprob: -1.0574337244033813
    3. ':
' → logprob: -6.307433605194092
    4. ' :' → logprob: -6.932433605194092
    5. '):' → logprob: -8.43243408203125
    6. '():' → logprob: -8.93243408203125
    7. '    ' → logprob: -9.18243408203125
    8. ',' → logprob: -9.30743408203125
    9. ':return' → logprob: -9.43243408203125
    10. '       ' → logprob: -9.68243408203125

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5809224247932434
    2. '   ' → logprob: -0.8309224247932434
    3. ' return' → logprob: -5.330922603607178
    4. 'if' → logprob: -9.83092212677002
    5. '    
' → logprob: -11.08092212677002
    6. 'i' → logprob: -11.45592212677002
    7. '  ' → logprob: -11.70592212677002
    8. 'for' → logprob: -11.70592212677002
    9. '	return' → logprob: -11.70592212677002
    10. '    ' → logprob: -11.83092212677002

Token 171: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5304561257362366
    2. ' i' → logprob: -0.9054561257362366
    3. '(i' → logprob: -5.530456066131592
    4. ' (' → logprob: -6.280456066131592
    5. '   ' → logprob: -7.405456066131592
    6. ' ' → logprob: -8.40545654296875
    7. ' kk' → logprob: -8.78045654296875
    8. 'k' → logprob: -9.15545654296875
    9. 'kk' → logprob: -9.40545654296875
    10. ' False' → logprob: -9.78045654296875

Token 172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5959476828575134
    2. '*' → logprob: -0.8459476828575134
    3. ' >=' → logprob: -4.970947742462158
    4. '>' → logprob: -5.345947742462158
    5. ' >' → logprob: -5.345947742462158
    6. '>=' → logprob: -5.970947742462158
    7. '+' → logprob: -7.595947742462158
    8. ' +' → logprob: -9.470947265625
    9. '*j' → logprob: -9.470947265625
    10. ' ' → logprob: -10.220947265625

Token 173: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0662706270813942
    2. ' j' → logprob: -2.816270589828491
    3. 'len' → logprob: -6.31627082824707
    4. ' ' → logprob: -8.06627082824707
    5. 'jj' → logprob: -8.19127082824707
    6. '   ' → logprob: -8.31627082824707
    7. ' len' → logprob: -8.44127082824707
    8. '>' → logprob: -8.56627082824707
    9. 'k' → logprob: -8.69127082824707
    10. '*j' → logprob: -8.69127082824707

Token 174: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5061019659042358
    2. ' >=' → logprob: -1.5061019659042358
    3. '>' → logprob: -1.8811019659042358
    4. '>=' → logprob: -3.8811020851135254
    5. ' ' → logprob: -6.506102085113525
    6. ' <' → logprob: -8.756101608276367
    7. '*' → logprob: -9.006101608276367
    8. ' *' → logprob: -9.006101608276367
    9. '   ' → logprob: -9.131101608276367
    10. '">' → logprob: -9.756101608276367

Token 175: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.10405103117227554
    2. ' kk' → logprob: -2.354051113128662
    3. '<|end|>' → logprob: -5.729051113128662
    4. '  ' → logprob: -8.604050636291504
    5. 'k' → logprob: -8.729050636291504
    6. 'kkkk' → logprob: -9.479050636291504
    7. ' ' → logprob: -10.104050636291504
    8. '   ' → logprob: -10.604050636291504
    9. '<|end|>' → logprob: -11.229050636291504
    10. 'ck' → logprob: -11.229050636291504

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5868545770645142
    2. 'def' → logprob: -1.2118545770645142
    3. '<|end|>' → logprob: -2.4618544578552246
    4. '

' → logprob: -3.3368544578552246
    5. '\n' → logprob: -4.711854457855225
    6. ':' → logprob: -4.961854457855225
    7. '<|end|>' → logprob: -5.961854457855225
    8. ':def' → logprob: -6.336854457855225
    9. '\' → logprob: -6.836854457855225
    10. '    
' → logprob: -6.961854457855225

Token 177: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39454418420791626
    2. 'def' → logprob: -1.6445441246032715
    3. '<|end|>' → logprob: -2.2695441246032715
    4. '
' → logprob: -4.3945441246032715
    5. ')' → logprob: -4.7695441246032715
    6. '#' → logprob: -5.6445441246032715
    7. ':def' → logprob: -6.3945441246032715
    8. '_' → logprob: -7.8945441246032715
    9. '

' → logprob: -7.8945441246032715
    10. '<|end|>' → logprob: -8.01954460144043

Token 178: ' should' (ID: 1757)
  Prédit: ' should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.020470647141337395
    2. 'should' → logprob: -4.02047061920166
    3. ' def' → logprob: -6.77047061920166
    4. ' main' → logprob: -8.52047061920166
    5. ' combine' → logprob: -8.77047061920166
    6. ' find' → logprob: -8.89547061920166
    7. '_should' → logprob: -9.27047061920166
    8. ' break' → logprob: -9.39547061920166
    9. ' solve' → logprob: -9.64547061920166
    10. ' process' → logprob: -10.02047061920166

Token 179: '_break' (ID: 98301)
  Prédit: '_break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.00022451656695920974
    2. '_continue' → logprob: -8.750224113464355
    3. '_stop' → logprob: -10.750224113464355
    4. '_replace' → logprob: -12.375224113464355
    5. '_expand' → logprob: -12.500224113464355
    6. '_take' → logprob: -12.500224113464355
    7. '_keep' → logprob: -12.500224113464355
    8. '_skip' → logprob: -12.625224113464355
    9. '_cut' → logprob: -12.875224113464355
    10. '_fail' → logprob: -12.875224113464355

Token 180: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5705501437187195
    2. '_k' → logprob: -0.9455501437187195
    3. 'k' → logprob: -4.195549964904785
    4. '(k' → logprob: -4.445549964904785
    5. '(i' → logprob: -4.570549964904785
    6. 'i' → logprob: -5.195549964904785
    7. '_j' → logprob: -6.820549964904785
    8. '_' → logprob: -7.195549964904785
    9. '(' → logprob: -7.445549964904785
    10. '(_' → logprob: -7.945549964904785

Token 181: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.2091645747423172
    2. '(' → logprob: -2.334164619445801
    3. '_' → logprob: -2.584164619445801
    4. '(j' → logprob: -4.834164619445801
    5. '(_' → logprob: -6.084164619445801
    6. '(i' → logprob: -6.584164619445801
    7. ',' → logprob: -6.709164619445801
    8. '_i' → logprob: -7.209164619445801
    9. 'j' → logprob: -7.834164619445801
    10. ',j' → logprob: -7.959164619445801

Token 182: '_k' (ID: 11637)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.102741003036499
    2. '(i' → logprob: -1.727741003036499
    3. '_' → logprob: -1.852741003036499
    4. '(k' → logprob: -2.227741003036499
    5. '_k' → logprob: -2.227741003036499
    6. '_j' → logprob: -3.727741003036499
    7. '(_' → logprob: -3.727741003036499
    8. '_(' → logprob: -4.102741241455078
    9. '(j' → logprob: -4.602741241455078
    10. 'k' → logprob: -4.852741241455078

Token 183: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006716436706483364
    2. '(' → logprob: -5.006716251373291
    3. ' (' → logprob: -14.13171672821045
    4. '(I' → logprob: -15.88171672821045
    5. '(k' → logprob: -15.88171672821045
    6. '(
' → logprob: -16.256715774536133
    7. '(a' → logprob: -17.256715774536133
    8. '(s' → logprob: -18.881715774536133
    9. '(

' → logprob: -19.006715774536133
    10. '(ii' → logprob: -19.506715774536133

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004180971533060074
    2. ' ,' → logprob: -6.129180908203125
    3. ',j' → logprob: -6.629180908203125
    4. ',k' → logprob: -7.504180908203125
    5. '<|end|>' → logprob: -9.879180908203125
    6. ')' → logprob: -11.129180908203125
    7. ',i' → logprob: -11.379180908203125
    8. ' ' → logprob: -11.629180908203125
    9. '_,' → logprob: -12.254180908203125
    10. ',
' → logprob: -12.379180908203125

Token 185: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2366180270910263
    2. 'k' → logprob: -1.8616180419921875
    3. ' j' → logprob: -2.9866180419921875
    4. ' k' → logprob: -5.3616180419921875
    5. '<|end|>' → logprob: -8.986618041992188
    6. ')' → logprob: -12.236618041992188
    7. ' ' → logprob: -12.986618041992188
    8. '    ' → logprob: -14.361618041992188
    9. '<|end|>' → logprob: -14.861618041992188
    10. '   ' → logprob: -14.986618041992188

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023569567129015923
    2. ',k' → logprob: -3.7735695838928223
    3. ' ,' → logprob: -8.273569107055664
    4. ')' → logprob: -10.773569107055664
    5. ',
' → logprob: -11.023569107055664
    6. '<|end|>' → logprob: -11.398569107055664
    7. 'k' → logprob: -12.148569107055664
    8. ',j' → logprob: -12.898569107055664
    9. ' k' → logprob: -13.023569107055664
    10. ',n' → logprob: -13.398569107055664

Token 187: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005929982289671898
    2. ' k' → logprob: -5.130929946899414
    3. ')' → logprob: -14.130929946899414
    4. '<|end|>' → logprob: -15.630929946899414
    5. '	k' → logprob: -15.755929946899414
    6. ' ' → logprob: -16.630929946899414
    7. '_k' → logprob: -17.130929946899414
    8. 'kk' → logprob: -17.130929946899414
    9. '  ' → logprob: -17.380929946899414
    10. '   ' → logprob: -17.630929946899414

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020270596724003553
    2. ' ,' → logprob: -8.750203132629395
    3. ',k' → logprob: -10.500203132629395
    4. '):' → logprob: -11.750203132629395
    5. ',
' → logprob: -12.750203132629395
    6. ',i' → logprob: -12.875203132629395
    7. ')' → logprob: -13.875203132629395
    8. ',j' → logprob: -14.625203132629395
    9. '   ' → logprob: -14.875203132629395
    10. '_,' → logprob: -15.375203132629395

Token 189: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.34914278984069824
    2. ' kk' → logprob: -1.2241427898406982
    3. 'k' → logprob: -7.974143028259277
    4. '   ' → logprob: -8.974143028259277
    5. ')' → logprob: -9.099143028259277
    6. '  ' → logprob: -10.349143028259277
    7. ' ' → logprob: -10.599143028259277
    8. ' k' → logprob: -10.849143028259277
    9. ',' → logprob: -11.849143028259277
    10. '):
' → logprob: -11.974143028259277

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016444525681436062
    2. '):
' → logprob: -9.125164031982422
    3. ')' → logprob: -10.000164031982422
    4. ' ):' → logprob: -12.125164031982422
    5. ':' → logprob: -12.625164031982422
    6. '   ' → logprob: -14.375164031982422
    7. ',' → logprob: -14.750164031982422
    8. '):
' → logprob: -15.750164031982422
    9. '):

' → logprob: -15.875164031982422
    10. '}:' → logprob: -17.125164031982422

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.810037742368877e-05
    2. 'return' → logprob: -10.375038146972656
    3. ' return' → logprob: -12.250038146972656
    4. '    
' → logprob: -14.625038146972656
    5. '  ' → logprob: -15.000038146972656
    6. '	return' → logprob: -15.125038146972656
    7. '       ' → logprob: -15.375038146972656
    8. '{return' → logprob: -15.375038146972656
    9. '   ' → logprob: -16.000038146972656
    10. '    ' → logprob: -16.500038146972656

Token 192: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5793219804763794
    2. 'return' (adapté à ' return') → logprob: -0.8293219804763794
    3. ' return' → logprob: -5.70432186126709
    4. 'i' → logprob: -10.32932186126709
    5. '  ' → logprob: -12.45432186126709
    6. ' ' → logprob: -13.45432186126709
    7. 'def' → logprob: -13.57932186126709
    8. '
' → logprob: -13.70432186126709
    9. ' i' → logprob: -13.70432186126709
    10. '(i' → logprob: -13.95432186126709

Token 193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07926065474748611
    2. ' i' → logprob: -2.5792605876922607
    3. '   ' → logprob: -7.95426082611084
    4. '(i' → logprob: -11.32926082611084
    5. ' (' → logprob: -12.32926082611084
    6. '  ' → logprob: -13.95426082611084
    7. 'k' → logprob: -14.32926082611084
    8. '(' → logprob: -14.32926082611084
    9. ' ' → logprob: -14.32926082611084
    10. '	i' → logprob: -15.45426082611084

Token 194: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08895037323236465
    2. '*' → logprob: -2.4639503955841064
    3. ' ' → logprob: -12.088950157165527
    4. '>' → logprob: -13.463950157165527
    5. ' ' → logprob: -13.588950157165527
    6. '**' → logprob: -14.713950157165527
    7. '*j' → logprob: -14.838950157165527
    8. ' >' → logprob: -15.338950157165527
    9. '   ' → logprob: -15.338950157165527
    10. ' **' → logprob: -15.838950157165527

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003683212911710143
    2. ' j' → logprob: -5.628683090209961
    3. 'k' → logprob: -9.503683090209961
    4. '   ' → logprob: -12.628683090209961
    5. 'jk' → logprob: -12.753683090209961
    6. '	j' → logprob: -14.128683090209961
    7. '  ' → logprob: -14.628683090209961
    8. ' ' → logprob: -14.878683090209961
    9. '    ' → logprob: -15.253683090209961
    10. '```' → logprob: -15.628683090209961

Token 196: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2636822462081909
    2. ' *' → logprob: -1.638682246208191
    3. '>' → logprob: -3.7636823654174805
    4. ' >' → logprob: -4.2636823654174805
    5. '*k' → logprob: -9.01368236541748
    6. ' >=' → logprob: -9.88868236541748
    7. 'k' → logprob: -10.38868236541748
    8. ' ' → logprob: -10.38868236541748
    9. ' k' → logprob: -11.26368236541748
    10. '*>' → logprob: -11.51368236541748

Token 197: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3132758140563965
    2. ' k' → logprob: -1.3132758140563965
    3. ' ' → logprob: -11.438276290893555
    4. '	k' → logprob: -14.188276290893555
    5. '```' → logprob: -14.313276290893555
    6. '  ' → logprob: -14.563276290893555
    7. ' >' → logprob: -14.563276290893555
    8. '   ' → logprob: -14.813276290893555
    9. '>' → logprob: -14.813276290893555
    10. '(k' → logprob: -16.188276290893555

Token 198: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5766509771347046
    2. '>' → logprob: -0.8266509771347046
    3. ' >=' → logprob: -7.701651096343994
    4. '>=' → logprob: -8.451650619506836
    5. ' ' → logprob: -10.076650619506836
    6. '   ' → logprob: -13.826650619506836
    7. '  ' → logprob: -13.951650619506836
    8. '<' → logprob: -15.326650619506836
    9. ' <' → logprob: -15.326650619506836
    10. '">' → logprob: -15.451650619506836

Token 199: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.12692904472351074
    2. ' kk' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.62692928314209
    4. 'kkkk' → logprob: -15.37692928314209
    5. '   ' → logprob: -16.001928329467773
    6. 'k' → logprob: -16.751928329467773
    7. '  ' → logprob: -17.001928329467773
    8. 'ck' → logprob: -17.001928329467773
    9. '```' → logprob: -17.501928329467773
    10. 'KK' → logprob: -17.626928329467773

Token 200: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.000763510703109e-05
    2. '@' → logprob: -10.625040054321289
    3. '
' → logprob: -11.750040054321289
    4. '<|end|>' → logprob: -12.500040054321289
    5. '#' → logprob: -14.250040054321289
    6. 'from' → logprob: -14.500040054321289
    7. ')' → logprob: -14.500040054321289
    8. '```' → logprob: -15.000040054321289
    9. ' def' → logprob: -15.250040054321289
    10. 'class' → logprob: -15.250040054321289

Token 201: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.531813702778891e-05
    2. '#' → logprob: -10.62509536743164
    3. '<|end|>' → logprob: -11.00009536743164
    4. ')' → logprob: -11.37509536743164
    5. 'class' → logprob: -11.75009536743164
    6. 'import' → logprob: -11.87509536743164
    7. '[' → logprob: -12.25009536743164
    8. '```' → logprob: -12.37509536743164
    9. '[]' → logprob: -12.62509536743164
    10. '<|end|>' → logprob: -13.00009536743164

Token 202: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3741444945335388
    2. 'main' → logprob: -1.2491445541381836
    3. ' find' → logprob: -4.999144554138184
    4. 'combine' → logprob: -5.874144554138184
    5. ' combine' → logprob: -5.999144554138184
    6. 'max' → logprob: -6.374144554138184
    7. ' generate' → logprob: -6.499144554138184
    8. ' top' → logprob: -6.624144554138184
    9. 'generate' → logprob: -6.624144554138184
    10. ' solve' → logprob: -6.874144554138184

Token 203: '_com' (ID: 10828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23186098039150238
    2. '_' → logprob: -2.231860876083374
    3. '(a' → logprob: -2.856860876083374
    4. 'def' → logprob: -4.481861114501953
    5. '   ' → logprob: -4.606861114501953
    6. ',' → logprob: -5.106861114501953
    7. ')' → logprob: -6.106861114501953
    8. '  ' → logprob: -6.481861114501953
    9. ' (' → logprob: -6.731861114501953
    10. '(i' → logprob: -7.106861114501953

Token 204: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.2035461813211441
    2. 'bine' → logprob: -1.828546166419983
    3. 'b' → logprob: -4.453546047210693
    4. 'bination' → logprob: -4.828546047210693
    5. '```' → logprob: -7.328546047210693
    6. 'press' → logprob: -7.578546047210693
    7. 'pute' → logprob: -7.703546047210693
    8. 'ponents' → logprob: -8.078546524047852
    9. '_b' → logprob: -8.203546524047852
    10. 'pose' → logprob: -8.203546524047852

Token 205: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5081886649131775
    2. '(a' → logprob: -1.0081887245178223
    3. '(i' → logprob: -3.6331887245178223
    4. '_' → logprob: -5.633188724517822
    5. '(
' → logprob: -7.633188724517822
    6. '(lst' → logprob: -8.008188247680664
    7. '_of' → logprob: -8.383188247680664
    8. '(*' → logprob: -8.383188247680664
    9. '(x' → logprob: -8.758188247680664
    10. '(iter' → logprob: -8.883188247680664

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011933216592296958
    2. ' ,' → logprob: -7.751193523406982
    3. '[' → logprob: -8.501193046569824
    4. ')' → logprob: -9.126193046569824
    5. '   ' → logprob: -9.376193046569824
    6. '[:' → logprob: -9.501193046569824
    7. '[i' → logprob: -9.751193046569824
    8. 'def' → logprob: -9.876193046569824
    9. ',
' → logprob: -10.126193046569824
    10. '):' → logprob: -10.626193046569824

Token 207: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28121495246887207
    2. ' b' → logprob: -1.406214952468872
    3. 'range' → logprob: -11.281214714050293
    4. ' ' → logprob: -11.531214714050293
    5. '   ' → logprob: -12.031214714050293
    6. 'a' → logprob: -12.406214714050293
    7. '  ' → logprob: -12.531214714050293
    8. '[' → logprob: -12.968714714050293
    9. '0' → logprob: -13.031214714050293
    10. '(b' → logprob: -13.093714714050293

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01459075603634119
    2. '):' → logprob: -4.389590740203857
    3. ' ,' → logprob: -6.389590740203857
    4. ',c' → logprob: -9.139591217041016
    5. ' ):' → logprob: -9.264591217041016
    6. '   ' → logprob: -9.889591217041016
    7. ')' → logprob: -10.014591217041016
    8. '):
' → logprob: -10.014591217041016
    9. ',
' → logprob: -11.014591217041016
    10. '[' → logprob: -12.014591217041016

Token 209: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005934962537139654
    2. ' c' → logprob: -5.130935192108154
    3. '   ' → logprob: -13.380934715270996
    4. ')' → logprob: -13.755934715270996
    5. '  ' → logprob: -13.880934715270996
    6. ')c' → logprob: -14.005934715270996
    7. ' ' → logprob: -14.505934715270996
    8. 'k' → logprob: -15.630934715270996
    9. '<|end|>' → logprob: -15.630934715270996
    10. '	c' → logprob: -15.880934715270996

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03369295969605446
    2. '):' → logprob: -3.4086930751800537
    3. ',i' → logprob: -11.283693313598633
    4. ' ,' → logprob: -11.408693313598633
    5. '):
' → logprob: -11.783693313598633
    6. '   ' → logprob: -12.408693313598633
    7. ',k' → logprob: -12.658693313598633
    8. ')' → logprob: -13.033693313598633
    9. ' ):' → logprob: -13.408693313598633
    10. ':' → logprob: -13.533693313598633

Token 211: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.20325028896331787
    2. ' kk' → logprob: -1.8282502889633179
    3. 'k' → logprob: -3.8282504081726074
    4. ' k' → logprob: -6.703250408172607
    5. ' ' → logprob: -9.57824993133545
    6. '   ' → logprob: -10.20324993133545
    7. 'x' → logprob: -10.57824993133545
    8. '```' → logprob: -10.57824993133545
    9. '
' → logprob: -11.07824993133545
    10. ')' → logprob: -11.64074993133545

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014411473646759987
    2. ',' → logprob: -4.264411449432373
    3. '):
' → logprob: -8.764411926269531
    4. ')' → logprob: -9.889411926269531
    5. ' ):' → logprob: -10.889411926269531
    6. ':' → logprob: -11.264411926269531
    7. '   ' → logprob: -12.514411926269531
    8. '):
' → logprob: -13.639411926269531
    9. '=' → logprob: -14.139411926269531
    10. ' ,' → logprob: -14.264411926269531

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000513952283654362
    2. 'result' → logprob: -8.625514030456543
    3. 'results' → logprob: -8.875514030456543
    4. ' results' → logprob: -9.125514030456543
    5. ' result' → logprob: -10.125514030456543
    6. ' res' → logprob: -11.500514030456543
    7. '   ' → logprob: -12.125514030456543
    8. '```' → logprob: -12.375514030456543
    9. 'import' → logprob: -12.500514030456543
    10. '    
' → logprob: -12.875514030456543

Token 214: ' ll' (ID: 11475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022909408435225487
    2. 'result' → logprob: -5.147909641265869
    3. ' res' → logprob: -5.272909641265869
    4. ' result' → logprob: -5.397909641265869
    5. 'results' → logprob: -5.897909641265869
    6. ' results' → logprob: -6.272909641265869
    7. 'import' → logprob: -7.147909641265869
    8. 'res' → logprob: -7.147909641265869
    9. ' ans' → logprob: -7.772909641265869
    10. ' import' → logprob: -9.147909164428711

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.122242771089077
    2. ' =' → logprob: -2.3722426891326904
    3. '=[]' → logprob: -3.9972426891326904
    4. 'ist' → logprob: -6.1222429275512695
    5. 'l' → logprob: -7.9972429275512695
    6. 'm' → logprob: -8.62224292755127
    7. 'imit' → logprob: -9.12224292755127
    8. '=[' → logprob: -9.37224292755127
    9. 'im' → logprob: -9.37224292755127
    10. '=[]
' → logprob: -9.62224292755127

Token 216: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0008377424674108624
    2. '[]
' → logprob: -8.250837326049805
    3. '0' → logprob: -8.375837326049805
    4. 'min' → logprob: -9.375837326049805
    5. 'a' → logprob: -9.750837326049805
    6. '[' → logprob: -9.875837326049805
    7. ' []' → logprob: -9.875837326049805
    8. 'list' → logprob: -10.625837326049805
    9. '[(' → logprob: -11.000837326049805
    10. 'it' → logprob: -11.750837326049805

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06820565462112427
    2. 'for' → logprob: -3.0682055950164795
    3. ' for' → logprob: -3.9432055950164795
    4. '	for' → logprob: -10.943205833435059
    5. ',' → logprob: -12.193205833435059
    6. ' ' → logprob: -12.443205833435059
    7. 'def' → logprob: -12.568205833435059
    8. '    ' → logprob: -13.318205833435059
    9. '       ' → logprob: -13.318205833435059
    10. '    
' → logprob: -13.568205833435059

Token 218: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025889402255415916
    2. '   ' → logprob: -4.0258893966674805
    3. 'x' → logprob: -4.9008893966674805
    4. ' for' → logprob: -8.52588939666748
    5. 'i' → logprob: -9.90088939666748
    6. 'n' → logprob: -11.77588939666748
    7. '```' → logprob: -13.15088939666748
    8. 'from' → logprob: -13.27588939666748
    9. 'max' → logprob: -13.65088939666748
    10. '  ' → logprob: -13.65088939666748

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762791037559509
    2. '=' → logprob: -0.8262791037559509
    3. '   ' → logprob: -8.951278686523438
    4. '_' → logprob: -9.326278686523438
    5. ' ' → logprob: -10.576278686523438
    6. ',' → logprob: -10.826278686523438
    7. ')' → logprob: -11.076278686523438
    8. '  ' → logprob: -11.326278686523438
    9. '(' → logprob: -11.576278686523438
    10. 'space' → logprob: -12.201278686523438

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024801772087812424
    2. ' ' → logprob: -6.0024800300598145
    3. '   ' → logprob: -12.502480506896973
    4. '  ' → logprob: -14.752480506896973
    5. '1' → logprob: -16.002479553222656
    6. '000' → logprob: -16.877479553222656
    7. '=' → logprob: -17.377479553222656
    8. ' ' → logprob: -17.377479553222656
    9. '    ' → logprob: -17.689979553222656
    10. '<|end|>' → logprob: -18.002479553222656

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.75010871887207
    4. '  ' → logprob: -18.50010871887207
    5. '[' → logprob: -19.00010871887207
    6. '000' → logprob: -19.12510871887207
    7. '00' → logprob: -19.25010871887207
    8. 'min' → logprob: -19.37510871887207
    9. '{}' → logprob: -19.62510871887207
    10. '1' → logprob: -19.75010871887207

Token 222: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2882108986377716
    2. '
' → logprob: -1.9132108688354492
    3. '<|end|>' → logprob: -3.413210868835449
    4. '    
' → logprob: -3.538210868835449
    5. ' for' → logprob: -4.288210868835449
    6. '	for' → logprob: -4.913210868835449
    7. 'for' → logprob: -5.288210868835449
    8. '	
' → logprob: -5.538210868835449
    9. ' 
' → logprob: -6.288210868835449
    10. '  
' → logprob: -6.538210868835449

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13219241797924042
    2. ' for' → logprob: -3.382192373275757
    3. '<|end|>' → logprob: -3.382192373275757
    4. '	for' → logprob: -4.007192611694336
    5. 'for' → logprob: -4.257192611694336
    6. '    
' → logprob: -5.007192611694336
    7. '\t' → logprob: -5.257192611694336
    8. '    ' → logprob: -6.007192611694336
    9. ' ' → logprob: -6.507192611694336
    10. ',' → logprob: -6.757192611694336

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00536561431363225
    2. '   ' → logprob: -5.88036584854126
    3. 'x' → logprob: -6.25536584854126
    4. ' for' → logprob: -7.63036584854126
    5. 'i' → logprob: -9.005365371704102
    6. 'n' → logprob: -11.630365371704102
    7. '```' → logprob: -12.505365371704102
    8. 'max' → logprob: -12.630365371704102
    9. ' ' → logprob: -13.255365371704102
    10. 'from' → logprob: -13.380365371704102

Token 225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759618878364563
    2. ' i' → logprob: -0.8259618878364563
    3. '	i' → logprob: -11.70096206665039
    4. '   ' → logprob: -11.82596206665039
    5. ' ' → logprob: -12.95096206665039
    6. '_i' → logprob: -13.45096206665039
    7. '    ' → logprob: -13.57596206665039
    8. '```' → logprob: -13.95096206665039
    9. '  ' → logprob: -14.82596206665039
    10. '`' → logprob: -16.32596206665039

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0831548273563385
    2. 'in' → logprob: -3.2081549167633057
    3. ',' → logprob: -3.4581549167633057
    4. ' ,' → logprob: -5.333154678344727
    5. ' ' → logprob: -5.833154678344727
    6. '0' → logprob: -10.833154678344727
    7. ')' → logprob: -11.333154678344727
    8. '  ' → logprob: -11.333154678344727
    9. '```' → logprob: -11.458154678344727
    10. '[' → logprob: -11.958154678344727

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015518791042268276
    2. ' range' → logprob: -6.751552104949951
    3. 'a' → logprob: -7.876552104949951
    4. 'len' → logprob: -14.501551628112793
    5. '   ' → logprob: -15.001551628112793
    6. ' a' → logprob: -15.126551628112793
    7. '	range' → logprob: -15.376551628112793
    8. 'r' → logprob: -15.876551628112793
    9. 'rang' → logprob: -16.00155258178711
    10. ' ' → logprob: -16.00155258178711

Token 228: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.003958243876695633
    2. 'len' → logprob: -6.253958225250244
    3. '(min' → logprob: -7.003958225250244
    4. '(' → logprob: -7.378958225250244
    5. '(a' → logprob: -8.753958702087402
    6. 'min' → logprob: -9.003958702087402
    7. ' len' → logprob: -9.628958702087402
    8. 'a' → logprob: -9.753958702087402
    9. '   ' → logprob: -10.128958702087402
    10. '	len' → logprob: -11.128958702087402

Token 229: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.183501293184236e-05
    2. 'a' → logprob: -9.62507152557373
    3. '(' → logprob: -12.12507152557373
    4. ' (' → logprob: -15.75007152557373
    5. '(
' → logprob: -17.125072479248047
    6. ' a' → logprob: -17.375072479248047
    7. '(A' → logprob: -17.750072479248047
    8. ')a' → logprob: -18.000072479248047
    9. '(b' → logprob: -18.125072479248047
    10. ')' → logprob: -18.750072479248047

Token 230: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.05608244240283966
    2. '):' → logprob: -3.8060824871063232
    3. ')):
' → logprob: -3.8060824871063232
    4. '))' → logprob: -4.681082248687744
    5. ')' → logprob: -7.931082248687744
    6. ' ' → logprob: -8.556082725524902
    7. '):
' → logprob: -9.056082725524902
    8. ' ))' → logprob: -10.431082725524902
    9. ' ):' → logprob: -10.681082725524902
    10. '   ' → logprob: -10.681082725524902

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030902482569217682
    2. ':' → logprob: -4.53090238571167
    3. ' ' → logprob: -4.65590238571167
    4. '<|end|>' → logprob: -5.40590238571167
    5. '   ' → logprob: -6.28090238571167
    6. '    ' → logprob: -6.40590238571167
    7. '     ' → logprob: -7.65590238571167
    8. '        ' → logprob: -7.78090238571167
    9. ',' → logprob: -8.155902862548828
    10. ' :' → logprob: -8.530902862548828

Token 232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32901114225387573
    2. 'for' (adapté à ' for') → logprob: -1.3290112018585205
    3. '   ' → logprob: -4.954010963439941
    4. '       ' → logprob: -5.454010963439941
    5. ' if' → logprob: -6.204010963439941
    6. 'if' → logprob: -6.454010963439941
    7. ' j' → logprob: -7.954010963439941
    8. '    ' → logprob: -8.954010963439941
    9. 'j' → logprob: -9.329010963439941
    10. ' ' → logprob: -9.829010963439941

Token 233: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.523679792881012
    2. ' j' → logprob: -0.898679792881012
    3. '   ' → logprob: -8.398679733276367
    4. '0' → logprob: -9.148679733276367
    5. 'range' → logprob: -9.648679733276367
    6. 'len' → logprob: -10.023679733276367
    7. ' ' → logprob: -10.523679733276367
    8. ' range' → logprob: -10.523679733276367
    9. ' len' → logprob: -10.648679733276367
    10. '    ' → logprob: -11.398679733276367

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004736276343464851
    2. 'in' → logprob: -5.504736423492432
    3. ' ' → logprob: -7.379736423492432
    4. ',' → logprob: -11.879735946655273
    5. ')' → logprob: -12.004735946655273
    6. ' ,' → logprob: -12.629735946655273
    7. '    ' → logprob: -13.004735946655273
    8. ' )' → logprob: -13.004735946655273
    9. '	in' → logprob: -13.379735946655273
    10. ' =' → logprob: -13.504735946655273

Token 235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197362765669823
    2. ' range' → logprob: -2.8119735717773438
    3. '(range' → logprob: -12.061973571777344
    4. 'len' → logprob: -17.311973571777344
    5. '	range' → logprob: -17.936973571777344
    6. '   ' → logprob: -18.186973571777344
    7. ' ' → logprob: -18.561973571777344
    8. ' len' → logprob: -19.811973571777344
    9. '    ' → logprob: -20.436973571777344
    10. 'ange' → logprob: -20.561973571777344

Token 236: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.2113979209971149e-05
    2. 'len' → logprob: -12.000012397766113
    3. '(range' → logprob: -13.000012397766113
    4. '(' → logprob: -13.125012397766113
    5. 'range' → logprob: -14.375012397766113
    6. ' (' → logprob: -14.875012397766113
    7. ' len' → logprob: -15.000012397766113
    8. '<len' → logprob: -16.250011444091797
    9. '(min' → logprob: -16.625011444091797
    10. '[len' → logprob: -16.625011444091797

Token 237: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003091254911851138
    2. 'b' → logprob: -8.125308990478516
    3. '(a' → logprob: -12.250308990478516
    4. '(' → logprob: -12.875308990478516
    5. ' (' → logprob: -12.875308990478516
    6. 'a' → logprob: -13.750308990478516
    7. ' b' → logprob: -13.750308990478516
    8. '[b' → logprob: -14.875308990478516
    9. ')b' → logprob: -15.625308990478516
    10. '   ' → logprob: -16.125308990478516

Token 238: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3871540427207947
    2. '):
' → logprob: -1.1371541023254395
    3. ')):' → logprob: -8.762153625488281
    4. ')):
' → logprob: -9.762153625488281
    5. '       ' → logprob: -10.387153625488281
    6. '):
' → logprob: -11.262153625488281
    7. '()):
' → logprob: -12.137153625488281
    8. '():
' → logprob: -12.137153625488281
    9. '):

' → logprob: -12.387153625488281
    10. ')' → logprob: -12.512153625488281

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003145873546600342
    2. '       ' → logprob: -7.128145694732666
    3. '            ' → logprob: -7.253145694732666
    4. '        ' → logprob: -7.378145694732666
    5. '               ' → logprob: -8.128146171569824
    6. ' ' → logprob: -8.503146171569824
    7. '	       ' → logprob: -9.253146171569824
    8. '<|end|>' → logprob: -9.253146171569824
    9. ' if' → logprob: -10.003146171569824
    10. '[' → logprob: -10.003146171569824

Token 240: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0492380857467651
    2. '               ' → logprob: -1.0492380857467651
    3. ' if' → logprob: -1.4242380857467651
    4. 'if' (adapté à ' if') → logprob: -3.6742382049560547
    5. ' for' → logprob: -3.7992382049560547
    6. 'for' → logprob: -5.049238204956055
    7. ' k' → logprob: -6.049238204956055
    8. 'k' → logprob: -6.424238204956055
    9. '       ' → logprob: -8.424238204956055
    10. '                   ' → logprob: -8.674238204956055

Token 241: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.026450080797076225
    2. 'i' → logprob: -3.9014501571655273
    3. ' should' → logprob: -5.526450157165527
    4. '   ' → logprob: -6.776450157165527
    5. ' i' → logprob: -8.151450157165527
    6. 'a' → logprob: -8.776450157165527
    7. '(i' → logprob: -9.151450157165527
    8. 'not' → logprob: -9.526450157165527
    9. '(' → logprob: -9.776450157165527
    10. '  ' → logprob: -11.151450157165527

Token 242: '_break' (ID: 98301)
  Prédit: '_break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -1.5928495486150496e-05
    2. 'break' → logprob: -11.250016212463379
    3. '_' → logprob: -13.000016212463379
    4. '_continue' → logprob: -15.500016212463379
    5. '_b' → logprob: -15.625016212463379
    6. ' _' → logprob: -17.125015258789062
    7. '_BREAK' → logprob: -17.375015258789062
    8. 'i' → logprob: -17.625015258789062
    9. '_fail' → logprob: -17.875015258789062
    10. '_br' → logprob: -18.250015258789062

Token 243: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0007020648336037993
    2. 'i' → logprob: -7.500701904296875
    3. '(i' → logprob: -9.375701904296875
    4. '   ' → logprob: -10.500701904296875
    5. ' i' → logprob: -10.625701904296875
    6. ' ' → logprob: -12.125701904296875
    7. '[i' → logprob: -13.250701904296875
    8. ' _' → logprob: -13.875701904296875
    9. '{i' → logprob: -14.000701904296875
    10. '	i' → logprob: -14.500701904296875

Token 244: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.5779281854629517
    2. '_i' → logprob: -0.8279281854629517
    3. 'i' → logprob: -6.702928066253662
    4. 'j' → logprob: -8.57792854309082
    5. ',' → logprob: -8.95292854309082
    6. ' ' → logprob: -9.07792854309082
    7. '   ' → logprob: -9.45292854309082
    8. '```' → logprob: -9.70292854309082
    9. ' i' → logprob: -9.82792854309082
    10. ' _' → logprob: -9.82792854309082

Token 245: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006946814828552306
    2. '(' → logprob: -7.375694751739502
    3. ' (' → logprob: -9.625694274902344
    4. ' ' → logprob: -14.250694274902344
    5. 'i' → logprob: -14.625694274902344
    6. '   ' → logprob: -14.750694274902344
    7. ' i' → logprob: -15.375694274902344
    8. '(
' → logprob: -15.625694274902344
    9. ')' → logprob: -17.625694274902344
    10. '[i' → logprob: -17.625694274902344

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3071444034576416
    2. ',j' → logprob: -1.5571444034576416
    3. ' ,' → logprob: -2.9321444034576416
    4. ',
' → logprob: -9.057144165039062
    5. ' ' → logprob: -9.307144165039062
    6. ')' → logprob: -10.182144165039062
    7. '   ' → logprob: -10.307144165039062
    8. ' j' → logprob: -10.557144165039062
    9. '           ' → logprob: -11.432144165039062
    10. 'j' → logprob: -11.807144165039062

Token 247: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013282144209370017
    2. ' j' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.501328468322754
    4. '	j' → logprob: -15.126328468322754
    5. ' ' → logprob: -15.501328468322754
    6. '    ' → logprob: -16.001327514648438
    7. '  ' → logprob: -16.126327514648438
    8. '(j' → logprob: -16.376327514648438
    9. 'jj' → logprob: -17.251327514648438
    10. '
' → logprob: -17.376327514648438

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004037437494844198
    2. ' ,' → logprob: -5.629037380218506
    3. '):' → logprob: -7.879037380218506
    4. '   ' → logprob: -11.254037857055664
    5. '):
' → logprob: -11.504037857055664
    6. ',
' → logprob: -11.879037857055664
    7. '==' → logprob: -12.004037857055664
    8. ')' → logprob: -12.254037857055664
    9. ' ' → logprob: -12.379037857055664
    10. '  ' → logprob: -13.129037857055664

Token 249: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.002478985348716378
    2. ' kk' → logprob: -6.002479076385498
    3. 'k' → logprob: -13.12747859954834
    4. '   ' → logprob: -14.00247859954834
    5. '
' → logprob: -16.252479553222656
    6. '    ' → logprob: -16.377479553222656
    7. 'ck' → logprob: -16.752479553222656
    8. '  ' → logprob: -16.752479553222656
    9. 'kkkk' → logprob: -16.752479553222656
    10. ' ' → logprob: -16.877479553222656

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761542320251465
    2. '):
' → logprob: -0.8261542320251465
    3. '           ' → logprob: -9.201154708862305
    4. ':' → logprob: -10.076154708862305
    5. '):
' → logprob: -10.451154708862305
    6. ')' → logprob: -10.951154708862305
    7. '       ' → logprob: -11.576154708862305
    8. '               ' → logprob: -12.201154708862305
    9. ':
' → logprob: -12.326154708862305
    10. '   ' → logprob: -13.076154708862305

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019936825265176594
    2. 'break' → logprob: -9.125199317932129
    3. ' break' → logprob: -10.000199317932129
    4. '                   ' → logprob: -10.250199317932129
    5. '           ' → logprob: -12.625199317932129
    6. '              ' → logprob: -13.125199317932129
    7. '	break' → logprob: -13.750199317932129
    8. '                ' → logprob: -14.000199317932129
    9. '	           ' → logprob: -14.125199317932129
    10. '   ' → logprob: -14.750199317932129

Token 252: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1637309342622757
    2. '                   ' → logprob: -1.9137309789657593
    3. ' break' → logprob: -6.288731098175049
    4. '               ' → logprob: -6.538731098175049
    5. '   ' → logprob: -9.53873062133789
    6. '	break' → logprob: -9.66373062133789
    7. '                       ' → logprob: -10.03873062133789
    8. '       ' → logprob: -12.53873062133789
    9. 'return' → logprob: -12.53873062133789
    10. '           ' → logprob: -12.78873062133789

Token 253: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008359544444829226
    2. '       ' → logprob: -7.12583589553833
    3. '               ' → logprob: -11.625836372375488
    4. '		' → logprob: -11.750836372375488
    5. ' for' → logprob: -12.375836372375488
    6. '	       ' → logprob: -13.250836372375488
    7. '            
' → logprob: -13.625836372375488
    8. '          ' → logprob: -13.750836372375488
    9. 'for' → logprob: -14.125836372375488
    10. '        
' → logprob: -14.250836372375488

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042888117604888976
    2. '       ' → logprob: -8.000429153442383
    3. '            
' → logprob: -10.375429153442383
    4. '               ' → logprob: -10.750429153442383
    5. '		' → logprob: -10.750429153442383
    6. '          ' → logprob: -12.250429153442383
    7. '            ' → logprob: -12.500429153442383
    8. '        
' → logprob: -13.500429153442383
    9. '         ' → logprob: -13.500429153442383
    10. '
' → logprob: -13.750429153442383

Token 255: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5671665072441101
    2. '       ' → logprob: -1.1921665668487549
    3. 'for' (adapté à ' for') → logprob: -2.192166566848755
    4. ' for' → logprob: -4.067166328430176
    5. '   ' → logprob: -7.692166328430176
    6. '               ' → logprob: -10.567166328430176
    7. '	for' → logprob: -12.192166328430176
    8. '0' → logprob: -12.942166328430176
    9. 'k' → logprob: -13.317166328430176
    10. ' ' → logprob: -13.692166328430176

Token 256: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01416350994259119
    2. ' k' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.889163970947266
    4. '	k' → logprob: -18.264163970947266
    5. '   ' → logprob: -18.514163970947266
    6. '    ' → logprob: -19.514163970947266
    7. '  ' → logprob: -19.514163970947266
    8. ' к' → logprob: -19.639163970947266
    9. '```' → logprob: -20.264163970947266
    10. '_k' → logprob: -20.639163970947266

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815907657146454
    2. 'in' → logprob: -4.018158912658691
    3. ' ' → logprob: -11.893158912658691
    4. 'range' → logprob: -14.768158912658691
    5. '   ' → logprob: -15.393158912658691
    6. 'k' → logprob: -15.643158912658691
    7. '    ' → logprob: -15.643158912658691
    8. '  ' → logprob: -15.643158912658691
    9. '	in' → logprob: -15.643158912658691
    10. 'space' → logprob: -15.768158912658691

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023253168910741806
    2. ' range' → logprob: -3.7732532024383545
    3. '(range' → logprob: -11.773253440856934
    4. '	range' → logprob: -17.398252487182617
    5. '.range' → logprob: -20.023252487182617
    6. ' ' → logprob: -20.273252487182617
    7. '_range' → logprob: -20.273252487182617
    8. '   ' → logprob: -20.523252487182617
    9. 'rang' → logprob: -21.773252487182617
    10. '  ' → logprob: -21.773252487182617

Token 259: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.5048530030981055e-06
    2. 'len' → logprob: -13.500001907348633
    3. '(' → logprob: -17.375001907348633
    4. ' len' → logprob: -18.125001907348633
    5. '[len' → logprob: -18.500001907348633
    6. '<len' → logprob: -19.000001907348633
    7. '=len' → logprob: -19.000001907348633
    8. ',len' → logprob: -19.125001907348633
    9. '	len' → logprob: -19.750001907348633
    10. ' (' → logprob: -20.000001907348633

Token 260: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.081584716506768e-05
    2. 'c' → logprob: -10.875020980834961
    3. ')c' → logprob: -13.500020980834961
    4. '(' → logprob: -15.750020980834961
    5. '©' → logprob: -16.25002098083496
    6. '	c' → logprob: -16.62502098083496
    7. '(
' → logprob: -17.12502098083496
    8. '<c' → logprob: -18.12502098083496
    9. ')' → logprob: -18.37502098083496
    10. '(C' → logprob: -18.50002098083496

Token 261: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012730252929031849
    2. '):
' → logprob: -4.387730121612549
    3. ')):' → logprob: -9.262730598449707
    4. '():' → logprob: -9.512730598449707
    5. '()):
' → logprob: -11.262730598449707
    6. '():
' → logprob: -11.637730598449707
    7. '):
' → logprob: -11.887730598449707
    8. '):

' → logprob: -12.012730598449707
    9. ']):' → logprob: -12.512730598449707
    10. '>):' → logprob: -13.012730598449707

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006874137907288969
    2. '           ' → logprob: -7.625687599182129
    3. ' if' → logprob: -9.250687599182129
    4. '       ' → logprob: -10.000687599182129
    5. 'if' → logprob: -10.750687599182129
    6. '<|end|>' → logprob: -11.000687599182129
    7. '                   ' → logprob: -11.875687599182129
    8. '              ' → logprob: -12.625687599182129
    9. '                ' → logprob: -13.000687599182129
    10. '             ' → logprob: -13.625687599182129

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06898681074380875
    2. '               ' → logprob: -3.4439868927001953
    3. ' if' → logprob: -4.068986892700195
    4. '                   ' → logprob: -4.568986892700195
    5. '           ' → logprob: -5.068986892700195
    6. '       ' → logprob: -7.068986892700195
    7. '   ' → logprob: -9.318986892700195
    8. '                       ' → logprob: -11.318986892700195
    9. '	if' → logprob: -11.443986892700195
    10. '                ' → logprob: -13.443986892700195

Token 264: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.20145533978939056
    2. ' should' → logprob: -1.7014553546905518
    3. '               ' → logprob: -10.451455116271973
    4. '   ' → logprob: -12.576455116271973
    5. '           ' → logprob: -12.576455116271973
    6. '                   ' → logprob: -12.701455116271973
    7. '.should' → logprob: -13.701455116271973
    8. ' ' → logprob: -14.326455116271973
    9. '_should' → logprob: -15.076455116271973
    10. '       ' → logprob: -15.576455116271973

Token 265: '_break' (ID: 98301)
  Prédit: '_break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -4.0126840758603066e-05
    2. 'break' → logprob: -10.125040054321289
    3. ' break' → logprob: -17.87504005432129
    4. '_continue' → logprob: -18.12504005432129
    5. '_BREAK' → logprob: -18.37504005432129
    6. '_' → logprob: -18.50004005432129
    7. '-break' → logprob: -19.37504005432129
    8. '```' → logprob: -19.37504005432129
    9. 'Break' → logprob: -19.87504005432129
    10. '	break' → logprob: -20.25004005432129

Token 266: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0018583188066259027
    2. 'i' → logprob: -6.376858234405518
    3. '(i' → logprob: -8.876858711242676
    4. ' i' → logprob: -12.501858711242676
    5. '_' → logprob: -13.001858711242676
    6. '```' → logprob: -13.126858711242676
    7. '   ' → logprob: -13.251858711242676
    8. '[i' → logprob: -13.501858711242676
    9. '(' → logprob: -13.501858711242676
    10. ' ' → logprob: -14.251858711242676

Token 267: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0020063186530023813
    2. 'j' → logprob: -6.627006530761719
    3. '_i' → logprob: -7.377006530761719
    4. '_k' → logprob: -10.377006530761719
    5. 'i' → logprob: -10.752006530761719
    6. '```' → logprob: -14.252006530761719
    7. 'jk' → logprob: -15.127006530761719
    8. 'J' → logprob: -15.127006530761719
    9. 'k' → logprob: -15.502006530761719
    10. '   ' → logprob: -16.00200653076172

Token 268: '_k' (ID: 11637)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014886644668877125
    2. 'i' → logprob: -4.389886856079102
    3. '(' → logprob: -6.264886856079102
    4. '_i' → logprob: -7.764886856079102
    5. ' (' → logprob: -10.514886856079102
    6. ' i' → logprob: -12.014886856079102
    7. '(k' → logprob: -12.889886856079102
    8. '(
' → logprob: -13.014886856079102
    9. '```' → logprob: -13.014886856079102
    10. '	i' → logprob: -13.139886856079102

Token 269: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -10.500028610229492
    3. 'i' → logprob: -14.375028610229492
    4. '(
' → logprob: -16.375028610229492
    5. ' (' → logprob: -17.500028610229492
    6. ' i' → logprob: -19.000028610229492
    7. '```' → logprob: -19.125028610229492
    8. '(k' → logprob: -20.250028610229492
    9. ')' → logprob: -20.250028610229492
    10. '(I' → logprob: -20.500028610229492

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00873996689915657
    2. ',j' → logprob: -4.758739948272705
    3. ' ,' → logprob: -9.133740425109863
    4. 'j' → logprob: -11.383740425109863
    5. ',
' → logprob: -12.758740425109863
    6. ' j' → logprob: -13.633740425109863
    7. ',k' → logprob: -14.133740425109863
    8. '(j' → logprob: -15.508740425109863
    9. '<|end|>' → logprob: -15.508740425109863
    10. '(' → logprob: -15.758740425109863

Token 271: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017023178515955806
    2. ' j' → logprob: -6.376702308654785
    3. '	j' → logprob: -16.0017032623291
    4. '<|end|>' → logprob: -18.0017032623291
    5. ',j' → logprob: -18.2517032623291
    6. 'k' → logprob: -18.2517032623291
    7. '$j' → logprob: -19.0017032623291
    8. '   ' → logprob: -19.0017032623291
    9. ' ' → logprob: -19.1267032623291
    10. '[j' → logprob: -19.2517032623291

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010276809334754944
    2. ',k' → logprob: -4.635276794433594
    3. ' ,' → logprob: -8.135276794433594
    4. 'k' → logprob: -8.510276794433594
    5. ' k' → logprob: -11.135276794433594
    6. ',
' → logprob: -12.760276794433594
    7. '(k' → logprob: -12.885276794433594
    8. ')' → logprob: -13.635276794433594
    9. '[k' → logprob: -13.885276794433594
    10. '                   ' → logprob: -13.885276794433594

Token 273: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001584850688232109
    2. ' k' → logprob: -8.750158309936523
    3. '                   ' → logprob: -18.500158309936523
    4. '	k' → logprob: -18.875158309936523
    5. ',k' → logprob: -19.000158309936523
    6. '               ' → logprob: -19.125158309936523
    7. '   ' → logprob: -20.375158309936523
    8. '                       ' → logprob: -20.875158309936523
    9. ' ' → logprob: -21.125158309936523
    10. '{k' → logprob: -21.125158309936523

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011081460979767144
    2. ' ,' → logprob: -9.125110626220703
    3. ',
' → logprob: -13.875110626220703
    4. '(),' → logprob: -15.375110626220703
    5. ',k' → logprob: -15.875110626220703
    6. '                   ' → logprob: -16.250110626220703
    7. '(' → logprob: -16.375110626220703
    8. '```' → logprob: -16.625110626220703
    9. ')' → logprob: -16.875110626220703
    10. '               ' → logprob: -17.125110626220703

Token 275: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0009115827269852161
    2. ' kk' → logprob: -7.000911712646484
    3. 'ck' → logprob: -17.500911712646484
    4. '
' → logprob: -18.000911712646484
    5. '   ' → logprob: -18.250911712646484
    6. 'kkkk' → logprob: -19.000911712646484
    7. 'k' → logprob: -19.125911712646484
    8. '```' → logprob: -19.125911712646484
    9. ' ' → logprob: -19.375911712646484
    10. 'KK' → logprob: -19.875911712646484

Token 276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25252971053123474
    2. '):' → logprob: -1.5025297403335571
    3. '                   ' → logprob: -7.877529621124268
    4. '               ' → logprob: -8.752530097961426
    5. '):
' → logprob: -10.002530097961426
    6. ':' → logprob: -11.752530097961426
    7. '):

' → logprob: -12.377530097961426
    8. ':
' → logprob: -13.252530097961426
    9. '():
' → logprob: -13.752530097961426
    10. ')' → logprob: -13.877530097961426

Token 277: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002330574905499816
    2. 'break' → logprob: -6.127330780029297
    3. '                       ' → logprob: -10.002330780029297
    4. '               ' → logprob: -10.252330780029297
    5. '                  ' → logprob: -10.377330780029297
    6. ' break' → logprob: -11.127330780029297
    7. '                    ' → logprob: -11.502330780029297
    8. '                 ' → logprob: -12.627330780029297
    9. '                    
' → logprob: -12.752330780029297
    10. '                ' → logprob: -14.377330780029297

Token 278: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.002175719942897558
    2. '                   ' → logprob: -6.502175807952881
    3. ' break' → logprob: -8.002175331115723
    4. '                       ' → logprob: -8.002175331115723
    5. '               ' → logprob: -13.377175331115723
    6. '	break' → logprob: -13.627175331115723
    7. '   ' → logprob: -15.252175331115723
    8. '```' → logprob: -16.00217628479004
    9. '_break' → logprob: -16.12717628479004
    10. '                           ' → logprob: -16.12717628479004

Token 279: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019269285257905722
    2. '                   ' → logprob: -8.750192642211914
    3. '           ' → logprob: -11.375192642211914
    4. '                
' → logprob: -11.875192642211914
    5. '              ' → logprob: -12.875192642211914
    6. '                ' → logprob: -13.000192642211914
    7. '			' → logprob: -13.250192642211914
    8. '                       ' → logprob: -14.000192642211914
    9. '```' → logprob: -14.000192642211914
    10. '       ' → logprob: -14.250192642211914

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.782141569303349e-05
    2. '                   ' → logprob: -9.75009822845459
    3. '                
' → logprob: -11.37509822845459
    4. '           ' → logprob: -12.00009822845459
    5. '              ' → logprob: -12.50009822845459
    6. '			' → logprob: -12.75009822845459
    7. '                ' → logprob: -12.75009822845459
    8. '```' → logprob: -13.12509822845459
    9. 'token' → logprob: -13.50009822845459
    10. 's' → logprob: -13.87509822845459

Token 281: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -0.4384801983833313
    2. '                   ' → logprob: -1.6884801387786865
    3. '               ' → logprob: -1.8134801387786865
    4. ' ll' → logprob: -5.688480377197266
    5. '           ' → logprob: -6.063480377197266
    6. '                       ' → logprob: -7.938480377197266
    7. 'total' → logprob: -8.688480377197266
    8. 'value' → logprob: -8.688480377197266
    9. 'sum' → logprob: -8.813480377197266
    10. '	ll' → logprob: -8.938480377197266

Token 282: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0021975983399897814
    2. '.' → logprob: -6.127197742462158
    3. ' .' → logprob: -12.877197265625
    4. '.extend' → logprob: -13.002197265625
    5. '.app' → logprob: -13.127197265625
    6. 'append' → logprob: -13.502197265625
    7. '               ' → logprob: -13.752197265625
    8. '.ap' → logprob: -14.127197265625
    9. '_append' → logprob: -14.877197265625
    10. '                   ' → logprob: -15.002197265625

Token 283: '(com' (ID: 27868)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5276893973350525
    2. '((' → logprob: -0.9026893973350525
    3. '(' → logprob: -5.402689456939697
    4. '(((' → logprob: -10.902688980102539
    5. 'a' → logprob: -11.152688980102539
    6. '(
' → logprob: -12.027688980102539
    7. '([' → logprob: -13.027688980102539
    8. '((-' → logprob: -13.027688980102539
    9. '((((' → logprob: -13.777688980102539
    10. '(m' → logprob: -13.777688980102539

Token 284: 'pute' (ID: 13605)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42158523201942444
    2. '(a' → logprob: -1.296585202217102
    3. '[a' → logprob: -3.2965853214263916
    4. 'b' → logprob: -4.7965850830078125
    5. '[i' → logprob: -5.1715850830078125
    6. 'binations' → logprob: -5.2965850830078125
    7. 'bine' → logprob: -5.5465850830078125
    8. '```' → logprob: -5.7965850830078125
    9. 'bined' → logprob: -6.2965850830078125
    10. '[' → logprob: -6.5465850830078125

Token 285: '_sum' (ID: 29859)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8411442637443542
    2. '_sum' → logprob: -1.341144323348999
    3. '_value' → logprob: -1.841144323348999
    4. '_score' → logprob: -2.716144323348999
    5. 'sum' → logprob: -3.966144323348999
    6. '_product' → logprob: -4.21614408493042
    7. '_val' → logprob: -4.96614408493042
    8. 'a' → logprob: -4.96614408493042
    9. '_comb' → logprob: -5.21614408493042
    10. '_a' → logprob: -5.34114408493042

Token 286: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03552183881402016
    2. '(' → logprob: -3.5355217456817627
    3. '(
' → logprob: -5.660521984100342
    4. '((' → logprob: -6.410521984100342
    5. ')' → logprob: -8.285521507263184
    6. ' (' → logprob: -8.535521507263184
    7. '(i' → logprob: -9.910521507263184
    8. 'a' → logprob: -10.285521507263184
    9. '(

' → logprob: -10.535521507263184
    10. ')(' → logprob: -10.910521507263184

Token 287: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02172681875526905
    2. '[' → logprob: -3.8967268466949463
    3. ',' → logprob: -8.021726608276367
    4. '[a' → logprob: -8.271726608276367
    5. ' [' → logprob: -8.646726608276367
    6. ')' → logprob: -8.646726608276367
    7. ',i' → logprob: -9.521726608276367
    8. ',[' → logprob: -9.771726608276367
    9. '[
' → logprob: -9.896726608276367
    10. ')[' → logprob: -11.396726608276367

Token 288: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006479338277131319
    2. ' b' → logprob: -5.256479263305664
    3. 'i' → logprob: -6.756479263305664
    4. ' i' → logprob: -9.756479263305664
    5. '[i' → logprob: -11.131479263305664
    6. '   ' → logprob: -13.756479263305664
    7. 'a' → logprob: -13.756479263305664
    8. ')' → logprob: -13.881479263305664
    9. ' ' → logprob: -13.881479263305664
    10. '
' → logprob: -14.006479263305664

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016986705362796783
    2. ',c' → logprob: -4.641986846923828
    3. '[c' → logprob: -5.516986846923828
    4. '[' → logprob: -6.516986846923828
    5. '[k' → logprob: -7.266986846923828
    6. ' ,' → logprob: -7.891986846923828
    7. ',[' → logprob: -8.516986846923828
    8. ',k' → logprob: -8.641986846923828
    9. '[i' → logprob: -9.516986846923828
    10. ')' → logprob: -9.891986846923828

Token 290: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004315036640036851
    2. ' c' → logprob: -7.750431537628174
    3. ')c' → logprob: -14.875431060791016
    4. '   ' → logprob: -15.625431060791016
    5. ')' → logprob: -16.000431060791016
    6. '	c' → logprob: -16.500431060791016
    7. ' ' → logprob: -16.750431060791016
    8. '
' → logprob: -17.375431060791016
    9. '  ' → logprob: -17.625431060791016
    10. '```' → logprob: -17.750431060791016

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09212805330753326
    2. '[i' → logprob: -2.717128038406372
    3. ',i' → logprob: -3.967128038406372
    4. '[' → logprob: -6.467128276824951
    5. ' ,' → logprob: -7.342128276824951
    6. ')' → logprob: -7.967128276824951
    7. ',[' → logprob: -8.592127799987793
    8. '[
' → logprob: -9.967127799987793
    9. '][' → logprob: -9.967127799987793
    10. ')[' → logprob: -10.467127799987793

Token 292: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009282566024921834
    2. ' i' → logprob: -7.0009284019470215
    3. '   ' → logprob: -11.875927925109863
    4. '
' → logprob: -12.500927925109863
    5. ')' → logprob: -12.625927925109863
    6. '[i' → logprob: -14.375927925109863
    7. ' ' → logprob: -14.625927925109863
    8. ')i' → logprob: -14.875927925109863
    9. '  ' → logprob: -15.000927925109863
    10. '```' → logprob: -15.625927925109863

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026776795275509357
    2. ' ,' → logprob: -6.127677917480469
    3. ',j' → logprob: -7.627677917480469
    4. ',
' → logprob: -13.127677917480469
    5. ' ' → logprob: -14.252677917480469
    6. '   ' → logprob: -14.377677917480469
    7. ')' → logprob: -14.377677917480469
    8. ',k' → logprob: -14.377677917480469
    9. '```' → logprob: -14.627677917480469
    10. 'j' → logprob: -15.252677917480469

Token 294: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033558503491804004
    2. ' j' → logprob: -8.000335693359375
    3. '	j' → logprob: -16.500335693359375
    4. 'k' → logprob: -17.000335693359375
    5. '   ' → logprob: -19.250335693359375
    6. '<|end|>' → logprob: -19.875335693359375
    7. ' ' → logprob: -20.375335693359375
    8. '    ' → logprob: -20.375335693359375
    9. ')' → logprob: -20.500335693359375
    10. '$j' → logprob: -20.750335693359375

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017040544480551034
    2. ' ,' → logprob: -9.000170707702637
    3. ',k' → logprob: -10.000170707702637
    4. 'k' → logprob: -13.875170707702637
    5. ',
' → logprob: -14.875170707702637
    6. ')' → logprob: -16.00016975402832
    7. ' k' → logprob: -17.50016975402832
    8. '‌,' → logprob: -18.00016975402832
    9. '),' → logprob: -18.50016975402832
    10. '```' → logprob: -18.75016975402832

Token 296: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '	k' → logprob: -18.750009536743164
    4. '   ' → logprob: -20.000009536743164
    5. ')' → logprob: -20.000009536743164
    6. ' ' → logprob: -20.250009536743164
    7. ',k' → logprob: -21.000009536743164
    8. '{k' → logprob: -21.375009536743164
    9. '
' → logprob: -21.500009536743164
    10. '  ' → logprob: -21.625009536743164

Token 297: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760729312896729
    2. '))' → logprob: -0.8260729312896729
    3. ')))' → logprob: -9.576072692871094
    4. ')
' → logprob: -10.451072692871094
    5. '))
' → logprob: -10.451072692871094
    6. ' )' → logprob: -13.576072692871094
    7. '),' → logprob: -13.951072692871094
    8. ',' → logprob: -14.076072692871094
    9. ' ))' → logprob: -14.201072692871094
    10. '])' → logprob: -14.451072692871094

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2423332929611206
    2. '       ' → logprob: -3.11733341217041
    3. '                   ' → logprob: -3.36733341217041
    4. '    ' → logprob: -3.86733341217041
    5. 'return' → logprob: -3.86733341217041
    6. '               ' → logprob: -4.36733341217041
    7. '           ' → logprob: -4.49233341217041
    8. '    
' → logprob: -4.74233341217041
    9. 'def' → logprob: -4.86733341217041
    10. '	return' → logprob: -5.24233341217041

Token 299: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0770861804485321
    2. '       ' → logprob: -3.3270862102508545
    3. 'return' (adapté à ' return') → logprob: -4.702085971832275
    4. 'def' → logprob: -5.077085971832275
    5. '           ' → logprob: -5.577085971832275
    6. '                   ' → logprob: -5.702085971832275
    7. '    ' → logprob: -5.827085971832275
    8. '<|end|>' → logprob: -5.827085971832275
    9. ' ' → logprob: -6.452085971832275
    10. ' return' → logprob: -6.577085971832275

Token 300: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.018500613048672676
    2. 'sorted' → logprob: -4.018500804901123
    3. ' ll' → logprob: -8.018500328063965
    4. ' sorted' → logprob: -11.518500328063965
    5. 'lll' → logprob: -13.018500328063965
    6. 'list' → logprob: -13.518500328063965
    7. '	ll' → logprob: -13.518500328063965
    8. '(ll' → logprob: -13.643500328063965
    9. 'len' → logprob: -13.643500328063965
    10. ',ll' → logprob: -14.393500328063965

Token 301: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13206321001052856
    2. '<|end|>' → logprob: -2.632063150405884
    3. '(' → logprob: -3.507063150405884
    4. '[' → logprob: -4.257063388824463
    5. ')' → logprob: -6.757063388824463
    6. ' def' → logprob: -6.882063388824463
    7. '(
' → logprob: -7.007063388824463
    8. '\' → logprob: -7.382063388824463
    9. '   ' → logprob: -7.507063388824463
    10. ':' → logprob: -7.632063388824463

Token 302: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032958246301859617
    2. '[' → logprob: -6.5032958984375
    3. ')' → logprob: -6.6282958984375
    4. '+' → logprob: -8.2532958984375
    5. '(' → logprob: -10.0032958984375
    6. '(
' → logprob: -10.3782958984375
    7. ']' → logprob: -10.3782958984375
    8. ' def' → logprob: -10.6282958984375
    9. '[
' → logprob: -11.1282958984375
    10. '```' → logprob: -11.5032958984375

Token 303: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3132626414299011
    2. ' compute' → logprob: -1.313262701034546
    3. '_compute' → logprob: -15.313262939453125
    4. 'sum' → logprob: -15.438262939453125
    5. 'computer' → logprob: -16.563262939453125
    6. 'def' → logprob: -16.813262939453125
    7. ' sum' → logprob: -16.813262939453125
    8. ' ' → logprob: -17.063262939453125
    9. ' ' → logprob: -17.188262939453125
    10. 'com' → logprob: -17.688262939453125

Token 304: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.3902033970225602e-05
    2. '_s' → logprob: -11.875014305114746
    3. '_' → logprob: -12.500014305114746
    4. ' _' → logprob: -13.500014305114746
    5. 'sum' → logprob: -15.125014305114746
    6. '_value' → logprob: -15.375014305114746
    7. '_total' → logprob: -16.00001335144043
    8. ''_' → logprob: -16.00001335144043
    9. '_max' → logprob: -16.37501335144043
    10. '_SUM' → logprob: -16.50001335144043

Token 305: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00317783304490149
    2. '(' → logprob: -5.753177642822266
    3. ' (' → logprob: -16.503177642822266
    4. '(
' → logprob: -16.878177642822266
    5. 'a' → logprob: -18.628177642822266
    6. '(A' → logprob: -18.878177642822266
    7. '   ' → logprob: -20.128177642822266
    8. '(ai' → logprob: -20.503177642822266
    9. '(

' → logprob: -20.753177642822266
    10. 'def' → logprob: -21.003177642822266

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ',b' → logprob: -11.375022888183594
    3. ' ,' → logprob: -11.500022888183594
    4. '[' → logprob: -14.875022888183594
    5. ',a' → logprob: -15.250022888183594
    6. ',
' → logprob: -16.000022888183594
    7. '‌,' → logprob: -16.000022888183594
    8. ',j' → logprob: -16.625022888183594
    9. '<|end|>' → logprob: -17.000022888183594
    10. ',c' → logprob: -17.250022888183594

Token 307: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01814994215965271
    2. ' b' → logprob: -4.0181498527526855
    3. '   ' → logprob: -19.018150329589844
    4. ' ' → logprob: -19.893150329589844
    5. ',b' → logprob: -20.393150329589844
    6. '    ' → logprob: -20.518150329589844
    7. '  ' → logprob: -21.018150329589844
    8. '	b' → logprob: -21.268150329589844
    9. ')b' → logprob: -22.768150329589844
    10. ',' → logprob: -23.518150329589844

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',i' → logprob: -14.250007629394531
    4. ',c' → logprob: -15.500007629394531
    5. ',a' → logprob: -15.750007629394531
    6. ',
' → logprob: -16.00000762939453
    7. ')' → logprob: -17.75000762939453
    8. '‌,' → logprob: -17.75000762939453
    9. '[],' → logprob: -17.87500762939453
    10. '[' → logprob: -17.87500762939453

Token 309: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048054322600365
    2. ' c' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.26104736328125
    4. '   ' → logprob: -16.38604736328125
    5. '  ' → logprob: -17.38604736328125
    6. '	c' → logprob: -18.38604736328125
    7. '    ' → logprob: -19.26104736328125
    8. '<|end|>' → logprob: -19.38604736328125
    9. ')c' → logprob: -19.76104736328125
    10. '
' → logprob: -20.51104736328125

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',i' → logprob: -13.375006675720215
    4. '   ' → logprob: -19.00000762939453
    5. ',index' → logprob: -19.12500762939453
    6. ',
' → logprob: -19.50000762939453
    7. '‌,' → logprob: -20.12500762939453
    8. '_,' → logprob: -20.25000762939453
    9. '[],' → logprob: -20.87500762939453
    10. ',int' → logprob: -21.00000762939453

Token 311: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.750335693359375
    4. '	i' → logprob: -17.375335693359375
    5. '   ' → logprob: -17.500335693359375
    6. '  ' → logprob: -18.125335693359375
    7. '_i' → logprob: -19.250335693359375
    8. ')' → logprob: -19.500335693359375
    9. '    ' → logprob: -19.625335693359375
    10. 'index' → logprob: -19.875335693359375

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',j' → logprob: -12.00003433227539
    4. ',
' → logprob: -16.37503433227539
    5. '   ' → logprob: -16.75003433227539
    6. '‌,' → logprob: -16.75003433227539
    7. '_,' → logprob: -17.37503433227539
    8. ' ' → logprob: -17.87503433227539
    9. ',y' → logprob: -18.12503433227539
    10. ')' → logprob: -18.37503433227539

Token 313: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001170225441455841
    2. ' j' → logprob: -6.7511701583862305
    3. '	j' → logprob: -18.001171112060547
    4. '   ' → logprob: -18.001171112060547
    5. ' ' → logprob: -18.501171112060547
    6. '  ' → logprob: -19.251171112060547
    7. '<|end|>' → logprob: -19.626171112060547
    8. '    ' → logprob: -20.501171112060547
    9. '```' → logprob: -20.501171112060547
    10. '$j' → logprob: -20.626171112060547

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018816311785485595
    2. ',k' → logprob: -8.750187873840332
    3. ' ,' → logprob: -10.500187873840332
    4. ',
' → logprob: -14.250187873840332
    5. 'k' → logprob: -15.000187873840332
    6. '‌,' → logprob: -15.125187873840332
    7. ',c' → logprob: -15.875187873840332
    8. ')' → logprob: -16.00018882751465
    9. '_,' → logprob: -16.00018882751465
    10. '```' → logprob: -16.37518882751465

Token 315: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.5491004129871726e-05
    2. ' k' → logprob: -10.000045776367188
    3. '	k' → logprob: -19.000045776367188
    4. '{k' → logprob: -20.625045776367188
    5. '   ' → logprob: -21.000045776367188
    6. '
' → logprob: -21.500045776367188
    7. ' ' → logprob: -21.750045776367188
    8. ')' → logprob: -22.000045776367188
    9. '<|end|>' → logprob: -22.000045776367188
    10. '  ' → logprob: -22.125045776367188

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011045700375689194
    2. ')' → logprob: -9.750110626220703
    3. '):
' → logprob: -9.875110626220703
    4. ' ):' → logprob: -14.875110626220703
    5. '):
' → logprob: -16.375110626220703
    6. ',' → logprob: -16.875110626220703
    7. ':' → logprob: -17.125110626220703
    8. '):

' → logprob: -18.000110626220703
    9. ']:' → logprob: -18.250110626220703
    10. ')：' → logprob: -18.250110626220703

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001978118671104312
    2. ' return' → logprob: -6.751977920532227
    3. 'return' → logprob: -7.126977920532227
    4. '	return' → logprob: -12.751977920532227
    5. '   ' → logprob: -13.876977920532227
    6. 'a' → logprob: -15.876977920532227
    7. '{' → logprob: -15.876977920532227
    8. '    
' → logprob: -16.001977920532227
    9. '{return' → logprob: -16.126977920532227
    10. '  ' → logprob: -17.626977920532227

Token 318: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00919601134955883
    2. ' return' → logprob: -5.009195804595947
    3. '   ' → logprob: -6.009195804595947
    4. 'a' → logprob: -10.884196281433105
    5. '	return' → logprob: -13.634196281433105
    6. '    
' → logprob: -14.009196281433105
    7. '
' → logprob: -15.009196281433105
    8. ' ' → logprob: -16.38419532775879
    9. '  ' → logprob: -16.88419532775879
    10. '    ' → logprob: -16.88419532775879

Token 319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005536287208087742
    2. ' a' → logprob: -7.500553607940674
    3. '(a' → logprob: -14.750554084777832
    4. '   ' → logprob: -15.500554084777832
    5. '	a' → logprob: -16.625553131103516
    6. ' ' → logprob: -18.250553131103516
    7. '(' → logprob: -18.375553131103516
    8. '  ' → logprob: -19.125553131103516
    9. '_a' → logprob: -19.375553131103516
    10. '[a' → logprob: -19.625553131103516

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008102210704237223
    2. '[' → logprob: -7.125810146331787
    3. 'i' → logprob: -13.000810623168945
    4. ' [' → logprob: -13.125810623168945
    5. '```' → logprob: -15.000810623168945
    6. '[a' → logprob: -15.250810623168945
    7. '[
' → logprob: -15.500810623168945
    8. '[I' → logprob: -15.500810623168945
    9. '\[' → logprob: -15.750810623168945
    10. '[index' → logprob: -17.000810623168945

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016396844875998795
    2. ']+' → logprob: -8.750164031982422
    3. ' ]' → logprob: -12.250164031982422
    4. ']
' → logprob: -15.250164031982422
    5. '[' → logprob: -15.625164031982422
    6. ']*' → logprob: -15.750164031982422
    7. '+' → logprob: -17.250164031982422
    8. ')' → logprob: -18.000164031982422
    9. '']' → logprob: -18.125164031982422
    10. '+]' → logprob: -18.250164031982422

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932801604270935
    2. ' +' → logprob: -0.6932801604270935
    3. '+b' → logprob: -8.943280220031738
    4. '[' → logprob: -14.943280220031738
    5. '+j' → logprob: -15.068280220031738
    6. ' ' → logprob: -15.068280220031738
    7. '+m' → logprob: -15.193280220031738
    8. '+B' → logprob: -15.193280220031738
    9. '+k' → logprob: -15.693280220031738
    10. '+a' → logprob: -15.818280220031738

Token 323: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014133334159851
    2. ' b' → logprob: -1.7014133930206299
    3. '	b' → logprob: -16.951414108276367
    4. '   ' → logprob: -17.826414108276367
    5. ' ' → logprob: -17.951414108276367
    6. ' ' → logprob: -17.951414108276367
    7. '+b' → logprob: -18.701414108276367
    8. '(b' → logprob: -18.951414108276367
    9. '  ' → logprob: -19.201414108276367
    10. 'a' → logprob: -19.576414108276367

Token 324: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00029708960209973156
    2. '[' → logprob: -8.125297546386719
    3. 'j' → logprob: -14.250297546386719
    4. '[i' → logprob: -16.25029754638672
    5. ' [' → logprob: -16.37529754638672
    6. '[
' → logprob: -17.12529754638672
    7. '```' → logprob: -17.37529754638672
    8. '[js' → logprob: -17.50029754638672
    9. '[k' → logprob: -17.62529754638672
    10. '[s' → logprob: -18.12529754638672

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020793762058019638
    2. '+' → logprob: -4.520793914794922
    3. ' +' → logprob: -4.895793914794922
    4. ']+' → logprob: -6.270793914794922
    5. ' ]' → logprob: -8.145793914794922
    6. '[' → logprob: -10.770793914794922
    7. '+]' → logprob: -11.770793914794922
    8. ')' → logprob: -11.895793914794922
    9. '<|end|>' → logprob: -13.270793914794922
    10. ' ' → logprob: -14.770793914794922

Token 326: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10049068182706833
    2. '+' → logprob: -2.3504905700683594
    3. '+c' → logprob: -8.22549057006836
    4. ' ' → logprob: -12.10049057006836
    5. '[' → logprob: -12.35049057006836
    6. ' c' → logprob: -12.97549057006836
    7. '[c' → logprob: -13.35049057006836
    8. 'c' → logprob: -14.47549057006836
    9. ' +
' → logprob: -14.47549057006836
    10. '+k' → logprob: -14.85049057006836

Token 327: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759396553039551
    2. 'c' → logprob: -0.8259396553039551
    3. '	c' → logprob: -16.325939178466797
    4. ' ' → logprob: -16.825939178466797
    5. ' ' → logprob: -16.950939178466797
    6. '   ' → logprob: -17.575939178466797
    7. '```' → logprob: -18.325939178466797
    8. '  ' → logprob: -18.700939178466797
    9. '+c' → logprob: -18.700939178466797
    10. ')c' → logprob: -18.825939178466797

Token 328: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.1994775377388578e-05
    2. '[' → logprob: -11.500012397766113
    3. 'k' → logprob: -13.625012397766113
    4. ' [' → logprob: -15.750012397766113
    5. '[j' → logprob: -16.125011444091797
    6. '(k' → logprob: -16.500011444091797
    7. '```' → logprob: -16.625011444091797
    8. '[i' → logprob: -16.750011444091797
    9. '[m' → logprob: -17.250011444091797
    10. '[c' → logprob: -17.625011444091797

Token 329: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2256983071565628
    2. ')' → logprob: -1.6006983518600464
    3. '}' → logprob: -8.600698471069336
    4. '])' → logprob: -10.225698471069336
    5. '<|end|>' → logprob: -10.600698471069336
    6. ']
' → logprob: -11.225698471069336
    7. ')]' → logprob: -11.850698471069336
    8. '）' → logprob: -12.350698471069336
    9. ' ]' → logprob: -12.475698471069336
    10. ')
' → logprob: -12.600698471069336

Token 330: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05018257722258568
    2. '<|end|>' → logprob: -3.050182580947876
    3. '#' → logprob: -7.175182342529297
    4. '```' → logprob: -7.550182342529297
    5. '<|end|>' → logprob: -9.050182342529297
    6. 'x' → logprob: -9.300182342529297
    7. 'for' → logprob: -10.675182342529297
    8. 'import' → logprob: -11.175182342529297
    9. '.' → logprob: -11.675182342529297
    10. 'from' → logprob: -11.675182342529297

Token 331: ' sort' (ID: 4506)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0487673394382
    2. ' main' → logprob: -3.048767328262329
    3. 'def' → logprob: -8.79876708984375
    4. 'solve' → logprob: -11.17376708984375
    5. 'sum' → logprob: -11.67376708984375
    6. 'if' → logprob: -13.42376708984375
    7. ' solve' → logprob: -13.92376708984375
    8. 'find' → logprob: -14.42376708984375
    9. '__' → logprob: -14.67376708984375
    10. ' def' → logprob: -14.67376708984375

Token 332: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8275789022445679
    2. '(ll' → logprob: -0.8275789022445679
    3. '_' → logprob: -2.2025790214538574
    4. '_ll' → logprob: -4.952579021453857
    5. '_(' → logprob: -6.077579021453857
    6. '_list' → logprob: -6.702579021453857
    7. 'def' → logprob: -7.077579021453857
    8. '(ls' → logprob: -7.202579021453857
    9. '(_' → logprob: -7.452579021453857
    10. '(lst' → logprob: -8.0775785446167

Token 333: '_desc' (ID: 26683)
  Prédit: '(ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.2633760869503021
    2. '(' → logprob: -1.6383761167526245
    3. '(lst' → logprob: -3.388375997543335
    4. '(ls' → logprob: -6.013376235961914
    5. '(l' → logprob: -7.638376235961914
    6. '(list' → logprob: -9.013376235961914
    7. '(li' → logprob: -9.013376235961914
    8. '_(' → logprob: -9.638376235961914
    9. '_ll' → logprob: -10.138376235961914
    10. '(arr' → logprob: -10.388376235961914

Token 334: '(lst' (ID: 95688)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8608626127243042
    2. '(lst' → logprob: -0.9858626127243042
    3. 'ending' → logprob: -1.8608626127243042
    4. '(' → logprob: -3.6108627319335938
    5. '(l' → logprob: -5.110862731933594
    6. 'end' → logprob: -5.110862731933594
    7. '(list' → logprob: -5.735862731933594
    8. '()' → logprob: -6.735862731933594
    9. '(ll' → logprob: -6.985862731933594
    10. '():
' → logprob: -6.985862731933594

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025081203784793615
    2. '(lst' → logprob: -6.252508163452148
    3. '):
' → logprob: -8.252508163452148
    4. ')' → logprob: -8.252508163452148
    5. ' ):' → logprob: -10.252508163452148
    6. ',' → logprob: -11.377508163452148
    7. '):
' → logprob: -13.127508163452148
    8. '   ' → logprob: -13.627508163452148
    9. 'lst' → logprob: -13.752508163452148
    10. '):

' → logprob: -14.127508163452148

Token 336: '   ' (ID: 271)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.25640904903411865
    2. '   ' → logprob: -1.5064090490341187
    3. '(lst' → logprob: -5.881409168243408
    4. ' lst' → logprob: -6.756409168243408
    5. 'def' → logprob: -8.38140869140625
    6. '```' → logprob: -9.63140869140625
    7. '    
' → logprob: -9.75640869140625
    8. '
' → logprob: -10.00640869140625
    9. '  ' → logprob: -10.50640869140625
    10. 'list' → logprob: -11.00640869140625

Token 337: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.016634462401270866
    2. 'return' → logprob: -4.391634464263916
    3. '   ' → logprob: -5.516634464263916
    4. ' lst' → logprob: -9.766633987426758
    5. ' return' → logprob: -10.766633987426758
    6. '```' → logprob: -11.266633987426758
    7. 'ls' → logprob: -13.516633987426758
    8. '(lst' → logprob: -13.891633987426758
    9. 'list' → logprob: -14.266633987426758
    10. '_lst' → logprob: -14.516633987426758

Token 338: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001542834215797484
    2. '.' → logprob: -6.501543045043945
    3. '.reverse' → logprob: -10.126543045043945
    4. ' .' → logprob: -16.126543045043945
    5. 'sort' → logprob: -16.751543045043945
    6. '   ' → logprob: -17.251543045043945
    7. ' sort' → logprob: -17.626543045043945
    8. '.append' → logprob: -17.876543045043945
    9. '	sort' → logprob: -17.876543045043945
    10. '.Sort' → logprob: -18.001543045043945

Token 339: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0008076059748418629
    2. 'reverse' → logprob: -7.125807762145996
    3. ' reverse' → logprob: -13.375807762145996
    4. '.reverse' → logprob: -14.375807762145996
    5. '()' → logprob: -14.875807762145996
    6. '(key' → logprob: -15.125807762145996
    7. '_reverse' → logprob: -15.125807762145996
    8. 'Reverse' → logprob: -16.62580680847168
    9. '(' → logprob: -16.75080680847168
    10. '(re' → logprob: -17.00080680847168

Token 340: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0011822503292933106
    2. '=' → logprob: -6.7511820793151855
    3. ')' → logprob: -11.626182556152344
    4. '(True' → logprob: -13.376182556152344
    5. 'True' → logprob: -13.501182556152344
    6. ')=' → logprob: -16.376182556152344
    7. ' True' → logprob: -17.376182556152344
    8. '   ' → logprob: -17.876182556152344
    9. ' =' → logprob: -17.876182556152344
    10. '=
' → logprob: -18.001182556152344

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ')return' → logprob: -14.500021934509277
    4. ' )' → logprob: -17.125022888183594
    5. '<|end|>' → logprob: -17.250022888183594
    6. ')

' → logprob: -18.500022888183594
    7. '),' → logprob: -18.750022888183594
    8. '   ' → logprob: -19.625022888183594
    9. ')}' → logprob: -19.625022888183594
    10. '))' → logprob: -19.625022888183594

Token 342: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005016815848648548
    2. ' return' → logprob: -7.62550163269043
    3. 'def' → logprob: -11.37550163269043
    4. '   ' → logprob: -14.00050163269043
    5. '```' → logprob: -14.75050163269043
    6. '<|end|>' → logprob: -14.75050163269043
    7. '
' → logprob: -15.37550163269043
    8. '	return' → logprob: -16.50050163269043
    9. ':return' → logprob: -16.50050163269043
    10. ')return' → logprob: -16.75050163269043

Token 344: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.306760805164231e-05
    2. ' lst' → logprob: -11.25001335144043
    3. 'ls' → logprob: -17.12501335144043
    4. 'list' → logprob: -17.25001335144043
    5. '(lst' → logprob: -18.12501335144043
    6. 'None' → logprob: -18.62501335144043
    7. 'l' → logprob: -18.75001335144043
    8. '_lst' → logprob: -20.00001335144043
    9. '.lst' → logprob: -20.50001335144043
    10. 'Lst' → logprob: -21.25001335144043

Token 345: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3528614640235901
    2. '<|end|>' → logprob: -1.2278614044189453
    3. '#' → logprob: -6.477861404418945
    4. '```' → logprob: -7.102861404418945
    5. '[' → logprob: -7.227861404418945
    6. ')' → logprob: -7.602861404418945
    7. '.' → logprob: -8.602861404418945
    8. '<|end|>' → logprob: -8.852861404418945
    9. 'import' → logprob: -9.227861404418945
    10. 'for' → logprob: -9.602861404418945

Token 346: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.398067828034982e-05
    2. '<|end|>' → logprob: -10.00007438659668
    3. '```' → logprob: -11.00007438659668
    4. 'if' → logprob: -12.00007438659668
    5. 'for' → logprob: -13.37507438659668
    6. 'import' → logprob: -13.75007438659668
    7. '#' → logprob: -13.87507438659668
    8. 'from' → logprob: -14.50007438659668
    9. 'x' → logprob: -14.75007438659668
    10. '
' → logprob: -15.00007438659668

Token 347: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05660053715109825
    2. 'main' → logprob: -2.931600570678711
    3. ' generate' → logprob: -7.931600570678711
    4. ' find' → logprob: -7.931600570678711
    5. ' top' → logprob: -8.306600570678711
    6. 'generate' → logprob: -9.056600570678711
    7. ' solve' → logprob: -9.306600570678711
    8. ' get' → logprob: -9.431600570678711
    9. ' sum' → logprob: -9.431600570678711
    10. 'top' → logprob: -9.556600570678711

Token 348: '_top' (ID: 23394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10035720467567444
    2. '_results' → logprob: -2.6003572940826416
    3. '_' → logprob: -5.3503570556640625
    4. '_list' → logprob: -5.4753570556640625
    5. '_sorted' → logprob: -5.8503570556640625
    6. '_result' → logprob: -6.3503570556640625
    7. '(_' → logprob: -6.8503570556640625
    8. '_output' → logprob: -6.8503570556640625
    9. '_top' → logprob: -7.1003570556640625
    10. '("_' → logprob: -7.4753570556640625

Token 349: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.007528659421950579
    2. '_' → logprob: -5.257528781890869
    3. 'k' → logprob: -6.757528781890869
    4. '(' → logprob: -7.882528781890869
    5. '_n' → logprob: -8.507528305053711
    6. '_results' → logprob: -8.882528305053711
    7. '(k' → logprob: -9.382528305053711
    8. '_K' → logprob: -9.507528305053711
    9. '```' → logprob: -9.632528305053711
    10. '_list' → logprob: -10.132528305053711

Token 350: '_elements' (ID: 53344)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.8063769936561584
    2. '(' → logprob: -1.3063769340515137
    3. '(k' → logprob: -1.6813769340515137
    4. '(ll' → logprob: -2.5563769340515137
    5. '(ls' → logprob: -4.681376934051514
    6. '(results' → logprob: -5.556376934051514
    7. '(l' → logprob: -6.306376934051514
    8. '(_' → logprob: -6.431376934051514
    9. '(list' → logprob: -7.431376934051514
    10. '(top' → logprob: -8.431377410888672

Token 351: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.00017720005416776985
    2. '(' → logprob: -9.125177383422852
    3. '(ll' → logprob: -10.500177383422852
    4. '(l' → logprob: -11.125177383422852
    5. '(ls' → logprob: -11.250177383422852
    6. '(list' → logprob: -12.000177383422852
    7. '(lista' → logprob: -12.375177383422852
    8. '(k' → logprob: -13.500177383422852
    9. ' (' → logprob: -14.625177383422852
    10. '(nums' → logprob: -15.750177383422852

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ',l' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.375011444091797
    4. ',k' → logprob: -16.125011444091797
    5. '(lst' → logprob: -16.125011444091797
    6. '):' → logprob: -16.250011444091797
    7. ',list' → logprob: -16.250011444091797
    8. '   ' → logprob: -16.625011444091797
    9. ',List' → logprob: -17.375011444091797
    10. ',
' → logprob: -17.625011444091797

Token 353: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002157399198040366
    2. 'kk' → logprob: -6.627157211303711
    3. ' k' → logprob: -7.127157211303711
    4. ' kk' → logprob: -10.502157211303711
    5. 'count' → logprob: -15.877157211303711
    6. '	k' → logprob: -15.877157211303711
    7. '   ' → logprob: -16.12715721130371
    8. 'kkkk' → logprob: -16.75215721130371
    9. ' ' → logprob: -16.87715721130371
    10. '
' → logprob: -17.00215721130371

Token 354: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012713817704934627
    2. '):
' → logprob: -9.000126838684082
    3. ')' → logprob: -13.250126838684082
    4. ',' → logprob: -13.875126838684082
    5. '):
' → logprob: -15.000126838684082
    6. ' ):' → logprob: -15.125126838684082
    7. ':' → logprob: -15.875126838684082
    8. '   ' → logprob: -16.1251277923584
    9. '_list' → logprob: -18.1251277923584
    10. '}:' → logprob: -18.2501277923584

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00810303632169962
    2. 'for' → logprob: -5.133102893829346
    3. ' for' → logprob: -6.133102893829346
    4. '```' → logprob: -13.258103370666504
    5. '    
' → logprob: -15.758103370666504
    6. 'def' → logprob: -16.008102416992188
    7. '   ' → logprob: -16.508102416992188
    8. '
' → logprob: -17.133102416992188
    9. '	for' → logprob: -17.133102416992188
    10. 'print' → logprob: -17.383102416992188

Token 356: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -11.75001335144043
    3. 'print' → logprob: -12.25001335144043
    4. ' for' → logprob: -14.75001335144043
    5. '
' → logprob: -20.25001335144043
    6. '    
' → logprob: -20.37501335144043
    7. '	for' → logprob: -21.00001335144043
    8. '```' → logprob: -22.25001335144043
    9. '
' → logprob: -23.75001335144043
    10. '  ' → logprob: -24.25001335144043

Token 357: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10481368750333786
    2. 'i' → logprob: -2.354813575744629
    3. ' val' → logprob: -6.604813575744629
    4. ' x' → logprob: -6.854813575744629
    5. ' idx' → logprob: -7.229813575744629
    6. 'x' → logprob: -7.354813575744629
    7. ' elem' → logprob: -7.729813575744629
    8. '_' → logprob: -9.854813575744629
    9. 'val' → logprob: -9.979813575744629
    10. 'elem' → logprob: -10.229813575744629

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033664021641016006
    2. 'in' → logprob: -3.4086639881134033
    3. ' ' → logprob: -11.408663749694824
    4. ',' → logprob: -13.158663749694824
    5. 'n' → logprob: -13.658663749694824
    6. 'range' → logprob: -13.658663749694824
    7. '  ' → logprob: -14.408663749694824
    8. '0' → logprob: -14.533663749694824
    9. '	in' → logprob: -14.533663749694824
    10. '   ' → logprob: -14.533663749694824

Token 359: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015029559144750237
    2. ' range' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.251502990722656
    4. '(range' → logprob: -15.626502990722656
    5. 'lst' → logprob: -15.626502990722656
    6. '  ' → logprob: -16.876502990722656
    7. '	range' → logprob: -17.501502990722656
    8. ' ' → logprob: -18.376502990722656
    9. '
' → logprob: -19.251502990722656
    10. ')' → logprob: -19.501502990722656

Token 360: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00044473158777691424
    2. '(min' → logprob: -7.7504448890686035
    3. '(' → logprob: -11.625444412231445
    4. 'k' → logprob: -12.750444412231445
    5. 'min' → logprob: -13.500444412231445
    6. ' min' → logprob: -15.000444412231445
    7. ' (' → logprob: -15.250444412231445
    8. ' k' → logprob: -15.500444412231445
    9. '	k' → logprob: -18.250444412231445
    10. '(len' → logprob: -18.375444412231445

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009980365866795182
    2. '):
' → logprob: -7.000998020172119
    3. ' ):' → logprob: -9.375998497009277
    4. ')' → logprob: -13.875998497009277
    5. '):
' → logprob: -15.375998497009277
    6. '   ' → logprob: -15.750998497009277
    7. ',' → logprob: -15.875998497009277
    8. ':' → logprob: -16.00099754333496
    9. ' ):
' → logprob: -16.62599754333496
    10. '}:' → logprob: -16.87599754333496

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06218704581260681
    2. '   ' → logprob: -2.8121869564056396
    3. ' print' → logprob: -8.812187194824219
    4. 'print' → logprob: -9.812187194824219
    5. '```' → logprob: -11.812187194824219
    6. ' if' → logprob: -12.812187194824219
    7. '    
' → logprob: -13.437187194824219
    8. '
' → logprob: -13.687187194824219
    9. ',' → logprob: -13.812187194824219
    10. '        
' → logprob: -15.187187194824219

Token 363: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.215330409351736e-05
    2. '   ' → logprob: -10.250041961669922
    3. ' print' → logprob: -12.000041961669922
    4. '```' → logprob: -14.625041961669922
    5. 'if' → logprob: -17.750041961669922
    6. '       ' → logprob: -19.000041961669922
    7. '	print' → logprob: -19.125041961669922
    8. '``' → logprob: -19.750041961669922
    9. '    
' → logprob: -21.500041961669922
    10. '
' → logprob: -21.750041961669922

Token 364: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -5.7053759519476444e-05
    2. 'lst' → logprob: -10.250057220458984
    3. '(' → logprob: -10.750057220458984
    4. '(ls' → logprob: -15.875057220458984
    5. ' lst' → logprob: -18.375057220458984
    6. '(l' → logprob: -18.625057220458984
    7. '(ll' → logprob: -18.750057220458984
    8. ' (' → logprob: -19.375057220458984
    9. '(ld' → logprob: -19.875057220458984
    10. '(
' → logprob: -19.875057220458984

Token 365: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.87500286102295
    3. ')' → logprob: -14.75000286102295
    4. ' [' → logprob: -16.000003814697266
    5. ')[' → logprob: -16.875003814697266
    6. '[
' → logprob: -17.125003814697266
    7. '```' → logprob: -18.375003814697266
    8. 'i' → logprob: -18.625003814697266
    9. ')i' → logprob: -18.875003814697266
    10. '   ' → logprob: -18.875003814697266

Token 366: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001193798496387899
    2. ')' → logprob: -6.751194000244141
    3. ']' → logprob: -11.50119400024414
    4. ')]' → logprob: -12.62619400024414
    5. '],' → logprob: -12.75119400024414
    6. ' ])' → logprob: -12.87619400024414
    7. ')])' → logprob: -12.87619400024414
    8. '])
' → logprob: -13.75119400024414
    9. '))' → logprob: -14.75119400024414
    10. ''])' → logprob: -15.75119400024414

Token 367: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013882013445254415
    2. '
' → logprob: -9.875139236450195
    3. '<|end|>' → logprob: -9.875139236450195
    4. '```' → logprob: -10.750139236450195
    5. 'if' → logprob: -11.875139236450195
    6. 'import' → logprob: -12.625139236450195
    7. '#' → logprob: -14.000139236450195
    8. 'for' → logprob: -14.250139236450195
    9. '<|end|>' → logprob: -14.500139236450195
    10. ' def' → logprob: -14.625139236450195

Token 368: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00041148843592964113
    2. ' main' → logprob: -8.000411033630371
    3. 'def' → logprob: -9.500411033630371
    4. 'solve' → logprob: -14.250411033630371
    5. 'if' → logprob: -14.750411033630371
    6. 'run' → logprob: -16.500411987304688
    7. 'process' → logprob: -17.375411987304688
    8. 'g' → logprob: -17.750411987304688
    9. '	main' → logprob: -18.500411987304688
    10. '
' → logprob: -19.125411987304688

Token 369: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2471589798224159e-05
    2. ' ():' → logprob: -11.375012397766113
    3. '():
' → logprob: -14.000012397766113
    4. '()' → logprob: -16.37501335144043
    5. '():
' → logprob: -18.75001335144043
    6. '(' → logprob: -18.87501335144043
    7. '().' → logprob: -20.75001335144043
    8. '(":' → logprob: -21.00001335144043
    9. '_' → logprob: -21.00001335144043
    10. '()>' → logprob: -21.25001335144043

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014271287247538567
    2. 'x' → logprob: -4.264271259307861
    3. ' x' → logprob: -9.13927173614502
    4. '	x' → logprob: -16.264270782470703
    5. '(x' → logprob: -16.389270782470703
    6. '       ' → logprob: -17.014270782470703
    7. '   ' → logprob: -17.014270782470703
    8. ' ' → logprob: -17.139270782470703
    9. 'import' → logprob: -17.389270782470703
    10. '  ' → logprob: -17.639270782470703

Token 371: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -4.4418171455617994e-05
    2. '   ' → logprob: -10.250044822692871
    3. ' x' → logprob: -11.625044822692871
    4. '(x' → logprob: -17.375043869018555
    5. '#' → logprob: -17.625043869018555
    6. ' ' → logprob: -18.250043869018555
    7. '	x' → logprob: -18.750043869018555
    8. '  ' → logprob: -19.625043869018555
    9. 'import' → logprob: -19.625043869018555
    10. '       ' → logprob: -19.875043869018555

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.976922744186595e-05
    2. ',y' → logprob: -10.625040054321289
    3. ' ,' → logprob: -11.125040054321289
    4. ',x' → logprob: -15.875040054321289
    5. ',
' → logprob: -16.00004005432129
    6. ',user' → logprob: -16.50004005432129
    7. '   ' → logprob: -16.62504005432129
    8. '‌,' → logprob: -17.00004005432129
    9. ',k' → logprob: -17.12504005432129
    10. '_,' → logprob: -17.25004005432129

Token 373: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.061967797577381134
    2. ' y' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.436967849731445
    4. '    ' → logprob: -17.061967849731445
    5. '  ' → logprob: -18.436967849731445
    6. '	y' → logprob: -18.561967849731445
    7. ',y' → logprob: -19.436967849731445
    8. '<|end|>' → logprob: -19.686967849731445
    9. ' ' → logprob: -20.061967849731445
    10. 'x' → logprob: -21.061967849731445

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',z' → logprob: -14.125046730041504
    4. ',y' → logprob: -15.875046730041504
    5. '   ' → logprob: -16.875045776367188
    6. '<|end|>' → logprob: -18.125045776367188
    7. '‌,' → logprob: -18.375045776367188
    8. '_,' → logprob: -18.750045776367188
    9. ',
' → logprob: -19.000045776367188
    10. ',k' → logprob: -19.125045776367188

Token 375: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0015024791937321424
    2. ' z' → logprob: -6.501502513885498
    3. '  ' → logprob: -16.251502990722656
    4. '   ' → logprob: -16.876502990722656
    5. '	z' → logprob: -17.501502990722656
    6. ' ' → logprob: -17.876502990722656
    7. '    ' → logprob: -18.501502990722656
    8. 'x' → logprob: -19.626502990722656
    9. '<|end|>' → logprob: -20.501502990722656
    10. '     ' → logprob: -20.876502990722656

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',k' → logprob: -16.875001907348633
    4. '‌,' → logprob: -18.250001907348633
    5. ',
' → logprob: -18.625001907348633
    6. 'k' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '<|end|>' → logprob: -19.500001907348633
    9. '،' → logprob: -19.750001907348633
    10. '_,' → logprob: -20.000001907348633

Token 377: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.12699508666992188
    2. ' kk' → logprob: -2.126995086669922
    3. 'k' → logprob: -9.626995086669922
    4. ' k' → logprob: -14.251995086669922
    5. 'kkkk' → logprob: -15.001995086669922
    6. ' ' → logprob: -16.376995086669922
    7. '   ' → logprob: -16.876995086669922
    8. 'KK' → logprob: -17.251995086669922
    9. '  ' → logprob: -17.376995086669922
    10. 'ks' → logprob: -17.751995086669922

Token 378: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07702018320560455
    2. ' =' → logprob: -3.0770201683044434
    3. ',' → logprob: -3.5770201683044434
    4. '   ' → logprob: -9.577020645141602
    5. ' ' → logprob: -13.827020645141602
    6. '  ' → logprob: -14.077020645141602
    7. ')' → logprob: -14.202020645141602
    8. '	' → logprob: -14.452020645141602
    9. ' ,' → logprob: -14.702020645141602
    10. '    ' → logprob: -15.077020645141602

Token 379: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003178901970386505
    2. ' a' → logprob: -5.75317907333374
    3. '   ' → logprob: -13.753178596496582
    4. '  ' → logprob: -16.1281795501709
    5. '	a' → logprob: -17.1281795501709
    6. ' ' → logprob: -17.8781795501709
    7. '    ' → logprob: -18.2531795501709
    8. ',a' → logprob: -19.0031795501709
    9. '*a' → logprob: -19.8781795501709
    10. '_a' → logprob: -21.0031795501709

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. '=' → logprob: -11.125029563903809
    3. ',b' → logprob: -11.375029563903809
    4. ' ,' → logprob: -12.625029563903809
    5. ' =' → logprob: -15.625029563903809
    6. 'b' → logprob: -16.250030517578125
    7. '   ' → logprob: -16.875030517578125
    8. '‌,' → logprob: -17.625030517578125
    9. ',
' → logprob: -18.000030517578125
    10. '_,' → logprob: -18.250030517578125

Token 381: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004309076175559312
    2. ' b' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.875431060791016
    4. '  ' → logprob: -18.500431060791016
    5. '    ' → logprob: -19.250431060791016
    6. ' ' → logprob: -20.000431060791016
    7. '	b' → logprob: -20.375431060791016
    8. '       ' → logprob: -22.750431060791016
    9. ',b' → logprob: -23.125431060791016
    10. '     ' → logprob: -23.125431060791016

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',c' → logprob: -12.250015258789062
    4. 'c' → logprob: -14.000015258789062
    5. '=' → logprob: -15.875015258789062
    6. '   ' → logprob: -17.625015258789062
    7. '_,' → logprob: -17.875015258789062
    8. '‌,' → logprob: -18.500015258789062
    9. ' c' → logprob: -18.750015258789062
    10. ',
' → logprob: -19.500015258789062

Token 383: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015023599844425917
    2. ' c' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.251502990722656
    4. '	c' → logprob: -17.501502990722656
    5. '  ' → logprob: -17.751502990722656
    6. ' ' → logprob: -19.251502990722656
    7. '    ' → logprob: -19.876502990722656
    8. ',c' → logprob: -20.501502990722656
    9. ')c' → logprob: -20.626502990722656
    10. '_c' → logprob: -21.126502990722656

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023874282836914
    2. ' =' → logprob: -1.9102387428283691
    3. ',' → logprob: -11.160238265991211
    4. ')' → logprob: -15.660238265991211
    5. '   ' → logprob: -16.03523826599121
    6. '  ' → logprob: -18.16023826599121
    7. ' ' → logprob: -18.41023826599121
    8. '=

' → logprob: -18.41023826599121
    9. '_' → logprob: -19.03523826599121
    10. 'a' → logprob: -19.66023826599121

Token 385: ' gather' (ID: 13660)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003603036515414715
    2. ' gather' → logprob: -5.628602981567383
    3. ' g' → logprob: -13.628602981567383
    4. 'Gather' → logprob: -14.003602981567383
    5. '   ' → logprob: -14.503602981567383
    6. '	g' → logprob: -15.503602981567383
    7. '  ' → logprob: -16.628602981567383
    8. ' ' → logprob: -16.753602981567383
    9. ' gathered' → logprob: -17.128602981567383
    10. '(g' → logprob: -18.253602981567383

Token 386: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -5.438573680294212e-06
    2. 'inputs' → logprob: -12.375005722045898
    3. '_' → logprob: -13.875005722045898
    4. '_outputs' → logprob: -16.2500057220459
    5. 'Inputs' → logprob: -16.7500057220459
    6. '(inputs' → logprob: -16.7500057220459
    7. '_input' → logprob: -17.6250057220459
    8. 'a' → logprob: -18.6250057220459
    9. 's' → logprob: -18.7500057220459
    10. ' inputs' → logprob: -20.1250057220459

Token 387: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015173576539382339
    2. '
' → logprob: -6.751517295837402
    3. '    
' → logprob: -8.001517295837402
    4. '
' → logprob: -12.751517295837402
    5. '	ll' → logprob: -13.251517295837402
    6. 'll' → logprob: -13.626517295837402
    7. '<|end|>' → logprob: -14.001517295837402
    8. '  
' → logprob: -14.001517295837402
    9. '```' → logprob: -14.126517295837402
    10. ' ll' → logprob: -14.501517295837402

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010010108351707458
    2. 'll' → logprob: -4.885010242462158
    3. 'lst' → logprob: -6.760010242462158
    4. ' ll' → logprob: -7.510010242462158
    5. 'results' → logprob: -8.385009765625
    6. 'result' → logprob: -8.635009765625
    7. 'res' → logprob: -9.135009765625
    8. 'ans' → logprob: -10.260009765625
    9. '	ll' → logprob: -10.260009765625
    10. 'all' → logprob: -10.510009765625

Token 389: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -0.013909142464399338
    2. 'results' → logprob: -5.638909339904785
    3. 'res' → logprob: -5.888909339904785
    4. 'result' → logprob: -6.388909339904785
    5. 'lst' → logprob: -6.513909339904785
    6. 's' → logprob: -6.763909339904785
    7. 'com' → logprob: -6.888909339904785
    8. '   ' → logprob: -7.013909339904785
    9. 'all' → logprob: -7.638909339904785
    10. 'comb' → logprob: -8.138909339904785

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. '   ' → logprob: -15.788042068481445
    4. '.' → logprob: -18.788042068481445
    5. ' ' → logprob: -18.788042068481445
    6. '＝' → logprob: -19.038042068481445
    7. ' =
' → logprob: -19.038042068481445
    8. ',' → logprob: -19.163042068481445
    9. '    ' → logprob: -19.288042068481445
    10. '.extend' → logprob: -19.288042068481445

Token 391: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007105246186256409
    2. ' sum' → logprob: -7.250710487365723
    3. 'sort' → logprob: -15.000710487365723
    4. '   ' → logprob: -16.25071144104004
    5. 'sorted' → logprob: -16.50071144104004
    6. '[]' → logprob: -17.50071144104004
    7. '  ' → logprob: -17.50071144104004
    8. ' ' → logprob: -17.62571144104004
    9. 'list' → logprob: -18.12571144104004
    10. '[]
' → logprob: -18.37571144104004

Token 392: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.125005722045898
    3. '_comb' → logprob: -14.875005722045898
    4. 'com' → logprob: -16.5000057220459
    5. '_list' → logprob: -17.5000057220459
    6. '_co' → logprob: -17.6250057220459
    7. '(a' → logprob: -18.7500057220459
    8. '_con' → logprob: -19.2500057220459
    9. '_
' → logprob: -19.5000057220459
    10. '_c' → logprob: -19.5000057220459

Token 393: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -6.869017852295656e-06
    2. 'b' → logprob: -12.375006675720215
    3. 'inations' → logprob: -13.250006675720215
    4. 'bb' → logprob: -15.750006675720215
    5. '(' → logprob: -15.875006675720215
    6. 'bis' → logprob: -16.25000762939453
    7. '[' → logprob: -16.37500762939453
    8. '```' → logprob: -16.87500762939453
    9. 'positions' → logprob: -17.00000762939453
    10. '
' → logprob: -17.37500762939453

Token 394: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. ' (' → logprob: -16.75
    4. '   ' → logprob: -18.5
    5. '(
' → logprob: -19.125
    6. '(A' → logprob: -20.0
    7. 'a' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '(x' → logprob: -20.5
    10. '(ai' → logprob: -21.25

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015550498210359365
    2. ',b' → logprob: -9.250155448913574
    3. ' ,' → logprob: -9.750155448913574
    4. '   ' → logprob: -14.000155448913574
    5. ',
' → logprob: -15.500155448913574
    6. 'b' → logprob: -17.62515640258789
    7. '[' → logprob: -18.50015640258789
    8. '```' → logprob: -18.87515640258789
    9. '  ' → logprob: -19.00015640258789
    10. ',B' → logprob: -19.37515640258789

Token 396: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. ' ' → logprob: -20.501928329467773
    4. ',b' → logprob: -20.876928329467773
    5. '   ' → logprob: -21.001928329467773
    6. '	b' → logprob: -21.376928329467773
    7. ',' → logprob: -21.626928329467773
    8. '<|end|>' → logprob: -21.876928329467773
    9. ')b' → logprob: -22.126928329467773
    10. '  ' → logprob: -22.251928329467773

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ',c' → logprob: -10.250048637390137
    3. ' ,' → logprob: -11.500048637390137
    4. ',b' → logprob: -13.125048637390137
    5. 'c' → logprob: -14.500048637390137
    6. '   ' → logprob: -15.000048637390137
    7. ',
' → logprob: -15.500048637390137
    8. 'b' → logprob: -16.250049591064453
    9. '```' → logprob: -16.875049591064453
    10. '_,' → logprob: -17.500049591064453

Token 398: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006054567056708038
    2. ' c' → logprob: -7.625605583190918
    3. 'b' → logprob: -9.125605583190918
    4. '   ' → logprob: -12.125605583190918
    5. ',' → logprob: -14.000605583190918
    6. ' ' → logprob: -14.500605583190918
    7. ',c' → logprob: -14.500605583190918
    8. '  ' → logprob: -14.750605583190918
    9. 'C' → logprob: -15.500605583190918
    10. '	c' → logprob: -16.0006046295166

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.375014305114746
    3. ',
' → logprob: -13.250014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '```' → logprob: -15.625014305114746
    6. '‌,' → logprob: -17.25001335144043
    7. ',

' → logprob: -17.37501335144043
    8. ',
' → logprob: -17.37501335144043
    9. ')' → logprob: -17.37501335144043
    10. '`,' → logprob: -17.75001335144043

Token 400: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0002613358374219388
    2. ' kk' → logprob: -8.250261306762695
    3. 'k' → logprob: -16.750261306762695
    4. '   ' → logprob: -18.875261306762695
    5. 'ck' → logprob: -20.125261306762695
    6. 'KK' → logprob: -20.250261306762695
    7. 'kkkk' → logprob: -21.000261306762695
    8. 'ks' → logprob: -21.375261306762695
    9. ' ' → logprob: -21.375261306762695
    10. '
' → logprob: -22.250261306762695

Token 401: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20171163976192474
    2. ')' → logprob: -1.701711654663086
    3. ')
' → logprob: -8.201711654663086
    4. '   ' → logprob: -10.701711654663086
    5. ' )
' → logprob: -14.701711654663086
    6. ')

' → logprob: -14.701711654663086
    7. ')`
' → logprob: -15.076711654663086
    8. ' ' → logprob: -15.826711654663086
    9. ' )' → logprob: -16.326711654663086
    10. ')`' → logprob: -17.201711654663086

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.0033853515051305e-05
    2. 'll' → logprob: -10.625060081481934
    3. ' ll' → logprob: -11.000060081481934
    4. '```' → logprob: -12.125060081481934
    5. '	ll' → logprob: -12.250060081481934
    6. '
' → logprob: -12.625060081481934
    7. '    
' → logprob: -13.500060081481934
    8. ',ll' → logprob: -13.875060081481934
    9. 'sort' → logprob: -14.125060081481934
    10. '<|end|>' → logprob: -14.250060081481934

Token 403: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -0.0008201113669201732
    2. '   ' → logprob: -8.12582015991211
    3. 'sort' → logprob: -8.25082015991211
    4. 'sorted' → logprob: -8.87582015991211
    5. ' ll' → logprob: -9.37582015991211
    6. 'lll' → logprob: -10.75082015991211
    7. '	ll' → logprob: -12.25082015991211
    8. 'lst' → logprob: -12.25082015991211
    9. '  ' → logprob: -12.87582015991211
    10. 'ls' → logprob: -13.50082015991211

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08126843720674515
    2. '.sort' → logprob: -2.581268548965454
    3. '.' → logprob: -6.706268310546875
    4. ' =' → logprob: -6.831268310546875
    5. 'sort' → logprob: -9.831268310546875
    6. '_sorted' → logprob: -11.831268310546875
    7. '   ' → logprob: -12.206268310546875
    8. ' sort' → logprob: -13.081268310546875
    9. 'sorted' → logprob: -13.331268310546875
    10. '	sort' → logprob: -14.081268310546875

Token 405: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.16277600824832916
    2. ' sort' → logprob: -1.912775993347168
    3. 'sorted' → logprob: -6.287775993347168
    4. ' sorted' → logprob: -7.287775993347168
    5. '	sort' → logprob: -12.662775993347168
    6. 'reduce' → logprob: -14.537775993347168
    7. 'list' → logprob: -14.662775993347168
    8. '(sort' → logprob: -14.912775993347168
    9. ' ' → logprob: -15.037775993347168
    10. '```' → logprob: -15.662775993347168

Token 406: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.696889623621246e-06
    2. '_lst' → logprob: -14.12500286102295
    3. '_desc' → logprob: -14.50000286102295
    4. '```' → logprob: -14.87500286102295
    5. '_ll' → logprob: -15.25000286102295
    6. '_' → logprob: -15.37500286102295
    7. '(_' → logprob: -15.37500286102295
    8. 'List' → logprob: -15.75000286102295
    9. 'list' → logprob: -16.250001907348633
    10. '(' → logprob: -17.750001907348633

Token 407: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.0001858982432167977
    2. 'desc' → logprob: -8.6251859664917
    3. '_des' → logprob: -12.8751859664917
    4. '_lst' → logprob: -14.0001859664917
    5. '(lst' → logprob: -14.2501859664917
    6. '(desc' → logprob: -14.5001859664917
    7. '_dec' → logprob: -15.5001859664917
    8. '(ll' → logprob: -15.6251859664917
    9. '_DESC' → logprob: -15.6251859664917
    10. '```' → logprob: -15.7501859664917

Token 408: '(ll' (ID: 76557)
  Prédit: '(ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.009288959205150604
    2. '(lst' → logprob: -4.759288787841797
    3. '(' → logprob: -7.509288787841797
    4. '(ls' → logprob: -9.009288787841797
    5. '(ld' → logprob: -14.134288787841797
    6. '(l' → logprob: -14.259288787841797
    7. '(list' → logprob: -14.634288787841797
    8. '(lp' → logprob: -14.759288787841797
    9. '(lb' → logprob: -14.759288787841797
    10. '(li' → logprob: -14.884288787841797

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006057605613023043
    2. ')
' → logprob: -5.1310577392578125
    3. '   ' → logprob: -9.506057739257812
    4. '()' → logprob: -10.631057739257812
    5. ' )' → logprob: -11.131057739257812
    6. ' ' → logprob: -12.131057739257812
    7. ')
' → logprob: -12.256057739257812
    8. '(' → logprob: -13.131057739257812
    9. '())' → logprob: -13.256057739257812
    10. '()
' → logprob: -14.881057739257812

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004679203499108553
    2. '
' → logprob: -5.754679203033447
    3. 'print' → logprob: -6.629679203033447
    4. '    
' → logprob: -8.754679679870605
    5. '(' → logprob: -12.129679679870605
    6. '(print' → logprob: -12.504679679870605
    7. ' print' → logprob: -13.004679679870605
    8. '  
' → logprob: -13.254679679870605
    9. '	print' → logprob: -13.879679679870605
    10. '       ' → logprob: -13.879679679870605

Token 411: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.147740689106286e-05
    2. '   ' → logprob: -9.75007152557373
    3. ' print' → logprob: -11.25007152557373
    4. 'if' → logprob: -16.000070571899414
    5. '
' → logprob: -17.125070571899414
    6. 'll' → logprob: -17.875070571899414
    7. '    
' → logprob: -18.625070571899414
    8. '	print' → logprob: -18.750070571899414
    9. '.print' → logprob: -18.750070571899414
    10. '#print' → logprob: -19.000070571899414

Token 412: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0005388548015616834
    2. '```' → logprob: -7.7505388259887695
    3. ')_' → logprob: -10.37553882598877
    4. '("_' → logprob: -11.00053882598877
    5. '('_' → logprob: -11.25053882598877
    6. '`' → logprob: -11.62553882598877
    7. '"_' → logprob: -11.87553882598877
    8. '*_' → logprob: -11.87553882598877
    9. '\' → logprob: -12.00053882598877
    10. '
' → logprob: -12.37553882598877

Token 413: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. ' _' → logprob: -17.25
    4. 'k' → logprob: -17.75
    5. '_top' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '__' → logprob: -18.875
    8. '_elements' → logprob: -19.125
    9. '_x' → logprob: -19.75
    10. '_l' → logprob: -20.125

Token 414: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -2.1008713702030946e-06
    2. '_e' → logprob: -14.625001907348633
    3. 'elements' → logprob: -14.625001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_k' → logprob: -15.250001907348633
    6. '_ele' → logprob: -16.000001907348633
    7. '_items' → logprob: -16.125001907348633
    8. '_list' → logprob: -16.500001907348633
    9. '_element' → logprob: -16.875001907348633
    10. '_values' → logprob: -17.000001907348633

Token 415: '(ll' (ID: 76557)
  Prédit: '(ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.0012304692063480616
    2. '(lst' → logprob: -6.751230239868164
    3. '(' → logprob: -10.126230239868164
    4. '(ls' → logprob: -11.376230239868164
    5. ' (' → logprob: -11.876230239868164
    6. '(
' → logprob: -14.126230239868164
    7. '<ll' → logprob: -15.126230239868164
    8. ',ll' → logprob: -15.876230239868164
    9. '```' → logprob: -15.876230239868164
    10. '(lp' → logprob: -16.126230239868164

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005941396811977029
    2. ' ,' → logprob: -7.750594139099121
    3. ',ll' → logprob: -8.875594139099121
    4. '(ll' → logprob: -11.250594139099121
    5. '(' → logprob: -11.500594139099121
    6. '   ' → logprob: -15.250594139099121
    7. ' (' → logprob: -16.500595092773438
    8. ',
' → logprob: -16.500595092773438
    9. ',k' → logprob: -16.750595092773438
    10. ')' → logprob: -17.250595092773438

Token 417: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0009122979827225208
    2. ' kk' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.3759126663208
    4. 'kkkk' → logprob: -16.375911712646484
    5. '  ' → logprob: -17.000911712646484
    6. ' ' → logprob: -17.125911712646484
    7. 'k' → logprob: -17.750911712646484
    8. '    ' → logprob: -17.875911712646484
    9. 'min' → logprob: -18.375911712646484
    10. 'KK' → logprob: -19.500911712646484

Token 418: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.250003814697266
    4. ')#' → logprob: -17.750003814697266
    5. ')

' → logprob: -18.000003814697266
    6. ')`' → logprob: -18.500003814697266
    7. '))' → logprob: -19.500003814697266
    8. '   ' → logprob: -19.875003814697266
    9. ')
' → logprob: -20.250003814697266
    10. '}' → logprob: -20.375003814697266

Token 419: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022244716063141823
    2. '<|end|>' → logprob: -4.022244930267334
    3. '
' → logprob: -5.647244930267334
    4. ' if' → logprob: -8.147244453430176
    5. '```' → logprob: -8.522244453430176
    6. '<|end|>' → logprob: -10.647244453430176
    7. '  
' → logprob: -11.647244453430176
    8. '#' → logprob: -11.772244453430176
    9. '

' → logprob: -12.522244453430176
    10. ')' → logprob: -12.522244453430176

Token 420: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01107187382876873
    2. '__' → logprob: -4.511071681976318
    3. '_' → logprob: -10.886072158813477
    4. ' ' → logprob: -12.511072158813477
    5. '_name' → logprob: -14.011072158813477
    6. ' _' → logprob: -15.136072158813477
    7. 'name' → logprob: -15.386072158813477
    8. ' ' → logprob: -15.636072158813477
    9. '___' → logprob: -16.011072158813477
    10. ' ___' → logprob: -16.886072158813477

Token 421: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03917204216122627
    2. ' ==' → logprob: -3.5391719341278076
    3. ' __' → logprob: -5.414172172546387
    4. '==' → logprob: -5.539172172546387
    5. '.__' → logprob: -8.039172172546387
    6. 'name' → logprob: -8.289172172546387
    7. '=="' → logprob: -8.914172172546387
    8. '[' → logprob: -9.539172172546387
    9. '__.__' → logprob: -9.789172172546387
    10. '__.' → logprob: -10.289172172546387

Token 422: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1756367712223437e-05
    2. '==' → logprob: -11.875011444091797
    3. '__.__' → logprob: -12.375011444091797
    4. ' ==' → logprob: -15.125011444091797
    5. '___' → logprob: -15.875011444091797
    6. '____' → logprob: -16.000011444091797
    7. '__.' → logprob: -16.625011444091797
    8. '=="' → logprob: -17.625011444091797
    9. '__
' → logprob: -18.000011444091797
    10. '__('' → logprob: -18.375011444091797

Token 423: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34831297397613525
    2. ' ==' → logprob: -1.7233129739761353
    3. '__' → logprob: -2.2233128547668457
    4. '=="' → logprob: -4.973312854766846
    5. '=='' → logprob: -7.848312854766846
    6. '_' → logprob: -10.348313331604004
    7. '=' → logprob: -10.723313331604004
    8. '==
' → logprob: -11.598313331604004
    9. '===' → logprob: -12.098313331604004
    10. '"' → logprob: -12.098313331604004

Token 424: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03804975748062134
    2. ''' → logprob: -3.2880496978759766
    3. ' "__' → logprob: -12.288049697875977
    4. '__' → logprob: -12.663049697875977
    5. ' '__' → logprob: -16.038049697875977
    6. '"name' → logprob: -16.288049697875977
    7. '"user' → logprob: -16.663049697875977
    8. ''"' → logprob: -17.163049697875977
    9. '("__' → logprob: -17.413049697875977
    10. ' ' → logprob: -17.913049697875977

Token 425: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00869316142052412
    2. '__' → logprob: -4.758693218231201
    3. 'name' → logprob: -10.258692741394043
    4. '"' → logprob: -10.883692741394043
    5. '_main' → logprob: -10.883692741394043
    6. ' main' → logprob: -13.758692741394043
    7. '```' → logprob: -13.883692741394043
    8. '__":
' → logprob: -14.008692741394043
    9. ''' → logprob: -14.508692741394043
    10. 'built' → logprob: -14.883692741394043

Token 426: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023364044725894928
    2. '__' → logprob: -3.7733640670776367
    3. '__':
' → logprob: -9.148364067077637
    4. '__:' → logprob: -11.523364067077637
    5. '__["' → logprob: -13.648364067077637
    6. '__.' → logprob: -15.398364067077637
    7. '__",' → logprob: -15.898364067077637
    8. '"' → logprob: -16.02336311340332
    9. '":' → logprob: -16.14836311340332
    10. '__.__' → logprob: -16.14836311340332

Token 427: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12671661376953125
    2. 'main' → logprob: -2.6267166137695312
    3. '   ' → logprob: -3.1267166137695312
    4. '	main' → logprob: -5.876716613769531
    5. '_main' → logprob: -10.376716613769531
    6. '(main' → logprob: -13.501716613769531
    7. '   ' → logprob: -13.751716613769531
    8. '    
' → logprob: -14.376716613769531
    9. '_MAIN' → logprob: -14.751716613769531
    10. '.main' → logprob: -15.251716613769531

Token 428: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.547789674485102e-05
    2. ' main' → logprob: -10.250035285949707
    3. '	main' → logprob: -18.500036239624023
    4. '   ' → logprob: -21.125036239624023
    5. '_main' → logprob: -21.500036239624023
    6. '.main' → logprob: -23.500036239624023
    7. '(main' → logprob: -24.250036239624023
    8. 'import' → logprob: -25.000036239624023
    9. 'Main' → logprob: -25.250036239624023
    10. 'maine' → logprob: -26.625036239624023

Token 429: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 427
Tokens correctement prédits (1ère position, stricte): 201
Tokens correctement prédits (1ère position, avec adaptation): 221
Tokens correctement prédits (top 10): 378
Précision stricte (1ère position): 47.07%
Précision adaptée (1ère position): 51.76%
Précision (top 10): 88.52%
================================================================================
