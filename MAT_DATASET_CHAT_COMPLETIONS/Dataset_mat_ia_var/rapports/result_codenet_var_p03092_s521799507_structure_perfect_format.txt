================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

import numpy as np

N, A, B = map(int, input().split())
P = [int(x) for x in input().split()]

INF = 10 ** 18
dp = np.full(N + 1, INF, dtype=np.int64)
dp[0] = 0

for p in P:
    dp[p] = dp[:p].min()
    dp[p + 1:] += B
    dp[:p] += A

answer = dp.min()
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002038083504885435
    2. ' .' → logprob: -7.00203800201416
    3. '.stdin' → logprob: -7.75203800201416
    4. '.import' → logprob: -7.87703800201416
    5. '.readline' → logprob: -9.50203800201416
    6. '.
' → logprob: -9.62703800201416
    7. '.argv' → logprob: -10.25203800201416
    8. '.input' → logprob: -10.37703800201416
    9. '.exit' → logprob: -11.50203800201416
    10. '.stdout' → logprob: -11.50203800201416

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.30112382769584656
    2. '.' → logprob: -1.426123857498169
    3. '.read' → logprob: -3.926123857498169
    4. '.readlines' → logprob: -10.67612361907959
    5. '.Read' → logprob: -11.55112361907959
    6. 'read' → logprob: -11.67612361907959
    7. '```' → logprob: -12.92612361907959
    8. '.write' → logprob: -13.80112361907959
    9. ' readline' → logprob: -14.05112361907959
    10. '<|end|>' → logprob: -14.17612361907959

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17288635671138763
    2. '(' → logprob: -1.9228863716125488
    3. '()
' → logprob: -5.672886371612549
    4. '(
' → logprob: -6.047886371612549
    5. '\' → logprob: -6.297886371612549
    6. '\n' → logprob: -6.672886371612549
    7. '
' → logprob: -6.797886371612549
    8. '()\' → logprob: -6.922886371612549
    9. '().' → logprob: -7.172886371612549
    10. '()

' → logprob: -8.79788589477539

Token 9: 'import' (ID: 561)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2023220658302307
    2. '(' → logprob: -1.702322006225586
    3. '().' → logprob: -7.952322006225586
    4. '()
' → logprob: -8.577322006225586
    5. '(
' → logprob: -9.702322006225586
    6. '(n' → logprob: -9.952322006225586
    7. 'a' → logprob: -10.077322006225586
    8. '()\' → logprob: -10.077322006225586
    9. ')' → logprob: -10.702322006225586
    10. '()

' → logprob: -10.827322006225586

Token 10: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0012785687576979399
    2. 'os' → logprob: -7.126278400421143
    3. ' math' → logprob: -7.876278400421143
    4. ' sys' → logprob: -9.6262788772583
    5. ' re' → logprob: -11.0012788772583
    6. ' collections' → logprob: -12.6262788772583
    7. ' random' → logprob: -13.0012788772583
    8. ' itertools' → logprob: -13.3762788772583
    9. ' json' → logprob: -13.5012788772583
    10. ' io' → logprob: -14.1262788772583

Token 11: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.396868497133255
    2. '.' → logprob: -1.6468684673309326
    3. '<|end|>' → logprob: -2.1468684673309326
    4. 'as' → logprob: -5.146868705749512
    5. '<|end|>' → logprob: -5.521868705749512
    6. '.ndarray' → logprob: -5.771868705749512
    7. ')' → logprob: -7.271868705749512
    8. 'import' → logprob: -7.396868705749512
    9. '.random' → logprob: -7.396868705749512
    10. '(' → logprob: -7.396868705749512

Token 12: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0018877071561291814
    2. 'np' → logprob: -6.501887798309326
    3. ' ' → logprob: -7.876887798309326
    4. ' numpy' → logprob: -12.626887321472168
    5. ' array' → logprob: -14.376887321472168
    6. ' ndarray' → logprob: -14.376887321472168
    7. ' ' → logprob: -15.251887321472168
    8. ''' → logprob: -15.376887321472168
    9. '"' → logprob: -15.626887321472168
    10. 'numpy' → logprob: -16.126888275146484

Token 13: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3944014310836792
    2. '.' → logprob: -1.5194014310836792
    3. '\n' → logprob: -1.6444014310836792
    4. 'import' → logprob: -2.3944015502929688
    5. '[' → logprob: -2.8944015502929688
    6. 'np' → logprob: -3.3944015502929688
    7. '#' → logprob: -3.5194015502929688
    8. '<|end|>' → logprob: -4.019401550292969
    9. '```' → logprob: -4.144401550292969
    10. ')' → logprob: -4.269401550292969

Token 14: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12334361672401428
    2. 'a' → logprob: -3.4983437061309814
    3. 'def' → logprob: -3.8733437061309814
    4. 'data' → logprob: -4.373343467712402
    5. 'dp' → logprob: -4.498343467712402
    6. 'arr' → logprob: -4.623343467712402
    7. 'array' → logprob: -4.748343467712402
    8. 'N' → logprob: -4.873343467712402
    9. '#' → logprob: -5.748343467712402
    10. 'A' → logprob: -5.873343467712402

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6231949925422668
    2. ' ' → logprob: -1.373194932937622
    3. ',' → logprob: -2.123194932937622
    4. '=' → logprob: -2.498194932937622
    5. ' ,' → logprob: -5.373195171356201
    6. ')' → logprob: -6.498195171356201
    7. '<|end|>' → logprob: -7.248195171356201
    8. '_' → logprob: -7.623195171356201
    9. '  ' → logprob: -7.998195171356201
    10. '.' → logprob: -8.373194694519043

Token 16: ' A' (ID: 355)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2972702085971832
    2. ' K' → logprob: -1.5472701787948608
    3. ' ' → logprob: -3.5472702980041504
    4. 'M' → logprob: -4.54727029800415
    5. 'K' → logprob: -5.54727029800415
    6. ' A' → logprob: -8.672269821166992
    7. ' T' → logprob: -9.172269821166992
    8. ' D' → logprob: -9.297269821166992
    9. '_' → logprob: -9.672269821166992
    10. '=' → logprob: -10.047269821166992

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48107874393463135
    2. '=' → logprob: -0.9810787439346313
    3. ',' → logprob: -4.981078624725342
    4. ' ,' → logprob: -9.9810791015625
    5. ' ' → logprob: -10.1060791015625
    6. '=input' → logprob: -12.2310791015625
    7. ')' → logprob: -12.3560791015625
    8. '[' → logprob: -12.8560791015625
    9. ' =
' → logprob: -12.9810791015625
    10. ' =
' → logprob: -13.9185791015625

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.127749502658844
    2. ' B' → logprob: -2.252749443054199
    3. 'D' → logprob: -5.627749443054199
    4. 'K' → logprob: -5.752749443054199
    5. 'T' → logprob: -5.877749443054199
    6. 'Q' → logprob: -6.627749443054199
    7. 'M' → logprob: -6.877749443054199
    8. ' T' → logprob: -7.752749443054199
    9. ' D' → logprob: -7.752749443054199
    10. ' K' → logprob: -7.877749443054199

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47419601678848267
    2. '=' → logprob: -0.9741960167884827
    3. ',' → logprob: -9.099196434020996
    4. '=input' → logprob: -12.974196434020996
    5. ' ' → logprob: -13.474196434020996
    6. ')' → logprob: -13.974196434020996
    7. '<|end|>' → logprob: -14.474196434020996
    8. ' ,' → logprob: -14.724196434020996
    9. ' =
' → logprob: -15.349196434020996
    10. '=int' → logprob: -15.474196434020996

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1803513765335083
    2. 'map' → logprob: -1.8053513765335083
    3. ' np' → logprob: -7.930351257324219
    4. ' input' → logprob: -9.180351257324219
    5. ' list' → logprob: -9.805351257324219
    6. 'input' → logprob: -10.305351257324219
    7. 'np' → logprob: -10.930351257324219
    8. ' ' → logprob: -11.305351257324219
    9. 'list' → logprob: -11.430351257324219
    10. 'int' → logprob: -12.680351257324219

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07960495352745056
    2. '(' → logprob: -2.5796048641204834
    3. '(lambda' → logprob: -7.7046051025390625
    4. '(input' → logprob: -8.579605102539062
    5. '(str' → logprob: -9.954605102539062
    6. 'int' → logprob: -11.079605102539062
    7. '(list' → logprob: -13.204605102539062
    8. '(
' → logprob: -13.204605102539062
    9. '<int' → logprob: -13.329605102539062
    10. '(tuple' → logprob: -13.579605102539062

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5394096970558167
    2. '(input' → logprob: -1.6644096374511719
    3. ',input' → logprob: -2.039409637451172
    4. '(' → logprob: -2.414409637451172
    5. 'input' → logprob: -5.789409637451172
    6. '(sys' → logprob: -6.039409637451172
    7. ')' → logprob: -6.289409637451172
    8. ' ,' → logprob: -7.664409637451172
    9. ' input' → logprob: -8.539409637451172
    10. ' (' → logprob: -10.164409637451172

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519337236881256
    2. ' input' → logprob: -1.5019336938858032
    3. ' ' → logprob: -12.876934051513672
    4. ')' → logprob: -13.626934051513672
    5. 'sys' → logprob: -15.251934051513672
    6. '(input' → logprob: -16.001934051513672
    7. ' sys' → logprob: -16.001934051513672
    8. ',input' → logprob: -16.126934051513672
    9. '=input' → logprob: -16.251934051513672
    10. ' )' → logprob: -16.876934051513672

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11558172106742859
    2. '())' → logprob: -2.740581750869751
    3. '()' → logprob: -3.115581750869751
    4. ')' → logprob: -8.490581512451172
    5. '(' → logprob: -10.240581512451172
    6. '()))' → logprob: -11.615581512451172
    7. '()
' → logprob: -12.865581512451172
    8. '());' → logprob: -12.990581512451172
    9. '(),' → logprob: -13.615581512451172
    10. '();)' → logprob: -13.740581512451172

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018574446439743042
    2. 'strip' → logprob: -4.018574237823486
    3. 'rstrip' → logprob: -7.768574237823486
    4. ' split' → logprob: -13.768574714660645
    5. '(split' → logprob: -14.768574714660645
    6. ')' → logprob: -15.893574714660645
    7. 'read' → logprob: -17.143573760986328
    8. ' strip' → logprob: -17.643573760986328
    9. 'plit' → logprob: -18.768573760986328
    10. '_split' → logprob: -18.893573760986328

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025220380630344152
    2. '))' → logprob: -6.002521991729736
    3. '())' → logprob: -10.252522468566895
    4. '()' → logprob: -12.377522468566895
    5. ')`' → logprob: -13.502522468566895
    6. '),' → logprob: -13.752522468566895
    7. '`)' → logprob: -14.002522468566895
    8. ')
' → logprob: -14.377522468566895
    9. ')))' → logprob: -14.377522468566895
    10. '(' → logprob: -14.502522468566895

Token 27: 'P' (ID: 47)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.307897686958313
    2. 'x' → logprob: -1.932897686958313
    3. 'data' → logprob: -2.0578975677490234
    4. 'numbers' → logprob: -2.3078975677490234
    5. 'C' → logprob: -2.4328975677490234
    6. 'a' → logprob: -3.1828975677490234
    7. 'X' → logprob: -3.1828975677490234
    8. 'array' → logprob: -3.4328975677490234
    9. 'values' → logprob: -3.9328975677490234
    10. 'c' → logprob: -4.057897567749023

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27070677280426025
    2. '=' → logprob: -1.5207067728042603
    3. '[' → logprob: -5.395706653594971
    4. 's' → logprob: -5.770706653594971
    5. '=np' → logprob: -5.895706653594971
    6. '[:]' → logprob: -6.520706653594971
    7. '_' → logprob: -6.645706653594971
    8. 'r' → logprob: -6.895706653594971
    9. '[]' → logprob: -7.020706653594971
    10. ')' → logprob: -8.145707130432129

Token 29: ' [' (ID: 723)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.23303250968456268
    2. ' np' → logprob: -1.858032464981079
    3. 'list' → logprob: -3.358032464981079
    4. ' list' → logprob: -4.108032703399658
    5. '[np' → logprob: -8.3580322265625
    6. '[]' → logprob: -8.6080322265625
    7. '(np' → logprob: -9.3580322265625
    8. 'numpy' → logprob: -9.9830322265625
    9. '[' → logprob: -10.3580322265625
    10. ' []' → logprob: -11.1080322265625

Token 30: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006797884125262499
    2. 'float' → logprob: -7.750679969787598
    3. ' int' → logprob: -8.375679969787598
    4. '(int' → logprob: -11.875679969787598
    5. '0' → logprob: -12.750679969787598
    6. 'map' → logprob: -12.875679969787598
    7. 'list' → logprob: -13.375679969787598
    8. ']int' → logprob: -13.750679969787598
    9. 'tuple' → logprob: -14.125679969787598
    10. ' float' → logprob: -14.500679969787598

Token 31: '(x' (ID: 4061)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6040488481521606
    2. '(' → logprob: -0.8540488481521606
    3. '(x' → logprob: -3.604048728942871
    4. '(i' → logprob: -8.104048728942871
    5. '(p' → logprob: -10.229048728942871
    6. '()' → logprob: -10.229048728942871
    7. '(token' → logprob: -10.479048728942871
    8. '(a' → logprob: -11.229048728942871
    9. '(s' → logprob: -11.354048728942871
    10. '(in' → logprob: -11.479048728942871

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.371605948312208e-05
    2. 'for' → logprob: -10.250053405761719
    3. '(x' → logprob: -11.625053405761719
    4. ' for' → logprob: -13.000053405761719
    5. '(input' → logprob: -13.250053405761719
    6. '()' → logprob: -13.750053405761719
    7. ' )' → logprob: -13.750053405761719
    8. 'input' → logprob: -14.250053405761719
    9. '())' → logprob: -14.375053405761719
    10. '(' → logprob: -14.375053405761719

Token 33: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5352564454078674
    2. '(input' → logprob: -1.6602563858032227
    3. 'for' → logprob: -2.1602563858032227
    4. ' for' → logprob: -2.5352563858032227
    5. '(' → logprob: -3.7852563858032227
    6. 'input' → logprob: -5.535256385803223
    7. '()' → logprob: -6.285256385803223
    8. ' )' → logprob: -8.160256385803223
    9. ' input' → logprob: -8.535256385803223
    10. ']' → logprob: -8.660256385803223

Token 34: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04300170764327049
    2. 'input' → logprob: -3.168001651763916
    3. '=input' → logprob: -14.293002128601074
    4. '(input' → logprob: -14.418002128601074
    5. ' range' → logprob: -15.168002128601074
    6. '_input' → logprob: -15.543002128601074
    7. ' ' → logprob: -15.668002128601074
    8. '	input' → logprob: -15.793002128601074
    9. '_' → logprob: -16.043001174926758
    10. ' in' → logprob: -16.293001174926758

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051212746649980545
    2. 'in' → logprob: -3.051212787628174
    3. ' ' → logprob: -7.301212787628174
    4. ' input' → logprob: -7.676212787628174
    5. 'input' → logprob: -7.801212787628174
    6. '(' → logprob: -8.051212310791016
    7. '(input' → logprob: -8.176212310791016
    8. ')' → logprob: -8.801212310791016
    9. '_' → logprob: -9.176212310791016
    10. ' (' → logprob: -10.176212310791016

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05490338057279587
    2. ' input' → logprob: -2.929903268814087
    3. 'range' → logprob: -11.054903030395508
    4. ' range' → logprob: -12.804903030395508
    5. 'in' → logprob: -14.429903030395508
    6. ' ' → logprob: -14.429903030395508
    7. 'sys' → logprob: -15.179903030395508
    8. '(input' → logprob: -15.804903030395508
    9. '	input' → logprob: -16.242403030395508
    10. ')' → logprob: -16.242403030395508

Token 37: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.08584221452474594
    2. '()' → logprob: -3.0858421325683594
    3. '().' → logprob: -3.3358421325683594
    4. '())' → logprob: -7.335842132568359
    5. '(' → logprob: -8.08584213256836
    6. '()].' → logprob: -11.58584213256836
    7. ']' → logprob: -12.33584213256836
    8. ')]' → logprob: -12.96084213256836
    9. ']()' → logprob: -13.33584213256836
    10. '()],' → logprob: -13.46084213256836

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002489423204679042
    2. 'strip' → logprob: -8.500248908996582
    3. 'rstrip' → logprob: -10.000248908996582
    4. 'read' → logprob: -17.5002498626709
    5. 'spl' → logprob: -17.7502498626709
    6. '(split' → logprob: -17.8752498626709
    7. ' split' → logprob: -18.3752498626709
    8. 's' → logprob: -21.5002498626709
    9. 'rs' → logprob: -22.0002498626709
    10. '_split' → logprob: -22.1252498626709

Token 39: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.12220774590969086
    2. '(' → logprob: -2.4972076416015625
    3. ')]' → logprob: -3.7472076416015625
    4. '())' → logprob: -5.4972076416015625
    5. '()' → logprob: -5.6222076416015625
    6. ']' → logprob: -6.7472076416015625
    7. '('' → logprob: -9.372207641601562
    8. ')' → logprob: -9.747207641601562
    9. '(
' → logprob: -10.372207641601562
    10. '')]' → logprob: -11.122207641601562

Token 40: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21346765756607056
    2. ')]' → logprob: -1.9634675979614258
    3. ')' → logprob: -2.963467597961426
    4. '])' → logprob: -8.713467597961426
    5. ' ]' → logprob: -11.213467597961426
    6. '])]' → logprob: -11.713467597961426
    7. '`]' → logprob: -11.838467597961426
    8. ')])' → logprob: -12.338467597961426
    9. ']
' → logprob: -12.338467597961426
    10. '）' → logprob: -12.588467597961426

Token 41: 'INF' (ID: 64358)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5828401446342468
    2. 'p' → logprob: -1.2078402042388916
    3. 'a' → logprob: -3.9578402042388916
    4. '#' → logprob: -4.0828399658203125
    5. 'd' → logprob: -4.3328399658203125
    6. 'result' → logprob: -4.3328399658203125
    7. 'C' → logprob: -4.4578399658203125
    8. ']' → logprob: -4.8328399658203125
    9. 'i' → logprob: -4.9578399658203125
    10. 'dp' → logprob: -5.2078399658203125

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12699592113494873
    2. '=' → logprob: -2.1269960403442383
    3. '_' → logprob: -10.501996040344238
    4. ' ' → logprob: -11.251996040344238
    5. ' =
' → logprob: -11.376996040344238
    6. '＝' → logprob: -12.251996040344238
    7. ')' → logprob: -12.876996040344238
    8. ',' → logprob: -13.126996040344238
    9. ' =)' → logprob: -13.501996040344238
    10. '=np' → logprob: -14.251996040344238

Token 43: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28563886880874634
    2. 'float' → logprob: -1.9106388092041016
    3. ' ' → logprob: -2.6606388092041016
    4. ' float' → logprob: -3.5356388092041016
    5. '1' → logprob: -6.785638809204102
    6. 'int' → logprob: -8.535638809204102
    7. '100' → logprob: -9.535638809204102
    8. ' int' → logprob: -10.785638809204102
    9. '999' → logprob: -12.535638809204102
    10. ' ' → logprob: -13.160638809204102

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4748799800872803
    2. 'float' → logprob: -0.9748799800872803
    3. '1' → logprob: -7.599880218505859
    4. 'int' → logprob: -8.47488021850586
    5. '100' → logprob: -9.97488021850586
    6. ' float' → logprob: -10.59988021850586
    7. ' ' → logprob: -12.09988021850586
    8. '999' → logprob: -12.22488021850586
    9. 'np' → logprob: -12.47488021850586
    10. '101' → logprob: -13.09988021850586

Token 45: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03830380737781525
    2. '18' → logprob: -3.663303852081299
    3. '10' → logprob: -4.913303852081299
    4. '15' → logprob: -6.288303852081299
    5. '**' → logprob: -6.538303852081299
    6. '12' → logprob: -7.038303852081299
    7. '8' → logprob: -9.03830337524414
    8. '6' → logprob: -9.53830337524414
    9. '7' → logprob: -9.66330337524414
    10. '14' → logprob: -10.28830337524414

Token 46: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06864862143993378
    2. '15' → logprob: -3.44364857673645
    3. '10' → logprob: -4.068648815155029
    4. '18' → logprob: -4.193648815155029
    5. '12' → logprob: -6.318648815155029
    6. '16' → logprob: -8.943648338317871
    7. '14' → logprob: -9.193648338317871
    8. '13' → logprob: -9.693648338317871
    9. '11' → logprob: -10.068648338317871
    10. '20' → logprob: -10.818648338317871

Token 47: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.053494688123464584
    2. '15' → logprob: -3.803494691848755
    3. '18' → logprob: -4.303494453430176
    4. '10' → logprob: -4.303494453430176
    5. '12' → logprob: -6.178494453430176
    6. '14' → logprob: -8.428494453430176
    7. '13' → logprob: -8.803494453430176
    8. '16' → logprob: -9.053494453430176
    9. '11' → logprob: -9.803494453430176
    10. '20' → logprob: -10.053494453430176

Token 48: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06088901311159134
    2. 'DP' → logprob: -3.9358890056610107
    3. '
' → logprob: -4.18588924407959
    4. 'dist' → logprob: -5.31088924407959
    5. 'P' → logprob: -5.43588924407959
    6. '#' → logprob: -6.18588924407959
    7. 'result' → logprob: -6.18588924407959
    8. '' → logprob: -6.81088924407959
    9. '\n' → logprob: -6.93588924407959
    10. '\' → logprob: -6.93588924407959

Token 49: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01207855623215437
    2. 'dist' → logprob: -4.637078762054443
    3. 'DP' → logprob: -6.387078762054443
    4. 'cost' → logprob: -9.387078285217285
    5. 'c' → logprob: -9.637078285217285
    6. 'd' → logprob: -9.762078285217285
    7. 'ans' → logprob: -9.762078285217285
    8. 'D' → logprob: -9.762078285217285
    9. 'max' → logprob: -10.262078285217285
    10. 'def' → logprob: -10.387078285217285

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04370567202568054
    2. '=' → logprob: -3.543705701828003
    3. '[' → logprob: -4.293705463409424
    4. ' ' → logprob: -9.168705940246582
    5. '_' → logprob: -9.918705940246582
    6. '[]' → logprob: -11.043705940246582
    7. '[:]' → logprob: -12.293705940246582
    8. '.' → logprob: -12.543705940246582
    9. ' =[' → logprob: -12.543705940246582
    10. '0' → logprob: -12.543705940246582

Token 51: ' np' (ID: 5374)
  Prédit: '[np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[np' → logprob: -0.19685161113739014
    2. '[' → logprob: -1.9468516111373901
    3. 'np' → logprob: -3.9468517303466797
    4. ' [' → logprob: -4.19685173034668
    5. ' np' → logprob: -6.57185173034668
    6. '[[' → logprob: -9.57185173034668
    7. '[-' → logprob: -9.82185173034668
    8. '[array' → logprob: -10.32185173034668
    9. '[n' → logprob: -10.57185173034668
    10. ' [[' → logprob: -12.19685173034668

Token 52: '.full' (ID: 43009)
  Prédit: '.full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.full' → logprob: -0.006958446465432644
    2. '.zeros' → logprob: -5.006958484649658
    3. '.' → logprob: -8.7569580078125
    4. '.ndarray' → logprob: -10.5069580078125
    5. '.inf' → logprob: -10.6319580078125
    6. '.ones' → logprob: -10.8819580078125
    7. '.empty' → logprob: -12.3819580078125
    8. '.fill' → logprob: -12.7569580078125
    9. '.array' → logprob: -12.7569580078125
    10. '.eye' → logprob: -13.2569580078125

Token 53: '(N' (ID: 10564)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.016121525317430496
    2. '(N' → logprob: -4.3911213874816895
    3. '(' → logprob: -5.6411213874816895
    4. '([' → logprob: -10.266121864318848
    5. '(A' → logprob: -11.641121864318848
    6. '(((' → logprob: -12.266121864318848
    7. '(len' → logprob: -12.391121864318848
    8. '(n' → logprob: -14.016121864318848
    9. '(
' → logprob: -14.266121864318848
    10. '(IN' → logprob: -14.641121864318848

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08497854322195053
    2. ' +' → logprob: -2.7099785804748535
    3. ',' → logprob: -4.2099785804748535
    4. ' ,' → logprob: -10.459978103637695
    5. '*' → logprob: -11.459978103637695
    6. '+,' → logprob: -11.459978103637695
    7. '+
' → logprob: -12.209978103637695
    8. '```' → logprob: -12.334978103637695
    9. ')' → logprob: -12.397478103637695
    10. ',
' → logprob: -12.522478103637695

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003148472751490772
    2. ' ' → logprob: -8.250314712524414
    3. '2' → logprob: -9.875314712524414
    4. '```' → logprob: -14.500314712524414
    5. '3' → logprob: -15.125314712524414
    6. ' ' → logprob: -15.437814712524414
    7. '１' → logprob: -15.437814712524414
    8. '(' → logprob: -16.000314712524414
    9. '7' → logprob: -16.125314712524414
    10. '  ' → logprob: -16.500314712524414

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010822329204529524
    2. '2' → logprob: -6.876082420349121
    3. ' ' → logprob: -10.626082420349121
    4. '3' → logprob: -11.126082420349121
    5. '10' → logprob: -13.251082420349121
    6. '5' → logprob: -13.751082420349121
    7. '4' → logprob: -13.813582420349121
    8. '7' → logprob: -14.501082420349121
    9. 'B' → logprob: -14.626082420349121
    10. '11' → logprob: -14.876082420349121

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ',
' → logprob: -10.125106811523438
    3. ' ,' → logprob: -10.375106811523438
    4. '+' → logprob: -10.750106811523438
    5. ',[' → logprob: -13.125106811523438
    6. ',np' → logprob: -13.375106811523438
    7. ',float' → logprob: -13.500106811523438
    8. ' +' → logprob: -13.625106811523438
    9. ',

' → logprob: -13.750106811523438
    10. ',Integer' → logprob: -13.875106811523438

Token 58: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0018189321272075176
    2. ' INF' → logprob: -6.376819133758545
    3. '-INF' → logprob: -9.501818656921387
    4. 'IN' → logprob: -11.126818656921387
    5. '_INF' → logprob: -11.626818656921387
    6. 'inf' → logprob: -12.001818656921387
    7. '-' → logprob: -12.251818656921387
    8. ' -' → logprob: -13.501818656921387
    9. '0' → logprob: -13.626818656921387
    10. 'Inf' → logprob: -14.126818656921387

Token 59: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002017974853515625
    2. ',' → logprob: -6.377017974853516
    3. ' )' → logprob: -8.252017974853516
    4. ',)' → logprob: -10.002017974853516
    5. ' ,' → logprob: -12.877017974853516
    6. ',d' → logprob: -13.377017974853516
    7. '),' → logprob: -13.627017974853516
    8. ')d' → logprob: -14.002017974853516
    9. '))' → logprob: -14.252017974853516
    10. ')
' → logprob: -14.252017974853516

Token 60: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.05054055154323578
    2. ' dtype' → logprob: -3.0505404472351074
    3. ')' → logprob: -6.425540447235107
    4. '0' → logprob: -8.925540924072266
    5. 'np' → logprob: -9.550540924072266
    6. ' np' → logprob: -10.300540924072266
    7. 'int' → logprob: -10.800540924072266
    8. ' )' → logprob: -11.300540924072266
    9. '1' → logprob: -11.550540924072266
    10. 'None' → logprob: -11.800540924072266

Token 61: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.4951797127723694
    2. '=' → logprob: -0.9951797127723694
    3. '=int' → logprob: -3.8701796531677246
    4. 'np' → logprob: -11.620180130004883
    5. '=n' → logprob: -12.245180130004883
    6. 'int' → logprob: -12.495180130004883
    7. '='' → logprob: -13.120180130004883
    8. '=
' → logprob: -13.495180130004883
    9. '=torch' → logprob: -13.620180130004883
    10. ')' → logprob: -13.995180130004883

Token 62: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.015320503152906895
    2. 'int' → logprob: -4.265320301055908
    3. '.i' → logprob: -7.015320301055908
    4. '.float' → logprob: -9.140320777893066
    5. '.uint' → logprob: -9.515320777893066
    6. 'i' → logprob: -10.015320777893066
    7. '64' → logprob: -11.265320777893066
    8. '.' → logprob: -11.515320777893066
    9. '```' → logprob: -13.140320777893066
    10. 'uint' → logprob: -13.265320777893066

Token 63: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.1472419600977446e-06
    2. '6' → logprob: -13.750000953674316
    3. 'c' → logprob: -19.250001907348633
    4. '63' → logprob: -19.375001907348633
    5. '128' → logprob: -19.875001907348633
    6. 'p' → logprob: -19.875001907348633
    7. '32' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '66' → logprob: -21.250001907348633
    10. '65' → logprob: -21.250001907348633

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.828512363834307e-05
    2. ')
' → logprob: -9.375088691711426
    3. ' )' → logprob: -13.625088691711426
    4. ')`' → logprob: -14.000088691711426
    5. ')

' → logprob: -14.375088691711426
    6. '))' → logprob: -15.375088691711426
    7. ')
' → logprob: -15.500088691711426
    8. '()' → logprob: -15.875088691711426
    9. '),' → logprob: -16.75008773803711
    10. ')`
' → logprob: -16.87508773803711

Token 65: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00011725161311915144
    2. ' dp' → logprob: -9.500117301940918
    3. '0' → logprob: -11.125117301940918
    4. '(dp' → logprob: -11.500117301940918
    5. '[' → logprob: -12.125117301940918
    6. '```' → logprob: -12.250117301940918
    7. '	dp' → logprob: -12.750117301940918
    8. '
' → logprob: -13.500117301940918
    9. ' 
' → logprob: -14.250117301940918
    10. '`' → logprob: -14.250117301940918

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '```' → logprob: -12.50001049041748
    3. '\[' → logprob: -12.75001049041748
    4. '[
' → logprob: -13.25001049041748
    5. '
' → logprob: -14.62501049041748
    6. '<|end|>' → logprob: -15.37501049041748
    7. '0' → logprob: -15.37501049041748
    8. '[np' → logprob: -15.87501049041748
    9. '[N' → logprob: -15.87501049041748
    10. 'dp' → logprob: -16.125009536743164

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -17.625
    4. '```' → logprob: -17.875
    5. ')' → logprob: -18.5
    6. '[' → logprob: -18.75
    7. '<|end|>' → logprob: -19.0
    8. '=' → logprob: -19.25
    9. '۰' → logprob: -19.375
    10. '00' → logprob: -20.125

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024120506714098155
    2. ']=' → logprob: -8.62524127960205
    3. ' ]' → logprob: -10.00024127960205
    4. '=' → logprob: -11.12524127960205
    5. '[' → logprob: -14.25024127960205
    6. ']
' → logprob: -15.62524127960205
    7. ')' → logprob: -16.250240325927734
    8. ']==' → logprob: -16.625240325927734
    9. '`]' → logprob: -16.875240325927734
    10. ')]' → logprob: -17.000240325927734

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. '＝' → logprob: -15.014164924621582
    4. '=np' → logprob: -15.639164924621582
    5. '=int' → logprob: -15.889164924621582
    6. '=

' → logprob: -16.014163970947266
    7. '=
' → logprob: -16.514163970947266
    8. '=pd' → logprob: -17.014163970947266
    9. '=}' → logprob: -17.264163970947266
    10. '=cv' → logprob: -18.139163970947266

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -17.375030517578125
    4. 'A' → logprob: -17.562530517578125
    5. '1' → logprob: -18.000030517578125
    6. '۰' → logprob: -18.187530517578125
    7. '000' → logprob: -18.500030517578125
    8. '00' → logprob: -18.687530517578125
    9. '(' → logprob: -18.750030517578125
    10. '   ' → logprob: -18.750030517578125

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'A' → logprob: -16.812503814697266
    4. '1' → logprob: -17.125003814697266
    5. '۰' → logprob: -18.000003814697266
    6. '```' → logprob: -18.000003814697266
    7. '[' → logprob: -18.125003814697266
    8. 'np' → logprob: -18.375003814697266
    9. '(' → logprob: -18.437503814697266
    10. '00' → logprob: -18.625003814697266

Token 72: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2357710599899292
    2. '
' → logprob: -1.7357710599899292
    3. ' 
' → logprob: -4.235771179199219
    4. ' for' → logprob: -5.485771179199219
    5. 'for' → logprob: -5.860771179199219
    6. '\' → logprob: -5.985771179199219
    7. '  
' → logprob: -6.110771179199219
    8. '' → logprob: -6.235771179199219
    9. '
' → logprob: -6.235771179199219
    10. '<|end|>' → logprob: -6.360771179199219

Token 73: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8312570318812504e-05
    2. ' for' → logprob: -12.000018119812012
    3. '```' → logprob: -12.750018119812012
    4. 'i' → logprob: -13.000018119812012
    5. 'f' → logprob: -13.500018119812012
    6. '+' → logprob: -13.625018119812012
    7. '[' → logprob: -14.125018119812012
    8. ')' → logprob: -14.375018119812012
    9. 'j' → logprob: -14.875018119812012
    10. '0' → logprob: -14.875018119812012

Token 74: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004589145537465811
    2. ' ' → logprob: -5.879589080810547
    3. 'i' → logprob: -6.504589080810547
    4. ' _' → logprob: -8.504589080810547
    5. '_' → logprob: -9.504589080810547
    6. '  ' → logprob: -12.879589080810547
    7. ' x' → logprob: -13.879589080810547
    8. '_i' → logprob: -13.879589080810547
    9. '	i' → logprob: -14.254589080810547
    10. ' in' → logprob: -14.754589080810547

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16802388429641724
    2. ' ' → logprob: -2.1680238246917725
    3. '[' → logprob: -3.6680238246917725
    4. ' i' → logprob: -5.168024063110352
    5. '_' → logprob: -6.168024063110352
    6. 'in' → logprob: -6.293024063110352
    7. ')' → logprob: -6.543024063110352
    8. ',' → logprob: -6.918024063110352
    9. 'i' → logprob: -6.918024063110352
    10. '  ' → logprob: -7.793024063110352

Token 76: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.007428672630339861
    2. ' P' → logprob: -5.0074286460876465
    3. ' range' → logprob: -7.5074286460876465
    4. 'range' → logprob: -8.757429122924805
    5. 'p' → logprob: -12.882429122924805
    6. ' ' → logprob: -13.132429122924805
    7. '[P' → logprob: -13.507429122924805
    8. '[' → logprob: -15.132429122924805
    9. '(P' → logprob: -16.132429122924805
    10. '(range' → logprob: -17.194929122924805

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007125511183403432
    2. ' :' → logprob: -7.6257123947143555
    3. ',' → logprob: -9.375712394714355
    4. '+' → logprob: -9.875712394714355
    5. ':
' → logprob: -10.000712394714355
    6. '[' → logprob: -11.500712394714355
    7. '=' → logprob: -11.500712394714355
    8. ' ' → logprob: -12.000712394714355
    9. '.' → logprob: -12.500712394714355
    10. '):' → logprob: -13.000712394714355

Token 78: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44345951080322266
    2. ' dp' → logprob: -1.0684595108032227
    3. '	dp' → logprob: -4.818459510803223
    4. ' ' → logprob: -6.193459510803223
    5. '   ' → logprob: -6.818459510803223
    6. ' for' → logprob: -6.943459510803223
    7. '_dp' → logprob: -7.068459510803223
    8. '[' → logprob: -8.193459510803223
    9. 'for' → logprob: -8.568459510803223
    10. '    ' → logprob: -8.693459510803223

Token 79: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2607536315917969
    2. 'new' → logprob: -2.385753631591797
    3. 'for' → logprob: -2.385753631591797
    4. 'nd' → logprob: -3.510753631591797
    5. 'next' → logprob: -5.385753631591797
    6. 'tmp' → logprob: -5.385753631591797
    7. ' for' → logprob: -6.260753631591797
    8. ' new' → logprob: -6.885753631591797
    9. 'temp' → logprob: -7.010753631591797
    10. ' dp' → logprob: -7.510753631591797

Token 80: '[p' (ID: 23234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.304905891418457
    2. '[' → logprob: -1.304905891418457
    3. '[:-' → logprob: -1.429905891418457
    4. '[:' → logprob: -2.304905891418457
    5. ' =' → logprob: -3.054905891418457
    6. '[:]' → logprob: -3.679905891418457
    7. '[np' → logprob: -4.179905891418457
    8. '=np' → logprob: -4.304905891418457
    9. '[A' → logprob: -4.679905891418457
    10. '[min' → logprob: -6.304905891418457

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13289424777030945
    2. ':]' → logprob: -2.382894277572632
    3. '-' → logprob: -4.132894039154053
    4. ']=' → logprob: -5.507894039154053
    5. ':' → logprob: -5.632894039154053
    6. ' ]' → logprob: -5.757894039154053
    7. ']+=' → logprob: -6.632894039154053
    8. '+' → logprob: -7.007894039154053
    9. ' :]' → logprob: -7.132894039154053
    10. ' -' → logprob: -7.257894039154053

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16179178655147552
    2. ' =' → logprob: -1.9117918014526367
    3. '=min' → logprob: -7.036791801452637
    4. '+=' → logprob: -8.161791801452637
    5. '=np' → logprob: -8.911791801452637
    6. ' +=' → logprob: -10.411791801452637
    7. '+' → logprob: -10.536791801452637
    8. ',' → logprob: -10.661791801452637
    9. ' ' → logprob: -10.786791801452637
    10. '.' → logprob: -10.911791801452637

Token 83: ' dp' (ID: 21546)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011792316101491451
    2. 'np' → logprob: -5.386792182922363
    3. '0' → logprob: -5.636792182922363
    4. '1' → logprob: -6.761792182922363
    5. 'dp' → logprob: -6.761792182922363
    6. 'p' → logprob: -7.511792182922363
    7. ' min' → logprob: -8.636792182922363
    8. 'max' → logprob: -8.761792182922363
    9. ')' → logprob: -9.136792182922363
    10. 'inf' → logprob: -10.261792182922363

Token 84: '[:' (ID: 7808)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.005260203033685684
    2. '[' → logprob: -5.630259990692139
    3. '[np' → logprob: -6.755259990692139
    4. 'p' → logprob: -8.755260467529297
    5. '[min' → logprob: -9.505260467529297
    6. '[P' → logprob: -9.630260467529297
    7. '.' → logprob: -10.380260467529297
    8. '[:]' → logprob: -10.630260467529297
    9. '.min' → logprob: -10.880260467529297
    10. '<|end|>' → logprob: -11.130260467529297

Token 85: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0022550527937710285
    2. 'N' → logprob: -6.502254962921143
    3. '-' → logprob: -7.752254962921143
    4. '-p' → logprob: -9.3772554397583
    5. ' p' → logprob: -9.6272554397583
    6. ' -' → logprob: -9.6272554397583
    7. ']' → logprob: -10.0022554397583
    8. '-N' → logprob: -11.2522554397583
    9. '1' → logprob: -11.8772554397583
    10. 'len' → logprob: -12.5022554397583

Token 86: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07568315416574478
    2. 'p' → logprob: -3.325683116912842
    3. '[p' → logprob: -4.325683116912842
    4. ']' → logprob: -4.450683116912842
    5. ').' → logprob: -5.825683116912842
    6. '[:' → logprob: -6.575683116912842
    7. '-' → logprob: -6.700683116912842
    8. '   ' → logprob: -6.825683116912842
    9. ' p' → logprob: -7.075683116912842
    10. '][:' → logprob: -7.325683116912842

Token 87: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.897412822581828e-05
    2. 'arg' → logprob: -10.625068664550781
    3. 'max' → logprob: -10.750068664550781
    4. 'amin' → logprob: -11.000068664550781
    5. '.min' → logprob: -13.500068664550781
    6. 'mi' → logprob: -13.500068664550781
    7. ' min' → logprob: -14.500068664550781
    8. 'astype' → logprob: -14.500068664550781
    9. 'sum' → logprob: -14.500068664550781
    10. 'mini' → logprob: -14.875068664550781

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3610062599182129
    2. '+' → logprob: -1.611006259918213
    3. '(' → logprob: -2.986006259918213
    4. '()+' → logprob: -3.361006259918213
    5. '[' → logprob: -4.611006259918213
    6. ' +' → logprob: -5.236006259918213
    7. '()[' → logprob: -6.986006259918213
    8. ')' → logprob: -7.736006259918213
    9. '(p' → logprob: -7.986006259918213
    10. ']' → logprob: -8.611005783081055

Token 89: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03648446127772331
    2. ' ' → logprob: -4.286484241485596
    3. ' +' → logprob: -4.786484241485596
    4. '<|end|>' → logprob: -4.911484241485596
    5. ')' → logprob: -5.911484241485596
    6. '*' → logprob: -6.911484241485596
    7. '
' → logprob: -7.036484241485596
    8. ' 
' → logprob: -7.786484241485596
    9. '+
' → logprob: -8.036484718322754
    10. '```' → logprob: -9.036484718322754

Token 90: ' dp' (ID: 21546)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03594663739204407
    2. ' +' → logprob: -4.035946846008301
    3. ' ' → logprob: -4.410946846008301
    4. '
' → logprob: -6.410946846008301
    5. '<|end|>' → logprob: -6.785946846008301
    6. '*' → logprob: -7.035946846008301
    7. '+
' → logprob: -7.285946846008301
    8. ' 
' → logprob: -8.5359468460083
    9. ' *' → logprob: -9.0359468460083
    10. ' if' → logprob: -9.1609468460083

Token 91: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.47752267122268677
    2. '[:' → logprob: -1.852522611618042
    3. '[' → logprob: -2.102522611618042
    4. '[:]' → logprob: -2.477522611618042
    5. '=' → logprob: -5.602522850036621
    6. '+' → logprob: -5.727522850036621
    7. '[:-' → logprob: -5.852522850036621
    8. '+=' → logprob: -6.477522850036621
    9. ' =' → logprob: -6.727522850036621
    10. '[P' → logprob: -6.852522850036621

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.407492995262146
    2. ']' → logprob: -1.157492995262146
    3. ' +' → logprob: -5.0324931144714355
    4. '=' → logprob: -5.1574931144714355
    5. ']+' → logprob: -6.6574931144714355
    6. ']+=' → logprob: -6.6574931144714355
    7. '[' → logprob: -6.7824931144714355
    8. ':]' → logprob: -7.0324931144714355
    9. ' ]' → logprob: -7.4074931144714355
    10. '+]' → logprob: -7.4074931144714355

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062267474830150604
    2. ' ' → logprob: -2.812267541885376
    3. '<|end|>' → logprob: -9.062267303466797
    4. 'B' → logprob: -9.562267303466797
    5. '0' → logprob: -10.062267303466797
    6. ' B' → logprob: -11.187267303466797
    7. '[' → logprob: -11.187267303466797
    8. ')' → logprob: -11.812267303466797
    9. 'A' → logprob: -11.937267303466797
    10. ']' → logprob: -12.687267303466797

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047988566802814603
    2. '0' → logprob: -7.875479698181152
    3. ' ' → logprob: -9.750479698181152
    4. 'B' → logprob: -10.750479698181152
    5. '[' → logprob: -12.500479698181152
    6. 'A' → logprob: -12.625479698181152
    7. 'dp' → logprob: -12.750479698181152
    8. 'np' → logprob: -12.875479698181152
    9. ']' → logprob: -13.125479698181152
    10. ')' → logprob: -13.875479698181152

Token 95: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01640172116458416
    2. '=' → logprob: -5.016401767730713
    3. ' =' → logprob: -5.266401767730713
    4. ']=' → logprob: -6.141401767730713
    5. ' ]' → logprob: -6.141401767730713
    6. ']+=' → logprob: -9.766401290893555
    7. ':]' → logprob: -10.391401290893555
    8. '[' → logprob: -10.391401290893555
    9. ')' → logprob: -11.141401290893555
    10. ',' → logprob: -11.516401290893555

Token 96: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27611103653907776
    2. '+=' → logprob: -1.9011110067367554
    3. ' =' → logprob: -2.526111125946045
    4. ' +=' → logprob: -4.651111125946045
    5. '[' → logprob: -7.026111125946045
    6. '+' → logprob: -7.776111125946045
    7. '-=' → logprob: -8.151110649108887
    8. ']+=' → logprob: -8.901110649108887
    9. '=np' → logprob: -9.151110649108887
    10. '=min' → logprob: -9.276110649108887

Token 97: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5008643865585327
    2. 'B' → logprob: -1.3758643865585327
    3. 'A' → logprob: -2.1258645057678223
    4. 'dp' → logprob: -4.250864505767822
    5. ' ' → logprob: -6.000864505767822
    6. ' B' → logprob: -6.125864505767822
    7. ' A' → logprob: -6.375864505767822
    8. 'p' → logprob: -7.875864505767822
    9. 'np' → logprob: -8.000864028930664
    10. ' dp' → logprob: -8.875864028930664

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6598374843597412
    2. '<|end|>' → logprob: -1.4098374843597412
    3. ' ' → logprob: -2.534837484359741
    4. '#' → logprob: -2.534837484359741
    5. '+' → logprob: -3.409837484359741
    6. '```' → logprob: -4.03483772277832
    7. '\n' → logprob: -4.53483772277832
    8. '[' → logprob: -5.40983772277832
    9. '\' → logprob: -5.65983772277832
    10. ']' → logprob: -5.90983772277832

Token 100: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3874906301498413
    2. ' ' → logprob: -1.3874906301498413
    3. '+' → logprob: -1.6374906301498413
    4. '
' → logprob: -2.012490749359131
    5. '<|end|>' → logprob: -2.262490749359131
    6. '```' → logprob: -3.887490749359131
    7. '*' → logprob: -4.262490749359131
    8. '\n' → logprob: -4.637490749359131
    9. '#' → logprob: -4.762490749359131
    10. '-' → logprob: -5.887490749359131

Token 101: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14234331250190735
    2. '<|end|>' → logprob: -2.267343282699585
    3. '[:]' → logprob: -4.517343521118164
    4. '+' → logprob: -5.142343521118164
    5. '[p' → logprob: -5.767343521118164
    6. '```' → logprob: -6.142343521118164
    7. '[np' → logprob: -6.392343521118164
    8. ' ' → logprob: -6.392343521118164
    9. '<|end|>' → logprob: -7.892343521118164
    10. '[N' → logprob: -8.267343521118164

Token 102: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00025406808708794415
    2. 'N' → logprob: -8.375253677368164
    3. ' p' → logprob: -11.125253677368164
    4. ']' → logprob: -13.500253677368164
    5. '+' → logprob: -14.000253677368164
    6. '(p' → logprob: -14.250253677368164
    7. '(' → logprob: -14.250253677368164
    8. ')' → logprob: -14.375253677368164
    9. '1' → logprob: -14.500253677368164
    10. 'A' → logprob: -14.750253677368164

Token 103: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25867435336112976
    2. ']' → logprob: -1.5086743831634521
    3. ']+=' → logprob: -5.758674144744873
    4. ' +' → logprob: -6.133674144744873
    5. ']+' → logprob: -7.508674144744873
    6. '+=' → logprob: -7.633674144744873
    7. ' ]' → logprob: -9.008674621582031
    8. '+]' → logprob: -9.758674621582031
    9. '-' → logprob: -10.258674621582031
    10. '=' → logprob: -10.508674621582031

Token 104: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7207426428794861
    2. '+=' → logprob: -0.8457426428794861
    3. ' +=' → logprob: -2.845742702484131
    4. ' =' → logprob: -4.095742702484131
    5. '+' → logprob: -4.720742702484131
    6. ' +' → logprob: -8.095742225646973
    7. '[' → logprob: -8.970742225646973
    8. ']+=' → logprob: -9.595742225646973
    9. '=np' → logprob: -9.720742225646973
    10. ' ' → logprob: -9.970742225646973

Token 105: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015149809187278152
    2. ' A' → logprob: -6.501514911651611
    3. 'B' → logprob: -11.87651538848877
    4. '   ' → logprob: -13.37651538848877
    5. '1' → logprob: -13.62651538848877
    6. '	A' → logprob: -13.87651538848877
    7. ' ' → logprob: -14.25151538848877
    8. '  ' → logprob: -15.00151538848877
    9. 'a' → logprob: -16.251514434814453
    10. '10' → logprob: -16.376514434814453

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'answer' (ID: 17021)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026307733729481697
    2. '=' → logprob: -3.6513078212738037
    3. '[:]' → logprob: -12.776308059692383
    4. ' =
' → logprob: -14.151308059692383
    5. '_' → logprob: -14.276308059692383
    6. ' ' → logprob: -14.526308059692383
    7. '=np' → logprob: -14.651308059692383
    8. ')' → logprob: -14.901308059692383
    9. ' +=' → logprob: -15.026308059692383
    10. 's' → logprob: -15.026308059692383

Token 109: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5786738395690918
    2. ' dp' → logprob: -0.8286738395690918
    3. ' min' → logprob: -7.078673839569092
    4. 'min' → logprob: -7.453673839569092
    5. 'np' → logprob: -7.703673839569092
    6. ' np' → logprob: -8.07867431640625
    7. 'int' → logprob: -8.20367431640625
    8. ' int' → logprob: -8.45367431640625
    9. ' ' → logprob: -10.70367431640625
    10. '(dp' → logprob: -10.82867431640625

Token 110: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.01510658860206604
    2. '[min' → logprob: -5.640106678009033
    3. '.max' → logprob: -5.765106678009033
    4. '.' → logprob: -6.140106678009033
    5. '[' → logprob: -6.515106678009033
    6. '<|end|>' → logprob: -6.515106678009033
    7. '.argmax' → logprob: -7.015106678009033
    8. 'min' → logprob: -7.390106678009033
    9. '[np' → logprob: -7.515106678009033
    10. '.tolist' → logprob: -7.640106678009033

Token 111: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.500041961669922
    3. '()]' → logprob: -12.250041961669922
    4. '()`' → logprob: -12.750041961669922
    5. '()
' → logprob: -13.625041961669922
    6. '()+' → logprob: -13.625041961669922
    7. ' ()' → logprob: -14.000041961669922
    8. '())' → logprob: -14.250041961669922
    9. '()

' → logprob: -14.750041961669922
    10. '()</' → logprob: -15.250041961669922

Token 112: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4818289279937744
    2. '<|end|>' → logprob: -1.3568289279937744
    3. '\n' → logprob: -2.2318289279937744
    4. '```' → logprob: -5.231828689575195
    5. '
' → logprob: -5.356828689575195
    6. '\' → logprob: -5.981828689575195
    7. ' ' → logprob: -6.356828689575195
    8. '#' → logprob: -6.981828689575195
    9. '+' → logprob: -7.231828689575195
    10. '<|end|>' → logprob: -7.856828689575195

Token 113: '(answer' (ID: 78433)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760348439216614
    2. '(answer' → logprob: -0.8260348439216614
    3. '()' → logprob: -9.826034545898438
    4. ' (' → logprob: -10.951034545898438
    5. '(ans' → logprob: -11.826034545898438
    6. '('' → logprob: -12.076034545898438
    7. '("("' → logprob: -12.951034545898438
    8. '(
' → logprob: -13.701034545898438
    9. '(`' → logprob: -13.826034545898438
    10. 'answer' → logprob: -13.826034545898438

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.50000286102295
    3. ')
' → logprob: -14.12500286102295
    4. '))' → logprob: -14.75000286102295
    5. ')`' → logprob: -15.75000286102295
    6. '`)' → logprob: -16.625003814697266
    7. '```' → logprob: -17.250003814697266
    8. '()' → logprob: -17.500003814697266
    9. '）' → logprob: -17.750003814697266
    10. '(' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 38.39%
Précision (top 10): 74.11%
================================================================================
