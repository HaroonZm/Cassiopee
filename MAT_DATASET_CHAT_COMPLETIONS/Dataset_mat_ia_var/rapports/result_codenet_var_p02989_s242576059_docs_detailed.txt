================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_median_difference():
    """
    Lit un entier n et une liste d'entiers d depuis l'entrée utilisateur,
    trie la liste, puis calcule et affiche la différence entre les deux médianes.
    
    Si n est pair, la différence correspondra à d[n//2] - d[(n-1)//2].
    Si n est impair, les deux indices sont identiques, donc la différence sera 0.
    """
    # Lecture de la taille de la liste
    n = int(input())
    # Lecture des éléments de la liste, en les convertissant en entiers
    d = list(map(int, input().split()))
    # Tri de la liste pour faciliter la recherche des médianes
    d.sort()
    # Calcule de la différence entre la médiane haute et la médiane basse
    # Pour un tableau trié, d[n//2] est la médiane "haute", d[(n-1)//2] est la médiane "basse"
    result = d[n // 2] - d[(n - 1) // 2]
    # Affichage du résultat
    print(result)

# Appel de la fonction principale
calculate_median_difference()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_m' (ID: 1285)
  → Token d'amorce (pas de prédiction)

Token 3: 'edian' (ID: 56611)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.35434776544570923
    2. 'e' → logprob: -1.6043477058410645
    3. 'a' → logprob: -2.8543477058410645
    4. '(a' → logprob: -4.3543477058410645
    5. '_' → logprob: -5.1043477058410645
    6. 'ultiply' → logprob: -5.6043477058410645
    7. '_total' → logprob: -5.8543477058410645
    8. '_sum' → logprob: -6.4793477058410645
    9. 'etrics' → logprob: -6.4793477058410645
    10. 'ultip' → logprob: -6.6043477058410645

Token 4: '_difference' (ID: 123771)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5805484056472778
    2. '(' → logprob: -0.8305484056472778
    3. '_:' → logprob: -6.705548286437988
    4. '```' → logprob: -6.705548286437988
    5. '(_' → logprob: -6.830548286437988
    6. '(_:' → logprob: -7.830548286437988
    7. '_(' → logprob: -8.580548286437988
    8. 's' → logprob: -9.580548286437988
    9. '(_)' → logprob: -9.705548286437988
    10. '_parent' → logprob: -10.455548286437988

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02497534640133381
    2. '_' → logprob: -3.899975299835205
    3. '(_' → logprob: -6.399975299835205
    4. '```' → logprob: -6.649975299835205
    5. '(_:' → logprob: -7.024975299835205
    6. '_:' → logprob: -9.024975776672363
    7. '(:' → logprob: -9.274975776672363
    8. '('' → logprob: -10.149975776672363
    9. ''' → logprob: -10.399975776672363
    10. '(_)' → logprob: -10.524975776672363

Token 6: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3062330484390259
    2. '\' → logprob: -1.4312330484390259
    3. ':' → logprob: -1.8062330484390259
    4. '\n' → logprob: -1.9312330484390259
    5. '   ' → logprob: -2.3062329292297363
    6. '(' → logprob: -3.0562329292297363
    7. '    
' → logprob: -5.181232929229736
    8. ''' → logprob: -5.431232929229736
    9. '`' → logprob: -5.931232929229736
    10. '(
' → logprob: -6.056232929229736

Token 7: ' """
' (ID: 7037)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9270164370536804
    2. '\n' → logprob: -1.6770164966583252
    3. ' ' → logprob: -2.052016496658325
    4. '```' → logprob: -2.552016496658325
    5. '    ' → logprob: -3.052016496658325
    6. '   ' → logprob: -3.302016496658325
    7. ' 
' → logprob: -3.802016496658325
    8. 'n' → logprob: -3.927016496658325
    9. '_' → logprob: -4.177016258239746
    10. 'a' → logprob: -4.302016258239746

Token 8: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.4888647496700287
    2. '"""' → logprob: -1.363864779472351
    3. 'Calcul' → logprob: -2.9888646602630615
    4. '   ' → logprob: -3.3638646602630615
    5. ' Calculate' → logprob: -4.363864898681641
    6. 'Returns' → logprob: -4.488864898681641
    7. ' Calculates' → logprob: -4.863864898681641
    8. ' """' → logprob: -5.488864898681641
    9. 'Return' → logprob: -6.238864898681641
    10. ''''' → logprob: -6.613864898681641

Token 9: ' Lit' (ID: 45595)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.07640942931175232
    2. 'Calcul' → logprob: -3.451409339904785
    3. 'Returns' → logprob: -3.826409339904785
    4. 'Return' → logprob: -4.826409339904785
    5. '"""' → logprob: -5.076409339904785
    6. '   ' → logprob: -6.076409339904785
    7. 'Find' → logprob: -6.701409339904785
    8. ' Calculate' → logprob: -7.076409339904785
    9. 'Compute' → logprob: -7.576409339904785
    10. ' Calculates' → logprob: -7.951409339904785

Token 10: ' un' (ID: 537)
  Prédit: 'tle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tle' → logprob: -0.05358237773180008
    2. 'er' → logprob: -3.4285824298858643
    3. '   ' → logprob: -4.803582191467285
    4. 't' → logprob: -5.553582191467285
    5. 'eral' → logprob: -6.428582191467285
    6. 'e' → logprob: -6.928582191467285
    7. 'ter' → logprob: -7.178582191467285
    8. 'h' → logprob: -7.303582191467285
    9. 'ele' → logprob: -7.678582191467285
    10. '  ' → logprob: -7.803582191467285

Token 11: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06903320550918579
    2. 'es' → logprob: -3.444033145904541
    3. ' ' → logprob: -4.194033145904541
    4. ' e' → logprob: -5.194033145904541
    5. 'a' → logprob: -5.444033145904541
    6. 's' → logprob: -5.694033145904541
    7. ' espace' → logprob: -5.819033145904541
    8. 'é' → logprob: -7.069033145904541
    9. ' fichier' → logprob: -7.819033145904541
    10. ' a' → logprob: -7.944033145904541

Token 12: ' n' (ID: 297)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8145892024040222
    2. 's' → logprob: -1.189589262008667
    3. ' ' → logprob: -2.439589262008667
    4. ' \' → logprob: -3.064589262008667
    5. '\n' → logprob: -4.064589023590088
    6. '\' → logprob: -4.064589023590088
    7. ' )' → logprob: -4.564589023590088
    8. ')' → logprob: -4.564589023590088
    9. '(s' → logprob: -5.064589023590088
    10. '```' → logprob: -5.314589023590088

Token 13: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07257179915904999
    2. ',' → logprob: -3.4475717544555664
    3. ' ' → logprob: -4.697571754455566
    4. 'n' → logprob: -4.822571754455566
    5. ')' → logprob: -5.447571754455566
    6. '.' → logprob: -5.447571754455566
    7. '\n' → logprob: -5.572571754455566
    8. ' ,' → logprob: -6.822571754455566
    9. '
' → logprob: -6.947571754455566
    10. '  ' → logprob: -6.947571754455566

Token 14: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.7998476028442383
    2. 'une' → logprob: -1.7998476028442383
    3. ' une' → logprob: -2.0498476028442383
    4. 'n' → logprob: -2.0498476028442383
    5. ' les' → logprob: -2.4248476028442383
    6. ' n' → logprob: -2.9248476028442383
    7. ' des' → logprob: -3.1748476028442383
    8. 'ens' → logprob: -3.2998476028442383
    9. '   ' → logprob: -3.5498476028442383
    10. 'les' → logprob: -3.6748476028442383

Token 15: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.44758403301239014
    2. ' ' → logprob: -1.5725840330123901
    3. 'liste' → logprob: -2.6975841522216797
    4. 's' → logprob: -3.5725841522216797
    5. ' suite' → logprob: -3.9475841522216797
    6. ' série' → logprob: -4.69758415222168
    7. 'sé' → logprob: -4.82258415222168
    8. 'suite' → logprob: -4.94758415222168
    9. ' sé' → logprob: -5.19758415222168
    10. ' sequence' → logprob: -6.07258415222168

Token 16: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2142896056175232
    2. ' ' → logprob: -2.464289665222168
    3. ' des' → logprob: -3.089289665222168
    4. ' d' → logprob: -3.339289665222168
    5. 'de' → logprob: -5.214289665222168
    6. ' of' → logprob: -5.214289665222168
    7. '_' → logprob: -5.464289665222168
    8. '[' → logprob: -6.339289665222168
    9. '   ' → logprob: -6.589289665222168
    10. ')' → logprob: -7.089289665222168

Token 17: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.04992019385099411
    2. 'e' → logprob: -3.799920082092285
    3. ' ent' → logprob: -4.299920082092285
    4. ''' → logprob: -4.924920082092285
    5. 'ent' → logprob: -6.549920082092285
    6. '’ent' → logprob: -6.674920082092285
    7. 'n' → logprob: -7.549920082092285
    8. ' n' → logprob: -7.674920082092285
    9. ''e' → logprob: -7.799920082092285
    10. ' entier' → logprob: -7.799920082092285

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002549027558416128
    2. 'i' → logprob: -6.002549171447754
    3. 'ier' → logprob: -10.502549171447754
    4. 'ières' → logprob: -10.627549171447754
    5. '_i' → logprob: -11.627549171447754
    6. '```' → logprob: -12.002549171447754
    7. 'ié' → logprob: -12.377549171447754
    8. '   ' → logprob: -14.252549171447754
    9. 'I' → logprob: -15.127549171447754
    10. '_' → logprob: -15.252549171447754

Token 19: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14019930362701416
    2. '\n' → logprob: -2.8901991844177246
    3. ',' → logprob: -3.2651991844177246
    4. '.' → logprob: -5.140199184417725
    5. ' ' → logprob: -5.265199184417725
    6. 'n' → logprob: -5.390199184417725
    7. '\' → logprob: -5.515199184417725
    8. ',
' → logprob: -5.765199184417725
    9. '
' → logprob: -6.140199184417725
    10. '    
' → logprob: -6.265199184417725

Token 20: ' depuis' (ID: 16277)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15872928500175476
    2. ''' → logprob: -2.533729314804077
    3. 'es' → logprob: -3.783729314804077
    4. ''une' → logprob: -4.908729076385498
    5. 'u' → logprob: -5.283729076385498
    6. ''é' → logprob: -5.408729076385498
    7. ''ent' → logprob: -5.408729076385498
    8. ''e' → logprob: -5.783729076385498
    9. ''esp' → logprob: -6.033729076385498
    10. ''éc' → logprob: -6.033729076385498

Token 21: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23605448007583618
    2. ' stdin' → logprob: -2.6110544204711914
    3. 'l' → logprob: -2.8610544204711914
    4. 'input' → logprob: -3.6110544204711914
    5. ' l' → logprob: -3.7360544204711914
    6. ' la' → logprob: -4.861054420471191
    7. 'stdin' → logprob: -4.861054420471191
    8. ' standard' → logprob: -5.736054420471191
    9. '```' → logprob: -5.986054420471191
    10. 'la' → logprob: -6.486054420471191

Token 22: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06154104694724083
    2. ''entrée' → logprob: -3.1865410804748535
    3. 'e' → logprob: -4.6865410804748535
    4. ''' → logprob: -5.0615410804748535
    5. 'entrée' → logprob: -7.4365410804748535
    6. 'input' → logprob: -7.8115410804748535
    7. 'i' → logprob: -8.061540603637695
    8. ''a' → logprob: -8.061540603637695
    9. ''''' → logprob: -8.436540603637695
    10. ''utilisateur' → logprob: -8.436540603637695

Token 23: ' utilisateur' (ID: 115595)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4329615831375122
    2. '   ' → logprob: -1.3079615831375122
    3. ',' → logprob: -3.6829614639282227
    4. '.' → logprob: -3.9329614639282227
    5. '\' → logprob: -4.557961463928223
    6. '    
' → logprob: -5.057961463928223
    7. 'n' → logprob: -5.057961463928223
    8. '```' → logprob: -6.432961463928223
    9. 'e' → logprob: -6.557961463928223
    10. ' ' → logprob: -6.807961463928223

Token 24: ',
' (ID: 412)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5741576552391052
    2. '   ' → logprob: -1.07415771484375
    3. '    
' → logprob: -3.19915771484375
    4. '\' → logprob: -3.82415771484375
    5. '
' → logprob: -4.19915771484375
    6. 'n' → logprob: -4.94915771484375
    7. '   
' → logprob: -6.69915771484375
    8. '\r' → logprob: -6.69915771484375
    9. '```' → logprob: -6.94915771484375
    10. '  
' → logprob: -7.07415771484375

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018708890303969383
    2. '    ' → logprob: -5.7687087059021
    3. '\n' → logprob: -5.8937087059021
    4. '    
' → logprob: -6.0187087059021
    5. ' 
' → logprob: -6.0187087059021
    6. ',' → logprob: -6.5187087059021
    7. ' ' → logprob: -6.5187087059021
    8. 'n' → logprob: -7.2687087059021
    9. '   
' → logprob: -7.3937087059021
    10. ' ' → logprob: -7.5187087059021

Token 26: ' trie' (ID: 139428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03750816360116005
    2. ' puis' → logprob: -3.787508249282837
    3. ' et' → logprob: -5.037508010864258
    4. 'et' → logprob: -6.662508010864258
    5. '    ' → logprob: -6.662508010864258
    6. '\n' → logprob: -7.287508010864258
    7. ' retourne' → logprob: -7.287508010864258
    8. '    
' → logprob: -7.537508010864258
    9. ' ' → logprob: -7.537508010864258
    10. ',' → logprob: -7.787508010864258

Token 27: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2247898578643799
    2. '_' → logprob: -1.4747898578643799
    3. ' ' → logprob: -1.9747898578643799
    4. '(' → logprob: -1.9747898578643799
    5. ' d' → logprob: -2.22478985786438
    6. 'd' → logprob: -3.59978985786438
    7. ' les' → logprob: -3.84978985786438
    8. ' l' → logprob: -4.974789619445801
    9. ' the' → logprob: -5.349789619445801
    10. ' (' → logprob: -5.349789619445801

Token 28: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.12131073325872421
    2. ' ' → logprob: -2.2463107109069824
    3. ' list' → logprob: -5.621310710906982
    4. 'liste' → logprob: -6.121310710906982
    5. 's' → logprob: -6.871310710906982
    6. ' l' → logprob: -7.621310710906982
    7. ' copie' → logprob: -7.871310710906982
    8. 'l' → logprob: -9.49631118774414
    9. '_' → logprob: -9.62131118774414
    10. ' la' → logprob: -9.74631118774414

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06473083794116974
    2. '   ' → logprob: -3.6897308826446533
    3. ' ,' → logprob: -3.6897308826446533
    4. ' et' → logprob: -4.939730644226074
    5. ' ' → logprob: -6.689730644226074
    6. ' en' → logprob: -6.939730644226074
    7. ' `' → logprob: -7.314730644226074
    8. '    
' → logprob: -7.439730644226074
    9. ' puis' → logprob: -7.439730644226074
    10. '    ' → logprob: -7.939730644226074

Token 30: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.3689488470554352
    2. '   ' → logprob: -1.8689488172531128
    3. ' et' → logprob: -2.3689489364624023
    4. ' calc' → logprob: -3.2439489364624023
    5. 'cal' → logprob: -5.118948936462402
    6. 'et' → logprob: -5.493948936462402
    7. ' calculates' → logprob: -6.243948936462402
    8. ' calculate' → logprob: -6.368948936462402
    9. 'p' → logprob: -6.618948936462402
    10. ',' → logprob: -6.743948936462402

Token 31: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.16051828861236572
    2. ' retourne' → logprob: -2.535518169403076
    3. ' calcul' → logprob: -4.035518169403076
    4. 'cal' → logprob: -4.410518169403076
    5. ' affiche' → logprob: -4.785518169403076
    6. ' return' → logprob: -5.160518169403076
    7. 'calcul' → logprob: -5.410518169403076
    8. ' calculate' → logprob: -5.410518169403076
    9. ' ren' → logprob: -6.160518169403076
    10. 'calc' → logprob: -6.285518169403076

Token 32: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0002646735229063779
    2. 'ulé' → logprob: -9.625265121459961
    3. '   ' → logprob: -9.875265121459961
    4. '```' → logprob: -9.875265121459961
    5. '\' → logprob: -10.625265121459961
    6. 'ul' → logprob: -10.875265121459961
    7. '       ' → logprob: -11.500265121459961
    8. 'ú' → logprob: -12.000265121459961
    9. 'уле' → logprob: -12.625265121459961
    10. '**' → logprob: -12.625265121459961

Token 33: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.639121413230896
    2. '_' → logprob: -1.889121413230896
    3. ' et' → logprob: -1.889121413230896
    4. ' l' → logprob: -2.6391215324401855
    5. ' ' → logprob: -3.2641215324401855
    6. ' la' → logprob: -4.2641215324401855
    7. ' _' → logprob: -4.8891215324401855
    8. '<|end|>' → logprob: -4.8891215324401855
    9. '   ' → logprob: -5.1391215324401855
    10. ',' → logprob: -5.6391215324401855

Token 34: ' affiche' (ID: 127479)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.4197816252708435
    2. ' ren' → logprob: -1.7947816848754883
    3. ' affiche' → logprob: -1.9197816848754883
    4. ' return' → logprob: -4.294781684875488
    5. 'return' → logprob: -5.669781684875488
    6. ' imprime' → logprob: -5.794781684875488
    7. 'ren' → logprob: -5.919781684875488
    8. 'aff' → logprob: -6.044781684875488
    9. ' print' → logprob: -7.044781684875488
    10. 'ret' → logprob: -7.169781684875488

Token 35: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5465853810310364
    2. ' ' → logprob: -1.2965853214263916
    3. ' l' → logprob: -2.0465853214263916
    4. ' ' → logprob: -5.671585559844971
    5. ' le' → logprob: -5.671585559844971
    6. ' the' → logprob: -6.046585559844971
    7. 'difference' → logprob: -6.296585559844971
    8. 'l' → logprob: -6.546585559844971
    9. 's' → logprob: -6.921585559844971
    10. ' difference' → logprob: -7.296585559844971

Token 36: ' différence' (ID: 79196)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38454970717430115
    2. ' différence' → logprob: -1.2595497369766235
    3. ' difference' → logprob: -4.134549617767334
    4. 's' → logprob: -4.384549617767334
    5. ' diff' → logprob: -6.509549617767334
    6. 'difference' → logprob: -6.759549617767334
    7. 'diff' → logprob: -7.259549617767334
    8. ' d' → logprob: -7.634549617767334
    9. '  ' → logprob: -7.759549617767334
    10. ' plus' → logprob: -8.009550094604492

Token 37: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.6564499139785767
    2. ' ' → logprob: -1.6564499139785767
    3. ' between' → logprob: -1.9064499139785767
    4. '<|end|>' → logprob: -2.281449794769287
    5. '  ' → logprob: -5.031449794769287
    6. 's' → logprob: -5.281449794769287
    7. '_' → logprob: -5.281449794769287
    8. 'entre' → logprob: -5.281449794769287
    9. '   ' → logprob: -5.656449794769287
    10. ' \' → logprob: -6.656449794769287

Token 38: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5203183889389038
    2. 'la' → logprob: -2.2703185081481934
    3. ' les' → logprob: -2.2703185081481934
    4. ' le' → logprob: -2.8953185081481934
    5. 'les' → logprob: -3.0203185081481934
    6. ' median' → logprob: -3.3953185081481934
    7. 'le' → logprob: -4.020318508148193
    8. 'l' → logprob: -4.270318508148193
    9. ' l' → logprob: -4.770318508148193
    10. 'median' → logprob: -5.145318508148193

Token 39: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -1.0959607362747192
    2. 'de' → logprob: -1.2209607362747192
    3. 'm' → logprob: -1.9709607362747192
    4. ' median' → logprob: -2.4709606170654297
    5. ' ' → logprob: -3.4709606170654297
    6. ' méd' → logprob: -3.4709606170654297
    7. '2' → logprob: -3.8459606170654297
    8. ' m' → logprob: -4.22096061706543
    9. ' two' → logprob: -4.22096061706543
    10. 'median' → logprob: -4.59596061706543

Token 40: ' méd' (ID: 13387)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1382696628570557
    2. ' median' → logprob: -1.2632696628570557
    3. ' méd' → logprob: -1.3882696628570557
    4. ' m' → logprob: -3.3882696628570557
    5. '_' → logprob: -3.7632696628570557
    6. ' ' → logprob: -4.013269424438477
    7. ' indices' → logprob: -4.388269424438477
    8. 'median' → logprob: -4.513269424438477
    9. ' éléments' → logprob: -5.138269424438477
    10. '   ' → logprob: -5.638269424438477

Token 41: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.15728864073753357
    2. 'i' → logprob: -2.1572885513305664
    3. 'ians' → logprob: -4.657288551330566
    4. 'ia' → logprob: -4.782288551330566
    5. '```' → logprob: -4.907288551330566
    6. '   ' → logprob: -6.407288551330566
    7. '``' → logprob: -7.532288551330566
    8. 'iales' → logprob: -7.657288551330566
    9. 'iann' → logprob: -8.032288551330566
    10. 'a' → logprob: -8.657288551330566

Token 42: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0007325552869588137
    2. 'e' → logprob: -7.375732421875
    3. 's' → logprob: -9.375732421875
    4. '```' → logprob: -11.125732421875
    5. '``' → logprob: -13.875732421875
    6. '"""

' → logprob: -14.500732421875
    7. '"""
' → logprob: -14.750732421875
    8. '"""' → logprob: -14.875732421875
    9. ')' → logprob: -14.875732421875
    10. '</' → logprob: -15.125732421875

Token 43: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6862764954566956
    2. '\n' → logprob: -1.3112764358520508
    3. '   ' → logprob: -2.436276435852051
    4. '.' → logprob: -3.061276435852051
    5. ':' → logprob: -3.811276435852051
    6. ' ' → logprob: -4.436276435852051
    7. ' \' → logprob: -4.561276435852051
    8. '  
' → logprob: -4.936276435852051
    9. '    
' → logprob: -5.311276435852051
    10. '
' → logprob: -5.561276435852051

Token 44: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05210958048701286
    2. '\n' → logprob: -4.677109718322754
    3. '"""
' → logprob: -4.802109718322754
    4. '"""' → logprob: -4.802109718322754
    5. '"' → logprob: -5.052109718322754
    6. '\' → logprob: -5.302109718322754
    7. '
' → logprob: -5.427109718322754
    8. 'n' → logprob: -5.927109718322754
    9. '    
' → logprob: -6.177109718322754
    10. '```' → logprob: -6.427109718322754

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10037920624017715
    2. '"""' → logprob: -2.600379228591919
    3. '```' → logprob: -4.85037899017334
    4. '\n' → logprob: -5.85037899017334
    5. ' """' → logprob: -6.35037899017334
    6. ')' → logprob: -6.85037899017334
    7. ' ' → logprob: -6.85037899017334
    8. '""' → logprob: -7.10037899017334
    9. '    
' → logprob: -7.10037899017334
    10. ' 
' → logprob: -7.10037899017334

Token 46: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019913148134946823
    2. '```' → logprob: -5.019913196563721
    3. '"""' → logprob: -5.144913196563721
    4. '\n' → logprob: -5.644913196563721
    5. 'n' → logprob: -6.519913196563721
    6. ' ' → logprob: -7.644913196563721
    7. '    ' → logprob: -8.019912719726562
    8. ' """' → logprob: -8.019912719726562
    9. '    
' → logprob: -8.519912719726562
    10. 'def' → logprob: -9.019912719726562

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.021361514925956726
    2. ' l' → logprob: -4.896361351013184
    3. ' ' → logprob: -5.396361351013184
    4. ' la' → logprob: -5.646361351013184
    5. 'n' → logprob: -5.771361351013184
    6. ' len' → logprob: -6.646361351013184
    7. ' le' → logprob: -7.146361351013184
    8. ' ' → logprob: -8.646361351013184
    9. 'l' → logprob: -9.021361351013184
    10. ' `' → logprob: -11.271361351013184

Token 48: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5984992980957031
    2. ' >' → logprob: -1.8484992980957031
    3. ' <' → logprob: -2.223499298095703
    4. ' ==' → logprob: -2.473499298095703
    5. ' <=' → logprob: -2.473499298095703
    6. ' ' → logprob: -5.098499298095703
    7. ' =' → logprob: -6.098499298095703
    8. ' est' → logprob: -6.598499298095703
    9. '>' → logprob: -6.723499298095703
    10. ' %' → logprob: -6.848499298095703

Token 49: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.1802506446838379
    2. ' impair' → logprob: -1.930250644683838
    3. 'pair' → logprob: -4.055250644683838
    4. ' paire' → logprob: -6.805250644683838
    5. ' imp' → logprob: -7.930250644683838
    6. '_pair' → logprob: -8.68025016784668
    7. ' pairs' → logprob: -8.93025016784668
    8. ' inférieur' → logprob: -9.18025016784668
    9. ' supérieur' → logprob: -9.30525016784668
    10. ' odd' → logprob: -9.43025016784668

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006062583066523075
    2. ' ,' → logprob: -5.1310625076293945
    3. 'e' → logprob: -9.756062507629395
    4. ':' → logprob: -10.506062507629395
    5. ' :' → logprob: -10.756062507629395
    6. ' ' → logprob: -11.506062507629395
    7. '   ' → logprob: -11.756062507629395
    8. 's' → logprob: -13.006062507629395
    9. ',
' → logprob: -13.131062507629395
    10. ' et' → logprob: -13.881062507629395

Token 51: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4580010771751404
    2. ' la' → logprob: -1.2080011367797852
    3. ' ' → logprob: -3.958001136779785
    4. ' l' → logprob: -4.333001136779785
    5. '<|end|>' → logprob: -4.833001136779785
    6. ' ' → logprob: -5.083001136779785
    7. '   ' → logprob: -5.833001136779785
    8. '    ' → logprob: -5.833001136779785
    9. 'on' → logprob: -6.208001136779785
    10. ' le' → logprob: -6.333001136779785

Token 52: ' différence' (ID: 79196)
  Prédit: ' méd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méd' → logprob: -0.601072371006012
    2. ' liste' → logprob: -2.101072311401367
    3. ' différence' → logprob: -2.226072311401367
    4. 'm' → logprob: -3.476072311401367
    5. ' median' → logprob: -3.476072311401367
    6. 'mé' → logprob: -3.851072311401367
    7. ' moitié' → logprob: -4.351072311401367
    8. ' fonction' → logprob: -4.351072311401367
    9. ' médi' → logprob: -4.601072311401367
    10. 's' → logprob: -4.851072311401367

Token 53: ' correspond' (ID: 11095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17235392332077026
    2. ' entre' → logprob: -2.172353982925415
    3. '<|end|>' → logprob: -3.297353982925415
    4. ' s' → logprob: -6.297353744506836
    5. ' est' → logprob: -6.672353744506836
    6. '  ' → logprob: -6.672353744506836
    7. ' between' → logprob: -6.797353744506836
    8. 's' → logprob: -7.672353744506836
    9. ' des' → logprob: -7.797353744506836
    10. '<|end|>' → logprob: -8.297353744506836

Token 54: 'ra' (ID: 614)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22076420485973358
    2. ' au' → logprob: -1.72076416015625
    3. ' ' → logprob: -5.22076416015625
    4. ' to' → logprob: -5.47076416015625
    5. ' a' → logprob: -5.72076416015625
    6. 'au' → logprob: -6.34576416015625
    7. ' aux' → logprob: -6.47076416015625
    8. '  ' → logprob: -6.59576416015625
    9. 'à' → logprob: -7.97076416015625
    10. 's' → logprob: -8.47076416015625

Token 55: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.24412542581558228
    2. ' au' → logprob: -1.6191253662109375
    3. ' aux' → logprob: -4.8691253662109375
    4. ' ' → logprob: -5.2441253662109375
    5. 'à' → logprob: -6.1191253662109375
    6. 'au' → logprob: -6.6191253662109375
    7. ' a' → logprob: -7.7441253662109375
    8. '  ' → logprob: -7.8691253662109375
    9. ' to' → logprob: -7.9941253662109375
    10. '   ' → logprob: -8.869125366210938

Token 56: ' d' (ID: 272)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.30443036556243896
    2. ' ' → logprob: -1.804430365562439
    3. ' l' → logprob: -3.3044304847717285
    4. '0' → logprob: -3.8044304847717285
    5. ' (' → logprob: -4.5544304847717285
    6. 'la' → logprob: -4.5544304847717285
    7. ' half' → logprob: -6.0544304847717285
    8. '   ' → logprob: -6.3669304847717285
    9. '1' → logprob: -6.4919304847717285
    10. ' ' → logprob: -6.7419304847717285

Token 57: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31712374091148376
    2. '[len' → logprob: -1.6921237707138062
    3. '[-' → logprob: -4.192123889923096
    4. 'e' → logprob: -4.317123889923096
    5. '[e' → logprob: -4.442123889923096
    6. '[n' → logprob: -4.567123889923096
    7. '[int' → logprob: -5.067123889923096
    8. '   ' → logprob: -5.942123889923096
    9. ''' → logprob: -5.942123889923096
    10. '[i' → logprob: -6.067123889923096

Token 58: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4774209260940552
    2. ' //' → logprob: -0.9774209260940552
    3. ' ' → logprob: -5.977420806884766
    4. ']' → logprob: -7.977420806884766
    5. '   ' → logprob: -8.602420806884766
    6. '/' → logprob: -8.977420806884766
    7. '2' → logprob: -10.352420806884766
    8. '  ' → logprob: -10.852420806884766
    9. ' /' → logprob: -11.102420806884766
    10. 's' → logprob: -11.602420806884766

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002812005812302232
    2. ' ' → logprob: -5.877811908721924
    3. '4' → logprob: -13.377812385559082
    4. '   ' → logprob: -13.627812385559082
    5. '```' → logprob: -14.315312385559082
    6. '  ' → logprob: -14.377812385559082
    7. '۲' → logprob: -14.690312385559082
    8. ' ' → logprob: -14.815312385559082
    9. '1' → logprob: -14.940312385559082
    10. '22' → logprob: -15.127812385559082

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08233122527599335
    2. ' ]' → logprob: -2.7073311805725098
    3. ' -' → logprob: -5.20733118057251
    4. '-' → logprob: -5.20733118057251
    5. ' ' → logprob: -7.08233118057251
    6. ']-' → logprob: -8.582331657409668
    7. '1' → logprob: -10.082331657409668
    8. ' :]' → logprob: -10.082331657409668
    9. '   ' → logprob: -10.332331657409668
    10. '']' → logprob: -10.457331657409668

Token 61: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07702836394309998
    2. '-' → logprob: -2.827028274536133
    3. ' ' → logprob: -4.577028274536133
    4. '[' → logprob: -6.202028274536133
    5. '   ' → logprob: -7.202028274536133
    6. ']' → logprob: -7.702028274536133
    7. '```' → logprob: -8.077028274536133
    8. '`' → logprob: -8.827028274536133
    9. ''' → logprob: -9.264528274536133
    10. '  ' → logprob: -9.327028274536133

Token 62: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10148537158966064
    2. 'd' → logprob: -2.351485252380371
    3. ' ' → logprob: -6.976485252380371
    4. ' ' → logprob: -8.226485252380371
    5. '  ' → logprob: -11.351485252380371
    6. '1' → logprob: -11.601485252380371
    7. ' ' → logprob: -11.726485252380371
    8. 's' → logprob: -12.101485252380371
    9. 'n' → logprob: -12.413985252380371
    10. '	d' → logprob: -12.601485252380371

Token 63: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5849430561065674
    2. '[n' → logprob: -0.9599430561065674
    3. '[(' → logprob: -2.8349430561065674
    4. '//' → logprob: -7.584942817687988
    5. '[len' → logprob: -9.084942817687988
    6. '[-' → logprob: -9.209942817687988
    7. '[
' → logprob: -9.209942817687988
    8. '[int' → logprob: -9.334942817687988
    9. ' [' → logprob: -9.709942817687988
    10. '```' → logprob: -10.209942817687988

Token 64: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018432848155498505
    2. ' n' → logprob: -4.0184326171875
    3. '(n' → logprob: -8.5184326171875
    4. ' (' → logprob: -10.1434326171875
    5. ')n' → logprob: -10.3934326171875
    6. ')' → logprob: -12.8934326171875
    7. ' ' → logprob: -12.8934326171875
    8. '   ' → logprob: -13.0184326171875
    9. '-' → logprob: -13.5184326171875
    10. '(' → logprob: -13.7684326171875

Token 65: '-' (ID: 12)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3848043978214264
    2. ' //' → logprob: -1.259804368019104
    3. '-' → logprob: -4.2598042488098145
    4. ')//' → logprob: -4.7598042488098145
    5. ' -' → logprob: -5.1348042488098145
    6. ' ' → logprob: -6.0098042488098145
    7. ')' → logprob: -6.6348042488098145
    8. '2' → logprob: -7.0098042488098145
    9. '1' → logprob: -7.1348042488098145
    10. '   ' → logprob: -7.5098042488098145

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008033146150410175
    2. '2' → logprob: -7.375803470611572
    3. ' ' → logprob: -8.750802993774414
    4. '//' → logprob: -11.500802993774414
    5. '/' → logprob: -12.750802993774414
    6. '   ' → logprob: -13.125802993774414
    7. '```' → logprob: -13.375802993774414
    8. '`' → logprob: -14.938302993774414
    9. '
' → logprob: -15.375802993774414
    10. ')' → logprob: -15.625802993774414

Token 67: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0009364743018522859
    2. ')' → logprob: -7.000936508178711
    3. ' )' → logprob: -11.250936508178711
    4. '//' → logprob: -11.625936508178711
    5. ')#' → logprob: -13.500936508178711
    6. '){//' → logprob: -14.500936508178711
    7. '}//' → logprob: -15.125936508178711
    8. ')]' → logprob: -15.250936508178711
    9. '   ' → logprob: -15.500936508178711
    10. ')
' → logprob: -16.00093650817871

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005068036844022572
    2. ' ' → logprob: -7.62550687789917
    3. '1' → logprob: -11.125506401062012
    4. '   ' → logprob: -13.750506401062012
    5. '```' → logprob: -14.000506401062012
    6. '  ' → logprob: -14.875506401062012
    7. '    ' → logprob: -15.000506401062012
    8. '

' → logprob: -15.688006401062012
    9. '/' → logprob: -15.813006401062012
    10. ']' → logprob: -15.875506401062012

Token 69: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000386701402021572
    2. ' ]' → logprob: -8.750386238098145
    3. ')' → logprob: -9.500386238098145
    4. '   ' → logprob: -9.625386238098145
    5. ']
' → logprob: -10.625386238098145
    6. '].' → logprob: -10.875386238098145
    7. '```' → logprob: -11.250386238098145
    8. '],' → logprob: -12.125386238098145
    9. '.' → logprob: -12.375386238098145
    10. '']' → logprob: -12.750386238098145

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6555312871932983
    2. '"""' → logprob: -0.7805312871932983
    3. ' """' → logprob: -4.905531406402588
    4. '"' → logprob: -5.030531406402588
    5. '```' → logprob: -5.780531406402588
    6. '""' → logprob: -6.780531406402588
    7. '\n' → logprob: -6.905531406402588
    8. '"""
' → logprob: -6.905531406402588
    9. ' ' → logprob: -7.905531406402588
    10. ')' → logprob: -8.15553092956543

Token 71: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3657318353652954
    2. '"""' → logprob: -1.2407318353652954
    3. ' """' → logprob: -5.115731716156006
    4. '"' → logprob: -5.490731716156006
    5. '```' → logprob: -5.490731716156006
    6. '""' → logprob: -6.990731716156006
    7. '    ' → logprob: -7.490731716156006
    8. ')' → logprob: -7.990731716156006
    9. '"""
' → logprob: -8.240732192993164
    10. '\n' → logprob: -8.865732192993164

Token 72: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004789191763848066
    2. 'n' → logprob: -5.379789352416992
    3. ' ' → logprob: -8.879789352416992
    4. ' ' → logprob: -10.879789352416992
    5. '	n' → logprob: -12.504789352416992
    6. '   ' → logprob: -12.504789352416992
    7. '  ' → logprob: -13.879789352416992
    8. '    ' → logprob: -14.504789352416992
    9. '<n' → logprob: -15.129789352416992
    10. ' ‌' → logprob: -15.379789352416992

Token 73: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11914729326963425
    2. ' is' → logprob: -2.369147300720215
    3. 'est' → logprob: -4.369147300720215
    4. ' ' → logprob: -5.494147300720215
    5. 's' → logprob: -7.244147300720215
    6. '   ' → logprob: -7.744147300720215
    7. '<|end|>' → logprob: -8.119147300720215
    8. ' ' → logprob: -8.869147300720215
    9. 'is' → logprob: -8.994147300720215
    10. ' a' → logprob: -9.244147300720215

Token 74: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.14282427728176117
    2. ' imp' → logprob: -2.767824172973633
    3. 'imp' → logprob: -3.267824172973633
    4. ' pair' → logprob: -4.142824172973633
    5. 'pair' → logprob: -4.892824172973633
    6. 'im' → logprob: -5.142824172973633
    7. ' odd' → logprob: -6.892824172973633
    8. ' impar' → logprob: -7.267824172973633
    9. 'odd' → logprob: -7.392824172973633
    10. ' ' → logprob: -8.017824172973633

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06596656888723373
    2. ' ,' → logprob: -2.8159666061401367
    3. ' :' → logprob: -6.065966606140137
    4. ':' → logprob: -6.940966606140137
    5. '   ' → logprob: -7.440966606140137
    6. ' ' → logprob: -9.565966606140137
    7. '  ' → logprob: -11.065966606140137
    8. '.' → logprob: -11.815966606140137
    9. ',d' → logprob: -12.315966606140137
    10. ',:' → logprob: -13.065966606140137

Token 76: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0228484608232975
    2. '    ' → logprob: -4.147848606109619
    3. ' ' → logprob: -6.147848606109619
    4. '     ' → logprob: -6.897848606109619
    5. '  ' → logprob: -7.022848606109619
    6. '     
' → logprob: -7.397848606109619
    7. ' d' → logprob: -7.897848606109619
    8. ' '' → logprob: -8.147848129272461
    9. '   ' → logprob: -8.272848129272461
    10. ' :' → logprob: -8.397848129272461

Token 77: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13903574645519257
    2. ' d' → logprob: -3.764035701751709
    3. ' deux' → logprob: -3.764035701751709
    4. 'd' → logprob: -4.389035701751709
    5. ' méd' → logprob: -4.764035701751709
    6. '  ' → logprob: -4.764035701751709
    7. ' ' → logprob: -4.889035701751709
    8. ' n' → logprob: -5.264035701751709
    9. '_' → logprob: -5.514035701751709
    10. '   ' → logprob: -5.764035701751709

Token 78: ' indices' (ID: 30378)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3390589952468872
    2. ' méd' → logprob: -1.4640589952468872
    3. 'm' → logprob: -4.214058876037598
    4. '_m' → logprob: -4.339058876037598
    5. ' _' → logprob: -4.589058876037598
    6. ' m' → logprob: -5.339058876037598
    7. ' median' → logprob: -5.464058876037598
    8. ' ' → logprob: -5.839058876037598
    9. ' médi' → logprob: -6.964058876037598
    10. 'mé' → logprob: -7.339058876037598

Token 79: ' sont' (ID: 5242)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.5391395688056946
    2. ' sont' → logprob: -1.5391395092010498
    3. ' seront' → logprob: -3.16413950920105
    4. ' correspondant' → logprob: -3.66413950920105
    5. 'd' → logprob: -3.78913950920105
    6. ' des' → logprob: -4.039139747619629
    7. ' n' → logprob: -4.664139747619629
    8. ' ' → logprob: -4.789139747619629
    9. 's' → logprob: -4.789139747619629
    10. ' d' → logprob: -5.039139747619629

Token 80: ' ident' (ID: 3951)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5695745348930359
    2. 'd' → logprob: -2.3195745944976807
    3. ' ' → logprob: -2.3195745944976807
    4. 'n' → logprob: -2.9445745944976807
    5. ' ident' → logprob: -3.1945745944976807
    6. ' d' → logprob: -3.4445745944976807
    7. ' identical' → logprob: -3.6945745944976807
    8. ' ég' → logprob: -3.6945745944976807
    9. ' (' → logprob: -3.9445745944976807
    10. ' les' → logprob: -4.194574356079102

Token 81: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.07578272372484207
    2. 'ques' → logprob: -3.4507827758789062
    3. 'fi' → logprob: -4.825782775878906
    4. 'aux' → logprob: -4.825782775878906
    5. 'f' → logprob: -4.950782775878906
    6. 'ique' → logprob: -5.450782775878906
    7. 'i' → logprob: -5.950782775878906
    8. '```' → logprob: -6.075782775878906
    9. 'que' → logprob: -6.450782775878906
    10. 'al' → logprob: -6.575782775878906

Token 82: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44020968675613403
    2. ':' → logprob: -2.3152096271514893
    3. '\n' → logprob: -2.5652096271514893
    4. '\' → logprob: -2.5652096271514893
    5. ' ' → logprob: -3.1902096271514893
    6. 'n' → logprob: -4.065209865570068
    7. '"' → logprob: -4.690209865570068
    8. '"""' → logprob: -4.940209865570068
    9. ' :' → logprob: -5.440209865570068
    10. '_' → logprob: -5.815209865570068

Token 83: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053926266729831696
    2. '    ' → logprob: -4.553926467895508
    3. 'n' → logprob: -4.678926467895508
    4. ' 
' → logprob: -4.803926467895508
    5. ' d' → logprob: -5.303926467895508
    6. '\n' → logprob: -5.803926467895508
    7. '    
' → logprob: -6.178926467895508
    8. ' ' → logprob: -6.303926467895508
    9. ' ' → logprob: -6.303926467895508
    10. ' donc' → logprob: -6.428926467895508

Token 84: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1138567924499512
    2. '   ' → logprob: -1.4888567924499512
    3. ' ' → logprob: -1.6138567924499512
    4. ' la' → logprob: -1.9888567924499512
    5. ' d' → logprob: -3.113856792449951
    6. ' n' → logprob: -4.363856792449951
    7. 'n' → logprob: -4.863856792449951
    8. ' ' → logprob: -4.988856792449951
    9. ' l' → logprob: -5.238856792449951
    10. 'd' → logprob: -5.238856792449951

Token 85: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.9127148985862732
    2. 'diff' → logprob: -1.162714958190918
    3. 'd' → logprob: -2.412714958190918
    4. 'fonction' → logprob: -2.537714958190918
    5. ' fonction' → logprob: -2.662714958190918
    6. 'difference' → logprob: -3.662714958190918
    7. ' diff' → logprob: -5.037714958190918
    8. ' difference' → logprob: -5.287714958190918
    9. ' d' → logprob: -6.412714958190918
    10. ' function' → logprob: -6.662714958190918

Token 86: ' sera' (ID: 15511)
  Prédit: ' sera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.9583568572998047
    2. '   ' → logprob: -1.0833568572998047
    3. ' est' → logprob: -1.8333568572998047
    4. ' correspond' → logprob: -2.8333568572998047
    5. ' =' → logprob: -3.5833568572998047
    6. ' ' → logprob: -4.208356857299805
    7. '0' → logprob: -4.833356857299805
    8. ' vaut' → logprob: -5.833356857299805
    9. ' zéro' → logprob: -7.333356857299805
    10. 'sera' → logprob: -7.583356857299805

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6337405443191528
    2. '0' → logprob: -0.7587405443191528
    3. ' ' → logprob: -7.008740425109863
    4. ' zéro' → logprob: -9.508740425109863
    5. ' zero' → logprob: -9.633740425109863
    6. '   ' → logprob: -10.633740425109863
    7. ' n' → logprob: -11.008740425109863
    8. 'n' → logprob: -12.008740425109863
    9. ' a' → logprob: -12.133740425109863
    10. '```' → logprob: -12.258740425109863

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01419076882302761
    2. ' ' → logprob: -4.264190673828125
    3. ' zero' → logprob: -10.889190673828125
    4. ' zéro' → logprob: -12.764190673828125
    5. 'zero' → logprob: -13.264190673828125
    6. 'z' → logprob: -13.764190673828125
    7. '   ' → logprob: -13.764190673828125
    8. ' z' → logprob: -14.514190673828125
    9. 'd' → logprob: -15.764190673828125
    10. '```' → logprob: -15.889190673828125

Token 89: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544492781162262
    2. '\n' → logprob: -1.8794492483139038
    3. '\' → logprob: -3.6294493675231934
    4. '    
' → logprob: -4.504449367523193
    5. '
' → logprob: -4.754449367523193
    6. '.' → logprob: -5.129449367523193
    7. 'n' → logprob: -5.504449367523193
    8. ':' → logprob: -5.754449367523193
    9. '```' → logprob: -6.129449367523193
    10. '  
' → logprob: -6.504449367523193

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5229097604751587
    2. '"""' → logprob: -1.0229097604751587
    3. '"' → logprob: -3.147909641265869
    4. '```' → logprob: -6.272909641265869
    5. ' """' → logprob: -6.772909641265869
    6. '""' → logprob: -7.522909641265869
    7. '"""
' → logprob: -8.022910118103027
    8. '`' → logprob: -8.647910118103027
    9. '\n' → logprob: -8.897910118103027
    10. ')' → logprob: -9.397910118103027

Token 91: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02800644002854824
    2. '\n' → logprob: -4.153006553649902
    3. '    
' → logprob: -5.403006553649902
    4. '```' → logprob: -5.653006553649902
    5. '
' → logprob: -6.028006553649902
    6. '\' → logprob: -7.153006553649902
    7. '"""' → logprob: -8.903006553649902
    8. 'n' → logprob: -9.153006553649902
    9. ' 
' → logprob: -9.528006553649902
    10. '    ' → logprob: -9.653006553649902

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060010846704244614
    2. 'n' → logprob: -3.9350109100341797
    3. '\n' → logprob: -3.9350109100341797
    4. '    
' → logprob: -4.43501091003418
    5. '
' → logprob: -5.43501091003418
    6. '\' → logprob: -6.81001091003418
    7. '    ' → logprob: -7.18501091003418
    8. ' ' → logprob: -8.56001091003418
    9. 'd' → logprob: -8.81001091003418
    10. ' 
' → logprob: -8.93501091003418

Token 93: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15359538793563843
    2. '   ' → logprob: -2.028595447540283
    3. '\n' → logprob: -4.778595447540283
    4. ' n' → logprob: -7.028595447540283
    5. '    
' → logprob: -7.653595447540283
    6. '
' → logprob: -7.653595447540283
    7. '\' → logprob: -8.028594970703125
    8. 'input' → logprob: -9.653594970703125
    9. 'd' → logprob: -10.028594970703125
    10. '    ' → logprob: -10.153594970703125

Token 94: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3486660122871399
    2. ' n' → logprob: -1.2236659526824951
    3. '   ' → logprob: -8.848666191101074
    4. 'input' → logprob: -10.098666191101074
    5. ' input' → logprob: -10.723666191101074
    6. '```' → logprob: -12.598666191101074
    7. 'data' → logprob: -13.098666191101074
    8. '#' → logprob: -13.473666191101074
    9. ' #' → logprob: -13.598666191101074
    10. '	n' → logprob: -13.848666191101074

Token 95: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6700100302696228
    2. 'n' → logprob: -0.9200100302696228
    3. ' n' → logprob: -3.2950100898742676
    4. ' ' → logprob: -3.2950100898742676
    5. '    ' → logprob: -4.545010089874268
    6. '_' → logprob: -7.295010089874268
    7. '(' → logprob: -7.545010089874268
    8. '  ' → logprob: -7.795010089874268
    9. ' (' → logprob: -7.795010089874268
    10. 'd' → logprob: -8.29500961303711

Token 96: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006581550929695368
    2. 'n' → logprob: -5.381581783294678
    3. ' ' → logprob: -6.756581783294678
    4. ' l' → logprob: -7.881581783294678
    5. ' input' → logprob: -8.50658130645752
    6. ' la' → logprob: -8.88158130645752
    7. ' ' → logprob: -10.50658130645752
    8. ' int' → logprob: -10.88158130645752
    9. 'input' → logprob: -11.50658130645752
    10. 'l' → logprob: -12.00658130645752

Token 97: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02055041678249836
    2. ' n' → logprob: -3.895550489425659
    3. ' ' → logprob: -12.020550727844238
    4. 'input' → logprob: -13.395550727844238
    5. ' input' → logprob: -14.520550727844238
    6. 's' → logprob: -15.770550727844238
    7. '   ' → logprob: -16.020549774169922
    8. '	n' → logprob: -16.270549774169922
    9. 'int' → logprob: -16.520549774169922
    10. 'i' → logprob: -17.395549774169922

Token 98: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10532302409410477
    2. ' n' → logprob: -2.855323076248169
    3. '   ' → logprob: -3.855323076248169
    4. ' ' → logprob: -3.980323076248169
    5. '    ' → logprob: -6.35532283782959
    6. '	n' → logprob: -8.98032283782959
    7. 's' → logprob: -9.35532283782959
    8. ' )' → logprob: -9.60532283782959
    9. '  ' → logprob: -9.60532283782959
    10. '    
' → logprob: -9.73032283782959

Token 99: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04694981873035431
    2. 'n' → logprob: -3.421949863433838
    3. ' ' → logprob: -4.421949863433838
    4. ' l' → logprob: -7.421949863433838
    5. ' la' → logprob: -7.671949863433838
    6. ' ' → logprob: -9.17194938659668
    7. 'l' → logprob: -10.79694938659668
    8. '	n' → logprob: -12.67194938659668
    9. ' )' → logprob: -13.04694938659668
    10. ' input' → logprob: -13.29694938659668

Token 100: ' liste' (ID: 31719)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06626749783754349
    2. 'liste' → logprob: -2.941267490386963
    3. ' liste' → logprob: -5.441267490386963
    4. ' n' → logprob: -5.691267490386963
    5. 'list' → logprob: -6.816267490386963
    6. 'd' → logprob: -7.566267490386963
    7. 'entrée' → logprob: -7.566267490386963
    8. 'input' → logprob: -7.691267490386963
    9. 'l' → logprob: -7.691267490386963
    10. ' input' → logprob: -8.691267967224121

Token 101: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025015339255332947
    2. '   ' → logprob: -4.025015354156494
    3. ' 
' → logprob: -5.650015354156494
    4. '    
' → logprob: -6.525015354156494
    5. '\n' → logprob: -6.650015354156494
    6. '
' → logprob: -8.775014877319336
    7. '	n' → logprob: -9.025014877319336
    8. ' n' → logprob: -9.275014877319336
    9. '\' → logprob: -9.900014877319336
    10. ' ' → logprob: -10.025014877319336

Token 102: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20463621616363525
    2. '   ' → logprob: -1.7046362161636353
    3. ' 
' → logprob: -6.454636096954346
    4. ' n' → logprob: -7.204636096954346
    5. '    
' → logprob: -7.579636096954346
    6. ' ' → logprob: -8.454636573791504
    7. '    ' → logprob: -10.079636573791504
    8. '	n' → logprob: -10.454636573791504
    9. '\n' → logprob: -10.704636573791504
    10. '     
' → logprob: -10.829636573791504

Token 103: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.029896501451730728
    2. ' n' → logprob: -3.5298964977264404
    3. '   ' → logprob: -9.65489673614502
    4. '	n' → logprob: -9.77989673614502
    5. ' 
' → logprob: -11.27989673614502
    6. ' \' → logprob: -12.52989673614502
    7. ' ‌' → logprob: -12.65489673614502
    8. ' ' → logprob: -13.27989673614502
    9. ' ' → logprob: -13.40489673614502
    10. '    
' → logprob: -13.90489673614502

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00020711649267468601
    2. '=' → logprob: -8.50020694732666
    3. ',' → logprob: -13.37520694732666
    4. ' ,' → logprob: -14.25020694732666
    5. ' ' → logprob: -14.37520694732666
    6. ' =
' → logprob: -14.62520694732666
    7. ' ' → logprob: -15.87520694732666
    8. '=int' → logprob: -16.000207901000977
    9. '=input' → logprob: -16.875207901000977
    10. ')' → logprob: -17.000207901000977

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0232466422021389
    2. 'int' → logprob: -3.7732465267181396
    3. ' ' → logprob: -13.898246765136719
    4. '=int' → logprob: -16.52324676513672
    5. '	int' → logprob: -17.27324676513672
    6. '   ' → logprob: -17.89824676513672
    7. ' ' → logprob: -18.02324676513672
    8. ' input' → logprob: -18.39824676513672
    9. '(int' → logprob: -18.77324676513672
    10. '  ' → logprob: -19.52324676513672

Token 106: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25208529829978943
    2. '(' → logprob: -1.5020853281021118
    3. 'input' → logprob: -8.87708568572998
    4. ' (' → logprob: -11.50208568572998
    5. '(
' → logprob: -12.25208568572998
    6. ' input' → logprob: -13.87708568572998
    7. '(

' → logprob: -15.62708568572998
    8. ' ' → logprob: -15.75208568572998
    9. '<input' → logprob: -16.002084732055664
    10. '=input' → logprob: -16.127084732055664

Token 107: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6972348093986511
    2. '())' → logprob: -0.6972348093986511
    3. '(' → logprob: -5.572234630584717
    4. '("' → logprob: -8.947235107421875
    5. '("("' → logprob: -9.572235107421875
    6. '()))' → logprob: -11.322235107421875
    7. '(""))' → logprob: -11.447235107421875
    8. ')' → logprob: -11.572235107421875
    9. '('' → logprob: -11.822235107421875
    10. '().' → logprob: -12.072235107421875

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21827422082424164
    2. '    
' → logprob: -2.7182741165161133
    3. '
' → logprob: -3.3432741165161133
    4. ' ' → logprob: -3.4682741165161133
    5. 'd' → logprob: -3.8432741165161133
    6. ' 
' → logprob: -4.343274116516113
    7. '  
' → logprob: -4.718274116516113
    8. '    ' → logprob: -5.093274116516113
    9. ' d' → logprob: -5.343274116516113
    10. '  ' → logprob: -6.093274116516113

Token 109: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7748540639877319
    2. '   ' → logprob: -0.7748540639877319
    3. '
' → logprob: -3.7748541831970215
    4. '    
' → logprob: -3.8998541831970215
    5. ' d' → logprob: -4.0248541831970215
    6. ' ' → logprob: -4.8998541831970215
    7. ' 
' → logprob: -5.2748541831970215
    8. '    ' → logprob: -6.7748541831970215
    9. '  
' → logprob: -6.8998541831970215
    10. 'n' → logprob: -7.3998541831970215

Token 110: ' Lecture' (ID: 106534)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.34890109300613403
    2. 'd' → logprob: -1.2239010334014893
    3. '#' → logprob: -8.09890079498291
    4. ' #' → logprob: -9.59890079498291
    5. ' Lire' → logprob: -11.72390079498291
    6. '   ' → logprob: -11.84890079498291
    7. ' ' → logprob: -12.22390079498291
    8. ' ' → logprob: -12.34890079498291
    9. '```' → logprob: -12.34890079498291
    10. 'Lire' → logprob: -12.47390079498291

Token 111: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19000989198684692
    2. ' de' → logprob: -2.815009832382202
    3. '(' → logprob: -3.065009832382202
    4. ' d' → logprob: -3.065009832382202
    5. 'd' → logprob: -4.690010070800781
    6. '   ' → logprob: -5.440010070800781
    7. ' des' → logprob: -6.190010070800781
    8. ' ()' → logprob: -7.065010070800781
    9. '(d' → logprob: -7.065010070800781
    10. '    ' → logprob: -7.315010070800781

Token 112: ' éléments' (ID: 57375)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27301275730133057
    2. ' ent' → logprob: -2.148012638092041
    3. ' d' → logprob: -2.273012638092041
    4. 'ent' → logprob: -5.148012638092041
    5. ' nombres' → logprob: -5.523012638092041
    6. ' données' → logprob: -6.273012638092041
    7. ' integers' → logprob: -6.398012638092041
    8. ' data' → logprob: -6.523012638092041
    9. 'n' → logprob: -6.898012638092041
    10. ' valeurs' → logprob: -7.148012638092041

Token 113: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43832555413246155
    2. 'd' → logprob: -1.0633255243301392
    3. '   ' → logprob: -4.68832540512085
    4. '	d' → logprob: -8.438325881958008
    5. 's' → logprob: -9.688325881958008
    6. ' ' → logprob: -10.938325881958008
    7. '    ' → logprob: -11.063325881958008
    8. ' de' → logprob: -11.188325881958008
    9. 'n' → logprob: -11.563325881958008
    10. '[' → logprob: -12.188325881958008

Token 114: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21540236473083496
    2. ' d' → logprob: -1.715402364730835
    3. 'd' → logprob: -4.340402603149414
    4. ' list' → logprob: -8.840402603149414
    5. ' l' → logprob: -8.965402603149414
    6. ' n' → logprob: -9.340402603149414
    7. ' ' → logprob: -9.465402603149414
    8. 'n' → logprob: -9.715402603149414
    9. ' the' → logprob: -9.715402603149414
    10. 'la' → logprob: -9.840402603149414

Token 115: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.36500677466392517
    2. 'liste' → logprob: -1.2400068044662476
    3. 'd' → logprob: -4.490006923675537
    4. ' list' → logprob: -6.115006923675537
    5. 'list' → logprob: -6.240006923675537
    6. ' d' → logprob: -7.615006923675537
    7. 's' → logprob: -8.990006446838379
    8. 'Liste' → logprob: -9.115006446838379
    9. ' listes' → logprob: -9.240006446838379
    10. 'lst' → logprob: -9.990006446838379

Token 116: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03473977372050285
    2. 'd' → logprob: -3.4097397327423096
    3. '   ' → logprob: -6.909739971160889
    4. '	d' → logprob: -9.78473949432373
    5. ' ' → logprob: -11.28473949432373
    6. ' ,' → logprob: -12.03473949432373
    7. ',' → logprob: -12.53473949432373
    8. '    
' → logprob: -12.90973949432373
    9. ' 
' → logprob: -12.90973949432373
    10. '  ' → logprob: -13.65973949432373

Token 117: ' en' (ID: 469)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07889188081026077
    2. 'd' → logprob: -2.5788919925689697
    3. '	d' → logprob: -14.32889175415039
    4. '_d' → logprob: -14.70389175415039
    5. 's' → logprob: -14.95389175415039
    6. '   ' → logprob: -15.70389175415039
    7. ' ' → logprob: -16.07889175415039
    8. ' ' → logprob: -16.07889175415039
    9. '    ' → logprob: -16.39139175415039
    10. ' `' → logprob: -17.32889175415039

Token 118: ' les' (ID: 1341)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.4512022733688354
    2. ' list' → logprob: -1.8262022733688354
    3. ' une' → logprob: -2.076202392578125
    4. ' liste' → logprob: -2.201202392578125
    5. 'list' → logprob: -2.201202392578125
    6. 'd' → logprob: -3.201202392578125
    7. ' utilisant' → logprob: -3.201202392578125
    8. ' ' → logprob: -3.326202392578125
    9. 'split' → logprob: -3.951202392578125
    10. ' map' → logprob: -4.201202392578125

Token 119: ' convert' (ID: 8452)
  Prédit: ' lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lis' → logprob: -1.040439486503601
    2. ' map' → logprob: -1.415439486503601
    3. ' list' → logprob: -1.915439486503601
    4. 'map' → logprob: -2.4154396057128906
    5. ' split' → logprob: -2.6654396057128906
    6. 'list' → logprob: -3.4154396057128906
    7. 'split' → logprob: -3.6654396057128906
    8. 'lis' → logprob: -3.9154396057128906
    9. 'spl' → logprob: -4.790439605712891
    10. ' sépar' → logprob: -5.665439605712891

Token 120: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0016838706796988845
    2. 'ant' → logprob: -7.751683712005615
    3. 't' → logprob: -8.001684188842773
    4. 'is' → logprob: -8.751684188842773
    5. '   ' → logprob: -9.001684188842773
    6. 'iss' → logprob: -9.126684188842773
    7. 'issement' → logprob: -9.876684188842773
    8. 'isseur' → logprob: -10.251684188842773
    9. 'issent' → logprob: -10.251684188842773
    10. 'i' → logprob: -10.376684188842773

Token 121: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10436617583036423
    2. ' en' → logprob: -2.7293660640716553
    3. '(' → logprob: -3.7293660640716553
    4. ' ' → logprob: -6.729366302490234
    5. ' list' → logprob: -6.979366302490234
    6. 'list' → logprob: -7.229366302490234
    7. 'int' → logprob: -7.354366302490234
    8. 'input' → logprob: -7.479366302490234
    9. '(input' → logprob: -7.604366302490234
    10. ')' → logprob: -7.729366302490234

Token 122: ' ent' (ID: 1121)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1858183145523071
    2. ' liste' → logprob: -1.4358183145523071
    3. ' list' → logprob: -2.0608181953430176
    4. 'liste' → logprob: -2.1858181953430176
    5. 'ent' → logprob: -2.3108181953430176
    6. ' ent' → logprob: -3.0608181953430176
    7. ' integers' → logprob: -3.4358181953430176
    8. 'ints' → logprob: -4.185818195343018
    9. ' une' → logprob: -4.935818195343018
    10. 'inte' → logprob: -5.185818195343018

Token 123: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04476196691393852
    2. 'ier' → logprob: -3.169761896133423
    3. 'ières' → logprob: -6.794762134552002
    4. 'ière' → logprob: -7.669762134552002
    5. 'i' → logprob: -9.919761657714844
    6. '   ' → logprob: -10.419761657714844
    7. ' ier' → logprob: -10.919761657714844
    8. 'ires' → logprob: -11.294761657714844
    9. 're' → logprob: -11.544761657714844
    10. 'ers' → logprob: -11.669761657714844

Token 124: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4494711458683014
    2. ' d' → logprob: -1.074471116065979
    3. '   ' → logprob: -4.6994709968566895
    4. ',' → logprob: -5.4494709968566895
    5. ' ,' → logprob: -5.5744709968566895
    6. '	d' → logprob: -7.3244709968566895
    7. '    ' → logprob: -7.5744709968566895
    8. ' ' → logprob: -7.5744709968566895
    9. 's' → logprob: -7.8244709968566895
    10. ')' → logprob: -8.324471473693848

Token 125: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4206515848636627
    2. 'd' → logprob: -1.1706515550613403
    3. '   ' → logprob: -3.54565167427063
    4. 's' → logprob: -5.795651435852051
    5. ',' → logprob: -8.04565143585205
    6. '	d' → logprob: -8.04565143585205
    7. ' ,' → logprob: -8.79565143585205
    8. ')' → logprob: -9.42065143585205
    9. '    
' → logprob: -9.42065143585205
    10. ' )' → logprob: -9.54565143585205

Token 126: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12694206833839417
    2. 'd' (adapté à ' d') → logprob: -2.1269421577453613
    3. '	d' → logprob: -11.751941680908203
    4. '   ' → logprob: -13.001941680908203
    5. ' data' → logprob: -14.251941680908203
    6. 'data' → logprob: -14.376941680908203
    7. ' ' → logprob: -14.626941680908203
    8. ' ' → logprob: -14.751941680908203
    9. 's' → logprob: -15.001941680908203
    10. '    ' → logprob: -15.001941680908203

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716555915772915
    2. '=' → logprob: -5.006716728210449
    3. ' =[' → logprob: -14.88171672821045
    4. ' =
' → logprob: -15.13171672821045
    5. ' ' → logprob: -15.50671672821045
    6. 's' → logprob: -16.006715774536133
    7. ' ' → logprob: -16.631715774536133
    8. '=input' → logprob: -16.756715774536133
    9. '=int' → logprob: -17.631715774536133
    10. '=[]' → logprob: -17.881715774536133

Token 128: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5759413838386536
    2. 'list' → logprob: -0.8259413838386536
    3. '[list' → logprob: -14.32594108581543
    4. '[' → logprob: -14.57594108581543
    5. 'sorted' → logprob: -14.95094108581543
    6. ' [' → logprob: -15.45094108581543
    7. ' sorted' → logprob: -15.95094108581543
    8. '=list' → logprob: -16.95094108581543
    9. '	list' → logprob: -17.07594108581543
    10. ' ' → logprob: -17.82594108581543

Token 129: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004111762158572674
    2. '(' → logprob: -5.5041117668151855
    3. '(int' → logprob: -10.504111289978027
    4. '(input' → logprob: -12.254111289978027
    5. 'map' → logprob: -14.754111289978027
    6. '(
' → logprob: -15.629111289978027
    7. '(eval' → logprob: -15.629111289978027
    8. '()' → logprob: -16.129112243652344
    9. '(range' → logprob: -16.129112243652344
    10. ' map' → logprob: -17.129112243652344

Token 130: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009773134952411056
    2. '(' → logprob: -7.125977516174316
    3. 'int' → logprob: -8.875977516174316
    4. '(input' → logprob: -10.625977516174316
    5. '<int' → logprob: -12.375977516174316
    6. '(
' → logprob: -13.625977516174316
    7. ' int' → logprob: -13.750977516174316
    8. ')' → logprob: -14.875977516174316
    9. ' (' → logprob: -15.000977516174316
    10. '[int' → logprob: -15.125977516174316

Token 131: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010926605202257633
    2. 'input' → logprob: -4.760926723480225
    3. ',input' → logprob: -6.635926723480225
    4. '(' → logprob: -7.010926723480225
    5. ',' → logprob: -10.010926246643066
    6. ' input' → logprob: -10.885926246643066
    7. ' (' → logprob: -11.010926246643066
    8. '(
' → logprob: -11.385926246643066
    9. '(

' → logprob: -14.385926246643066
    10. '   ' → logprob: -14.510926246643066

Token 132: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014164221473038197
    2. ' input' → logprob: -4.264164447784424
    3. '(input' → logprob: -14.514163970947266
    4. '   ' → logprob: -16.139163970947266
    5. ',input' → logprob: -17.264163970947266
    6. '	input' → logprob: -17.514163970947266
    7. ' ' → logprob: -17.889163970947266
    8. '=input' → logprob: -18.139163970947266
    9. '<input' → logprob: -18.514163970947266
    10. '_input' → logprob: -20.014163970947266

Token 133: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006282062386162579
    2. '()' → logprob: -7.3756279945373535
    3. ' ().' → logprob: -14.375628471374512
    4. ')' → logprob: -15.375628471374512
    5. '()))' → logprob: -15.375628471374512
    6. '()
' → logprob: -15.625628471374512
    7. '())' → logprob: -16.125627517700195
    8. '()));' → logprob: -16.250627517700195
    9. '.split' → logprob: -16.625627517700195
    10. '(' → logprob: -16.750627517700195

Token 134: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019308974733576179
    2. 'strip' → logprob: -6.2519307136535645
    3. 'rstrip' → logprob: -13.626931190490723
    4. ' split' → logprob: -13.751931190490723
    5. 'read' → logprob: -17.376930236816406
    6. '(split' → logprob: -17.626930236816406
    7. 'spl' → logprob: -18.251930236816406
    8. ' strip' → logprob: -19.876930236816406
    9. '.split' → logprob: -21.251930236816406
    10. '_split' → logprob: -21.376930236816406

Token 135: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6320432424545288
    2. '()' → logprob: -1.1320432424545288
    3. '())' → logprob: -2.2570433616638184
    4. '))' → logprob: -4.007043361663818
    5. ')' → logprob: -4.132043361663818
    6. '())))' → logprob: -5.632043361663818
    7. '(' → logprob: -6.382043361663818
    8. ')))' → logprob: -6.382043361663818
    9. '()))
' → logprob: -9.63204288482666
    10. '()));' → logprob: -10.25704288482666

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05855610594153404
    2. '
' → logprob: -3.683556079864502
    3. 'd' → logprob: -4.183556079864502
    4. '    
' → logprob: -4.308556079864502
    5. '  
' → logprob: -6.933556079864502
    6. '<|end|>' → logprob: -7.933556079864502
    7. '   
' → logprob: -7.933556079864502
    8. ' 
' → logprob: -8.05855655670166
    9. ' d' → logprob: -8.43355655670166
    10. 'n' → logprob: -9.18355655670166

Token 137: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6483102440834045
    2. '   ' → logprob: -0.7733102440834045
    3. '    
' → logprob: -4.64831018447876
    4. ' d' → logprob: -6.02331018447876
    5. '
' → logprob: -6.77331018447876
    6. '  
' → logprob: -7.27331018447876
    7. ' 
' → logprob: -7.64831018447876
    8. ' ' → logprob: -7.89831018447876
    9. '   
' → logprob: -8.273310661315918
    10. '  ' → logprob: -8.398310661315918

Token 138: ' Tri' (ID: 25062)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2014642059803009
    2. ' d' → logprob: -1.7014641761779785
    3. 'sort' → logprob: -11.326464653015137
    4. '   ' → logprob: -11.451464653015137
    5. 'sorted' → logprob: -12.076464653015137
    6. 'assert' → logprob: -12.201464653015137
    7. '#' → logprob: -12.576464653015137
    8. 'if' → logprob: -12.951464653015137
    9. ' ' → logprob: -13.076464653015137
    10. ' sorted' → logprob: -13.826464653015137

Token 139: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09485867619514465
    2. '   ' → logprob: -2.8448586463928223
    3. 'd' → logprob: -4.344858646392822
    4. ' d' → logprob: -4.469858646392822
    5. '(' → logprob: -5.094858646392822
    6. ' ' → logprob: -7.469858646392822
    7. '()
' → logprob: -8.34485912322998
    8. ')' → logprob: -8.34485912322998
    9. '    ' → logprob: -8.71985912322998
    10. '(d' → logprob: -9.09485912322998

Token 140: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01665673777461052
    2. 'd' → logprob: -4.141656875610352
    3. ' la' → logprob: -7.391656875610352
    4. '(d' → logprob: -12.516656875610352
    5. '()' → logprob: -14.266656875610352
    6. ' ' → logprob: -14.516656875610352
    7. 's' → logprob: -15.016656875610352
    8. '(' → logprob: -15.516656875610352
    9. ' ' → logprob: -15.516656875610352
    10. ' the' → logprob: -15.641656875610352

Token 141: ' liste' (ID: 31719)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44514477252960205
    2. ' d' → logprob: -1.070144772529602
    3. ' liste' → logprob: -4.4451446533203125
    4. 'liste' → logprob: -5.4451446533203125
    5. 'list' → logprob: -8.945144653320312
    6. ' list' → logprob: -9.445144653320312
    7. ' ' → logprob: -10.320144653320312
    8. 's' → logprob: -12.820144653320312
    9. ' listes' → logprob: -13.320144653320312
    10. 'l' → logprob: -13.320144653320312

Token 142: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16731379926204681
    2. '   ' → logprob: -1.917313814163208
    3. ' d' → logprob: -5.167313575744629
    4. '    
' → logprob: -7.292313575744629
    5. '
' → logprob: -7.917313575744629
    6. '  
' → logprob: -9.667313575744629
    7. ')' → logprob: -9.917313575744629
    8. 'n' → logprob: -10.042313575744629
    9. ' 
' → logprob: -10.417313575744629
    10. 's' → logprob: -10.667313575744629

Token 143: ' faciliter' (ID: 106284)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.008760875090956688
    2. 'd' → logprob: -5.508760929107666
    3. ' ' → logprob: -6.633760929107666
    4. ' garantir' → logprob: -6.633760929107666
    5. ' n' → logprob: -7.133760929107666
    6. ' assurer' → logprob: -7.633760929107666
    7. ' obtenir' → logprob: -8.383760452270508
    8. ' s' → logprob: -9.508760452270508
    9. ' ' → logprob: -9.508760452270508
    10. ' sorted' → logprob: -9.758760452270508

Token 144: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04484062269330025
    2. ' la' → logprob: -3.2948405742645264
    3. 'le' → logprob: -5.7948408126831055
    4. ' calcul' → logprob: -6.1698408126831055
    5. ' l' → logprob: -7.6698408126831055
    6. ' ' → logprob: -7.9198408126831055
    7. 'calcul' → logprob: -8.794840812683105
    8. ' les' → logprob: -8.919840812683105
    9. 'la' → logprob: -9.169840812683105
    10. ' len' → logprob: -9.294840812683105

Token 145: ' recherche' (ID: 24975)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.2940984070301056
    2. 'cal' → logprob: -2.294098377227783
    3. ' recherche' → logprob: -2.544098377227783
    4. 'm' → logprob: -4.169098377227783
    5. 'mé' → logprob: -4.294098377227783
    6. 'median' → logprob: -5.044098377227783
    7. 'lecture' → logprob: -5.794098377227783
    8. 're' → logprob: -5.794098377227783
    9. 'prise' → logprob: -5.919098377227783
    10. 's' → logprob: -6.044098377227783

Token 146: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3285461366176605
    2. ' d' → logprob: -1.453546166419983
    3. '   ' → logprob: -3.0785460472106934
    4. '	d' → logprob: -9.453546524047852
    5. 's' → logprob: -10.328546524047852
    6. '    
' → logprob: -10.453546524047852
    7. '<|end|>' → logprob: -10.703546524047852
    8. ' ' → logprob: -10.953546524047852
    9. '  ' → logprob: -11.203546524047852
    10. 'n' → logprob: -11.203546524047852

Token 147: ' méd' (ID: 13387)
  Prédit: ' méd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méd' → logprob: -0.2077430784702301
    2. 'm' → logprob: -2.2077431678771973
    3. 'mé' → logprob: -3.5827431678771973
    4. ' median' → logprob: -3.8327431678771973
    5. ' indices' → logprob: -4.957743167877197
    6. 'med' → logprob: -5.332743167877197
    7. 'median' → logprob: -5.332743167877197
    8. ' médi' → logprob: -5.457743167877197
    9. ' med' → logprob: -5.832743167877197
    10. ' m' → logprob: -6.957743167877197

Token 148: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.008501344360411167
    2. 'i' → logprob: -5.5085015296936035
    3. 'ians' → logprob: -5.8835015296936035
    4. '   ' → logprob: -7.7585015296936035
    5. 'iane' → logprob: -7.8835015296936035
    6. '```' → logprob: -8.258501052856445
    7. 'ia' → logprob: -8.758501052856445
    8. '  ' → logprob: -10.946001052856445
    9. 'iales' → logprob: -11.008501052856445
    10. '``' → logprob: -11.008501052856445

Token 149: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0003115095605608076
    2. 'e' → logprob: -8.125311851501465
    3. 's' → logprob: -12.000311851501465
    4. '```' → logprob: -13.000311851501465
    5. '(es' → logprob: -13.750311851501465
    6. '   ' → logprob: -14.750311851501465
    7. 'ees' → logprob: -15.250311851501465
    8. ' es' → logprob: -15.312811851501465
    9. ')' → logprob: -15.312811851501465
    10. 'nes' → logprob: -15.437811851501465

Token 150: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33564507961273193
    2. '   ' → logprob: -1.335645079612732
    3. '
' → logprob: -4.3356451988220215
    4. ' d' → logprob: -4.9606451988220215
    5. '    
' → logprob: -6.4606451988220215
    6. ' 
' → logprob: -8.960644721984863
    7. '  
' → logprob: -9.335644721984863
    8. 's' → logprob: -9.960644721984863
    9. 'n' → logprob: -10.335644721984863
    10. '   
' → logprob: -10.460644721984863

Token 151: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4646359384059906
    2. '   ' → logprob: -1.339635968208313
    3. ' d' → logprob: -2.2146358489990234
    4. '    
' → logprob: -8.089635848999023
    5. ' 
' → logprob: -9.589635848999023
    6. '
' → logprob: -10.464635848999023
    7. ' ' → logprob: -10.839635848999023
    8. '  ' → logprob: -11.089635848999023
    9. '	d' → logprob: -11.214635848999023
    10. '  
' → logprob: -11.714635848999023

Token 152: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.02335297502577305
    2. ' d' → logprob: -3.773352861404419
    3. '   ' → logprob: -9.14835262298584
    4. '	d' → logprob: -14.52335262298584
    5. ' ' → logprob: -15.02335262298584
    6. '    
' → logprob: -16.273353576660156
    7. '  ' → logprob: -16.523353576660156
    8. '```' → logprob: -17.398353576660156
    9. '
' → logprob: -17.523353576660156
    10. ' ' → logprob: -17.648353576660156

Token 153: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.04858953505754471
    2. '.' → logprob: -3.0485894680023193
    3. 'sort' → logprob: -13.923589706420898
    4. ' .' → logprob: -15.048589706420898
    5. '.sorted' → logprob: -15.173589706420898
    6. '.s' → logprob: -15.298589706420898
    7. '.Sort' → logprob: -15.423589706420898
    8. ').' → logprob: -15.923589706420898
    9. ' sort' → logprob: -17.0485897064209
    10. '=' → logprob: -17.4235897064209

Token 154: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010127831774298102
    2. '()
' → logprob: -9.375101089477539
    3. '(' → logprob: -11.125101089477539
    4. '()`' → logprob: -14.500101089477539
    5. '()

' → logprob: -15.000101089477539
    6. ')' → logprob: -15.125101089477539
    7. '(
' → logprob: -15.625101089477539
    8. ' ()' → logprob: -15.875101089477539
    9. '()\' → logprob: -16.75010108947754
    10. '()
' → logprob: -16.87510108947754

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06777363270521164
    2. '    
' → logprob: -3.4427735805511475
    3. '
' → logprob: -4.317773818969727
    4. ' 
' → logprob: -5.317773818969727
    5. 'n' → logprob: -5.942773818969727
    6. '  
' → logprob: -6.067773818969727
    7. 'diff' → logprob: -6.067773818969727
    8. ' return' → logprob: -6.192773818969727
    9. 'return' → logprob: -6.192773818969727
    10. ' ' → logprob: -7.192773818969727

Token 156: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5802843570709229
    2. 'diff' → logprob: -1.5802843570709229
    3. 'result' → logprob: -2.955284357070923
    4. '    
' → logprob: -3.455284357070923
    5. 'n' → logprob: -3.580284357070923
    6. 'return' → logprob: -3.705284357070923
    7. 'm' → logprob: -3.705284357070923
    8. '
' → logprob: -3.955284357070923
    9. ' 
' → logprob: -4.205284118652344
    10. ' return' → logprob: -4.955284118652344

Token 157: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5325457453727722
    2. ' if' → logprob: -2.032545804977417
    3. 'median' → logprob: -2.032545804977417
    4. 'diff' → logprob: -2.782545804977417
    5. ' median' → logprob: -3.407545804977417
    6. 'm' → logprob: -3.657545804977417
    7. 'difference' → logprob: -5.032545566558838
    8. ' diff' → logprob: -5.157545566558838
    9. '#' → logprob: -5.657545566558838
    10. 'mid' → logprob: -5.907545566558838

Token 158: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.0468764528632164
    2. 'cule' → logprob: -3.5468764305114746
    3. 'difference' → logprob: -4.796876430511475
    4. 'c' → logprob: -5.671876430511475
    5. 'culate' → logprob: -6.421876430511475
    6. ' difference' → logprob: -6.671876430511475
    7. 'culated' → logprob: -7.421876430511475
    8. '_difference' → logprob: -7.546876430511475
    9. 'dif' → logprob: -8.421876907348633
    10. 'culation' → logprob: -8.796876907348633

Token 159: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31275975704193115
    2. '   ' → logprob: -1.4377597570419312
    3. 'ration' → logprob: -4.187759876251221
    4. ' r' → logprob: -5.687759876251221
    5. 'er' → logprob: -5.812759876251221
    6. ' ' → logprob: -5.937759876251221
    7. '  ' → logprob: -6.312759876251221
    8. '_' → logprob: -7.187759876251221
    9. 'ation' → logprob: -7.312759876251221
    10. ' la' → logprob: -7.687759876251221

Token 160: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7621849179267883
    2. 'diff' → logprob: -1.2621848583221436
    3. 'difference' → logprob: -1.8871848583221436
    4. ' difference' → logprob: -3.1371848583221436
    5. ' diff' → logprob: -3.3871848583221436
    6. 'la' → logprob: -4.387185096740723
    7. ' median' → logprob: -5.887185096740723
    8. 'median' → logprob: -6.262185096740723
    9. 'd' → logprob: -7.012185096740723
    10. ' différence' → logprob: -7.637185096740723

Token 161: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.11504995822906494
    2. 'difference' → logprob: -2.2400498390197754
    3. 'd' → logprob: -7.240049839019775
    4. 'median' → logprob: -7.990049839019775
    5. ' diff' → logprob: -8.240050315856934
    6. 'dif' → logprob: -8.615050315856934
    7. 'm' → logprob: -8.615050315856934
    8. ' différence' → logprob: -8.740050315856934
    9. ' difference' → logprob: -8.865050315856934
    10. 'di' → logprob: -9.240050315856934

Token 162: ' entre' (ID: 3853)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'median' → logprob: -1.2379556894302368
    2. ' de' → logprob: -2.1129555702209473
    3. 'med' → logprob: -2.4879555702209473
    4. '   ' → logprob: -2.6129555702209473
    5. ' =' → logprob: -2.6129555702209473
    6. 'diff' → logprob: -2.6129555702209473
    7. ' entre' → logprob: -2.8629555702209473
    8. ' median' → logprob: -3.2379555702209473
    9. 'm' → logprob: -3.3629555702209473
    10. ' between' → logprob: -3.3629555702209473

Token 163: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6876329183578491
    2. ' d' → logprob: -0.8126329183578491
    3. ' les' → logprob: -3.1876330375671387
    4. 'les' → logprob: -4.562633037567139
    5. ' la' → logprob: -6.687633037567139
    6. 'la' → logprob: -7.687633037567139
    7. ' ' → logprob: -10.31263256072998
    8. ' ' → logprob: -10.31263256072998
    9. ' deux' → logprob: -11.06263256072998
    10. 'de' → logprob: -11.56263256072998

Token 164: ' méd' (ID: 13387)
  Prédit: ' méd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méd' → logprob: -0.9657778739929199
    2. 'd' → logprob: -1.09077787399292
    3. ' d' → logprob: -2.21577787399292
    4. 'm' → logprob: -2.96577787399292
    5. 's' → logprob: -3.34077787399292
    6. 'de' → logprob: -3.46577787399292
    7. ' deux' → logprob: -3.84077787399292
    8. ' median' → logprob: -4.34077787399292
    9. 'median' → logprob: -5.34077787399292
    10. 'med' → logprob: -5.46577787399292

Token 165: 'iane' (ID: 39704)
  Prédit: 'ian'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.058216072618961334
    2. 'iane' → logprob: -3.683216094970703
    3. 'd' → logprob: -4.808216094970703
    4. 'ians' → logprob: -4.808216094970703
    5. 'anes' → logprob: -5.808216094970703
    6. 'ia' → logprob: -5.933216094970703
    7. '   ' → logprob: -6.058216094970703
    8. 'i' → logprob: -6.058216094970703
    9. 'a' → logprob: -6.933216094970703
    10. 'n' → logprob: -7.433216094970703

Token 166: ' haute' (ID: 49646)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24166779220104218
    2. 'd' → logprob: -2.4916677474975586
    3. ' =' → logprob: -2.6166677474975586
    4. '=' → logprob: -3.6166677474975586
    5. '_' → logprob: -4.741667747497559
    6. 'e' → logprob: -5.116667747497559
    7. '   ' → logprob: -5.741667747497559
    8. 'difference' → logprob: -5.991667747497559
    9. 'if' → logprob: -6.241667747497559
    10. 'n' → logprob: -6.491667747497559

Token 167: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.43171578645706177
    2. ' d' → logprob: -1.931715726852417
    3. ' ' → logprob: -2.806715726852417
    4. 'd' → logprob: -3.056715726852417
    5. 'et' → logprob: -3.556715726852417
    6. ' and' → logprob: -3.806715726852417
    7. 'e' → logprob: -3.931715726852417
    8. 's' → logprob: -4.806715965270996
    9. ' -' → logprob: -5.056715965270996
    10. '   ' → logprob: -5.181715965270996

Token 168: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10151132941246033
    2. ' la' → logprob: -2.351511240005493
    3. 'b' → logprob: -7.351511478424072
    4. 'd' → logprob: -8.351511001586914
    5. ' basse' → logprob: -8.851511001586914
    6. '   ' → logprob: -9.851511001586914
    7. 'low' → logprob: -10.101511001586914
    8. ' ' → logprob: -10.226511001586914
    9. '```' → logprob: -10.226511001586914
    10. 'median' → logprob: -11.226511001586914

Token 169: ' méd' (ID: 13387)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12558794021606445
    2. ' méd' → logprob: -2.3755879402160645
    3. 'med' → logprob: -5.2505879402160645
    4. 'median' → logprob: -5.2505879402160645
    5. 'mé' → logprob: -5.5005879402160645
    6. 'b' → logprob: -5.5005879402160645
    7. ' basse' → logprob: -5.6255879402160645
    8. ' median' → logprob: -7.5005879402160645
    9. '```' → logprob: -8.000587463378906
    10. ' moyenne' → logprob: -8.125587463378906

Token 170: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.43396180868148804
    2. 'd' → logprob: -1.6839618682861328
    3. 'ian' → logprob: -2.183961868286133
    4. '   ' → logprob: -3.308961868286133
    5. 'n' → logprob: -5.308961868286133
    6. ']' → logprob: -6.058961868286133
    7. 'ianne' → logprob: -6.808961868286133
    8. 'iana' → logprob: -6.933961868286133
    9. 'ia' → logprob: -7.183961868286133
    10. 'i' → logprob: -7.433961868286133

Token 171: ' basse' (ID: 110686)
  Prédit: ' basse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basse' → logprob: -0.4745416045188904
    2. 'b' → logprob: -0.9745416045188904
    3. ' ' → logprob: -8.474541664123535
    4. ' b' → logprob: -9.474541664123535
    5. 'low' → logprob: -9.974541664123535
    6. 'bas' → logprob: -10.474541664123535
    7. ' low' → logprob: -10.474541664123535
    8. ' ' → logprob: -10.849541664123535
    9. '_b' → logprob: -10.849541664123535
    10. '```' → logprob: -11.474541664123535

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7555346488952637
    2. 'diff' → logprob: -1.1305346488952637
    3. ' if' → logprob: -3.1305346488952637
    4. 'result' → logprob: -3.3805346488952637
    5. 'median' → logprob: -3.7555346488952637
    6. 'if' → logprob: -4.005534648895264
    7. 'return' → logprob: -4.130534648895264
    8. 'difference' → logprob: -4.130534648895264
    9. ' result' → logprob: -4.255534648895264
    10. ' return' → logprob: -4.255534648895264

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015442350879311562
    2. ' return' → logprob: -4.765442371368408
    3. 'diff' → logprob: -5.640442371368408
    4. 'return' → logprob: -6.265442371368408
    5. 'result' → logprob: -8.14044189453125
    6. ' result' → logprob: -8.39044189453125
    7. '    
' → logprob: -8.39044189453125
    8. ' if' → logprob: -8.51544189453125
    9. ' diff' → logprob: -9.51544189453125
    10. 'difference' → logprob: -9.76544189453125

Token 174: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.14444658160209656
    2. 'difference' → logprob: -2.769446611404419
    3. 'median' → logprob: -3.394446611404419
    4. 'print' → logprob: -4.01944637298584
    5. ' diff' → logprob: -4.76944637298584
    6. 'return' → logprob: -5.39444637298584
    7. 'result' → logprob: -5.76944637298584
    8. ' median' → logprob: -6.51944637298584
    9. ' difference' → logprob: -7.39444637298584
    10. 'if' → logprob: -7.64444637298584

Token 175: ' Pour' (ID: 13931)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3626193106174469
    2. 'print' → logprob: -1.4876192808151245
    3. 'difference' → logprob: -2.987619400024414
    4. ' print' → logprob: -4.737619400024414
    5. 'median' → logprob: -5.112619400024414
    6. ' diff' → logprob: -5.237619400024414
    7. 'result' → logprob: -5.612619400024414
    8. 'return' → logprob: -6.987619400024414
    9. 'if' → logprob: -7.112619400024414
    10. ' difference' → logprob: -7.112619400024414

Token 176: ' un' (ID: 537)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36838093400001526
    2. ' i' → logprob: -1.3683809041976929
    3. 'n' → logprob: -3.2433810234069824
    4. 'i' → logprob: -4.243381023406982
    5. ' ' → logprob: -9.993380546569824
    6. ' (' → logprob: -11.118380546569824
    7. '(n' → logprob: -11.118380546569824
    8. ' les' → logprob: -11.118380546569824
    9. 'indice' → logprob: -11.118380546569824
    10. ' index' → logprob: -11.243380546569824

Token 177: ' tableau' (ID: 67053)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7108181715011597
    2. ' n' → logprob: -0.8358181715011597
    3. 'e' → logprob: -3.335818290710449
    4. 'i' → logprob: -4.085818290710449
    5. ' i' → logprob: -4.710818290710449
    6. ' nombre' → logprob: -6.085818290710449
    7. 'indice' → logprob: -6.335818290710449
    8. ' ' → logprob: -6.835818290710449
    9. 'd' → logprob: -6.960818290710449
    10. 's' → logprob: -6.960818290710449

Token 178: ' tri' (ID: 12665)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.2756660282611847
    2. ' pair' → logprob: -2.2756659984588623
    3. 'd' → logprob: -3.0256659984588623
    4. 'n' → logprob: -3.4006659984588623
    5. ' d' → logprob: -4.275666236877441
    6. '   ' → logprob: -4.275666236877441
    7. 'de' → logprob: -4.775666236877441
    8. ' de' → logprob: -5.025666236877441
    9. ' n' → logprob: -5.775666236877441
    10. 'even' → logprob: -6.150666236877441

Token 179: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05898953229188919
    2. 'é' → logprob: -4.058989524841309
    3. 'd' → logprob: -4.558989524841309
    4. 'isé' → logprob: -4.933989524841309
    5. 'e' → logprob: -5.058989524841309
    6. ' d' → logprob: -5.933989524841309
    7. 'def' → logprob: -6.183989524841309
    8. '  ' → logprob: -6.433989524841309
    9. '[:' → logprob: -7.058989524841309
    10. '[]' → logprob: -7.058989524841309

Token 180: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21598435938358307
    2. 'diff' → logprob: -1.8409843444824219
    3. ' if' → logprob: -4.340984344482422
    4. 'difference' → logprob: -5.965984344482422
    5. '
' → logprob: -6.090984344482422
    6. 'result' → logprob: -6.215984344482422
    7. '    
' → logprob: -6.215984344482422
    8. ' return' → logprob: -6.340984344482422
    9. 'return' → logprob: -6.465984344482422
    10. 'median' → logprob: -6.465984344482422

Token 181: ' d' (ID: 272)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.46340078115463257
    2. ' diff' → logprob: -1.7134008407592773
    3. ' if' → logprob: -2.7134008407592773
    4. 'difference' → logprob: -3.0884008407592773
    5. ' difference' → logprob: -3.9634008407592773
    6. ' la' → logprob: -4.463400840759277
    7. 'median' → logprob: -4.838400840759277
    8. ' result' → logprob: -4.838400840759277
    9. 'if' → logprob: -5.088400840759277
    10. ' median' → logprob: -5.088400840759277

Token 182: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0007266097818501294
    2. '[(' → logprob: -7.750726699829102
    3. '[' → logprob: -8.750726699829102
    4. 'n' → logprob: -9.500726699829102
    5. '[d' → logprob: -10.750726699829102
    6. ' [' → logprob: -11.000726699829102
    7. '[len' → logprob: -11.625726699829102
    8. '[
' → logprob: -12.625726699829102
    9. ' n' → logprob: -13.250726699829102
    10. 'd' → logprob: -13.375726699829102

Token 183: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.004160787910223007
    2. ' //' → logprob: -5.5041608810424805
    3. '#' → logprob: -10.37916088104248
    4. ']' → logprob: -11.37916088104248
    5. '[' → logprob: -11.50416088104248
    6. '```' → logprob: -11.50416088104248
    7. '   ' → logprob: -12.37916088104248
    8. '2' → logprob: -12.50416088104248
    9. ' ' → logprob: -12.87916088104248
    10. '/' → logprob: -13.37916088104248

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '//' → logprob: -14.125032424926758
    4. '   ' → logprob: -15.125032424926758
    5. '/' → logprob: -15.375032424926758
    6. '```' → logprob: -15.625032424926758
    7. '
' → logprob: -16.625032424926758
    8. '  ' → logprob: -17.250032424926758
    9. ']' → logprob: -17.500032424926758
    10. '２' → logprob: -17.937532424926758

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00110425625462085
    2. ' ]' → logprob: -6.876104354858398
    3. ']-' → logprob: -10.001104354858398
    4. ' -' → logprob: -12.001104354858398
    5. '-' → logprob: -12.126104354858398
    6. ']
' → logprob: -12.501104354858398
    7. '']' → logprob: -12.876104354858398
    8. ' ' → logprob: -13.626104354858398
    9. '"]' → logprob: -13.751104354858398
    10. '   ' → logprob: -14.126104354858398

Token 186: ' est' (ID: 893)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22544601559638977
    2. '-' → logprob: -1.6004459857940674
    3. '-d' → logprob: -11.350445747375488
    4. ' ' → logprob: -11.850445747375488
    5. ' ' → logprob: -12.350445747375488
    6. ')' → logprob: -13.100445747375488
    7. '[' → logprob: -13.475445747375488
    8. '<|end|>' → logprob: -13.850445747375488
    9. '-if' → logprob: -14.225445747375488
    10. ' if' → logprob: -14.225445747375488

Token 187: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7987468242645264
    2. 'le' → logprob: -1.5487468242645264
    3. ' la' → logprob: -1.6737468242645264
    4. 'l' → logprob: -2.1737468242645264
    5. ' l' → logprob: -4.4237470626831055
    6. 'd' → logprob: -5.4237470626831055
    7. '<|end|>' → logprob: -5.4237470626831055
    8. ' le' → logprob: -5.5487470626831055
    9. 'the' → logprob: -5.6737470626831055
    10. ' toujours' → logprob: -7.1737470626831055

Token 188: ' méd' (ID: 13387)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07717061042785645
    2. ' méd' → logprob: -2.8271706104278564
    3. 'mé' → logprob: -4.952170372009277
    4. 'élé' → logprob: -6.077170372009277
    5. 'med' → logprob: -6.577170372009277
    6. 'val' → logprob: -6.702170372009277
    7. 'median' → logprob: -6.827170372009277
    8. 'position' → logprob: -7.577170372009277
    9. ' valeur' → logprob: -8.077170372009277
    10. '```' → logprob: -8.077170372009277

Token 189: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.03655273839831352
    2. 'ian' → logprob: -3.536552667617798
    3. 'd' → logprob: -5.536552906036377
    4. '   ' → logprob: -6.911552906036377
    5. 'iana' → logprob: -8.411552429199219
    6. 'ianne' → logprob: -8.536552429199219
    7. ']' → logprob: -8.661552429199219
    8. 'ane' → logprob: -8.911552429199219
    9. ' ' → logprob: -9.411552429199219
    10. '```' → logprob: -9.536552429199219

Token 190: ' "' (ID: 392)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.5959157943725586
    2. ' haute' → logprob: -1.2209157943725586
    3. ' -' → logprob: -3.0959157943725586
    4. '-ha' → logprob: -3.0959157943725586
    5. 'high' → logprob: -3.7209157943725586
    6. '-' → logprob: -4.595915794372559
    7. ' haut' → logprob: -5.470915794372559
    8. '<|end|>' → logprob: -5.470915794372559
    9. 'b' → logprob: -5.595915794372559
    10. 'haut' → logprob: -5.595915794372559

Token 191: 'ha' (ID: 1716)
  Prédit: 'ha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.496795654296875
    2. ' haute' → logprob: -0.996795654296875
    3. '-ha' → logprob: -4.621795654296875
    4. '```' → logprob: -6.496795654296875
    5. 'b' → logprob: -6.621795654296875
    6. 'haut' → logprob: -6.621795654296875
    7. ' supérieure' → logprob: -6.746795654296875
    8. 'high' → logprob: -6.871795654296875
    9. 'sup' → logprob: -6.871795654296875
    10. ' ha' → logprob: -6.996795654296875

Token 192: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.001507601235061884
    2. 'ut' → logprob: -7.376507759094238
    3. 'u' → logprob: -7.876507759094238
    4. 'te' → logprob: -8.376507759094238
    5. ']' → logprob: -9.876507759094238
    6. '</' → logprob: -10.501507759094238
    7. ' ute' → logprob: -10.501507759094238
    8. 'ude' → logprob: -10.626507759094238
    9. '```' → logprob: -10.626507759094238
    10. 'UTE' → logprob: -10.626507759094238

Token 193: '",' (ID: 672)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19305507838726044
    2. ']' → logprob: -2.1930551528930664
    3. ')' → logprob: -3.5680551528930664
    4. '-' → logprob: -4.068055152893066
    5. '   ' → logprob: -4.943055152893066
    6. '"' → logprob: -5.193055152893066
    7. ' ]' → logprob: -6.193055152893066
    8. ' ' → logprob: -6.943055152893066
    9. '```' → logprob: -7.568055152893066
    10. ' )' → logprob: -7.818055152893066

Token 194: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9649508595466614
    2. ' d' → logprob: -1.0899507999420166
    3. 'd' → logprob: -1.9649507999420166
    4. 'diff' → logprob: -2.2149507999420166
    5. ' return' → logprob: -3.9649507999420166
    6. 'return' → logprob: -5.464951038360596
    7. 'difference' → logprob: -5.464951038360596
    8. ' diff' → logprob: -6.589951038360596
    9. 'result' → logprob: -6.964951038360596
    10. ' ' → logprob: -7.214951038360596

Token 195: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0003143704670947045
    2. '[' → logprob: -8.375314712524414
    3. '[n' → logprob: -10.375314712524414
    4. ' [(' → logprob: -10.750314712524414
    5. '[
' → logprob: -11.375314712524414
    6. '[((' → logprob: -11.375314712524414
    7. '   ' → logprob: -12.875314712524414
    8. '```' → logprob: -13.750314712524414
    9. ' ' → logprob: -14.125314712524414
    10. '((' → logprob: -14.375314712524414

Token 196: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1466575413942337
    2. ' (' → logprob: -2.8966574668884277
    3. '(n' → logprob: -3.1466574668884277
    4. ' n' → logprob: -3.2716574668884277
    5. '   ' → logprob: -8.521657943725586
    6. ' ' → logprob: -10.146657943725586
    7. '    ' → logprob: -12.021657943725586
    8. '  ' → logprob: -12.146657943725586
    9. '(' → logprob: -12.521657943725586
    10. '	n' → logprob: -12.896657943725586

Token 197: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0059577180072665215
    2. ' -' → logprob: -5.13095760345459
    3. ' ' → logprob: -11.75595760345459
    4. '   ' → logprob: -11.88095760345459
    5. '//' → logprob: -12.13095760345459
    6. '
' → logprob: -12.75595760345459
    7. '```' → logprob: -13.13095760345459
    8. '	' → logprob: -13.63095760345459
    9. '-
' → logprob: -15.00595760345459
    10. '1' → logprob: -15.13095760345459

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -11.37502670288086
    3. '```' → logprob: -11.37502670288086
    4. '   ' → logprob: -13.62502670288086
    5. '2' → logprob: -13.87502670288086
    6. '(' → logprob: -14.25002670288086
    7. '
' → logprob: -15.25002670288086
    8. '-' → logprob: -16.00002670288086
    9. '``' → logprob: -16.43752670288086
    10. '3' → logprob: -16.81252670288086

Token 199: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.00022010602697264403
    2. ')' → logprob: -9.12522029876709
    3. '//' → logprob: -9.37522029876709
    4. ' )' → logprob: -10.75022029876709
    5. ']' → logprob: -13.62522029876709
    6. '}//' → logprob: -13.75022029876709
    7. ')]' → logprob: -14.37522029876709
    8. '   ' → logprob: -14.50022029876709
    9. '']//' → logprob: -14.50022029876709
    10. ' ' → logprob: -15.37522029876709

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. '```' → logprob: -14.875041007995605
    5. '
' → logprob: -15.250041007995605
    6. '1' → logprob: -15.625041007995605
    7. '۲' → logprob: -16.875041961669922
    8. '    ' → logprob: -16.875041961669922
    9. '  ' → logprob: -17.250041961669922
    10. ')' → logprob: -17.375041961669922

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002470350591465831
    2. ' ]' → logprob: -8.75024700164795
    3. '])' → logprob: -10.37524700164795
    4. ']
' → logprob: -10.50024700164795
    5. ')]' → logprob: -10.75024700164795
    6. ')' → logprob: -12.87524700164795
    7. '   ' → logprob: -14.25024700164795
    8. 'd' → logprob: -14.25024700164795
    9. ']]' → logprob: -14.37524700164795
    10. ']

' → logprob: -14.50024700164795

Token 202: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04324512183666229
    2. ' ]' → logprob: -3.6682450771331787
    3. '<|end|>' → logprob: -4.168245315551758
    4. ')' → logprob: -7.793245315551758
    5. ' -' → logprob: -7.918245315551758
    6. ' ' → logprob: -9.168245315551758
    7. '<|end|>' → logprob: -9.793245315551758
    8. ' is' → logprob: -9.918245315551758
    9. ']
' → logprob: -10.293245315551758
    10. '])' → logprob: -10.293245315551758

Token 203: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' méd' (ID: 13387)
  Prédit: ' méd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méd' → logprob: -0.6900168061256409
    2. ' "' → logprob: -0.9400168061256409
    3. '"' → logprob: -2.315016746520996
    4. ' median' → logprob: -6.190016746520996
    5. 'm' → logprob: -6.815016746520996
    6. 'med' → logprob: -6.940016746520996
    7. ']' → logprob: -7.440016746520996
    8. 'mé' → logprob: -7.565016746520996
    9. 'median' → logprob: -7.565016746520996
    10. ' ' → logprob: -7.815016746520996

Token 205: 'iane' (ID: 39704)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15674883127212524
    2. 'a' → logprob: -2.6567487716674805
    3. 'd' → logprob: -2.7817487716674805
    4. ')' → logprob: -5.6567487716674805
    5. 'ia' → logprob: -6.6567487716674805
    6. 'ian' → logprob: -6.7817487716674805
    7. ']]' → logprob: -7.0317487716674805
    8. 'n' → logprob: -7.1567487716674805
    9. '])' → logprob: -7.1567487716674805
    10. '']' → logprob: -7.1567487716674805

Token 206: ' "' (ID: 392)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5972369909286499
    2. ' "' → logprob: -1.34723699092865
    3. '"' → logprob: -2.0972371101379395
    4. '<|end|>' → logprob: -3.4722371101379395
    5. '_low' → logprob: -5.3472371101379395
    6. ')' → logprob: -5.3472371101379395
    7. '"]' → logprob: -5.4722371101379395
    8. '[' → logprob: -5.5972371101379395
    9. ' -' → logprob: -5.7222371101379395
    10. '```' → logprob: -5.8472371101379395

Token 207: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023297889158129692
    2. ' basse' → logprob: -4.0232977867126465
    3. 'bas' → logprob: -6.2732977867126465
    4. '```' → logprob: -7.0232977867126465
    5. '"' → logprob: -7.3982977867126465
    6. '")' → logprob: -7.8982977867126465
    7. 'ha' → logprob: -7.8982977867126465
    8. ')' → logprob: -8.273298263549805
    9. ']' → logprob: -8.398298263549805
    10. ' "' → logprob: -8.898298263549805

Token 208: 'asse' (ID: 5788)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009929145453497767
    2. 'r' → logprob: -8.125992774963379
    3. '//' → logprob: -8.375992774963379
    4. '])' → logprob: -8.500992774963379
    5. ')]' → logprob: -8.875992774963379
    6. ')' → logprob: -9.875992774963379
    7. '']' → logprob: -11.000992774963379
    8. ' ]' → logprob: -11.500992774963379
    9. ']))' → logprob: -11.750992774963379
    10. '"]' → logprob: -12.000992774963379

Token 209: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024996858090162277
    2. '   ' → logprob: -4.399996757507324
    3. ']' → logprob: -4.649996757507324
    4. ')
' → logprob: -6.274996757507324
    5. '}' → logprob: -8.024996757507324
    6. 'return' → logprob: -8.149996757507324
    7. ' )' → logprob: -9.649996757507324
    8. '```' → logprob: -9.649996757507324
    9. ')return' → logprob: -10.399996757507324
    10. '[' → logprob: -10.399996757507324

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20611131191253662
    2. ' return' → logprob: -2.331111431121826
    3. 'return' → logprob: -2.456111431121826
    4. 'diff' → logprob: -6.831111431121826
    5. 'result' → logprob: -7.081111431121826
    6. '    
' → logprob: -7.581111431121826
    7. '
' → logprob: -7.581111431121826
    8. ' result' → logprob: -9.206110954284668
    9. '```' → logprob: -10.331110954284668
    10. ' diff' → logprob: -10.456110954284668

Token 211: ' result' (ID: 1534)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6257820725440979
    2. 'print' → logprob: -1.1257820129394531
    3. 'difference' → logprob: -2.625782012939453
    4. 'result' (adapté à ' result') → logprob: -3.500782012939453
    5. 'return' → logprob: -3.875782012939453
    6. ' print' → logprob: -5.000782012939453
    7. ' diff' → logprob: -5.375782012939453
    8. '   ' → logprob: -5.750782012939453
    9. ' result' → logprob: -6.875782012939453
    10. ' return' → logprob: -6.875782012939453

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029800478368997574
    2. '=' → logprob: -3.5298004150390625
    3. '_' → logprob: -10.529800415039062
    4. ' ' → logprob: -11.029800415039062
    5. 'space' → logprob: -13.154800415039062
    6. 's' → logprob: -13.654800415039062
    7. '   ' → logprob: -14.154800415039062
    8. ')' → logprob: -14.279800415039062
    9. ' ' → logprob: -14.279800415039062
    10. ' =
' → logprob: -14.404800415039062

Token 213: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06196802109479904
    2. 'd' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.811967849731445
    4. ' ' → logprob: -16.561967849731445
    5. '	d' → logprob: -16.561967849731445
    6. '   ' → logprob: -17.436967849731445
    7. '(d' → logprob: -18.061967849731445
    8. '  ' → logprob: -19.436967849731445
    9. '`' → logprob: -19.686967849731445
    10. '>d' → logprob: -19.686967849731445

Token 214: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0015211685094982386
    2. '[' → logprob: -6.501521110534668
    3. ' [' → logprob: -11.251521110534668
    4. '[(' → logprob: -12.501521110534668
    5. '[
' → logprob: -13.876521110534668
    6. '[d' → logprob: -14.626521110534668
    7. 'n' → logprob: -15.751521110534668
    8. '[int' → logprob: -16.251522064208984
    9. '```' → logprob: -16.626522064208984
    10. '[num' → logprob: -17.001522064208984

Token 215: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0013310716021806002
    2. ' //' → logprob: -6.626330852508545
    3. ']' → logprob: -12.876331329345703
    4. '[' → logprob: -13.626331329345703
    5. '#' → logprob: -14.751331329345703
    6. '```' → logprob: -14.751331329345703
    7. '//
' → logprob: -15.626331329345703
    8. ')//' → logprob: -16.001331329345703
    9. '://' → logprob: -16.626331329345703
    10. '   ' → logprob: -16.626331329345703

Token 216: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.125003814697266
    4. '```' → logprob: -18.375003814697266
    5. '  ' → logprob: -19.000003814697266
    6. '۲' → logprob: -19.250003814697266
    7. '２' → logprob: -20.125003814697266
    8. '[' → logprob: -20.125003814697266
    9. '/' → logprob: -20.937503814697266
    10. '२' → logprob: -21.250003814697266

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -18.625
    5. '２' → logprob: -19.0
    6. '
' → logprob: -19.0
    7. '۲' → logprob: -19.75
    8. '  ' → logprob: -20.0
    9. '

' → logprob: -21.0
    10. '२' → logprob: -22.125

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030436101951636374
    2. ' ]' → logprob: -8.125304222106934
    3. ']-' → logprob: -12.250304222106934
    4. '-' → logprob: -13.375304222106934
    5. ' -' → logprob: -13.500304222106934
    6. ']
' → logprob: -15.125304222106934
    7. ')' → logprob: -16.25030517578125
    8. '']' → logprob: -16.37530517578125
    9. '"]' → logprob: -16.75030517578125
    10. ' ' → logprob: -16.75030517578125

Token 219: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018150877207517624
    2. '-' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.76815128326416
    4. ' -
' → logprob: -15.64315128326416
    5. ' ' → logprob: -15.89315128326416
    6. ')' → logprob: -16.018150329589844
    7. ' –' → logprob: -17.518150329589844
    8. '[' → logprob: -17.893150329589844
    9. '-d' → logprob: -18.018150329589844
    10. '_' → logprob: -18.393150329589844

Token 220: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6931489109992981
    2. ' d' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.443148612976074
    4. '	d' → logprob: -15.568148612976074
    5. ' ' → logprob: -16.31814956665039
    6. '_d' → logprob: -18.06814956665039
    7. '&nbsp' → logprob: -18.69314956665039
    8. '   ' → logprob: -18.69314956665039
    9. '  ' → logprob: -18.81814956665039
    10. '(d' → logprob: -19.06814956665039

Token 221: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.6047699318733066e-05
    2. '[((' → logprob: -11.250016212463379
    3. '[' → logprob: -13.500016212463379
    4. '[
' → logprob: -13.625016212463379
    5. '((' → logprob: -15.375016212463379
    6. ' [(' → logprob: -16.250015258789062
    7. '```' → logprob: -17.375015258789062
    8. '[n' → logprob: -18.125015258789062
    9. '([(' → logprob: -18.375015258789062
    10. '[-' → logprob: -20.000015258789062

Token 222: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017177811823785305
    2. '(n' → logprob: -6.376717567443848
    3. ' n' → logprob: -11.251717567443848
    4. ' (' → logprob: -13.126717567443848
    5. '   ' → logprob: -14.501717567443848
    6. '	n' → logprob: -17.376718521118164
    7. ')n' → logprob: -17.501718521118164
    8. '(' → logprob: -18.126718521118164
    9. ''n' → logprob: -18.251718521118164
    10. ' ' → logprob: -18.501718521118164

Token 223: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003207181114703417
    2. ' -' → logprob: -5.753207206726074
    3. '   ' → logprob: -11.753207206726074
    4. '1' → logprob: -12.003207206726074
    5. '(' → logprob: -12.253207206726074
    6. ' ' → logprob: -13.128207206726074
    7. ')' → logprob: -13.253207206726074
    8. '-
' → logprob: -13.628207206726074
    9. '
' → logprob: -14.253207206726074
    10. '[' → logprob: -14.378207206726074

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '```' → logprob: -16.750001907348633
    5. '
' → logprob: -18.125001907348633
    6. ')' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.562501907348633
    8. '  ' → logprob: -20.250001907348633
    9. '۱' → logprob: -20.562501907348633
    10. '

' → logprob: -20.625001907348633

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '
' → logprob: -18.375001907348633
    6. ')' → logprob: -19.000001907348633
    7. '2' → logprob: -19.250001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '

' → logprob: -20.312501907348633
    10. '۱' → logprob: -20.812501907348633

Token 226: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.432187020778656
    2. ')//' → logprob: -1.0571870803833008
    3. '//' → logprob: -6.307187080383301
    4. ']' → logprob: -7.182187080383301
    5. ' )' → logprob: -7.307187080383301
    6. ' //' → logprob: -9.3071870803833
    7. ')]' → logprob: -10.0571870803833
    8. '   ' → logprob: -10.1821870803833
    9. ')#' → logprob: -11.4321870803833
    10. '2' → logprob: -11.9321870803833

Token 227: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.171351358294487
    2. ' //' → logprob: -1.9213513135910034
    3. ']' → logprob: -4.921351432800293
    4. ')' → logprob: -5.921351432800293
    5. ')//' → logprob: -7.171351432800293
    6. '2' → logprob: -8.796351432800293
    7. '   ' → logprob: -10.296351432800293
    8. ' ' → logprob: -10.546351432800293
    9. ' ]' → logprob: -10.921351432800293
    10. '#' → logprob: -11.421351432800293

Token 228: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.37523078918457
    4. '۲' → logprob: -16.00023078918457
    5. '```' → logprob: -16.50023078918457
    6. ')' → logprob: -17.43773078918457
    7. '
' → logprob: -17.62523078918457
    8. '  ' → logprob: -17.68773078918457
    9. '<|end|>' → logprob: -18.12523078918457
    10. '２' → logprob: -18.18773078918457

Token 229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۲' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '２' → logprob: -18.625001907348633
    6. '```' → logprob: -18.750001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '२' → logprob: -20.125001907348633
    9. '٢' → logprob: -20.375001907348633
    10. '২' → logprob: -20.500001907348633

Token 230: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000287795381154865
    2. ')' → logprob: -8.375288009643555
    3. ']
' → logprob: -10.250288009643555
    4. '])' → logprob: -11.250288009643555
    5. ')]' → logprob: -12.125288009643555
    6. ' ]' → logprob: -12.750288009643555
    7. ']

' → logprob: -15.500288009643555
    8. '   ' → logprob: -15.875288009643555
    9. '']' → logprob: -16.500288009643555
    10. '}' → logprob: -17.000288009643555

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009712181985378265
    2. 'print' → logprob: -4.759712219238281
    3. '
' → logprob: -6.884712219238281
    4. '    
' → logprob: -9.759712219238281
    5. ' print' → logprob: -11.509712219238281
    6. '```' → logprob: -12.759712219238281
    7. '	print' → logprob: -12.884712219238281
    8. '  
' → logprob: -14.759712219238281
    9. '
' → logprob: -16.25971221923828
    10. '   
' → logprob: -17.13471221923828

Token 232: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.576854407787323
    2. 'print' → logprob: -0.826854407787323
    3. ' print' → logprob: -7.076854228973389
    4. '
' → logprob: -9.951854705810547
    5. '```' → logprob: -11.451854705810547
    6. '    
' → logprob: -11.951854705810547
    7. '	print' → logprob: -12.201854705810547
    8. 'return' → logprob: -16.201854705810547
    9. '       ' → logprob: -16.576854705810547
    10. '#print' → logprob: -17.076854705810547

Token 233: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008615754544734955
    2. ' print' → logprob: -4.758615970611572
    3. '   ' → logprob: -13.633615493774414
    4. 'return' → logprob: -17.258615493774414
    5. '```' → logprob: -17.758615493774414
    6. 'Print' → logprob: -19.758615493774414
    7. '	print' → logprob: -20.133615493774414
    8. ' return' → logprob: -21.008615493774414
    9. 'pr' → logprob: -21.133615493774414
    10. '#print' → logprob: -21.508615493774414

Token 234: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.13081134855747223
    2. 'icher' → logprob: -2.2558114528656006
    3. 'ichage' → logprob: -4.6308112144470215
    4. 'f' → logprob: -5.6308112144470215
    5. 'ich' → logprob: -6.3808112144470215
    6. '#' → logprob: -6.6308112144470215
    7. 'ic' → logprob: -6.8808112144470215
    8. '   ' → logprob: -8.25581169128418
    9. 'i' → logprob: -9.25581169128418
    10. '```' → logprob: -10.25581169128418

Token 235: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474807471036911
    2. '(result' → logprob: -0.9748075008392334
    3. '()' → logprob: -7.849807262420654
    4. '   ' → logprob: -9.224807739257812
    5. 'result' → logprob: -9.224807739257812
    6. '(print' → logprob: -9.599807739257812
    7. '(
' → logprob: -10.599807739257812
    8. '(f' → logprob: -10.724807739257812
    9. '('' → logprob: -11.599807739257812
    10. '("' → logprob: -11.724807739257812

Token 236: ' résultat' (ID: 62556)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3868732452392578
    2. 'result' → logprob: -1.1368732452392578
    3. ' resultat' → logprob: -13.261873245239258
    4. '(result' → logprob: -15.136873245239258
    5. ' résultat' → logprob: -16.636873245239258
    6. ' ' → logprob: -17.386873245239258
    7. 'print' → logprob: -17.636873245239258
    8. ' results' → logprob: -17.636873245239258
    9. ' ' → logprob: -17.761873245239258
    10. '"' → logprob: -17.886873245239258

Token 237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5181697607040405
    2. 'print' → logprob: -1.2681697607040405
    3. '
' → logprob: -2.14316987991333
    4. ' print' → logprob: -5.26816987991333
    5. '    
' → logprob: -8.268169403076172
    6. '```' → logprob: -8.393169403076172
    7. '  
' → logprob: -10.018169403076172
    8. '	print' → logprob: -10.518169403076172
    9. '
' → logprob: -11.018169403076172
    10. '\n' → logprob: -11.143169403076172

Token 238: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0370880626142025
    2. ' print' → logprob: -3.78708815574646
    3. '   ' → logprob: -4.287087917327881
    4. '```' → logprob: -13.037088394165039
    5. '	print' → logprob: -16.53708839416504
    6. '(print' → logprob: -18.53708839416504
    7. '.print' → logprob: -18.78708839416504
    8. '    
' → logprob: -18.91208839416504
    9. '``' → logprob: -19.28708839416504
    10. '
' → logprob: -19.41208839416504

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -19.000001907348633
    5. 'pr' → logprob: -23.875001907348633
    6. 'prin' → logprob: -25.250001907348633
    7. '`' → logprob: -25.500001907348633
    8. '	print' → logprob: -26.125001907348633
    9. 'printf' → logprob: -26.625001907348633
    10. 'Print' → logprob: -26.625001907348633

Token 240: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132902979850769
    2. '(result' → logprob: -1.3132903575897217
    3. '()' → logprob: -10.8132905960083
    4. '(
' → logprob: -12.8132905960083
    5. '(res' → logprob: -13.4382905960083
    6. ' (' → logprob: -13.9382905960083
    7. '(

' → logprob: -14.3132905960083
    8. 'result' → logprob: -14.4382905960083
    9. '('' → logprob: -14.5632905960083
    10. '(results' → logprob: -14.8132905960083

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -16.0
    3. ' )' → logprob: -16.125
    4. '())' → logprob: -17.25
    5. ')
' → logprob: -17.875
    6. ')`' → logprob: -17.875
    7. '))' → logprob: -19.0
    8. '(' → logprob: -20.5
    9. '')' → logprob: -20.625
    10. '`)' → logprob: -21.125

Token 242: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' App' (ID: 2583)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.7613309621810913
    2. 'c' → logprob: -0.8863309621810913
    3. 'def' → logprob: -3.011331081390381
    4. '#' → logprob: -4.261331081390381
    5. '```' → logprob: -4.261331081390381
    6. 'd' → logprob: -4.386331081390381
    7. '\n' → logprob: -5.011331081390381
    8. '
' → logprob: -5.011331081390381
    9. '<|end|>' → logprob: -5.511331081390381
    10. ' calculate' → logprob: -5.511331081390381

Token 244: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.04302453622221947
    2. 'le' → logprob: -3.2930245399475098
    3. 'l' → logprob: -6.29302453994751
    4. '#' → logprob: -7.29302453994751
    5. 'e' → logprob: -7.29302453994751
    6. 'elé' → logprob: -7.66802453994751
    7. 'eler' → logprob: -8.168024063110352
    8. 'ly' → logprob: -8.668024063110352
    9. 'ele' → logprob: -8.918024063110352
    10. 'la' → logprob: -9.043024063110352

Token 245: ' de' (ID: 334)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5092501044273376
    2. '(' → logprob: -1.5092501640319824
    3. 'calculate' → logprob: -1.7592501640319824
    4. 'def' → logprob: -6.259250164031982
    5. 'c' → logprob: -6.759250164031982
    6. ' calculate' → logprob: -7.009250164031982
    7. '_c' → logprob: -7.384250164031982
    8. 'alculate' → logprob: -7.884250164031982
    9. '()' → logprob: -8.009249687194824
    10. '_' → logprob: -8.384249687194824

Token 246: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0011703446507453918
    2. ' calculate' → logprob: -6.7511701583862305
    3. 'calcul' → logprob: -15.87617015838623
    4. 'compute' → logprob: -17.001171112060547
    5. 'alculate' → logprob: -17.876171112060547
    6. 'c' → logprob: -18.376171112060547
    7. 'calculator' → logprob: -18.626171112060547
    8. 'cal' → logprob: -19.126171112060547
    9. '.calculate' → logprob: -19.876171112060547
    10. 'calc' → logprob: -19.876171112060547

Token 247: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0001249925117008388
    2. ' calculate' → logprob: -9.00012493133545
    3. 'def' → logprob: -13.50012493133545
    4. 'define' → logprob: -17.500125885009766
    5. 'calcul' → logprob: -17.625125885009766
    6. 'function' → logprob: -18.125125885009766
    7. 'compute' → logprob: -18.125125885009766
    8. 'alculate' → logprob: -19.000125885009766
    9. 'c' → logprob: -19.250125885009766
    10. 'Calculate' → logprob: -19.625125885009766

Token 248: ' principale' (ID: 68926)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: 0.0
    2. ' calculate' → logprob: -17.125
    3. '
' → logprob: -17.875
    4. '.calculate' → logprob: -18.75
    5. '```' → logprob: -20.375
    6. 'compute' → logprob: -20.5
    7. 'alculate' → logprob: -20.75
    8. 'def' → logprob: -20.875
    9. 'Calculate' → logprob: -21.125
    10. 'calc' → logprob: -21.375

Token 249: '
' (ID: 198)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.048651404678821564
    2. '
' → logprob: -3.0486514568328857
    3. ' calculate' → logprob: -10.923651695251465
    4. '\' → logprob: -11.423651695251465
    5. '

' → logprob: -11.798651695251465
    6. '\n' → logprob: -11.798651695251465
    7. '  
' → logprob: -12.548651695251465
    8. '
' → logprob: -12.673651695251465
    9. '()
' → logprob: -12.923651695251465
    10. 'c' → logprob: -13.298651695251465

Token 250: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: 0.0
    2. ' calculate' → logprob: -17.75
    3. 'calc' → logprob: -20.875
    4. 'calculator' → logprob: -21.0
    5. 'calcul' → logprob: -21.375
    6. '.calculate' → logprob: -22.5
    7. 'compute' → logprob: -23.125
    8. 'cal' → logprob: -23.25
    9. '```' → logprob: -24.125
    10. 'alculate' → logprob: -24.875

Token 251: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.31326615810394287
    2. '_' → logprob: -1.3132661581039429
    3. '(' → logprob: -13.563265800476074
    4. ' _' → logprob: -13.938265800476074
    5. '_)' → logprob: -14.563265800476074
    6. '_M' → logprob: -14.688265800476074
    7. '_difference' → logprob: -15.563265800476074
    8. '_med' → logprob: -15.813265800476074
    9. '_
' → logprob: -16.31326675415039
    10. ')' → logprob: -16.68826675415039

Token 252: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.005576425231993198
    2. 'ed' → logprob: -5.2555766105651855
    3. 'ean' → logprob: -9.130576133728027
    4. 'edia' → logprob: -9.880576133728027
    5. 'e' → logprob: -9.880576133728027
    6. 'edi' → logprob: -10.380576133728027
    7. 'edians' → logprob: -10.505576133728027
    8. 'adian' → logprob: -11.255576133728027
    9. '_' → logprob: -11.380576133728027
    10. 'median' → logprob: -11.505576133728027

Token 253: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.02362569235265255
    2. '_' → logprob: -3.773625612258911
    3. '_d' → logprob: -8.148625373840332
    4. 'difference' → logprob: -9.648625373840332
    5. '_diff' → logprob: -10.898625373840332
    6. 'Difference' → logprob: -12.523625373840332
    7. ' difference' → logprob: -13.773625373840332
    8. '_distance' → logprob: -14.773625373840332
    9. '_m' → logprob: -14.898625373840332
    10. '(' → logprob: -14.898625373840332

Token 254: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004414570517838001
    2. '(' → logprob: -5.6294145584106445
    3. '<|end|>' → logprob: -8.254414558410645
    4. ')' → logprob: -8.504414558410645
    5. '()
' → logprob: -9.129414558410645
    6. '```' → logprob: -9.879414558410645
    7. '\' → logprob: -10.004414558410645
    8. '\n' → logprob: -10.004414558410645
    9. '#' → logprob: -10.629414558410645
    10. '
' → logprob: -10.629414558410645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 252
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 40.87%
Précision adaptée (1ère position): 42.06%
Précision (top 10): 70.24%
================================================================================
