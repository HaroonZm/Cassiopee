================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(s if (a := int(input())) >= 3200 else 'red') or input()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(s' (ID: 1858)
  → Token d'amorce (pas de prédiction)

Token 2: ' if' (ID: 538)
  → Token d'amorce (pas de prédiction)

Token 3: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.26869362592697144
    2. ' ' → logprob: -2.018693685531616
    3. ' not' → logprob: -3.143693685531616
    4. 's' → logprob: -4.143693447113037
    5. ' isinstance' → logprob: -4.518693447113037
    6. '  ' → logprob: -4.643693447113037
    7. ' ==' → logprob: -4.768693447113037
    8. ' )' → logprob: -5.393693447113037
    9. ' True' → logprob: -6.393693447113037
    10. '_' → logprob: -6.643693447113037

Token 4: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.053709931671619415
    2. ' s' → logprob: -3.1787099838256836
    3. 'condition' → logprob: -6.053709983825684
    4. ' not' → logprob: -6.428709983825684
    5. 'not' → logprob: -6.428709983825684
    6. 'len' → logprob: -6.928709983825684
    7. 'x' → logprob: -7.303709983825684
    8. ')' → logprob: -7.553709983825684
    9. ' condition' → logprob: -8.053709983825684
    10. 'i' → logprob: -8.053709983825684

Token 5: ' :=' (ID: 3405)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.647417426109314
    2. '==' → logprob: -1.397417426109314
    3. ' >' → logprob: -2.1474175453186035
    4. ')' → logprob: -2.7724175453186035
    5. '>' → logprob: -3.7724175453186035
    6. ' )' → logprob: -4.6474175453186035
    7. ' ' → logprob: -4.8974175453186035
    8. ' else' → logprob: -6.2724175453186035
    9. ' >=' → logprob: -6.2724175453186035
    10. ' and' → logprob: -6.5224175453186035

Token 6: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1543303728103638
    2. 'b' → logprob: -1.2793303728103638
    3. 'a' → logprob: -1.9043303728103638
    4. ' b' → logprob: -2.279330253601074
    5. ' input' → logprob: -2.529330253601074
    6. 's' → logprob: -3.529330253601074
    7. 'len' → logprob: -4.154330253601074
    8. ' a' → logprob: -4.279330253601074
    9. ' s' → logprob: -5.529330253601074
    10. ' True' → logprob: -6.279330253601074

Token 7: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5455865859985352
    2. '(' → logprob: -0.9205865859985352
    3. '(a' → logprob: -4.920586585998535
    4. '(s' → logprob: -5.420586585998535
    5. '(x' → logprob: -5.545586585998535
    6. '(user' → logprob: -6.295586585998535
    7. '('' → logprob: -6.420586585998535
    8. '(value' → logprob: -7.045586585998535
    9. '((' → logprob: -7.295586585998535
    10. '(expression' → logprob: -7.795586585998535

Token 8: '()))' (ID: 16829)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7527810335159302
    2. '()))' → logprob: -1.2527810335159302
    3. '(' → logprob: -1.8777810335159302
    4. '("("' → logprob: -2.7527809143066406
    5. '())' → logprob: -4.877780914306641
    6. '()' → logprob: -5.252780914306641
    7. '(()' → logprob: -5.627780914306641
    8. '())))' → logprob: -6.002780914306641
    9. '("' → logprob: -6.252780914306641
    10. '(""))' → logprob: -6.502780914306641

Token 9: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3934859037399292
    2. '>' → logprob: -1.5184859037399292
    3. '>=' → logprob: -3.5184860229492188
    4. ' )' → logprob: -3.6434860229492188
    5. ' >' → logprob: -4.393486022949219
    6. '```' → logprob: -4.893486022949219
    7. ' >=' → logprob: -5.143486022949219
    8. '<' → logprob: -5.643486022949219
    9. ')>' → logprob: -5.768486022949219
    10. ' else' → logprob: -6.018486022949219

Token 10: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5375013947486877
    2. ' ' → logprob: -1.037501335144043
    3. '10' → logprob: -2.912501335144043
    4. '1' → logprob: -5.662501335144043
    5. '18' → logprob: -6.662501335144043
    6. '5' → logprob: -6.787501335144043
    7. '100' → logprob: -7.662501335144043
    8. '50' → logprob: -8.787501335144043
    9. '20' → logprob: -8.912501335144043
    10. '2' → logprob: -9.037501335144043

Token 11: '320' (ID: 15415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014323215931653976
    2. '10' → logprob: -4.7643232345581055
    3. '1' → logprob: -6.3893232345581055
    4. '18' → logprob: -6.6393232345581055
    5. '5' → logprob: -7.3893232345581055
    6. ' ' → logprob: -7.6393232345581055
    7. '100' → logprob: -8.014323234558105
    8. 's' → logprob: -8.139323234558105
    9. '3' → logprob: -8.264323234558105
    10. '2' → logprob: -8.514323234558105

Token 12: '0' (ID: 15)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12340915948152542
    2. 'else' → logprob: -2.8734092712402344
    3. ')' → logprob: -2.9984092712402344
    4. '0' → logprob: -5.373409271240234
    5. ' and' → logprob: -6.498409271240234
    6. ' ' → logprob: -6.623409271240234
    7. ' )' → logprob: -7.248409271240234
    8. '```' → logprob: -7.373409271240234
    9. 'and' → logprob: -7.998409271240234
    10. ':' → logprob: -9.873409271240234

Token 13: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018525531515479088
    2. 'else' → logprob: -4.39352560043335
    3. ')' → logprob: -5.14352560043335
    4. ' ' → logprob: -9.518525123596191
    5. ' and' → logprob: -10.518525123596191
    6. ' )' → logprob: -10.518525123596191
    7. '```' → logprob: -10.893525123596191
    8. '))' → logprob: -13.143525123596191
    9. '	else' → logprob: -13.393525123596191
    10. 'and' → logprob: -13.643525123596191

Token 14: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.790378749370575
    2. '"' → logprob: -1.5403788089752197
    3. ''' → logprob: -2.6653788089752197
    4. ''s' → logprob: -2.7903788089752197
    5. '"s' → logprob: -2.7903788089752197
    6. ' s' → logprob: -3.2903788089752197
    7. 'print' → logprob: -3.6653788089752197
    8. 'n' → logprob: -4.165378570556641
    9. '''' → logprob: -4.790378570556641
    10. '""' → logprob: -4.915378570556641

Token 15: 'red' (ID: 1291)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17914405465126038
    2. 'red' → logprob: -2.6791441440582275
    3. '')' → logprob: -3.6791441440582275
    4. '''' → logprob: -4.054143905639648
    5. 'Red' → logprob: -4.929143905639648
    6. ''r' → logprob: -5.179143905639648
    7. ')' → logprob: -5.304143905639648
    8. '"' → logprob: -5.429143905639648
    9. ''s' → logprob: -5.429143905639648
    10. 's' → logprob: -5.679143905639648

Token 16: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3588407337665558
    2. ')' → logprob: -1.2338407039642334
    3. ''' → logprob: -4.8588409423828125
    4. 's' → logprob: -6.4838409423828125
    5. '")' → logprob: -7.4838409423828125
    6. ''s' → logprob: -8.358840942382812
    7. ')'' → logprob: -8.983840942382812
    8. ' )' → logprob: -10.358840942382812
    9. 'print' → logprob: -11.108840942382812
    10. '"' → logprob: -11.108840942382812

Token 17: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1930890828371048
    2. '\n' → logprob: -2.818089008331299
    3. '<|end|>' → logprob: -2.818089008331299
    4. ' ' → logprob: -3.693089008331299
    5. '\' → logprob: -3.818089008331299
    6. '' → logprob: -5.693089008331299
    7. '```' → logprob: -6.568089008331299
    8. '#' → logprob: -7.193089008331299
    9. '
' → logprob: -7.818089008331299
    10. '<|end|>' → logprob: -7.818089008331299

Token 18: ' input' (ID: 3422)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.853422224521637
    2. 's' → logprob: -1.1034221649169922
    3. 'input' → logprob: -1.9784221649169922
    4. ''s' → logprob: -3.228422164916992
    5. ' s' → logprob: -3.353422164916992
    6. ' input' → logprob: -4.103422164916992
    7. '(s' → logprob: -5.603422164916992
    8. ' print' → logprob: -5.978422164916992
    9. '`s' → logprob: -6.853422164916992
    10. 'int' → logprob: -7.103422164916992

Token 19: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 17
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 9
Précision stricte (1ère position): 17.65%
Précision adaptée (1ère position): 17.65%
Précision (top 10): 52.94%
================================================================================
