================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
if a + b == 15:
    print("+")
elif a * b == 15:
    print("*")
else:
    print("x")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5409305095672607
    2. '(input' → logprob: -1.0409305095672607
    3. '(' → logprob: -2.9159305095672607
    4. 'input' → logprob: -5.66593074798584
    5. '```' → logprob: -6.41593074798584
    6. '(user' → logprob: -6.91593074798584
    7. '`)' → logprob: -7.66593074798584
    8. ',' → logprob: -7.79093074798584
    9. '(data' → logprob: -7.91593074798584
    10. '))' → logprob: -8.29093074798584

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23583000898361206
    2. ' input' → logprob: -1.6108300685882568
    3. '(input' → logprob: -4.610829830169678
    4. ')' → logprob: -7.860829830169678
    5. '=input' → logprob: -11.860830307006836
    6. ',input' → logprob: -11.860830307006836
    7. ' )' → logprob: -12.110830307006836
    8. '<input' → logprob: -13.110830307006836
    9. 'user' → logprob: -13.110830307006836
    10. '[input' → logprob: -13.360830307006836

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8779954314231873
    2. '(' → logprob: -1.627995491027832
    3. ')' → logprob: -1.627995491027832
    4. '()' → logprob: -1.877995491027832
    5. '('' → logprob: -4.127995491027832
    6. '(()' → logprob: -5.502995491027832
    7. '`()' → logprob: -5.877995491027832
    8. '(""))' → logprob: -6.002995491027832
    9. '```' → logprob: -6.502995491027832
    10. '()))' → logprob: -6.877995491027832

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021224225929472595
    2. 'strip' → logprob: -8.500212669372559
    3. 'rstrip' → logprob: -12.125212669372559
    4. ' split' → logprob: -13.000212669372559
    5. 'read' → logprob: -14.875212669372559
    6. ')' → logprob: -15.000212669372559
    7. '(split' → logprob: -15.250212669372559
    8. 'spl' → logprob: -15.875212669372559
    9. 'startswith' → logprob: -17.375211715698242
    10. '_split' → logprob: -18.375211715698242

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13553567230701447
    2. '())' → logprob: -2.385535717010498
    3. '))' → logprob: -3.385535717010498
    4. '()' → logprob: -7.760535717010498
    5. '()))' → logprob: -8.26053524017334
    6. '`)' → logprob: -9.76053524017334
    7. '(' → logprob: -10.38553524017334
    8. ')`' → logprob: -10.51053524017334
    9. ')))' → logprob: -11.76053524017334
    10. ' )' → logprob: -11.76053524017334

Token 11: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011705600656569004
    2. '*' → logprob: -5.26170539855957
    3. '#' → logprob: -5.51170539855957
    4. '+
' → logprob: -7.26170539855957
    5. ',' → logprob: -8.13670539855957
    6. '[' → logprob: -8.26170539855957
    7. '=' → logprob: -8.76170539855957
    8. 'a' → logprob: -9.01170539855957
    9. '-' → logprob: -9.13670539855957
    10. '**' → logprob: -9.51170539855957

Token 12: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03758130967617035
    2. 'a' → logprob: -3.537581205368042
    3. ' ' → logprob: -4.912581443786621
    4. ' b' → logprob: -7.912581443786621
    5. ' ' → logprob: -10.287581443786621
    6. ' not' → logprob: -10.787581443786621
    7. 'b' → logprob: -11.412581443786621
    8. ' (' → logprob: -12.162581443786621
    9. '  ' → logprob: -13.412581443786621
    10. '(a' → logprob: -13.912581443786621

Token 13: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07491619139909744
    2. '>' → logprob: -3.324916124343872
    3. ' <' → logprob: -4.199916362762451
    4. ' ' → logprob: -4.949916362762451
    5. ' ==' → logprob: -4.949916362762451
    6. ' >=' → logprob: -5.824916362762451
    7. ' <=' → logprob: -7.074916362762451
    8. '<' → logprob: -7.074916362762451
    9. '==' → logprob: -7.324916362762451
    10. ' !=' → logprob: -7.824916362762451

Token 14: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20143954455852509
    2. ' b' → logprob: -1.7014394998550415
    3. ' ' → logprob: -11.07643985748291
    4. '1' → logprob: -11.95143985748291
    5. '<|end|>' → logprob: -13.20143985748291
    6. '>b' → logprob: -13.57643985748291
    7. '	b' → logprob: -15.07643985748291
    8. '0' → logprob: -15.20143985748291
    9. '_b' → logprob: -15.82643985748291
    10. '2' → logprob: -16.451438903808594

Token 15: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05957159027457237
    2. '>' → logprob: -3.6845715045928955
    3. ' ==' → logprob: -3.6845715045928955
    4. ' <=' → logprob: -6.059571743011475
    5. ' ' → logprob: -6.559571743011475
    6. ' >=' → logprob: -6.684571743011475
    7. '==' → logprob: -6.809571743011475
    8. ' <' → logprob: -7.434571743011475
    9. ' !=' → logprob: -8.059571266174316
    10. '<|end|>' → logprob: -8.559571266174316

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7622984051704407
    2. '10' → logprob: -0.7622984051704407
    3. '100' → logprob: -3.387298345565796
    4. '0' → logprob: -3.637298345565796
    5. '42' → logprob: -5.762298583984375
    6. '1' → logprob: -6.512298583984375
    7. '3' → logprob: -6.762298583984375
    8. '20' → logprob: -7.512298583984375
    9. '15' → logprob: -10.137298583984375
    10. '7' → logprob: -10.262298583984375

Token 17: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10880076140165329
    2. '100' → logprob: -2.8588006496429443
    3. '0' → logprob: -3.6088006496429443
    4. ' ' → logprob: -4.483800888061523
    5. '3' → logprob: -5.233800888061523
    6. '1' → logprob: -7.233800888061523
    7. '42' → logprob: -7.483800888061523
    8. '20' → logprob: -8.608800888061523
    9. '15' → logprob: -8.733800888061523
    10. '7' → logprob: -8.858800888061523

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.7252845029579476e-05
    2. ' :' → logprob: -10.625027656555176
    3. ':
' → logprob: -14.000027656555176
    4. ':**' → logprob: -14.000027656555176
    5. '):' → logprob: -14.375027656555176
    6. ' and' → logprob: -15.000027656555176
    7. ':return' → logprob: -16.62502670288086
    8. ' or' → logprob: -16.62502670288086
    9. ',' → logprob: -17.00002670288086
    10. '>:' → logprob: -17.12502670288086

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05313302204012871
    2. ' print' → logprob: -3.178133010864258
    3. ':' → logprob: -5.803133010864258
    4. 'print' → logprob: -5.928133010864258
    5. '\n' → logprob: -6.678133010864258
    6. '    ' → logprob: -7.053133010864258
    7. '\' → logprob: -7.553133010864258
    8. ' ' → logprob: -7.803133010864258
    9. '<|end|>' → logprob: -8.178133010864258
    10. '	print' → logprob: -8.553133010864258

Token 20: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0250910222530365
    2. 'print' (adapté à ' print') → logprob: -3.9000909328460693
    3. '   ' → logprob: -5.400091171264648
    4. '    ' → logprob: -11.025091171264648
    5. '	print' → logprob: -13.025091171264648
    6. '```' → logprob: -13.150091171264648
    7. '       ' → logprob: -14.400091171264648
    8. ' ' → logprob: -14.400091171264648
    9. ' pass' → logprob: -15.150091171264648
    10. '\' → logprob: -16.15009117126465

Token 21: '("+' (ID: 68159)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033510818611830473
    2. '('' → logprob: -6.128351211547852
    3. '("("' → logprob: -7.378351211547852
    4. '("' → logprob: -7.628351211547852
    5. '()' → logprob: -10.628351211547852
    6. '(True' → logprob: -11.128351211547852
    7. '(a' → logprob: -12.628351211547852
    8. '("")' → logprob: -12.753351211547852
    9. ' (' → logprob: -13.378351211547852
    10. '"' → logprob: -13.878351211547852

Token 22: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.010807623155415058
    2. ')' → logprob: -4.760807514190674
    3. '15' → logprob: -7.010807514190674
    4. '"' → logprob: -7.385807514190674
    5. ' ' → logprob: -8.635807991027832
    6. ' ")' → logprob: -8.635807991027832
    7. '""' → logprob: -9.010807991027832
    8. '')' → logprob: -9.385807991027832
    9. ')")' → logprob: -10.635807991027832
    10. ''' → logprob: -11.010807991027832

Token 23: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.28570854663848877
    2. 'else' → logprob: -1.4107085466384888
    3. ' else' → logprob: -6.410708427429199
    4. ' elif' → logprob: -6.785708427429199
    5. '```' → logprob: -7.285708427429199
    6. ':' → logprob: -8.0357084274292
    7. '<|end|>' → logprob: -8.7857084274292
    8. ' ' → logprob: -9.2857084274292
    9. '   ' → logprob: -9.4107084274292
    10. 'el' → logprob: -9.4107084274292

Token 24: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14012449979782104
    2. ' ' → logprob: -2.140124559402466
    3. 'a' → logprob: -4.390124320983887
    4. ' b' → logprob: -8.140124320983887
    5. ' ' → logprob: -8.890124320983887
    6. ' (' → logprob: -9.390124320983887
    7. 's' → logprob: -10.140124320983887
    8. '  ' → logprob: -10.265124320983887
    9. 'b' → logprob: -10.265124320983887
    10. '<|end|>' → logprob: -11.265124320983887

Token 25: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5650101900100708
    2. ' -' → logprob: -1.5650101900100708
    3. '+' → logprob: -1.9400101900100708
    4. '-' → logprob: -3.1900100708007812
    5. ' ' → logprob: -3.6900100708007812
    6. '*' → logprob: -5.315010070800781
    7. ' *' → logprob: -5.690010070800781
    8. '<|end|>' → logprob: -6.440010070800781
    9. ' ==' → logprob: -6.690010070800781
    10. ' >' → logprob: -8.065010070800781

Token 26: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31399139761924744
    2. ' b' → logprob: -1.3139914274215698
    3. ' ' → logprob: -7.563991546630859
    4. '<|end|>' → logprob: -8.56399154663086
    5. '<|end|>' → logprob: -11.81399154663086
    6. '  ' → logprob: -12.31399154663086
    7. '	b' → logprob: -13.81399154663086
    8. '_b' → logprob: -13.81399154663086
    9. ')b' → logprob: -13.81399154663086
    10. '>b' → logprob: -13.93899154663086

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016146628186106682
    2. '==' → logprob: -4.141146659851074
    3. ' ' → logprob: -10.141146659851074
    4. ' >' → logprob: -10.641146659851074
    5. ' <=' → logprob: -11.141146659851074
    6. '>' → logprob: -11.766146659851074
    7. ' <' → logprob: -11.891146659851074
    8. ' >=' → logprob: -12.391146659851074
    9. ' =' → logprob: -12.516146659851074
    10. '=' → logprob: -13.016146659851074

Token 28: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.011339581571519375
    2. ' ' → logprob: -4.5113396644592285
    3. '0' → logprob: -8.76133918762207
    4. '30' → logprob: -9.88633918762207
    5. '100' → logprob: -11.01133918762207
    6. '25' → logprob: -11.38633918762207
    7. '150' → logprob: -11.63633918762207
    8. 'a' → logprob: -12.01133918762207
    9. '   ' → logprob: -12.26133918762207
    10. '10' → logprob: -12.26133918762207

Token 29: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0006733550690114498
    2. ' ' → logprob: -7.625673294067383
    3. '0' → logprob: -9.250673294067383
    4. 'a' → logprob: -10.375673294067383
    5. '100' → logprob: -11.125673294067383
    6. '30' → logprob: -11.375673294067383
    7. '50' → logprob: -12.375673294067383
    8. '10' → logprob: -12.625673294067383
    9. '25' → logprob: -12.625673294067383
    10. '20' → logprob: -12.750673294067383

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9160102712921798e-05
    2. ' :' → logprob: -10.750029563903809
    3. ':
' → logprob: -12.125029563903809
    4. '):' → logprob: -13.500029563903809
    5. ':**' → logprob: -14.875029563903809
    6. '>:' → logprob: -15.500029563903809
    7. '   ' → logprob: -15.875029563903809
    8. '():' → logprob: -16.875028610229492
    9. ' and' → logprob: -17.500028610229492
    10. '：' → logprob: -17.500028610229492

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014189229113981128
    2. '       ' → logprob: -6.6264190673828125
    3. '```' → logprob: -9.876419067382812
    4. '<|end|>' → logprob: -11.376419067382812
    5. '    ' → logprob: -12.126419067382812
    6. '    
' → logprob: -12.376419067382812
    7. '`' → logprob: -12.501419067382812
    8. 'print' → logprob: -12.751419067382812
    9. '``' → logprob: -13.251419067382812
    10. ':' → logprob: -13.376419067382812

Token 32: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022181764245033264
    2. 'print' (adapté à ' print') → logprob: -3.897181749343872
    3. ' print' → logprob: -6.897181987762451
    4. '       ' → logprob: -7.647181987762451
    5. '```' → logprob: -9.272181510925293
    6. '    ' → logprob: -10.647181510925293
    7. '	print' → logprob: -11.022181510925293
    8. '``' → logprob: -12.522181510925293
    9. '   ' → logprob: -13.147181510925293
    10. ' ' → logprob: -13.147181510925293

Token 33: '("*' (ID: 59145)
  Prédit: '("+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("+' → logprob: -0.4672420620918274
    2. '("("' → logprob: -1.0922420024871826
    3. '("*' → logprob: -3.5922420024871826
    4. '(' → logprob: -5.092242240905762
    5. '("' → logprob: -5.967242240905762
    6. '("="' → logprob: -7.092242240905762
    7. '("-' → logprob: -8.217242240905762
    8. '"+"' → logprob: -9.092242240905762
    9. '("/")' → logprob: -9.092242240905762
    10. '(">' → logprob: -9.092242240905762

Token 34: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02106075920164585
    2. ')' → logprob: -3.8960607051849365
    3. ')")' → logprob: -7.771060943603516
    4. '")
' → logprob: -9.646060943603516
    5. ')
' → logprob: -11.521060943603516
    6. '"' → logprob: -11.646060943603516
    7. '()' → logprob: -12.521060943603516
    8. '*' → logprob: -13.396060943603516
    9. '+")' → logprob: -13.771060943603516
    10. '**' → logprob: -13.896060943603516

Token 35: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02276095375418663
    2. 'elif' → logprob: -4.02276086807251
    3. ' else' → logprob: -6.39776086807251
    4. '<|end|>' → logprob: -6.64776086807251
    5. '```' → logprob: -7.02276086807251
    6. '\n' → logprob: -7.77276086807251
    7. '_else' → logprob: -9.272761344909668
    8. '#' → logprob: -10.147761344909668
    9. '\' → logprob: -10.147761344909668
    10. '_' → logprob: -10.147761344909668

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2603901015827432e-05
    2. ':
' → logprob: -11.250022888183594
    3. ' :' → logprob: -11.875022888183594
    4. '   ' → logprob: -13.000022888183594
    5. '():' → logprob: -16.875022888183594
    6. '):' → logprob: -17.000022888183594
    7. ':**' → logprob: -17.500022888183594
    8. ':def' → logprob: -17.500022888183594
    9. ':return' → logprob: -17.625022888183594
    10. ':
' → logprob: -18.000022888183594

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.366692453622818
    2. 'print' → logprob: -1.4916924238204956
    3. '"' → logprob: -2.741692543029785
    4. '    ' → logprob: -4.866692543029785
    5. ' print' → logprob: -4.991692543029785
    6. ' ' → logprob: -7.116692543029785
    7. '()' → logprob: -7.866692543029785
    8. '(' → logprob: -8.116692543029785
    9. ' "' → logprob: -8.241692543029785
    10. ')' → logprob: -8.241692543029785

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010063735535368323
    2. '-' → logprob: -7.126006603240967
    3. '"-' → logprob: -9.751006126403809
    4. '15' → logprob: -9.876006126403809
    5. ' print' → logprob: -9.876006126403809
    6. '"' → logprob: -10.626006126403809
    7. '   ' → logprob: -12.501006126403809
    8. 'printf' → logprob: -13.251006126403809
    9. '("-' → logprob: -13.751006126403809
    10. '(' → logprob: -14.126006126403809

Token 39: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2322780191898346
    2. '("("' → logprob: -2.7322781085968018
    3. '()' → logprob: -2.8572781085968018
    4. '(' → logprob: -3.4822781085968018
    5. '("")' → logprob: -3.6072781085968018
    6. '("="' → logprob: -4.232277870178223
    7. '("-' → logprob: -4.857277870178223
    8. '("*' → logprob: -6.857277870178223
    9. '("+' → logprob: -6.982277870178223
    10. '(">' → logprob: -7.357277870178223

Token 40: 'x' (ID: 87)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.15566009283065796
    2. '-' → logprob: -2.2806601524353027
    3. '0' → logprob: -3.6556601524353027
    4. '15' → logprob: -5.655660152435303
    5. '!' → logprob: -5.780660152435303
    6. '=' → logprob: -6.405660152435303
    7. '")' → logprob: -6.405660152435303
    8. '!")' → logprob: -6.530660152435303
    9. '-)' → logprob: -6.530660152435303
    10. '"' → logprob: -7.030660152435303

Token 41: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.7835754988482222e-05
    2. '"' → logprob: -11.625018119812012
    3. 'x' → logprob: -12.125018119812012
    4. ')' → logprob: -13.250018119812012
    5. ')")' → logprob: -14.000018119812012
    6. '")
' → logprob: -15.000018119812012
    7. '*' → logprob: -15.500018119812012
    8. '"x' → logprob: -16.000017166137695
    9. ' ")' → logprob: -16.875017166137695
    10. '\")' → logprob: -17.375017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 35.90%
Précision adaptée (1ère position): 38.46%
Précision (top 10): 79.49%
================================================================================
