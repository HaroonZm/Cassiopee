================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    N_K = input().split()
    N = int(N_K[0])
    K = int(N_K[1])
    return N, K

def read_heights():
    H = [int(i) for i in input().split()]
    return H

def preprocess_heights(H):
    return [0] + H  # 1-indexed

def is_n_equals_k(N, K):
    return N == K

def is_k_zero(K):
    return K == 0

def compute_ans_when_k_zero(N, H):
    ans = 0
    for i in range(N):
        ans += max(H[i+1] - H[i], 0)
    return ans

def initialize_dp(N, K):
    size = N - K + 1
    dp = []
    for _ in range(N + 1):
        dp.append([10 ** 12] * size)
    return dp

def set_dp_x1(dp, N, H):
    for x in range(N + 1):
        dp[x][1] = H[x]

def update_dp(dp, N, K, H):
    for y in range(2, N - K + 1):
        update_dp_for_y(dp, y, N, H)

def update_dp_for_y(dp, y, N, H):
    for x in range(N + 1):
        update_dp_for_x(dp, x, y, H)

def update_dp_for_x(dp, x, y, H):
    for i in range(1, x):
        candidate = dp[i][y - 1] + max(0, H[x] - H[i])
        if candidate < dp[x][y]:
            dp[x][y] = candidate

def find_min_ans(dp, N, K):
    min_ans = dp[0][N - K]
    for i in range(1, N + 1):
        if dp[i][N - K] < min_ans:
            min_ans = dp[i][N - K]
    return min_ans

def output_result(ans):
    print(ans)

def main():
    N, K = read_input()
    H_input = read_heights()
    H = preprocess_heights(H_input)

    if is_n_equals_k(N, K):
        output_result(0)
        return
    elif is_k_zero(K):
        ans = compute_ans_when_k_zero(N, H)
        output_result(ans)
        return

    dp = initialize_dp(N, K)
    set_dp_x1(dp, N, H)
    update_dp(dp, N, K, H)
    ans = find_min_ans(dp, N, K)
    output_result(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' N' (ID: 478)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: '_K' (ID: 20555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45956870913505554
    2. '=' → logprob: -2.209568738937378
    3. ',' → logprob: -2.334568738937378
    4. ' =' → logprob: -2.709568738937378
    5. ')' → logprob: -3.209568738937378
    6. '.' → logprob: -4.084568500518799
    7. 'u' → logprob: -4.959568500518799
    8. '  ' → logprob: -5.084568500518799
    9. '   ' → logprob: -5.334568500518799
    10. ' ' → logprob: -5.584568500518799

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39589744806289673
    2. '=' → logprob: -1.145897388458252
    3. '[' → logprob: -5.770897388458252
    4. ',' → logprob: -6.270897388458252
    5. '_' → logprob: -6.270897388458252
    6. ')' → logprob: -7.395897388458252
    7. 'space' → logprob: -8.89589786529541
    8. '.' → logprob: -8.89589786529541
    9. '```' → logprob: -8.89589786529541
    10. ''' → logprob: -9.02089786529541

Token 8: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10291249305009842
    2. 'input' → logprob: -2.352912425994873
    3. ' int' → logprob: -6.602912425994873
    4. ' list' → logprob: -7.477912425994873
    5. 'int' → logprob: -8.227912902832031
    6. ' map' → logprob: -8.852912902832031
    7. ' ' → logprob: -9.227912902832031
    8. 'list' → logprob: -9.852912902832031
    9. ' open' → logprob: -10.227912902832031
    10. ' [' → logprob: -10.352912902832031

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017451542662456632
    2. '('' → logprob: -7.626745223999023
    3. '("("' → logprob: -7.626745223999023
    4. ''' → logprob: -7.751745223999023
    5. '"' → logprob: -8.876745223999023
    6. '(
' → logprob: -9.126745223999023
    7. '()' → logprob: -10.751745223999023
    8. '.' → logprob: -11.126745223999023
    9. ' (' → logprob: -12.001745223999023
    10. '[' → logprob: -12.126745223999023

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.029793307185173035
    2. 'strip' → logprob: -3.5297932624816895
    3. 'rstrip' → logprob: -10.154793739318848
    4. ' split' → logprob: -12.654793739318848
    5. 'spl' → logprob: -14.779793739318848
    6. 'rs' → logprob: -16.15479278564453
    7. 'replace' → logprob: -16.27979278564453
    8. ' strip' → logprob: -16.27979278564453
    9. '(split' → logprob: -17.40479278564453
    10. 'read' → logprob: -17.40479278564453

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053393661975860596
    2. '()' → logprob: -3.178393602371216
    3. '('' → logprob: -5.178393840789795
    4. '("("' → logprob: -5.553393840789795
    5. '(`' → logprob: -8.678393363952637
    6. '`' → logprob: -8.803393363952637
    7. '`()' → logprob: -9.053393363952637
    8. '((' → logprob: -9.678393363952637
    9. '(()' → logprob: -9.803393363952637
    10. '```' → logprob: -10.053393363952637

Token 12: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060323555022478104
    2. '   ' → logprob: -3.935323476791382
    3. '[N' → logprob: -4.435323715209961
    4. '```' → logprob: -4.685323715209961
    5. '[n' → logprob: -5.435323715209961
    6. '`' → logprob: -6.060323715209961
    7. '[
' → logprob: -6.185323715209961
    8. '_' → logprob: -6.185323715209961
    9. '.' → logprob: -6.810323715209961
    10. '[i' → logprob: -7.060323715209961

Token 13: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.5804584622383118
    2. '   ' → logprob: -1.205458402633667
    3. 'n' → logprob: -3.455458402633667
    4. '[' → logprob: -3.580458402633667
    5. ' N' → logprob: -3.705458402633667
    6. ' ' → logprob: -4.080458641052246
    7. '`' → logprob: -4.830458641052246
    8. 'x' → logprob: -4.955458641052246
    9. 'return' → logprob: -5.455458641052246
    10. '```' → logprob: -5.830458641052246

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03520011529326439
    2. '[' → logprob: -3.4102001190185547
    3. '_K' → logprob: -7.910200119018555
    4. ',' → logprob: -8.160200119018555
    5. '```' → logprob: -8.785200119018555
    6. '_,' → logprob: -8.910200119018555
    7. ')' → logprob: -9.035200119018555
    8. '[_' → logprob: -9.285200119018555
    9. '[]' → logprob: -9.785200119018555
    10. '_)' → logprob: -10.160200119018555

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08904590457677841
    2. 'int' → logprob: -2.464046001434326
    3. ' N' → logprob: -9.214045524597168
    4. ' ' → logprob: -13.089045524597168
    5. '(int' → logprob: -13.589045524597168
    6. 'N' → logprob: -13.714045524597168
    7. '[int' → logprob: -13.964045524597168
    8. '   ' → logprob: -14.714045524597168
    9. '=int' → logprob: -15.214045524597168
    10. '	int' → logprob: -15.964045524597168

Token 16: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014213332906365395
    2. '(N' → logprob: -4.264213562011719
    3. '('' → logprob: -10.139213562011719
    4. '("("' → logprob: -12.639213562011719
    5. '(
' → logprob: -12.764213562011719
    6. '(

' → logprob: -13.389213562011719
    7. '("' → logprob: -13.889213562011719
    8. ''' → logprob: -15.014213562011719
    9. '()' → logprob: -15.389213562011719
    10. '(`' → logprob: -15.639213562011719

Token 17: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.001548068132251501
    2. '[' → logprob: -6.6265482902526855
    3. ')' → logprob: -9.001547813415527
    4. '[K' → logprob: -9.876547813415527
    5. '[_' → logprob: -10.501547813415527
    6. '(K' → logprob: -12.626547813415527
    7. '._' → logprob: -12.876547813415527
    8. ' _' → logprob: -13.251547813415527
    9. ' )' → logprob: -13.251547813415527
    10. 'K' → logprob: -13.251547813415527

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. ' [' → logprob: -13.000004768371582
    3. ')' → logprob: -13.375004768371582
    4. '\[' → logprob: -15.375004768371582
    5. '[-' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '```' → logprob: -17.125003814697266
    8. '[N' → logprob: -17.250003814697266
    9. '[
' → logprob: -17.500003814697266
    10. ')[' → logprob: -17.500003814697266

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012221322394907475
    2. '1' → logprob: -6.751222133636475
    3. ' ' → logprob: -9.876221656799316
    4. '   ' → logprob: -15.501221656799316
    5. ')' → logprob: -15.876221656799316
    6. ']' → logprob: -16.626222610473633
    7. '2' → logprob: -16.751222610473633
    8. '[' → logprob: -17.501222610473633
    9. '```' → logprob: -17.876222610473633
    10. '  ' → logprob: -18.001222610473633

Token 20: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17427240312099457
    2. ')' → logprob: -1.9242724180221558
    3. ']' → logprob: -4.299272537231445
    4. ' ])' → logprob: -8.424272537231445
    5. ')]' → logprob: -10.799272537231445
    6. '[' → logprob: -10.924272537231445
    7. '])
' → logprob: -10.924272537231445
    8. ''])' → logprob: -11.174272537231445
    9. ')])' → logprob: -11.174272537231445
    10. '],' → logprob: -11.299272537231445

Token 21: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15280365943908691
    2. '   ' → logprob: -2.527803659439087
    3. '```' → logprob: -4.527803421020508
    4. ',' → logprob: -4.777803421020508
    5. '`' → logprob: -5.027803421020508
    6. ')' → logprob: -5.277803421020508
    7. ''' → logprob: -5.652803421020508
    8. '_K' → logprob: -5.777803421020508
    9. '    
' → logprob: -6.027803421020508
    10. ' ' → logprob: -6.027803421020508

Token 22: ' K' (ID: 658)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0372573658823967
    2. '   ' → logprob: -4.287257194519043
    3. '_K' → logprob: -4.787257194519043
    4. '`' → logprob: -5.537257194519043
    5. '```' → logprob: -5.787257194519043
    6. 'K' (adapté à ' K') → logprob: -6.287257194519043
    7. '    ' → logprob: -6.537257194519043
    8. '    
' → logprob: -7.412257194519043
    9. ''' → logprob: -7.412257194519043
    10. ',' → logprob: -7.537257194519043

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024142494425177574
    2. '=' → logprob: -3.8991425037384033
    3. '_' → logprob: -5.649142265319824
    4. ')' → logprob: -10.899142265319824
    5. ' ' → logprob: -11.024142265319824
    6. ' _' → logprob: -11.524142265319824
    7. '_space' → logprob: -11.899142265319824
    8. '[' → logprob: -12.024142265319824
    9. '  ' → logprob: -12.524142265319824
    10. ',' → logprob: -13.024142265319824

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12692873179912567
    2. 'int' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.751928329467773
    4. '(int' → logprob: -16.126928329467773
    5. '=int' → logprob: -16.126928329467773
    6. '0' → logprob: -16.751928329467773
    7. ' N' → logprob: -17.001928329467773
    8. '[int' → logprob: -17.126928329467773
    9. '	int' → logprob: -17.376928329467773
    10. '<int' → logprob: -17.501928329467773

Token 25: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.474560409784317
    2. '(' → logprob: -0.9745603799819946
    3. '(K' → logprob: -7.724560260772705
    4. '('' → logprob: -11.474560737609863
    5. '(_' → logprob: -11.974560737609863
    6. ' (' → logprob: -12.349560737609863
    7. '(

' → logprob: -12.974560737609863
    8. '()' → logprob: -13.224560737609863
    9. '(
' → logprob: -13.474560737609863
    10. ''' → logprob: -13.474560737609863

Token 26: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -5.200166469876422e-06
    2. ')_' → logprob: -13.250004768371582
    3. '[_' → logprob: -14.250004768371582
    4. '[' → logprob: -14.375004768371582
    5. ' _' → logprob: -14.375004768371582
    6. '[K' → logprob: -14.750004768371582
    7. '_' → logprob: -15.375004768371582
    8. ']_' → logprob: -15.625004768371582
    9. ')' → logprob: -16.0000057220459
    10. '```' → logprob: -16.1250057220459

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.117345684382599e-05
    2. ')' → logprob: -11.625020980834961
    3. ' [' → logprob: -11.875020980834961
    4. '   ' → logprob: -13.125020980834961
    5. ')[' → logprob: -14.125020980834961
    6. '][' → logprob: -14.375020980834961
    7. ' ' → logprob: -14.500020980834961
    8. '```' → logprob: -15.000020980834961
    9. ']' → logprob: -15.250020980834961
    10. '1' → logprob: -15.750020980834961

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.029847231227905e-05
    2. '0' → logprob: -10.125080108642578
    3. '])' → logprob: -10.250080108642578
    4. ' ' → logprob: -12.500080108642578
    5. ']' → logprob: -14.000080108642578
    6. '   ' → logprob: -16.875080108642578
    7. '-' → logprob: -17.375080108642578
    8. ')' → logprob: -17.500080108642578
    9. '])
' → logprob: -18.000080108642578
    10. '```' → logprob: -18.000080108642578

Token 29: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.750001907348633
    3. ']' → logprob: -15.125001907348633
    4. '')' → logprob: -15.125001907348633
    5. '`)' → logprob: -15.750001907348633
    6. ')
' → logprob: -16.125001907348633
    7. '])' → logprob: -16.250001907348633
    8. ' )' → logprob: -16.375001907348633
    9. '）' → logprob: -16.750001907348633
    10. '")' → logprob: -18.125001907348633

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5978992581367493
    2. '```' → logprob: -1.8478991985321045
    3. '    
' → logprob: -2.0978991985321045
    4. '
' → logprob: -2.7228991985321045
    5. '\n' → logprob: -3.3478991985321045
    6. '`' → logprob: -3.8478991985321045
    7. 'return' → logprob: -4.847899436950684
    8. '' → logprob: -5.347899436950684
    9. '``' → logprob: -5.347899436950684
    10. '\' → logprob: -5.347899436950684

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3671717345714569
    2. '    
' → logprob: -2.7421717643737793
    3. 'r' → logprob: -2.8671717643737793
    4. '```' → logprob: -2.8671717643737793
    5. 'return' (adapté à ' return') → logprob: -3.7421717643737793
    6. '\n' → logprob: -3.9921717643737793
    7. 'n' → logprob: -4.117171764373779
    8. '`' → logprob: -4.117171764373779
    9. 'for' → logprob: -5.242171764373779
    10. 'x' → logprob: -5.242171764373779

Token 32: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.637803316116333
    2. 'N' → logprob: -0.762803316116333
    3. ' (' → logprob: -6.262803077697754
    4. '(' → logprob: -7.012803077697754
    5. '(N' → logprob: -7.137803077697754
    6. ' ' → logprob: -7.637803077697754
    7. '[]' → logprob: -8.387803077697754
    8. '[' → logprob: -8.512803077697754
    9. ' []' → logprob: -8.637803077697754
    10. '[N' → logprob: -8.887803077697754

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06675716489553452
    2. '_' → logprob: -3.4417572021484375
    3. '<|end|>' → logprob: -3.5667572021484375
    4. ')' → logprob: -6.9417572021484375
    5. '```' → logprob: -7.4417572021484375
    6. ',K' → logprob: -7.8167572021484375
    7. ',N' → logprob: -7.8167572021484375
    8. ',
' → logprob: -7.9417572021484375
    9. '(' → logprob: -8.316757202148438
    10. '#' → logprob: -8.691757202148438

Token 34: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.021547269076108932
    2. ' ' → logprob: -4.646547317504883
    3. '_' → logprob: -5.021547317504883
    4. 'K' → logprob: -5.896547317504883
    5. 'space' → logprob: -7.521547317504883
    6. ' ' → logprob: -7.771547317504883
    7. ''' → logprob: -7.896547317504883
    8. '_K' → logprob: -8.521547317504883
    9. '<|end|>' → logprob: -8.771547317504883
    10. ')' → logprob: -9.021547317504883

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09333375841379166
    2. '

' → logprob: -2.8433337211608887
    3. '' → logprob: -4.343333721160889
    4. '\n' → logprob: -4.718333721160889
    5. '```' → logprob: -5.468333721160889
    6. '\' → logprob: -7.093333721160889
    7. '<|end|>' → logprob: -7.093333721160889
    8. 'newline' → logprob: -7.343333721160889
    9. 'def' → logprob: -7.718333721160889
    10. '#' → logprob: -7.718333721160889

Token 36: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26197129487991333
    2. '' → logprob: -2.5119712352752686
    3. 'd' → logprob: -2.8869712352752686
    4. '\n' → logprob: -3.3869712352752686
    5. '#' → logprob: -4.011971473693848
    6. 'n' → logprob: -4.886971473693848
    7. '

' → logprob: -5.011971473693848
    8. 'r' → logprob: -5.261971473693848
    9. '```' → logprob: -5.386971473693848
    10. 'def' → logprob: -5.386971473693848

Token 37: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2712222635746002
    2. ' space' → logprob: -2.3962223529815674
    3. ' read' → logprob: -2.5212223529815674
    4. '_' → logprob: -3.3962223529815674
    5. ' r' → logprob: -4.771222114562988
    6. ' calculate' → logprob: -5.271222114562988
    7. ' process' → logprob: -5.396222114562988
    8. ' ' → logprob: -6.146222114562988
    9. ' compute' → logprob: -6.521222114562988
    10. '_space' → logprob: -6.771222114562988

Token 38: '_he' (ID: 94257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1658099740743637
    2. '_input' → logprob: -1.915809988975525
    3. '_array' → logprob: -6.6658101081848145
    4. '_list' → logprob: -6.7908101081848145
    5. '_line' → logprob: -6.7908101081848145
    6. '_data' → logprob: -7.5408101081848145
    7. '_output' → logprob: -8.040809631347656
    8. ' _' → logprob: -8.165809631347656
    9. '(' → logprob: -9.290809631347656
    10. '()' → logprob: -9.790809631347656

Token 39: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.20220646262168884
    2. 'ight' → logprob: -1.7022064924240112
    3. '_' → logprob: -7.577206611633301
    4. 'ap' → logprob: -9.2022066116333
    5. 'aders' → logprob: -9.9522066116333
    6. 'igth' → logprob: -11.0772066116333
    7. 'app' → logprob: -11.2022066116333
    8. 'ig' → logprob: -11.3272066116333
    9. 'igh' → logprob: -11.7022066116333
    10. '[' → logprob: -11.7022066116333

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016519911587238312
    2. '(' → logprob: -4.266520023345947
    3. '()' → logprob: -6.391520023345947
    4. '_' → logprob: -7.391520023345947
    5. 'def' → logprob: -11.641519546508789
    6. ' ():' → logprob: -11.766519546508789
    7. '_list' → logprob: -12.141519546508789
    8. '```' → logprob: -12.516519546508789
    9. ':' → logprob: -12.641519546508789
    10. '(:' → logprob: -13.016519546508789

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008103981614112854
    2. ' heights' → logprob: -4.883103847503662
    3. '    
' → logprob: -9.00810432434082
    4. '(' → logprob: -9.50810432434082
    5. ' Heights' → logprob: -9.63310432434082
    6. '()' → logprob: -9.88310432434082
    7. '    ' → logprob: -10.25810432434082
    8. '[' → logprob: -10.25810432434082
    9. '```' → logprob: -10.88310432434082
    10. '       ' → logprob: -11.13310432434082

Token 42: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08235800266265869
    2. ' heights' → logprob: -3.082357883453369
    3. 'he' → logprob: -3.457357883453369
    4. 'return' → logprob: -7.207357883453369
    5. ' return' → logprob: -8.082358360290527
    6. 'height' → logprob: -8.582358360290527
    7. ' h' → logprob: -8.707358360290527
    8. 'h' → logprob: -9.207358360290527
    9. ' he' → logprob: -9.582358360290527
    10. '   ' → logprob: -10.707358360290527

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20947331190109253
    2. '_' → logprob: -2.9594733715057373
    3. 's' → logprob: -3.0844733715057373
    4. '=' → logprob: -3.7094733715057373
    5. '[]' → logprob: -3.7094733715057373
    6. ')' → logprob: -4.334473133087158
    7. '[' → logprob: -4.709473133087158
    8. '[:]' → logprob: -4.959473133087158
    9. '   ' → logprob: -5.959473133087158
    10. ',' → logprob: -6.584473133087158

Token 44: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.14820104837417603
    2. 'list' → logprob: -2.0232009887695312
    3. ' [' → logprob: -5.523200988769531
    4. '[list' → logprob: -7.273200988769531
    5. ' []' → logprob: -8.023200988769531
    6. '[' → logprob: -8.523200988769531
    7. '[]' → logprob: -8.648200988769531
    8. '[int' → logprob: -9.523200988769531
    9. '[input' → logprob: -10.773200988769531
    10. ' input' → logprob: -11.648200988769531

Token 45: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000633566698525101
    2. ' int' → logprob: -7.500633716583252
    3. '0' → logprob: -9.500633239746094
    4. ']int' → logprob: -12.625633239746094
    5. ']' → logprob: -14.125633239746094
    6. ' ' → logprob: -14.625633239746094
    7. '(int' → logprob: -15.125633239746094
    8. ' ]' → logprob: -15.250633239746094
    9. '   ' → logprob: -15.625633239746094
    10. '  ' → logprob: -15.625633239746094

Token 46: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4021480083465576
    2. '(input' → logprob: -1.4021480083465576
    3. '(x' → logprob: -2.5271480083465576
    4. '(i' → logprob: -5.652148246765137
    5. '(
' → logprob: -7.152148246765137
    6. '()]' → logprob: -8.402148246765137
    7. 'input' → logprob: -8.527148246765137
    8. '(

' → logprob: -8.652148246765137
    9. '()' → logprob: -9.652148246765137
    10. ']' → logprob: -10.277148246765137

Token 47: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0995975062251091
    2. ')' → logprob: -2.849597454071045
    3. '(x' → logprob: -3.599597454071045
    4. '(' → logprob: -5.599597454071045
    5. 'input' → logprob: -5.599597454071045
    6. '(i' → logprob: -6.849597454071045
    7. '()' → logprob: -8.099597930908203
    8. 'for' → logprob: -8.474597930908203
    9. ')]' → logprob: -9.224597930908203
    10. '())' → logprob: -9.349597930908203

Token 48: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.49215489625930786
    2. '(' → logprob: -1.367154836654663
    3. '(x' → logprob: -2.617154836654663
    4. 'for' → logprob: -3.742154836654663
    5. 'input' → logprob: -3.867154836654663
    6. ')' → logprob: -5.242155075073242
    7. ' for' → logprob: -5.617155075073242
    8. '(i' → logprob: -5.617155075073242
    9. '()' → logprob: -6.992155075073242
    10. ' (' → logprob: -7.742155075073242

Token 49: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0002988776541315019
    2. 'input' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.500298500061035
    4. '(input' → logprob: -14.625298500061035
    5. '_input' → logprob: -14.875298500061035
    6. ' range' → logprob: -15.625298500061035
    7. '_' → logprob: -16.12529945373535
    8. ' space' → logprob: -16.87529945373535
    9. '=input' → logprob: -16.87529945373535
    10. ' a' → logprob: -17.25029945373535

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14145538210868835
    2. ' input' → logprob: -3.0164554119110107
    3. '(' → logprob: -3.2664554119110107
    4. 'input' → logprob: -3.6414554119110107
    5. '(input' → logprob: -4.266455173492432
    6. 'in' → logprob: -6.016455173492432
    7. ' (' → logprob: -7.141455173492432
    8. ' ' → logprob: -7.516455173492432
    9. '_' → logprob: -8.01645565032959
    10. '=input' → logprob: -9.39145565032959

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2254168838262558
    2. ' input' → logprob: -1.600416898727417
    3. '(input' → logprob: -13.600417137145996
    4. ' ' → logprob: -14.100417137145996
    5. 'range' → logprob: -14.100417137145996
    6. ' range' → logprob: -14.350417137145996
    7. '<input' → logprob: -15.350417137145996
    8. '	input' → logprob: -15.850417137145996
    9. '=input' → logprob: -15.850417137145996
    10. '.input' → logprob: -16.47541618347168

Token 52: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.3083544075489044
    2. '()' → logprob: -1.808354377746582
    3. '().' → logprob: -2.308354377746582
    4. '())' → logprob: -6.933354377746582
    5. '(' → logprob: -7.058354377746582
    6. '()].' → logprob: -9.933354377746582
    7. '()][' → logprob: -10.183354377746582
    8. '()>' → logprob: -10.933354377746582
    9. ' ()' → logprob: -11.683354377746582
    10. '()],' → logprob: -12.183354377746582

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000727325037587434
    2. 'strip' → logprob: -7.25072717666626
    3. ' split' → logprob: -11.250727653503418
    4. 'rstrip' → logprob: -12.375727653503418
    5. 'spl' → logprob: -16.0007266998291
    6. ' strip' → logprob: -17.1257266998291
    7. ')' → logprob: -17.7507266998291
    8. '(split' → logprob: -17.7507266998291
    9. '.split' → logprob: -17.8757266998291
    10. 's' → logprob: -20.8757266998291

Token 54: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0005812693270854652
    2. '()' → logprob: -8.125581741333008
    3. '(' → logprob: -8.500581741333008
    4. '())' → logprob: -9.500581741333008
    5. '()]
' → logprob: -13.000581741333008
    6. ']' → logprob: -13.500581741333008
    7. ')]' → logprob: -13.750581741333008
    8. '()][' → logprob: -14.125581741333008
    9. '()].' → logprob: -14.875581741333008
    10. '()],' → logprob: -15.000581741333008

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005067483521997929
    2. '	return' → logprob: -5.630067348480225
    3. 'return' → logprob: -7.505067348480225
    4. '
' → logprob: -7.630067348480225
    5. ' return' → logprob: -8.255067825317383
    6. '    
' → logprob: -8.880067825317383
    7. '<|end|>' → logprob: -11.130067825317383
    8. ':return' → logprob: -13.130067825317383
    9. ')' → logprob: -13.380067825317383
    10. ' 
' → logprob: -13.505067825317383

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019739827141165733
    2. ' return' → logprob: -4.269739627838135
    3. 'return' (adapté à ' return') → logprob: -5.894739627838135
    4. '	return' → logprob: -5.894739627838135
    5. '    ' → logprob: -11.019740104675293
    6. ' ' → logprob: -11.394740104675293
    7. '  ' → logprob: -12.269740104675293
    8. '       ' → logprob: -12.519740104675293
    9. '<|end|>' → logprob: -12.519740104675293
    10. ':return' → logprob: -12.644740104675293

Token 57: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.4740820825099945
    2. 'H' → logprob: -0.9740821123123169
    3. '(H' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.349081993103027
    5. ' ' → logprob: -15.474081993103027
    6. '	H' → logprob: -15.724081993103027
    7. '_H' → logprob: -16.224082946777344
    8. '   ' → logprob: -16.599082946777344
    9. '(' → logprob: -17.099082946777344
    10. ' (' → logprob: -17.349082946777344

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13027895987033844
    2. 'def' → logprob: -2.755279064178467
    3. '<|end|>' → logprob: -3.005279064178467
    4. '```' → logprob: -5.505279064178467
    5. '

' → logprob: -5.880279064178467
    6. '<|end|>' → logprob: -7.505279064178467
    7. '\n' → logprob: -7.630279064178467
    8. '' → logprob: -8.380278587341309
    9. '\' → logprob: -8.380278587341309
    10. ' def' → logprob: -8.380278587341309

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007781483698636293
    2. '
' → logprob: -5.007781505584717
    3. '

' → logprob: -8.257781028747559
    4. '```' → logprob: -8.382781028747559
    5. '<|end|>' → logprob: -9.007781028747559
    6. '\' → logprob: -9.257781028747559
    7. 'd' → logprob: -9.382781028747559
    8. '#' → logprob: -9.757781028747559
    9. 'for' → logprob: -9.757781028747559
    10. '\n' → logprob: -10.007781028747559

Token 60: ' preprocess' (ID: 122926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6654276251792908
    2. ' max' → logprob: -1.9154276847839355
    3. ' solve' → logprob: -2.1654276847839355
    4. ' find' → logprob: -2.5404276847839355
    5. ' calculate' → logprob: -2.5404276847839355
    6. ' count' → logprob: -4.2904276847839355
    7. ' min' → logprob: -4.4154276847839355
    8. ' can' → logprob: -4.6654276847839355
    9. ' jump' → logprob: -5.4154276847839355
    10. ' compute' → logprob: -5.5404276847839355

Token 61: '_he' (ID: 94257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08155711740255356
    2. '(' → logprob: -2.831557035446167
    3. '(_' → logprob: -4.956557273864746
    4. '_dist' → logprob: -6.706557273864746
    5. '_(' → logprob: -6.706557273864746
    6. '(_)' → logprob: -6.956557273864746
    7. '_s' → logprob: -7.081557273864746
    8. '_H' → logprob: -7.206557273864746
    9. '(H' → logprob: -7.581557273864746
    10. '_positions' → logprob: -7.706557273864746

Token 62: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.03460608422756195
    2. 'ight' → logprob: -3.4096059799194336
    3. 'ig' → logprob: -8.284605979919434
    4. '_' → logprob: -8.659605979919434
    5. 'igh' → logprob: -8.659605979919434
    6. 'ap' → logprob: -9.284605979919434
    7. 'lp' → logprob: -9.784605979919434
    8. 'igts' → logprob: -10.659605979919434
    9. '```' → logprob: -10.909605979919434
    10. 'aders' → logprob: -11.159605979919434

Token 63: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030629150569438934
    2. '(H' → logprob: -6.128062725067139
    3. '(N' → logprob: -8.253063201904297
    4. '()' → logprob: -8.253063201904297
    5. '_' → logprob: -8.753063201904297
    6. '(_' → logprob: -9.753063201904297
    7. ' (' → logprob: -9.878063201904297
    8. '_(' → logprob: -11.378063201904297
    9. '():' → logprob: -11.753063201904297
    10. '((' → logprob: -11.753063201904297

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.633362352848053
    2. ',' → logprob: -0.758362352848053
    3. ')' → logprob: -7.633362293243408
    4. ' ,' → logprob: -9.008362770080566
    5. ' ):' → logprob: -9.383362770080566
    6. '   ' → logprob: -11.008362770080566
    7. '[' → logprob: -11.633362770080566
    8. ':' → logprob: -11.883362770080566
    9. '):
' → logprob: -11.883362770080566
    10. ']:' → logprob: -12.258362770080566

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031000841408967972
    2. ' dp' → logprob: -4.40600061416626
    3. '    ' → logprob: -5.28100061416626
    4. '_' → logprob: -5.40600061416626
    5. ' heights' → logprob: -6.53100061416626
    6. 'dp' → logprob: -6.65600061416626
    7. ' max' → logprob: -6.90600061416626
    8. ' prefix' → logprob: -6.90600061416626
    9. ' return' → logprob: -7.15600061416626
    10. ' DP' → logprob: -7.78100061416626

Token 66: ' return' (ID: 622)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7394959926605225
    2. ' prefix' → logprob: -1.7394959926605225
    3. ' max' → logprob: -2.1144959926605225
    4. 'dp' → logprob: -2.6144959926605225
    5. ' n' → logprob: -3.4894959926605225
    6. '   ' → logprob: -3.4894959926605225
    7. 'prefix' → logprob: -3.9894959926605225
    8. ' pre' → logprob: -3.9894959926605225
    9. ' min' → logprob: -4.614496231079102
    10. ' P' → logprob: -4.864496231079102

Token 67: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12200306355953217
    2. ' [' → logprob: -2.3720030784606934
    3. ' H' → logprob: -5.372003078460693
    4. 'H' → logprob: -5.372003078460693
    5. 'sorted' → logprob: -5.747003078460693
    6. ' sorted' → logprob: -5.872003078460693
    7. '[len' → logprob: -6.122003078460693
    8. '[max' → logprob: -6.247003078460693
    9. '[-' → logprob: -7.997003078460693
    10. '[i' → logprob: -7.997003078460693

Token 68: '0' (ID: 15)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7370414137840271
    2. '0' → logprob: -1.2370414733886719
    3. 'H' → logprob: -1.8620414733886719
    4. 'max' → logprob: -2.987041473388672
    5. 'abs' → logprob: -4.862041473388672
    6. 'i' → logprob: -5.862041473388672
    7. ' h' → logprob: -5.862041473388672
    8. 'x' → logprob: -5.862041473388672
    9. '(h' → logprob: -6.487041473388672
    10. '(' → logprob: -7.112041473388672

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006749005056917667
    2. ']+' → logprob: -5.006749153137207
    3. ',' → logprob: -10.381749153137207
    4. ' ]' → logprob: -13.256749153137207
    5. '-' → logprob: -15.256749153137207
    6. ']+=' → logprob: -16.00674819946289
    7. '   ' → logprob: -16.50674819946289
    8. ']*' → logprob: -16.75674819946289
    9. '+]' → logprob: -16.75674819946289
    10. '+' → logprob: -16.75674819946289

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2223505675792694
    2. ' +' → logprob: -1.8473505973815918
    3. '[' → logprob: -3.847350597381592
    4. '+[' → logprob: -4.097350597381592
    5. '*' → logprob: -6.597350597381592
    6. ']+' → logprob: -7.597350597381592
    7. ',' → logprob: -8.222350120544434
    8. ' *' → logprob: -8.472350120544434
    9. '(' → logprob: -8.597350120544434
    10. ']' → logprob: -8.597350120544434

Token 71: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.34885796904563904
    2. ' H' → logprob: -1.2238579988479614
    3. '[' → logprob: -7.973857879638672
    4. ' [' → logprob: -9.973857879638672
    5. ' sorted' → logprob: -11.973857879638672
    6. 'sorted' → logprob: -11.973857879638672
    7. ' ' → logprob: -12.348857879638672
    8. 'list' → logprob: -13.348857879638672
    9. ' list' → logprob: -13.348857879638672
    10. '[i' → logprob: -14.473857879638672

Token 72: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3322306275367737
    2. '<|end|>' → logprob: -1.332230567932129
    3. '

' → logprob: -5.332230567932129
    4. '<|end|>' → logprob: -5.457230567932129
    5. '_' → logprob: -6.582230567932129
    6. ' ' → logprob: -6.832230567932129
    7. '
' → logprob: -6.957230567932129
    8. '\n' → logprob: -6.957230567932129
    9. 'def' → logprob: -7.082230567932129
    10. '[' → logprob: -7.207230567932129

Token 73: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7938867211341858
    2. '<|end|>' → logprob: -0.7938867211341858
    3. ' to' → logprob: -4.043886661529541
    4. ' #' → logprob: -4.418886661529541
    5. '<|end|>' → logprob: -4.668886661529541
    6. ' cumulative' → logprob: -4.793886661529541
    7. ' The' → logprob: -5.543886661529541
    8. ' making' → logprob: -5.543886661529541
    9. ' This' → logprob: -6.043886661529541
    10. ' the' → logprob: -6.168886661529541

Token 75: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4863206744194031
    2. 'prefix' → logprob: -2.486320734024048
    3. ' H' → logprob: -3.111320734024048
    4. '0' → logprob: -3.611320734024048
    5. 'prepend' → logprob: -3.611320734024048
    6. 'padding' → logprob: -3.986320734024048
    7. 'pre' → logprob: -4.236320495605469
    8. 'pad' → logprob: -4.236320495605469
    9. 'to' → logprob: -4.361320495605469
    10. '1' → logprob: -4.361320495605469

Token 76: '-index' (ID: 45533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.004691899288445711
    2. 'ing' → logprob: -6.254692077636719
    3. '[' → logprob: -6.754692077636719
    4. '<|end|>' → logprob: -6.754692077636719
    5. ' ' → logprob: -9.754692077636719
    6. 's' → logprob: -9.754692077636719
    7. 'def' → logprob: -9.754692077636719
    8. ''ed' → logprob: -10.129692077636719
    9. 'ation' → logprob: -10.254692077636719
    10. '<|end|>' → logprob: -10.254692077636719

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35050836205482483
    2. '

' → logprob: -1.3505083322525024
    3. '<|end|>' → logprob: -3.600508451461792
    4. 'def' → logprob: -4.850508213043213
    5. '
' → logprob: -7.350508213043213
    6. '<|end|>' → logprob: -7.725508213043213
    7. '```' → logprob: -9.225508689880371
    8. '\n' → logprob: -10.350508689880371
    9. '
    
' → logprob: -10.350508689880371
    10. '[' → logprob: -10.475508689880371

Token 79: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5552870631217957
    2. '
' → logprob: -1.5552871227264404
    3. 'def' → logprob: -1.5552871227264404
    4. '<|end|>' → logprob: -5.930286884307861
    5. '
' → logprob: -7.430286884307861
    6. '```' → logprob: -8.68028736114502
    7. ' def' → logprob: -9.18028736114502
    8. '<|end|>' → logprob: -9.30528736114502
    9. ' 

' → logprob: -9.93028736114502
    10. '\n' → logprob: -10.55528736114502

Token 80: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9817819595336914
    2. ' solve' → logprob: -1.7317819595336914
    3. ' calculate' → logprob: -1.8567819595336914
    4. ' max' → logprob: -2.1067819595336914
    5. ' find' → logprob: -2.6067819595336914
    6. ' compute' → logprob: -3.4817819595336914
    7. ' min' → logprob: -4.106781959533691
    8. ' dp' → logprob: -4.731781959533691
    9. ' count' → logprob: -5.356781959533691
    10. '_' → logprob: -5.606781959533691

Token 81: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7228303551673889
    2. '_possible' → logprob: -1.2228302955627441
    3. '_valid' → logprob: -1.7228302955627441
    4. '_jump' → logprob: -4.722830295562744
    5. '_pal' → logprob: -5.472830295562744
    6. '_k' → logprob: -5.597830295562744
    7. '_safe' → logprob: -6.097830295562744
    8. '_good' → logprob: -6.222830295562744
    9. '_fe' → logprob: -6.222830295562744
    10. '_peak' → logprob: -6.222830295562744

Token 82: '_equals' (ID: 165870)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5106292366981506
    2. 'e' → logprob: -1.5106291770935059
    3. 'o' → logprob: -3.010629177093506
    4. '_e' → logprob: -3.010629177093506
    5. 'ext' → logprob: -3.385629177093506
    6. '_ext' → logprob: -4.510629177093506
    7. 'a' → logprob: -5.385629177093506
    8. '_a' → logprob: -6.010629177093506
    9. 'ex' → logprob: -6.135629177093506
    10. '_o' → logprob: -6.260629177093506

Token 83: '_k' (ID: 11637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3509888648986816
    2. 'K' → logprob: -1.4759888648986816
    3. '1' → logprob: -2.6009888648986816
    4. '_K' → logprob: -2.6009888648986816
    5. '(K' → logprob: -2.8509888648986816
    6. 's' → logprob: -2.9759888648986816
    7. '(N' → logprob: -3.2259888648986816
    8. '_k' → logprob: -3.2259888648986816
    9. '3' → logprob: -3.3509888648986816
    10. '_s' → logprob: -3.8509888648986816

Token 84: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025154968723654747
    2. '(N' → logprob: -4.900155067443848
    3. '_' → logprob: -5.150155067443848
    4. '(_' → logprob: -5.400155067443848
    5. '(n' → logprob: -6.025155067443848
    6. '():' → logprob: -6.400155067443848
    7. '()' → logprob: -7.775155067443848
    8. '_equal' → logprob: -7.775155067443848
    9. '_(' → logprob: -7.900155067443848
    10. '(_)' → logprob: -8.275155067443848

Token 85: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.4517253637313843
    2. ',' → logprob: -1.2017253637313843
    3. ' ==' → logprob: -3.326725482940674
    4. ' )' → logprob: -4.951725482940674
    5. ' <=' → logprob: -5.076725482940674
    6. ')' → logprob: -5.576725482940674
    7. ' >=' → logprob: -5.701725482940674
    8. '==' → logprob: -5.951725482940674
    9. ' ' → logprob: -6.701725482940674
    10. '=' → logprob: -7.576725482940674

Token 86: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5232778191566467
    2. 'K' → logprob: -0.8982778191566467
    3. ' ' → logprob: -10.14827823638916
    4. 'N' → logprob: -10.77327823638916
    5. '   ' → logprob: -10.89827823638916
    6. ' N' → logprob: -11.02327823638916
    7. ')' → logprob: -11.27327823638916
    8. 'k' → logprob: -11.64827823638916
    9. '```' → logprob: -12.27327823638916
    10. 'def' → logprob: -12.46077823638916

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00812491588294506
    2. ')' → logprob: -4.883124828338623
    3. ' ):' → logprob: -7.758124828338623
    4. ':' → logprob: -9.758125305175781
    5. ' )' → logprob: -11.133125305175781
    6. '):
' → logprob: -11.633125305175781
    7. ',' → logprob: -12.258125305175781
    8. '():' → logprob: -13.508125305175781
    9. ' ' → logprob: -14.383125305175781
    10. ')：' → logprob: -15.008125305175781

Token 88: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48430135846138
    2. '   ' → logprob: -0.9843013286590576
    3. ':
' → logprob: -5.109301567077637
    4. ':return' → logprob: -5.734301567077637
    5. ' return' → logprob: -8.109301567077637
    6. '	return' → logprob: -8.734301567077637
    7. '    
' → logprob: -9.359301567077637
    8. '    ' → logprob: -9.984301567077637
    9. ' :' → logprob: -10.109301567077637
    10. '       ' → logprob: -10.109301567077637

Token 89: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2116631418466568
    2. '   ' → logprob: -1.7116631269454956
    3. 'return' (adapté à ' return') → logprob: -4.586663246154785
    4. ' if' → logprob: -11.961663246154785
    5. '	return' → logprob: -13.711663246154785
    6. ' N' → logprob: -14.211663246154785
    7. '```' → logprob: -14.211663246154785
    8. '   ' → logprob: -14.711663246154785
    9. '    ' → logprob: -15.086663246154785
    10. 'if' → logprob: -15.211663246154785

Token 90: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.07033508270978928
    2. 'N' → logprob: -2.6953351497650146
    3. ' ' → logprob: -7.9453349113464355
    4. ' ' → logprob: -10.945335388183594
    5. '	N' → logprob: -11.695335388183594
    6. '(' → logprob: -12.320335388183594
    7. ' (' → logprob: -12.320335388183594
    8. '(N' → logprob: -12.570335388183594
    9. '   ' → logprob: -12.695335388183594
    10. '  ' → logprob: -13.945335388183594

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10226913541555405
    2. '==' → logprob: -2.352269172668457
    3. '=' → logprob: -6.477269172668457
    4. ' =' → logprob: -8.352269172668457
    5. ' ' → logprob: -8.977269172668457
    6. ' <=' → logprob: -9.102269172668457
    7. '<=' → logprob: -10.977269172668457
    8. '"' → logprob: -12.602269172668457
    9. ' ' → logprob: -12.602269172668457
    10. '==
' → logprob: -12.852269172668457

Token 92: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.04860871285200119
    2. 'K' → logprob: -3.0486087799072266
    3. ' ' → logprob: -11.298608779907227
    4. ' ' → logprob: -11.798608779907227
    5. '	K' → logprob: -13.798608779907227
    6. '   ' → logprob: -16.298608779907227
    7. '>K' → logprob: -16.923608779907227
    8. '  ' → logprob: -16.923608779907227
    9. ' ' → logprob: -17.486108779907227
    10. '```' → logprob: -17.611108779907227

Token 93: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2438659518957138
    2. 'def' → logprob: -2.118865966796875
    3. '
' → logprob: -2.368865966796875
    4. '<|end|>' → logprob: -6.118865966796875
    5. '```' → logprob: -9.243865966796875
    6. '<|end|>' → logprob: -9.368865966796875
    7. '\n' → logprob: -9.618865966796875
    8. 'newline' → logprob: -10.118865966796875
    9. '
' → logprob: -10.243865966796875
    10. ' def' → logprob: -10.493865966796875

Token 94: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7121199369430542
    2. 'def' → logprob: -0.8371199369430542
    3. '
' → logprob: -2.5871200561523438
    4. '<|end|>' → logprob: -8.212120056152344
    5. '```' → logprob: -8.337120056152344
    6. '\n' → logprob: -8.337120056152344
    7. '\' → logprob: -8.337120056152344
    8. '
' → logprob: -10.212120056152344
    9. ' def' → logprob: -10.212120056152344
    10. '<|end|>' → logprob: -10.712120056152344

Token 95: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7131916284561157
    2. ' def' → logprob: -1.3381916284561157
    3. ' _' → logprob: -2.713191509246826
    4. ' calculate' → logprob: -3.213191509246826
    5. ' max' → logprob: -3.338191509246826
    6. ' main' → logprob: -4.088191509246826
    7. ' find' → logprob: -4.088191509246826
    8. ' solve' → logprob: -4.213191509246826
    9. '_' → logprob: -4.338191509246826
    10. ' can' → logprob: -4.463191509246826

Token 96: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.33810317516326904
    2. '_n' → logprob: -1.838103175163269
    3. '_valid' → logprob: -3.2131032943725586
    4. '_' → logprob: -3.5881032943725586
    5. '_g' → logprob: -3.5881032943725586
    6. '_less' → logprob: -4.463103294372559
    7. '_equal' → logprob: -6.213103294372559
    8. '_s' → logprob: -6.338103294372559
    9. '_le' → logprob: -6.713103294372559
    10. '_sub' → logprob: -6.713103294372559

Token 97: '_zero' (ID: 53468)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.15420444309711456
    2. '_less' → logprob: -2.4042043685913086
    3. '_l' → logprob: -4.279204368591309
    4. '_equal' → logprob: -4.779204368591309
    5. '_in' → logprob: -4.904204368591309
    6. '_more' → logprob: -5.154204368591309
    7. '_div' → logprob: -5.279204368591309
    8. '_equals' → logprob: -5.654204368591309
    9. '_' → logprob: -5.779204368591309
    10. '_zero' → logprob: -7.279204368591309

Token 98: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.1455542892217636
    2. '(' → logprob: -2.020554304122925
    3. '():' → logprob: -6.645554065704346
    4. '(N' → logprob: -6.895554065704346
    5. ' (' → logprob: -8.520554542541504
    6. '()' → logprob: -8.645554542541504
    7. ':' → logprob: -8.895554542541504
    8. '(k' → logprob: -11.145554542541504
    9. '(None' → logprob: -11.270554542541504
    10. '(KERN' → logprob: -12.645554542541504

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023117882665246725
    2. ' ):' → logprob: -6.627311706542969
    3. ')' → logprob: -7.002311706542969
    4. '):
' → logprob: -10.002311706542969
    5. '():' → logprob: -11.377311706542969
    6. ' )' → logprob: -11.502311706542969
    7. ':' → logprob: -11.877311706542969
    8. '=' → logprob: -14.627311706542969
    9. ' ' → logprob: -15.252311706542969
    10. ' ):
' → logprob: -15.627311706542969

Token 100: '   ' (ID: 271)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.017056796699762344
    2. ' return' → logprob: -4.767056941986084
    3. '   ' → logprob: -5.017056941986084
    4. 'K' → logprob: -6.392056941986084
    5. 'return' → logprob: -10.017056465148926
    6. '(K' → logprob: -10.892056465148926
    7. ' ' → logprob: -11.267056465148926
    8. '    ' → logprob: -11.517056465148926
    9. '	K' → logprob: -11.517056465148926
    10. '  ' → logprob: -12.767056465148926

Token 101: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27022212743759155
    2. ' K' → logprob: -2.2702221870422363
    3. 'return' (adapté à ' return') → logprob: -2.2702221870422363
    4. 'K' → logprob: -3.5202221870422363
    5. '   ' → logprob: -7.395222187042236
    6. ' ' → logprob: -13.395221710205078
    7. '  ' → logprob: -14.270221710205078
    8. '	return' → logprob: -14.395221710205078
    9. 'def' → logprob: -14.770221710205078
    10. '>K' → logprob: -14.770221710205078

Token 102: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.011060323566198349
    2. 'K' → logprob: -4.5110602378845215
    3. ' ' → logprob: -12.13606071472168
    4. '0' → logprob: -12.51106071472168
    5. '(' → logprob: -14.01106071472168
    6. ' ' → logprob: -14.13606071472168
    7. '(K' → logprob: -14.13606071472168
    8. ' (' → logprob: -15.13606071472168
    9. ' True' → logprob: -15.51106071472168
    10. '   ' → logprob: -15.88606071472168

Token 103: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10169968754053116
    2. '==' → logprob: -2.3516995906829834
    3. ' ' → logprob: -6.7266998291015625
    4. '>' → logprob: -9.226699829101562
    5. ' >' → logprob: -9.226699829101562
    6. '=' → logprob: -9.976699829101562
    7. '0' → logprob: -10.476699829101562
    8. ' !=' → logprob: -12.101699829101562
    9. ' ' → logprob: -12.601699829101562
    10. ' =' → logprob: -12.726699829101562

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.451414108276367
    4. '   ' → logprob: -18.701414108276367
    5. '  ' → logprob: -20.076414108276367
    6. ' ' → logprob: -21.326414108276367
    7. '```' → logprob: -21.326414108276367
    8. '1' → logprob: -21.451414108276367
    9. '۰' → logprob: -21.576414108276367
    10. ' 
' → logprob: -22.201414108276367

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -21.625019073486328
    4. '  ' → logprob: -22.500019073486328
    5. '```' → logprob: -22.750019073486328
    6. ' ' → logprob: -22.875019073486328
    7. '۰' → logprob: -22.875019073486328
    8. '０' → logprob: -23.125019073486328
    9. ' ' → logprob: -23.500019073486328
    10. '
' → logprob: -24.125019073486328

Token 106: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7210848331451416
    2. '

' → logprob: -1.2210848331451416
    3. '
' → logprob: -2.2210848331451416
    4. '<|end|>' → logprob: -2.2210848331451416
    5. '<|end|>' → logprob: -6.8460845947265625
    6. '```' → logprob: -7.9710845947265625
    7. '\n' → logprob: -9.346084594726562
    8. '\' → logprob: -9.346084594726562
    9. ' def' → logprob: -9.471084594726562
    10. '
' → logprob: -9.971084594726562

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08051585406064987
    2. '

' → logprob: -2.7055158615112305
    3. '
' → logprob: -4.5805158615112305
    4. '\' → logprob: -9.58051586151123
    5. '<|end|>' → logprob: -9.58051586151123
    6. '```' → logprob: -9.83051586151123
    7. '
' → logprob: -10.58051586151123
    8. 'd' → logprob: -11.58051586151123
    9. ' def' → logprob: -11.58051586151123
    10. '\n' → logprob: -11.70551586151123

Token 108: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.902329683303833
    2. ' max' → logprob: -1.152329683303833
    3. ' can' → logprob: -2.402329683303833
    4. ' is' → logprob: -3.402329683303833
    5. ' min' → logprob: -3.652329683303833
    6. 'main' → logprob: -3.777329683303833
    7. ' solve' → logprob: -4.027329444885254
    8. ' find' → logprob: -4.152329444885254
    9. 'max' → logprob: -4.277329444885254
    10. 'can' → logprob: -5.027329444885254

Token 109: '_ans' (ID: 146254)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5632694363594055
    2. '_dp' → logprob: -1.6882693767547607
    3. '_diff' → logprob: -2.4382693767547607
    4. '_min' → logprob: -3.3132693767547607
    5. '_prefix' → logprob: -3.6882693767547607
    6. '_difference' → logprob: -4.06326961517334
    7. '_' → logprob: -4.18826961517334
    8. '_cost' → logprob: -4.43826961517334
    9. '_jump' → logprob: -4.81326961517334
    10. '_d' → logprob: -5.06326961517334

Token 110: '_when' (ID: 96460)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4309040904045105
    2. '(' → logprob: -1.0559041500091553
    3. '(H' → logprob: -7.680903911590576
    4. '_' → logprob: -7.805903911590576
    5. ' (' → logprob: -7.930903911590576
    6. '_(' → logprob: -8.180904388427734
    7. '((' → logprob: -8.555904388427734
    8. '(_' → logprob: -8.680904388427734
    9. '(n' → logprob: -9.680904388427734
    10. '```' → logprob: -10.430904388427734

Token 111: '_k' (ID: 11637)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.25209328532218933
    2. '_k' → logprob: -1.6270933151245117
    3. '_is' → logprob: -3.8770933151245117
    4. 'k' → logprob: -6.752093315124512
    5. 'n' → logprob: -6.752093315124512
    6. '_equals' → logprob: -7.377093315124512
    7. '_equal' → logprob: -7.502093315124512
    8. 'is' → logprob: -7.502093315124512
    9. '_not' → logprob: -7.877093315124512
    10. '_N' → logprob: -8.502093315124512

Token 112: '_zero' (ID: 53468)
  Prédit: '_is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.3873591423034668
    2. '_zero' → logprob: -1.2623591423034668
    3. '_equals' → logprob: -3.387359142303467
    4. '_' → logprob: -6.137359142303467
    5. '_eq' → logprob: -7.512359142303467
    6. '_equal' → logprob: -8.387359619140625
    7. '0' → logprob: -8.387359619140625
    8. 'is' → logprob: -8.637359619140625
    9. '_k' → logprob: -9.012359619140625
    10. '_n' → logprob: -9.262359619140625

Token 113: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.037728603929281235
    2. '(N' → logprob: -3.9127285480499268
    3. '(' → logprob: -4.787728786468506
    4. '()' → logprob: -4.787728786468506
    5. '(K' → logprob: -8.287728309631348
    6. ' ():' → logprob: -9.662728309631348
    7. '()(' → logprob: -10.787728309631348
    8. '():
' → logprob: -10.787728309631348
    9. ' (' → logprob: -11.787728309631348
    10. ' ()' → logprob: -12.162728309631348

Token 114: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02134261466562748
    2. ',' → logprob: -4.271342754364014
    3. ')' → logprob: -5.271342754364014
    4. ' ):' → logprob: -6.396342754364014
    5. '):
' → logprob: -8.146342277526855
    6. ' )' → logprob: -10.771342277526855
    7. ':' → logprob: -11.646342277526855
    8. ',N' → logprob: -12.146342277526855
    9. ',K' → logprob: -12.271342277526855
    10. ' ,' → logprob: -12.646342277526855

Token 115: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07241082191467285
    2. 'K' → logprob: -3.322410821914673
    3. ' H' → logprob: -3.572410821914673
    4. ' K' → logprob: -5.822410583496094
    5. ')' → logprob: -7.072410583496094
    6. 'ans' → logprob: -7.572410583496094
    7. 'N' → logprob: -7.572410583496094
    8. ' ans' → logprob: -8.322410583496094
    9. ' ' → logprob: -9.072410583496094
    10. ' heights' → logprob: -9.447410583496094

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05933188274502754
    2. '):
' → logprob: -2.9343318939208984
    3. ',' → logprob: -5.934331893920898
    4. ' ):' → logprob: -6.684331893920898
    5. ')' → logprob: -8.059331893920898
    6. '):
' → logprob: -9.184331893920898
    7. ' ):
' → logprob: -9.684331893920898
    8. '):

' → logprob: -11.059331893920898
    9. '   ' → logprob: -11.309331893920898
    10. ' ' → logprob: -12.309331893920898

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007350585656240582
    2. ' return' → logprob: -7.875735282897949
    3. 'return' → logprob: -8.37573528289795
    4. '    
' → logprob: -9.25073528289795
    5. '
' → logprob: -11.75073528289795
    6. '   ' → logprob: -12.62573528289795
    7. ' ans' → logprob: -12.75073528289795
    8. '	return' → logprob: -13.00073528289795
    9. '```' → logprob: -13.12573528289795
    10. '0' → logprob: -13.12573528289795

Token 118: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2930329442024231
    2. ' return' → logprob: -1.7930328845977783
    3. '   ' → logprob: -2.5430328845977783
    4. 'ans' (adapté à ' ans') → logprob: -5.668033123016357
    5. 'max' → logprob: -6.918033123016357
    6. ' ans' → logprob: -6.918033123016357
    7. 'dp' → logprob: -7.418033123016357
    8. '0' → logprob: -7.543033123016357
    9. 'if' → logprob: -7.793033123016357
    10. ' ' → logprob: -8.0430326461792

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015139080351218581
    2. '=' → logprob: -6.501513957977295
    3. '_' → logprob: -12.501513481140137
    4. '   ' → logprob: -12.876513481140137
    5. ' ' → logprob: -13.126513481140137
    6. '  ' → logprob: -13.876513481140137
    7. ',' → logprob: -14.126513481140137
    8. ' =
' → logprob: -15.251513481140137
    9. 's' → logprob: -15.376513481140137
    10. '    ' → logprob: -16.126514434814453

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13544875383377075
    2. 'float' → logprob: -2.885448694229126
    3. 'N' → logprob: -3.885448694229126
    4. ' ' → logprob: -4.260448932647705
    5. 'max' → logprob: -4.385448932647705
    6. '1' → logprob: -5.135448932647705
    7. 'H' → logprob: -5.135448932647705
    8. 'sum' → logprob: -5.760448932647705
    9. ' float' → logprob: -5.885448932647705
    10. ' N' → logprob: -6.510448932647705

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5114304423332214
    2. 'N' → logprob: -2.011430501937866
    3. 'float' → logprob: -2.261430501937866
    4. 'max' → logprob: -2.636430501937866
    5. 'H' → logprob: -3.636430501937866
    6. '1' → logprob: -3.886430501937866
    7. 'sum' → logprob: -3.886430501937866
    8. 'min' → logprob: -4.761430263519287
    9. '10' → logprob: -5.636430263519287
    10. '-' → logprob: -5.636430263519287

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01695728860795498
    2. '   ' → logprob: -4.2669572830200195
    3. ' for' → logprob: -6.7669572830200195
    4. '    
' → logprob: -7.5169572830200195
    5. '
' → logprob: -8.01695728302002
    6. 'for' → logprob: -8.39195728302002
    7. '<|end|>' → logprob: -8.64195728302002
    8. '\n' → logprob: -8.76695728302002
    9. '

' → logprob: -10.14195728302002
    10. '  
' → logprob: -10.26695728302002

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09490270167589188
    2. '
' → logprob: -2.469902753829956
    3. ' for' → logprob: -5.219902515411377
    4. 'for' → logprob: -8.344902992248535
    5. '    
' → logprob: -9.594902992248535
    6. '<|end|>' → logprob: -9.719902992248535
    7. '
' → logprob: -10.094902992248535
    8. ',' → logprob: -10.969902992248535
    9. ' return' → logprob: -10.969902992248535
    10. '\n' → logprob: -11.094902992248535

Token 124: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3947024643421173
    2. ' for' → logprob: -1.144702434539795
    3. '   ' → logprob: -5.269702434539795
    4. ' i' → logprob: -6.644702434539795
    5. 'i' → logprob: -6.894702434539795
    6. 'prev' → logprob: -9.894702911376953
    7. '	for' → logprob: -10.644702911376953
    8. ' ' → logprob: -10.769702911376953
    9. 'current' → logprob: -10.769702911376953
    10. 'max' → logprob: -10.769702911376953

Token 125: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02117806486785412
    2. 'i' → logprob: -3.8961780071258545
    3. ' ' → logprob: -8.146178245544434
    4. '_' → logprob: -9.021178245544434
    5. ' _' → logprob: -9.521178245544434
    6. '   ' → logprob: -10.021178245544434
    7. '	i' → logprob: -10.021178245544434
    8. '  ' → logprob: -10.771178245544434
    9. '_i' → logprob: -11.271178245544434
    10. ' idx' → logprob: -12.271178245544434

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003255788702517748
    2. 'in' → logprob: -5.878255844116211
    3. ' ' → logprob: -7.878255844116211
    4. ',' → logprob: -10.878255844116211
    5. 'range' → logprob: -11.503255844116211
    6. '	in' → logprob: -11.878255844116211
    7. '  ' → logprob: -12.128255844116211
    8. '0' → logprob: -12.503255844116211
    9. '_' → logprob: -12.815755844116211
    10. '1' → logprob: -12.878255844116211

Token 127: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14268651604652405
    2. 'range' → logprob: -2.017686605453491
    3. ' ' → logprob: -12.26768684387207
    4. '  ' → logprob: -13.26768684387207
    5. '   ' → logprob: -13.76768684387207
    6. '	range' → logprob: -13.76768684387207
    7. ' xrange' → logprob: -14.64268684387207
    8. ' ran' → logprob: -14.64268684387207
    9. '(range' → logprob: -14.76768684387207
    10. 'ran' → logprob: -15.39268684387207

Token 128: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7835754988482222e-05
    2. '(N' → logprob: -11.500018119812012
    3. '(len' → logprob: -12.250018119812012
    4. ' (' → logprob: -13.500018119812012
    5. '1' → logprob: -13.875018119812012
    6. ' ' → logprob: -15.500018119812012
    7. '(n' → logprob: -16.250017166137695
    8. '(
' → logprob: -17.000017166137695
    9. '   ' → logprob: -17.500017166137695
    10. 'len' → logprob: -18.125017166137695

Token 129: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5074945688247681
    2. '-' → logprob: -1.382494568824768
    3. '):' → logprob: -2.5074944496154785
    4. '):
' → logprob: -3.7574944496154785
    5. '   ' → logprob: -3.8824944496154785
    6. ' ' → logprob: -4.3824944496154785
    7. ' ):' → logprob: -6.0074944496154785
    8. '+' → logprob: -6.1324944496154785
    9. '1' → logprob: -6.6324944496154785
    10. ')' → logprob: -6.7574944496154785

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008219154551625252
    2. '   ' → logprob: -5.758219242095947
    3. ' if' → logprob: -5.758219242095947
    4. '    ' → logprob: -7.883219242095947
    5. ' for' → logprob: -8.008218765258789
    6. ' ans' → logprob: -8.633218765258789
    7. ' ' → logprob: -8.758218765258789
    8. '1' → logprob: -8.883218765258789
    9. ',' → logprob: -9.258218765258789
    10. '0' → logprob: -9.383218765258789

Token 131: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8770103454589844
    2. '   ' → logprob: -1.0020103454589844
    3. 'ans' (adapté à ' ans') → logprob: -2.0020103454589844
    4. ' if' → logprob: -3.1270103454589844
    5. 'if' → logprob: -4.127010345458984
    6. '       ' → logprob: -4.752010345458984
    7. ' for' → logprob: -5.127010345458984
    8. '    ' → logprob: -6.002010345458984
    9. 'for' → logprob: -6.377010345458984
    10. '	ans' → logprob: -6.502010345458984

Token 132: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0290182176977396
    2. '+=' → logprob: -3.6540181636810303
    3. ' =' → logprob: -6.529018402099609
    4. '    ' → logprob: -7.654018402099609
    5. '=' → logprob: -7.779018402099609
    6. '+' → logprob: -8.52901840209961
    7. '   ' → logprob: -9.27901840209961
    8. ' ' → logprob: -10.40401840209961
    9. ' +' → logprob: -11.02901840209961
    10. ' -=' → logprob: -12.27901840209961

Token 133: ' max' (ID: 2999)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4944227933883667
    2. ' H' → logprob: -1.1194227933883667
    3. 'abs' → logprob: -3.4944229125976562
    4. ' abs' → logprob: -4.369422912597656
    5. 'max' → logprob: -5.119422912597656
    6. ' max' → logprob: -5.119422912597656
    7. ' ' → logprob: -6.244422912597656
    8. '1' → logprob: -6.244422912597656
    9. 'i' → logprob: -6.744422912597656
    10. ' i' → logprob: -7.119422912597656

Token 134: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014329688623547554
    2. '(H' → logprob: -4.26432991027832
    3. '0' → logprob: -9.01432991027832
    4. '((' → logprob: -11.51432991027832
    5. 'H' → logprob: -11.63932991027832
    6. '(i' → logprob: -11.88932991027832
    7. '(
' → logprob: -12.13932991027832
    8. '(N' → logprob: -12.63932991027832
    9. '(abs' → logprob: -12.63932991027832
    10. '([' → logprob: -13.26432991027832

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004527182609308511
    2. '[' → logprob: -8.375452995300293
    3. ')' → logprob: -8.875452995300293
    4. '[:' → logprob: -9.750452995300293
    5. ' [' → logprob: -12.125452995300293
    6. '[max' → logprob: -12.250452995300293
    7. '[
' → logprob: -13.375452995300293
    8. ')[' → logprob: -13.375452995300293
    9. '[N' → logprob: -13.625452995300293
    10. '(i' → logprob: -13.625452995300293

Token 136: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43441370129585266
    2. '],' → logprob: -2.5594136714935303
    3. '[i' → logprob: -2.6844136714935303
    4. '-' → logprob: -2.8094136714935303
    5. ' -' → logprob: -2.8094136714935303
    6. '+' → logprob: -3.5594136714935303
    7. ']-' → logprob: -3.8094136714935303
    8. '])' → logprob: -4.434413909912109
    9. ':' → logprob: -4.934413909912109
    10. ' ' → logprob: -5.684413909912109

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016605432610958815
    2. ' ' → logprob: -6.501660346984863
    3. '0' → logprob: -9.626660346984863
    4. ']' → logprob: -10.501660346984863
    5. '2' → logprob: -11.251660346984863
    6. '   ' → logprob: -11.564160346984863
    7. '  ' → logprob: -12.126660346984863
    8. '-' → logprob: -12.189160346984863
    9. '```' → logprob: -12.376660346984863
    10. ')' → logprob: -12.501660346984863

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11676298826932907
    2. ' -' → logprob: -2.99176287651062
    3. '-' → logprob: -3.11676287651062
    4. ']-' → logprob: -5.616763114929199
    5. ')' → logprob: -5.741763114929199
    6. '],' → logprob: -6.241763114929199
    7. ',' → logprob: -6.366763114929199
    8. '   ' → logprob: -6.491763114929199
    9. '[' → logprob: -6.991763114929199
    10. ' ]' → logprob: -7.116763114929199

Token 139: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13393616676330566
    2. '-' → logprob: -2.1339361667633057
    3. ' ' → logprob: -5.758935928344727
    4. ',' → logprob: -6.008935928344727
    5. '   ' → logprob: -7.258935928344727
    6. ' ,' → logprob: -8.633935928344727
    7. ')' → logprob: -8.883935928344727
    8. '0' → logprob: -9.383935928344727
    9. '[' → logprob: -9.508935928344727
    10. '  ' → logprob: -9.758935928344727

Token 140: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.019929859787225723
    2. '0' → logprob: -4.769929885864258
    3. '1' → logprob: -4.769929885864258
    4. ' H' → logprob: -6.144929885864258
    5. 'i' → logprob: -8.394929885864258
    6. ' ' → logprob: -8.519929885864258
    7. '(H' → logprob: -9.894929885864258
    8. '   ' → logprob: -10.957429885864258
    9. '	H' → logprob: -11.144929885864258
    10. '2' → logprob: -11.207429885864258

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42904675006866455
    2. 'i' → logprob: -1.0540467500686646
    3. ' i' → logprob: -8.804046630859375
    4. '   ' → logprob: -9.429046630859375
    5. '0' → logprob: -10.054046630859375
    6. '[' → logprob: -10.429046630859375
    7. '	i' → logprob: -10.679046630859375
    8. ' [' → logprob: -12.679046630859375
    9. '_i' → logprob: -12.929046630859375
    10. ' ' → logprob: -13.179046630859375

Token 142: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04736011102795601
    2. '-' → logprob: -3.4223601818084717
    3. '1' → logprob: -5.172359943389893
    4. ' -' → logprob: -5.672359943389893
    5. ' ],' → logprob: -6.297359943389893
    6. ']' → logprob: -6.547359943389893
    7. '+' → logprob: -7.422359943389893
    8. ' ' → logprob: -8.67236042022705
    9. '0' → logprob: -8.79736042022705
    10. '   ' → logprob: -9.04736042022705

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890862971544266
    2. ' ' → logprob: -2.578908681869507
    3. '1' → logprob: -11.828908920288086
    4. ')' → logprob: -11.953908920288086
    5. '<|end|>' → logprob: -13.391408920288086
    6. '  ' → logprob: -13.578908920288086
    7. '   ' → logprob: -14.391408920288086
    8. ' ' → logprob: -14.953908920288086
    9. '    ' → logprob: -15.766408920288086
    10. ' )' → logprob: -15.891408920288086

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007622484117746353
    2. ' ' → logprob: -4.882622718811035
    3. '1' → logprob: -12.007622718811035
    4. ')' → logprob: -12.382622718811035
    5. '   ' → logprob: -12.757622718811035
    6. '  ' → logprob: -13.757622718811035
    7. '
' → logprob: -15.070122718811035
    8. '    ' → logprob: -15.820122718811035
    9. '00' → logprob: -15.882622718811035
    10. '<|end|>' → logprob: -15.882622718811035

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015315281925722957
    2. ')
' → logprob: -6.501531600952148
    3. ' )' → logprob: -10.751531600952148
    4. '   ' → logprob: -12.126531600952148
    5. ')

' → logprob: -14.501531600952148
    6. '))' → logprob: -14.751531600952148
    7. ')
' → logprob: -14.751531600952148
    8. ' ' → logprob: -15.751531600952148
    9. ' )
' → logprob: -15.876531600952148
    10. '())' → logprob: -15.876531600952148

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006652018520981073
    2. '
' → logprob: -5.631651878356934
    3. ' return' → logprob: -6.131651878356934
    4. 'return' → logprob: -7.381651878356934
    5. '	return' → logprob: -9.006651878356934
    6. '    
' → logprob: -9.631651878356934
    7. ' 
' → logprob: -10.881651878356934
    8. '
' → logprob: -11.506651878356934
    9. '\n' → logprob: -11.756651878356934
    10. '       ' → logprob: -12.381651878356934

Token 147: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8700337409973145
    2. '   ' → logprob: -1.1200337409973145
    3. 'return' (adapté à ' return') → logprob: -1.3700337409973145
    4. '
' → logprob: -8.120033264160156
    5. '	return' → logprob: -8.370033264160156
    6. ' ' → logprob: -8.995033264160156
    7. '    
' → logprob: -11.245033264160156
    8. ' 
' → logprob: -11.870033264160156
    9. 'eturn' → logprob: -12.245033264160156
    10. ':return' → logprob: -12.495033264160156

Token 148: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.31328392028808594
    2. 'ans' → logprob: -1.313283920288086
    3. '(ans' → logprob: -11.063283920288086
    4. '	ans' → logprob: -12.063283920288086
    5. '0' → logprob: -15.063283920288086
    6. '_ans' → logprob: -15.063283920288086
    7. ' ' → logprob: -16.188283920288086
    8. 'answer' → logprob: -16.938283920288086
    9. ' ' → logprob: -17.438283920288086
    10. 'anst' → logprob: -17.813283920288086

Token 149: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5675858855247498
    2. '
' → logprob: -1.5675859451293945
    3. 'def' → logprob: -1.5675859451293945
    4. '<|end|>' → logprob: -4.1925859451293945
    5. ' def' → logprob: -7.5675859451293945
    6. '<|end|>' → logprob: -9.067585945129395
    7. '```' → logprob: -9.442585945129395
    8. '


' → logprob: -9.942585945129395
    9. '[' → logprob: -10.567585945129395
    10. '
' → logprob: -10.817585945129395

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13010166585445404
    2. '
' → logprob: -2.1301016807556152
    3. '

' → logprob: -5.880101680755615
    4. '<|end|>' → logprob: -8.130101203918457
    5. ' def' → logprob: -11.005101203918457
    6. '```' → logprob: -11.380101203918457
    7. '
' → logprob: -11.505101203918457
    8. '  
' → logprob: -11.755101203918457
    9. '\' → logprob: -11.880101203918457
    10. '\n' → logprob: -12.130101203918457

Token 151: ' initialize' (ID: 18400)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5153273940086365
    2. ' main' → logprob: -1.0153274536132812
    3. 'compute' → logprob: -4.015327453613281
    4. ' solve' → logprob: -4.640327453613281
    5. 'main' → logprob: -5.515327453613281
    6. ' is' → logprob: -6.015327453613281
    7. ' read' → logprob: -6.265327453613281
    8. ' find' → logprob: -6.765327453613281
    9. ' calculate' → logprob: -7.265327453613281
    10. ' process' → logprob: -7.390327453613281

Token 152: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.08672666549682617
    2. '_ans' → logprob: -4.211726665496826
    3. '_DP' → logprob: -4.336726665496826
    4. '_array' → logprob: -4.836726665496826
    5. '_arrays' → logprob: -4.836726665496826
    6. '_variables' → logprob: -5.211726665496826
    7. '_' → logprob: -5.211726665496826
    8. '_arr' → logprob: -5.336726665496826
    9. '_cache' → logprob: -6.211726665496826
    10. '_d' → logprob: -6.336726665496826

Token 153: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04271790012717247
    2. '(' → logprob: -3.542717933654785
    3. '():' → logprob: -4.792717933654785
    4. '(n' → logprob: -6.167717933654785
    5. ' (' → logprob: -6.792717933654785
    6. '(size' → logprob: -7.917717933654785
    7. ':' → logprob: -8.417717933654785
    8. '():
' → logprob: -8.542717933654785
    9. ' =' → logprob: -9.167717933654785
    10. '_' → logprob: -9.167717933654785

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02534722164273262
    2. '+' → logprob: -3.7753472328186035
    3. ' +' → logprob: -7.4003472328186035
    4. '):' → logprob: -7.4003472328186035
    5. ',K' → logprob: -7.4003472328186035
    6. ' ,' → logprob: -9.150346755981445
    7. '):
' → logprob: -9.150346755981445
    8. '   ' → logprob: -11.525346755981445
    9. '+,' → logprob: -11.525346755981445
    10. '_plus' → logprob: -12.025346755981445

Token 155: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009048703126609325
    2. ' K' → logprob: -4.759048938751221
    3. 'N' → logprob: -8.634048461914062
    4. ')' → logprob: -9.009048461914062
    5. 'dp' → logprob: -10.134048461914062
    6. 'H' → logprob: -10.634048461914062
    7. '
' → logprob: -11.884048461914062
    8. ' ' → logprob: -12.009048461914062
    9. 'def' → logprob: -12.134048461914062
    10. '2' → logprob: -12.259048461914062

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22616687417030334
    2. '):
' → logprob: -1.726166844367981
    3. ',' → logprob: -3.7261669635772705
    4. ' ):' → logprob: -8.601166725158691
    5. '):
' → logprob: -9.476166725158691
    6. ')' → logprob: -9.851166725158691
    7. '   ' → logprob: -10.851166725158691
    8. ' ):
' → logprob: -11.601166725158691
    9. '):

' → logprob: -11.726166725158691
    10. ' ,' → logprob: -12.601166725158691

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3016643524169922
    2. ' [[' → logprob: -1.4266643524169922
    3. '[[' → logprob: -1.9266643524169922
    4. '[' → logprob: -2.176664352416992
    5. ' [' → logprob: -2.301664352416992
    6. 'dp' → logprob: -2.551664352416992
    7. ' return' → logprob: -3.551664352416992
    8. 'return' → logprob: -4.301664352416992
    9. ' dp' → logprob: -5.051664352416992
    10. 'import' → logprob: -7.051664352416992

Token 158: ' size' (ID: 2349)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.7458264231681824
    2. '[[' → logprob: -1.2458264827728271
    3. 'dp' → logprob: -1.8708264827728271
    4. ' dp' → logprob: -3.870826482772827
    5. '[' → logprob: -4.120826244354248
    6. ' [' → logprob: -4.120826244354248
    7. ' return' → logprob: -4.245826244354248
    8. 'return' → logprob: -4.495826244354248
    9. 'import' → logprob: -5.870826244354248
    10. 'float' → logprob: -7.495826244354248

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693175196647644
    2. ' =' → logprob: -0.693175196647644
    3. '_' → logprob: -11.318175315856934
    4. 's' → logprob: -11.943175315856934
    5. '   ' → logprob: -12.318175315856934
    6. '_=' → logprob: -13.818175315856934
    7. ' ' → logprob: -14.193175315856934
    8. '=N' → logprob: -14.568175315856934
    9. 'x' → logprob: -14.818175315856934
    10. ')' → logprob: -14.943175315856934

Token 160: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.42944198846817017
    2. ' N' → logprob: -1.6794419288635254
    3. ' (' → logprob: -2.9294419288635254
    4. '(N' → logprob: -2.9294419288635254
    5. 'K' → logprob: -3.5544419288635254
    6. ' K' → logprob: -4.304441928863525
    7. '(' → logprob: -5.054441928863525
    8. '(K' → logprob: -5.429441928863525
    9. ' ' → logprob: -6.804441928863525
    10. '[N' → logprob: -7.929441928863525

Token 161: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02715245820581913
    2. ' +' → logprob: -3.6521525382995605
    3. ' -' → logprob: -7.5271525382995605
    4. '-' → logprob: -8.277152061462402
    5. '-K' → logprob: -9.902152061462402
    6. '
' → logprob: -12.652152061462402
    7. '*' → logprob: -13.277152061462402
    8. '+k' → logprob: -14.027152061462402
    9. '-k' → logprob: -14.152152061462402
    10. '+
' → logprob: -14.652152061462402

Token 162: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0015571167459711432
    2. ' K' → logprob: -6.501557350158691
    3. '1' → logprob: -10.626557350158691
    4. '   ' → logprob: -11.126557350158691
    5. ' ' → logprob: -12.251557350158691
    6. '(K' → logprob: -12.376557350158691
    7. '	K' → logprob: -13.376557350158691
    8. '  ' → logprob: -13.376557350158691
    9. '    ' → logprob: -14.126557350158691
    10. '2' → logprob: -14.626557350158691

Token 163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932179927825928
    2. ' +' → logprob: -0.6932179927825928
    3. '   ' → logprob: -10.443218231201172
    4. '
' → logprob: -10.818218231201172
    5. '-' → logprob: -12.193218231201172
    6. ' -' → logprob: -12.443218231201172
    7. ' ' → logprob: -12.693218231201172
    8. '1' → logprob: -13.380718231201172
    9. '```' → logprob: -13.818218231201172
    10. '+
' → logprob: -13.943218231201172

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018280261429026723
    2. ' ' → logprob: -8.62518310546875
    3. '2' → logprob: -12.75018310546875
    4. '   ' → logprob: -15.75018310546875
    5. '
' → logprob: -17.25018310546875
    6. '3' → logprob: -18.06268310546875
    7. '  ' → logprob: -18.18768310546875
    8. '```' → logprob: -18.18768310546875
    9. '

' → logprob: -18.81268310546875
    10. '0' → logprob: -19.12518310546875

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.24179228907451e-05
    2. '2' → logprob: -9.750061988830566
    3. ' ' → logprob: -12.500061988830566
    4. '
' → logprob: -15.875061988830566
    5. '3' → logprob: -16.750062942504883
    6. '   ' → logprob: -17.000062942504883
    7. '

' → logprob: -17.125062942504883
    8. '```' → logprob: -18.250062942504883
    9. '１' → logprob: -18.562562942504883
    10. '0' → logprob: -18.687562942504883

Token 166: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011891042813658714
    2. 'dp' → logprob: -4.636890888214111
    3. '    
' → logprob: -7.386890888214111
    4. '
' → logprob: -7.886890888214111
    5. ' 
' → logprob: -8.38689136505127
    6. '   ' → logprob: -8.63689136505127
    7. '  
' → logprob: -8.76189136505127
    8. ' dp' → logprob: -8.76189136505127
    9. ',' → logprob: -8.88689136505127
    10. 'DP' → logprob: -9.76189136505127

Token 167: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07532667368650436
    2. '   ' → logprob: -2.700326681137085
    3. 'dp' → logprob: -6.200326442718506
    4. '    
' → logprob: -6.450326442718506
    5. 'return' → logprob: -7.700326442718506
    6. ',' → logprob: -8.200326919555664
    7. ' return' → logprob: -8.575326919555664
    8. ' dp' → logprob: -8.825326919555664
    9. ')' → logprob: -8.950326919555664
    10. ')
' → logprob: -9.075326919555664

Token 168: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.14417704939842224
    2. 'return' → logprob: -2.019176959991455
    3. ' return' → logprob: -7.394176959991455
    4. 'import' → logprob: -8.144177436828613
    5. ' dp' → logprob: -8.519177436828613
    6. '   ' → logprob: -8.519177436828613
    7. 'DP' → logprob: -9.144177436828613
    8. '[' → logprob: -10.269177436828613
    9. 'INF' → logprob: -10.894177436828613
    10. '[[' → logprob: -11.019177436828613

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426977813243866
    2. '=' → logprob: -2.017697811126709
    3. '[' → logprob: -11.14269733428955
    4. ' ' → logprob: -13.14269733428955
    5. '   ' → logprob: -13.14269733428955
    6. ' =[' → logprob: -13.89269733428955
    7. ',' → logprob: -14.26769733428955
    8. '=[' → logprob: -14.51769733428955
    9. ']' → logprob: -14.76769733428955
    10. '	' → logprob: -15.14269733428955

Token 170: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04637618362903595
    2. ' [' → logprob: -3.7963762283325195
    3. '[[' → logprob: -4.0463762283325195
    4. '[-' → logprob: -5.4213762283325195
    5. ' [[' → logprob: -7.0463762283325195
    6. ' [-' → logprob: -9.92137622833252
    7. '[int' → logprob: -11.92137622833252
    8. '[n' → logprob: -12.04637622833252
    9. '[s' → logprob: -12.42137622833252
    10. '[N' → logprob: -12.54637622833252

Token 171: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36390650272369385
    2. '   ' → logprob: -1.4889065027236938
    3. 'for' → logprob: -2.6139063835144043
    4. '	for' → logprob: -5.363906383514404
    5. '[' → logprob: -6.863906383514404
    6. '    
' → logprob: -8.988906860351562
    7. ' ' → logprob: -9.488906860351562
    8. '
' → logprob: -9.863906860351562
    9. ' =' → logprob: -10.113906860351562
    10. '    ' → logprob: -10.488906860351562

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10043945908546448
    2. ' for' → logprob: -2.3504395484924316
    3. '   ' → logprob: -8.600439071655273
    4. '	for' → logprob: -10.100439071655273
    5. '[' → logprob: -11.975439071655273
    6. ' ' → logprob: -14.225439071655273
    7. ' [' → logprob: -14.850439071655273
    8. '    
' → logprob: -16.850439071655273
    9. ' ' → logprob: -17.225439071655273
    10. '  ' → logprob: -17.350439071655273

Token 173: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003817653050646186
    2. ' _' → logprob: -6.003817558288574
    3. '_i' → logprob: -6.878817558288574
    4. 'i' → logprob: -8.503817558288574
    5. ' i' → logprob: -9.128817558288574
    6. '_j' → logprob: -16.25381851196289
    7. ' ' → logprob: -16.37881851196289
    8. '_=' → logprob: -16.62881851196289
    9. ' ' → logprob: -16.75381851196289
    10. '_

' → logprob: -17.62881851196289

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14363737404346466
    2. 'in' → logprob: -2.0186374187469482
    3. 'i' → logprob: -8.393637657165527
    4. 'n' → logprob: -8.393637657165527
    5. ' ' → logprob: -8.393637657165527
    6. 'range' → logprob: -8.768637657165527
    7. ' i' → logprob: -9.893637657165527
    8. '  ' → logprob: -11.268637657165527
    9. '_' → logprob: -11.268637657165527
    10. ' range' → logprob: -11.393637657165527

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006569160032086074
    2. ' range' → logprob: -7.625657081604004
    3. 'ange' → logprob: -8.875657081604004
    4. '(range' → logprob: -11.375657081604004
    5. 'size' → logprob: -11.500657081604004
    6. 'nge' → logprob: -12.250657081604004
    7. '	range' → logprob: -14.625657081604004
    8. '   ' → logprob: -14.875657081604004
    9. 'dp' → logprob: -14.875657081604004
    10. 'ge' → logprob: -15.625657081604004

Token 176: '(N' (ID: 10564)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -11.250029563903809
    3. ' size' → logprob: -11.750029563903809
    4. ' (' → logprob: -12.125029563903809
    5. 'size' → logprob: -12.625029563903809
    6. '(s' → logprob: -16.250030517578125
    7. ',size' → logprob: -17.625030517578125
    8. '<size' → logprob: -17.750030517578125
    9. '=size' → logprob: -18.500030517578125
    10. '	size' → logprob: -18.500030517578125

Token 177: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2212064117193222
    2. '-K' → logprob: -2.0962064266204834
    3. '):
' → logprob: -3.3462064266204834
    4. '+' → logprob: -3.8462064266204834
    5. '-' → logprob: -4.346206188201904
    6. '):' → logprob: -5.346206188201904
    7. ' +' → logprob: -8.096206665039062
    8. '-k' → logprob: -8.346206665039062
    9. ')' → logprob: -8.721206665039062
    10. '-size' → logprob: -8.721206665039062

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020886825397610664
    2. ' ' → logprob: -3.8958868980407715
    3. '2' → logprob: -8.020886421203613
    4. ' K' → logprob: -12.145886421203613
    5. 'K' → logprob: -13.395886421203613
    6. '
' → logprob: -13.520886421203613
    7. '   ' → logprob: -13.520886421203613
    8. ' size' → logprob: -13.770886421203613
    9. '3' → logprob: -13.895886421203613
    10. '  ' → logprob: -13.958386421203613

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006149819819256663
    2. '2' → logprob: -7.750615119934082
    3. 'K' → logprob: -8.750615119934082
    4. ' ' → logprob: -11.000615119934082
    5. '0' → logprob: -12.000615119934082
    6. '3' → logprob: -14.000615119934082
    7. ' K' → logprob: -14.125615119934082
    8. '10' → logprob: -14.250615119934082
    9. '5' → logprob: -15.250615119934082
    10. '   ' → logprob: -15.875615119934082

Token 180: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14320926368236542
    2. '):' → logprob: -2.018209218978882
    3. ')' → logprob: -8.143209457397461
    4. '):
' → logprob: -8.893209457397461
    5. '   ' → logprob: -10.143209457397461
    6. ' ):
' → logprob: -10.768209457397461
    7. '):

' → logprob: -11.268209457397461
    8. ':' → logprob: -11.518209457397461
    9. ',' → logprob: -11.768209457397461
    10. ' ):' → logprob: -12.768209457397461

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0612032450735569
    2. '       ' → logprob: -3.0612032413482666
    3. ' dp' → logprob: -4.436203479766846
    4. '[' → logprob: -8.186203002929688
    5. 'dp' → logprob: -9.061203002929688
    6. '	dp' → logprob: -9.186203002929688
    7. ',' → logprob: -9.936203002929688
    8. '[]' → logprob: -10.561203002929688
    9. '	   ' → logprob: -10.811203002929688
    10. '    ' → logprob: -10.811203002929688

Token 182: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1798413246870041
    2. ' dp' → logprob: -1.8048412799835205
    3. '   ' → logprob: -9.554841041564941
    4. '	dp' → logprob: -10.929841041564941
    5. '       ' → logprob: -12.304841041564941
    6. '[' → logprob: -14.054841041564941
    7. '    ' → logprob: -14.304841041564941
    8. ' ' → logprob: -14.804841041564941
    9. 'import' → logprob: -14.929841041564941
    10. '(dp' → logprob: -15.179841041564941

Token 183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000680265249684453
    2. '.' → logprob: -7.375680446624756
    3. '.extend' → logprob: -10.000679969787598
    4. ' .' → logprob: -12.250679969787598
    5. '+=' → logprob: -13.875679969787598
    6. ' +=' → logprob: -14.000679969787598
    7. 'append' → logprob: -14.125679969787598
    8. '+' → logprob: -15.250679969787598
    9. '.app' → logprob: -15.250679969787598
    10. '.Append' → logprob: -15.500679969787598

Token 184: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0017947778105735779
    2. '([-' → logprob: -6.376794815063477
    3. '[' → logprob: -9.876794815063477
    4. '(' → logprob: -10.501794815063477
    5. '(float' → logprob: -11.501794815063477
    6. '[-' → logprob: -13.001794815063477
    7. '   ' → logprob: -15.251794815063477
    8. 'float' → logprob: -15.251794815063477
    9. '(None' → logprob: -15.626794815063477
    10. '([]' → logprob: -15.626794815063477

Token 185: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06314034014940262
    2. '0' → logprob: -2.938140392303467
    3. '10' → logprob: -5.188140392303467
    4. '-' → logprob: -6.063140392303467
    5. 'int' → logprob: -8.563139915466309
    6. ' float' → logprob: -10.188139915466309
    7. '100' → logprob: -10.688139915466309
    8. '999' → logprob: -10.813139915466309
    9. '1' → logprob: -11.313139915466309
    10. '-f' → logprob: -11.938139915466309

Token 186: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -4.7755875129951164e-05
    2. '9' → logprob: -10.00004768371582
    3. ' **' → logprob: -13.25004768371582
    4. '000' → logprob: -15.12504768371582
    5. '18' → logprob: -15.75004768371582
    6. '10' → logprob: -16.12504768371582
    7. '^' → logprob: -17.75004768371582
    8. '7' → logprob: -17.75004768371582
    9. '8' → logprob: -18.62504768371582
    10. '09' → logprob: -18.75004768371582

Token 187: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1026051715016365
    2. '15' → logprob: -2.477605104446411
    3. '18' → logprob: -4.85260534286499
    4. '10' → logprob: -5.22760534286499
    5. '12' → logprob: -8.102604866027832
    6. '16' → logprob: -10.352604866027832
    7. '14' → logprob: -10.602604866027832
    8. '13' → logprob: -11.477604866027832
    9. '11' → logprob: -11.602604866027832
    10. '20' → logprob: -12.102604866027832

Token 188: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5084934830665588
    2. '15' → logprob: -1.008493423461914
    3. '18' → logprob: -4.008493423461914
    4. '10' → logprob: -4.383493423461914
    5. '12' → logprob: -6.133493423461914
    6. '14' → logprob: -7.883493423461914
    7. '16' → logprob: -8.258493423461914
    8. '13' → logprob: -9.008493423461914
    9. '11' → logprob: -9.383493423461914
    10. '7' → logprob: -9.883493423461914

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012386832386255264
    2. ' ]' → logprob: -7.501238822937012
    3. ']*' → logprob: -8.001238822937012
    4. '+' → logprob: -8.751238822937012
    5. ']+' → logprob: -9.251238822937012
    6. ' +' → logprob: -9.751238822937012
    7. ' for' → logprob: -11.251238822937012
    8. ']*(' → logprob: -11.376238822937012
    9. ',' → logprob: -12.126238822937012
    10. '])' → logprob: -13.251238822937012

Token 190: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19708548486232758
    2. ']' → logprob: -2.197085380554199
    3. ' for' → logprob: -3.572085380554199
    4. '+' → logprob: -3.947085380554199
    5. ' +' → logprob: -5.197085380554199
    6. ' )' → logprob: -5.447085380554199
    7. ' ]' → logprob: -5.572085380554199
    8. ',' → logprob: -6.072085380554199
    9. 'for' → logprob: -7.072085380554199
    10. '])' → logprob: -7.072085380554199

Token 191: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2292015105485916
    2. '(size' → logprob: -1.6042015552520752
    3. ' size' → logprob: -5.854201316833496
    4. ' (' → logprob: -7.104201316833496
    5. '(N' → logprob: -10.104201316833496
    6. '(' → logprob: -10.229201316833496
    7. '   ' → logprob: -12.479201316833496
    8. '(K' → logprob: -12.729201316833496
    9. '[size' → logprob: -13.104201316833496
    10. '<size' → logprob: -13.979201316833496

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.664371848164592e-05
    2. ' )' → logprob: -11.375016212463379
    3. ')
' → logprob: -12.250016212463379
    4. '))' → logprob: -15.500016212463379
    5. '   ' → logprob: -16.125017166137695
    6. '])' → logprob: -17.750017166137695
    7. ')

' → logprob: -18.250017166137695
    8. '[])' → logprob: -18.500017166137695
    9. ' ' → logprob: -18.750017166137695
    10. '       ' → logprob: -19.250017166137695

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006124787032604218
    2. 'return' → logprob: -8.000612258911133
    3. '	return' → logprob: -8.625612258911133
    4. ' return' → logprob: -9.250612258911133
    5. '   ' → logprob: -14.375612258911133
    6. '<|end|>' → logprob: -15.875612258911133
    7. ':return' → logprob: -15.875612258911133
    8. '       ' → logprob: -16.125612258911133
    9. 'eturn' → logprob: -16.750612258911133
    10. '
' → logprob: -16.750612258911133

Token 194: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048226647078990936
    2. 'return' (adapté à ' return') → logprob: -3.1732265949249268
    3. ' return' → logprob: -5.548226833343506
    4. '	return' → logprob: -6.673226833343506
    5. '<|end|>' → logprob: -10.923226356506348
    6. '    
' → logprob: -11.423226356506348
    7. ':return' → logprob: -11.923226356506348
    8. ')' → logprob: -12.798226356506348
    9. '
' → logprob: -12.798226356506348
    10. '\t' → logprob: -13.298226356506348

Token 195: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015860427811276168
    2. ' dp' → logprob: -8.750158309936523
    3. '(dp' → logprob: -16.875158309936523
    4. '	dp' → logprob: -17.375158309936523
    5. 'd' → logprob: -19.625158309936523
    6. '_dp' → logprob: -19.875158309936523
    7. 'DP' → logprob: -21.875158309936523
    8. '   ' → logprob: -22.000158309936523
    9. 'df' → logprob: -22.375158309936523
    10. 'dm' → logprob: -22.750158309936523

Token 196: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2108355015516281
    2. '<|end|>' → logprob: -1.7108354568481445
    3. '
' → logprob: -4.8358354568481445
    4. '<|end|>' → logprob: -7.4608354568481445
    5. '```' → logprob: -8.210835456848145
    6. ')' → logprob: -8.460835456848145
    7. '

' → logprob: -9.210835456848145
    8. '[' → logprob: -9.335835456848145
    9. ' def' → logprob: -9.460835456848145
    10. ']' → logprob: -10.960835456848145

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -16.125
    3. '```' → logprob: -16.375
    4. 'for' → logprob: -16.75
    5. 'from' → logprob: -16.875
    6. '#' → logprob: -16.875
    7. '[' → logprob: -17.5
    8. ']' → logprob: -17.5
    9. '<|end|>' → logprob: -17.625
    10. ')' → logprob: -17.625

Token 198: ' set' (ID: 920)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7549552917480469
    2. 'solve' → logprob: -1.7549552917480469
    3. 'compute' → logprob: -1.7549552917480469
    4. ' main' → logprob: -2.379955291748047
    5. 'calculate' → logprob: -3.754955291748047
    6. ' solve' → logprob: -4.004955291748047
    7. 'dp' → logprob: -4.629955291748047
    8. 'read' → logprob: -4.754955291748047
    9. ' compute' → logprob: -5.129955291748047
    10. 'min' → logprob: -5.254955291748047

Token 199: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.11242810636758804
    2. '_base' → logprob: -2.7374281883239746
    3. '_initial' → logprob: -3.6124281883239746
    4. 'dp' → logprob: -5.112428188323975
    5. '_start' → logprob: -5.987428188323975
    6. '_max' → logprob: -7.237428188323975
    7. '_up' → logprob: -7.237428188323975
    8. '_' → logprob: -7.487428188323975
    9. '_ans' → logprob: -7.487428188323975
    10. '_first' → logprob: -7.737428188323975

Token 200: '_x' (ID: 7054)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6468942165374756
    2. '(' → logprob: -1.2718942165374756
    3. '(N' → logprob: -1.7718942165374756
    4. '_value' → logprob: -4.646894454956055
    5. '_' → logprob: -5.146894454956055
    6. '_dp' → logprob: -5.396894454956055
    7. 'dp' → logprob: -6.396894454956055
    8. '_initial' → logprob: -7.021894454956055
    9. '(D' → logprob: -7.521894454956055
    10. '_(' → logprob: -7.646894454956055

Token 201: '1' (ID: 16)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.20269201695919037
    2. '_value' → logprob: -2.5776920318603516
    3. '0' → logprob: -3.4526920318603516
    4. '_start' → logprob: -4.077692031860352
    5. '_dp' → logprob: -4.452692031860352
    6. '(' → logprob: -5.077692031860352
    7. '_values' → logprob: -5.077692031860352
    8. 'dp' → logprob: -5.202692031860352
    9. '_zero' → logprob: -5.452692031860352
    10. '_val' → logprob: -5.702692031860352

Token 202: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.060116373002529144
    2. '0' → logprob: -3.4351162910461426
    3. '_dp' → logprob: -4.310116291046143
    4. 'dp' → logprob: -5.560116291046143
    5. '(' → logprob: -6.310116291046143
    6. '_value' → logprob: -6.560116291046143
    7. '_zero' → logprob: -7.185116291046143
    8. '_to' → logprob: -7.310116291046143
    9. '1' → logprob: -7.310116291046143
    10. '_' → logprob: -7.310116291046143

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013863088097423315
    2. ',N' → logprob: -7.0013861656188965
    3. ' ,' → logprob: -8.126386642456055
    4. '):' → logprob: -8.876386642456055
    5. ',n' → logprob: -10.876386642456055
    6. ',i' → logprob: -13.001386642456055
    7. '):
' → logprob: -13.001386642456055
    8. ')' → logprob: -13.001386642456055
    9. ',K' → logprob: -13.251386642456055
    10. '   ' → logprob: -13.251386642456055

Token 204: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6185172200202942
    2. 'H' → logprob: -0.8685172200202942
    3. ' N' → logprob: -4.1185173988342285
    4. ' H' → logprob: -4.3685173988342285
    5. 'dp' → logprob: -4.9935173988342285
    6. 'K' → logprob: -5.4935173988342285
    7. 'x' → logprob: -7.6185173988342285
    8. 'i' → logprob: -7.9935173988342285
    9. ' dp' → logprob: -8.36851692199707
    10. ' K' → logprob: -8.61851692199707

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016790216614026576
    2. ' ,' → logprob: -9.625167846679688
    3. ',K' → logprob: -10.000167846679688
    4. '):' → logprob: -10.500167846679688
    5. '):
' → logprob: -11.375167846679688
    6. ',
' → logprob: -12.375167846679688
    7. 'K' → logprob: -13.250167846679688
    8. ')' → logprob: -13.375167846679688
    9. '   ' → logprob: -13.375167846679688
    10. '
' → logprob: -13.500167846679688

Token 206: ' H' (ID: 487)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.024032052606344223
    2. ' K' → logprob: -3.7740321159362793
    3. 'N' → logprob: -8.024031639099121
    4. ')' → logprob: -8.399031639099121
    5. '1' → logprob: -9.899031639099121
    6. 'size' → logprob: -9.899031639099121
    7. '0' → logprob: -10.899031639099121
    8. ' ' → logprob: -11.149031639099121
    9. ' N' → logprob: -11.149031639099121
    10. 'H' → logprob: -11.586531639099121

Token 207: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013440200127661228
    2. '):' → logprob: -4.638440132141113
    3. '):
' → logprob: -5.638440132141113
    4. ' ,' → logprob: -9.638440132141113
    5. '):
' → logprob: -10.763440132141113
    6. '):

' → logprob: -11.638440132141113
    7. '   ' → logprob: -12.263440132141113
    8. ')' → logprob: -12.263440132141113
    9. ',K' → logprob: -12.888440132141113
    10. '1' → logprob: -13.388440132141113

Token 208: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7786445617675781
    2. 'for' → logprob: -1.1536445617675781
    3. '   ' → logprob: -1.5286445617675781
    4. 'dp' → logprob: -4.903644561767578
    5. ' dp' → logprob: -7.528644561767578
    6. 'x' → logprob: -7.903644561767578
    7. '
' → logprob: -9.403644561767578
    8. 'def' → logprob: -9.903644561767578
    9. '    
' → logprob: -10.403644561767578
    10. '	for' → logprob: -10.528644561767578

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00900215096771717
    2. 'dp' → logprob: -5.134002208709717
    3. ' for' → logprob: -6.634002208709717
    4. 'x' → logprob: -7.009002208709717
    5. 'size' → logprob: -7.384002208709717
    6. '   ' → logprob: -10.384001731872559
    7. 'max' → logprob: -10.384001731872559
    8. 'index' → logprob: -11.259001731872559
    9. 'min' → logprob: -11.509001731872559
    10. 'sum' → logprob: -11.509001731872559

Token 210: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4471960961818695
    2. 'i' → logprob: -1.072196125984192
    3. 'x' → logprob: -4.447196006774902
    4. ' x' → logprob: -5.072196006774902
    5. ' j' → logprob: -9.447196006774902
    6. 'j' → logprob: -9.697196006774902
    7. ' idx' → logprob: -11.072196006774902
    8. 'index' → logprob: -11.134696006774902
    9. 's' → logprob: -11.134696006774902
    10. 'k' → logprob: -11.197196006774902

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1459113210439682
    2. 'in' → logprob: -2.02091121673584
    3. '1' → logprob: -5.89591121673584
    4. 'x' → logprob: -8.14591121673584
    5. ' ' → logprob: -9.89591121673584
    6. ',' → logprob: -10.14591121673584
    7. '_' → logprob: -10.52091121673584
    8. '   ' → logprob: -11.14591121673584
    9. '```' → logprob: -11.39591121673584
    10. '
' → logprob: -12.02091121673584

Token 212: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6326382160186768
    2. 'range' → logprob: -0.7576382160186768
    3. '(range' → logprob: -10.757637977600098
    4. '[' → logprob: -12.882637977600098
    5. 'ange' → logprob: -12.882637977600098
    6. '   ' → logprob: -13.132637977600098
    7. ' ' → logprob: -13.132637977600098
    8. '	range' → logprob: -13.257637977600098
    9. '  ' → logprob: -13.507637977600098
    10. 'rang' → logprob: -13.757637977600098

Token 213: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012287121266126633
    2. '(N' → logprob: -4.637287139892578
    3. '(len' → logprob: -6.012287139892578
    4. '1' → logprob: -10.137287139892578
    5. '(K' → logprob: -10.512287139892578
    6. '(n' → logprob: -11.762287139892578
    7. '(dp' → logprob: -13.887287139892578
    8. 'len' → logprob: -14.137287139892578
    9. '((' → logprob: -14.387287139892578
    10. '(-' → logprob: -14.762287139892578

Token 214: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933119297027588
    2. '):
' → logprob: -1.5683119297027588
    3. ' -' → logprob: -1.9433119297027588
    4. '-' → logprob: -2.568311929702759
    5. ' +' → logprob: -3.068311929702759
    6. '):' → logprob: -3.818311929702759
    7. '-K' → logprob: -7.06831169128418
    8. ',' → logprob: -7.44331169128418
    9. '   ' → logprob: -7.56831169128418
    10. '
' → logprob: -7.94331169128418

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002695608709473163
    2. ' ' → logprob: -8.250269889831543
    3. '2' → logprob: -11.875269889831543
    4. '   ' → logprob: -15.312769889831543
    5. '(' → logprob: -15.437769889831543
    6. '
' → logprob: -15.562769889831543
    7. '0' → logprob: -15.687769889831543
    8. '11' → logprob: -16.125268936157227
    9. ' -' → logprob: -16.250268936157227
    10. '-' → logprob: -16.250268936157227

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.396757089532912e-05
    2. ' ' → logprob: -9.7500638961792
    3. '2' → logprob: -12.5000638961792
    4. '
' → logprob: -14.3125638961792
    5. '0' → logprob: -15.5000638961792
    6. '

' → logprob: -15.6250638961792
    7. '(' → logprob: -15.9375638961792
    8. '-' → logprob: -16.187564849853516
    9. '   ' → logprob: -16.562564849853516
    10. '11' → logprob: -16.562564849853516

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759871006011963
    2. '):
' → logprob: -0.8259871006011963
    3. '):
' → logprob: -10.700986862182617
    4. ')' → logprob: -11.950986862182617
    5. ' ):' → logprob: -12.200986862182617
    6. '):

' → logprob: -12.200986862182617
    7. '   ' → logprob: -12.450986862182617
    8. ' ):
' → logprob: -12.700986862182617
    9. ':' → logprob: -14.325986862182617
    10. ',' → logprob: -15.200986862182617

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039143383502960205
    2. ':' → logprob: -4.1641435623168945
    3. '   ' → logprob: -4.2891435623168945
    4. '[' → logprob: -6.1641435623168945
    5. ' dp' → logprob: -6.2891435623168945
    6. 'dp' → logprob: -6.5391435623168945
    7. ' if' → logprob: -6.6641435623168945
    8. '	dp' → logprob: -7.5391435623168945
    9. '<|end|>' → logprob: -7.9141435623168945
    10. ',' → logprob: -8.289143562316895

Token 219: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.043961573392152786
    2. 'for' → logprob: -3.668961524963379
    3. 'if' → logprob: -5.043961524963379
    4. ' dp' → logprob: -5.168961524963379
    5. '   ' → logprob: -5.668961524963379
    6. ' for' → logprob: -6.793961524963379
    7. '       ' → logprob: -7.918961524963379
    8. ' if' → logprob: -8.418961524963379
    9. '	dp' → logprob: -9.668961524963379
    10. ' ' → logprob: -10.293961524963379

Token 220: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00016063073417171836
    2. '[' → logprob: -8.750160217285156
    3. 'x' → logprob: -14.000160217285156
    4. ' [' → logprob: -14.375160217285156
    5. '```' → logprob: -15.250160217285156
    6. '][' → logprob: -16.375160217285156
    7. '[N' → logprob: -16.875160217285156
    8. '
' → logprob: -16.875160217285156
    9. '\[' → logprob: -16.875160217285156
    10. '[
' → logprob: -17.000160217285156

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14328818023204803
    2. '[' → logprob: -2.0182881355285645
    3. ']' → logprob: -7.7682881355285645
    4. '0' → logprob: -10.268288612365723
    5. ')[' → logprob: -10.268288612365723
    6. ' ][' → logprob: -10.268288612365723
    7. '1' → logprob: -10.768288612365723
    8. ')' → logprob: -11.768288612365723
    9. ',' → logprob: -11.893288612365723
    10. '
' → logprob: -11.893288612365723

Token 222: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001673061487963423
    2. ' ' → logprob: -8.875166893005371
    3. 'x' → logprob: -11.375166893005371
    4. '-' → logprob: -12.625166893005371
    5. 'N' → logprob: -12.750166893005371
    6. '1' → logprob: -13.062666893005371
    7. 'max' → logprob: -13.250166893005371
    8. 'min' → logprob: -13.750166893005371
    9. '10' → logprob: -14.000166893005371
    10. '   ' → logprob: -14.437666893005371

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007729397038929164
    2. ' ]' → logprob: -8.000772476196289
    3. '-' → logprob: -8.500772476196289
    4. '0' → logprob: -9.375772476196289
    5. ' -' → logprob: -9.875772476196289
    6. ']=' → logprob: -10.125772476196289
    7. ')' → logprob: -11.500772476196289
    8. '[' → logprob: -11.875772476196289
    9. '1' → logprob: -12.500772476196289
    10. '7' → logprob: -12.750772476196289

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268971979618073
    2. '=' → logprob: -2.0176897048950195
    3. ']' → logprob: -12.14268970489502
    4. ' ' → logprob: -12.39268970489502
    5. ')' → logprob: -13.76768970489502
    6. '[' → logprob: -14.39268970489502
    7. ']=' → logprob: -14.64268970489502
    8. '<|end|>' → logprob: -14.76768970489502
    9. '    ' → logprob: -15.01768970489502
    10. ' =
' → logprob: -15.26768970489502

Token 225: ' H' (ID: 487)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1432701051235199
    2. 'H' → logprob: -2.7682700157165527
    3. 'abs' → logprob: -2.7682700157165527
    4. '10' → logprob: -5.268270015716553
    5. 'max' → logprob: -6.268270015716553
    6. ' ' → logprob: -8.518270492553711
    7. 'float' → logprob: -8.893270492553711
    8. ' H' → logprob: -8.893270492553711
    9. ' abs' → logprob: -9.268270492553711
    10. '(' → logprob: -9.768270492553711

Token 226: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.11287511885166168
    2. '[' → logprob: -2.23787522315979
    3. '[N' → logprob: -11.237874984741211
    4. '0' → logprob: -11.487874984741211
    5. ' [' → logprob: -11.737874984741211
    6. 'x' → logprob: -11.862874984741211
    7. '(x' → logprob: -12.862874984741211
    8. '[-' → logprob: -13.112874984741211
    9. '[
' → logprob: -13.612874984741211
    10. '[]' → logprob: -14.487874984741211

Token 227: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005768624832853675
    2. '<|end|>' → logprob: -7.875576972961426
    3. ']
' → logprob: -9.750576972961426
    4. '-' → logprob: -10.000576972961426
    5. ' ]' → logprob: -10.375576972961426
    6. '[' → logprob: -11.500576972961426
    7. '])' → logprob: -11.625576972961426
    8. ' -' → logprob: -11.750576972961426
    9. ')' → logprob: -12.000576972961426
    10. '<|end|>' → logprob: -12.125576972961426

Token 228: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' update' (ID: 4027)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.4748819172382355
    2. ' def' → logprob: -1.974881887435913
    3. ' compute' → logprob: -1.974881887435913
    4. 'set' → logprob: -3.599881887435913
    5. 'def' → logprob: -3.724881887435913
    6. ' calculate' → logprob: -4.224882125854492
    7. 'compute' → logprob: -4.599882125854492
    8. '_' → logprob: -5.349882125854492
    9. ' initialize' → logprob: -5.849882125854492
    10. ' is' → logprob: -5.974882125854492

Token 230: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0021014907397329807
    2. '_' → logprob: -7.377101421356201
    3. '(dp' → logprob: -7.502101421356201
    4. 'dp' → logprob: -7.877101421356201
    5. '_max' → logprob: -8.62710189819336
    6. '_min' → logprob: -9.50210189819336
    7. '_x' → logprob: -9.87710189819336
    8. '(' → logprob: -10.25210189819336
    9. '_(' → logprob: -10.62710189819336
    10. '_d' → logprob: -11.12710189819336

Token 231: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0034494451247155666
    2. '(N' → logprob: -6.003449440002441
    3. '(' → logprob: -7.003449440002441
    4. '_dp' → logprob: -11.003449440002441
    5. ' (' → logprob: -11.253449440002441
    6. '_(' → logprob: -11.378449440002441
    7. 'dp' → logprob: -11.753449440002441
    8. '_' → logprob: -11.878449440002441
    9. '_x' → logprob: -13.378449440002441
    10. '(D' → logprob: -13.378449440002441

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001410850090906024
    2. ' ,' → logprob: -9.000141143798828
    3. ',N' → logprob: -11.000141143798828
    4. ',x' → logprob: -15.500141143798828
    5. '):' → logprob: -15.750141143798828
    6. '_,' → logprob: -15.875141143798828
    7. '   ' → logprob: -16.125141143798828
    8. ',n' → logprob: -16.375141143798828
    9. ',
' → logprob: -16.750141143798828
    10. '(N' → logprob: -16.875141143798828

Token 233: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.431884765625
    2. ' N' → logprob: -1.056884765625
    3. 'H' → logprob: -6.806884765625
    4. 'x' → logprob: -7.181884765625
    5. ' H' → logprob: -7.556884765625
    6. 'dp' → logprob: -8.431884765625
    7. ' x' → logprob: -8.681884765625
    8. ' dp' → logprob: -9.306884765625
    9. ')' → logprob: -9.806884765625
    10. 'K' → logprob: -10.244384765625

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005010855966247618
    2. ' ,' → logprob: -7.7505011558532715
    3. ',K' → logprob: -9.750500679016113
    4. ',
' → logprob: -12.500500679016113
    5. 'def' → logprob: -13.125500679016113
    6. 'K' → logprob: -13.375500679016113
    7. '   ' → logprob: -13.625500679016113
    8. ' K' → logprob: -13.875500679016113
    9. ',

' → logprob: -15.375500679016113
    10. '
' → logprob: -15.375500679016113

Token 235: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16087287664413452
    2. ' K' → logprob: -1.9108729362487793
    3. 'H' → logprob: -7.785872936248779
    4. ',' → logprob: -9.785872459411621
    5. ' H' → logprob: -10.410872459411621
    6. ' ' → logprob: -10.535872459411621
    7. ')' → logprob: -10.785872459411621
    8. 'def' → logprob: -11.035872459411621
    9. ',K' → logprob: -11.035872459411621
    10. '   ' → logprob: -11.160872459411621

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032611307688057423
    2. '):' → logprob: -6.003261089324951
    3. '):
' → logprob: -8.12826156616211
    4. ' ,' → logprob: -8.37826156616211
    5. '   ' → logprob: -8.75326156616211
    6. ',H' → logprob: -9.50326156616211
    7. '):
' → logprob: -12.12826156616211
    8. ',x' → logprob: -12.25326156616211
    9. ',
' → logprob: -12.62826156616211
    10. ')' → logprob: -12.87826156616211

Token 237: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07017850130796432
    2. ' H' → logprob: -2.695178508758545
    3. '   ' → logprob: -9.445178031921387
    4. ' ' → logprob: -9.820178031921387
    5. 'dp' → logprob: -10.320178031921387
    6. 'x' → logprob: -10.695178031921387
    7. '  ' → logprob: -12.007678031921387
    8. ' x' → logprob: -12.132678031921387
    9. 'size' → logprob: -12.320178031921387
    10. ')' → logprob: -12.320178031921387

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08222305774688721
    2. '):
' → logprob: -2.5822229385375977
    3. ',' → logprob: -5.832222938537598
    4. '):
' → logprob: -8.707222938537598
    5. '   ' → logprob: -8.957222938537598
    6. ')' → logprob: -9.707222938537598
    7. ' ):' → logprob: -10.457222938537598
    8. '):

' → logprob: -12.457222938537598
    9. ',x' → logprob: -13.082222938537598
    10. ':' → logprob: -13.582222938537598

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4329017698764801
    2. 'for' → logprob: -1.4329017400741577
    3. ' for' → logprob: -2.1829018592834473
    4. '```' → logprob: -10.307901382446289
    5. '	for' → logprob: -12.182901382446289
    6. '
' → logprob: -13.432901382446289
    7. 'def' → logprob: -13.557901382446289
    8. ' ' → logprob: -13.807901382446289
    9. '   ' → logprob: -13.932901382446289
    10. '``' → logprob: -14.307901382446289

Token 240: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0037781011778861284
    2. ' for' → logprob: -5.753777980804443
    3. '   ' → logprob: -7.628777980804443
    4. 'size' → logprob: -9.253778457641602
    5. 'from' → logprob: -12.128778457641602
    6. ' ' → logprob: -12.378778457641602
    7. 'x' → logprob: -13.128778457641602
    8. '
' → logprob: -13.878778457641602
    9. ' size' → logprob: -14.003778457641602
    10. 'max' → logprob: -14.378778457641602

Token 241: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3886929452419281
    2. 'x' → logprob: -1.1386929750442505
    3. ' i' → logprob: -7.513692855834961
    4. 'k' → logprob: -7.763692855834961
    5. ' k' → logprob: -7.888692855834961
    6. 'i' → logprob: -8.013692855834961
    7. 'K' → logprob: -10.701192855834961
    8. ' y' → logprob: -10.951192855834961
    9. '_x' → logprob: -11.076192855834961
    10. ' K' → logprob: -11.263692855834961

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2256677746772766
    2. 'in' → logprob: -1.6006677150726318
    3. ' ' → logprob: -9.225667953491211
    4. 'range' → logprob: -10.100667953491211
    5. '   ' → logprob: -10.975667953491211
    6. 'y' → logprob: -10.975667953491211
    7. 'n' → logprob: -10.975667953491211
    8. ')' → logprob: -11.225667953491211
    9. ',' → logprob: -11.475667953491211
    10. '
' → logprob: -12.225667953491211

Token 243: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22542889416217804
    2. ' range' → logprob: -1.6004289388656616
    3. '(range' → logprob: -12.350428581237793
    4. ' ' → logprob: -12.475428581237793
    5. '   ' → logprob: -12.475428581237793
    6. '  ' → logprob: -13.725428581237793
    7. '2' → logprob: -14.475428581237793
    8. '	range' → logprob: -14.475428581237793
    9. '(' → logprob: -15.225428581237793
    10. 'rang' → logprob: -15.350428581237793

Token 244: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '2' → logprob: -9.750067710876465
    3. ' ' → logprob: -12.375067710876465
    4. '1' → logprob: -13.500067710876465
    5. ' (' → logprob: -14.375067710876465
    6. 'range' → logprob: -14.500067710876465
    7. '   ' → logprob: -14.750067710876465
    8. ',' → logprob: -14.875067710876465
    9. 'from' → logprob: -15.125067710876465
    10. '
' → logprob: -15.125067710876465

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001971457852050662
    2. '1' → logprob: -6.751971244812012
    3. ' ' → logprob: -7.876971244812012
    4. '(' → logprob: -8.126971244812012
    5. 'K' → logprob: -10.251971244812012
    6. ')' → logprob: -11.001971244812012
    7. '
' → logprob: -11.189471244812012
    8. '   ' → logprob: -11.251971244812012
    9. '3' → logprob: -11.689471244812012
    10. '

' → logprob: -11.876971244812012

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.019237768370658e-05
    2. ' ,' → logprob: -10.000090599060059
    3. ',K' → logprob: -10.125090599060059
    4. ',N' → logprob: -13.000090599060059
    5. ',
' → logprob: -14.000090599060059
    6. '   ' → logprob: -14.750090599060059
    7. ',y' → logprob: -15.125090599060059
    8. ',k' → logprob: -15.375090599060059
    9. 'K' → logprob: -15.500090599060059
    10. ',n' → logprob: -16.125089645385742

Token 247: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07380881160497665
    2. 'N' → logprob: -2.9488089084625244
    3. ' K' → logprob: -4.573808670043945
    4. 'len' → logprob: -5.323808670043945
    5. '(N' → logprob: -6.823808670043945
    6. ' N' → logprob: -7.448808670043945
    7. ' (' → logprob: -7.698808670043945
    8. '(K' → logprob: -8.198808670043945
    9. '   ' → logprob: -8.573808670043945
    10. 'size' → logprob: -8.698808670043945

Token 248: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07542185485363007
    2. '-' → logprob: -2.9504218101501465
    3. '+' → logprob: -4.7004218101501465
    4. '-K' → logprob: -4.8254218101501465
    5. ' +' → logprob: -5.9504218101501465
    6. ' ' → logprob: -7.8254218101501465
    7. '-k' → logprob: -9.700422286987305
    8. ',' → logprob: -9.950422286987305
    9. '
' → logprob: -10.200422286987305
    10. '   ' → logprob: -11.450422286987305

Token 249: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0011804660316556692
    2. ' K' → logprob: -6.751180648803711
    3. '   ' → logprob: -12.126180648803711
    4. ' ' → logprob: -13.626180648803711
    5. '  ' → logprob: -13.876180648803711
    6. '<K' → logprob: -14.376180648803711
    7. '	K' → logprob: -14.376180648803711
    8. '
' → logprob: -15.626180648803711
    9. '       ' → logprob: -15.876180648803711
    10. '    ' → logprob: -16.00118064880371

Token 250: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142309367656708
    2. ' +' → logprob: -1.7014230489730835
    3. ' ' → logprob: -12.076422691345215
    4. '   ' → logprob: -13.576422691345215
    5. '1' → logprob: -14.576422691345215
    6. '
' → logprob: -15.451422691345215
    7. '()+' → logprob: -15.701422691345215
    8. '2' → logprob: -15.951422691345215
    9. '```' → logprob: -15.951422691345215
    10. '0' → logprob: -16.07642364501953

Token 251: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014525714504998177
    2. ' ' → logprob: -9.250144958496094
    3. '1' → logprob: -10.125144958496094
    4. '   ' → logprob: -12.625144958496094
    5. '3' → logprob: -12.750144958496094
    6. '```' → logprob: -14.687644958496094
    7. '
' → logprob: -14.937644958496094
    8. '

' → logprob: -15.562644958496094
    9. '  ' → logprob: -15.625144958496094
    10. '       ' → logprob: -15.687644958496094

Token 252: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.253713218029588e-05
    2. '1' → logprob: -9.875062942504883
    3. ' ' → logprob: -12.250062942504883
    4. '3' → logprob: -12.500062942504883
    5. '
' → logprob: -13.937562942504883
    6. '

' → logprob: -14.687562942504883
    7. '   ' → logprob: -14.875062942504883
    8. '```' → logprob: -16.125062942504883
    9. '4' → logprob: -16.687562942504883
    10. '２' → logprob: -16.750062942504883

Token 253: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47417643666267395
    2. '):' → logprob: -0.9741764068603516
    3. ' ):' → logprob: -10.099176406860352
    4. ' ):
' → logprob: -10.349176406860352
    5. ')' → logprob: -11.349176406860352
    6. '):
' → logprob: -11.599176406860352
    7. '):

' → logprob: -13.099176406860352
    8. ':' → logprob: -13.349176406860352
    9. '+' → logprob: -14.849176406860352
    10. '   ' → logprob: -14.849176406860352

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008531245402991772
    2. ' for' → logprob: -5.008531093597412
    3. '   ' → logprob: -6.633531093597412
    4. 'for' → logprob: -8.00853157043457
    5. ',' → logprob: -9.75853157043457
    6. ':' → logprob: -9.88353157043457
    7. ' ' → logprob: -10.88353157043457
    8. '    ' → logprob: -12.13353157043457
    9. ':
' → logprob: -12.25853157043457
    10. '     ' → logprob: -12.38353157043457

Token 255: ' update' (ID: 4027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014177266508340836
    2. ' for' → logprob: -4.264177322387695
    3. '   ' → logprob: -11.389177322387695
    4. ' ' → logprob: -13.639177322387695
    5. '
' → logprob: -14.514177322387695
    6. ')' → logprob: -15.389177322387695
    7. '	for' → logprob: -15.639177322387695
    8. '  ' → logprob: -16.139177322387695
    9. 'x' → logprob: -16.764177322387695
    10. '       ' → logprob: -17.014177322387695

Token 256: '_dp' (ID: 133252)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8238922357559204
    2. ' for' → logprob: -0.9488922357559204
    3. 'dp' → logprob: -2.698892116546631
    4. 'd' → logprob: -3.448892116546631
    5. '_for' → logprob: -4.573892116546631
    6. '   ' → logprob: -4.573892116546631
    7. 'def' → logprob: -4.823892116546631
    8. '_' → logprob: -4.948892116546631
    9. ' dp' → logprob: -4.948892116546631
    10. '_dp' → logprob: -5.073892116546631

Token 257: '_for' (ID: 11903)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5091032385826111
    2. 'for' → logprob: -1.2591032981872559
    3. '   ' → logprob: -3.384103298187256
    4. ' =' → logprob: -3.759103298187256
    5. 'def' → logprob: -4.634103298187256
    6. '
' → logprob: -4.634103298187256
    7. '[' → logprob: -5.009103298187256
    8. ',' → logprob: -5.134103298187256
    9. ' ' → logprob: -5.384103298187256
    10. '       ' → logprob: -5.884103298187256

Token 258: '_y' (ID: 9410)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1383435726165771
    2. 'y' → logprob: -1.2633435726165771
    3. ' y' → logprob: -1.3883435726165771
    4. ' x' → logprob: -2.388343572616577
    5. '_x' → logprob: -3.888343572616577
    6. '_y' → logprob: -4.013343811035156
    7. ' dp' → logprob: -4.888343811035156
    8. 'dp' → logprob: -5.138343811035156
    9. '_' → logprob: -7.013343811035156
    10. '(dp' → logprob: -7.950843811035156

Token 259: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0034027595538645983
    2. ' =' → logprob: -6.7534027099609375
    3. ' (' → logprob: -7.2534027099609375
    4. '=' → logprob: -7.2534027099609375
    5. '(' → logprob: -7.8784027099609375
    6. 'dp' → logprob: -8.378402709960938
    7. ' dp' → logprob: -10.128402709960938
    8. ':' → logprob: -10.503402709960938
    9. 'for' → logprob: -10.503402709960938
    10. '_dp' → logprob: -11.003402709960938

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019637243822216988
    2. '(dp' → logprob: -6.8769636154174805
    3. ' ,' → logprob: -7.0019636154174805
    4. 'dp' → logprob: -12.37696361541748
    5. ',
' → logprob: -12.75196361541748
    6. '   ' → logprob: -13.12696361541748
    7. ' dp' → logprob: -13.12696361541748
    8. ')' → logprob: -13.12696361541748
    9. ',y' → logprob: -13.62696361541748
    10. ',d' → logprob: -14.62696361541748

Token 261: ' y' (ID: 342)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08026988804340363
    2. ' N' → logprob: -2.5802698135375977
    3. 'y' → logprob: -6.830269813537598
    4. ' y' → logprob: -8.705269813537598
    5. ')' → logprob: -9.830269813537598
    6. ',' → logprob: -11.205269813537598
    7. ',N' → logprob: -11.330269813537598
    8. '
' → logprob: -11.830269813537598
    9. '   ' → logprob: -12.080269813537598
    10. 'x' → logprob: -12.080269813537598

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000748398422729224
    2. ' ,' → logprob: -7.500748634338379
    3. ')' → logprob: -9.000748634338379
    4. ',N' → logprob: -10.250748634338379
    5. '   ' → logprob: -10.750748634338379
    6. '       ' → logprob: -12.875748634338379
    7. 'def' → logprob: -13.375748634338379
    8. ',
' → logprob: -13.625748634338379
    9. ',y' → logprob: -14.125748634338379
    10. 'import' → logprob: -14.125748634338379

Token 263: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22582757472991943
    2. ' N' → logprob: -1.6008275747299194
    3. 'H' → logprob: -8.22582721710205
    4. ' H' → logprob: -10.10082721710205
    5. 'K' → logprob: -10.47582721710205
    6. '   ' → logprob: -10.72582721710205
    7. ' ' → logprob: -11.10082721710205
    8. '	N' → logprob: -11.72582721710205
    9. ' K' → logprob: -11.97582721710205
    10. ')' → logprob: -12.22582721710205

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006324658636003733
    2. ' ,' → logprob: -5.256324768066406
    3. ',K' → logprob: -6.881324768066406
    4. ',H' → logprob: -10.756324768066406
    5. '   ' → logprob: -11.381324768066406
    6. 'K' → logprob: -11.506324768066406
    7. ')' → logprob: -12.381324768066406
    8. ' K' → logprob: -12.506324768066406
    9. ',
' → logprob: -12.881324768066406
    10. 'def' → logprob: -13.006324768066406

Token 265: ' H' (ID: 487)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03999292105436325
    2. ' K' → logprob: -3.2899928092956543
    3. 'H' → logprob: -6.289992809295654
    4. ' H' → logprob: -10.039993286132812
    5. ' ' → logprob: -11.289993286132812
    6. '   ' → logprob: -11.539993286132812
    7. '
' → logprob: -11.539993286132812
    8. ')' → logprob: -12.164993286132812
    9. 'N' → logprob: -12.914993286132812
    10. '```' → logprob: -13.914993286132812

Token 266: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10102744400501251
    2. ')' → logprob: -2.351027488708496
    3. ',K' → logprob: -7.851027488708496
    4. '   ' → logprob: -8.601027488708496
    5. ' ,' → logprob: -8.726027488708496
    6. ' )' → logprob: -10.601027488708496
    7. ',N' → logprob: -10.726027488708496
    8. '       ' → logprob: -11.226027488708496
    9. ',y' → logprob: -12.101027488708496
    10. 'def' → logprob: -12.226027488708496

Token 267: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014033254701644182
    2. '<|end|>' → logprob: -6.626403331756592
    3. ' def' → logprob: -9.626402854919434
    4. '   ' → logprob: -12.001402854919434
    5. '
' → logprob: -13.251402854919434
    6. '<|end|>' → logprob: -14.251402854919434
    7. '[' → logprob: -14.376402854919434
    8. '```' → logprob: -14.751402854919434
    9. '	def' → logprob: -15.126402854919434
    10. ')' → logprob: -15.251402854919434

Token 268: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.320381224155426
    2. 'update' → logprob: -1.3203811645507812
    3. 'def' → logprob: -5.195381164550781
    4. ' def' → logprob: -6.570381164550781
    5. ' for' → logprob: -9.695381164550781
    6. 'for' → logprob: -10.445381164550781
    7. ' ' → logprob: -11.320381164550781
    8. '_update' → logprob: -11.320381164550781
    9. '
' → logprob: -11.570381164550781
    10. ' y' → logprob: -12.757881164550781

Token 269: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.3856492842023727e-06
    2. 'dp' → logprob: -14.625000953674316
    3. '_df' → logprob: -15.000000953674316
    4. '_dc' → logprob: -16.500001907348633
    5. '_db' → logprob: -16.625001907348633
    6. '(dp' → logprob: -16.750001907348633
    7. '_def' → logprob: -16.875001907348633
    8. '_dt' → logprob: -17.000001907348633
    9. '_for' → logprob: -17.250001907348633
    10. '_' → logprob: -17.375001907348633

Token 270: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0005885370774194598
    2. '(dp' → logprob: -7.500588417053223
    3. 'for' → logprob: -10.625588417053223
    4. '_' → logprob: -12.125588417053223
    5. '_(' → logprob: -13.250588417053223
    6. '(for' → logprob: -13.750588417053223
    7. '_dp' → logprob: -14.500588417053223
    8. '(' → logprob: -14.625588417053223
    9. 'For' → logprob: -14.625588417053223
    10. 'dp' → logprob: -14.875588417053223

Token 271: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -7.600714161526412e-05
    2. 'y' → logprob: -9.500076293945312
    3. '_' → logprob: -14.625076293945312
    4. '_x' → logprob: -15.000076293945312
    5. '_update' → logprob: -15.750076293945312
    6. 'update' → logprob: -16.375076293945312
    7. 'dp' → logprob: -17.375076293945312
    8. '(y' → logprob: -17.750076293945312
    9. 'def' → logprob: -18.125076293945312
    10. ' y' → logprob: -18.250076293945312

Token 272: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.978233846486546e-05
    2. '(' → logprob: -10.125049591064453
    3. ' (' → logprob: -11.625049591064453
    4. '(def' → logprob: -15.125049591064453
    5. 'dp' → logprob: -15.500049591064453
    6. '(
' → logprob: -15.625049591064453
    7. '(df' → logprob: -17.125049591064453
    8. '```' → logprob: -17.500049591064453
    9. '	dp' → logprob: -18.000049591064453
    10. ' dp' → logprob: -18.125049591064453

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',y' → logprob: -16.375024795532227
    4. ',d' → logprob: -17.500024795532227
    5. '‌,' → logprob: -17.500024795532227
    6. '(dp' → logprob: -18.625024795532227
    7. ',
' → logprob: -18.750024795532227
    8. '_,' → logprob: -18.875024795532227
    9. ',x' → logprob: -19.375024795532227
    10. ' dp' → logprob: -19.375024795532227

Token 274: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.42981258034706116
    2. ' y' → logprob: -1.0548125505447388
    3. 'N' → logprob: -7.179812431335449
    4. ' N' → logprob: -8.30481243133545
    5. ' ' → logprob: -10.67981243133545
    6. ',' → logprob: -11.05481243133545
    7. 'dp' → logprob: -11.05481243133545
    8. '   ' → logprob: -11.42981243133545
    9. 'K' → logprob: -11.80481243133545
    10. 'Y' → logprob: -12.17981243133545

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',x' → logprob: -15.500028610229492
    4. ',N' → logprob: -16.000028610229492
    5. ',n' → logprob: -16.875028610229492
    6. ',y' → logprob: -17.500028610229492
    7. '   ' → logprob: -17.500028610229492
    8. 'def' → logprob: -17.875028610229492
    9. '‌,' → logprob: -18.000028610229492
    10. '_,' → logprob: -18.375028610229492

Token 276: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012517307884991169
    2. ' N' → logprob: -4.38751745223999
    3. ',' → logprob: -13.137516975402832
    4. '<|end|>' → logprob: -13.762516975402832
    5. ',N' → logprob: -13.887516975402832
    6. '	N' → logprob: -14.262516975402832
    7. 'n' → logprob: -14.637516975402832
    8. ' ' → logprob: -14.887516975402832
    9. '   ' → logprob: -15.012516975402832
    10. ')' → logprob: -15.137516975402832

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005022776313126087
    2. ' ,' → logprob: -7.625502109527588
    3. ',H' → logprob: -11.375502586364746
    4. ',
' → logprob: -13.875502586364746
    5. ',K' → logprob: -14.500502586364746
    6. 'def' → logprob: -15.125502586364746
    7. '   ' → logprob: -15.375502586364746
    8. ' def' → logprob: -16.00050163269043
    9. '):
' → logprob: -16.25050163269043
    10. '‌,' → logprob: -16.25050163269043

Token 278: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07126809656620026
    2. 'K' → logprob: -2.696268081665039
    3. ' H' → logprob: -6.821268081665039
    4. ' K' → logprob: -8.446268081665039
    5. 'y' → logprob: -11.696268081665039
    6. ')' → logprob: -12.321268081665039
    7. '   ' → logprob: -12.446268081665039
    8. ' ' → logprob: -12.571268081665039
    9. 'def' → logprob: -13.946268081665039
    10. 'N' → logprob: -14.321268081665039

Token 279: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002932750794570893
    2. '):' → logprob: -8.500293731689453
    3. ' ,' → logprob: -9.625293731689453
    4. '):
' → logprob: -11.375293731689453
    5. '   ' → logprob: -11.875293731689453
    6. ',y' → logprob: -13.125293731689453
    7. ':' → logprob: -14.250293731689453
    8. 'def' → logprob: -14.375293731689453
    9. ',
' → logprob: -14.625293731689453
    10. ',x' → logprob: -14.750293731689453

Token 280: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.440596342086792
    2. '   ' → logprob: -1.065596342086792
    3. ' for' → logprob: -4.440596580505371
    4. 'x' → logprob: -11.690596580505371
    5. 'min' → logprob: -11.940596580505371
    6. '
' → logprob: -12.440596580505371
    7. ' ' → logprob: -12.565596580505371
    8. '  ' → logprob: -12.565596580505371
    9. 'def' → logprob: -12.815596580505371
    10. '	for' → logprob: -13.440596580505371

Token 281: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0023983668070286512
    2. 'size' → logprob: -6.877398490905762
    3. 'x' → logprob: -7.627398490905762
    4. 'min' → logprob: -7.877398490905762
    5. 'start' → logprob: -8.752398490905762
    6. 'def' → logprob: -9.502398490905762
    7. '   ' → logprob: -9.627398490905762
    8. 'max' → logprob: -9.752398490905762
    9. ' for' → logprob: -10.377398490905762
    10. 'dp' → logprob: -10.627398490905762

Token 282: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048623811453580856
    2. ' x' → logprob: -3.04862380027771
    3. '_x' → logprob: -10.923624038696289
    4. '   ' → logprob: -12.173624038696289
    5. ' ' → logprob: -12.798624038696289
    6. 'y' → logprob: -12.923624038696289
    7. '	x' → logprob: -13.298624038696289
    8. ' y' → logprob: -13.548624038696289
    9. '```' → logprob: -14.861124038696289
    10. '
' → logprob: -14.986124038696289

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0041402606293559074
    2. 'in' → logprob: -5.504140377044678
    3. 'x' → logprob: -10.75413990020752
    4. ' ' → logprob: -11.50413990020752
    5. 'n' → logprob: -12.00413990020752
    6. 'range' → logprob: -12.25413990020752
    7. '1' → logprob: -12.87913990020752
    8. 'import' → logprob: -13.00413990020752
    9. ',' → logprob: -13.12913990020752
    10. 'y' → logprob: -13.25413990020752

Token 284: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892746478319168
    2. ' range' → logprob: -2.578927516937256
    3. '(range' → logprob: -10.828927040100098
    4. 'y' → logprob: -12.328927040100098
    5. ' y' → logprob: -12.703927040100098
    6. ' in' → logprob: -13.078927040100098
    7. 're' → logprob: -13.203927040100098
    8. '   ' → logprob: -13.578927040100098
    9. 'in' → logprob: -13.703927040100098
    10. ' ' → logprob: -14.078927040100098

Token 285: '(N' (ID: 10564)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.06426266580820084
    2. '(' → logprob: -3.064262628555298
    3. '(N' → logprob: -4.314262866973877
    4. '(K' → logprob: -6.314262866973877
    5. '(n' → logprob: -9.439262390136719
    6. '(len' → logprob: -9.814262390136719
    7. '(x' → logprob: -9.939262390136719
    8. 'y' → logprob: -9.939262390136719
    9. '1' → logprob: -10.064262390136719
    10. '((' → logprob: -10.564262390136719

Token 286: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7345927953720093
    2. ' -' → logprob: -0.9845927953720093
    3. ' +' → logprob: -2.484592914581299
    4. '-' → logprob: -3.109592914581299
    5. '-y' → logprob: -4.734592914581299
    6. '+y' → logprob: -5.734592914581299
    7. '):
' → logprob: -5.859592914581299
    8. '):' → logprob: -6.734592914581299
    9. ',' → logprob: -6.984592914581299
    10. '   ' → logprob: -7.234592914581299

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007364890188910067
    2. ' ' → logprob: -7.250736713409424
    3. '2' → logprob: -11.625736236572266
    4. '
' → logprob: -12.375736236572266
    5. ')' → logprob: -12.688236236572266
    6. ' y' → logprob: -12.813236236572266
    7. '(' → logprob: -13.688236236572266
    8. '0' → logprob: -13.750736236572266
    9. ',' → logprob: -14.000736236572266
    10. '   ' → logprob: -14.063236236572266

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001507405104348436
    2. ' ' → logprob: -8.875150680541992
    3. 'y' → logprob: -12.500150680541992
    4. '2' → logprob: -12.875150680541992
    5. '0' → logprob: -13.375150680541992
    6. ' y' → logprob: -13.875150680541992
    7. '+' → logprob: -14.500150680541992
    8. '-' → logprob: -15.000150680541992
    9. 'x' → logprob: -15.125150680541992
    10. ' -' → logprob: -15.187650680541992

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18153280019760132
    2. '):
' → logprob: -1.806532859802246
    3. ' -' → logprob: -6.806532859802246
    4. '-' → logprob: -8.306532859802246
    5. ')' → logprob: -8.681532859802246
    6. ' ):' → logprob: -8.931532859802246
    7. '   ' → logprob: -9.931532859802246
    8. '-y' → logprob: -10.681532859802246
    9. ' ):
' → logprob: -11.181532859802246
    10. '       ' → logprob: -11.556532859802246

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2971256673336029
    2. ':' → logprob: -1.6721256971359253
    3. ' if' → logprob: -3.1721255779266357
    4. 'if' → logprob: -4.672125816345215
    5. '   ' → logprob: -5.547125816345215
    6. '<|end|>' → logprob: -5.547125816345215
    7. ',' → logprob: -5.672125816345215
    8. ':
' → logprob: -6.922125816345215
    9. '[' → logprob: -6.922125816345215
    10. ' for' → logprob: -7.047125816345215

Token 291: ' update' (ID: 4027)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12080462276935577
    2. 'if' → logprob: -2.62080454826355
    3. 'for' → logprob: -3.99580454826355
    4. 'min' → logprob: -4.620804786682129
    5. ' dp' → logprob: -4.995804786682129
    6. ' if' → logprob: -6.120804786682129
    7. '   ' → logprob: -6.495804786682129
    8. ' for' → logprob: -7.495804786682129
    9. 'best' → logprob: -7.745804786682129
    10. ' min' → logprob: -8.120804786682129

Token 292: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.00320052751339972
    2. 'dp' → logprob: -6.253200531005859
    3. '_for' → logprob: -7.378200531005859
    4. 'for' → logprob: -8.50320053100586
    5. '_x' → logprob: -8.75320053100586
    6. '_value' → logprob: -10.00320053100586
    7. '_if' → logprob: -10.12820053100586
    8. '(dp' → logprob: -10.25320053100586
    9. '_' → logprob: -11.00320053100586
    10. '_dx' → logprob: -11.25320053100586

Token 293: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.003774670185521245
    2. '[x' → logprob: -6.753774642944336
    3. '_value' → logprob: -7.253774642944336
    4. 'for' → logprob: -7.378774642944336
    5. '_row' → logprob: -7.753774642944336
    6. '_cell' → logprob: -8.253774642944336
    7. '[' → logprob: -9.003774642944336
    8. '_entry' → logprob: -9.128774642944336
    9. '_x' → logprob: -9.878774642944336
    10. '_at' → logprob: -10.128774642944336

Token 294: '_x' (ID: 7054)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.4306596517562866
    2. '_x' → logprob: -1.0556596517562866
    3. 'x' → logprob: -6.555659770965576
    4. 'y' → logprob: -7.805659770965576
    5. '_' → logprob: -10.180659294128418
    6. '_for' → logprob: -11.305659294128418
    7. '_xy' → logprob: -11.430659294128418
    8. 'dp' → logprob: -11.555659294128418
    9. '_dp' → logprob: -11.680659294128418
    10. '```' → logprob: -11.805659294128418

Token 295: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00022165567497722805
    2. ' (' → logprob: -8.875221252441406
    3. '(' → logprob: -9.500221252441406
    4. '(
' → logprob: -13.125221252441406
    5. '(dx' → logprob: -13.750221252441406
    6. 'dp' → logprob: -14.500221252441406
    7. 'for' → logprob: -14.625221252441406
    8. '_for' → logprob: -14.750221252441406
    9. '(df' → logprob: -15.250221252441406
    10. ' ' → logprob: -15.375221252441406

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026454562321305275
    2. '(dp' → logprob: -6.002645492553711
    3. '[' → logprob: -9.752645492553711
    4. ' ,' → logprob: -10.252645492553711
    5. ')' → logprob: -10.502645492553711
    6. ',
' → logprob: -11.502645492553711
    7. 'dp' → logprob: -11.627645492553711
    8. ' dp' → logprob: -12.127645492553711
    9. ',x' → logprob: -12.502645492553711
    10. '```' → logprob: -13.002645492553711

Token 297: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4406687021255493
    2. ' x' → logprob: -1.3156687021255493
    3. ' y' → logprob: -2.9406685829162598
    4. 'y' → logprob: -3.5656685829162598
    5. 'dp' → logprob: -5.56566858291626
    6. ' dp' → logprob: -5.81566858291626
    7. ' ' → logprob: -10.315669059753418
    8. ',' → logprob: -10.565669059753418
    9. '   ' → logprob: -10.690669059753418
    10. ')' → logprob: -11.690669059753418

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004117699805647135
    2. ' ,' → logprob: -5.629117488861084
    3. ',y' → logprob: -7.629117488861084
    4. '[y' → logprob: -11.254117965698242
    5. '[' → logprob: -12.254117965698242
    6. '   ' → logprob: -12.379117965698242
    7. 'y' → logprob: -13.004117965698242
    8. '       ' → logprob: -13.379117965698242
    9. ')' → logprob: -13.379117965698242
    10. ',
' → logprob: -13.879117965698242

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12701955437660217
    2. ' y' → logprob: -2.1270196437835693
    3. 'N' → logprob: -10.127019882202148
    4. ',' → logprob: -11.377019882202148
    5. 'dp' → logprob: -11.502019882202148
    6. ' ' → logprob: -11.752019882202148
    7. '   ' → logprob: -11.877019882202148
    8. 'x' → logprob: -12.627019882202148
    9. ' N' → logprob: -13.002019882202148
    10. ',y' → logprob: -13.252019882202148

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003819332632701844
    2. ' ,' → logprob: -8.500381469726562
    3. ')' → logprob: -8.875381469726562
    4. ',N' → logprob: -11.250381469726562
    5. '   ' → logprob: -12.250381469726562
    6. ',
' → logprob: -12.625381469726562
    7. '       ' → logprob: -12.875381469726562
    8. '<|end|>' → logprob: -12.875381469726562
    9. ',n' → logprob: -13.125381469726562
    10. '-' → logprob: -13.250381469726562

Token 301: ' H' (ID: 487)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01784658245742321
    2. ' N' → logprob: -4.392846584320068
    3. 'dp' → logprob: -5.267846584320068
    4. ' dp' → logprob: -9.39284610748291
    5. 'H' → logprob: -9.89284610748291
    6. '   ' → logprob: -11.26784610748291
    7. 'y' → logprob: -12.51784610748291
    8. ' ' → logprob: -12.51784610748291
    9. 'n' → logprob: -13.01784610748291
    10. '	N' → logprob: -13.14284610748291

Token 302: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.160421222448349
    2. ',' → logprob: -1.9104212522506714
    3. '   ' → logprob: -9.785421371459961
    4. 'def' → logprob: -10.160421371459961
    5. ',N' → logprob: -10.660421371459961
    6. '):' → logprob: -11.160421371459961
    7. '<|end|>' → logprob: -11.410421371459961
    8. ' )' → logprob: -11.660421371459961
    9. '       ' → logprob: -11.785421371459961
    10. ')
' → logprob: -12.035421371459961

Token 303: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.009829283691942692
    2. ' update' → logprob: -4.634829521179199
    3. 'def' → logprob: -10.2598295211792
    4. 'for' → logprob: -11.7598295211792
    5. '_update' → logprob: -11.8848295211792
    6. 'dp' → logprob: -11.8848295211792
    7. 'x' → logprob: -12.5098295211792
    8. '
' → logprob: -12.8848295211792
    9. ' ' → logprob: -13.1348295211792
    10. ' for' → logprob: -13.6348295211792

Token 305: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -2.5776860184123507e-06
    2. '_for' → logprob: -13.75000286102295
    3. 'dp' → logprob: -14.12500286102295
    4. '_df' → logprob: -15.25000286102295
    5. '_dc' → logprob: -15.87500286102295
    6. '_db' → logprob: -16.500001907348633
    7. '_dt' → logprob: -16.625001907348633
    8. '(dp' → logprob: -17.000001907348633
    9. '_dx' → logprob: -17.500001907348633
    10. '```' → logprob: -17.500001907348633

Token 306: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.1472419600977446e-06
    2. 'for' → logprob: -13.875000953674316
    3. '_' → logprob: -17.000001907348633
    4. 'def' → logprob: -17.375001907348633
    5. '(dp' → logprob: -17.625001907348633
    6. 'For' → logprob: -17.625001907348633
    7. '_FOR' → logprob: -18.000001907348633
    8. ' for' → logprob: -18.500001907348633
    9. '_from' → logprob: -18.500001907348633
    10. '_form' → logprob: -19.625001907348633

Token 307: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006722233723849058
    2. 'x' → logprob: -5.006722450256348
    3. '_y' → logprob: -12.381722450256348
    4. '_' → logprob: -13.131722450256348
    5. ' x' → logprob: -15.131722450256348
    6. '	x' → logprob: -16.44422149658203
    7. '```' → logprob: -16.44422149658203
    8. '__' → logprob: -16.56922149658203
    9. '(x' → logprob: -17.44422149658203
    10. '{x' → logprob: -17.63172149658203

Token 308: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.250014305114746
    3. '(
' → logprob: -14.375014305114746
    4. 'dp' → logprob: -15.625014305114746
    5. ' (' → logprob: -17.37501335144043
    6. '(df' → logprob: -17.62501335144043
    7. '(def' → logprob: -17.62501335144043
    8. 'for' → logprob: -17.75001335144043
    9. '(dx' → logprob: -18.37501335144043
    10. '	dp' → logprob: -18.62501335144043

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',x' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.625003814697266
    5. ',
' → logprob: -18.250003814697266
    6. '_,' → logprob: -18.375003814697266
    7. '‌,' → logprob: -20.125003814697266
    8. '[],' → logprob: -20.375003814697266
    9. '[' → logprob: -20.375003814697266
    10. ',p' → logprob: -20.500003814697266

Token 310: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4287032186985016
    2. ' x' → logprob: -1.0537031888961792
    3. ',' → logprob: -14.053703308105469
    4. ' ' → logprob: -14.678703308105469
    5. '0' → logprob: -14.678703308105469
    6. ')x' → logprob: -15.803703308105469
    7. '<|end|>' → logprob: -15.928703308105469
    8. '	x' → logprob: -15.928703308105469
    9. '   ' → logprob: -16.17870330810547
    10. 'N' → logprob: -16.30370330810547

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010610329918563366
    2. ' ,' → logprob: -6.876060962677002
    3. ',y' → logprob: -10.50106143951416
    4. '   ' → logprob: -15.62606143951416
    5. ',
' → logprob: -15.75106143951416
    6. ' y' → logprob: -16.001060485839844
    7. 'y' → logprob: -16.501060485839844
    8. '‌,' → logprob: -17.251060485839844
    9. '[y' → logprob: -17.376060485839844
    10. '_,' → logprob: -17.376060485839844

Token 312: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022971272468567
    2. ' y' → logprob: -1.9102296829223633
    3. ',' → logprob: -12.660229682922363
    4. 'x' → logprob: -14.160229682922363
    5. ' ' → logprob: -14.285229682922363
    6. '   ' → logprob: -14.535229682922363
    7. '	y' → logprob: -15.535229682922363
    8. ',y' → logprob: -16.03523063659668
    9. 'N' → logprob: -16.66023063659668
    10. '    ' → logprob: -16.91023063659668

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',H' → logprob: -14.000054359436035
    4. ',
' → logprob: -14.125054359436035
    5. '   ' → logprob: -15.250054359436035
    6. ',x' → logprob: -15.750054359436035
    7. ',y' → logprob: -16.00005340576172
    8. '):' → logprob: -16.75005340576172
    9. 'def' → logprob: -17.00005340576172
    10. '_,' → logprob: -17.25005340576172

Token 314: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.024845927953720093
    2. ' H' → logprob: -3.774845838546753
    3. 'N' → logprob: -6.524846076965332
    4. ' N' → logprob: -9.649846076965332
    5. '   ' → logprob: -10.649846076965332
    6. ' ' → logprob: -10.899846076965332
    7. ',' → logprob: -11.274846076965332
    8. '  ' → logprob: -12.774846076965332
    9. ',H' → logprob: -13.024846076965332
    10. ')' → logprob: -13.524846076965332

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006986741907894611
    2. '):
' → logprob: -5.006986618041992
    3. ',' → logprob: -8.256986618041992
    4. '):
' → logprob: -12.506986618041992
    5. ':' → logprob: -12.881986618041992
    6. '   ' → logprob: -13.506986618041992
    7. ' ):' → logprob: -13.506986618041992
    8. ')' → logprob: -13.631986618041992
    9. '):

' → logprob: -13.631986618041992
    10. ']:' → logprob: -16.131986618041992

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04860677942633629
    2. 'dp' → logprob: -3.9236068725585938
    3. 'min' → logprob: -4.423606872558594
    4. 'if' → logprob: -4.423606872558594
    5. ' if' → logprob: -6.923606872558594
    6. 'for' → logprob: -7.423606872558594
    7. 'best' → logprob: -7.548606872558594
    8. 'max' → logprob: -7.923606872558594
    9. ' min' → logprob: -8.173606872558594
    10. ' dp' → logprob: -8.423606872558594

Token 317: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7962411642074585
    2. 'min' → logprob: -1.4212411642074585
    3. 'size' → logprob: -2.046241283416748
    4. 'dp' → logprob: -2.296241283416748
    5. 'best' → logprob: -3.171241283416748
    6. 'for' (adapté à ' for') → logprob: -3.796241283416748
    7. '   ' → logprob: -5.546241283416748
    8. 'N' → logprob: -5.796241283416748
    9. 'ans' → logprob: -6.671241283416748
    10. 'n' → logprob: -6.921241283416748

Token 318: ' i' (ID: 575)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.1244609355926514
    2. 'z' → logprob: -1.9994609355926514
    3. 'xx' → logprob: -2.4994609355926514
    4. 'p' → logprob: -2.6244609355926514
    5. 'x' → logprob: -2.6244609355926514
    6. ' prev' → logprob: -2.6244609355926514
    7. 'i' → logprob: -2.9994609355926514
    8. 'nx' → logprob: -3.3744609355926514
    9. 'px' → logprob: -3.9994609355926514
    10. 'k' → logprob: -4.1244611740112305

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014246409991756082
    2. 'in' → logprob: -6.626424789428711
    3. 'range' → logprob: -9.751424789428711
    4. 'x' → logprob: -11.126424789428711
    5. ' ' → logprob: -11.626424789428711
    6. 's' → logprob: -12.626424789428711
    7. 'n' → logprob: -13.126424789428711
    8. ' range' → logprob: -13.126424789428711
    9. 'd' → logprob: -13.376424789428711
    10. 'y' → logprob: -13.626424789428711

Token 320: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975928969681263
    2. ' range' → logprob: -3.529759407043457
    3. 'x' → logprob: -12.154759407043457
    4. '   ' → logprob: -13.904759407043457
    5. '(range' → logprob: -14.154759407043457
    6. '[' → logprob: -14.779759407043457
    7. '
' → logprob: -15.029759407043457
    8. ' ' → logprob: -15.404759407043457
    9. 're' → logprob: -15.654759407043457
    10. ' xrange' → logprob: -15.779759407043457

Token 321: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.017941663041710854
    2. '(' → logprob: -4.892941474914551
    3. '(y' → logprob: -5.267941474914551
    4. '(max' → logprob: -5.517941474914551
    5. 'x' → logprob: -7.017941474914551
    6. '(len' → logprob: -9.14294147491455
    7. 'max' → logprob: -9.89294147491455
    8. '1' → logprob: -11.39294147491455
    9. 'y' → logprob: -11.64294147491455
    10. '0' → logprob: -11.64294147491455

Token 322: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02262309193611145
    2. 'y' → logprob: -4.772623062133789
    3. '1' → logprob: -5.022623062133789
    4. 'max' → logprob: -5.897623062133789
    5. ' x' → logprob: -6.147623062133789
    6. '0' → logprob: -6.397623062133789
    7. '(x' → logprob: -8.272623062133789
    8. ' y' → logprob: -8.772623062133789
    9. ' max' → logprob: -8.897623062133789
    10. 'len' → logprob: -9.397623062133789

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054134301841259
    2. ',x' → logprob: -3.1791343688964844
    3. ' ,' → logprob: -4.929134368896484
    4. ' x' → logprob: -6.054134368896484
    5. 'x' → logprob: -6.554134368896484
    6. ',y' → logprob: -11.054134368896484
    7. ',
' → logprob: -11.304134368896484
    8. '
' → logprob: -11.304134368896484
    9. ',len' → logprob: -11.929134368896484
    10. '(x' → logprob: -12.679134368896484

Token 324: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004419935867190361
    2. ' x' → logprob: -7.750442028045654
    3. 'len' → logprob: -11.750441551208496
    4. 'y' → logprob: -13.125441551208496
    5. '   ' → logprob: -14.500441551208496
    6. '
' → logprob: -15.500441551208496
    7. '	x' → logprob: -15.625441551208496
    8. ' len' → logprob: -15.750441551208496
    9. ' ' → logprob: -16.000442504882812
    10. '(x' → logprob: -17.000442504882812

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6794462203979492
    2. '+' → logprob: -0.9294462203979492
    3. '):
' → logprob: -2.554446220397949
    4. ' +' → logprob: -4.679446220397949
    5. '-' → logprob: -5.054446220397949
    6. ' -' → logprob: -5.679446220397949
    7. ' ):' → logprob: -6.929446220397949
    8. ' ):
' → logprob: -8.67944622039795
    9. ')' → logprob: -8.92944622039795
    10. '):

' → logprob: -9.17944622039795

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1974194049835205
    2. ' if' → logprob: -2.5724194049835205
    3. 'dp' → logprob: -3.0724194049835205
    4. ' dp' → logprob: -3.0724194049835205
    5. 'if' → logprob: -4.697419166564941
    6. '   ' → logprob: -8.322419166564941
    7. '	dp' → logprob: -8.572419166564941
    8. ' value' → logprob: -9.822419166564941
    9. ' cost' → logprob: -9.822419166564941
    10. 'value' → logprob: -9.822419166564941

Token 327: ' candidate' (ID: 17098)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06975779682397842
    2. 'if' → logprob: -2.9447576999664307
    3. 'cost' → logprob: -4.94475793838501
    4. 'val' → logprob: -5.56975793838501
    5. 'prev' → logprob: -6.69475793838501
    6. 'candidate' (adapté à ' candidate') → logprob: -6.81975793838501
    7. 'value' → logprob: -7.81975793838501
    8. 'current' → logprob: -7.94475793838501
    9. '   ' → logprob: -8.944757461547852
    10. ' dp' → logprob: -9.069757461547852

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014394192025065422
    2. '=' → logprob: -4.264394283294678
    3. '_cost' → logprob: -8.88939380645752
    4. '_value' → logprob: -9.88939380645752
    5. '_val' → logprob: -10.38939380645752
    6. '_height' → logprob: -13.01439380645752
    7. 'cost' → logprob: -13.51439380645752
    8. '_' → logprob: -13.63939380645752
    9. '_price' → logprob: -14.01439380645752
    10. '_candidate' → logprob: -14.13939380645752

Token 329: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10855897516012192
    2. 'dp' → logprob: -2.3585588932037354
    3. ' max' → logprob: -4.8585591316223145
    4. ' dp' → logprob: -8.358558654785156
    5. '   ' → logprob: -8.858558654785156
    6. 'min' → logprob: -9.358558654785156
    7. '	max' → logprob: -10.733558654785156
    8. '	dp' → logprob: -10.858558654785156
    9. ' ' → logprob: -11.608558654785156
    10. '  ' → logprob: -12.733558654785156

Token 330: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017030329909175634
    2. '[x' → logprob: -6.876703262329102
    3. 'i' → logprob: -7.376703262329102
    4. 'x' → logprob: -10.376703262329102
    5. '
' → logprob: -12.001703262329102
    6. '```' → logprob: -13.251703262329102
    7. '[' → logprob: -13.501703262329102
    8. '   ' → logprob: -14.001703262329102
    9. '

' → logprob: -14.501703262329102
    10. ' i' → logprob: -14.876703262329102

Token 331: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14887171983718872
    2. '[y' → logprob: -2.023871660232544
    3. '[' → logprob: -5.398871898651123
    4. 'y' → logprob: -6.648871898651123
    5. '[x' → logprob: -8.898871421813965
    6. ']' → logprob: -9.648871421813965
    7. '[i' → logprob: -10.398871421813965
    8. ' [' → logprob: -10.523871421813965
    9. ' ][' → logprob: -11.023871421813965
    10. ' y' → logprob: -11.148871421813965

Token 332: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9266199160483666e-05
    2. ' y' → logprob: -11.500019073486328
    3. '[y' → logprob: -12.000019073486328
    4. '(y' → logprob: -13.625019073486328
    5. '   ' → logprob: -13.750019073486328
    6. '	y' → logprob: -15.375019073486328
    7. '1' → logprob: -15.500019073486328
    8. '```' → logprob: -17.250019073486328
    9. '       ' → logprob: -17.375019073486328
    10. 'yj' → logprob: -17.625019073486328

Token 333: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008056987426243722
    2. ' -' → logprob: -7.125805854797363
    3. '```' → logprob: -14.875805854797363
    4. ']' → logprob: -15.125805854797363
    5. '1' → logprob: -15.625805854797363
    6. '
' → logprob: -15.750805854797363
    7. '   ' → logprob: -16.000804901123047
    8. ' ' → logprob: -16.125804901123047
    9. '-
' → logprob: -16.875804901123047
    10. '[' → logprob: -17.375804901123047

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.500004768371582
    4. '```' → logprob: -16.7500057220459
    5. ']' → logprob: -17.5625057220459
    6. '
' → logprob: -17.7500057220459
    7. '  ' → logprob: -17.9375057220459
    8. '2' → logprob: -18.3125057220459
    9. '...' → logprob: -18.3750057220459
    10. '    ' → logprob: -18.5000057220459

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. '
' → logprob: -17.3750057220459
    5. '```' → logprob: -17.5625057220459
    6. ']' → logprob: -17.6250057220459
    7. '2' → logprob: -17.7500057220459
    8. '  ' → logprob: -18.0000057220459
    9. '

' → logprob: -19.0625057220459
    10. ')' → logprob: -19.1875057220459

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040540905320085585
    2. ']+' → logprob: -7.875405311584473
    3. ' ]' → logprob: -10.750405311584473
    4. ']
' → logprob: -14.500405311584473
    5. '[' → logprob: -14.875405311584473
    6. '-' → logprob: -15.250405311584473
    7. '']' → logprob: -15.500405311584473
    8. ']*' → logprob: -15.562905311584473
    9. '```' → logprob: -15.625405311584473
    10. ']-' → logprob: -15.750405311584473

Token 337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05490575730800629
    2. ' +' → logprob: -2.929905652999878
    3. '-' → logprob: -12.429905891418457
    4. ',' → logprob: -12.804905891418457
    5. 'if' → logprob: -12.804905891418457
    6. '+
' → logprob: -13.054905891418457
    7. 'dp' → logprob: -13.304905891418457
    8. '
' → logprob: -13.304905891418457
    9. ' -' → logprob: -13.429905891418457
    10. ' ' → logprob: -14.054905891418457

Token 338: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09768147021532059
    2. 'abs' → logprob: -2.4726815223693848
    3. ' max' → logprob: -5.097681522369385
    4. 'H' → logprob: -6.597681522369385
    5. ' abs' → logprob: -7.347681522369385
    6. '(max' → logprob: -7.972681522369385
    7. '(H' → logprob: -8.847681045532227
    8. '(abs' → logprob: -10.347681045532227
    9. ' H' → logprob: -10.722681045532227
    10. ' (' → logprob: -11.597681045532227

Token 339: '(' (ID: 7)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.048609960824251175
    2. '(' → logprob: -3.048609972000122
    3. '0' → logprob: -10.923609733581543
    4. 'H' → logprob: -12.548609733581543
    5. '((' → logprob: -14.673609733581543
    6. ' (' → logprob: -15.173609733581543
    7. '(
' → logprob: -16.04861068725586
    8. '(h' → logprob: -16.17361068725586
    9. ' ' → logprob: -16.54861068725586
    10. '(abs' → logprob: -17.92361068725586

Token 340: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42872992157936096
    2. '(H' → logprob: -1.4287298917770386
    3. '0' → logprob: -2.303730010986328
    4. '(' → logprob: -4.803730010986328
    5. ' H' → logprob: -7.303730010986328
    6. ' ' → logprob: -8.803730010986328
    7. ' (' → logprob: -9.803730010986328
    8. '	H' → logprob: -10.428730010986328
    9. '1' → logprob: -11.303730010986328
    10. '   ' → logprob: -12.053730010986328

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013833323027938604
    2. ',H' → logprob: -7.001383304595947
    3. 'H' → logprob: -8.376383781433105
    4. ' ,' → logprob: -8.876383781433105
    5. '(H' → logprob: -9.501383781433105
    6. ' H' → logprob: -11.751383781433105
    7. '   ' → logprob: -11.876383781433105
    8. ' ' → logprob: -13.001383781433105
    9. '	H' → logprob: -13.501383781433105
    10. ',
' → logprob: -13.876383781433105

Token 342: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00011999329581158236
    2. ' H' → logprob: -9.500120162963867
    3. '(H' → logprob: -10.125120162963867
    4. '   ' → logprob: -12.625120162963867
    5. '	H' → logprob: -14.500120162963867
    6. ')' → logprob: -15.250120162963867
    7. '  ' → logprob: -16.000120162963867
    8. '(' → logprob: -16.375120162963867
    9. '       ' → logprob: -16.375120162963867
    10. '-H' → logprob: -16.625120162963867

Token 343: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.253090865968261e-06
    2. 'x' → logprob: -12.250009536743164
    3. '[' → logprob: -13.250009536743164
    4. '
' → logprob: -14.000009536743164
    5. ' [' → logprob: -14.000009536743164
    6. '```' → logprob: -15.125009536743164
    7. '[
' → logprob: -15.625009536743164
    8. '

' → logprob: -16.375009536743164
    9. '][' → logprob: -16.375009536743164
    10. '[i' → logprob: -16.750009536743164

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007271163631230593
    2. ']-' → logprob: -5.0072712898254395
    3. '-' → logprob: -7.6322712898254395
    4. ' ]' → logprob: -10.257270812988281
    5. ' -' → logprob: -10.507270812988281
    6. '[' → logprob: -12.757270812988281
    7. '```' → logprob: -13.507270812988281
    8. '   ' → logprob: -14.007270812988281
    9. ']
' → logprob: -14.132270812988281
    10. '  ' → logprob: -15.007270812988281

Token 345: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4744972884654999
    2. ' -' → logprob: -0.9744973182678223
    3. '-H' → logprob: -7.849497318267822
    4. ' ' → logprob: -10.974496841430664
    5. '   ' → logprob: -12.474496841430664
    6. ']' → logprob: -12.724496841430664
    7. '  ' → logprob: -12.974496841430664
    8. '```' → logprob: -13.974496841430664
    9. '-
' → logprob: -14.099496841430664
    10. ')' → logprob: -14.974496841430664

Token 346: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000712670327629894
    2. ' H' → logprob: -7.250712871551514
    3. ' ' → logprob: -14.125712394714355
    4. '   ' → logprob: -14.250712394714355
    5. 'max' → logprob: -14.500712394714355
    6. '  ' → logprob: -15.375712394714355
    7. 'dp' → logprob: -15.500712394714355
    8. '	H' → logprob: -15.875712394714355
    9. ')' → logprob: -16.625713348388672
    10. '(H' → logprob: -16.625713348388672

Token 347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044318195432424545
    2. 'i' → logprob: -7.750442981719971
    3. '[' → logprob: -11.625443458557129
    4. '[
' → logprob: -13.625443458557129
    5. '
' → logprob: -14.500443458557129
    6. '[x' → logprob: -14.625443458557129
    7. '```' → logprob: -15.000443458557129
    8. ' i' → logprob: -15.250443458557129
    9. ' [' → logprob: -15.375443458557129
    10. '   ' → logprob: -15.750443458557129

Token 348: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004651672672480345
    2. '])
' → logprob: -5.3796515464782715
    3. ']' → logprob: -12.00465202331543
    4. ')' → logprob: -12.00465202331543
    5. '])
' → logprob: -12.00465202331543
    6. '])

' → logprob: -12.00465202331543
    7. ' ])' → logprob: -12.37965202331543
    8. ']])' → logprob: -14.37965202331543
    9. ')])' → logprob: -14.75465202331543
    10. ']);' → logprob: -15.25465202331543

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034767629113048315
    2. '<|end|>' → logprob: -6.253476619720459
    3. ')' → logprob: -6.628476619720459
    4. ' if' → logprob: -9.628477096557617
    5. '<|end|>' → logprob: -10.503477096557617
    6. '
' → logprob: -10.503477096557617
    7. '        
' → logprob: -10.753477096557617
    8. '           ' → logprob: -10.878477096557617
    9. '```' → logprob: -11.128477096557617
    10. 'if' → logprob: -11.253477096557617

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08285048604011536
    2. ' if' → logprob: -2.832850456237793
    3. 'dp' → logprob: -3.957850456237793
    4. '       ' → logprob: -6.957850456237793
    5. ' dp' → logprob: -7.457850456237793
    6. '           ' → logprob: -10.457850456237793
    7. '
' → logprob: -13.207850456237793
    8. '	dp' → logprob: -13.582850456237793
    9. '   ' → logprob: -14.582850456237793
    10. '	if' → logprob: -14.707850456237793

Token 351: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.20376013219356537
    2. ' candidate' → logprob: -1.7037601470947266
    3. 'dp' → logprob: -6.578760147094727
    4. ' dp' → logprob: -7.078760147094727
    5. 'c' → logprob: -9.953760147094727
    6. '(candidate' → logprob: -10.828760147094727
    7. '   ' → logprob: -11.703760147094727
    8. ' candidat' → logprob: -11.703760147094727
    9. 'cand' → logprob: -11.953760147094727
    10. '	c' → logprob: -12.078760147094727

Token 352: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4740821421146393
    2. '<' → logprob: -0.9740821123123169
    3. '[' → logprob: -13.724081993103027
    4. '<int' → logprob: -14.349081993103027
    5. ' ' → logprob: -14.599081993103027
    6. '<class' → logprob: -15.224081993103027
    7. '<num' → logprob: -15.224081993103027
    8. '<|end|>' → logprob: -15.224081993103027
    9. '<th' → logprob: -15.349081993103027
    10. '<data' → logprob: -15.349081993103027

Token 353: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033558503491804004
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -16.125335693359375
    4. '   ' → logprob: -18.875335693359375
    5. '(dp' → logprob: -19.000335693359375
    6. '
' → logprob: -19.500335693359375
    7. '_dp' → logprob: -19.750335693359375
    8. '       ' → logprob: -20.875335693359375
    9. 'd' → logprob: -21.750335693359375
    10. ' ' → logprob: -21.750335693359375

Token 354: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00017982252757064998
    2. 'x' → logprob: -8.6251802444458
    3. '```' → logprob: -16.625179290771484
    4. '[
' → logprob: -17.375179290771484
    5. ' x' → logprob: -17.375179290771484
    6. '[' → logprob: -17.625179290771484
    7. ' [' → logprob: -18.500179290771484
    8. '<x' → logprob: -19.375179290771484
    9. '   ' → logprob: -19.625179290771484
    10. '][' → logprob: -19.625179290771484

Token 355: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008880691602826118
    2. '[y' → logprob: -4.758880615234375
    3. '[x' → logprob: -9.133880615234375
    4. ']' → logprob: -9.508880615234375
    5. '[' → logprob: -9.758880615234375
    6. ' ][' → logprob: -11.008880615234375
    7. ')[' → logprob: -13.758880615234375
    8. '"][' → logprob: -13.883880615234375
    9. '>[' → logprob: -14.133880615234375
    10. '```' → logprob: -14.258880615234375

Token 356: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.054500666621607e-06
    2. ' y' → logprob: -12.75000286102295
    3. '
' → logprob: -17.750003814697266
    4. '[y' → logprob: -18.000003814697266
    5. '	y' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '```' → logprob: -18.875003814697266
    8. '[' → logprob: -19.125003814697266
    9. 'x' → logprob: -19.250003814697266
    10. ' ' → logprob: -19.750003814697266

Token 357: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003544955048710108
    2. ']' → logprob: -6.253544807434082
    3. ']:
' → logprob: -6.753544807434082
    4. '[x' → logprob: -8.628544807434082
    5. ']):' → logprob: -9.253544807434082
    6. ']>' → logprob: -9.503544807434082
    7. '       ' → logprob: -10.628544807434082
    8. '[' → logprob: -10.753544807434082
    9. ' ]' → logprob: -11.753544807434082
    10. ']:

' → logprob: -12.128544807434082

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14337587356567383
    2. ' dp' → logprob: -2.268375873565674
    3. 'dp' → logprob: -3.518375873565674
    4. '(dp' → logprob: -8.393375396728516
    5. '	dp' → logprob: -8.768375396728516
    6. '               ' → logprob: -10.768375396728516
    7. '_dp' → logprob: -11.268375396728516
    8. '   ' → logprob: -12.268375396728516
    9. '          ' → logprob: -12.393375396728516
    10. '       ' → logprob: -12.393375396728516

Token 359: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03827683627605438
    2. ' dp' → logprob: -3.2882769107818604
    3. '               ' → logprob: -8.913276672363281
    4. '           ' → logprob: -9.413276672363281
    5. '	dp' → logprob: -11.163276672363281
    6. '(dp' → logprob: -13.038276672363281
    7. '_dp' → logprob: -13.413276672363281
    8. '   ' → logprob: -14.538276672363281
    9. '                   ' → logprob: -14.788276672363281
    10. '       ' → logprob: -15.538276672363281

Token 360: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. 'x' → logprob: -16.0
    4. '```' → logprob: -16.875
    5. '][' → logprob: -17.125
    6. '[
' → logprob: -18.625
    7. '\[' → logprob: -19.75
    8. ' [' → logprob: -19.75
    9. '   ' → logprob: -20.125
    10. ')[' → logprob: -20.5

Token 361: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.231182826217264e-05
    2. ']' → logprob: -10.000072479248047
    3. '[x' → logprob: -10.750072479248047
    4. ' ][' → logprob: -12.500072479248047
    5. '"][' → logprob: -14.500072479248047
    6. ']][' → logprob: -14.750072479248047
    7. '[' → logprob: -15.125072479248047
    8. '       ' → logprob: -16.375072479248047
    9. '   ' → logprob: -16.625072479248047
    10. ''][' → logprob: -16.750072479248047

Token 362: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005245577194727957
    2. ']' → logprob: -7.875524520874023
    3. '[' → logprob: -10.000524520874023
    4. '<|end|>' → logprob: -10.375524520874023
    5. '[y' → logprob: -10.500524520874023
    6. '][' → logprob: -10.875524520874023
    7. ' y' → logprob: -11.625524520874023
    8. '=' → logprob: -12.750524520874023
    9. ']=' → logprob: -13.000524520874023
    10. ''y' → logprob: -13.500524520874023

Token 363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007659103139303625
    2. '=' → logprob: -7.625765800476074
    3. ']=' → logprob: -8.375765800476074
    4. ' =' → logprob: -10.000765800476074
    5. ' ]' → logprob: -13.250765800476074
    6. ')' → logprob: -16.12576675415039
    7. '<|end|>' → logprob: -16.25076675415039
    8. '```' → logprob: -17.87576675415039
    9. ']
' → logprob: -18.00076675415039
    10. '[' → logprob: -18.00076675415039

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '＝' → logprob: -16.349077224731445
    4. '.=' → logprob: -16.849077224731445
    5. ']=' → logprob: -17.599077224731445
    6. '=

' → logprob: -18.474077224731445
    7. '=int' → logprob: -18.849077224731445
    8. ']' → logprob: -18.849077224731445
    9. '=c' → logprob: -19.224077224731445
    10. '[' → logprob: -19.349077224731445

Token 365: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0024756586644798517
    2. ' candidate' → logprob: -6.002475738525391
    3. '(candidate' → logprob: -18.87747573852539
    4. 'c' → logprob: -19.75247573852539
    5. '_candidate' → logprob: -20.00247573852539
    6. ' candidat' → logprob: -20.50247573852539
    7. '           ' → logprob: -20.62747573852539
    8. 'cand' → logprob: -21.00247573852539
    9. '候' → logprob: -22.25247573852539
    10. '   ' → logprob: -22.37747573852539

Token 366: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' find' (ID: 1646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08903707563877106
    2. 'solve' → logprob: -3.0890371799468994
    3. ' main' → logprob: -3.3390371799468994
    4. ' solve' → logprob: -5.96403694152832
    5. 'calculate' → logprob: -7.46403694152832
    6. 'min' → logprob: -8.21403694152832
    7. 'compute' → logprob: -8.46403694152832
    8. 'minimal' → logprob: -9.21403694152832
    9. 'minimum' → logprob: -9.33903694152832
    10. 'process' → logprob: -9.46403694152832

Token 369: '_min' (ID: 15950)
  Prédit: '_best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_best' → logprob: -0.8168548941612244
    2. '_min' → logprob: -1.3168549537658691
    3. '_opt' → logprob: -1.6918549537658691
    4. '_max' → logprob: -2.941854953765869
    5. '_answer' → logprob: -4.066854953765869
    6. '_ans' → logprob: -5.066854953765869
    7. '_k' → logprob: -5.191854953765869
    8. '_dp' → logprob: -5.566854953765869
    9. '_next' → logprob: -5.941854953765869
    10. '_x' → logprob: -6.066854953765869

Token 370: '_ans' (ID: 146254)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.006425380706787
    2. '_ans' → logprob: -1.006425380706787
    3. '_cost' → logprob: -2.381425380706787
    4. '_answer' → logprob: -2.381425380706787
    5. '_value' → logprob: -3.131425380706787
    6. '_x' → logprob: -4.006425380706787
    7. '_val' → logprob: -5.881425380706787
    8. 'imum' → logprob: -5.881425380706787
    9. '_total' → logprob: -6.256425380706787
    10. '_index' → logprob: -6.381425380706787

Token 371: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0020709214732050896
    2. '(N' → logprob: -6.377070903778076
    3. '(' → logprob: -8.127071380615234
    4. ' (' → logprob: -10.002071380615234
    5. '(def' → logprob: -11.752071380615234
    6. 'dp' → logprob: -12.627071380615234
    7. '(
' → logprob: -12.877071380615234
    8. 'def' → logprob: -13.127071380615234
    9. '(n' → logprob: -13.127071380615234
    10. '():' → logprob: -13.252071380615234

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14013972878456116
    2. '):' → logprob: -2.5151398181915283
    3. '):
' → logprob: -3.0151398181915283
    4. ' ,' → logprob: -7.890139579772949
    5. ',N' → logprob: -8.14013957977295
    6. '):
' → logprob: -9.89013957977295
    7. ')' → logprob: -10.14013957977295
    8. ' ):' → logprob: -10.51513957977295
    9. '[N' → logprob: -10.76513957977295
    10. ',n' → logprob: -11.14013957977295

Token 373: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08924087136983871
    2. ' N' → logprob: -2.464240789413452
    3. 'dp' → logprob: -8.964241027832031
    4. 'x' → logprob: -10.089241027832031
    5. ',' → logprob: -10.214241027832031
    6. 'K' → logprob: -10.839241027832031
    7. 'n' → logprob: -11.214241027832031
    8. ' dp' → logprob: -11.339241027832031
    9. ',N' → logprob: -11.714241027832031
    10. ')' → logprob: -11.964241027832031

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005861566751264036
    2. ' ,' → logprob: -8.12558650970459
    3. ',K' → logprob: -9.00058650970459
    4. '):' → logprob: -9.37558650970459
    5. '):
' → logprob: -10.00058650970459
    6. ',N' → logprob: -11.00058650970459
    7. '   ' → logprob: -11.75058650970459
    8. ',
' → logprob: -12.87558650970459
    9. ',k' → logprob: -13.87558650970459
    10. 'def' → logprob: -14.00058650970459

Token 375: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008818424306809902
    2. ' K' → logprob: -4.758818626403809
    3. 'N' → logprob: -8.633818626403809
    4. '
' → logprob: -12.008818626403809
    5. '   ' → logprob: -12.508818626403809
    6. ' N' → logprob: -13.008818626403809
    7. ')' → logprob: -13.008818626403809
    8. ',' → logprob: -13.133818626403809
    9. ' ' → logprob: -13.133818626403809
    10. 'range' → logprob: -13.258818626403809

Token 376: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5319253206253052
    2. '):' → logprob: -0.9069253206253052
    3. ',' → logprob: -4.781925201416016
    4. '   ' → logprob: -8.531925201416016
    5. '):
' → logprob: -8.906925201416016
    6. '):

' → logprob: -11.156925201416016
    7. ')' → logprob: -11.406925201416016
    8. ' ):' → logprob: -11.531925201416016
    9. ' ):
' → logprob: -11.906925201416016
    10. ' ,' → logprob: -12.281925201416016

Token 377: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.18528293073177338
    2. 'ans' → logprob: -2.4352829456329346
    3. '   ' → logprob: -2.6852829456329346
    4. 'result' → logprob: -5.0602827072143555
    5. 'res' → logprob: -5.6852827072143555
    6. 'answer' → logprob: -6.5602827072143555
    7. 'return' → logprob: -6.8102827072143555
    8. 'size' → logprob: -7.4352827072143555
    9. ' min' → logprob: -8.685282707214355
    10. ' ans' → logprob: -8.935282707214355

Token 378: ' min' (ID: 1349)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1540403366088867
    2. 'min' (adapté à ' min') → logprob: -1.1540403366088867
    3. 'res' → logprob: -1.9040403366088867
    4. 'size' → logprob: -2.2790403366088867
    5. 'result' → logprob: -2.7790403366088867
    6. 'return' → logprob: -3.1540403366088867
    7. 'answer' → logprob: -4.654040336608887
    8. '   ' → logprob: -6.529040336608887
    9. 'ret' → logprob: -7.154040336608887
    10. 'last' → logprob: -7.904040336608887

Token 379: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.26318660378456116
    2. '_val' → logprob: -1.7631865739822388
    3. '_value' → logprob: -3.5131866931915283
    4. '_cost' → logprob: -3.6381866931915283
    5. 'ans' → logprob: -6.138186454772949
    6. '_answer' → logprob: -7.388186454772949
    7. 'val' → logprob: -7.638186454772949
    8. '(dp' → logprob: -9.01318645477295
    9. '_dp' → logprob: -9.38818645477295
    10. 'cost' → logprob: -9.38818645477295

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941801071167
    2. ' =' → logprob: -0.825941801071167
    3. '   ' → logprob: -14.075942039489746
    4. ',' → logprob: -14.075942039489746
    5. '=
' → logprob: -15.075942039489746
    6. ' ' → logprob: -15.825942039489746
    7. '=

' → logprob: -15.825942039489746
    8. ' =
' → logprob: -15.950942039489746
    9. '```' → logprob: -16.82594108581543
    10. '_' → logprob: -17.45094108581543

Token 381: ' dp' (ID: 21546)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.031510129570961
    2. 'min' → logprob: -3.5315101146698
    3. 'dp' → logprob: -6.906510353088379
    4. 'float' → logprob: -7.406510353088379
    5. ' min' → logprob: -9.281510353088379
    6. ' ' → logprob: -10.781510353088379
    7. '1' → logprob: -10.906510353088379
    8. 'max' → logprob: -12.406510353088379
    9. '
' → logprob: -12.531510353088379
    10. 'int' → logprob: -12.656510353088379

Token 382: '[' (ID: 58)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.03629433736205101
    2. '[' → logprob: -3.4112942218780518
    3. '[-' → logprob: -6.161294460296631
    4. '[K' → logprob: -8.036293983459473
    5. '[max' → logprob: -9.411293983459473
    6. '[min' → logprob: -10.161293983459473
    7. 'N' → logprob: -10.911293983459473
    8. 'max' → logprob: -11.286293983459473
    9. '[len' → logprob: -11.411293983459473
    10. '0' → logprob: -12.161293983459473

Token 383: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00031651611789129674
    2. '[N' → logprob: -8.875316619873047
    3. 'K' → logprob: -9.000316619873047
    4. 'range' → logprob: -10.625316619873047
    5. ' N' → logprob: -11.625316619873047
    6. '
' → logprob: -12.500316619873047
    7. '[-' → logprob: -12.875316619873047
    8. '(N' → logprob: -13.000316619873047
    9. '0' → logprob: -13.250316619873047
    10. '-N' → logprob: -13.500316619873047

Token 384: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008199920994229615
    2. '][-' → logprob: -8.00082015991211
    3. '[N' → logprob: -8.12582015991211
    4. ']' → logprob: -9.00082015991211
    5. '[' → logprob: -11.00082015991211
    6. ' ][' → logprob: -11.37582015991211
    7. '
' → logprob: -12.25082015991211
    8. 'N' → logprob: -12.25082015991211
    9. '0' → logprob: -12.50082015991211
    10. ']][' → logprob: -12.75082015991211

Token 385: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.2603901015827432e-05
    2. ' N' → logprob: -11.125022888183594
    3. '0' → logprob: -12.875022888183594
    4. '   ' → logprob: -13.750022888183594
    5. '(N' → logprob: -13.750022888183594
    6. '1' → logprob: -14.000022888183594
    7. '-' → logprob: -14.250022888183594
    8. '-N' → logprob: -14.625022888183594
    9. '
' → logprob: -14.875022888183594
    10. ' ' → logprob: -15.000022888183594

Token 386: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.14937226474285126
    2. ' -' → logprob: -2.0243723392486572
    3. '-' → logprob: -5.024372100830078
    4. 'K' → logprob: -10.024372100830078
    5. '
' → logprob: -10.774372100830078
    6. ' ' → logprob: -12.024372100830078
    7. '][' → logprob: -12.399372100830078
    8. '-k' → logprob: -12.399372100830078
    9. ']' → logprob: -12.524372100830078
    10. '−' → logprob: -13.149372100830078

Token 387: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004320996522437781
    2. ' K' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.500432014465332
    4. '	K' → logprob: -14.750432014465332
    5. '_K' → logprob: -16.12543296813965
    6. '
' → logprob: -16.37543296813965
    7. '-K' → logprob: -16.87543296813965
    8. '>K' → logprob: -16.87543296813965
    9. ' ' → logprob: -17.00043296813965
    10. '  ' → logprob: -17.50043296813965

Token 388: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.039730481803417206
    2. ']' → logprob: -3.2897305488586426
    3. ' +' → logprob: -6.414730548858643
    4. ']+' → logprob: -11.289730072021484
    5. '1' → logprob: -11.789730072021484
    6. '0' → logprob: -12.164730072021484
    7. '   ' → logprob: -12.539730072021484
    8. ']
' → logprob: -12.914730072021484
    9. '][' → logprob: -12.914730072021484
    10. ' ]' → logprob: -13.164730072021484

Token 389: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.258578896522522
    2. '   ' → logprob: -1.508578896522522
    3. ' for' → logprob: -5.133578777313232
    4. '
' → logprob: -7.258578777313232
    5. '	for' → logprob: -10.88357925415039
    6. '    
' → logprob: -12.00857925415039
    7. '```' → logprob: -13.88357925415039
    8. '  ' → logprob: -14.63357925415039
    9. 'min' → logprob: -14.75857925415039
    10. ',' → logprob: -15.00857925415039

Token 390: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.60414821645827e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' for' → logprob: -14.875004768371582
    4. '
' → logprob: -15.000004768371582
    5. 'return' → logprob: -16.875003814697266
    6. 'min' → logprob: -16.875003814697266
    7. 'import' → logprob: -19.625003814697266
    8. '	for' → logprob: -19.750003814697266
    9. '```' → logprob: -20.000003814697266
    10. '    
' → logprob: -20.625003814697266

Token 391: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033991944510489702
    2. 'i' → logprob: -6.00339937210083
    3. ' x' → logprob: -7.00339937210083
    4. ' i' → logprob: -11.378398895263672
    5. 'j' → logprob: -14.253398895263672
    6. 'y' → logprob: -14.503398895263672
    7. 'ans' → logprob: -14.753398895263672
    8. 'idx' → logprob: -15.128398895263672
    9. 'dp' → logprob: -16.003398895263672
    10. 'row' → logprob: -16.253398895263672

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026423374190926552
    2. 'in' → logprob: -3.651423454284668
    3. 'range' → logprob: -9.276423454284668
    4. 'n' → logprob: -12.151423454284668
    5. '   ' → logprob: -12.276423454284668
    6. ' ' → logprob: -12.651423454284668
    7. '1' → logprob: -12.776423454284668
    8. 'x' → logprob: -13.026423454284668
    9. 'def' → logprob: -13.151423454284668
    10. 'd' → logprob: -13.276423454284668

Token 393: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326213479042053
    2. ' range' → logprob: -1.3132621049880981
    3. '(range' → logprob: -15.188261985778809
    4. ' ' → logprob: -16.688262939453125
    5. '	range' → logprob: -17.813262939453125
    6. '   ' → logprob: -17.813262939453125
    7. 'list' → logprob: -18.438262939453125
    8. 'rang' → logprob: -18.438262939453125
    9. 'dp' → logprob: -18.563262939453125
    10. 'r' → logprob: -18.688262939453125

Token 394: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011310238391160965
    2. '1' → logprob: -5.01131010055542
    3. '(N' → logprob: -5.38631010055542
    4. 'N' → logprob: -13.511310577392578
    5. ' (' → logprob: -13.511310577392578
    6. '(
' → logprob: -13.886310577392578
    7. '(K' → logprob: -14.136310577392578
    8. ' ' → logprob: -14.136310577392578
    9. ',' → logprob: -15.386310577392578
    10. '(len' → logprob: -16.761310577392578

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062358420342206955
    2. 'N' → logprob: -2.8123583793640137
    3. '(N' → logprob: -8.312358856201172
    4. '0' → logprob: -9.562358856201172
    5. '(' → logprob: -10.187358856201172
    6. 'len' → logprob: -11.062358856201172
    7. 'K' → logprob: -11.312358856201172
    8. ' N' → logprob: -12.187358856201172
    9. ' ' → logprob: -12.937358856201172
    10. '   ' → logprob: -15.312358856201172

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ',N' → logprob: -10.375065803527832
    3. ' ,' → logprob: -10.375065803527832
    4. 'N' → logprob: -13.500065803527832
    5. ',
' → logprob: -14.000065803527832
    6. '   ' → logprob: -14.375065803527832
    7. ',n' → logprob: -15.750065803527832
    8. '(N' → logprob: -15.875065803527832
    9. '
' → logprob: -16.12506675720215
    10. ',len' → logprob: -17.12506675720215

Token 397: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005345112644135952
    2. ' N' → logprob: -5.380345344543457
    3. 'len' → logprob: -7.380345344543457
    4. '   ' → logprob: -10.130345344543457
    5. '(N' → logprob: -10.380345344543457
    6. ' len' → logprob: -10.880345344543457
    7. '(len' → logprob: -13.005345344543457
    8. ' ' → logprob: -13.130345344543457
    9. ' (' → logprob: -13.505345344543457
    10. '	N' → logprob: -13.630345344543457

Token 398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12704895436763763
    2. ' +' → logprob: -2.127048969268799
    3. ' -' → logprob: -9.37704849243164
    4. '-' → logprob: -10.37704849243164
    5. ' ' → logprob: -13.12704849243164
    6. '   ' → logprob: -13.25204849243164
    7. '+
' → logprob: -14.62704849243164
    8. '
' → logprob: -15.12704849243164
    9. '  ' → logprob: -15.87704849243164
    10. '1' → logprob: -15.87704849243164

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. ')' → logprob: -16.000179290771484
    4. '0' → logprob: -18.375179290771484
    5. ' -' → logprob: -18.750179290771484
    6. '
' → logprob: -18.750179290771484
    7. '(' → logprob: -18.875179290771484
    8. '   ' → logprob: -19.625179290771484
    9. '-' → logprob: -19.875179290771484
    10. ' (' → logprob: -20.000179290771484

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. ')' → logprob: -17.250009536743164
    4. '0' → logprob: -19.250009536743164
    5. '
' → logprob: -20.250009536743164
    6. '```' → logprob: -20.875009536743164
    7. '   ' → logprob: -21.500009536743164
    8. '  ' → logprob: -21.750009536743164
    9. '１' → logprob: -22.000009536743164
    10. ',' → logprob: -22.000009536743164

Token 401: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06198505312204361
    2. '):' → logprob: -2.8119850158691406
    3. '):
' → logprob: -11.93698501586914
    4. ':' → logprob: -12.31198501586914
    5. '   ' → logprob: -12.43698501586914
    6. ':
' → logprob: -13.81198501586914
    7. '):

' → logprob: -14.56198501586914
    8. ' ):
' → logprob: -14.68698501586914
    9. '():
' → logprob: -15.43698501586914
    10. ',' → logprob: -16.56198501586914

Token 402: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22500920295715332
    2. ' if' → logprob: -1.7250092029571533
    3. '       ' → logprob: -4.350008964538574
    4. 'if' → logprob: -4.600008964538574
    5. '
' → logprob: -8.475008964538574
    6. '	if' → logprob: -10.225008964538574
    7. ',' → logprob: -10.225008964538574
    8. '```' → logprob: -10.475008964538574
    9. ' ' → logprob: -11.350008964538574
    10. '<|end|>' → logprob: -11.475008964538574

Token 403: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02374187856912613
    2. '   ' → logprob: -4.273741722106934
    3. 'min' → logprob: -4.898741722106934
    4. ' if' → logprob: -6.273741722106934
    5. '       ' → logprob: -8.648741722106934
    6. ' min' → logprob: -11.773741722106934
    7. '```' → logprob: -12.398741722106934
    8. '	if' → logprob: -13.523741722106934
    9. '[min' → logprob: -14.148741722106934
    10. ' ' → logprob: -14.648741722106934

Token 404: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31326520442962646
    2. ' dp' → logprob: -1.3132652044296265
    3. '	dp' → logprob: -13.188264846801758
    4. '(dp' → logprob: -13.813264846801758
    5. '   ' → logprob: -14.563264846801758
    6. ' ' → logprob: -17.438264846801758
    7. '_dp' → logprob: -17.688264846801758
    8. ' ' → logprob: -17.938264846801758
    9. '    ' → logprob: -18.563264846801758
    10. '
' → logprob: -18.563264846801758

Token 405: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.019237768370658e-05
    2. 'i' → logprob: -9.625090599060059
    3. '[' → logprob: -10.750090599060059
    4. '```' → logprob: -14.375090599060059
    5. '[
' → logprob: -14.625090599060059
    6. '<|end|>' → logprob: -14.625090599060059
    7. ' [' → logprob: -15.125090599060059
    8. '
' → logprob: -15.500090599060059
    9. '[I' → logprob: -16.250089645385742
    10. '][' → logprob: -16.250089645385742

Token 406: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1620878279209137
    2. '[i' → logprob: -1.9120877981185913
    3. '[N' → logprob: -6.537087917327881
    4. '[' → logprob: -8.287087440490723
    5. ' ][' → logprob: -10.162087440490723
    6. 'i' → logprob: -10.287087440490723
    7. ']' → logprob: -10.787087440490723
    8. '[][' → logprob: -11.287087440490723
    9. '>[' → logprob: -11.787087440490723
    10. ')[' → logprob: -12.037087440490723

Token 407: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03864460438489914
    2. '[N' → logprob: -3.288644552230835
    3. ' N' → logprob: -7.538644790649414
    4. '][' → logprob: -10.788644790649414
    5. '(N' → logprob: -10.913644790649414
    6. '[' → logprob: -10.913644790649414
    7. '0' → logprob: -12.288644790649414
    8. '   ' → logprob: -12.788644790649414
    9. '	N' → logprob: -13.288644790649414
    10. ' ' → logprob: -13.288644790649414

Token 408: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.20183926820755005
    2. '-' → logprob: -1.9518392086029053
    3. ' -' → logprob: -3.2018392086029053
    4. ' ' → logprob: -10.451839447021484
    5. '[' → logprob: -11.576839447021484
    6. '-К' → logprob: -11.826839447021484
    7. 'K' → logprob: -12.076839447021484
    8. '_K' → logprob: -12.451839447021484
    9. '-
' → logprob: -12.826839447021484
    10. ' K' → logprob: -13.076839447021484

Token 409: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001843485952122137
    2. ' K' → logprob: -8.625184059143066
    3. '_K' → logprob: -13.625184059143066
    4. '   ' → logprob: -13.875184059143066
    5. '>K' → logprob: -14.500184059143066
    6. '<|end|>' → logprob: -14.500184059143066
    7. '       ' → logprob: -15.250184059143066
    8. ' ' → logprob: -15.250184059143066
    9. '	K' → logprob: -16.375185012817383
    10. '<K' → logprob: -16.375185012817383

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022048240527510643
    2. ']<' → logprob: -3.897048234939575
    3. ']>' → logprob: -7.522048473358154
    4. '][' → logprob: -7.647048473358154
    5. '[i' → logprob: -8.397047996520996
    6. '[' → logprob: -8.397047996520996
    7. ']>=' → logprob: -11.772047996520996
    8. ' ]' → logprob: -12.272047996520996
    9. '[j' → logprob: -12.647047996520996
    10. '[y' → logprob: -12.647047996520996

Token 411: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07276912033557892
    2. ' <' → logprob: -2.8227691650390625
    3. ']' → logprob: -5.1977691650390625
    4. '[' → logprob: -5.4477691650390625
    5. ']<' → logprob: -7.1977691650390625
    6. '[i' → logprob: -9.072769165039062
    7. ' [' → logprob: -11.947769165039062
    8. '<i' → logprob: -12.322769165039062
    9. '   ' → logprob: -12.697769165039062
    10. '][' → logprob: -12.697769165039062

Token 412: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.941850526549388e-06
    2. ' min' → logprob: -11.750007629394531
    3. '	min' → logprob: -21.00000762939453
    4. '=min' → logprob: -21.50000762939453
    5. '_min' → logprob: -21.75000762939453
    6. '[min' → logprob: -22.00000762939453
    7. '   ' → logprob: -22.12500762939453
    8. '```' → logprob: -22.87500762939453
    9. '
' → logprob: -23.00000762939453
    10. '(min' → logprob: -23.12500762939453

Token 413: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.816093228830141e-06
    2. 'ans' → logprob: -12.87500286102295
    3. '(ans' → logprob: -16.125001907348633
    4. '_answer' → logprob: -17.375001907348633
    5. '_min' → logprob: -17.375001907348633
    6. 'min' → logprob: -18.000001907348633
    7. 'Ans' → logprob: -18.000001907348633
    8. '	ans' → logprob: -18.500001907348633
    9. '_err' → logprob: -18.500001907348633
    10. '_an' → logprob: -19.125001907348633

Token 414: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1838466227054596
    2. ':' → logprob: -1.8088465929031372
    3. '           ' → logprob: -5.558846473693848
    4. '):
' → logprob: -9.183846473693848
    5. '       ' → logprob: -9.433846473693848
    6. 'min' → logprob: -11.183846473693848
    7. ':min' → logprob: -11.308846473693848
    8. ' :
' → logprob: -11.558846473693848
    9. '[min' → logprob: -12.683846473693848
    10. '   ' → logprob: -12.933846473693848

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44246822595596313
    2. '       ' → logprob: -1.3174681663513184
    3. ' min' → logprob: -2.9424681663513184
    4. 'min' → logprob: -3.3174681663513184
    5. '[min' → logprob: -7.817468166351318
    6. '               ' → logprob: -9.192468643188477
    7. '	min' → logprob: -9.567468643188477
    8. '   ' → logprob: -10.317468643188477
    9. '```' → logprob: -10.442468643188477
    10. '_min' → logprob: -10.442468643188477

Token 416: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0005595852271653712
    2. ' min' → logprob: -7.5005598068237305
    3. '           ' → logprob: -12.37555980682373
    4. '   ' → logprob: -13.25055980682373
    5. '       ' → logprob: -15.00055980682373
    6. '	min' → logprob: -16.250558853149414
    7. '_min' → logprob: -16.375558853149414
    8. ' ' → logprob: -17.500558853149414
    9. 'mi' → logprob: -18.875558853149414
    10. '  ' → logprob: -18.875558853149414

Token 417: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -6.704273118884885e-07
    2. 'ans' → logprob: -14.750000953674316
    3. '	ans' → logprob: -15.750000953674316
    4. 'Ans' → logprob: -17.375
    5. '_answer' → logprob: -18.375
    6. ' ans' → logprob: -18.375
    7. '(ans' → logprob: -18.875
    8. '_ann' → logprob: -19.75
    9. '_' → logprob: -20.625
    10. '_err' → logprob: -20.625

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693160891532898
    2. ' =' → logprob: -0.693160891532898
    3. '=min' → logprob: -12.193161010742188
    4. '_ans' → logprob: -12.443161010742188
    5. 'ans' → logprob: -13.943161010742188
    6. '=i' → logprob: -14.193161010742188
    7. '=
' → logprob: -14.818161010742188
    8. '           ' → logprob: -14.943161010742188
    9. '   ' → logprob: -15.193161010742188
    10. ' ' → logprob: -15.193161010742188

Token 419: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.061969365924596786
    2. ' dp' → logprob: -2.81196928024292
    3. '	dp' → logprob: -13.561969757080078
    4. '(dp' → logprob: -14.936969757080078
    5. '_dp' → logprob: -17.311969757080078
    6. '   ' → logprob: -17.936969757080078
    7. '.dp' → logprob: -18.061969757080078
    8. '           ' → logprob: -18.186969757080078
    9. '       ' → logprob: -18.811969757080078
    10. 'd' → logprob: -19.311969757080078

Token 420: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.093505099765025e-05
    2. 'i' → logprob: -11.125020980834961
    3. 'dp' → logprob: -12.125020980834961
    4. '[' → logprob: -14.875020980834961
    5. '```' → logprob: -15.375020980834961
    6. '
' → logprob: -17.00002098083496
    7. '   ' → logprob: -17.37502098083496
    8. '(i' → logprob: -17.62502098083496
    9. '{i' → logprob: -17.75002098083496
    10. '`' → logprob: -17.87502098083496

Token 421: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.049895018339157104
    2. '[i' → logprob: -3.0498950481414795
    3. ']' → logprob: -7.2998948097229
    4. '[N' → logprob: -7.5498948097229
    5. ')[' → logprob: -10.299895286560059
    6. ' ][' → logprob: -10.799895286560059
    7. '[' → logprob: -10.924895286560059
    8. '>[' → logprob: -11.924895286560059
    9. '}[' → logprob: -12.549895286560059
    10. ']
' → logprob: -12.799895286560059

Token 422: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.300083648762666e-05
    2. ' N' → logprob: -9.875053405761719
    3. 'K' → logprob: -14.125053405761719
    4. '   ' → logprob: -15.125053405761719
    5. 'i' → logprob: -16.00005340576172
    6. ' ' → logprob: -16.00005340576172
    7. '0' → logprob: -16.37505340576172
    8. '           ' → logprob: -17.50005340576172
    9. '    ' → logprob: -17.62505340576172
    10. '  ' → logprob: -17.75005340576172

Token 423: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.22951076924800873
    2. ' -' → logprob: -1.60451078414917
    3. '-' → logprob: -5.60451078414917
    4. '_K' → logprob: -8.229510307312012
    5. '   ' → logprob: -10.604510307312012
    6. '[' → logprob: -10.729510307312012
    7. '][' → logprob: -10.854510307312012
    8. ' ' → logprob: -11.104510307312012
    9. '[K' → logprob: -11.354510307312012
    10. '
' → logprob: -11.354510307312012

Token 424: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0009630310814827681
    2. '1' → logprob: -7.12596321105957
    3. ' K' → logprob: -8.87596321105957
    4. '<|end|>' → logprob: -11.75096321105957
    5. ' ' → logprob: -12.37596321105957
    6. '```' → logprob: -13.50096321105957
    7. '
' → logprob: -14.18846321105957
    8. '   ' → logprob: -14.37596321105957
    9. '_K' → logprob: -14.56346321105957
    10. '>K' → logprob: -14.62596321105957

Token 425: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04573732987046242
    2. ')' → logprob: -4.045737266540527
    3. ')
' → logprob: -4.170737266540527
    4. 'return' → logprob: -4.920737266540527
    5. '
' → logprob: -6.670737266540527
    6. ']
' → logprob: -6.670737266540527
    7. ' return' → logprob: -7.045737266540527
    8. ']' → logprob: -7.170737266540527
    9. '       ' → logprob: -9.545737266540527
    10. '```' → logprob: -9.670737266540527

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06702911108732224
    2. 'return' → logprob: -2.8170289993286133
    3. ' return' → logprob: -5.317028999328613
    4. '
' → logprob: -8.942028999328613
    5. '```' → logprob: -12.317028999328613
    6. '	return' → logprob: -12.692028999328613
    7. 'def' → logprob: -13.817028999328613
    8. '       ' → logprob: -14.067028999328613
    9. ' ' → logprob: -15.317028999328613
    10. '  ' → logprob: -15.317028999328613

Token 427: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024736959487199783
    2. '   ' → logprob: -3.7747368812561035
    3. ' return' → logprob: -6.5247368812561035
    4. '
' → logprob: -11.024737358093262
    5. '	return' → logprob: -12.399737358093262
    6. '```' → logprob: -13.274737358093262
    7. 'for' → logprob: -14.649737358093262
    8. '{return' → logprob: -15.024737358093262
    9. 'def' → logprob: -15.524737358093262
    10. ' ' → logprob: -15.649737358093262

Token 428: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01814994215965271
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -20.893150329589844
    4. '(min' → logprob: -21.893150329589844
    5. '[min' → logprob: -22.268150329589844
    6. '_min' → logprob: -22.643150329589844
    7. '   ' → logprob: -23.143150329589844
    8. ',min' → logprob: -24.393150329589844
    9. '
' → logprob: -24.518150329589844
    10. 'm' → logprob: -24.518150329589844

Token 429: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.7432603272027336e-06
    2. '_answer' → logprob: -14.750001907348633
    3. 's' → logprob: -14.875001907348633
    4. '_s' → logprob: -15.125001907348633
    5. '_' → logprob: -15.375001907348633
    6. '_an' → logprob: -15.625001907348633
    7. 'ans' → logprob: -16.000001907348633
    8. '_ant' → logprob: -16.875001907348633
    9. '_answers' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.500001907348633

Token 430: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.277553620748222e-05
    2. '```' → logprob: -10.500062942504883
    3. 'if' → logprob: -10.750062942504883
    4. '
' → logprob: -11.750062942504883
    5. '<|end|>' → logprob: -13.250062942504883
    6. '#' → logprob: -13.500062942504883
    7. ' def' → logprob: -14.000062942504883
    8. '  
' → logprob: -14.250062942504883
    9. 'N' → logprob: -15.625062942504883
    10. '    
' → logprob: -15.750062942504883

Token 431: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.723352049040841e-06
    2. ' def' → logprob: -13.000004768371582
    3. 'if' → logprob: -13.875004768371582
    4. '```' → logprob: -14.125004768371582
    5. '#' → logprob: -15.000004768371582
    6. ':' → logprob: -15.625004768371582
    7. '_' → logprob: -17.000003814697266
    8. ':def' → logprob: -17.250003814697266
    9. 'ndef' → logprob: -17.375003814697266
    10. 'x' → logprob: -17.625003814697266

Token 432: ' output' (ID: 4733)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005065229721367359
    2. ' main' → logprob: -5.380065441131592
    3. 'def' → logprob: -7.755065441131592
    4. 'solve' → logprob: -11.130064964294434
    5. ' def' → logprob: -13.755064964294434
    6. ' solve' → logprob: -15.380064964294434
    7. 'process' → logprob: -16.38006591796875
    8. '	main' → logprob: -16.63006591796875
    9. 'run' → logprob: -16.63006591796875
    10. 'solution' → logprob: -16.75506591796875

Token 433: '_result' (ID: 11623)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7100315690040588
    2. '():' → logprob: -0.9600315690040588
    3. '(' → logprob: -2.960031509399414
    4. '(ans' → logprob: -3.210031509399414
    5. '_ans' → logprob: -4.835031509399414
    6. '_' → logprob: -5.085031509399414
    7. '_answer' → logprob: -5.335031509399414
    8. '_result' → logprob: -5.460031509399414
    9. 'def' → logprob: -5.960031509399414
    10. '():
' → logprob: -6.085031509399414

Token 434: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.032158270478248596
    2. '(min' → logprob: -3.532158374786377
    3. '(result' → logprob: -6.657158374786377
    4. '(answer' → logprob: -7.782158374786377
    5. '():' → logprob: -8.032157897949219
    6. '(' → logprob: -8.157157897949219
    7. '(value' → logprob: -10.157157897949219
    8. '():
' → logprob: -10.657157897949219
    9. ' (' → logprob: -11.157157897949219
    10. '(def' → logprob: -11.782157897949219

Token 435: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048618022352457047
    2. '):' → logprob: -3.0486180782318115
    3. '):
' → logprob: -11.29861831665039
    4. ')' → logprob: -12.04861831665039
    5. '():
' → logprob: -12.04861831665039
    6. '(ans' → logprob: -12.92361831665039
    7. '   ' → logprob: -13.29861831665039
    8. ':' → logprob: -14.17361831665039
    9. ':
' → logprob: -14.42361831665039
    10. '):

' → logprob: -14.67361831665039

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05232398957014084
    2. ' print' → logprob: -3.552324056625366
    3. 'print' → logprob: -3.802324056625366
    4. '```' → logprob: -13.427324295043945
    5. '	print' → logprob: -15.302324295043945
    6. '   ' → logprob: -16.802324295043945
    7. '.print' → logprob: -18.927324295043945
    8. '
' → logprob: -19.052324295043945
    9. '    
' → logprob: -19.177324295043945
    10. '`' → logprob: -19.677324295043945

Token 437: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -22.5
    5. '	print' → logprob: -25.75
    6. 'pr' → logprob: -26.375
    7. 'prin' → logprob: -27.375
    8. '`' → logprob: -27.5
    9. '
' → logprob: -27.625
    10. '#print' → logprob: -27.75

Token 438: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.572941179503687e-05
    2. 'ans' → logprob: -10.000045776367188
    3. '(' → logprob: -15.125045776367188
    4. '(int' → logprob: -18.625045776367188
    5. '	ans' → logprob: -18.750045776367188
    6. '(f' → logprob: -19.250045776367188
    7. '(
' → logprob: -19.625045776367188
    8. '(answer' → logprob: -19.625045776367188
    9. ' ans' → logprob: -20.000045776367188
    10. '()' → logprob: -20.125045776367188

Token 439: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -17.0
    3. ' )' → logprob: -17.625
    4. '()' → logprob: -18.625
    5. '())' → logprob: -18.625
    6. '))' → logprob: -18.875
    7. ')`' → logprob: -19.125
    8. ')}' → logprob: -20.875
    9. '')' → logprob: -21.0
    10. '`)' → logprob: -21.125

Token 440: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3425219549390022e-05
    2. 'if' → logprob: -11.25001335144043
    3. ' def' → logprob: -14.75001335144043
    4. '```' → logprob: -18.75001335144043
    5. 'for' → logprob: -19.87501335144043
    6. '#' → logprob: -20.25001335144043
    7. ' if' → logprob: -20.62501335144043
    8. '
' → logprob: -21.37501335144043
    9. 'N' → logprob: -21.87501335144043
    10. 'ndef' → logprob: -22.00001335144043

Token 441: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3160076439380646
    2. 'def' → logprob: -1.3160076141357422
    3. ' main' → logprob: -5.941007614135742
    4. ' def' → logprob: -9.191007614135742
    5. '
' → logprob: -11.691007614135742
    6. '_main' → logprob: -14.191007614135742
    7. 'process' → logprob: -14.566007614135742
    8. 'run' → logprob: -14.816007614135742
    9. 'solve' → logprob: -14.941007614135742
    10. '__' → logprob: -15.691007614135742

Token 442: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.097437315271236e-05
    2. '():
' → logprob: -10.12505054473877
    3. ' ():' → logprob: -11.50005054473877
    4. '():
' → logprob: -15.12505054473877
    5. '()' → logprob: -15.25005054473877
    6. '(' → logprob: -16.625051498413086
    7. '_' → logprob: -16.750051498413086
    8. '()>' → logprob: -18.000051498413086
    9. '():

' → logprob: -18.250051498413086
    10. 'def' → logprob: -18.500051498413086

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020824549719691277
    2. 'N' → logprob: -6.752082347869873
    3. ' N' → logprob: -7.002082347869873
    4. '	N' → logprob: -14.377082824707031
    5. 'n' → logprob: -14.627082824707031
    6. ' ' → logprob: -15.002082824707031
    7. '   ' → logprob: -15.627082824707031
    8. '(N' → logprob: -16.25208282470703
    9. 'def' → logprob: -16.62708282470703
    10. '  ' → logprob: -16.75208282470703

Token 444: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0004473540757317096
    2. ' N' → logprob: -7.7504472732543945
    3. '   ' → logprob: -11.000447273254395
    4. '	N' → logprob: -17.50044822692871
    5. ' ' → logprob: -18.50044822692871
    6. '  ' → logprob: -19.87544822692871
    7. '#' → logprob: -20.75044822692871
    8. '(N' → logprob: -21.12544822692871
    9. 'n' → logprob: -21.62544822692871
    10. '_N' → logprob: -22.00044822692871

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006347587914206088
    2. ',K' → logprob: -7.375634670257568
    3. ' ,' → logprob: -11.875635147094727
    4. '_,' → logprob: -14.875635147094727
    5. '   ' → logprob: -15.000635147094727
    6. ',
' → logprob: -15.750635147094727
    7. '‌,' → logprob: -15.875635147094727
    8. 'K' → logprob: -16.250635147094727
    9. ' K' → logprob: -16.750635147094727
    10. '_K' → logprob: -16.875635147094727

Token 446: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3868741989135742
    2. 'K' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.386874198913574
    4. '<|end|>' → logprob: -13.886874198913574
    5. '   ' → logprob: -14.886874198913574
    6. ' ' → logprob: -16.26187515258789
    7. '  ' → logprob: -16.63687515258789
    8. ',K' → logprob: -17.01187515258789
    9. '	K' → logprob: -17.26187515258789
    10. ' 
' → logprob: -17.26187515258789

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01821666955947876
    2. '=' → logprob: -4.018216609954834
    3. '   ' → logprob: -9.643217086791992
    4. ' ' → logprob: -14.143217086791992
    5. ',' → logprob: -14.393217086791992
    6. '=N' → logprob: -14.768217086791992
    7. ' =
' → logprob: -16.518217086791992
    8. '    ' → logprob: -16.518217086791992
    9. '  ' → logprob: -16.893217086791992
    10. '	' → logprob: -17.518217086791992

Token 448: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2014133334159851
    2. ' read' → logprob: -1.7014133930206299
    3. '	read' → logprob: -21.451414108276367
    4. 're' → logprob: -25.826414108276367
    5. '   ' → logprob: -25.951414108276367
    6. '  ' → logprob: -26.451414108276367
    7. '(read' → logprob: -26.451414108276367
    8. '.read' → logprob: -27.076414108276367
    9. ' ' → logprob: -27.076414108276367
    10. '_read' → logprob: -27.451414108276367

Token 449: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.750015258789062
    3. '_inputs' → logprob: -12.875015258789062
    4. '()' → logprob: -13.125015258789062
    5. ' _' → logprob: -13.625015258789062
    6. '_output' → logprob: -15.125015258789062
    7. ')_' → logprob: -15.125015258789062
    8. '_in' → logprob: -15.125015258789062
    9. '_Input' → logprob: -15.375015258789062
    10. '_line' → logprob: -15.875015258789062

Token 450: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020421291701495647
    2. '   ' → logprob: -6.377042293548584
    3. '    
' → logprob: -8.252041816711426
    4. '
' → logprob: -10.877041816711426
    5. '  
' → logprob: -10.877041816711426
    6. '<|end|>' → logprob: -11.502041816711426
    7. '```' → logprob: -11.752041816711426
    8. '()
' → logprob: -12.127041816711426
    9. '	
' → logprob: -12.252041816711426
    10. ' 
' → logprob: -12.252041816711426

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01662074401974678
    2. 'H' → logprob: -4.266620635986328
    3. ' H' → logprob: -6.016620635986328
    4. '```' → logprob: -12.266620635986328
    5. '	H' → logprob: -12.766620635986328
    6. '
' → logprob: -13.141620635986328
    7. ' if' → logprob: -13.391620635986328
    8. '    
' → logprob: -13.766620635986328
    9. 'if' → logprob: -14.016620635986328
    10. ' ' → logprob: -14.141620635986328

Token 452: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.04866526275873184
    2. 'if' → logprob: -3.0486652851104736
    3. '   ' → logprob: -10.423665046691895
    4. ' if' → logprob: -10.673665046691895
    5. ' H' → logprob: -11.048665046691895
    6. '```' → logprob: -11.923665046691895
    7. 'If' → logprob: -14.548665046691895
    8. ' ' → logprob: -15.048665046691895
    9. 'he' → logprob: -15.048665046691895
    10. '#' → logprob: -15.298665046691895

Token 453: '_input' (ID: 12507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270073801279068
    2. '=' → logprob: -2.127007484436035
    3. '   ' → logprob: -9.502007484436035
    4. ' ' → logprob: -12.627007484436035
    5. '  ' → logprob: -14.627007484436035
    6. ',' → logprob: -15.752007484436035
    7. '_' → logprob: -16.00200653076172
    8. '    ' → logprob: -16.25200653076172
    9. ' ' → logprob: -16.62700653076172
    10. 'def' → logprob: -17.37700653076172

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251970499753952
    2. ' =' → logprob: -1.5019705295562744
    3. '   ' → logprob: -10.126970291137695
    4. 's' → logprob: -14.501970291137695
    5. ' ' → logprob: -15.501970291137695
    6. '    ' → logprob: -16.001970291137695
    7. '  ' → logprob: -16.001970291137695
    8. '_' → logprob: -16.001970291137695
    9. '=
' → logprob: -16.501970291137695
    10. ',' → logprob: -16.501970291137695

Token 455: ' read' (ID: 1729)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005272772628813982
    2. ' input' → logprob: -5.50527286529541
    3. 'read' → logprob: -7.00527286529541
    4. 'list' → logprob: -8.25527286529541
    5. '[input' → logprob: -11.00527286529541
    6. ' read' → logprob: -12.25527286529541
    7. '[' → logprob: -12.50527286529541
    8. ' list' → logprob: -13.88027286529541
    9. ' [' → logprob: -14.63027286529541
    10. '(input' → logprob: -17.380271911621094

Token 456: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -0.012294069863855839
    2. '_input' → logprob: -4.637294292449951
    3. '()' → logprob: -6.137294292449951
    4. '_' → logprob: -8.262293815612793
    5. '_height' → logprob: -10.012293815612793
    6. '()
' → logprob: -11.137293815612793
    7. 'he' → logprob: -11.137293815612793
    8. 'input' → logprob: -11.512293815612793
    9. '_inputs' → logprob: -12.012293815612793
    10. '().' → logprob: -12.137293815612793

Token 457: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -3.03521392197581e-05
    2. 'ight' → logprob: -10.625030517578125
    3. 'ght' → logprob: -12.500030517578125
    4. 'igh' → logprob: -14.250030517578125
    5. 'ig' → logprob: -14.375030517578125
    6. 'IGHTS' → logprob: -15.375030517578125
    7. 'ught' → logprob: -16.250030517578125
    8. '   ' → logprob: -16.250030517578125
    9. '
' → logprob: -16.375030517578125
    10. '[' → logprob: -16.375030517578125

Token 458: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011565317399799824
    2. 'H' → logprob: -7.126156330108643
    3. '
' → logprob: -8.3761568069458
    4. '    
' → logprob: -9.7511568069458
    5. ' H' → logprob: -10.1261568069458
    6. '  ' → logprob: -11.3761568069458
    7. '(H' → logprob: -13.1261568069458
    8. '  
' → logprob: -13.1261568069458
    9. ' ' → logprob: -13.3761568069458
    10. '	H' → logprob: -13.3761568069458

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012236841022968292
    2. 'H' → logprob: -4.512237071990967
    3. ' H' → logprob: -6.762237071990967
    4. '  ' → logprob: -11.262236595153809
    5. ' ' → logprob: -11.762236595153809
    6. '	H' → logprob: -12.637236595153809
    7. '
' → logprob: -12.887236595153809
    8. '    
' → logprob: -12.887236595153809
    9. '```' → logprob: -13.762236595153809
    10. '    ' → logprob: -14.387236595153809

Token 460: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.3159431517124176
    2. ' H' → logprob: -1.3159431219100952
    3. '   ' → logprob: -5.940943241119385
    4. ' ' → logprob: -10.190942764282227
    5. '  ' → logprob: -13.065942764282227
    6. '
' → logprob: -13.065942764282227
    7. '	H' → logprob: -14.065942764282227
    8. '    ' → logprob: -14.190942764282227
    9. '```' → logprob: -14.190942764282227
    10. 'pre' → logprob: -14.315942764282227

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693464457988739
    2. ' =' → logprob: -0.693464457988739
    3. '_' → logprob: -8.818464279174805
    4. '_processed' → logprob: -8.818464279174805
    5. '_pre' → logprob: -11.193464279174805
    6. ' ' → logprob: -12.693464279174805
    7. '_p' → logprob: -13.693464279174805
    8. '   ' → logprob: -14.193464279174805
    9. '=_' → logprob: -14.318464279174805
    10. '_=' → logprob: -14.693464279174805

Token 462: ' preprocess' (ID: 122926)
  Prédit: ' preprocess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preprocess' → logprob: -0.5759738683700562
    2. 'pre' → logprob: -0.8259738683700562
    3. ' pre' → logprob: -10.825973510742188
    4. '(pre' → logprob: -12.450973510742188
    5. '   ' → logprob: -13.200973510742188
    6. 'prepend' → logprob: -13.200973510742188
    7. ' preprocessing' → logprob: -13.200973510742188
    8. 'process' → logprob: -13.450973510742188
    9. '	pre' → logprob: -13.825973510742188
    10. ' ' → logprob: -14.325973510742188

Token 463: '_he' (ID: 94257)
  Prédit: '_he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_he' → logprob: -9.610702363715973e-06
    2. 'he' → logprob: -11.625009536743164
    3. '_' → logprob: -15.000009536743164
    4. 'He' → logprob: -15.375009536743164
    5. '_h' → logprob: -18.750009536743164
    6. '_height' → logprob: -18.875009536743164
    7. '```' → logprob: -19.875009536743164
    8. '(H' → logprob: -20.000009536743164
    9. 's' → logprob: -20.000009536743164
    10. 'H' → logprob: -20.500009536743164

Token 464: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -1.580929347255733e-05
    2. 'ight' → logprob: -11.250016212463379
    3. 'ig' → logprob: -14.000016212463379
    4. 'IGHTS' → logprob: -14.125016212463379
    5. 'igh' → logprob: -14.750016212463379
    6. 'e' → logprob: -16.000015258789062
    7. 'ght' → logprob: -16.250015258789062
    8. 'i' → logprob: -16.250015258789062
    9. 'igts' → logprob: -16.250015258789062
    10. '   ' → logprob: -16.375015258789062

Token 465: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: 0.0
    2. 'H' → logprob: -18.5
    3. ' (' → logprob: -21.125
    4. '(' → logprob: -21.125
    5. '(
' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. '
' → logprob: -22.875
    8. 'def' → logprob: -23.5
    9. '```' → logprob: -23.75
    10. '	H' → logprob: -24.375

Token 466: '_input' (ID: 12507)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014501839876175
    2. ')
' → logprob: -1.701450228691101
    3. ')
' → logprob: -11.07645034790039
    4. ')

' → logprob: -11.45145034790039
    5. '   ' → logprob: -11.70145034790039
    6. ')`
' → logprob: -13.82645034790039
    7. '[' → logprob: -15.07645034790039
    8. '(H' → logprob: -15.20145034790039
    9. ')`' → logprob: -15.20145034790039
    10. 'def' → logprob: -16.20145034790039

Token 467: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20810697972774506
    2. '   ' → logprob: -1.9581069946289062
    3. ')
' → logprob: -3.0831069946289062
    4. '
' → logprob: -7.083106994628906
    5. '    
' → logprob: -9.458106994628906
    6. '```' → logprob: -12.333106994628906
    7. '()' → logprob: -12.833106994628906
    8. ')
' → logprob: -13.083106994628906
    9. '<|end|>' → logprob: -13.208106994628906
    10. ' )' → logprob: -13.583106994628906

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2014811635017395
    2. 'if' → logprob: -1.7014811038970947
    3. ' if' → logprob: -9.701480865478516
    4. '```' → logprob: -11.951480865478516
    5. '    
' → logprob: -15.826480865478516
    6. 'If' → logprob: -17.076480865478516
    7. '	if' → logprob: -17.326480865478516
    8. 'ans' → logprob: -18.201480865478516
    9. '       ' → logprob: -18.576480865478516
    10. '   ' → logprob: -18.576480865478516

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -15.75
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. 'ans' → logprob: -22.5
    6. 'import' → logprob: -22.625
    7. '#' → logprob: -22.875
    8. 'If' → logprob: -23.0
    9. '
' → logprob: -23.125
    10. '	if' → logprob: -23.875

Token 470: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47632402181625366
    2. 'is' → logprob: -0.9763240218162537
    3. 'K' → logprob: -6.726324081420898
    4. ' K' → logprob: -6.976324081420898
    5. 'N' → logprob: -9.351324081420898
    6. ' N' → logprob: -10.851324081420898
    7. '   ' → logprob: -12.601324081420898
    8. '(is' → logprob: -14.726324081420898
    9. 'k' → logprob: -14.976324081420898
    10. ' ' → logprob: -15.351324081420898

Token 471: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00015860427811276168
    2. '_k' → logprob: -8.750158309936523
    3. 'n' → logprob: -16.500158309936523
    4. 'k' → logprob: -17.750158309936523
    5. '(n' → logprob: -20.125158309936523
    6. '_' → logprob: -20.625158309936523
    7. '_q' → logprob: -21.250158309936523
    8. '=' → logprob: -21.250158309936523
    9. '_N' → logprob: -21.250158309936523
    10. '_x' → logprob: -21.500158309936523

Token 472: '_equals' (ID: 165870)
  Prédit: '_equals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equals' → logprob: -1.9981420336989686e-05
    2. '_EQUALS' → logprob: -11.125020027160645
    3. '_eq' → logprob: -13.625020027160645
    4. '_Equals' → logprob: -13.750020027160645
    5. '_e' → logprob: -14.000020027160645
    6. '_equal' → logprob: -14.625020027160645
    7. 'equals' → logprob: -14.875020027160645
    8. '_n' → logprob: -14.875020027160645
    9. ' _' → logprob: -15.375020027160645
    10. '_' → logprob: -15.375020027160645

Token 473: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00010521204239921644
    2. 'k' → logprob: -10.375104904174805
    3. '(K' → logprob: -10.375104904174805
    4. 'K' → logprob: -10.625104904174805
    5. '_K' → logprob: -11.000104904174805
    6. '(N' → logprob: -13.625104904174805
    7. '_n' → logprob: -16.000104904174805
    8. ' K' → logprob: -16.125104904174805
    9. '_' → logprob: -16.625104904174805
    10. '```' → logprob: -16.750104904174805

Token 474: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -14.625001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '```' → logprob: -19.000001907348633
    6. ',' → logprob: -19.375001907348633
    7. '((' → logprob: -19.625001907348633
    8. ' ' → logprob: -19.625001907348633
    9. '(
' → logprob: -19.875001907348633
    10. '<N' → logprob: -20.125001907348633

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ',K' → logprob: -10.625031471252441
    3. ' ,' → logprob: -12.000031471252441
    4. ',
' → logprob: -14.875031471252441
    5. ',N' → logprob: -16.250030517578125
    6. ',

' → logprob: -16.750030517578125
    7. '

' → logprob: -17.875030517578125
    8. '   ' → logprob: -18.125030517578125
    9. '‌,' → logprob: -19.125030517578125
    10. ',H' → logprob: -19.625030517578125

Token 476: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00014060820103622973
    2. ' K' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.250140190124512
    4. ' ' → logprob: -18.500141143798828
    5. '	K' → logprob: -18.625141143798828
    6. '  ' → logprob: -19.500141143798828
    7. ')' → logprob: -19.625141143798828
    8. '       ' → logprob: -19.875141143798828
    9. '    ' → logprob: -20.125141143798828
    10. ',K' → logprob: -20.125141143798828

Token 477: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10021626949310303
    2. '):' → logprob: -2.3502163887023926
    3. '   ' → logprob: -12.225215911865234
    4. '):
' → logprob: -13.725215911865234
    5. '():
' → logprob: -13.725215911865234
    6. ':' → logprob: -13.850215911865234
    7. ')' → logprob: -13.975215911865234
    8. ':
' → logprob: -15.725215911865234
    9. '):

' → logprob: -15.725215911865234
    10. ' ):
' → logprob: -15.725215911865234

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.829823102336377e-05
    2. '   ' → logprob: -9.37509822845459
    3. 'output' → logprob: -11.62509822845459
    4. '
' → logprob: -13.00009822845459
    5. 'ans' → logprob: -14.12509822845459
    6. '```' → logprob: -14.75009822845459
    7. ':
' → logprob: -15.00009822845459
    8. '{
' → logprob: -15.75009822845459
    9. 'print' → logprob: -15.75009822845459
    10. ' output' → logprob: -16.000099182128906

Token 479: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7240306735038757
    2. 'output' (adapté à ' output') → logprob: -0.7240306735038757
    3. '   ' → logprob: -3.5990307331085205
    4. 'print' → logprob: -6.099030494689941
    5. ' output' → logprob: -7.224030494689941
    6. '
' → logprob: -10.724030494689941
    7. '	output' → logprob: -10.849030494689941
    8. 'ans' → logprob: -11.474030494689941
    9. '           ' → logprob: -11.724030494689941
    10. '(output' → logprob: -12.099030494689941

Token 480: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. 'result' → logprob: -15.875
    3. '_results' → logprob: -16.625
    4. 's' → logprob: -17.75
    5. '(_' → logprob: -18.25
    6. '_' → logprob: -18.5
    7. '_RESULT' → logprob: -18.875
    8. 'Result' → logprob: -19.375
    9. '_res' → logprob: -19.875
    10. '   ' → logprob: -19.875

Token 481: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014175502583384514
    2. '0' → logprob: -4.2641754150390625
    3. ' (' → logprob: -11.889175415039062
    4. '('' → logprob: -13.764175415039062
    5. '("' → logprob: -13.889175415039062
    6. '   ' → logprob: -13.889175415039062
    7. '(
' → logprob: -14.264175415039062
    8. '`' → logprob: -15.139175415039062
    9. ' ' → logprob: -15.264175415039062
    10. '```' → logprob: -15.514175415039062

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '(' → logprob: -16.000001907348633
    5. '"' → logprob: -16.875001907348633
    6. '`' → logprob: -17.625001907348633
    7. '1' → logprob: -17.750001907348633
    8. '
' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. 'H' → logprob: -18.250001907348633

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8284381031990051
    2. ')
' → logprob: -0.8284381031990051
    3. '       ' → logprob: -2.0784380435943604
    4. '   ' → logprob: -6.5784382820129395
    5. ')
' → logprob: -11.703437805175781
    6. ')return' → logprob: -12.203437805175781
    7. '())
' → logprob: -12.953437805175781
    8. ' )
' → logprob: -13.703437805175781
    9. '())' → logprob: -13.828437805175781
    10. ' )' → logprob: -13.828437805175781

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742620289325714
    2. '   ' → logprob: -0.974261999130249
    3. 'elif' → logprob: -8.599262237548828
    4. ' elif' → logprob: -15.349262237548828
    5. '```' → logprob: -15.599262237548828
    6. '
' → logprob: -16.099262237548828
    7. 'return' → logprob: -16.099262237548828
    8. ' ' → logprob: -16.224262237548828
    9. '  ' → logprob: -16.599262237548828
    10. '    
' → logprob: -17.224262237548828

Token 485: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001470226445235312
    2. 'return' (adapté à ' return') → logprob: -7.00147008895874
    3. '   ' → logprob: -7.50147008895874
    4. 'elif' → logprob: -12.626470565795898
    5. '
' → logprob: -13.251470565795898
    6. ' return' → logprob: -13.876470565795898
    7. ' ' → logprob: -15.751470565795898
    8. '```' → logprob: -16.7514705657959
    9. '     ' → logprob: -17.2514705657959
    10. '  ' → logprob: -17.3764705657959

Token 486: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007774386554956436
    2. 'if' → logprob: -5.257774353027344
    3. '
' → logprob: -6.507774353027344
    4. '    
' → logprob: -6.882774353027344
    5. 'elif' → logprob: -11.507774353027344
    6. ' if' → logprob: -11.882774353027344
    7. '```' → logprob: -13.632774353027344
    8. '        
' → logprob: -13.632774353027344
    9. '  
' → logprob: -15.007774353027344
    10. '<|end|>' → logprob: -15.007774353027344

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020541429985314608
    2. 'if' → logprob: -6.627054214477539
    3. '
' → logprob: -7.627054214477539
    4. '    
' → logprob: -8.627054214477539
    5. '```' → logprob: -10.252054214477539
    6. 'elif' → logprob: -10.877054214477539
    7. ' if' → logprob: -11.877054214477539
    8. '        
' → logprob: -16.00205421447754
    9. '   ' → logprob: -16.75205421447754
    10. '  
' → logprob: -16.87705421447754

Token 488: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03824390843510628
    2. '   ' → logprob: -3.2882440090179443
    3. 'elif' (adapté à ' elif') → logprob: -9.038244247436523
    4. ' if' → logprob: -9.538244247436523
    5. '
' → logprob: -12.038244247436523
    6. '    
' → logprob: -12.663244247436523
    7. '```' → logprob: -13.038244247436523
    8. '	if' → logprob: -16.288244247436523
    9. 'If' → logprob: -16.913244247436523
    10. '       ' → logprob: -17.413244247436523

Token 489: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006717743817716837
    2. 'is' → logprob: -5.006717681884766
    3. 'K' → logprob: -13.256717681884766
    4. ' K' → logprob: -14.756717681884766
    5. '(is' → logprob: -16.006717681884766
    6. 'k' → logprob: -16.381717681884766
    7. ' not' → logprob: -19.006717681884766
    8. 's' → logprob: -19.256717681884766
    9. ' (' → logprob: -20.256717681884766
    10. '_is' → logprob: -20.256717681884766

Token 490: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.981667537620524e-06
    2. 'k' → logprob: -13.250001907348633
    3. 'def' → logprob: -16.750001907348633
    4. '```' → logprob: -17.000001907348633
    5. '_n' → logprob: -17.125001907348633
    6. '
' → logprob: -17.625001907348633
    7. '_' → logprob: -17.625001907348633
    8. '(k' → logprob: -18.125001907348633
    9. '_K' → logprob: -18.625001907348633
    10. 'K' → logprob: -18.750001907348633

Token 491: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0005079957190901041
    2. '(N' → logprob: -8.375508308410645
    3. 'zero' → logprob: -8.875508308410645
    4. '==' → logprob: -10.250508308410645
    5. ' zero' → logprob: -10.375508308410645
    6. '_ZERO' → logprob: -10.875508308410645
    7. '```' → logprob: -11.250508308410645
    8. '(K' → logprob: -11.625508308410645
    9. 'Zero' → logprob: -11.875508308410645
    10. '(' → logprob: -12.500508308410645

Token 492: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -4.4849443838757e-06
    2. '(N' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.625004768371582
    4. '(' → logprob: -15.500004768371582
    5. ',' → logprob: -17.375003814697266
    6. '(k' → logprob: -18.125003814697266
    7. ')(' → logprob: -18.375003814697266
    8. '(
' → logprob: -18.500003814697266
    9. ')' → logprob: -18.500003814697266
    10. '((' → logprob: -18.625003814697266

Token 493: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011063028126955032
    2. '):
' → logprob: -4.511063098907471
    3. ':' → logprob: -11.761062622070312
    4. ')' → logprob: -12.386062622070312
    5. ' ):' → logprob: -13.261062622070312
    6. '():' → logprob: -13.761062622070312
    7. '):
' → logprob: -15.761062622070312
    8. '   ' → logprob: -15.886062622070312
    9. '):

' → logprob: -16.136062622070312
    10. ' ):
' → logprob: -17.386062622070312

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003445216570980847
    2. '   ' → logprob: -8.875344276428223
    3. 'output' → logprob: -9.250344276428223
    4. '
' → logprob: -9.750344276428223
    5. ':
' → logprob: -10.875344276428223
    6. ' output' → logprob: -11.500344276428223
    7. ':' → logprob: -12.000344276428223
    8. 'ans' → logprob: -12.000344276428223
    9. '):
' → logprob: -12.875344276428223
    10. ' ans' → logprob: -13.125344276428223

Token 495: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.05812406539916992
    2. 'output' → logprob: -3.05812406539917
    3. '       ' → logprob: -5.43312406539917
    4. ' ans' → logprob: -5.55812406539917
    5. '   ' → logprob: -7.30812406539917
    6. ' output' → logprob: -8.183124542236328
    7. 'answer' → logprob: -8.683124542236328
    8. '	ans' → logprob: -9.058124542236328
    9. 'result' → logprob: -11.558124542236328
    10. 'print' → logprob: -11.808124542236328

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031777136027812958
    2. '=' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.628177642822266
    4. ' ' → logprob: -17.878177642822266
    5. '＝' → logprob: -20.253177642822266
    6. ' ' → logprob: -20.628177642822266
    7. '    ' → logprob: -20.753177642822266
    8. '  ' → logprob: -21.503177642822266
    9. '	' → logprob: -21.878177642822266
    10. ' =)' → logprob: -22.003177642822266

Token 497: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0007099286303855479
    2. ' compute' → logprob: -7.2507100105285645
    3. 'calculate' → logprob: -19.125709533691406
    4. '   ' → logprob: -19.875709533691406
    5. ' ' → logprob: -20.375709533691406
    6. '.compute' → logprob: -21.500709533691406
    7. '
' → logprob: -21.625709533691406
    8. '0' → logprob: -21.750709533691406
    9. '_compute' → logprob: -22.125709533691406
    10. 'computer' → logprob: -22.500709533691406

Token 498: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -6.704273118884885e-07
    2. 'ans' → logprob: -14.750000953674316
    3. '(ans' → logprob: -15.625000953674316
    4. '_answer' → logprob: -17.375
    5. '_' → logprob: -18.75
    6. '_an' → logprob: -19.0
    7. ' ans' → logprob: -19.25
    8. '	ans' → logprob: -19.375
    9. 'Ans' → logprob: -19.5
    10. '_ann' → logprob: -20.625

Token 499: '_when' (ID: 96460)
  Prédit: '_when'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_when' → logprob: -2.176947600673884e-05
    2. 'when' → logprob: -10.750021934509277
    3. 'When' → logprob: -16.12502098083496
    4. '_When' → logprob: -16.37502098083496
    5. '```' → logprob: -18.50002098083496
    6. '_where' → logprob: -18.87502098083496
    7. '_wh' → logprob: -19.37502098083496
    8. 'WHEN' → logprob: -19.50002098083496
    9. '	when' → logprob: -20.37502098083496
    10. '"When' → logprob: -20.62502098083496

Token 500: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0002314303710591048
    2. 'k' → logprob: -8.375231742858887
    3. 'K' → logprob: -14.250231742858887
    4. '```' → logprob: -16.37523078918457
    5. '0' → logprob: -17.62523078918457
    6. '
' → logprob: -17.75023078918457
    7. '_K' → logprob: -18.12523078918457
    8. '	k' → logprob: -18.62523078918457
    9. ',k' → logprob: -18.75023078918457
    10. '_' → logprob: -19.00023078918457

Token 501: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.00043615259346552193
    2. 'zero' → logprob: -7.750436305999756
    3. '0' → logprob: -12.250435829162598
    4. ' zero' → logprob: -15.875435829162598
    5. '```' → logprob: -15.875435829162598
    6. 'Zero' → logprob: -16.000436782836914
    7. '_ZERO' → logprob: -16.375436782836914
    8. '_' → logprob: -16.375436782836914
    9. '
' → logprob: -16.500436782836914
    10. '-zero' → logprob: -18.500436782836914

Token 502: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: 0.0
    2. ' (' → logprob: -17.0
    3. '(' → logprob: -17.375
    4. '   ' → logprob: -19.125
    5. '(
' → logprob: -20.125
    6. '
' → logprob: -20.125
    7. 'N' → logprob: -21.0
    8. '```' → logprob: -21.125
    9. '((' → logprob: -21.625
    10. '(Note' → logprob: -22.125

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ',H' → logprob: -10.625025749206543
    3. ' ,' → logprob: -13.500025749206543
    4. ',
' → logprob: -15.625025749206543
    5. '   ' → logprob: -16.87502670288086
    6. ',K' → logprob: -17.75002670288086
    7. ',N' → logprob: -19.50002670288086
    8. '
' → logprob: -19.50002670288086
    9. '```' → logprob: -19.50002670288086
    10. '       ' → logprob: -19.62502670288086

Token 504: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.639096970204264e-05
    2. ' H' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.750096321105957
    4. ')' → logprob: -18.500097274780273
    5. '0' → logprob: -18.875097274780273
    6. ' ' → logprob: -19.000097274780273
    7. '	H' → logprob: -19.375097274780273
    8. '(H' → logprob: -19.625097274780273
    9. ',H' → logprob: -20.125097274780273
    10. '
' → logprob: -20.375097274780273

Token 505: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08194621652364731
    2. ')' → logprob: -2.5819461345672607
    3. '   ' → logprob: -5.83194637298584
    4. '       ' → logprob: -9.20694637298584
    5. ')
' → logprob: -10.95694637298584
    6. ' )
' → logprob: -14.08194637298584
    7. ')`
' → logprob: -15.45694637298584
    8. ')

' → logprob: -15.83194637298584
    9. '())
' → logprob: -15.83194637298584
    10. ' )' → logprob: -16.456945419311523

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018182599917054176
    2. '   ' → logprob: -4.018182754516602
    3. 'output' → logprob: -10.393182754516602
    4. ' output' → logprob: -13.768182754516602
    5. '	output' → logprob: -14.518182754516602
    6. '```' → logprob: -16.0181827545166
    7. '     ' → logprob: -16.5181827545166
    8. '           ' → logprob: -16.5181827545166
    9. '
' → logprob: -16.7681827545166
    10. 'else' → logprob: -17.0181827545166

Token 507: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.006483369041234255
    2. '       ' → logprob: -5.256483554840088
    3. ' output' → logprob: -7.381483554840088
    4. '   ' → logprob: -7.381483554840088
    5. '	output' → logprob: -12.75648307800293
    6. '  ' → logprob: -15.88148307800293
    7. '(output' → logprob: -16.63148307800293
    8. '           ' → logprob: -16.75648307800293
    9. ' ' → logprob: -16.88148307800293
    10. '     ' → logprob: -17.50648307800293

Token 508: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.125
    3. 'Result' → logprob: -18.0
    4. '(result' → logprob: -19.75
    5. '(_' → logprob: -20.0
    6. 's' → logprob: -20.125
    7. '_results' → logprob: -20.875
    8. '_res' → logprob: -21.0
    9. '_' → logprob: -21.375
    10. '_RESULT' → logprob: -21.375

Token 509: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(answer' → logprob: -18.0
    4. '(
' → logprob: -19.5
    5. '(an' → logprob: -19.625
    6. ' (' → logprob: -21.375
    7. '(err' → logprob: -22.0
    8. '(abs' → logprob: -22.5
    9. '	ans' → logprob: -22.625
    10. '(ord' → logprob: -22.625

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.634880542755127
    2. '       ' → logprob: -0.884880542755127
    3. ')
' → logprob: -2.884880542755127
    4. '   ' → logprob: -6.759880542755127
    5. ')return' → logprob: -8.759880065917969
    6. '
' → logprob: -11.384880065917969
    7. '<|end|>' → logprob: -11.384880065917969
    8. '())' → logprob: -11.759880065917969
    9. ' )' → logprob: -11.884880065917969
    10. '()' → logprob: -12.134880065917969

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00862426683306694
    2. '   ' → logprob: -4.758624076843262
    3. '<|end|>' → logprob: -11.883624076843262
    4. '	' → logprob: -14.008624076843262
    5. '```' → logprob: -14.633624076843262
    6. 'else' → logprob: -15.508624076843262
    7. '     ' → logprob: -16.008625030517578
    8. ',' → logprob: -16.008625030517578
    9. '           ' → logprob: -16.133625030517578
    10. '	   ' → logprob: -16.133625030517578

Token 512: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13223126530647278
    2. 'return' (adapté à ' return') → logprob: -2.1322312355041504
    3. '   ' → logprob: -5.63223123550415
    4. ' return' → logprob: -6.38223123550415
    5. '
' → logprob: -11.382231712341309
    6. ' ' → logprob: -13.507231712341309
    7. '	return' → logprob: -13.757231712341309
    8. '  ' → logprob: -14.382231712341309
    9. 'else' → logprob: -14.382231712341309
    10. '     ' → logprob: -14.507231712341309

Token 513: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0794849544763565
    2. 'dp' → logprob: -2.5794849395751953
    3. '
' → logprob: -8.329484939575195
    4. '    
' → logprob: -8.704484939575195
    5. ' dp' → logprob: -9.079484939575195
    6. '```' → logprob: -9.704484939575195
    7. '	dp' → logprob: -12.204484939575195
    8. 'else' → logprob: -12.329484939575195
    9. '_dp' → logprob: -14.204484939575195
    10. 'DP' → logprob: -14.329484939575195

Token 514: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2527431547641754
    2. '   ' → logprob: -1.502743124961853
    3. ' dp' → logprob: -7.127743244171143
    4. '	dp' → logprob: -11.752742767333984
    5. '```' → logprob: -13.127742767333984
    6. '_dp' → logprob: -14.627742767333984
    7. '(dp' → logprob: -15.502742767333984
    8. '    
' → logprob: -15.627742767333984
    9. '
' → logprob: -15.877742767333984
    10. 'DP' → logprob: -15.877742767333984

Token 515: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -3.619311974034645e-05
    2. ' dp' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.250036239624023
    4. '	dp' → logprob: -18.250036239624023
    5. '
' → logprob: -19.875036239624023
    6. '```' → logprob: -20.000036239624023
    7. '_dp' → logprob: -20.625036239624023
    8. '    
' → logprob: -21.125036239624023
    9. 'd' → logprob: -21.375036239624023
    10. '(dp' → logprob: -21.500036239624023

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.883615493774414
    4. '=create' → logprob: -16.883615493774414
    5. ',' → logprob: -18.008615493774414
    6. ' ' → logprob: -18.133615493774414
    7. '```' → logprob: -18.258615493774414
    8. '	' → logprob: -18.258615493774414
    9. '[' → logprob: -19.258615493774414
    10. '＝' → logprob: -19.383615493774414

Token 517: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.02975071594119072
    2. ' initialize' → logprob: -3.5297508239746094
    3. '	initialize' → logprob: -16.02975082397461
    4. '_initialize' → logprob: -16.65475082397461
    5. '.initialize' → logprob: -16.65475082397461
    6. 'Initialize' → logprob: -18.27975082397461
    7. '[' → logprob: -18.52975082397461
    8. 'itialize' → logprob: -19.77975082397461
    9. 'init' → logprob: -20.27975082397461
    10. 'initialized' → logprob: -20.65475082397461

Token 518: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.014684110297821e-06
    2. 'dp' → logprob: -12.000008583068848
    3. '(dp' → logprob: -12.875008583068848
    4. '```' → logprob: -16.375009536743164
    5. '_df' → logprob: -17.250009536743164
    6. '	dp' → logprob: -17.500009536743164
    7. '_dt' → logprob: -17.625009536743164
    8. ' dp' → logprob: -17.750009536743164
    9. '_dc' → logprob: -18.250009536743164
    10. '_' → logprob: -18.250009536743164

Token 519: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10509124398231506
    2. '(dp' → logprob: -2.3550913333892822
    3. '(' → logprob: -5.355091094970703
    4. 'dp' → logprob: -9.730091094970703
    5. '(len' → logprob: -10.480091094970703
    6. '(D' → logprob: -11.105091094970703
    7. '```' → logprob: -11.605091094970703
    8. '((' → logprob: -11.730091094970703
    9. ' (' → logprob: -11.730091094970703
    10. '(n' → logprob: -12.480091094970703

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.065608562901616e-05
    2. ',K' → logprob: -9.500081062316895
    3. ' ,' → logprob: -12.125081062316895
    4. ',
' → logprob: -15.625081062316895
    5. ',N' → logprob: -16.750080108642578
    6. '   ' → logprob: -17.000080108642578
    7. '‌,' → logprob: -18.625080108642578
    8. '=' → logprob: -18.750080108642578
    9. ')' → logprob: -18.875080108642578
    10. 'K' → logprob: -19.125080108642578

Token 521: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004306692280806601
    2. ' K' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.125431060791016
    4. '
' → logprob: -18.875431060791016
    5. ')' → logprob: -19.250431060791016
    6. ' ' → logprob: -20.000431060791016
    7. '       ' → logprob: -20.375431060791016
    8. ',K' → logprob: -20.375431060791016
    9. '```' → logprob: -21.000431060791016
    10. ',' → logprob: -21.125431060791016

Token 522: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12794733047485352
    2. ')
' → logprob: -2.1279473304748535
    3. ',' → logprob: -7.1279473304748535
    4. '   ' → logprob: -8.502946853637695
    5. ')
' → logprob: -11.752946853637695
    6. ',N' → logprob: -13.002946853637695
    7. ' ' → logprob: -14.127946853637695
    8. ' )' → logprob: -14.627946853637695
    9. ',)' → logprob: -14.877946853637695
    10. ',)
' → logprob: -14.877946853637695

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02923542633652687
    2. 'set' → logprob: -4.154235363006592
    3. ' set' → logprob: -4.529235363006592
    4. '	set' → logprob: -6.154235363006592
    5. '(set' → logprob: -10.02923583984375
    6. '```' → logprob: -10.02923583984375
    7. ')set' → logprob: -10.15423583984375
    8. '=set' → logprob: -10.90423583984375
    9. ',set' → logprob: -11.02923583984375
    10. '   ' → logprob: -11.40423583984375

Token 524: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.0006341627449728549
    2. ' set' → logprob: -7.75063419342041
    3. '   ' → logprob: -8.50063419342041
    4. '	set' → logprob: -16.250633239746094
    5. '```' → logprob: -16.875633239746094
    6. '  ' → logprob: -18.750633239746094
    7. ' ' → logprob: -18.750633239746094
    8. ')set' → logprob: -18.875633239746094
    9. '(set' → logprob: -19.000633239746094
    10. '#set' → logprob: -19.375633239746094

Token 525: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0019326817709952593
    2. 'dp' → logprob: -6.251932621002197
    3. '(dp' → logprob: -12.501933097839355
    4. '	dp' → logprob: -15.751933097839355
    5. ' dp' → logprob: -16.12693214416504
    6. '_df' → logprob: -17.12693214416504
    7. '_dt' → logprob: -17.62693214416504
    8. '_dx' → logprob: -17.87693214416504
    9. 'DP' → logprob: -18.75193214416504
    10. '_dc' → logprob: -18.87693214416504

Token 526: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.703443770878948e-06
    2. 'x' → logprob: -12.000007629394531
    3. 'dp' → logprob: -13.750007629394531
    4. '_dp' → logprob: -15.000007629394531
    5. '(dp' → logprob: -15.875007629394531
    6. '_' → logprob: -18.87500762939453
    7. '_dx' → logprob: -20.12500762939453
    8. '```' → logprob: -20.12500762939453
    9. '(x' → logprob: -20.37500762939453
    10. '[x' → logprob: -20.50000762939453

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014454191841650754
    2. '(dp' → logprob: -8.875144958496094
    3. '[' → logprob: -12.750144958496094
    4. 'dp' → logprob: -14.125144958496094
    5. 'x' → logprob: -14.500144958496094
    6. '```' → logprob: -15.250144958496094
    7. '
' → logprob: -16.625144958496094
    8. ' ' → logprob: -17.125144958496094
    9. '_' → logprob: -17.500144958496094
    10. '_x' → logprob: -18.125144958496094

Token 528: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: 0.0
    2. ' (' → logprob: -17.375
    3. '(' → logprob: -17.5
    4. '(dt' → logprob: -18.0
    5. '(dx' → logprob: -19.625
    6. 'dp' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '(dm' → logprob: -20.625
    9. '(df' → logprob: -20.875
    10. '(
' → logprob: -21.125

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -13.750000953674316
    3. ',
' → logprob: -18.375001907348633
    4. ',d' → logprob: -18.750001907348633
    5. '‌,' → logprob: -19.375001907348633
    6. '(dp' → logprob: -19.500001907348633
    7. ')' → logprob: -19.875001907348633
    8. ',N' → logprob: -20.125001907348633
    9. ',n' → logprob: -20.625001907348633
    10. '```' → logprob: -20.625001907348633

Token 530: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001234428636962548
    2. ' N' → logprob: -9.000123023986816
    3. ',N' → logprob: -18.500123977661133
    4. '	N' → logprob: -18.500123977661133
    5. '   ' → logprob: -18.625123977661133
    6. '<N' → logprob: -19.875123977661133
    7. '```' → logprob: -20.625123977661133
    8. 'n' → logprob: -20.875123977661133
    9. '[N' → logprob: -21.000123977661133
    10. '>N' → logprob: -21.250123977661133

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.619311974034645e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',K' → logprob: -14.500036239624023
    4. ',H' → logprob: -15.500036239624023
    5. '   ' → logprob: -17.250036239624023
    6. ',
' → logprob: -18.625036239624023
    7. '‌,' → logprob: -18.750036239624023
    8. ',N' → logprob: -19.500036239624023
    9. ')' → logprob: -19.500036239624023
    10. '[' → logprob: -20.750036239624023

Token 532: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.688212614681106e-05
    2. ' H' → logprob: -11.000017166137695
    3. 'K' → logprob: -16.375017166137695
    4. '   ' → logprob: -17.750017166137695
    5. '	H' → logprob: -18.875017166137695
    6. ')' → logprob: -19.500017166137695
    7. ' ' → logprob: -19.500017166137695
    8. '```' → logprob: -20.500017166137695
    9. 'N' → logprob: -20.750017166137695
    10. '1' → logprob: -20.875017166137695

Token 533: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011356930481269956
    2. '
' → logprob: -7.00113582611084
    3. ')' → logprob: -8.75113582611084
    4. '    
' → logprob: -10.50113582611084
    5. ')
' → logprob: -11.62613582611084
    6. ' update' → logprob: -11.87613582611084
    7. ',' → logprob: -12.00113582611084
    8. 'update' → logprob: -12.37613582611084
    9. '(update' → logprob: -12.62613582611084
    10. '	update' → logprob: -12.87613582611084

Token 534: '   ' (ID: 271)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.10103466361761093
    2. '   ' → logprob: -2.351034641265869
    3. ' update' → logprob: -7.101034641265869
    4. '```' → logprob: -13.226035118103027
    5. '	update' → logprob: -13.601035118103027
    6. '  ' → logprob: -16.22603416442871
    7. ' ' → logprob: -16.35103416442871
    8. '(update' → logprob: -16.35103416442871
    9. '.update' → logprob: -16.60103416442871
    10. '
' → logprob: -17.72603416442871

Token 535: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -2.939851037808694e-05
    2. ' update' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.250029563903809
    4. '	update' → logprob: -18.500028610229492
    5. '```' → logprob: -18.750028610229492
    6. '.update' → logprob: -19.125028610229492
    7. '
' → logprob: -21.250028610229492
    8. '(update' → logprob: -21.375028610229492
    9. 'for' → logprob: -21.500028610229492
    10. '更新' → logprob: -22.125028610229492

Token 536: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.512236498361744e-07
    2. 'dp' → logprob: -14.875000953674316
    3. '_dc' → logprob: -16.5
    4. '_dt' → logprob: -17.5
    5. '_db' → logprob: -17.875
    6. '_df' → logprob: -18.0
    7. '(dp' → logprob: -18.625
    8. '_pd' → logprob: -19.125
    9. '_dl' → logprob: -19.25
    10. '_lp' → logprob: -19.375

Token 537: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: 0.0
    2. ' (' → logprob: -18.75
    3. '(' → logprob: -19.0
    4. '(dt' → logprob: -19.5
    5. '	dp' → logprob: -19.625
    6. 'dp' → logprob: -20.0
    7. '(
' → logprob: -20.625
    8. ' dp' → logprob: -20.875
    9. '(dep' → logprob: -21.125
    10. '(df' → logprob: -21.25

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002456046058796346
    2. ' ,' → logprob: -8.375246047973633
    3. '(dp' → logprob: -11.250246047973633
    4. ',N' → logprob: -13.500246047973633
    5. ')' → logprob: -15.375246047973633
    6. '   ' → logprob: -16.125246047973633
    7. 'dp' → logprob: -16.125246047973633
    8. ',
' → logprob: -16.500246047973633
    9. '(N' → logprob: -16.625246047973633
    10. '(' → logprob: -17.500246047973633

Token 539: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7610454708337784e-05
    2. ' N' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. '	N' → logprob: -19.62502670288086
    5. ' ' → logprob: -20.50002670288086
    6. '
' → logprob: -21.75002670288086
    7. 'n' → logprob: -21.87502670288086
    8. '<N' → logprob: -22.00002670288086
    9. '[N' → logprob: -22.12502670288086
    10. '```' → logprob: -22.12502670288086

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011927293380722404
    2. ',K' → logprob: -6.876192569732666
    3. ' ,' → logprob: -8.751193046569824
    4. '   ' → logprob: -13.751193046569824
    5. ',k' → logprob: -15.376193046569824
    6. ',
' → logprob: -15.501193046569824
    7. 'K' → logprob: -15.626193046569824
    8. ' K' → logprob: -17.251192092895508
    9. '```' → logprob: -17.626192092895508
    10. '‌,' → logprob: -18.626192092895508

Token 541: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.842555426876061e-06
    2. ' K' → logprob: -12.250004768371582
    3. '
' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.3750057220459
    5. '	K' → logprob: -19.5000057220459
    6. ' ' → logprob: -19.6250057220459
    7. ')' → logprob: -19.8750057220459
    8. '>K' → logprob: -20.6250057220459
    9. '       ' → logprob: -20.7500057220459
    10. 'k' → logprob: -20.8750057220459

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0236648079007864
    2. ')' → logprob: -3.773664712905884
    3. '   ' → logprob: -8.398664474487305
    4. ')
' → logprob: -8.773664474487305
    5. ' ,' → logprob: -10.273664474487305
    6. ',H' → logprob: -12.773664474487305
    7. ')
' → logprob: -14.273664474487305
    8. '```' → logprob: -15.398664474487305
    9. ',
' → logprob: -15.523664474487305
    10. ' ' → logprob: -15.648664474487305

Token 543: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00020354038861114532
    2. ' H' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.37520408630371
    4. ')' → logprob: -19.00020408630371
    5. '	H' → logprob: -19.50020408630371
    6. '_H' → logprob: -21.25020408630371
    7. '<H' → logprob: -21.37520408630371
    8. ' ' → logprob: -21.62520408630371
    9. ',H' → logprob: -21.75020408630371
    10. ' ' → logprob: -22.25020408630371

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6889498233795166
    2. '   ' → logprob: -0.8139498233795166
    3. ')
' → logprob: -2.9389498233795166
    4. '
' → logprob: -6.3139495849609375
    5. ')
' → logprob: -11.313949584960938
    6. 'output' → logprob: -11.438949584960938
    7. '<|end|>' → logprob: -12.063949584960938
    8. ',' → logprob: -12.188949584960938
    9. '```' → logprob: -12.438949584960938
    10. ' )' → logprob: -12.438949584960938

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006535819848068058
    2. 'ans' → logprob: -7.3756537437438965
    3. '```' → logprob: -11.875653266906738
    4. ' ans' → logprob: -12.000653266906738
    5. '	ans' → logprob: -12.250653266906738
    6. 'min' → logprob: -12.750653266906738
    7. '
' → logprob: -12.875653266906738
    8. '    
' → logprob: -13.000653266906738
    9. '(ans' → logprob: -15.000653266906738
    10. 'answer' → logprob: -15.000653266906738

Token 546: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00035357745946384966
    2. '   ' → logprob: -8.000353813171387
    3. ' ans' → logprob: -11.625353813171387
    4. 'answer' → logprob: -12.125353813171387
    5. 'result' → logprob: -12.750353813171387
    6. 'min' → logprob: -14.875353813171387
    7. 'print' → logprob: -15.500353813171387
    8. '	ans' → logprob: -15.625353813171387
    9. 'output' → logprob: -16.87535285949707
    10. 'res' → logprob: -17.00035285949707

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067154900170862675
    2. '=' → logprob: -5.006715297698975
    3. ' =
' → logprob: -17.506715774536133
    4. ',' → logprob: -17.631715774536133
    5. ' ' → logprob: -17.631715774536133
    6. '_' → logprob: -17.756715774536133
    7. ' ' → logprob: -18.631715774536133
    8. ')' → logprob: -19.256715774536133
    9. '=find' → logprob: -19.381715774536133
    10. '＝' → logprob: -19.506715774536133

Token 548: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.008615161292254925
    2. ' find' → logprob: -4.758615016937256
    3. '
' → logprob: -14.758615493774414
    4. '(find' → logprob: -16.133615493774414
    5. '	find' → logprob: -17.008615493774414
    6. '=find' → logprob: -17.508615493774414
    7. '   ' → logprob: -18.133615493774414
    8. 'min' → logprob: -18.883615493774414
    9. '
' → logprob: -18.883615493774414
    10. '0' → logprob: -19.508615493774414

Token 549: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. '_ans' → logprob: -17.25
    3. '_max' → logprob: -17.5
    4. '_m' → logprob: -19.125
    5. 'min' → logprob: -19.25
    6. '_' → logprob: -19.625
    7. '_dp' → logprob: -20.375
    8. '```' → logprob: -21.875
    9. '_MIN' → logprob: -22.125
    10. '_mult' → logprob: -22.375

Token 550: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: 0.0
    2. '(ans' → logprob: -16.875
    3. '_answer' → logprob: -18.25
    4. 'ans' → logprob: -18.25
    5. '	ans' → logprob: -18.625
    6. 'Ans' → logprob: -20.25
    7. '```' → logprob: -21.375
    8. '_' → logprob: -21.5
    9. '_err' → logprob: -21.75
    10. ' ans' → logprob: -22.0

Token 551: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. '(
' → logprob: -18.0
    4. ' (' → logprob: -18.5
    5. '(dt' → logprob: -18.5
    6. 'dp' → logprob: -18.75
    7. '(dx' → logprob: -19.0
    8. '	dp' → logprob: -19.0
    9. '(df' → logprob: -19.25
    10. '```' → logprob: -20.0

Token 552: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.584239938296378e-06
    2. ')' → logprob: -12.125007629394531
    3. 'dp' → logprob: -13.750007629394531
    4. ',' → logprob: -14.125007629394531
    5. '	dp' → logprob: -16.37500762939453
    6. ' dp' → logprob: -16.87500762939453
    7. '(' → logprob: -17.12500762939453
    8. ' (' → logprob: -17.12500762939453
    9. ')(' → logprob: -17.25000762939453
    10. '```' → logprob: -17.50000762939453

Token 553: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.4391956685576588e-05
    2. ' N' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.250024795532227
    4. '	N' → logprob: -19.875024795532227
    5. '
' → logprob: -20.125024795532227
    6. '(N' → logprob: -20.250024795532227
    7. ')' → logprob: -20.375024795532227
    8. '```' → logprob: -20.500024795532227
    9. ' ' → logprob: -21.000024795532227
    10. '[N' → logprob: -21.875024795532227

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035453110467642546
    2. ',K' → logprob: -8.000354766845703
    3. ' ,' → logprob: -10.875354766845703
    4. '   ' → logprob: -16.000354766845703
    5. ',
' → logprob: -16.625354766845703
    6. 'K' → logprob: -17.375354766845703
    7. '```' → logprob: -18.250354766845703
    8. ',k' → logprob: -18.750354766845703
    9. '‌,' → logprob: -19.625354766845703
    10. ',N' → logprob: -19.875354766845703

Token 555: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001605115394340828
    2. ' K' → logprob: -8.750160217285156
    3. '   ' → logprob: -14.000160217285156
    4. '
' → logprob: -14.250160217285156
    5. 'N' → logprob: -15.750160217285156
    6. ' ' → logprob: -16.000160217285156
    7. '```' → logprob: -16.125160217285156
    8. '	K' → logprob: -17.000160217285156
    9. ')' → logprob: -17.125160217285156
    10. '
' → logprob: -17.375160217285156

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8267016410827637
    2. '   ' → logprob: -1.3267016410827637
    3. ')
' → logprob: -1.3267016410827637
    4. '(dp' → logprob: -3.4517016410827637
    5. ')
' → logprob: -9.451702117919922
    6. 'dp' → logprob: -11.326702117919922
    7. ',' → logprob: -12.451702117919922
    8. '()' → logprob: -12.701702117919922
    9. '```' → logprob: -12.701702117919922
    10. '  ' → logprob: -13.076702117919922

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018249334767460823
    2. 'output' → logprob: -4.01824951171875
    3. ' output' → logprob: -9.26824951171875
    4. '```' → logprob: -12.64324951171875
    5. '	output' → logprob: -13.51824951171875
    6. '(output' → logprob: -16.26824951171875
    7. '
' → logprob: -16.51824951171875
    8. '_output' → logprob: -16.64324951171875
    9. '   ' → logprob: -17.76824951171875
    10. '    
' → logprob: -18.14324951171875

Token 558: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0003270023735240102
    2. ' output' → logprob: -8.500327110290527
    3. '   ' → logprob: -9.000327110290527
    4. '	output' → logprob: -17.75032615661621
    5. '```' → logprob: -18.12532615661621
    6. '(output' → logprob: -19.37532615661621
    7. '_output' → logprob: -20.12532615661621
    8. '  ' → logprob: -20.62532615661621
    9. ' ' → logprob: -21.00032615661621
    10. '
' → logprob: -21.00032615661621

Token 559: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.375
    3. '_RESULT' → logprob: -18.75
    4. 's' → logprob: -19.625
    5. '_results' → logprob: -20.5
    6. 'Result' → logprob: -20.75
    7. '_Result' → logprob: -21.125
    8. '_' → logprob: -21.375
    9. '_res' → logprob: -21.5
    10. '_output' → logprob: -22.375

Token 560: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. '(answer' → logprob: -16.875001907348633
    4. '(an' → logprob: -18.500001907348633
    5. ' (' → logprob: -19.000001907348633
    6. '(ord' → logprob: -19.125001907348633
    7. '(err' → logprob: -19.750001907348633
    8. 'ans' → logprob: -20.000001907348633
    9. '```' → logprob: -20.250001907348633
    10. '(
' → logprob: -20.250001907348633

Token 561: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000897289311978966
    2. '())' → logprob: -7.125897407531738
    3. '()' → logprob: -9.375897407531738
    4. ')
' → logprob: -11.875897407531738
    5. ' )' → logprob: -14.625897407531738
    6. '()
' → logprob: -15.500897407531738
    7. '))' → logprob: -15.750897407531738
    8. '(' → logprob: -15.875897407531738
    9. ')`' → logprob: -16.750896453857422
    10. '```' → logprob: -17.000896453857422

Token 562: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002505386248230934
    2. 'main' → logprob: -6.002505302429199
    3. ' if' → logprob: -11.6275053024292
    4. '```' → logprob: -11.7525053024292
    5. '#' → logprob: -11.8775053024292
    6. '<|end|>' → logprob: -13.2525053024292
    7. 'print' → logprob: -13.6275053024292
    8. '(main' → logprob: -14.1275053024292
    9. '
' → logprob: -14.2525053024292
    10. 'read' → logprob: -15.1275053024292

Token 563: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4743315577507019
    2. ' __' → logprob: -0.9743315577507019
    3. '_' → logprob: -8.724331855773926
    4. '_name' → logprob: -9.974331855773926
    5. 'name' → logprob: -10.724331855773926
    6. '___' → logprob: -10.849331855773926
    7. ' ' → logprob: -13.349331855773926
    8. 'Name' → logprob: -14.349331855773926
    9. '/__' → logprob: -14.849331855773926
    10. ' ' → logprob: -15.099331855773926

Token 564: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017753805732354522
    2. '__.__' → logprob: -7.62677526473999
    3. '==' → logprob: -7.75177526473999
    4. ' ==' → logprob: -7.87677526473999
    5. '.__' → logprob: -8.751775741577148
    6. '__.' → logprob: -8.751775741577148
    7. 'name' → logprob: -9.876775741577148
    8. '[' → logprob: -10.251775741577148
    9. '__[' → logprob: -10.626775741577148
    10. '```' → logprob: -11.751775741577148

Token 565: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.319370302458992e-06
    2. '__.__' → logprob: -12.500005722045898
    3. '==' → logprob: -13.625005722045898
    4. '__('' → logprob: -16.1250057220459
    5. '___' → logprob: -16.2500057220459
    6. '____' → logprob: -16.3750057220459
    7. '__.' → logprob: -16.7500057220459
    8. ' ==' → logprob: -17.3750057220459
    9. '=="' → logprob: -17.5000057220459
    10. '__("' → logprob: -18.2500057220459

Token 566: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4622949957847595
    2. '==' → logprob: -1.7122950553894043
    3. ' ==' → logprob: -1.7122950553894043
    4. '=="' → logprob: -4.712295055389404
    5. '=='' → logprob: -8.587294578552246
    6. '_' → logprob: -10.837294578552246
    7. '___' → logprob: -11.087294578552246
    8. '__.__' → logprob: -11.087294578552246
    9. '"' → logprob: -11.587294578552246
    10. '===' → logprob: -12.087294578552246

Token 567: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01105206273496151
    2. ''' → logprob: -4.511052131652832
    3. '__' → logprob: -12.636052131652832
    4. ' "__' → logprob: -13.886052131652832
    5. '"user' → logprob: -17.011051177978516
    6. ''"' → logprob: -17.386051177978516
    7. '"name' → logprob: -18.011051177978516
    8. ' '__' → logprob: -18.136051177978516
    9. '"'' → logprob: -18.386051177978516
    10. '"class' → logprob: -18.511051177978516

Token 568: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016110755677800626
    2. 'name' → logprob: -8.750161170959473
    3. '__' → logprob: -13.000161170959473
    4. 'm' → logprob: -15.625161170959473
    5. 'x' → logprob: -16.500160217285156
    6. 'ma' → logprob: -17.375160217285156
    7. '_main' → logprob: -18.125160217285156
    8. '```' → logprob: -19.000160217285156
    9. ' main' → logprob: -19.500160217285156
    10. 'python' → logprob: -19.625160217285156

Token 569: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.02980024367570877
    2. '__' → logprob: -3.5298001766204834
    3. '__":
' → logprob: -10.404800415039062
    4. '__:' → logprob: -10.904800415039062
    5. '_' → logprob: -15.029800415039062
    6. '__.' → logprob: -15.654800415039062
    7. '__('' → logprob: -15.779800415039062
    8. ':' → logprob: -16.029800415039062
    9. '('__' → logprob: -16.279800415039062
    10. '__.__' → logprob: -17.029800415039062

Token 570: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10834409296512604
    2. '   ' → logprob: -2.358344078063965
    3. ' main' → logprob: -5.108344078063965
    4. '	main' → logprob: -6.233344078063965
    5. '_main' → logprob: -9.733344078063965
    6. '(main' → logprob: -11.233344078063965
    7. '```' → logprob: -11.483344078063965
    8. '__' → logprob: -12.108344078063965
    9. '    
' → logprob: -12.608344078063965
    10. '_MAIN' → logprob: -13.858344078063965

Token 571: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -23.25
    4. 'import' → logprob: -23.625
    5. '   ' → logprob: -25.625
    6. '_main' → logprob: -27.25
    7. '.main' → logprob: -28.125
    8. '(main' → logprob: -28.5
    9. 'Main' → logprob: -29.375
    10. '```' → logprob: -31.0

Token 572: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 570
Tokens correctement prédits (1ère position, stricte): 267
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 513
Précision stricte (1ère position): 46.84%
Précision adaptée (1ère position): 51.75%
Précision (top 10): 90.00%
================================================================================
