================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
ar = list(map(int, input().split(" ")))
br = []
while True:
    b = len(ar)
    s = "N"
    i = b - 1
    while i >= 0:
        if ar[i] == i + 1:
            s = "Y"
            br.append(ar[i])
            del ar[i]
            break
        i -= 1
    if s == "N":
        print(-1)
        exit()
    if len(ar) == 0:
        break
i = a - 1
while i >= 0:
    print(br[i])
    i -= 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11548296362161636
    2. ')' → logprob: -2.240483045578003
    3. '()' → logprob: -6.740482807159424
    4. '())' → logprob: -7.990482807159424
    5. '(
' → logprob: -8.865483283996582
    6. '))' → logprob: -9.115483283996582
    7. '```' → logprob: -9.115483283996582
    8. '(a' → logprob: -9.240483283996582
    9. 'a' → logprob: -9.740483283996582
    10. '`' → logprob: -9.740483283996582

Token 5: 'ar' (ID: 277)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07317858934402466
    2. '*' → logprob: -3.57317852973938
    3. '\n' → logprob: -3.94817852973938
    4. '%' → logprob: -4.198178768157959
    5. '+
' → logprob: -5.948178768157959
    6. 'if' → logprob: -6.198178768157959
    7. '\' → logprob: -6.948178768157959
    8. '#' → logprob: -7.073178768157959
    9. '```' → logprob: -7.573178768157959
    10. '**' → logprob: -8.3231782913208

Token 6: ' =' (ID: 314)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.12077482789754868
    2. '[' → logprob: -2.245774745941162
    3. 'a' → logprob: -5.495774745941162
    4. '.' → logprob: -6.245774745941162
    5. 'ray' → logprob: -7.370774745941162
    6. 'r' → logprob: -7.745774745941162
    7. '[a' → logprob: -7.745774745941162
    8. 'ays' → logprob: -9.12077522277832
    9. '[]' → logprob: -9.74577522277832
    10. '\[' → logprob: -10.24577522277832

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8250646591186523
    2. '[' → logprob: -1.7000646591186523
    3. '[]' → logprob: -1.8250646591186523
    4. ' [' → logprob: -1.9500646591186523
    5. '[a' → logprob: -2.7000646591186523
    6. 'a' → logprob: -5.950064659118652
    7. 'list' → logprob: -6.575064659118652
    8. '[input' → logprob: -6.575064659118652
    9. ' list' → logprob: -6.825064659118652
    10. ' a' → logprob: -6.825064659118652

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003589416155591607
    2. '(range' → logprob: -8.875358581542969
    3. '(ar' → logprob: -9.125358581542969
    4. '(a' → logprob: -9.750358581542969
    5. '()' → logprob: -11.500358581542969
    6. '(
' → logprob: -11.875358581542969
    7. '(input' → logprob: -12.625358581542969
    8. '(map' → logprob: -12.625358581542969
    9. ')' → logprob: -12.625358581542969
    10. 'ar' → logprob: -12.750358581542969

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4310981333255768
    2. '(' → logprob: -1.0560981035232544
    3. '(input' → logprob: -6.931097984313965
    4. '(str' → logprob: -7.556097984313965
    5. '(lambda' → logprob: -7.681097984313965
    6. '<int' → logprob: -9.056097984313965
    7. 'int' → logprob: -9.431097984313965
    8. '(eval' → logprob: -9.681097984313965
    9. '[int' → logprob: -9.806097984313965
    10. ')' → logprob: -10.431097984313965

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009631502907723188
    2. '(' → logprob: -7.75096321105957
    3. ',input' → logprob: -8.00096321105957
    4. 'input' → logprob: -9.25096321105957
    5. ')' → logprob: -9.87596321105957
    6. '))' → logprob: -11.00096321105957
    7. '=input' → logprob: -11.50096321105957
    8. ' (' → logprob: -12.50096321105957
    9. '<input' → logprob: -12.75096321105957
    10. ',' → logprob: -13.12596321105957

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029908889904618263
    2. ' input' → logprob: -3.5299088954925537
    3. '(input' → logprob: -8.779909133911133
    4. ',input' → logprob: -12.779909133911133
    5. '=input' → logprob: -14.279909133911133
    6. '<input' → logprob: -15.279909133911133
    7. ')' → logprob: -15.654909133911133
    8. ' ' → logprob: -15.654909133911133
    9. '	input' → logprob: -15.904909133911133
    10. 'range' → logprob: -16.029909133911133

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4023192822933197
    2. '()' → logprob: -1.652319312095642
    3. '())' → logprob: -2.1523191928863525
    4. '()));' → logprob: -4.652319431304932
    5. '(' → logprob: -5.402319431304932
    6. '()>' → logprob: -5.777319431304932
    7. '())))' → logprob: -6.277319431304932
    8. '))' → logprob: -7.027319431304932
    9. '().' → logprob: -7.152319431304932
    10. '(()' → logprob: -7.652319431304932

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001520930090919137
    2. 'strip' → logprob: -6.501521110534668
    3. 'rstrip' → logprob: -11.001521110534668
    4. ' split' → logprob: -14.251521110534668
    5. 's' → logprob: -14.626521110534668
    6. ')' → logprob: -15.001521110534668
    7. '(split' → logprob: -15.001521110534668
    8. 'spl' → logprob: -16.12652015686035
    9. 'sp' → logprob: -17.00152015686035
    10. '.split' → logprob: -17.62652015686035

Token 14: '("' (ID: 568)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3460032343864441
    2. '))' → logprob: -2.096003293991089
    3. '(' → logprob: -2.346003293991089
    4. '())' → logprob: -3.346003293991089
    5. '()' → logprob: -3.971003293991089
    6. ')' → logprob: -3.971003293991089
    7. '('' → logprob: -7.97100305557251
    8. '())))' → logprob: -9.346003532409668
    9. '(','' → logprob: -9.471003532409668
    10. ')))' → logprob: -9.846003532409668

Token 15: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26683008670806885
    2. ')))' → logprob: -1.5168300867080688
    3. '")))' → logprob: -4.391829967498779
    4. '')))' → logprob: -7.266829967498779
    5. '()' → logprob: -7.641829967498779
    6. ' "' → logprob: -7.891829967498779
    7. '())))' → logprob: -8.016830444335938
    8. '"' → logprob: -8.516830444335938
    9. '))' → logprob: -9.391830444335938
    10. '"))' → logprob: -9.391830444335938

Token 16: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.12712138891220093
    2. ')' → logprob: -2.1271214485168457
    3. '))' → logprob: -8.627120971679688
    4. '))))' → logprob: -12.127120971679688
    5. '')))' → logprob: -12.877120971679688
    6. ')))
' → logprob: -13.127120971679688
    7. ')));' → logprob: -13.502120971679688
    8. '),' → logprob: -14.252120971679688
    9. ')))

' → logprob: -14.877120971679688
    10. ' ' → logprob: -15.002120971679688

Token 17: 'br' (ID: 1697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4067491590976715
    2. 'a' → logprob: -2.1567492485046387
    3. 's' → logprob: -2.1567492485046387
    4. 'r' → logprob: -3.7817492485046387
    5. 'ar' → logprob: -3.9067492485046387
    6. '#' → logprob: -4.281749248504639
    7. '[' → logprob: -4.656749248504639
    8. 'm' → logprob: -5.156749248504639
    9. 'c' → logprob: -5.281749248504639
    10. '.' → logprob: -5.406749248504639

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5782246589660645
    2. ' =' → logprob: -0.8282246589660645
    3. '_' → logprob: -7.4532246589660645
    4. 'a' → logprob: -7.5782246589660645
    5. '[' → logprob: -7.9532246589660645
    6. ' ' → logprob: -8.328224182128906
    7. '.' → logprob: -8.453224182128906
    8. 'e' → logprob: -9.328224182128906
    9. ')' → logprob: -9.453224182128906
    10. '=[]' → logprob: -9.578224182128906

Token 19: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.41043147444725037
    2. 'ar' → logprob: -1.4104315042495728
    3. ' list' → logprob: -3.160431385040283
    4. '[]' → logprob: -3.535431385040283
    5. ' []' → logprob: -4.535431385040283
    6. '[' → logprob: -5.035431385040283
    7. 'a' → logprob: -6.035431385040283
    8. ' ar' → logprob: -7.785431385040283
    9. '[a' → logprob: -8.035431861877441
    10. ' a' → logprob: -8.160431861877441

Token 20: 'while' (ID: 7032)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3501581847667694
    2. 'for' → logprob: -1.2251582145690918
    3. 'i' → logprob: -6.725158214569092
    4. 'fo' → logprob: -9.350157737731934
    5. '(' → logprob: -9.725157737731934
    6. '=' → logprob: -9.725157737731934
    7. 'F' → logprob: -9.975157737731934
    8. '_' → logprob: -9.975157737731934
    9. 'n' → logprob: -10.225157737731934
    10. ' for' → logprob: -10.350157737731934

Token 21: ' True' (ID: 6432)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02126733772456646
    2. 'a' → logprob: -4.271267414093018
    3. ' len' → logprob: -5.021267414093018
    4. 'len' → logprob: -8.02126693725586
    5. ' ' → logprob: -9.02126693725586
    6. ' ar' → logprob: -11.89626693725586
    7. 'ar' → logprob: -12.02126693725586
    8. ' not' → logprob: -12.64626693725586
    9. '(len' → logprob: -12.64626693725586
    10. '(a' → logprob: -12.89626693725586

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ' :' → logprob: -9.250149726867676
    3. ':
' → logprob: -10.375149726867676
    4. '):' → logprob: -11.750149726867676
    5. ':**' → logprob: -11.750149726867676
    6. '   ' → logprob: -13.625149726867676
    7. ' ' → logprob: -13.750149726867676
    8. '():' → logprob: -13.875149726867676
    9. '':'' → logprob: -14.875149726867676
    10. ':return' → logprob: -14.875149726867676

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027659209445118904
    2. 'a' → logprob: -4.6526594161987305
    3. ' if' → logprob: -5.2776594161987305
    4. 'b' → logprob: -5.2776594161987305
    5. 'i' → logprob: -6.5276594161987305
    6. 'if' → logprob: -6.5276594161987305
    7. 'n' → logprob: -6.5276594161987305
    8. ' a' → logprob: -6.7776594161987305
    9. 'br' → logprob: -7.4026594161987305
    10. ' ' → logprob: -8.65265941619873

Token 24: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3404457569122314
    2. 'b' (adapté à ' b') → logprob: -1.3404457569122314
    3. 'n' → logprob: -2.0904457569122314
    4. '   ' → logprob: -2.5904457569122314
    5. 'i' → logprob: -3.0904457569122314
    6. ' try' → logprob: -3.2154457569122314
    7. ' if' → logprob: -3.3404457569122314
    8. ' a' → logprob: -3.3404457569122314
    9. 'try' → logprob: -3.3404457569122314
    10. 'if' → logprob: -3.8404457569122314

Token 25: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.037943366914987564
    2. ' =' → logprob: -3.5379433631896973
    3. '=' → logprob: -5.287943363189697
    4. 'reak' → logprob: -6.662943363189697
    5. 'a' → logprob: -7.662943363189697
    6. ' ' → logprob: -7.912943363189697
    7. '_r' → logprob: -8.162943840026855
    8. '_' → logprob: -8.162943840026855
    9. '.' → logprob: -9.787943840026855
    10. 'i' → logprob: -9.912943840026855

Token 26: ' len' (ID: 4631)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.49460113048553467
    2. 'int' → logprob: -1.6196011304855347
    3. ' input' → logprob: -1.7446011304855347
    4. ' int' → logprob: -4.119601249694824
    5. 'a' → logprob: -6.994601249694824
    6. ' a' → logprob: -8.369601249694824
    7. 'ar' → logprob: -10.119601249694824
    8. 'len' → logprob: -10.994601249694824
    9. ' ' → logprob: -11.244601249694824
    10. '0' → logprob: -12.619601249694824

Token 27: '(ar' (ID: 77717)
  Prédit: '(ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ar' → logprob: -0.5778893828392029
    2. '(br' → logprob: -0.8278893828392029
    3. '(' → logprob: -7.077889442443848
    4. '(a' → logprob: -7.202889442443848
    5. '(b' → logprob: -8.077889442443848
    6. 'br' → logprob: -11.202889442443848
    7. 'ar' → logprob: -12.077889442443848
    8. '(arr' → logprob: -12.577889442443848
    9. '(bar' → logprob: -13.077889442443848
    10. '	br' → logprob: -13.077889442443848

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008479830576106906
    2. ')>' → logprob: -7.875847816467285
    3. ' )' → logprob: -8.250847816467285
    4. ')==' → logprob: -9.500847816467285
    5. ')<' → logprob: -10.500847816467285
    6. ')-' → logprob: -10.625847816467285
    7. ')>=' → logprob: -10.750847816467285
    8. '))' → logprob: -11.000847816467285
    9. ')<=' → logprob: -11.750847816467285
    10. '[' → logprob: -11.875847816467285

Token 29: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16124609112739563
    2. ' if' → logprob: -3.0362460613250732
    3. ' -' → logprob: -3.9112460613250732
    4. '>' → logprob: -4.161246299743652
    5. '<|end|>' → logprob: -4.161246299743652
    6. 'if' → logprob: -4.286246299743652
    7. '   ' → logprob: -4.911246299743652
    8. ')' → logprob: -5.036246299743652
    9. ' and' → logprob: -5.036246299743652
    10. ' ' → logprob: -5.661246299743652

Token 30: ' s' (ID: 265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46367719769477844
    2. 'if' → logprob: -1.838677167892456
    3. ' if' → logprob: -1.963677167892456
    4. ')' → logprob: -3.713677167892456
    5. '<|end|>' → logprob: -3.838677167892456
    6. ' -' → logprob: -5.463677406311035
    7. '>' → logprob: -5.588677406311035
    8. '%' → logprob: -5.838677406311035
    9. ' ' → logprob: -5.963677406311035
    10. '
' → logprob: -6.588677406311035

Token 31: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.20395857095718384
    2. '+=' → logprob: -2.828958511352539
    3. '=' → logprob: -3.078958511352539
    4. ' +=' → logprob: -3.578958511352539
    5. ' =' → logprob: -3.828958511352539
    6. '>' → logprob: -5.453958511352539
    7. 'u' → logprob: -5.703958511352539
    8. 'et' → logprob: -5.828958511352539
    9. '=sum' → logprob: -6.328958511352539
    10. ' ' → logprob: -6.328958511352539

Token 32: ' "' (ID: 392)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47089883685112
    2. ' sum' → logprob: -1.0958988666534424
    3. '0' → logprob: -3.9708988666534424
    4. ' ' → logprob: -4.470898628234863
    5. ' ar' → logprob: -5.845898628234863
    6. 'ar' → logprob: -6.220898628234863
    7. ' b' → logprob: -6.470898628234863
    8. 'b' → logprob: -6.845898628234863
    9. 'a' → logprob: -6.845898628234863
    10. 'br' → logprob: -7.470898628234863

Token 33: 'N' (ID: 45)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.6373915672302246
    2. '")' → logprob: -1.7623915672302246
    3. 'sum' → logprob: -2.1373915672302246
    4. '"' → logprob: -2.3873915672302246
    5. 'b' → logprob: -2.3873915672302246
    6. '+' → logprob: -2.7623915672302246
    7. ' ")' → logprob: -3.0123915672302246
    8. '0' → logprob: -3.2623915672302246
    9. 'a' → logprob: -3.5123915672302246
    10. 'br' → logprob: -3.5123915672302246

Token 34: '"
' (ID: 1092)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.09446948021650314
    2. 'O' → logprob: -3.0944695472717285
    3. 'ot' → logprob: -3.9694695472717285
    4. '"' → logprob: -4.8444695472717285
    5. 'E' → logprob: -5.4694695472717285
    6. 'e' → logprob: -6.3444695472717285
    7. 'OT' → logprob: -6.3444695472717285
    8. 'one' → logprob: -6.4694695472717285
    9. 'Y' → logprob: -6.4694695472717285
    10. '")' → logprob: -7.2194695472717285

Token 35: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8002553582191467
    2. 'e' → logprob: -2.300255298614502
    3. ' ' → logprob: -2.550255298614502
    4. 'if' → logprob: -2.550255298614502
    5. 'o' → logprob: -2.675255298614502
    6. '   ' → logprob: -3.425255298614502
    7. 'for' → logprob: -3.675255298614502
    8. 'a' → logprob: -3.800255298614502
    9. '<|end|>' → logprob: -3.800255298614502
    10. 'b' → logprob: -3.925255298614502

Token 36: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.78655606508255
    2. 'i' (adapté à ' i') → logprob: -1.0365560054779053
    3. 'if' → logprob: -2.1615560054779053
    4. 'for' → logprob: -3.9115560054779053
    5. ' i' → logprob: -4.161556243896484
    6. ' if' → logprob: -4.536556243896484
    7. ' for' → logprob: -4.661556243896484
    8. '```' → logprob: -5.036556243896484
    9. ' ' → logprob: -5.911556243896484
    10. 'f' → logprob: -6.286556243896484

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3126433789730072
    2. 'n' → logprob: -1.6876434087753296
    3. 'f' → logprob: -2.68764328956604
    4. ' =' → logprob: -4.312643527984619
    5. ' ' → logprob: -7.312643527984619
    6. ' n' → logprob: -7.687643527984619
    7. '<' → logprob: -8.187643051147461
    8. 'nd' → logprob: -8.437643051147461
    9. ' in' → logprob: -8.937643051147461
    10. 'in' → logprob: -9.937643051147461

Token 38: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4296206533908844
    2. '0' → logprob: -1.054620623588562
    3. ' b' → logprob: -7.804620742797852
    4. '1' → logprob: -8.054620742797852
    5. 'b' → logprob: -9.054620742797852
    6. '2' → logprob: -10.929620742797852
    7. ' len' → logprob: -10.929620742797852
    8. 'len' → logprob: -12.117120742797852
    9. ' -' → logprob: -12.367120742797852
    10. '  ' → logprob: -12.367120742797852

Token 39: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038605257868766785
    2. ' -' → logprob: -3.288605213165283
    3. ' ' → logprob: -7.538605213165283
    4. '>' → logprob: -11.913605690002441
    5. '  ' → logprob: -12.413605690002441
    6. ')' → logprob: -12.538605690002441
    7. '-=' → logprob: -12.538605690002441
    8. ' >' → logprob: -13.163605690002441
    9. ' -=' → logprob: -13.288605690002441
    10. '--' → logprob: -13.788605690002441

Token 40: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.694142758846283
    2. '1' → logprob: -0.819142758846283
    3. ' ' → logprob: -2.8191428184509277
    4. '3' → logprob: -10.56914234161377
    5. '  ' → logprob: -14.13164234161377
    6. '4' → logprob: -14.19414234161377
    7. '7' → logprob: -14.75664234161377
    8. '-' → logprob: -15.06914234161377
    9. '   ' → logprob: -15.13164234161377
    10. '0' → logprob: -15.13164234161377

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5768981575965881
    2. '2' → logprob: -0.8268981575965881
    3. '3' → logprob: -7.076898097991943
    4. ' ' → logprob: -9.576898574829102
    5. '4' → logprob: -10.701898574829102
    6. '5' → logprob: -11.951898574829102
    7. '6' → logprob: -13.201898574829102
    8. '7' → logprob: -13.576898574829102
    9. '10' → logprob: -13.576898574829102
    10. '   ' → logprob: -13.951898574829102

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04318655654788017
    2. 'i' → logprob: -3.168186664581299
    3. ' ' → logprob: -9.16818618774414
    4. '0' → logprob: -9.79318618774414
    5. '	i' → logprob: -11.41818618774414
    6. '(i' → logprob: -12.66818618774414
    7. '>' → logprob: -13.16818618774414
    8. 'b' → logprob: -13.16818618774414
    9. ' >' → logprob: -14.04318618774414
    10. ' b' → logprob: -14.04318618774414

Token 46: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6420672535896301
    2. ' >=' → logprob: -0.7670672535896301
    3. ' >' → logprob: -5.2670674324035645
    4. '>' → logprob: -5.5170674324035645
    5. ' ' → logprob: -8.642066955566406
    6. ']>=' → logprob: -11.017066955566406
    7. '0' → logprob: -11.267066955566406
    8. ')>=' → logprob: -11.517066955566406
    9. '">' → logprob: -12.267066955566406
    10. '≥' → logprob: -12.517066955566406

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023581450805068016
    2. ' ' → logprob: -3.7735815048217773
    3. '1' → logprob: -8.148581504821777
    4. '   ' → logprob: -10.398581504821777
    5. '2' → logprob: -12.398581504821777
    6. 'b' → logprob: -13.211081504821777
    7. '  ' → logprob: -13.398581504821777
    8. ':' → logprob: -14.273581504821777
    9. ' b' → logprob: -14.461081504821777
    10. '    ' → logprob: -14.461081504821777

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035328438971191645
    2. '1' → logprob: -6.003532886505127
    3. ' ' → logprob: -6.878532886505127
    4. '2' → logprob: -11.753532409667969
    5. 'b' → logprob: -12.128532409667969
    6. '   ' → logprob: -12.253532409667969
    7. 'a' → logprob: -13.878532409667969
    8. '```' → logprob: -14.128532409667969
    9. '3' → logprob: -14.316032409667969
    10. 'i' → logprob: -14.503532409667969

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5379337668418884
    2. ' and' → logprob: -0.9129337668418884
    3. 'and' → logprob: -4.912933826446533
    4. '   ' → logprob: -5.912933826446533
    5. ':
' → logprob: -6.287933826446533
    6. ' :' → logprob: -6.412933826446533
    7. '):' → logprob: -7.787933826446533
    8. '       ' → logprob: -8.787933349609375
    9. '<|end|>' → logprob: -8.912933349609375
    10. ')' → logprob: -9.412933349609375

Token 50: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9444645643234253
    2. ' ' → logprob: -1.6944645643234253
    3. '       ' → logprob: -1.6944645643234253
    4. '   ' → logprob: -2.944464683532715
    5. ' and' → logprob: -2.944464683532715
    6. '<|end|>' → logprob: -2.944464683532715
    7. '    ' → logprob: -3.444464683532715
    8. ' :' → logprob: -3.444464683532715
    9. ':
' → logprob: -5.444464683532715
    10. '[' → logprob: -6.069464683532715

Token 51: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10329463332891464
    2. ' if' → logprob: -3.978294610977173
    3. ':' → logprob: -4.353294849395752
    4. '       ' → logprob: -4.478294849395752
    5. '<|end|>' → logprob: -4.603294849395752
    6. '   ' → logprob: -4.728294849395752
    7. ' :' → logprob: -4.978294849395752
    8. 'if' (adapté à ' if') → logprob: -4.978294849395752
    9. ' and' → logprob: -5.103294849395752
    10. '    ' → logprob: -5.103294849395752

Token 52: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.0068715414963662624
    2. 'ar' → logprob: -5.006871700286865
    3. ' br' → logprob: -9.881871223449707
    4. ' i' → logprob: -9.881871223449707
    5. ' a' → logprob: -11.256871223449707
    6. 'i' → logprob: -11.631871223449707
    7. 'br' → logprob: -11.756871223449707
    8. '(ar' → logprob: -11.756871223449707
    9. '	ar' → logprob: -12.256871223449707
    10. 'a' → logprob: -12.631871223449707

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00470768054947257
    2. '[' → logprob: -5.3797078132629395
    3. ' [' → logprob: -9.629707336425781
    4. '[j' → logprob: -11.879707336425781
    5. '```' → logprob: -12.879707336425781
    6. '[-' → logprob: -13.254707336425781
    7. 'i' → logprob: -13.629707336425781
    8. '[a' → logprob: -13.754707336425781
    9. '[
' → logprob: -13.754707336425781
    10. '>' → logprob: -14.129707336425781

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15060077607631683
    2. '>' → logprob: -3.2756006717681885
    3. ' >' → logprob: -3.4006006717681885
    4. ' ]' → logprob: -3.9006006717681885
    5. ']>' → logprob: -4.025600910186768
    6. ' <' → logprob: -4.900600910186768
    7. ' ' → logprob: -5.400600910186768
    8. '%' → logprob: -5.525600910186768
    9. '<' → logprob: -5.900600910186768
    10. ']<' → logprob: -6.400600910186768

Token 55: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0539520978927612
    2. ' >' → logprob: -1.0539520978927612
    3. ' <' → logprob: -2.303952217102051
    4. '%' → logprob: -2.428952217102051
    5. '<' → logprob: -2.553952217102051
    6. ' %' → logprob: -3.928952217102051
    7. ' ' → logprob: -4.928952217102051
    8. '==' → logprob: -5.553952217102051
    9. ' ==' → logprob: -5.678952217102051
    10. '!=' → logprob: -7.303952217102051

Token 56: ' i' (ID: 575)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7878756523132324
    2. '0' → logprob: -1.9128756523132324
    3. ' ' → logprob: -2.2878756523132324
    4. '1' → logprob: -2.4128756523132324
    5. ' ar' → logprob: -2.5378756523132324
    6. 'a' → logprob: -3.2878756523132324
    7. 'i' → logprob: -3.7878756523132324
    8. 'b' → logprob: -4.287875652313232
    9. 'br' → logprob: -4.412875652313232
    10. ' i' → logprob: -4.787875652313232

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7216178774833679
    2. ':' → logprob: -0.8466178774833679
    3. ' +' → logprob: -3.7216179370880127
    4. ' :' → logprob: -3.7216179370880127
    5. ' and' → logprob: -4.221617698669434
    6. '-' → logprob: -4.596617698669434
    7. 'and' → logprob: -5.596617698669434
    8. '+:' → logprob: -5.596617698669434
    9. ' ' → logprob: -6.096617698669434
    10. ' -' → logprob: -7.346617698669434

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0077642048709094524
    2. '2' → logprob: -5.0077643394470215
    3. ' ' → logprob: -6.8827643394470215
    4. '+' → logprob: -11.382763862609863
    5. 's' → logprob: -12.507763862609863
    6. 'b' → logprob: -13.445263862609863
    7. 'a' → logprob: -13.820263862609863
    8. '3' → logprob: -14.132763862609863
    9. '  ' → logprob: -14.570263862609863
    10. '<|end|>' → logprob: -14.757763862609863

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000476786372018978
    2. ' ' → logprob: -7.750476837158203
    3. '2' → logprob: -10.000476837158203
    4. 'a' → logprob: -16.125476837158203
    5. '7' → logprob: -17.125476837158203
    6. '１' → logprob: -17.125476837158203
    7. '১' → logprob: -17.312976837158203
    8. ')' → logprob: -17.500476837158203
    9. '१' → logprob: -17.500476837158203
    10. '۱' → logprob: -17.625476837158203

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014167623594403267
    2. ' and' → logprob: -4.889167785644531
    3. ':
' → logprob: -5.514167785644531
    4. ' :' → logprob: -6.389167785644531
    5. '):' → logprob: -7.639167785644531
    6. 'and' → logprob: -9.014167785644531
    7. ')' → logprob: -9.639167785644531
    8. ' ' → logprob: -10.139167785644531
    9. ' or' → logprob: -10.139167785644531
    10. ' :
' → logprob: -11.014167785644531

Token 61: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32505732774734497
    2. ':
' → logprob: -1.3250572681427002
    3. '       ' → logprob: -5.325057506561279
    4. ' and' → logprob: -6.700057506561279
    5. 'br' → logprob: -6.950057506561279
    6. '   ' → logprob: -7.200057506561279
    7. '):' → logprob: -7.575057506561279
    8. '           ' → logprob: -7.575057506561279
    9. '):
' → logprob: -7.700057506561279
    10. ' :
' → logprob: -7.700057506561279

Token 62: ' s' (ID: 265)
  Prédit: ' br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.2784304916858673
    2. 'br' → logprob: -2.028430461883545
    3. ' s' → logprob: -3.153430461883545
    4. ' b' → logprob: -3.278430461883545
    5. 's' (adapté à ' s') → logprob: -4.528430461883545
    6. 'b' → logprob: -5.153430461883545
    7. '       ' → logprob: -5.403430461883545
    8. ' ar' → logprob: -5.653430461883545
    9. ' break' → logprob: -6.028430461883545
    10. 'ar' → logprob: -6.653430461883545

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032314784824848175
    2. '=' → logprob: -3.5323147773742676
    3. ' ==' → logprob: -6.032314777374268
    4. ' ' → logprob: -9.407315254211426
    5. '==' → logprob: -10.407315254211426
    6. ',' → logprob: -10.657315254211426
    7. ' +=' → logprob: -12.157315254211426
    8. '[' → logprob: -12.907315254211426
    9. ' ="' → logprob: -13.032315254211426
    10. '.' → logprob: -13.407315254211426

Token 64: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03123541548848152
    2. ' "' → logprob: -5.031235218048096
    3. ' ' → logprob: -5.656235218048096
    4. 'i' → logprob: -6.156235218048096
    5. ''' → logprob: -6.156235218048096
    6. ' i' → logprob: -6.406235218048096
    7. 'Y' → logprob: -6.531235218048096
    8. 'a' → logprob: -6.531235218048096
    9. '"S' → logprob: -6.531235218048096
    10. '"T' → logprob: -6.531235218048096

Token 65: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.28327250480651855
    2. 'S' → logprob: -2.5332725048065186
    3. 'B' → logprob: -2.6582725048065186
    4. 'R' → logprob: -3.5332725048065186
    5. 'P' → logprob: -3.6582725048065186
    6. 'A' → logprob: -4.658272743225098
    7. 'T' → logprob: -5.158272743225098
    8. 'I' → logprob: -5.283272743225098
    9. 'i' → logprob: -5.283272743225098
    10. 'G' → logprob: -5.533272743225098

Token 66: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.32409903407096863
    2. '"
' → logprob: -1.449099063873291
    3. '           ' → logprob: -3.324099063873291
    4. '\n' → logprob: -5.449099063873291
    5. '"
' → logprob: -7.199099063873291
    6. '
' → logprob: -7.824099063873291
    7. '               ' → logprob: -9.074098587036133
    8. '")' → logprob: -9.574098587036133
    9. ' "' → logprob: -10.074098587036133
    10. '       ' → logprob: -10.199098587036133

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03529401496052742
    2. '            
' → logprob: -3.9102940559387207
    3. '
' → logprob: -5.285294055938721
    4. '            ' → logprob: -6.535294055938721
    5. '          ' → logprob: -6.910294055938721
    6. '        
' → logprob: -7.410294055938721
    7. ':' → logprob: -7.535294055938721
    8. ' 
' → logprob: -7.535294055938721
    9. ',' → logprob: -7.535294055938721
    10. ' ' → logprob: -7.660294055938721

Token 68: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' (adapté à ' br') → logprob: -0.06549572199583054
    2. ' br' → logprob: -3.440495729446411
    3. '       ' → logprob: -4.065495491027832
    4. '   ' → logprob: -5.815495491027832
    5. '           ' → logprob: -5.940495491027832
    6. 'b' → logprob: -5.940495491027832
    7. '	br' → logprob: -6.315495491027832
    8. 'ar' → logprob: -6.815495491027832
    9. 'break' → logprob: -6.940495491027832
    10. ' break' → logprob: -7.065495491027832

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07895874977111816
    2. '.' → logprob: -2.578958749771118
    3. ' .' → logprob: -10.703958511352539
    4. '.extend' → logprob: -10.703958511352539
    5. '.app' → logprob: -11.703958511352539
    6. '.ap' → logprob: -12.328958511352539
    7. 'append' → logprob: -12.703958511352539
    8. '.push' → logprob: -13.328958511352539
    9. '.insert' → logprob: -13.578958511352539
    10. '.a' → logprob: -13.578958511352539

Token 70: '(ar' (ID: 77717)
  Prédit: '(ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ar' → logprob: -0.05684225261211395
    2. '(i' → logprob: -3.05684232711792
    3. '(' → logprob: -4.80684232711792
    4. 'ar' → logprob: -10.556841850280762
    5. '(a' → logprob: -11.556841850280762
    6. '((' → logprob: -11.806841850280762
    7. '(br' → logprob: -14.056841850280762
    8. '(
' → logprob: -14.681841850280762
    9. ' ar' → logprob: -15.056841850280762
    10. '(s' → logprob: -15.056841850280762

Token 71: '[i' (ID: 1768)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.2017909437417984
    2. '[i' → logprob: -1.7017909288406372
    3. '.' → logprob: -7.951790809631348
    4. '[:' → logprob: -11.951790809631348
    5. '[' → logprob: -12.076790809631348
    6. 'pop' → logprob: -12.201790809631348
    7. '.i' → logprob: -12.576790809631348
    8. ')' → logprob: -13.201790809631348
    9. ' .' → logprob: -14.826790809631348
    10. '.remove' → logprob: -14.826790809631348

Token 72: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5832038521766663
    2. ')' → logprob: -1.2082037925720215
    3. '])
' → logprob: -2.4582037925720215
    4. '])' → logprob: -3.0832037925720215
    5. ']' → logprob: -5.2082037925720215
    6. ')
' → logprob: -5.4582037925720215
    7. '])
' → logprob: -7.7082037925720215
    8. ')

' → logprob: -7.9582037925720215
    9. ' )
' → logprob: -8.08320426940918
    10. '))
' → logprob: -8.20820426940918

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14445164799690247
    2. 'ar' → logprob: -2.64445161819458
    3. '            
' → logprob: -3.64445161819458
    4. '        
' → logprob: -4.89445161819458
    5. '    
' → logprob: -5.14445161819458
    6. '	ar' → logprob: -5.39445161819458
    7. '       ' → logprob: -5.64445161819458
    8. ' ar' → logprob: -5.76945161819458
    9. '
' → logprob: -6.64445161819458
    10. ' 
' → logprob: -6.89445161819458

Token 74: ' del' (ID: 1083)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.06896299868822098
    2. ' ar' → logprob: -2.818963050842285
    3. ' del' → logprob: -5.693963050842285
    4. '   ' → logprob: -6.943963050842285
    5. 'del' (adapté à ' del') → logprob: -7.068963050842285
    6. ' break' → logprob: -7.443963050842285
    7. '	ar' → logprob: -8.193963050842285
    8. '       ' → logprob: -8.568963050842285
    9. 'break' → logprob: -8.568963050842285
    10. '           ' → logprob: -8.818963050842285

Token 75: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.001538311829790473
    2. '(ar' → logprob: -6.876538276672363
    3. 'ar' → logprob: -7.626538276672363
    4. '	ar' → logprob: -11.251538276672363
    5. '$ar' → logprob: -13.501538276672363
    6. '[' → logprob: -13.751538276672363
    7. ' ' → logprob: -14.001538276672363
    8. ' ар' → logprob: -14.251538276672363
    9. '(' → logprob: -14.876538276672363
    10. ' a' → logprob: -15.251538276672363

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005947406403720379
    2. '[' → logprob: -5.130947589874268
    3. '[
' → logprob: -11.63094711303711
    4. '[:]' → logprob: -13.25594711303711
    5. '[`' → logprob: -13.38094711303711
    6. '```' → logprob: -13.50594711303711
    7. '[:' → logprob: -13.63094711303711
    8. ' [' → logprob: -14.00594711303711
    9. '\[' → logprob: -14.50594711303711
    10. '[a' → logprob: -14.50594711303711

Token 77: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25262734293937683
    2. ')
' → logprob: -1.5026273727416992
    3. ')
' → logprob: -8.1276273727417
    4. ']' → logprob: -8.3776273727417
    5. '       ' → logprob: -9.8776273727417
    6. ']
' → logprob: -10.3776273727417
    7. '])' → logprob: -10.7526273727417
    8. ')

' → logprob: -11.0026273727417
    9. '           ' → logprob: -11.2526273727417
    10. ')]' → logprob: -11.5026273727417

Token 78: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.09852322936058044
    2. '
' → logprob: -2.7235231399536133
    3. '       ' → logprob: -4.973523139953613
    4. '        
' → logprob: -5.098523139953613
    5. ' ' → logprob: -5.973523139953613
    6. '    
' → logprob: -6.098523139953613
    7. '         
' → logprob: -6.348523139953613
    8. '  
' → logprob: -6.473523139953613
    9. '     
' → logprob: -6.598523139953613
    10. '
' → logprob: -6.848523139953613

Token 79: ' break' (ID: 2338)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.09164337813854218
    2. ' break' → logprob: -2.9666433334350586
    3. '
' → logprob: -4.341643333435059
    4. ' ' → logprob: -5.216643333435059
    5. 'break' (adapté à ' break') → logprob: -5.716643333435059
    6. '  
' → logprob: -5.966643333435059
    7. ' i' → logprob: -6.091643333435059
    8. '        
' → logprob: -6.216643333435059
    9. '    
' → logprob: -6.466643333435059
    10. '       ' → logprob: -6.591643333435059

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32765915989875793
    2. '       ' → logprob: -1.3276591300964355
    3. '<|end|>' → logprob: -5.3276591300964355
    4. ' 
' → logprob: -5.7026591300964355
    5. '        
' → logprob: -5.9526591300964355
    6. '   ' → logprob: -7.3276591300964355
    7. '\n' → logprob: -7.9526591300964355
    8. '
' → logprob: -8.077659606933594
    9. '```' → logprob: -8.202659606933594
    10. '  
' → logprob: -8.327659606933594

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18468302488327026
    2. '   ' → logprob: -2.934683084487915
    3. 'i' → logprob: -3.309683084487915
    4. ' 
' → logprob: -3.559683084487915
    5. '```' → logprob: -3.934683084487915
    6. ' ' → logprob: -5.059682846069336
    7. '        
' → logprob: -5.559682846069336
    8. ' i' → logprob: -5.684682846069336
    9. '    ' → logprob: -6.184682846069336
    10. '  ' → logprob: -6.184682846069336

Token 82: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1291559934616089
    2. '   ' → logprob: -2.3791561126708984
    3. 'i' (adapté à ' i') → logprob: -3.7541561126708984
    4. ' i' → logprob: -5.629156112670898
    5. '	i' → logprob: -8.004156112670898
    6. '	' → logprob: -8.254156112670898
    7. '    ' → logprob: -8.504156112670898
    8. '  ' → logprob: -8.754156112670898
    9. '      ' → logprob: -9.254156112670898
    10. '-' → logprob: -9.504156112670898

Token 83: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.45735102891921997
    2. '-' → logprob: -1.0823509693145752
    3. ' -=' → logprob: -3.582350969314575
    4. '=' → logprob: -7.832351207733154
    5. ' -' → logprob: -10.832350730895996
    6. ' ' → logprob: -12.207350730895996
    7. '+=' → logprob: -12.707350730895996
    8. ')' → logprob: -12.832350730895996
    9. '   ' → logprob: -13.457350730895996
    10. '```' → logprob: -13.707350730895996

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.250380516052246
    4. '```' → logprob: -16.125381469726562
    5. '<|end|>' → logprob: -16.250381469726562
    6. '  ' → logprob: -17.812881469726562
    7. ' ' → logprob: -18.062881469726562
    8. '    ' → logprob: -18.187881469726562
    9. '	' → logprob: -18.437881469726562
    10. '１' → logprob: -18.437881469726562

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.000009536743164
    4. '<|end|>' → logprob: -18.000009536743164
    5. '   ' → logprob: -18.312509536743164
    6. '  ' → logprob: -18.750009536743164
    7. '۱' → logprob: -19.000009536743164
    8. '１' → logprob: -19.312509536743164
    9. '0' → logprob: -19.500009536743164
    10. '2' → logprob: -19.562509536743164

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21100103855133057
    2. '<|end|>' → logprob: -2.211000919342041
    3. '
' → logprob: -3.336000919342041
    4. '\n' → logprob: -4.461000919342041
    5. '    
' → logprob: -4.586000919342041
    6. 'if' → logprob: -5.336000919342041
    7. '```' → logprob: -5.336000919342041
    8. 'else' → logprob: -5.711000919342041
    9. '  
' → logprob: -5.711000919342041
    10. ' if' → logprob: -6.336000919342041

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.092563696205616
    2. 'if' → logprob: -2.4675636291503906
    3. ' if' → logprob: -6.217563629150391
    4. '    
' → logprob: -7.217563629150391
    5. '
' → logprob: -8.46756362915039
    6. 'else' → logprob: -8.59256362915039
    7. '```' → logprob: -8.84256362915039
    8. '  ' → logprob: -9.84256362915039
    9. '  
' → logprob: -9.84256362915039
    10. ' ' → logprob: -10.09256362915039

Token 88: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04500177130103111
    2. '   ' → logprob: -3.170001745223999
    3. ' if' → logprob: -6.670001983642578
    4. '    
' → logprob: -7.920001983642578
    5. 'else' → logprob: -8.420001983642578
    6. 'i' → logprob: -9.795001983642578
    7. '```' → logprob: -9.920001983642578
    8. '
' → logprob: -11.795001983642578
    9. '  
' → logprob: -11.795001983642578
    10. ' ' → logprob: -12.295001983642578

Token 89: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.014675801619887352
    2. 's' → logprob: -4.639675617218018
    3. ' not' → logprob: -5.389675617218018
    4. ' ' → logprob: -8.639676094055176
    5. 'not' → logprob: -8.889676094055176
    6. ' len' → logprob: -11.514676094055176
    7. '   ' → logprob: -12.764676094055176
    8. ' ' → logprob: -13.014676094055176
    9. ' a' → logprob: -13.139676094055176
    10. '  ' → logprob: -13.452176094055176

Token 90: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6955658197402954
    2. ' ==' → logprob: -0.6955658197402954
    3. ' !=' → logprob: -6.820565700531006
    4. '!=' → logprob: -6.820565700531006
    5. '=' → logprob: -8.820566177368164
    6. '=="' → logprob: -10.070566177368164
    7. ' ' → logprob: -10.570566177368164
    8. ' =' → logprob: -11.570566177368164
    9. ' =="' → logprob: -12.945566177368164
    10. ' ' → logprob: -13.195566177368164

Token 91: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23786047101020813
    2. ' "' → logprob: -1.9878604412078857
    3. '"N' → logprob: -2.6128604412078857
    4. ''' → logprob: -6.987860679626465
    5. ' '' → logprob: -8.862860679626465
    6. ' ' → logprob: -9.487860679626465
    7. ''N' → logprob: -9.737860679626465
    8. '"I' → logprob: -9.862860679626465
    9. '"O' → logprob: -10.237860679626465
    10. '"No' → logprob: -10.487860679626465

Token 92: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0021427664905786514
    2. 'Y' → logprob: -6.627142906188965
    3. '"N' → logprob: -7.252142906188965
    4. '"' → logprob: -9.377142906188965
    5. ''N' → logprob: -11.627142906188965
    6. ' N' → logprob: -11.752142906188965
    7. '	N' → logprob: -13.377142906188965
    8. '“N' → logprob: -14.627142906188965
    9. 'Н' → logprob: -14.689642906188965
    10. 'Ｎ' → logprob: -14.877142906188965

Token 93: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038394998759031296
    2. ':
' → logprob: -3.2883949279785156
    3. '":' → logprob: -8.913394927978516
    4. '):' → logprob: -9.413394927978516
    5. '):
' → logprob: -9.913394927978516
    6. ' :' → logprob: -10.288394927978516
    7. ')' → logprob: -11.038394927978516
    8. ':
' → logprob: -11.163394927978516
    9. '   ' → logprob: -11.913394927978516
    10. ' :
' → logprob: -12.038394927978516

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016511372523382306
    2. '   ' → logprob: -6.501651287078857
    3. 'break' → logprob: -9.8766508102417
    4. ' break' → logprob: -10.1266508102417
    5. '```' → logprob: -10.8766508102417
    6. '           ' → logprob: -11.3766508102417
    7. 'print' → logprob: -11.8766508102417
    8. '	break' → logprob: -12.0016508102417
    9. '      ' → logprob: -12.8766508102417
    10. '        
' → logprob: -13.3766508102417

Token 95: ' print' (ID: 2123)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5885467529296875
    2. 'print' (adapté à ' print') → logprob: -0.8385467529296875
    3. ' break' → logprob: -5.2135467529296875
    4. '   ' → logprob: -5.2135467529296875
    5. '       ' → logprob: -7.2135467529296875
    6. ' print' → logprob: -7.3385467529296875
    7. '	break' → logprob: -8.963546752929688
    8. '```' → logprob: -9.713546752929688
    9. 'br' → logprob: -10.338546752929688
    10. 'b' → logprob: -10.838546752929688

Token 96: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3925597369670868
    2. '-' → logprob: -1.1425597667694092
    3. '(' → logprob: -5.26755952835083
    4. '("-' → logprob: -8.267560005187988
    5. '0' → logprob: -9.017560005187988
    6. ' -' → logprob: -9.642560005187988
    7. '```' → logprob: -10.142560005187988
    8. '('-' → logprob: -11.767560005187988
    9. ' ' → logprob: -12.142560005187988
    10. '("' → logprob: -12.392560005187988

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -15.937501907348633
    4. '１' → logprob: -16.125001907348633
    5. '```' → logprob: -16.437501907348633
    6. '``' → logprob: -16.937501907348633
    7. '
' → logprob: -17.500001907348633
    8. '3' → logprob: -17.687501907348633
    9. '   ' → logprob: -18.187501907348633
    10. '{' → logprob: -18.250001907348633

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2525193393230438
    2. ')
' → logprob: -1.5025193691253662
    3. ')
' → logprob: -7.627519130706787
    4. '   ' → logprob: -10.252519607543945
    5. '       ' → logprob: -10.377519607543945
    6. ')`
' → logprob: -11.252519607543945
    7. ' )' → logprob: -11.627519607543945
    8. ' )
' → logprob: -12.502519607543945
    9. ')return' → logprob: -12.627519607543945
    10. ')`' → logprob: -13.877519607543945

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15522506833076477
    2. '   ' → logprob: -2.0302250385284424
    3. '
' → logprob: -5.4052252769470215
    4. '    
' → logprob: -5.6552252769470215
    5. '        
' → logprob: -6.0302252769470215
    6. ' ' → logprob: -7.9052252769470215
    7. '  
' → logprob: -8.530224800109863
    8. '<|end|>' → logprob: -8.655224800109863
    9. ')' → logprob: -8.780224800109863
    10. '     ' → logprob: -8.905224800109863

Token 100: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4964902698993683
    2. ' break' → logprob: -0.9964902400970459
    3. '   ' → logprob: -4.121490478515625
    4. '	break' → logprob: -5.621490478515625
    5. '       ' → logprob: -6.746490478515625
    6. '
' → logprob: -7.496490478515625
    7. ' ' → logprob: -8.621490478515625
    8. '    
' → logprob: -8.871490478515625
    9. 'exit' (adapté à ' exit') → logprob: -9.246490478515625
    10. '```' → logprob: -10.496490478515625

Token 101: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010496005415916443
    2. '(' → logprob: -7.001049518585205
    3. '()
' → logprob: -9.001049995422363
    4. '()`' → logprob: -12.126049995422363
    5. '()\' → logprob: -12.626049995422363
    6. '();' → logprob: -13.501049995422363
    7. '()

' → logprob: -13.751049995422363
    8. '())' → logprob: -13.876049995422363
    9. ' ()' → logprob: -14.376049995422363
    10. '()
' → logprob: -14.751049995422363

Token 102: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38429349660873413
    2. '   ' → logprob: -1.634293556213379
    3. 'print' → logprob: -2.134293556213379
    4. ' if' → logprob: -5.509293556213379
    5. 'for' → logprob: -6.884293556213379
    6. '    
' → logprob: -8.509293556213379
    7. '```' → logprob: -9.259293556213379
    8. 'br' → logprob: -9.634293556213379
    9. ')' → logprob: -10.009293556213379
    10. '
' → logprob: -11.134293556213379

Token 103: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18453463912010193
    2. 'if' (adapté à ' if') → logprob: -1.8095346689224243
    3. ' if' → logprob: -5.934534549713135
    4. 'print' → logprob: -6.184534549713135
    5. '    
' → logprob: -10.184535026550293
    6. '	if' → logprob: -12.059535026550293
    7. ')' → logprob: -12.184535026550293
    8. '    ' → logprob: -12.684535026550293
    9. 'for' → logprob: -12.809535026550293
    10. '```' → logprob: -13.184535026550293

Token 104: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.41749757528305054
    2. 'len' → logprob: -1.6674976348876953
    3. ' not' → logprob: -1.9174976348876953
    4. 'not' → logprob: -5.292497634887695
    5. ' b' → logprob: -8.042497634887695
    6. ' ' → logprob: -9.042497634887695
    7. 'b' → logprob: -10.292497634887695
    8. ' a' → logprob: -10.417497634887695
    9. '(len' → logprob: -10.417497634887695
    10. '   ' → logprob: -10.792497634887695

Token 105: '(ar' (ID: 77717)
  Prédit: '(ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ar' → logprob: -0.00013929695705883205
    2. 'ar' → logprob: -9.625139236450195
    3. '(br' → logprob: -10.000139236450195
    4. '(' → logprob: -10.625139236450195
    5. '$ar' → logprob: -13.750139236450195
    6. ' ar' → logprob: -13.875139236450195
    7. '(a' → logprob: -13.875139236450195
    8. '	ar' → logprob: -14.875139236450195
    9. ' (' → logprob: -16.125139236450195
    10. 'br' → logprob: -16.875139236450195

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07948033511638641
    2. '==' → logprob: -2.9544804096221924
    3. ')==' → logprob: -3.8294804096221924
    4. ' ==' → logprob: -6.079480171203613
    5. '()' → logprob: -8.579480171203613
    6. '()==' → logprob: -9.454480171203613
    7. ' )' → logprob: -11.579480171203613
    8. ']==' → logprob: -12.329480171203613
    9. '=' → logprob: -13.079480171203613
    10. ' ' → logprob: -14.204480171203613

Token 107: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20195071399211884
    2. ' ==' → logprob: -1.7019506692886353
    3. '()==' → logprob: -8.826951026916504
    4. ')' → logprob: -8.951951026916504
    5. '=' → logprob: -9.201951026916504
    6. ')==' → logprob: -9.576951026916504
    7. '0' → logprob: -10.201951026916504
    8. '()' → logprob: -10.951951026916504
    9. ' ' → logprob: -11.201951026916504
    10. '<|end|>' → logprob: -11.951951026916504

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036004253197461367
    2. ' ' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.253600120544434
    4. '  ' → logprob: -16.37860107421875
    5. ' ' → logprob: -16.75360107421875
    6. '۰' → logprob: -18.12860107421875
    7. '	' → logprob: -18.25360107421875
    8. '=' → logprob: -18.37860107421875
    9. '０' → logprob: -18.87860107421875
    10. '    ' → logprob: -19.00360107421875

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '  ' → logprob: -17.000709533691406
    4. '   ' → logprob: -17.125709533691406
    5. '1' → logprob: -18.625709533691406
    6. '۰' → logprob: -19.000709533691406
    7. '    ' → logprob: -19.250709533691406
    8. '０' → logprob: -19.500709533691406
    9. ' ' → logprob: -19.750709533691406
    10. '00' → logprob: -19.750709533691406

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035144297871738672
    2. ':
' → logprob: -6.003514289855957
    3. '       ' → logprob: -7.128514289855957
    4. '   ' → logprob: -8.378514289855957
    5. '	break' → logprob: -13.628514289855957
    6. ' :' → logprob: -14.003514289855957
    7. ' ' → logprob: -14.003514289855957
    8. ',' → logprob: -14.253514289855957
    9. '=' → logprob: -14.628514289855957
    10. ':
' → logprob: -14.753514289855957

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1797853708267212
    2. '       ' → logprob: -1.8047853708267212
    3. '           ' → logprob: -11.92978572845459
    4. ' ' → logprob: -12.05478572845459
    5. '    ' → logprob: -12.30478572845459
    6. '	break' → logprob: -12.42978572845459
    7. '```' → logprob: -12.80478572845459
    8. '     ' → logprob: -12.92978572845459
    9. '
' → logprob: -12.92978572845459
    10. ' break' → logprob: -13.42978572845459

Token 112: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.09041723608970642
    2. ' break' → logprob: -2.8404171466827393
    3. '   ' → logprob: -3.5904171466827393
    4. '       ' → logprob: -8.84041690826416
    5. 'br' → logprob: -8.96541690826416
    6. 'for' → logprob: -9.46541690826416
    7. 'print' → logprob: -10.34041690826416
    8. ' ' → logprob: -10.46541690826416
    9. '	break' → logprob: -10.71541690826416
    10. ' for' → logprob: -11.21541690826416

Token 113: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19542016088962555
    2. 'br' → logprob: -1.9454201459884644
    3. 'for' → logprob: -3.820420265197754
    4. 'ar' → logprob: -4.570420265197754
    5. '
' → logprob: -7.070420265197754
    6. '    
' → logprob: -7.695420265197754
    7. ')' → logprob: -8.570420265197754
    8. ')
' → logprob: -8.570420265197754
    9. '```' → logprob: -8.570420265197754
    10. '\n' → logprob: -8.820420265197754

Token 114: 'i' (ID: 72)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.0653823614120483
    2. 'for' → logprob: -1.0653823614120483
    3. 'print' → logprob: -1.1903823614120483
    4. 'ar' → logprob: -5.315382480621338
    5. '    
' → logprob: -7.815382480621338
    6. ')' → logprob: -8.06538200378418
    7. '
' → logprob: -8.06538200378418
    8. '```' → logprob: -8.06538200378418
    9. ')
' → logprob: -9.06538200378418
    10. ' for' → logprob: -9.94038200378418

Token 115: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.289912223815918
    2. '+' → logprob: -1.414912223815918
    3. '=' → logprob: -1.414912223815918
    4. ' +=' → logprob: -1.789912223815918
    5. 'nd' → logprob: -3.664912223815918
    6. ' =' → logprob: -3.789912223815918
    7. ' ' → logprob: -4.914912223815918
    8. 'n' → logprob: -5.289912223815918
    9. ' +' → logprob: -5.539912223815918
    10. 'f' → logprob: -6.664912223815918

Token 116: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16132573783397675
    2. 'a' → logprob: -2.286325693130493
    3. 'len' → logprob: -3.411325693130493
    4. ' ' → logprob: -4.661325931549072
    5. ' a' → logprob: -5.911325931549072
    6. ' len' → logprob: -6.661325931549072
    7. 'b' → logprob: -7.536325931549072
    8. '1' → logprob: -8.536325454711914
    9. ' b' → logprob: -10.161325454711914
    10. '10' → logprob: -10.286325454711914

Token 117: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014166207052767277
    2. ' -' → logprob: -4.264166355133057
    3. '-
' → logprob: -13.139165878295898
    4. '-\' → logprob: -15.639165878295898
    5. '-=' → logprob: -16.1391658782959
    6. '<|end|>' → logprob: -16.1391658782959
    7. ' -
' → logprob: -16.2641658782959
    8. ' -=' → logprob: -16.6391658782959
    9. '\n' → logprob: -16.8891658782959
    10. ' ' → logprob: -17.0141658782959

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002522745868191123
    2. '2' → logprob: -6.002522945404053
    3. ' ' → logprob: -10.002522468566895
    4. 'len' → logprob: -14.377522468566895
    5. 'a' → logprob: -15.190022468566895
    6. '-' → logprob: -15.440022468566895
    7. '0' → logprob: -16.19002342224121
    8. ' -' → logprob: -16.31502342224121
    9. '   ' → logprob: -16.44002342224121
    10. '```' → logprob: -16.50252342224121

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011742709903046489
    2. '2' → logprob: -6.751174449920654
    3. 'len' → logprob: -13.126173973083496
    4. ' ' → logprob: -14.126173973083496
    5. '0' → logprob: -14.938673973083496
    6. '-' → logprob: -15.251173973083496
    7. '```' → logprob: -15.751173973083496
    8. '`' → logprob: -16.813674926757812
    9. '   ' → logprob: -16.876174926757812
    10. '3' → logprob: -16.938674926757812

Token 120: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.179369255900383
    2. 'print' → logprob: -2.0543692111968994
    3. ' while' → logprob: -3.6793692111968994
    4. '
' → logprob: -5.4293694496154785
    5. '\n' → logprob: -6.0543694496154785
    6. '<|end|>' → logprob: -6.6793694496154785
    7. ' 
' → logprob: -7.9293694496154785
    8. '' → logprob: -8.30436897277832
    9. ',' → logprob: -8.42936897277832
    10. 'br' → logprob: -8.55436897277832

Token 121: 'while' (ID: 7032)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5706719756126404
    2. 'while' → logprob: -0.9456719756126404
    3. '
' → logprob: -3.945672035217285
    4. '<|end|>' → logprob: -4.695672035217285
    5. '```' → logprob: -5.320672035217285
    6. '\n' → logprob: -5.445672035217285
    7. '\' → logprob: -6.195672035217285
    8. ' while' → logprob: -6.320672035217285
    9. 'br' → logprob: -6.445672035217285
    10. ',' → logprob: -7.445672035217285

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04860304668545723
    2. ' i' → logprob: -3.048603057861328
    3. '   ' → logprob: -11.548603057861328
    4. 'True' → logprob: -13.423603057861328
    5. '	i' → logprob: -13.798603057861328
    6. ' ' → logprob: -14.048603057861328
    7. '(i' → logprob: -14.048603057861328
    8. '0' → logprob: -14.048603057861328
    9. '  ' → logprob: -14.423603057861328
    10. 'br' → logprob: -15.673603057861328

Token 123: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0008324974915012717
    2. ' >=' → logprob: -7.125832557678223
    3. '>' → logprob: -10.500832557678223
    4. ']>=' → logprob: -15.625832557678223
    5. ')>=' → logprob: -15.750832557678223
    6. '≥' → logprob: -16.625831604003906
    7. ' ' → logprob: -17.375831604003906
    8. ' >' → logprob: -17.875831604003906
    9. '==' → logprob: -18.000831604003906
    10. '   ' → logprob: -18.375831604003906

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02326621301472187
    2. ' ' → logprob: -3.773266315460205
    3. '1' → logprob: -11.148265838623047
    4. '   ' → logprob: -12.523265838623047
    5. '  ' → logprob: -14.773265838623047
    6. '=' → logprob: -15.148265838623047
    7. ' ' → logprob: -15.148265838623047
    8. '2' → logprob: -15.710765838623047
    9. '```' → logprob: -15.835765838623047
    10. '       ' → logprob: -15.960765838623047

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011892797192558646
    2. ' ' → logprob: -6.751189231872559
    3. '1' → logprob: -11.126189231872559
    4. '   ' → logprob: -12.876189231872559
    5. '  ' → logprob: -15.688689231872559
    6. '```' → logprob: -15.688689231872559
    7. 'a' → logprob: -15.751189231872559
    8. '2' → logprob: -16.001190185546875
    9. '=' → logprob: -16.063690185546875
    10. '
' → logprob: -16.251190185546875

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38754767179489136
    2. ':
' → logprob: -1.1375477313995361
    3. '   ' → logprob: -8.012547492980957
    4. '):
' → logprob: -8.387547492980957
    5. '```' → logprob: -10.762547492980957
    6. ',' → logprob: -10.887547492980957
    7. ':

' → logprob: -10.887547492980957
    8. '):' → logprob: -11.262547492980957
    9. '<|end|>' → logprob: -11.512547492980957
    10. '**' → logprob: -11.762547492980957

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018568944185972214
    2. ' print' → logprob: -4.018568992614746
    3. 'print' → logprob: -7.893568992614746
    4. '	print' → logprob: -10.768568992614746
    5. '```' → logprob: -11.518568992614746
    6. '       ' → logprob: -12.518568992614746
    7. '    
' → logprob: -12.893568992614746
    8. '    ' → logprob: -13.143568992614746
    9. '
' → logprob: -13.518568992614746
    10. '  ' → logprob: -14.268568992614746

Token 128: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060440823435783386
    2. ' print' → logprob: -3.1854407787323
    3. 'print' (adapté à ' print') → logprob: -4.060441017150879
    4. '```' → logprob: -10.310441017150879
    5. '	print' → logprob: -11.435441017150879
    6. '       ' → logprob: -13.560441017150879
    7. '``' → logprob: -14.185441017150879
    8. '    ' → logprob: -14.435441017150879
    9. '    
' → logprob: -14.810441017150879
    10. ' ' → logprob: -14.810441017150879

Token 129: '(br' (ID: 65786)
  Prédit: '(br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(br' → logprob: -0.10073613375425339
    2. 'br' → logprob: -2.350736141204834
    3. '(' → logprob: -8.225735664367676
    4. ' br' → logprob: -8.350735664367676
    5. '	br' → logprob: -11.100735664367676
    6. '("' → logprob: -12.100735664367676
    7. ' (' → logprob: -13.850735664367676
    8. '   ' → logprob: -14.100735664367676
    9. '_br' → logprob: -14.225735664367676
    10. 'BR' → logprob: -14.850735664367676

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015070053050294518
    2. '[' → logprob: -6.501506805419922
    3. ')' → logprob: -12.876506805419922
    4. ' [' → logprob: -14.251506805419922
    5. '[
' → logprob: -14.876506805419922
    6. '[a' → logprob: -15.001506805419922
    7. '   ' → logprob: -15.751506805419922
    8. '[b' → logprob: -15.876506805419922
    9. '[-' → logprob: -16.376506805419922
    10. '[u' → logprob: -16.626506805419922

Token 131: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -13.000003814697266
    3. '))' → logprob: -13.875003814697266
    4. ' )' → logprob: -14.625003814697266
    5. ')`' → logprob: -15.000003814697266
    6. ')}' → logprob: -17.500003814697266
    7. '),' → logprob: -17.750003814697266
    8. '")' → logprob: -18.375003814697266
    9. ')")' → logprob: -18.625003814697266
    10. '})' → logprob: -19.000003814697266

Token 132: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5249757170677185
    2. '   ' → logprob: -1.0249757766723633
    3. ' i' → logprob: -3.1499757766723633
    4. '	i' → logprob: -5.649975776672363
    5. ',i' → logprob: -7.024975776672363
    6. '
' → logprob: -7.399975776672363
    7. '    
' → logprob: -7.649975776672363
    8. '\n' → logprob: -7.899975776672363
    9. ')i' → logprob: -8.024975776672363
    10. '[i' → logprob: -9.274975776672363

Token 133: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03874575346708298
    2. ' i' → logprob: -3.288745641708374
    3. '   ' → logprob: -7.538745880126953
    4. '	i' → logprob: -9.413745880126953
    5. '
' → logprob: -9.913745880126953
    6. '\' → logprob: -11.913745880126953
    7. '\n' → logprob: -11.913745880126953
    8. '[i' → logprob: -12.038745880126953
    9. ',i' → logprob: -12.163745880126953
    10. '(i' → logprob: -12.913745880126953

Token 134: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.576806902885437
    2. ' -=' → logprob: -1.076806902885437
    3. '-' → logprob: -2.3268070220947266
    4. '=' → logprob: -12.076807022094727
    5. ' -' → logprob: -12.076807022094727
    6. '   ' → logprob: -12.451807022094727
    7. ')' → logprob: -12.826807022094727
    8. '+=' → logprob: -13.951807022094727
    9. ' ' → logprob: -14.076807022094727
    10. '  ' → logprob: -14.076807022094727

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.00247573852539
    4. '```' → logprob: -18.12747573852539
    5. ' ' → logprob: -18.25247573852539
    6. '0' → logprob: -19.12747573852539
    7. '１' → logprob: -19.87747573852539
    8. '<|end|>' → logprob: -20.25247573852539
    9. '	' → logprob: -20.37747573852539
    10. '۱' → logprob: -20.62747573852539

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.7500057220459
    4. '   ' → logprob: -18.5000057220459
    5. '0' → logprob: -20.2500057220459
    6. '１' → logprob: -21.0000057220459
    7. '' → logprob: -21.1250057220459
    8. '`' → logprob: -21.1875057220459
    9. '<|end|>' → logprob: -21.1875057220459
    10. '۱' → logprob: -21.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 134
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 29.10%
Précision adaptée (1ère position): 32.09%
Précision (top 10): 83.58%
================================================================================
